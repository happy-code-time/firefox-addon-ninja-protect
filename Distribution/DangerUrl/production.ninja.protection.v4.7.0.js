!function(e){var t={};function n(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(r,i,function(t){return e[t]}.bind(null,i));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=133)}([function(e,t,n){var r=n(2),i=n(18),a=n(11),o=n(12),l=n(19),s=function(e,t,n){var u,c,f,d,p=e&s.F,m=e&s.G,h=e&s.S,g=e&s.P,v=e&s.B,y=m?r:h?r[t]||(r[t]={}):(r[t]||{}).prototype,b=m?i:i[t]||(i[t]={}),w=b.prototype||(b.prototype={});for(u in m&&(n=t),n)f=((c=!p&&y&&void 0!==y[u])?y:n)[u],d=v&&c?l(f,r):g&&"function"==typeof f?l(Function.call,f):f,y&&o(y,u,f,e&s.U),b[u]!=f&&a(b,u,d),g&&w[u]!=f&&(w[u]=f)};r.core=i,s.F=1,s.G=2,s.S=4,s.P=8,s.B=16,s.W=32,s.U=64,s.R=128,e.exports=s},function(e,t,n){var r=n(4);e.exports=function(e){if(!r(e))throw TypeError(e+" is not an object!");return e}},function(e,t){var n=e.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=n)},function(e,t){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,t){e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},function(e,t,n){var r=n(47)("wks"),i=n(33),a=n(2).Symbol,o="function"==typeof a;(e.exports=function(e){return r[e]||(r[e]=o&&a[e]||(o?a:i)("Symbol."+e))}).store=r},function(e,t,n){var r=n(21),i=Math.min;e.exports=function(e){return e>0?i(r(e),9007199254740991):0}},function(e,t,n){e.exports=!n(3)((function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a}))},function(e,t,n){var r=n(1),i=n(96),a=n(23),o=Object.defineProperty;t.f=n(7)?Object.defineProperty:function(e,t,n){if(r(e),t=a(t,!0),r(n),i)try{return o(e,t,n)}catch(e){}if("get"in n||"set"in n)throw TypeError("Accessors not supported!");return"value"in n&&(e[t]=n.value),e}},function(e,t,n){var r=n(24);e.exports=function(e){return Object(r(e))}},function(e,t){e.exports=function(e){if("function"!=typeof e)throw TypeError(e+" is not a function!");return e}},function(e,t,n){var r=n(8),i=n(32);e.exports=n(7)?function(e,t,n){return r.f(e,t,i(1,n))}:function(e,t,n){return e[t]=n,e}},function(e,t,n){var r=n(2),i=n(11),a=n(14),o=n(33)("src"),l=n(137),s=(""+l).split("toString");n(18).inspectSource=function(e){return l.call(e)},(e.exports=function(e,t,n,l){var u="function"==typeof n;u&&(a(n,"name")||i(n,"name",t)),e[t]!==n&&(u&&(a(n,o)||i(n,o,e[t]?""+e[t]:s.join(String(t)))),e===r?e[t]=n:l?e[t]?e[t]=n:i(e,t,n):(delete e[t],i(e,t,n)))})(Function.prototype,"toString",(function(){return"function"==typeof this&&this[o]||l.call(this)}))},function(e,t,n){var r=n(0),i=n(3),a=n(24),o=/"/g,l=function(e,t,n,r){var i=String(a(e)),l="<"+t;return""!==n&&(l+=" "+n+'="'+String(r).replace(o,"&quot;")+'"'),l+">"+i+"</"+t+">"};e.exports=function(e,t){var n={};n[e]=t(l),r(r.P+r.F*i((function(){var t=""[e]('"');return t!==t.toLowerCase()||t.split('"').length>3})),"String",n)}},function(e,t){var n={}.hasOwnProperty;e.exports=function(e,t){return n.call(e,t)}},function(e,t,n){var r=n(48),i=n(24);e.exports=function(e){return r(i(e))}},function(e,t,n){var r=n(49),i=n(32),a=n(15),o=n(23),l=n(14),s=n(96),u=Object.getOwnPropertyDescriptor;t.f=n(7)?u:function(e,t){if(e=a(e),t=o(t,!0),s)try{return u(e,t)}catch(e){}if(l(e,t))return i(!r.f.call(e,t),e[t])}},function(e,t,n){var r=n(14),i=n(9),a=n(70)("IE_PROTO"),o=Object.prototype;e.exports=Object.getPrototypeOf||function(e){return e=i(e),r(e,a)?e[a]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?o:null}},function(e,t){var n=e.exports={version:"2.6.11"};"number"==typeof __e&&(__e=n)},function(e,t,n){var r=n(10);e.exports=function(e,t,n){if(r(e),void 0===t)return e;switch(n){case 1:return function(n){return e.call(t,n)};case 2:return function(n,r){return e.call(t,n,r)};case 3:return function(n,r,i){return e.call(t,n,r,i)}}return function(){return e.apply(t,arguments)}}},function(e,t){var n={}.toString;e.exports=function(e){return n.call(e).slice(8,-1)}},function(e,t){var n=Math.ceil,r=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?r:n)(e)}},function(e,t,n){"use strict";var r=n(3);e.exports=function(e,t){return!!e&&r((function(){t?e.call(null,(function(){}),1):e.call(null)}))}},function(e,t,n){var r=n(4);e.exports=function(e,t){if(!r(e))return e;var n,i;if(t&&"function"==typeof(n=e.toString)&&!r(i=n.call(e)))return i;if("function"==typeof(n=e.valueOf)&&!r(i=n.call(e)))return i;if(!t&&"function"==typeof(n=e.toString)&&!r(i=n.call(e)))return i;throw TypeError("Can't convert object to primitive value")}},function(e,t){e.exports=function(e){if(null==e)throw TypeError("Can't call method on  "+e);return e}},function(e,t,n){var r=n(0),i=n(18),a=n(3);e.exports=function(e,t){var n=(i.Object||{})[e]||Object[e],o={};o[e]=t(n),r(r.S+r.F*a((function(){n(1)})),"Object",o)}},function(e,t,n){var r=n(19),i=n(48),a=n(9),o=n(6),l=n(86);e.exports=function(e,t){var n=1==e,s=2==e,u=3==e,c=4==e,f=6==e,d=5==e||f,p=t||l;return function(t,l,m){for(var h,g,v=a(t),y=i(v),b=r(l,m,3),w=o(y.length),k=0,_=n?p(t,w):s?p(t,0):void 0;w>k;k++)if((d||k in y)&&(g=b(h=y[k],k,v),e))if(n)_[k]=g;else if(g)switch(e){case 3:return!0;case 5:return h;case 6:return k;case 2:_.push(h)}else if(c)return!1;return f?-1:u||c?c:_}}},function(e,t,n){"use strict";if(n(7)){var r=n(29),i=n(2),a=n(3),o=n(0),l=n(63),s=n(94),u=n(19),c=n(39),f=n(32),d=n(11),p=n(41),m=n(21),h=n(6),g=n(124),v=n(35),y=n(23),b=n(14),w=n(44),k=n(4),_=n(9),E=n(83),x=n(36),z=n(17),S=n(37).f,T=n(85),N=n(33),P=n(5),j=n(26),C=n(53),I=n(51),M=n(88),O=n(46),D=n(58),L=n(38),A=n(87),F=n(113),B=n(8),R=n(16),W=B.f,U=R.f,H=i.RangeError,V=i.TypeError,K=i.Uint8Array,$=Array.prototype,Q=s.ArrayBuffer,q=s.DataView,G=j(0),J=j(2),Z=j(3),Y=j(4),X=j(5),ee=j(6),te=C(!0),ne=C(!1),re=M.values,ie=M.keys,ae=M.entries,oe=$.lastIndexOf,le=$.reduce,se=$.reduceRight,ue=$.join,ce=$.sort,fe=$.slice,de=$.toString,pe=$.toLocaleString,me=P("iterator"),he=P("toStringTag"),ge=N("typed_constructor"),ve=N("def_constructor"),ye=l.CONSTR,be=l.TYPED,we=l.VIEW,ke=j(1,(function(e,t){return Se(I(e,e[ve]),t)})),_e=a((function(){return 1===new K(new Uint16Array([1]).buffer)[0]})),Ee=!!K&&!!K.prototype.set&&a((function(){new K(1).set({})})),xe=function(e,t){var n=m(e);if(n<0||n%t)throw H("Wrong offset!");return n},ze=function(e){if(k(e)&&be in e)return e;throw V(e+" is not a typed array!")},Se=function(e,t){if(!k(e)||!(ge in e))throw V("It is not a typed array constructor!");return new e(t)},Te=function(e,t){return Ne(I(e,e[ve]),t)},Ne=function(e,t){for(var n=0,r=t.length,i=Se(e,r);r>n;)i[n]=t[n++];return i},Pe=function(e,t,n){W(e,t,{get:function(){return this._d[n]}})},je=function(e){var t,n,r,i,a,o,l=_(e),s=arguments.length,c=s>1?arguments[1]:void 0,f=void 0!==c,d=T(l);if(null!=d&&!E(d)){for(o=d.call(l),r=[],t=0;!(a=o.next()).done;t++)r.push(a.value);l=r}for(f&&s>2&&(c=u(c,arguments[2],2)),t=0,n=h(l.length),i=Se(this,n);n>t;t++)i[t]=f?c(l[t],t):l[t];return i},Ce=function(){for(var e=0,t=arguments.length,n=Se(this,t);t>e;)n[e]=arguments[e++];return n},Ie=!!K&&a((function(){pe.call(new K(1))})),Me=function(){return pe.apply(Ie?fe.call(ze(this)):ze(this),arguments)},Oe={copyWithin:function(e,t){return F.call(ze(this),e,t,arguments.length>2?arguments[2]:void 0)},every:function(e){return Y(ze(this),e,arguments.length>1?arguments[1]:void 0)},fill:function(e){return A.apply(ze(this),arguments)},filter:function(e){return Te(this,J(ze(this),e,arguments.length>1?arguments[1]:void 0))},find:function(e){return X(ze(this),e,arguments.length>1?arguments[1]:void 0)},findIndex:function(e){return ee(ze(this),e,arguments.length>1?arguments[1]:void 0)},forEach:function(e){G(ze(this),e,arguments.length>1?arguments[1]:void 0)},indexOf:function(e){return ne(ze(this),e,arguments.length>1?arguments[1]:void 0)},includes:function(e){return te(ze(this),e,arguments.length>1?arguments[1]:void 0)},join:function(e){return ue.apply(ze(this),arguments)},lastIndexOf:function(e){return oe.apply(ze(this),arguments)},map:function(e){return ke(ze(this),e,arguments.length>1?arguments[1]:void 0)},reduce:function(e){return le.apply(ze(this),arguments)},reduceRight:function(e){return se.apply(ze(this),arguments)},reverse:function(){for(var e,t=ze(this).length,n=Math.floor(t/2),r=0;r<n;)e=this[r],this[r++]=this[--t],this[t]=e;return this},some:function(e){return Z(ze(this),e,arguments.length>1?arguments[1]:void 0)},sort:function(e){return ce.call(ze(this),e)},subarray:function(e,t){var n=ze(this),r=n.length,i=v(e,r);return new(I(n,n[ve]))(n.buffer,n.byteOffset+i*n.BYTES_PER_ELEMENT,h((void 0===t?r:v(t,r))-i))}},De=function(e,t){return Te(this,fe.call(ze(this),e,t))},Le=function(e){ze(this);var t=xe(arguments[1],1),n=this.length,r=_(e),i=h(r.length),a=0;if(i+t>n)throw H("Wrong length!");for(;a<i;)this[t+a]=r[a++]},Ae={entries:function(){return ae.call(ze(this))},keys:function(){return ie.call(ze(this))},values:function(){return re.call(ze(this))}},Fe=function(e,t){return k(e)&&e[be]&&"symbol"!=typeof t&&t in e&&String(+t)==String(t)},Be=function(e,t){return Fe(e,t=y(t,!0))?f(2,e[t]):U(e,t)},Re=function(e,t,n){return!(Fe(e,t=y(t,!0))&&k(n)&&b(n,"value"))||b(n,"get")||b(n,"set")||n.configurable||b(n,"writable")&&!n.writable||b(n,"enumerable")&&!n.enumerable?W(e,t,n):(e[t]=n.value,e)};ye||(R.f=Be,B.f=Re),o(o.S+o.F*!ye,"Object",{getOwnPropertyDescriptor:Be,defineProperty:Re}),a((function(){de.call({})}))&&(de=pe=function(){return ue.call(this)});var We=p({},Oe);p(We,Ae),d(We,me,Ae.values),p(We,{slice:De,set:Le,constructor:function(){},toString:de,toLocaleString:Me}),Pe(We,"buffer","b"),Pe(We,"byteOffset","o"),Pe(We,"byteLength","l"),Pe(We,"length","e"),W(We,he,{get:function(){return this[be]}}),e.exports=function(e,t,n,s){var u=e+((s=!!s)?"Clamped":"")+"Array",f="get"+e,p="set"+e,m=i[u],v=m||{},y=m&&z(m),b=!m||!l.ABV,_={},E=m&&m.prototype,T=function(e,n){W(e,n,{get:function(){return function(e,n){var r=e._d;return r.v[f](n*t+r.o,_e)}(this,n)},set:function(e){return function(e,n,r){var i=e._d;s&&(r=(r=Math.round(r))<0?0:r>255?255:255&r),i.v[p](n*t+i.o,r,_e)}(this,n,e)},enumerable:!0})};b?(m=n((function(e,n,r,i){c(e,m,u,"_d");var a,o,l,s,f=0,p=0;if(k(n)){if(!(n instanceof Q||"ArrayBuffer"==(s=w(n))||"SharedArrayBuffer"==s))return be in n?Ne(m,n):je.call(m,n);a=n,p=xe(r,t);var v=n.byteLength;if(void 0===i){if(v%t)throw H("Wrong length!");if((o=v-p)<0)throw H("Wrong length!")}else if((o=h(i)*t)+p>v)throw H("Wrong length!");l=o/t}else l=g(n),a=new Q(o=l*t);for(d(e,"_d",{b:a,o:p,l:o,e:l,v:new q(a)});f<l;)T(e,f++)})),E=m.prototype=x(We),d(E,"constructor",m)):a((function(){m(1)}))&&a((function(){new m(-1)}))&&D((function(e){new m,new m(null),new m(1.5),new m(e)}),!0)||(m=n((function(e,n,r,i){var a;return c(e,m,u),k(n)?n instanceof Q||"ArrayBuffer"==(a=w(n))||"SharedArrayBuffer"==a?void 0!==i?new v(n,xe(r,t),i):void 0!==r?new v(n,xe(r,t)):new v(n):be in n?Ne(m,n):je.call(m,n):new v(g(n))})),G(y!==Function.prototype?S(v).concat(S(y)):S(v),(function(e){e in m||d(m,e,v[e])})),m.prototype=E,r||(E.constructor=m));var N=E[me],P=!!N&&("values"==N.name||null==N.name),j=Ae.values;d(m,ge,!0),d(E,be,u),d(E,we,!0),d(E,ve,m),(s?new m(1)[he]==u:he in E)||W(E,he,{get:function(){return u}}),_[u]=m,o(o.G+o.W+o.F*(m!=v),_),o(o.S,u,{BYTES_PER_ELEMENT:t}),o(o.S+o.F*a((function(){v.of.call(m,1)})),u,{from:je,of:Ce}),"BYTES_PER_ELEMENT"in E||d(E,"BYTES_PER_ELEMENT",t),o(o.P,u,Oe),L(u),o(o.P+o.F*Ee,u,{set:Le}),o(o.P+o.F*!P,u,Ae),r||E.toString==de||(E.toString=de),o(o.P+o.F*a((function(){new m(1).slice()})),u,{slice:De}),o(o.P+o.F*(a((function(){return[1,2].toLocaleString()!=new m([1,2]).toLocaleString()}))||!a((function(){E.toLocaleString.call([1,2])}))),u,{toLocaleString:Me}),O[u]=P?N:j,r||P||d(E,me,j)}}else e.exports=function(){}},function(e,t,n){var r=n(119),i=n(0),a=n(47)("metadata"),o=a.store||(a.store=new(n(122))),l=function(e,t,n){var i=o.get(e);if(!i){if(!n)return;o.set(e,i=new r)}var a=i.get(t);if(!a){if(!n)return;i.set(t,a=new r)}return a};e.exports={store:o,map:l,has:function(e,t,n){var r=l(t,n,!1);return void 0!==r&&r.has(e)},get:function(e,t,n){var r=l(t,n,!1);return void 0===r?void 0:r.get(e)},set:function(e,t,n,r){l(n,r,!0).set(e,t)},keys:function(e,t){var n=l(e,t,!1),r=[];return n&&n.forEach((function(e,t){r.push(t)})),r},key:function(e){return void 0===e||"symbol"==typeof e?e:String(e)},exp:function(e){i(i.S,"Reflect",e)}}},function(e,t){e.exports=!1},function(e,t,n){var r=n(33)("meta"),i=n(4),a=n(14),o=n(8).f,l=0,s=Object.isExtensible||function(){return!0},u=!n(3)((function(){return s(Object.preventExtensions({}))})),c=function(e){o(e,r,{value:{i:"O"+ ++l,w:{}}})},f=e.exports={KEY:r,NEED:!1,fastKey:function(e,t){if(!i(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!a(e,r)){if(!s(e))return"F";if(!t)return"E";c(e)}return e[r].i},getWeak:function(e,t){if(!a(e,r)){if(!s(e))return!0;if(!t)return!1;c(e)}return e[r].w},onFreeze:function(e){return u&&f.NEED&&s(e)&&!a(e,r)&&c(e),e}}},function(e,t,n){var r=n(5)("unscopables"),i=Array.prototype;null==i[r]&&n(11)(i,r,{}),e.exports=function(e){i[r][e]=!0}},function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},function(e,t){var n=0,r=Math.random();e.exports=function(e){return"Symbol(".concat(void 0===e?"":e,")_",(++n+r).toString(36))}},function(e,t,n){var r=n(98),i=n(71);e.exports=Object.keys||function(e){return r(e,i)}},function(e,t,n){var r=n(21),i=Math.max,a=Math.min;e.exports=function(e,t){return(e=r(e))<0?i(e+t,0):a(e,t)}},function(e,t,n){var r=n(1),i=n(99),a=n(71),o=n(70)("IE_PROTO"),l=function(){},s=function(){var e,t=n(68)("iframe"),r=a.length;for(t.style.display="none",n(72).appendChild(t),t.src="javascript:",(e=t.contentWindow.document).open(),e.write("<script>document.F=Object<\/script>"),e.close(),s=e.F;r--;)delete s.prototype[a[r]];return s()};e.exports=Object.create||function(e,t){var n;return null!==e?(l.prototype=r(e),n=new l,l.prototype=null,n[o]=e):n=s(),void 0===t?n:i(n,t)}},function(e,t,n){var r=n(98),i=n(71).concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return r(e,i)}},function(e,t,n){"use strict";var r=n(2),i=n(8),a=n(7),o=n(5)("species");e.exports=function(e){var t=r[e];a&&t&&!t[o]&&i.f(t,o,{configurable:!0,get:function(){return this}})}},function(e,t){e.exports=function(e,t,n,r){if(!(e instanceof t)||void 0!==r&&r in e)throw TypeError(n+": incorrect invocation!");return e}},function(e,t,n){var r=n(19),i=n(111),a=n(83),o=n(1),l=n(6),s=n(85),u={},c={};(t=e.exports=function(e,t,n,f,d){var p,m,h,g,v=d?function(){return e}:s(e),y=r(n,f,t?2:1),b=0;if("function"!=typeof v)throw TypeError(e+" is not iterable!");if(a(v)){for(p=l(e.length);p>b;b++)if((g=t?y(o(m=e[b])[0],m[1]):y(e[b]))===u||g===c)return g}else for(h=v.call(e);!(m=h.next()).done;)if((g=i(h,y,m.value,t))===u||g===c)return g}).BREAK=u,t.RETURN=c},function(e,t,n){var r=n(12);e.exports=function(e,t,n){for(var i in t)r(e,i,t[i],n);return e}},function(e,t,n){var r=n(4);e.exports=function(e,t){if(!r(e)||e._t!==t)throw TypeError("Incompatible receiver, "+t+" required!");return e}},function(e,t,n){var r=n(8).f,i=n(14),a=n(5)("toStringTag");e.exports=function(e,t,n){e&&!i(e=n?e:e.prototype,a)&&r(e,a,{configurable:!0,value:t})}},function(e,t,n){var r=n(20),i=n(5)("toStringTag"),a="Arguments"==r(function(){return arguments}());e.exports=function(e){var t,n,o;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(e){}}(t=Object(e),i))?n:a?r(t):"Object"==(o=r(t))&&"function"==typeof t.callee?"Arguments":o}},function(e,t,n){var r=n(0),i=n(24),a=n(3),o=n(74),l="["+o+"]",s=RegExp("^"+l+l+"*"),u=RegExp(l+l+"*$"),c=function(e,t,n){var i={},l=a((function(){return!!o[e]()||"​"!="​"[e]()})),s=i[e]=l?t(f):o[e];n&&(i[n]=s),r(r.P+r.F*l,"String",i)},f=c.trim=function(e,t){return e=String(i(e)),1&t&&(e=e.replace(s,"")),2&t&&(e=e.replace(u,"")),e};e.exports=c},function(e,t){e.exports={}},function(e,t,n){var r=n(18),i=n(2),a=i["__core-js_shared__"]||(i["__core-js_shared__"]={});(e.exports=function(e,t){return a[e]||(a[e]=void 0!==t?t:{})})("versions",[]).push({version:r.version,mode:n(29)?"pure":"global",copyright:"© 2019 Denis Pushkarev (zloirock.ru)"})},function(e,t,n){var r=n(20);e.exports=Object("z").propertyIsEnumerable(0)?Object:function(e){return"String"==r(e)?e.split(""):Object(e)}},function(e,t){t.f={}.propertyIsEnumerable},function(e,t,n){"use strict";var r=n(1);e.exports=function(){var e=r(this),t="";return e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),e.unicode&&(t+="u"),e.sticky&&(t+="y"),t}},function(e,t,n){var r=n(1),i=n(10),a=n(5)("species");e.exports=function(e,t){var n,o=r(e).constructor;return void 0===o||null==(n=r(o)[a])?t:i(n)}},function(e,t,n){"use strict";e.exports=n(337)},function(e,t,n){var r=n(15),i=n(6),a=n(35);e.exports=function(e){return function(t,n,o){var l,s=r(t),u=i(s.length),c=a(o,u);if(e&&n!=n){for(;u>c;)if((l=s[c++])!=l)return!0}else for(;u>c;c++)if((e||c in s)&&s[c]===n)return e||c||0;return!e&&-1}}},function(e,t){t.f=Object.getOwnPropertySymbols},function(e,t,n){var r=n(20);e.exports=Array.isArray||function(e){return"Array"==r(e)}},function(e,t,n){var r=n(21),i=n(24);e.exports=function(e){return function(t,n){var a,o,l=String(i(t)),s=r(n),u=l.length;return s<0||s>=u?e?"":void 0:(a=l.charCodeAt(s))<55296||a>56319||s+1===u||(o=l.charCodeAt(s+1))<56320||o>57343?e?l.charAt(s):a:e?l.slice(s,s+2):o-56320+(a-55296<<10)+65536}}},function(e,t,n){var r=n(4),i=n(20),a=n(5)("match");e.exports=function(e){var t;return r(e)&&(void 0!==(t=e[a])?!!t:"RegExp"==i(e))}},function(e,t,n){var r=n(5)("iterator"),i=!1;try{var a=[7][r]();a.return=function(){i=!0},Array.from(a,(function(){throw 2}))}catch(e){}e.exports=function(e,t){if(!t&&!i)return!1;var n=!1;try{var a=[7],o=a[r]();o.next=function(){return{done:n=!0}},a[r]=function(){return o},e(a)}catch(e){}return n}},function(e,t,n){"use strict";var r=n(44),i=RegExp.prototype.exec;e.exports=function(e,t){var n=e.exec;if("function"==typeof n){var a=n.call(e,t);if("object"!=typeof a)throw new TypeError("RegExp exec method returned something other than an Object or null");return a}if("RegExp"!==r(e))throw new TypeError("RegExp#exec called on incompatible receiver");return i.call(e,t)}},function(e,t,n){"use strict";n(115);var r=n(12),i=n(11),a=n(3),o=n(24),l=n(5),s=n(89),u=l("species"),c=!a((function(){var e=/./;return e.exec=function(){var e=[];return e.groups={a:"7"},e},"7"!=="".replace(e,"$<a>")})),f=function(){var e=/(?:)/,t=e.exec;e.exec=function(){return t.apply(this,arguments)};var n="ab".split(e);return 2===n.length&&"a"===n[0]&&"b"===n[1]}();e.exports=function(e,t,n){var d=l(e),p=!a((function(){var t={};return t[d]=function(){return 7},7!=""[e](t)})),m=p?!a((function(){var t=!1,n=/a/;return n.exec=function(){return t=!0,null},"split"===e&&(n.constructor={},n.constructor[u]=function(){return n}),n[d](""),!t})):void 0;if(!p||!m||"replace"===e&&!c||"split"===e&&!f){var h=/./[d],g=n(o,d,""[e],(function(e,t,n,r,i){return t.exec===s?p&&!i?{done:!0,value:h.call(t,n,r)}:{done:!0,value:e.call(n,t,r)}:{done:!1}})),v=g[0],y=g[1];r(String.prototype,e,v),i(RegExp.prototype,d,2==t?function(e,t){return y.call(e,this,t)}:function(e){return y.call(e,this)})}}},function(e,t,n){var r=n(2).navigator;e.exports=r&&r.userAgent||""},function(e,t,n){"use strict";var r=n(2),i=n(0),a=n(12),o=n(41),l=n(30),s=n(40),u=n(39),c=n(4),f=n(3),d=n(58),p=n(43),m=n(75);e.exports=function(e,t,n,h,g,v){var y=r[e],b=y,w=g?"set":"add",k=b&&b.prototype,_={},E=function(e){var t=k[e];a(k,e,"delete"==e||"has"==e?function(e){return!(v&&!c(e))&&t.call(this,0===e?0:e)}:"get"==e?function(e){return v&&!c(e)?void 0:t.call(this,0===e?0:e)}:"add"==e?function(e){return t.call(this,0===e?0:e),this}:function(e,n){return t.call(this,0===e?0:e,n),this})};if("function"==typeof b&&(v||k.forEach&&!f((function(){(new b).entries().next()})))){var x=new b,z=x[w](v?{}:-0,1)!=x,S=f((function(){x.has(1)})),T=d((function(e){new b(e)})),N=!v&&f((function(){for(var e=new b,t=5;t--;)e[w](t,t);return!e.has(-0)}));T||((b=t((function(t,n){u(t,b,e);var r=m(new y,t,b);return null!=n&&s(n,g,r[w],r),r}))).prototype=k,k.constructor=b),(S||N)&&(E("delete"),E("has"),g&&E("get")),(N||z)&&E(w),v&&k.clear&&delete k.clear}else b=h.getConstructor(t,e,g,w),o(b.prototype,n),l.NEED=!0;return p(b,e),_[e]=b,i(i.G+i.W+i.F*(b!=y),_),v||h.setStrong(b,e,g),b}},function(e,t,n){for(var r,i=n(2),a=n(11),o=n(33),l=o("typed_array"),s=o("view"),u=!(!i.ArrayBuffer||!i.DataView),c=u,f=0,d="Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array".split(",");f<9;)(r=i[d[f++]])?(a(r.prototype,l,!0),a(r.prototype,s,!0)):c=!1;e.exports={ABV:u,CONSTR:c,TYPED:l,VIEW:s}},function(e,t,n){"use strict";e.exports=n(29)||!n(3)((function(){var e=Math.random();__defineSetter__.call(null,e,(function(){})),delete n(2)[e]}))},function(e,t,n){"use strict";var r=n(0);e.exports=function(e){r(r.S,e,{of:function(){for(var e=arguments.length,t=new Array(e);e--;)t[e]=arguments[e];return new this(t)}})}},function(e,t,n){"use strict";var r=n(0),i=n(10),a=n(19),o=n(40);e.exports=function(e){r(r.S,e,{from:function(e){var t,n,r,l,s=arguments[1];return i(this),(t=void 0!==s)&&i(s),null==e?new this:(n=[],t?(r=0,l=a(s,arguments[2],2),o(e,!1,(function(e){n.push(l(e,r++))}))):o(e,!1,n.push,n),new this(n))}})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.addonRoot=t.addonPrefix=t.addonPrefixDashboardMenu=t.addonPrefixDashboard=t.addonPrefixPopup=void 0,t.addonPrefixPopup=function(){return browser.runtime.getURL("Distribution/Popup/index.html")},t.addonPrefixDashboard=function(){return browser.runtime.getURL("Distribution/Dashboard/index.html")},t.addonPrefixDashboardMenu=function(){return browser.runtime.getURL("Distribution/Dashboard/")},t.addonPrefix=function(){return browser.runtime.getURL("Distribution")},t.addonRoot=function(){return browser.runtime.getURL("")}},function(e,t,n){var r=n(4),i=n(2).document,a=r(i)&&r(i.createElement);e.exports=function(e){return a?i.createElement(e):{}}},function(e,t,n){var r=n(2),i=n(18),a=n(29),o=n(97),l=n(8).f;e.exports=function(e){var t=i.Symbol||(i.Symbol=a?{}:r.Symbol||{});"_"==e.charAt(0)||e in t||l(t,e,{value:o.f(e)})}},function(e,t,n){var r=n(47)("keys"),i=n(33);e.exports=function(e){return r[e]||(r[e]=i(e))}},function(e,t){e.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},function(e,t,n){var r=n(2).document;e.exports=r&&r.documentElement},function(e,t,n){var r=n(4),i=n(1),a=function(e,t){if(i(e),!r(t)&&null!==t)throw TypeError(t+": can't set as prototype!")};e.exports={set:Object.setPrototypeOf||("__proto__"in{}?function(e,t,r){try{(r=n(19)(Function.call,n(16).f(Object.prototype,"__proto__").set,2))(e,[]),t=!(e instanceof Array)}catch(e){t=!0}return function(e,n){return a(e,n),t?e.__proto__=n:r(e,n),e}}({},!1):void 0),check:a}},function(e,t){e.exports="\t\n\v\f\r   ᠎             　\u2028\u2029\ufeff"},function(e,t,n){var r=n(4),i=n(73).set;e.exports=function(e,t,n){var a,o=t.constructor;return o!==n&&"function"==typeof o&&(a=o.prototype)!==n.prototype&&r(a)&&i&&i(e,a),e}},function(e,t,n){"use strict";var r=n(21),i=n(24);e.exports=function(e){var t=String(i(this)),n="",a=r(e);if(a<0||a==1/0)throw RangeError("Count can't be negative");for(;a>0;(a>>>=1)&&(t+=t))1&a&&(n+=t);return n}},function(e,t){e.exports=Math.sign||function(e){return 0==(e=+e)||e!=e?e:e<0?-1:1}},function(e,t){var n=Math.expm1;e.exports=!n||n(10)>22025.465794806718||n(10)<22025.465794806718||-2e-17!=n(-2e-17)?function(e){return 0==(e=+e)?e:e>-1e-6&&e<1e-6?e+e*e/2:Math.exp(e)-1}:n},function(e,t,n){"use strict";var r=n(29),i=n(0),a=n(12),o=n(11),l=n(46),s=n(80),u=n(43),c=n(17),f=n(5)("iterator"),d=!([].keys&&"next"in[].keys()),p=function(){return this};e.exports=function(e,t,n,m,h,g,v){s(n,t,m);var y,b,w,k=function(e){if(!d&&e in z)return z[e];switch(e){case"keys":case"values":return function(){return new n(this,e)}}return function(){return new n(this,e)}},_=t+" Iterator",E="values"==h,x=!1,z=e.prototype,S=z[f]||z["@@iterator"]||h&&z[h],T=S||k(h),N=h?E?k("entries"):T:void 0,P="Array"==t&&z.entries||S;if(P&&(w=c(P.call(new e)))!==Object.prototype&&w.next&&(u(w,_,!0),r||"function"==typeof w[f]||o(w,f,p)),E&&S&&"values"!==S.name&&(x=!0,T=function(){return S.call(this)}),r&&!v||!d&&!x&&z[f]||o(z,f,T),l[t]=T,l[_]=p,h)if(y={values:E?T:k("values"),keys:g?T:k("keys"),entries:N},v)for(b in y)b in z||a(z,b,y[b]);else i(i.P+i.F*(d||x),t,y);return y}},function(e,t,n){"use strict";var r=n(36),i=n(32),a=n(43),o={};n(11)(o,n(5)("iterator"),(function(){return this})),e.exports=function(e,t,n){e.prototype=r(o,{next:i(1,n)}),a(e,t+" Iterator")}},function(e,t,n){var r=n(57),i=n(24);e.exports=function(e,t,n){if(r(t))throw TypeError("String#"+n+" doesn't accept regex!");return String(i(e))}},function(e,t,n){var r=n(5)("match");e.exports=function(e){var t=/./;try{"/./"[e](t)}catch(n){try{return t[r]=!1,!"/./"[e](t)}catch(e){}}return!0}},function(e,t,n){var r=n(46),i=n(5)("iterator"),a=Array.prototype;e.exports=function(e){return void 0!==e&&(r.Array===e||a[i]===e)}},function(e,t,n){"use strict";var r=n(8),i=n(32);e.exports=function(e,t,n){t in e?r.f(e,t,i(0,n)):e[t]=n}},function(e,t,n){var r=n(44),i=n(5)("iterator"),a=n(46);e.exports=n(18).getIteratorMethod=function(e){if(null!=e)return e[i]||e["@@iterator"]||a[r(e)]}},function(e,t,n){var r=n(226);e.exports=function(e,t){return new(r(e))(t)}},function(e,t,n){"use strict";var r=n(9),i=n(35),a=n(6);e.exports=function(e){for(var t=r(this),n=a(t.length),o=arguments.length,l=i(o>1?arguments[1]:void 0,n),s=o>2?arguments[2]:void 0,u=void 0===s?n:i(s,n);u>l;)t[l++]=e;return t}},function(e,t,n){"use strict";var r=n(31),i=n(114),a=n(46),o=n(15);e.exports=n(79)(Array,"Array",(function(e,t){this._t=o(e),this._i=0,this._k=t}),(function(){var e=this._t,t=this._k,n=this._i++;return!e||n>=e.length?(this._t=void 0,i(1)):i(0,"keys"==t?n:"values"==t?e[n]:[n,e[n]])}),"values"),a.Arguments=a.Array,r("keys"),r("values"),r("entries")},function(e,t,n){"use strict";var r,i,a=n(50),o=RegExp.prototype.exec,l=String.prototype.replace,s=o,u=(r=/a/,i=/b*/g,o.call(r,"a"),o.call(i,"a"),0!==r.lastIndex||0!==i.lastIndex),c=void 0!==/()??/.exec("")[1];(u||c)&&(s=function(e){var t,n,r,i,s=this;return c&&(n=new RegExp("^"+s.source+"$(?!\\s)",a.call(s))),u&&(t=s.lastIndex),r=o.call(s,e),u&&r&&(s.lastIndex=s.global?r.index+r[0].length:t),c&&r&&r.length>1&&l.call(r[0],n,(function(){for(i=1;i<arguments.length-2;i++)void 0===arguments[i]&&(r[i]=void 0)})),r}),e.exports=s},function(e,t,n){"use strict";var r=n(56)(!0);e.exports=function(e,t,n){return t+(n?r(e,t).length:1)}},function(e,t,n){var r,i,a,o=n(19),l=n(104),s=n(72),u=n(68),c=n(2),f=c.process,d=c.setImmediate,p=c.clearImmediate,m=c.MessageChannel,h=c.Dispatch,g=0,v={},y=function(){var e=+this;if(v.hasOwnProperty(e)){var t=v[e];delete v[e],t()}},b=function(e){y.call(e.data)};d&&p||(d=function(e){for(var t=[],n=1;arguments.length>n;)t.push(arguments[n++]);return v[++g]=function(){l("function"==typeof e?e:Function(e),t)},r(g),g},p=function(e){delete v[e]},"process"==n(20)(f)?r=function(e){f.nextTick(o(y,e,1))}:h&&h.now?r=function(e){h.now(o(y,e,1))}:m?(a=(i=new m).port2,i.port1.onmessage=b,r=o(a.postMessage,a,1)):c.addEventListener&&"function"==typeof postMessage&&!c.importScripts?(r=function(e){c.postMessage(e+"","*")},c.addEventListener("message",b,!1)):r="onreadystatechange"in u("script")?function(e){s.appendChild(u("script")).onreadystatechange=function(){s.removeChild(this),y.call(e)}}:function(e){setTimeout(o(y,e,1),0)}),e.exports={set:d,clear:p}},function(e,t,n){var r=n(2),i=n(91).set,a=r.MutationObserver||r.WebKitMutationObserver,o=r.process,l=r.Promise,s="process"==n(20)(o);e.exports=function(){var e,t,n,u=function(){var r,i;for(s&&(r=o.domain)&&r.exit();e;){i=e.fn,e=e.next;try{i()}catch(r){throw e?n():t=void 0,r}}t=void 0,r&&r.enter()};if(s)n=function(){o.nextTick(u)};else if(!a||r.navigator&&r.navigator.standalone)if(l&&l.resolve){var c=l.resolve(void 0);n=function(){c.then(u)}}else n=function(){i.call(r,u)};else{var f=!0,d=document.createTextNode("");new a(u).observe(d,{characterData:!0}),n=function(){d.data=f=!f}}return function(r){var i={fn:r,next:void 0};t&&(t.next=i),e||(e=i,n()),t=i}}},function(e,t,n){"use strict";var r=n(10);function i(e){var t,n;this.promise=new e((function(e,r){if(void 0!==t||void 0!==n)throw TypeError("Bad Promise constructor");t=e,n=r})),this.resolve=r(t),this.reject=r(n)}e.exports.f=function(e){return new i(e)}},function(e,t,n){"use strict";var r=n(2),i=n(7),a=n(29),o=n(63),l=n(11),s=n(41),u=n(3),c=n(39),f=n(21),d=n(6),p=n(124),m=n(37).f,h=n(8).f,g=n(87),v=n(43),y=r.ArrayBuffer,b=r.DataView,w=r.Math,k=r.RangeError,_=r.Infinity,E=y,x=w.abs,z=w.pow,S=w.floor,T=w.log,N=w.LN2,P=i?"_b":"buffer",j=i?"_l":"byteLength",C=i?"_o":"byteOffset";function I(e,t,n){var r,i,a,o=new Array(n),l=8*n-t-1,s=(1<<l)-1,u=s>>1,c=23===t?z(2,-24)-z(2,-77):0,f=0,d=e<0||0===e&&1/e<0?1:0;for((e=x(e))!=e||e===_?(i=e!=e?1:0,r=s):(r=S(T(e)/N),e*(a=z(2,-r))<1&&(r--,a*=2),(e+=r+u>=1?c/a:c*z(2,1-u))*a>=2&&(r++,a/=2),r+u>=s?(i=0,r=s):r+u>=1?(i=(e*a-1)*z(2,t),r+=u):(i=e*z(2,u-1)*z(2,t),r=0));t>=8;o[f++]=255&i,i/=256,t-=8);for(r=r<<t|i,l+=t;l>0;o[f++]=255&r,r/=256,l-=8);return o[--f]|=128*d,o}function M(e,t,n){var r,i=8*n-t-1,a=(1<<i)-1,o=a>>1,l=i-7,s=n-1,u=e[s--],c=127&u;for(u>>=7;l>0;c=256*c+e[s],s--,l-=8);for(r=c&(1<<-l)-1,c>>=-l,l+=t;l>0;r=256*r+e[s],s--,l-=8);if(0===c)c=1-o;else{if(c===a)return r?NaN:u?-_:_;r+=z(2,t),c-=o}return(u?-1:1)*r*z(2,c-t)}function O(e){return e[3]<<24|e[2]<<16|e[1]<<8|e[0]}function D(e){return[255&e]}function L(e){return[255&e,e>>8&255]}function A(e){return[255&e,e>>8&255,e>>16&255,e>>24&255]}function F(e){return I(e,52,8)}function B(e){return I(e,23,4)}function R(e,t,n){h(e.prototype,t,{get:function(){return this[n]}})}function W(e,t,n,r){var i=p(+n);if(i+t>e[j])throw k("Wrong index!");var a=e[P]._b,o=i+e[C],l=a.slice(o,o+t);return r?l:l.reverse()}function U(e,t,n,r,i,a){var o=p(+n);if(o+t>e[j])throw k("Wrong index!");for(var l=e[P]._b,s=o+e[C],u=r(+i),c=0;c<t;c++)l[s+c]=u[a?c:t-c-1]}if(o.ABV){if(!u((function(){y(1)}))||!u((function(){new y(-1)}))||u((function(){return new y,new y(1.5),new y(NaN),"ArrayBuffer"!=y.name}))){for(var H,V=(y=function(e){return c(this,y),new E(p(e))}).prototype=E.prototype,K=m(E),$=0;K.length>$;)(H=K[$++])in y||l(y,H,E[H]);a||(V.constructor=y)}var Q=new b(new y(2)),q=b.prototype.setInt8;Q.setInt8(0,2147483648),Q.setInt8(1,2147483649),!Q.getInt8(0)&&Q.getInt8(1)||s(b.prototype,{setInt8:function(e,t){q.call(this,e,t<<24>>24)},setUint8:function(e,t){q.call(this,e,t<<24>>24)}},!0)}else y=function(e){c(this,y,"ArrayBuffer");var t=p(e);this._b=g.call(new Array(t),0),this[j]=t},b=function(e,t,n){c(this,b,"DataView"),c(e,y,"DataView");var r=e[j],i=f(t);if(i<0||i>r)throw k("Wrong offset!");if(i+(n=void 0===n?r-i:d(n))>r)throw k("Wrong length!");this[P]=e,this[C]=i,this[j]=n},i&&(R(y,"byteLength","_l"),R(b,"buffer","_b"),R(b,"byteLength","_l"),R(b,"byteOffset","_o")),s(b.prototype,{getInt8:function(e){return W(this,1,e)[0]<<24>>24},getUint8:function(e){return W(this,1,e)[0]},getInt16:function(e){var t=W(this,2,e,arguments[1]);return(t[1]<<8|t[0])<<16>>16},getUint16:function(e){var t=W(this,2,e,arguments[1]);return t[1]<<8|t[0]},getInt32:function(e){return O(W(this,4,e,arguments[1]))},getUint32:function(e){return O(W(this,4,e,arguments[1]))>>>0},getFloat32:function(e){return M(W(this,4,e,arguments[1]),23,4)},getFloat64:function(e){return M(W(this,8,e,arguments[1]),52,8)},setInt8:function(e,t){U(this,1,e,D,t)},setUint8:function(e,t){U(this,1,e,D,t)},setInt16:function(e,t){U(this,2,e,L,t,arguments[2])},setUint16:function(e,t){U(this,2,e,L,t,arguments[2])},setInt32:function(e,t){U(this,4,e,A,t,arguments[2])},setUint32:function(e,t){U(this,4,e,A,t,arguments[2])},setFloat32:function(e,t){U(this,4,e,B,t,arguments[2])},setFloat64:function(e,t){U(this,8,e,F,t,arguments[2])}});v(y,"ArrayBuffer"),v(b,"DataView"),l(b.prototype,o.VIEW,!0),t.ArrayBuffer=y,t.DataView=b},function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t,n){e.exports=!n(7)&&!n(3)((function(){return 7!=Object.defineProperty(n(68)("div"),"a",{get:function(){return 7}}).a}))},function(e,t,n){t.f=n(5)},function(e,t,n){var r=n(14),i=n(15),a=n(53)(!1),o=n(70)("IE_PROTO");e.exports=function(e,t){var n,l=i(e),s=0,u=[];for(n in l)n!=o&&r(l,n)&&u.push(n);for(;t.length>s;)r(l,n=t[s++])&&(~a(u,n)||u.push(n));return u}},function(e,t,n){var r=n(8),i=n(1),a=n(34);e.exports=n(7)?Object.defineProperties:function(e,t){i(e);for(var n,o=a(t),l=o.length,s=0;l>s;)r.f(e,n=o[s++],t[n]);return e}},function(e,t,n){var r=n(15),i=n(37).f,a={}.toString,o="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];e.exports.f=function(e){return o&&"[object Window]"==a.call(e)?function(e){try{return i(e)}catch(e){return o.slice()}}(e):i(r(e))}},function(e,t,n){"use strict";var r=n(7),i=n(34),a=n(54),o=n(49),l=n(9),s=n(48),u=Object.assign;e.exports=!u||n(3)((function(){var e={},t={},n=Symbol(),r="abcdefghijklmnopqrst";return e[n]=7,r.split("").forEach((function(e){t[e]=e})),7!=u({},e)[n]||Object.keys(u({},t)).join("")!=r}))?function(e,t){for(var n=l(e),u=arguments.length,c=1,f=a.f,d=o.f;u>c;)for(var p,m=s(arguments[c++]),h=f?i(m).concat(f(m)):i(m),g=h.length,v=0;g>v;)p=h[v++],r&&!d.call(m,p)||(n[p]=m[p]);return n}:u},function(e,t){e.exports=Object.is||function(e,t){return e===t?0!==e||1/e==1/t:e!=e&&t!=t}},function(e,t,n){"use strict";var r=n(10),i=n(4),a=n(104),o=[].slice,l={},s=function(e,t,n){if(!(t in l)){for(var r=[],i=0;i<t;i++)r[i]="a["+i+"]";l[t]=Function("F,a","return new F("+r.join(",")+")")}return l[t](e,n)};e.exports=Function.bind||function(e){var t=r(this),n=o.call(arguments,1),l=function(){var r=n.concat(o.call(arguments));return this instanceof l?s(t,r.length,r):a(t,r,e)};return i(t.prototype)&&(l.prototype=t.prototype),l}},function(e,t){e.exports=function(e,t,n){var r=void 0===n;switch(t.length){case 0:return r?e():e.call(n);case 1:return r?e(t[0]):e.call(n,t[0]);case 2:return r?e(t[0],t[1]):e.call(n,t[0],t[1]);case 3:return r?e(t[0],t[1],t[2]):e.call(n,t[0],t[1],t[2]);case 4:return r?e(t[0],t[1],t[2],t[3]):e.call(n,t[0],t[1],t[2],t[3])}return e.apply(n,t)}},function(e,t,n){var r=n(2).parseInt,i=n(45).trim,a=n(74),o=/^[-+]?0[xX]/;e.exports=8!==r(a+"08")||22!==r(a+"0x16")?function(e,t){var n=i(String(e),3);return r(n,t>>>0||(o.test(n)?16:10))}:r},function(e,t,n){var r=n(2).parseFloat,i=n(45).trim;e.exports=1/r(n(74)+"-0")!=-1/0?function(e){var t=i(String(e),3),n=r(t);return 0===n&&"-"==t.charAt(0)?-0:n}:r},function(e,t,n){var r=n(20);e.exports=function(e,t){if("number"!=typeof e&&"Number"!=r(e))throw TypeError(t);return+e}},function(e,t,n){var r=n(4),i=Math.floor;e.exports=function(e){return!r(e)&&isFinite(e)&&i(e)===e}},function(e,t){e.exports=Math.log1p||function(e){return(e=+e)>-1e-8&&e<1e-8?e-e*e/2:Math.log(1+e)}},function(e,t,n){var r=n(77),i=Math.pow,a=i(2,-52),o=i(2,-23),l=i(2,127)*(2-o),s=i(2,-126);e.exports=Math.fround||function(e){var t,n,i=Math.abs(e),u=r(e);return i<s?u*(i/s/o+1/a-1/a)*s*o:(n=(t=(1+o/a)*i)-(t-i))>l||n!=n?u*(1/0):u*n}},function(e,t,n){var r=n(1);e.exports=function(e,t,n,i){try{return i?t(r(n)[0],n[1]):t(n)}catch(t){var a=e.return;throw void 0!==a&&r(a.call(e)),t}}},function(e,t,n){var r=n(10),i=n(9),a=n(48),o=n(6);e.exports=function(e,t,n,l,s){r(t);var u=i(e),c=a(u),f=o(u.length),d=s?f-1:0,p=s?-1:1;if(n<2)for(;;){if(d in c){l=c[d],d+=p;break}if(d+=p,s?d<0:f<=d)throw TypeError("Reduce of empty array with no initial value")}for(;s?d>=0:f>d;d+=p)d in c&&(l=t(l,c[d],d,u));return l}},function(e,t,n){"use strict";var r=n(9),i=n(35),a=n(6);e.exports=[].copyWithin||function(e,t){var n=r(this),o=a(n.length),l=i(e,o),s=i(t,o),u=arguments.length>2?arguments[2]:void 0,c=Math.min((void 0===u?o:i(u,o))-s,o-l),f=1;for(s<l&&l<s+c&&(f=-1,s+=c-1,l+=c-1);c-- >0;)s in n?n[l]=n[s]:delete n[l],l+=f,s+=f;return n}},function(e,t){e.exports=function(e,t){return{value:t,done:!!e}}},function(e,t,n){"use strict";var r=n(89);n(0)({target:"RegExp",proto:!0,forced:r!==/./.exec},{exec:r})},function(e,t,n){n(7)&&"g"!=/./g.flags&&n(8).f(RegExp.prototype,"flags",{configurable:!0,get:n(50)})},function(e,t){e.exports=function(e){try{return{e:!1,v:e()}}catch(e){return{e:!0,v:e}}}},function(e,t,n){var r=n(1),i=n(4),a=n(93);e.exports=function(e,t){if(r(e),i(t)&&t.constructor===e)return t;var n=a.f(e);return(0,n.resolve)(t),n.promise}},function(e,t,n){"use strict";var r=n(120),i=n(42);e.exports=n(62)("Map",(function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}}),{get:function(e){var t=r.getEntry(i(this,"Map"),e);return t&&t.v},set:function(e,t){return r.def(i(this,"Map"),0===e?0:e,t)}},r,!0)},function(e,t,n){"use strict";var r=n(8).f,i=n(36),a=n(41),o=n(19),l=n(39),s=n(40),u=n(79),c=n(114),f=n(38),d=n(7),p=n(30).fastKey,m=n(42),h=d?"_s":"size",g=function(e,t){var n,r=p(t);if("F"!==r)return e._i[r];for(n=e._f;n;n=n.n)if(n.k==t)return n};e.exports={getConstructor:function(e,t,n,u){var c=e((function(e,r){l(e,c,t,"_i"),e._t=t,e._i=i(null),e._f=void 0,e._l=void 0,e[h]=0,null!=r&&s(r,n,e[u],e)}));return a(c.prototype,{clear:function(){for(var e=m(this,t),n=e._i,r=e._f;r;r=r.n)r.r=!0,r.p&&(r.p=r.p.n=void 0),delete n[r.i];e._f=e._l=void 0,e[h]=0},delete:function(e){var n=m(this,t),r=g(n,e);if(r){var i=r.n,a=r.p;delete n._i[r.i],r.r=!0,a&&(a.n=i),i&&(i.p=a),n._f==r&&(n._f=i),n._l==r&&(n._l=a),n[h]--}return!!r},forEach:function(e){m(this,t);for(var n,r=o(e,arguments.length>1?arguments[1]:void 0,3);n=n?n.n:this._f;)for(r(n.v,n.k,this);n&&n.r;)n=n.p},has:function(e){return!!g(m(this,t),e)}}),d&&r(c.prototype,"size",{get:function(){return m(this,t)[h]}}),c},def:function(e,t,n){var r,i,a=g(e,t);return a?a.v=n:(e._l=a={i:i=p(t,!0),k:t,v:n,p:r=e._l,n:void 0,r:!1},e._f||(e._f=a),r&&(r.n=a),e[h]++,"F"!==i&&(e._i[i]=a)),e},getEntry:g,setStrong:function(e,t,n){u(e,t,(function(e,n){this._t=m(e,t),this._k=n,this._l=void 0}),(function(){for(var e=this._k,t=this._l;t&&t.r;)t=t.p;return this._t&&(this._l=t=t?t.n:this._t._f)?c(0,"keys"==e?t.k:"values"==e?t.v:[t.k,t.v]):(this._t=void 0,c(1))}),n?"entries":"values",!n,!0),f(t)}}},function(e,t,n){"use strict";var r=n(120),i=n(42);e.exports=n(62)("Set",(function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}}),{add:function(e){return r.def(i(this,"Set"),e=0===e?0:e,e)}},r)},function(e,t,n){"use strict";var r,i=n(2),a=n(26)(0),o=n(12),l=n(30),s=n(101),u=n(123),c=n(4),f=n(42),d=n(42),p=!i.ActiveXObject&&"ActiveXObject"in i,m=l.getWeak,h=Object.isExtensible,g=u.ufstore,v=function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}},y={get:function(e){if(c(e)){var t=m(e);return!0===t?g(f(this,"WeakMap")).get(e):t?t[this._i]:void 0}},set:function(e,t){return u.def(f(this,"WeakMap"),e,t)}},b=e.exports=n(62)("WeakMap",v,y,u,!0,!0);d&&p&&(s((r=u.getConstructor(v,"WeakMap")).prototype,y),l.NEED=!0,a(["delete","has","get","set"],(function(e){var t=b.prototype,n=t[e];o(t,e,(function(t,i){if(c(t)&&!h(t)){this._f||(this._f=new r);var a=this._f[e](t,i);return"set"==e?this:a}return n.call(this,t,i)}))})))},function(e,t,n){"use strict";var r=n(41),i=n(30).getWeak,a=n(1),o=n(4),l=n(39),s=n(40),u=n(26),c=n(14),f=n(42),d=u(5),p=u(6),m=0,h=function(e){return e._l||(e._l=new g)},g=function(){this.a=[]},v=function(e,t){return d(e.a,(function(e){return e[0]===t}))};g.prototype={get:function(e){var t=v(this,e);if(t)return t[1]},has:function(e){return!!v(this,e)},set:function(e,t){var n=v(this,e);n?n[1]=t:this.a.push([e,t])},delete:function(e){var t=p(this.a,(function(t){return t[0]===e}));return~t&&this.a.splice(t,1),!!~t}},e.exports={getConstructor:function(e,t,n,a){var u=e((function(e,r){l(e,u,t,"_i"),e._t=t,e._i=m++,e._l=void 0,null!=r&&s(r,n,e[a],e)}));return r(u.prototype,{delete:function(e){if(!o(e))return!1;var n=i(e);return!0===n?h(f(this,t)).delete(e):n&&c(n,this._i)&&delete n[this._i]},has:function(e){if(!o(e))return!1;var n=i(e);return!0===n?h(f(this,t)).has(e):n&&c(n,this._i)}}),u},def:function(e,t,n){var r=i(a(t),!0);return!0===r?h(e).set(t,n):r[e._i]=n,e},ufstore:h}},function(e,t,n){var r=n(21),i=n(6);e.exports=function(e){if(void 0===e)return 0;var t=r(e),n=i(t);if(t!==n)throw RangeError("Wrong length!");return n}},function(e,t,n){var r=n(37),i=n(54),a=n(1),o=n(2).Reflect;e.exports=o&&o.ownKeys||function(e){var t=r.f(a(e)),n=i.f;return n?t.concat(n(e)):t}},function(e,t,n){"use strict";var r=n(55),i=n(4),a=n(6),o=n(19),l=n(5)("isConcatSpreadable");e.exports=function e(t,n,s,u,c,f,d,p){for(var m,h,g=c,v=0,y=!!d&&o(d,p,3);v<u;){if(v in s){if(m=y?y(s[v],v,n):s[v],h=!1,i(m)&&(h=void 0!==(h=m[l])?!!h:r(m)),h&&f>0)g=e(t,n,m,a(m.length),g,f-1)-1;else{if(g>=9007199254740991)throw TypeError();t[g]=m}g++}v++}return g}},function(e,t,n){var r=n(6),i=n(76),a=n(24);e.exports=function(e,t,n,o){var l=String(a(e)),s=l.length,u=void 0===n?" ":String(n),c=r(t);if(c<=s||""==u)return l;var f=c-s,d=i.call(u,Math.ceil(f/u.length));return d.length>f&&(d=d.slice(0,f)),o?d+l:l+d}},function(e,t,n){var r=n(7),i=n(34),a=n(15),o=n(49).f;e.exports=function(e){return function(t){for(var n,l=a(t),s=i(l),u=s.length,c=0,f=[];u>c;)n=s[c++],r&&!o.call(l,n)||f.push(e?[n,l[n]]:l[n]);return f}}},function(e,t,n){var r=n(44),i=n(130);e.exports=function(e){return function(){if(r(this)!=e)throw TypeError(e+"#toJSON isn't generic");return i(this)}}},function(e,t,n){var r=n(40);e.exports=function(e,t){var n=[];return r(e,!1,n.push,n,t),n}},function(e,t){e.exports=Math.scale||function(e,t,n,r,i){return 0===arguments.length||e!=e||t!=t||n!=n||r!=r||i!=i?NaN:e===1/0||e===-1/0?e:(e-t)*(i-r)/(n-t)+r}},function(e,t,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,i=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;function o(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,l,s=o(e),u=1;u<arguments.length;u++){for(var c in n=Object(arguments[u]))i.call(n,c)&&(s[c]=n[c]);if(r){l=r(n);for(var f=0;f<l.length;f++)a.call(n,l[f])&&(s[l[f]]=n[l[f]])}}return s}},function(e,t,n){n(134),e.exports=n(336)},function(e,t,n){"use strict";(function(e){if(n(135),n(332),n(333),e._babelPolyfill)throw new Error("only one instance of babel-polyfill is allowed");e._babelPolyfill=!0;function t(e,t,n){e[t]||Object.defineProperty(e,t,{writable:!0,configurable:!0,value:n})}t(String.prototype,"padLeft","".padStart),t(String.prototype,"padRight","".padEnd),"pop,reverse,shift,keys,values,entries,indexOf,every,some,forEach,map,filter,find,findIndex,includes,join,slice,concat,push,splice,unshift,sort,lastIndexOf,reduce,reduceRight,copyWithin,fill".split(",").forEach((function(e){[][e]&&t(Array,e,Function.call.bind([][e]))}))}).call(this,n(95))},function(e,t,n){n(136),n(139),n(140),n(141),n(142),n(143),n(144),n(145),n(146),n(147),n(148),n(149),n(150),n(151),n(152),n(153),n(154),n(155),n(156),n(157),n(158),n(159),n(160),n(161),n(162),n(163),n(164),n(165),n(166),n(167),n(168),n(169),n(170),n(171),n(172),n(173),n(174),n(175),n(176),n(177),n(178),n(179),n(180),n(181),n(182),n(183),n(184),n(185),n(186),n(187),n(188),n(189),n(190),n(191),n(192),n(193),n(194),n(195),n(196),n(197),n(198),n(199),n(200),n(201),n(202),n(203),n(204),n(205),n(206),n(207),n(208),n(209),n(210),n(211),n(212),n(213),n(214),n(216),n(217),n(219),n(220),n(221),n(222),n(223),n(224),n(225),n(227),n(228),n(229),n(230),n(231),n(232),n(233),n(234),n(235),n(236),n(237),n(238),n(239),n(88),n(240),n(115),n(241),n(116),n(242),n(243),n(244),n(245),n(246),n(119),n(121),n(122),n(247),n(248),n(249),n(250),n(251),n(252),n(253),n(254),n(255),n(256),n(257),n(258),n(259),n(260),n(261),n(262),n(263),n(264),n(265),n(266),n(267),n(268),n(269),n(270),n(271),n(272),n(273),n(274),n(275),n(276),n(277),n(278),n(279),n(280),n(281),n(282),n(283),n(284),n(285),n(286),n(287),n(288),n(289),n(290),n(291),n(292),n(293),n(294),n(295),n(296),n(297),n(298),n(299),n(300),n(301),n(302),n(303),n(304),n(305),n(306),n(307),n(308),n(309),n(310),n(311),n(312),n(313),n(314),n(315),n(316),n(317),n(318),n(319),n(320),n(321),n(322),n(323),n(324),n(325),n(326),n(327),n(328),n(329),n(330),n(331),e.exports=n(18)},function(e,t,n){"use strict";var r=n(2),i=n(14),a=n(7),o=n(0),l=n(12),s=n(30).KEY,u=n(3),c=n(47),f=n(43),d=n(33),p=n(5),m=n(97),h=n(69),g=n(138),v=n(55),y=n(1),b=n(4),w=n(9),k=n(15),_=n(23),E=n(32),x=n(36),z=n(100),S=n(16),T=n(54),N=n(8),P=n(34),j=S.f,C=N.f,I=z.f,M=r.Symbol,O=r.JSON,D=O&&O.stringify,L=p("_hidden"),A=p("toPrimitive"),F={}.propertyIsEnumerable,B=c("symbol-registry"),R=c("symbols"),W=c("op-symbols"),U=Object.prototype,H="function"==typeof M&&!!T.f,V=r.QObject,K=!V||!V.prototype||!V.prototype.findChild,$=a&&u((function(){return 7!=x(C({},"a",{get:function(){return C(this,"a",{value:7}).a}})).a}))?function(e,t,n){var r=j(U,t);r&&delete U[t],C(e,t,n),r&&e!==U&&C(U,t,r)}:C,Q=function(e){var t=R[e]=x(M.prototype);return t._k=e,t},q=H&&"symbol"==typeof M.iterator?function(e){return"symbol"==typeof e}:function(e){return e instanceof M},G=function(e,t,n){return e===U&&G(W,t,n),y(e),t=_(t,!0),y(n),i(R,t)?(n.enumerable?(i(e,L)&&e[L][t]&&(e[L][t]=!1),n=x(n,{enumerable:E(0,!1)})):(i(e,L)||C(e,L,E(1,{})),e[L][t]=!0),$(e,t,n)):C(e,t,n)},J=function(e,t){y(e);for(var n,r=g(t=k(t)),i=0,a=r.length;a>i;)G(e,n=r[i++],t[n]);return e},Z=function(e){var t=F.call(this,e=_(e,!0));return!(this===U&&i(R,e)&&!i(W,e))&&(!(t||!i(this,e)||!i(R,e)||i(this,L)&&this[L][e])||t)},Y=function(e,t){if(e=k(e),t=_(t,!0),e!==U||!i(R,t)||i(W,t)){var n=j(e,t);return!n||!i(R,t)||i(e,L)&&e[L][t]||(n.enumerable=!0),n}},X=function(e){for(var t,n=I(k(e)),r=[],a=0;n.length>a;)i(R,t=n[a++])||t==L||t==s||r.push(t);return r},ee=function(e){for(var t,n=e===U,r=I(n?W:k(e)),a=[],o=0;r.length>o;)!i(R,t=r[o++])||n&&!i(U,t)||a.push(R[t]);return a};H||(l((M=function(){if(this instanceof M)throw TypeError("Symbol is not a constructor!");var e=d(arguments.length>0?arguments[0]:void 0),t=function(n){this===U&&t.call(W,n),i(this,L)&&i(this[L],e)&&(this[L][e]=!1),$(this,e,E(1,n))};return a&&K&&$(U,e,{configurable:!0,set:t}),Q(e)}).prototype,"toString",(function(){return this._k})),S.f=Y,N.f=G,n(37).f=z.f=X,n(49).f=Z,T.f=ee,a&&!n(29)&&l(U,"propertyIsEnumerable",Z,!0),m.f=function(e){return Q(p(e))}),o(o.G+o.W+o.F*!H,{Symbol:M});for(var te="hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","),ne=0;te.length>ne;)p(te[ne++]);for(var re=P(p.store),ie=0;re.length>ie;)h(re[ie++]);o(o.S+o.F*!H,"Symbol",{for:function(e){return i(B,e+="")?B[e]:B[e]=M(e)},keyFor:function(e){if(!q(e))throw TypeError(e+" is not a symbol!");for(var t in B)if(B[t]===e)return t},useSetter:function(){K=!0},useSimple:function(){K=!1}}),o(o.S+o.F*!H,"Object",{create:function(e,t){return void 0===t?x(e):J(x(e),t)},defineProperty:G,defineProperties:J,getOwnPropertyDescriptor:Y,getOwnPropertyNames:X,getOwnPropertySymbols:ee});var ae=u((function(){T.f(1)}));o(o.S+o.F*ae,"Object",{getOwnPropertySymbols:function(e){return T.f(w(e))}}),O&&o(o.S+o.F*(!H||u((function(){var e=M();return"[null]"!=D([e])||"{}"!=D({a:e})||"{}"!=D(Object(e))}))),"JSON",{stringify:function(e){for(var t,n,r=[e],i=1;arguments.length>i;)r.push(arguments[i++]);if(n=t=r[1],(b(t)||void 0!==e)&&!q(e))return v(t)||(t=function(e,t){if("function"==typeof n&&(t=n.call(this,e,t)),!q(t))return t}),r[1]=t,D.apply(O,r)}}),M.prototype[A]||n(11)(M.prototype,A,M.prototype.valueOf),f(M,"Symbol"),f(Math,"Math",!0),f(r.JSON,"JSON",!0)},function(e,t,n){e.exports=n(47)("native-function-to-string",Function.toString)},function(e,t,n){var r=n(34),i=n(54),a=n(49);e.exports=function(e){var t=r(e),n=i.f;if(n)for(var o,l=n(e),s=a.f,u=0;l.length>u;)s.call(e,o=l[u++])&&t.push(o);return t}},function(e,t,n){var r=n(0);r(r.S,"Object",{create:n(36)})},function(e,t,n){var r=n(0);r(r.S+r.F*!n(7),"Object",{defineProperty:n(8).f})},function(e,t,n){var r=n(0);r(r.S+r.F*!n(7),"Object",{defineProperties:n(99)})},function(e,t,n){var r=n(15),i=n(16).f;n(25)("getOwnPropertyDescriptor",(function(){return function(e,t){return i(r(e),t)}}))},function(e,t,n){var r=n(9),i=n(17);n(25)("getPrototypeOf",(function(){return function(e){return i(r(e))}}))},function(e,t,n){var r=n(9),i=n(34);n(25)("keys",(function(){return function(e){return i(r(e))}}))},function(e,t,n){n(25)("getOwnPropertyNames",(function(){return n(100).f}))},function(e,t,n){var r=n(4),i=n(30).onFreeze;n(25)("freeze",(function(e){return function(t){return e&&r(t)?e(i(t)):t}}))},function(e,t,n){var r=n(4),i=n(30).onFreeze;n(25)("seal",(function(e){return function(t){return e&&r(t)?e(i(t)):t}}))},function(e,t,n){var r=n(4),i=n(30).onFreeze;n(25)("preventExtensions",(function(e){return function(t){return e&&r(t)?e(i(t)):t}}))},function(e,t,n){var r=n(4);n(25)("isFrozen",(function(e){return function(t){return!r(t)||!!e&&e(t)}}))},function(e,t,n){var r=n(4);n(25)("isSealed",(function(e){return function(t){return!r(t)||!!e&&e(t)}}))},function(e,t,n){var r=n(4);n(25)("isExtensible",(function(e){return function(t){return!!r(t)&&(!e||e(t))}}))},function(e,t,n){var r=n(0);r(r.S+r.F,"Object",{assign:n(101)})},function(e,t,n){var r=n(0);r(r.S,"Object",{is:n(102)})},function(e,t,n){var r=n(0);r(r.S,"Object",{setPrototypeOf:n(73).set})},function(e,t,n){"use strict";var r=n(44),i={};i[n(5)("toStringTag")]="z",i+""!="[object z]"&&n(12)(Object.prototype,"toString",(function(){return"[object "+r(this)+"]"}),!0)},function(e,t,n){var r=n(0);r(r.P,"Function",{bind:n(103)})},function(e,t,n){var r=n(8).f,i=Function.prototype,a=/^\s*function ([^ (]*)/;"name"in i||n(7)&&r(i,"name",{configurable:!0,get:function(){try{return(""+this).match(a)[1]}catch(e){return""}}})},function(e,t,n){"use strict";var r=n(4),i=n(17),a=n(5)("hasInstance"),o=Function.prototype;a in o||n(8).f(o,a,{value:function(e){if("function"!=typeof this||!r(e))return!1;if(!r(this.prototype))return e instanceof this;for(;e=i(e);)if(this.prototype===e)return!0;return!1}})},function(e,t,n){var r=n(0),i=n(105);r(r.G+r.F*(parseInt!=i),{parseInt:i})},function(e,t,n){var r=n(0),i=n(106);r(r.G+r.F*(parseFloat!=i),{parseFloat:i})},function(e,t,n){"use strict";var r=n(2),i=n(14),a=n(20),o=n(75),l=n(23),s=n(3),u=n(37).f,c=n(16).f,f=n(8).f,d=n(45).trim,p=r.Number,m=p,h=p.prototype,g="Number"==a(n(36)(h)),v="trim"in String.prototype,y=function(e){var t=l(e,!1);if("string"==typeof t&&t.length>2){var n,r,i,a=(t=v?t.trim():d(t,3)).charCodeAt(0);if(43===a||45===a){if(88===(n=t.charCodeAt(2))||120===n)return NaN}else if(48===a){switch(t.charCodeAt(1)){case 66:case 98:r=2,i=49;break;case 79:case 111:r=8,i=55;break;default:return+t}for(var o,s=t.slice(2),u=0,c=s.length;u<c;u++)if((o=s.charCodeAt(u))<48||o>i)return NaN;return parseInt(s,r)}}return+t};if(!p(" 0o1")||!p("0b1")||p("+0x1")){p=function(e){var t=arguments.length<1?0:e,n=this;return n instanceof p&&(g?s((function(){h.valueOf.call(n)})):"Number"!=a(n))?o(new m(y(t)),n,p):y(t)};for(var b,w=n(7)?u(m):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger".split(","),k=0;w.length>k;k++)i(m,b=w[k])&&!i(p,b)&&f(p,b,c(m,b));p.prototype=h,h.constructor=p,n(12)(r,"Number",p)}},function(e,t,n){"use strict";var r=n(0),i=n(21),a=n(107),o=n(76),l=1..toFixed,s=Math.floor,u=[0,0,0,0,0,0],c="Number.toFixed: incorrect invocation!",f=function(e,t){for(var n=-1,r=t;++n<6;)r+=e*u[n],u[n]=r%1e7,r=s(r/1e7)},d=function(e){for(var t=6,n=0;--t>=0;)n+=u[t],u[t]=s(n/e),n=n%e*1e7},p=function(){for(var e=6,t="";--e>=0;)if(""!==t||0===e||0!==u[e]){var n=String(u[e]);t=""===t?n:t+o.call("0",7-n.length)+n}return t},m=function(e,t,n){return 0===t?n:t%2==1?m(e,t-1,n*e):m(e*e,t/2,n)};r(r.P+r.F*(!!l&&("0.000"!==8e-5.toFixed(3)||"1"!==.9.toFixed(0)||"1.25"!==1.255.toFixed(2)||"1000000000000000128"!==(0xde0b6b3a7640080).toFixed(0))||!n(3)((function(){l.call({})}))),"Number",{toFixed:function(e){var t,n,r,l,s=a(this,c),u=i(e),h="",g="0";if(u<0||u>20)throw RangeError(c);if(s!=s)return"NaN";if(s<=-1e21||s>=1e21)return String(s);if(s<0&&(h="-",s=-s),s>1e-21)if(n=(t=function(e){for(var t=0,n=e;n>=4096;)t+=12,n/=4096;for(;n>=2;)t+=1,n/=2;return t}(s*m(2,69,1))-69)<0?s*m(2,-t,1):s/m(2,t,1),n*=4503599627370496,(t=52-t)>0){for(f(0,n),r=u;r>=7;)f(1e7,0),r-=7;for(f(m(10,r,1),0),r=t-1;r>=23;)d(1<<23),r-=23;d(1<<r),f(1,1),d(2),g=p()}else f(0,n),f(1<<-t,0),g=p()+o.call("0",u);return g=u>0?h+((l=g.length)<=u?"0."+o.call("0",u-l)+g:g.slice(0,l-u)+"."+g.slice(l-u)):h+g}})},function(e,t,n){"use strict";var r=n(0),i=n(3),a=n(107),o=1..toPrecision;r(r.P+r.F*(i((function(){return"1"!==o.call(1,void 0)}))||!i((function(){o.call({})}))),"Number",{toPrecision:function(e){var t=a(this,"Number#toPrecision: incorrect invocation!");return void 0===e?o.call(t):o.call(t,e)}})},function(e,t,n){var r=n(0);r(r.S,"Number",{EPSILON:Math.pow(2,-52)})},function(e,t,n){var r=n(0),i=n(2).isFinite;r(r.S,"Number",{isFinite:function(e){return"number"==typeof e&&i(e)}})},function(e,t,n){var r=n(0);r(r.S,"Number",{isInteger:n(108)})},function(e,t,n){var r=n(0);r(r.S,"Number",{isNaN:function(e){return e!=e}})},function(e,t,n){var r=n(0),i=n(108),a=Math.abs;r(r.S,"Number",{isSafeInteger:function(e){return i(e)&&a(e)<=9007199254740991}})},function(e,t,n){var r=n(0);r(r.S,"Number",{MAX_SAFE_INTEGER:9007199254740991})},function(e,t,n){var r=n(0);r(r.S,"Number",{MIN_SAFE_INTEGER:-9007199254740991})},function(e,t,n){var r=n(0),i=n(106);r(r.S+r.F*(Number.parseFloat!=i),"Number",{parseFloat:i})},function(e,t,n){var r=n(0),i=n(105);r(r.S+r.F*(Number.parseInt!=i),"Number",{parseInt:i})},function(e,t,n){var r=n(0),i=n(109),a=Math.sqrt,o=Math.acosh;r(r.S+r.F*!(o&&710==Math.floor(o(Number.MAX_VALUE))&&o(1/0)==1/0),"Math",{acosh:function(e){return(e=+e)<1?NaN:e>94906265.62425156?Math.log(e)+Math.LN2:i(e-1+a(e-1)*a(e+1))}})},function(e,t,n){var r=n(0),i=Math.asinh;r(r.S+r.F*!(i&&1/i(0)>0),"Math",{asinh:function e(t){return isFinite(t=+t)&&0!=t?t<0?-e(-t):Math.log(t+Math.sqrt(t*t+1)):t}})},function(e,t,n){var r=n(0),i=Math.atanh;r(r.S+r.F*!(i&&1/i(-0)<0),"Math",{atanh:function(e){return 0==(e=+e)?e:Math.log((1+e)/(1-e))/2}})},function(e,t,n){var r=n(0),i=n(77);r(r.S,"Math",{cbrt:function(e){return i(e=+e)*Math.pow(Math.abs(e),1/3)}})},function(e,t,n){var r=n(0);r(r.S,"Math",{clz32:function(e){return(e>>>=0)?31-Math.floor(Math.log(e+.5)*Math.LOG2E):32}})},function(e,t,n){var r=n(0),i=Math.exp;r(r.S,"Math",{cosh:function(e){return(i(e=+e)+i(-e))/2}})},function(e,t,n){var r=n(0),i=n(78);r(r.S+r.F*(i!=Math.expm1),"Math",{expm1:i})},function(e,t,n){var r=n(0);r(r.S,"Math",{fround:n(110)})},function(e,t,n){var r=n(0),i=Math.abs;r(r.S,"Math",{hypot:function(e,t){for(var n,r,a=0,o=0,l=arguments.length,s=0;o<l;)s<(n=i(arguments[o++]))?(a=a*(r=s/n)*r+1,s=n):a+=n>0?(r=n/s)*r:n;return s===1/0?1/0:s*Math.sqrt(a)}})},function(e,t,n){var r=n(0),i=Math.imul;r(r.S+r.F*n(3)((function(){return-5!=i(4294967295,5)||2!=i.length})),"Math",{imul:function(e,t){var n=+e,r=+t,i=65535&n,a=65535&r;return 0|i*a+((65535&n>>>16)*a+i*(65535&r>>>16)<<16>>>0)}})},function(e,t,n){var r=n(0);r(r.S,"Math",{log10:function(e){return Math.log(e)*Math.LOG10E}})},function(e,t,n){var r=n(0);r(r.S,"Math",{log1p:n(109)})},function(e,t,n){var r=n(0);r(r.S,"Math",{log2:function(e){return Math.log(e)/Math.LN2}})},function(e,t,n){var r=n(0);r(r.S,"Math",{sign:n(77)})},function(e,t,n){var r=n(0),i=n(78),a=Math.exp;r(r.S+r.F*n(3)((function(){return-2e-17!=!Math.sinh(-2e-17)})),"Math",{sinh:function(e){return Math.abs(e=+e)<1?(i(e)-i(-e))/2:(a(e-1)-a(-e-1))*(Math.E/2)}})},function(e,t,n){var r=n(0),i=n(78),a=Math.exp;r(r.S,"Math",{tanh:function(e){var t=i(e=+e),n=i(-e);return t==1/0?1:n==1/0?-1:(t-n)/(a(e)+a(-e))}})},function(e,t,n){var r=n(0);r(r.S,"Math",{trunc:function(e){return(e>0?Math.floor:Math.ceil)(e)}})},function(e,t,n){var r=n(0),i=n(35),a=String.fromCharCode,o=String.fromCodePoint;r(r.S+r.F*(!!o&&1!=o.length),"String",{fromCodePoint:function(e){for(var t,n=[],r=arguments.length,o=0;r>o;){if(t=+arguments[o++],i(t,1114111)!==t)throw RangeError(t+" is not a valid code point");n.push(t<65536?a(t):a(55296+((t-=65536)>>10),t%1024+56320))}return n.join("")}})},function(e,t,n){var r=n(0),i=n(15),a=n(6);r(r.S,"String",{raw:function(e){for(var t=i(e.raw),n=a(t.length),r=arguments.length,o=[],l=0;n>l;)o.push(String(t[l++])),l<r&&o.push(String(arguments[l]));return o.join("")}})},function(e,t,n){"use strict";n(45)("trim",(function(e){return function(){return e(this,3)}}))},function(e,t,n){"use strict";var r=n(56)(!0);n(79)(String,"String",(function(e){this._t=String(e),this._i=0}),(function(){var e,t=this._t,n=this._i;return n>=t.length?{value:void 0,done:!0}:(e=r(t,n),this._i+=e.length,{value:e,done:!1})}))},function(e,t,n){"use strict";var r=n(0),i=n(56)(!1);r(r.P,"String",{codePointAt:function(e){return i(this,e)}})},function(e,t,n){"use strict";var r=n(0),i=n(6),a=n(81),o="".endsWith;r(r.P+r.F*n(82)("endsWith"),"String",{endsWith:function(e){var t=a(this,e,"endsWith"),n=arguments.length>1?arguments[1]:void 0,r=i(t.length),l=void 0===n?r:Math.min(i(n),r),s=String(e);return o?o.call(t,s,l):t.slice(l-s.length,l)===s}})},function(e,t,n){"use strict";var r=n(0),i=n(81);r(r.P+r.F*n(82)("includes"),"String",{includes:function(e){return!!~i(this,e,"includes").indexOf(e,arguments.length>1?arguments[1]:void 0)}})},function(e,t,n){var r=n(0);r(r.P,"String",{repeat:n(76)})},function(e,t,n){"use strict";var r=n(0),i=n(6),a=n(81),o="".startsWith;r(r.P+r.F*n(82)("startsWith"),"String",{startsWith:function(e){var t=a(this,e,"startsWith"),n=i(Math.min(arguments.length>1?arguments[1]:void 0,t.length)),r=String(e);return o?o.call(t,r,n):t.slice(n,n+r.length)===r}})},function(e,t,n){"use strict";n(13)("anchor",(function(e){return function(t){return e(this,"a","name",t)}}))},function(e,t,n){"use strict";n(13)("big",(function(e){return function(){return e(this,"big","","")}}))},function(e,t,n){"use strict";n(13)("blink",(function(e){return function(){return e(this,"blink","","")}}))},function(e,t,n){"use strict";n(13)("bold",(function(e){return function(){return e(this,"b","","")}}))},function(e,t,n){"use strict";n(13)("fixed",(function(e){return function(){return e(this,"tt","","")}}))},function(e,t,n){"use strict";n(13)("fontcolor",(function(e){return function(t){return e(this,"font","color",t)}}))},function(e,t,n){"use strict";n(13)("fontsize",(function(e){return function(t){return e(this,"font","size",t)}}))},function(e,t,n){"use strict";n(13)("italics",(function(e){return function(){return e(this,"i","","")}}))},function(e,t,n){"use strict";n(13)("link",(function(e){return function(t){return e(this,"a","href",t)}}))},function(e,t,n){"use strict";n(13)("small",(function(e){return function(){return e(this,"small","","")}}))},function(e,t,n){"use strict";n(13)("strike",(function(e){return function(){return e(this,"strike","","")}}))},function(e,t,n){"use strict";n(13)("sub",(function(e){return function(){return e(this,"sub","","")}}))},function(e,t,n){"use strict";n(13)("sup",(function(e){return function(){return e(this,"sup","","")}}))},function(e,t,n){var r=n(0);r(r.S,"Date",{now:function(){return(new Date).getTime()}})},function(e,t,n){"use strict";var r=n(0),i=n(9),a=n(23);r(r.P+r.F*n(3)((function(){return null!==new Date(NaN).toJSON()||1!==Date.prototype.toJSON.call({toISOString:function(){return 1}})})),"Date",{toJSON:function(e){var t=i(this),n=a(t);return"number"!=typeof n||isFinite(n)?t.toISOString():null}})},function(e,t,n){var r=n(0),i=n(215);r(r.P+r.F*(Date.prototype.toISOString!==i),"Date",{toISOString:i})},function(e,t,n){"use strict";var r=n(3),i=Date.prototype.getTime,a=Date.prototype.toISOString,o=function(e){return e>9?e:"0"+e};e.exports=r((function(){return"0385-07-25T07:06:39.999Z"!=a.call(new Date(-50000000000001))}))||!r((function(){a.call(new Date(NaN))}))?function(){if(!isFinite(i.call(this)))throw RangeError("Invalid time value");var e=this,t=e.getUTCFullYear(),n=e.getUTCMilliseconds(),r=t<0?"-":t>9999?"+":"";return r+("00000"+Math.abs(t)).slice(r?-6:-4)+"-"+o(e.getUTCMonth()+1)+"-"+o(e.getUTCDate())+"T"+o(e.getUTCHours())+":"+o(e.getUTCMinutes())+":"+o(e.getUTCSeconds())+"."+(n>99?n:"0"+o(n))+"Z"}:a},function(e,t,n){var r=Date.prototype,i=r.toString,a=r.getTime;new Date(NaN)+""!="Invalid Date"&&n(12)(r,"toString",(function(){var e=a.call(this);return e==e?i.call(this):"Invalid Date"}))},function(e,t,n){var r=n(5)("toPrimitive"),i=Date.prototype;r in i||n(11)(i,r,n(218))},function(e,t,n){"use strict";var r=n(1),i=n(23);e.exports=function(e){if("string"!==e&&"number"!==e&&"default"!==e)throw TypeError("Incorrect hint");return i(r(this),"number"!=e)}},function(e,t,n){var r=n(0);r(r.S,"Array",{isArray:n(55)})},function(e,t,n){"use strict";var r=n(19),i=n(0),a=n(9),o=n(111),l=n(83),s=n(6),u=n(84),c=n(85);i(i.S+i.F*!n(58)((function(e){Array.from(e)})),"Array",{from:function(e){var t,n,i,f,d=a(e),p="function"==typeof this?this:Array,m=arguments.length,h=m>1?arguments[1]:void 0,g=void 0!==h,v=0,y=c(d);if(g&&(h=r(h,m>2?arguments[2]:void 0,2)),null==y||p==Array&&l(y))for(n=new p(t=s(d.length));t>v;v++)u(n,v,g?h(d[v],v):d[v]);else for(f=y.call(d),n=new p;!(i=f.next()).done;v++)u(n,v,g?o(f,h,[i.value,v],!0):i.value);return n.length=v,n}})},function(e,t,n){"use strict";var r=n(0),i=n(84);r(r.S+r.F*n(3)((function(){function e(){}return!(Array.of.call(e)instanceof e)})),"Array",{of:function(){for(var e=0,t=arguments.length,n=new("function"==typeof this?this:Array)(t);t>e;)i(n,e,arguments[e++]);return n.length=t,n}})},function(e,t,n){"use strict";var r=n(0),i=n(15),a=[].join;r(r.P+r.F*(n(48)!=Object||!n(22)(a)),"Array",{join:function(e){return a.call(i(this),void 0===e?",":e)}})},function(e,t,n){"use strict";var r=n(0),i=n(72),a=n(20),o=n(35),l=n(6),s=[].slice;r(r.P+r.F*n(3)((function(){i&&s.call(i)})),"Array",{slice:function(e,t){var n=l(this.length),r=a(this);if(t=void 0===t?n:t,"Array"==r)return s.call(this,e,t);for(var i=o(e,n),u=o(t,n),c=l(u-i),f=new Array(c),d=0;d<c;d++)f[d]="String"==r?this.charAt(i+d):this[i+d];return f}})},function(e,t,n){"use strict";var r=n(0),i=n(10),a=n(9),o=n(3),l=[].sort,s=[1,2,3];r(r.P+r.F*(o((function(){s.sort(void 0)}))||!o((function(){s.sort(null)}))||!n(22)(l)),"Array",{sort:function(e){return void 0===e?l.call(a(this)):l.call(a(this),i(e))}})},function(e,t,n){"use strict";var r=n(0),i=n(26)(0),a=n(22)([].forEach,!0);r(r.P+r.F*!a,"Array",{forEach:function(e){return i(this,e,arguments[1])}})},function(e,t,n){var r=n(4),i=n(55),a=n(5)("species");e.exports=function(e){var t;return i(e)&&("function"!=typeof(t=e.constructor)||t!==Array&&!i(t.prototype)||(t=void 0),r(t)&&null===(t=t[a])&&(t=void 0)),void 0===t?Array:t}},function(e,t,n){"use strict";var r=n(0),i=n(26)(1);r(r.P+r.F*!n(22)([].map,!0),"Array",{map:function(e){return i(this,e,arguments[1])}})},function(e,t,n){"use strict";var r=n(0),i=n(26)(2);r(r.P+r.F*!n(22)([].filter,!0),"Array",{filter:function(e){return i(this,e,arguments[1])}})},function(e,t,n){"use strict";var r=n(0),i=n(26)(3);r(r.P+r.F*!n(22)([].some,!0),"Array",{some:function(e){return i(this,e,arguments[1])}})},function(e,t,n){"use strict";var r=n(0),i=n(26)(4);r(r.P+r.F*!n(22)([].every,!0),"Array",{every:function(e){return i(this,e,arguments[1])}})},function(e,t,n){"use strict";var r=n(0),i=n(112);r(r.P+r.F*!n(22)([].reduce,!0),"Array",{reduce:function(e){return i(this,e,arguments.length,arguments[1],!1)}})},function(e,t,n){"use strict";var r=n(0),i=n(112);r(r.P+r.F*!n(22)([].reduceRight,!0),"Array",{reduceRight:function(e){return i(this,e,arguments.length,arguments[1],!0)}})},function(e,t,n){"use strict";var r=n(0),i=n(53)(!1),a=[].indexOf,o=!!a&&1/[1].indexOf(1,-0)<0;r(r.P+r.F*(o||!n(22)(a)),"Array",{indexOf:function(e){return o?a.apply(this,arguments)||0:i(this,e,arguments[1])}})},function(e,t,n){"use strict";var r=n(0),i=n(15),a=n(21),o=n(6),l=[].lastIndexOf,s=!!l&&1/[1].lastIndexOf(1,-0)<0;r(r.P+r.F*(s||!n(22)(l)),"Array",{lastIndexOf:function(e){if(s)return l.apply(this,arguments)||0;var t=i(this),n=o(t.length),r=n-1;for(arguments.length>1&&(r=Math.min(r,a(arguments[1]))),r<0&&(r=n+r);r>=0;r--)if(r in t&&t[r]===e)return r||0;return-1}})},function(e,t,n){var r=n(0);r(r.P,"Array",{copyWithin:n(113)}),n(31)("copyWithin")},function(e,t,n){var r=n(0);r(r.P,"Array",{fill:n(87)}),n(31)("fill")},function(e,t,n){"use strict";var r=n(0),i=n(26)(5),a=!0;"find"in[]&&Array(1).find((function(){a=!1})),r(r.P+r.F*a,"Array",{find:function(e){return i(this,e,arguments.length>1?arguments[1]:void 0)}}),n(31)("find")},function(e,t,n){"use strict";var r=n(0),i=n(26)(6),a="findIndex",o=!0;a in[]&&Array(1)[a]((function(){o=!1})),r(r.P+r.F*o,"Array",{findIndex:function(e){return i(this,e,arguments.length>1?arguments[1]:void 0)}}),n(31)(a)},function(e,t,n){n(38)("Array")},function(e,t,n){var r=n(2),i=n(75),a=n(8).f,o=n(37).f,l=n(57),s=n(50),u=r.RegExp,c=u,f=u.prototype,d=/a/g,p=/a/g,m=new u(d)!==d;if(n(7)&&(!m||n(3)((function(){return p[n(5)("match")]=!1,u(d)!=d||u(p)==p||"/a/i"!=u(d,"i")})))){u=function(e,t){var n=this instanceof u,r=l(e),a=void 0===t;return!n&&r&&e.constructor===u&&a?e:i(m?new c(r&&!a?e.source:e,t):c((r=e instanceof u)?e.source:e,r&&a?s.call(e):t),n?this:f,u)};for(var h=function(e){e in u||a(u,e,{configurable:!0,get:function(){return c[e]},set:function(t){c[e]=t}})},g=o(c),v=0;g.length>v;)h(g[v++]);f.constructor=u,u.prototype=f,n(12)(r,"RegExp",u)}n(38)("RegExp")},function(e,t,n){"use strict";n(116);var r=n(1),i=n(50),a=n(7),o=/./.toString,l=function(e){n(12)(RegExp.prototype,"toString",e,!0)};n(3)((function(){return"/a/b"!=o.call({source:"a",flags:"b"})}))?l((function(){var e=r(this);return"/".concat(e.source,"/","flags"in e?e.flags:!a&&e instanceof RegExp?i.call(e):void 0)})):"toString"!=o.name&&l((function(){return o.call(this)}))},function(e,t,n){"use strict";var r=n(1),i=n(6),a=n(90),o=n(59);n(60)("match",1,(function(e,t,n,l){return[function(n){var r=e(this),i=null==n?void 0:n[t];return void 0!==i?i.call(n,r):new RegExp(n)[t](String(r))},function(e){var t=l(n,e,this);if(t.done)return t.value;var s=r(e),u=String(this);if(!s.global)return o(s,u);var c=s.unicode;s.lastIndex=0;for(var f,d=[],p=0;null!==(f=o(s,u));){var m=String(f[0]);d[p]=m,""===m&&(s.lastIndex=a(u,i(s.lastIndex),c)),p++}return 0===p?null:d}]}))},function(e,t,n){"use strict";var r=n(1),i=n(9),a=n(6),o=n(21),l=n(90),s=n(59),u=Math.max,c=Math.min,f=Math.floor,d=/\$([$&`']|\d\d?|<[^>]*>)/g,p=/\$([$&`']|\d\d?)/g;n(60)("replace",2,(function(e,t,n,m){return[function(r,i){var a=e(this),o=null==r?void 0:r[t];return void 0!==o?o.call(r,a,i):n.call(String(a),r,i)},function(e,t){var i=m(n,e,this,t);if(i.done)return i.value;var f=r(e),d=String(this),p="function"==typeof t;p||(t=String(t));var g=f.global;if(g){var v=f.unicode;f.lastIndex=0}for(var y=[];;){var b=s(f,d);if(null===b)break;if(y.push(b),!g)break;""===String(b[0])&&(f.lastIndex=l(d,a(f.lastIndex),v))}for(var w,k="",_=0,E=0;E<y.length;E++){b=y[E];for(var x=String(b[0]),z=u(c(o(b.index),d.length),0),S=[],T=1;T<b.length;T++)S.push(void 0===(w=b[T])?w:String(w));var N=b.groups;if(p){var P=[x].concat(S,z,d);void 0!==N&&P.push(N);var j=String(t.apply(void 0,P))}else j=h(x,d,z,S,N,t);z>=_&&(k+=d.slice(_,z)+j,_=z+x.length)}return k+d.slice(_)}];function h(e,t,r,a,o,l){var s=r+e.length,u=a.length,c=p;return void 0!==o&&(o=i(o),c=d),n.call(l,c,(function(n,i){var l;switch(i.charAt(0)){case"$":return"$";case"&":return e;case"`":return t.slice(0,r);case"'":return t.slice(s);case"<":l=o[i.slice(1,-1)];break;default:var c=+i;if(0===c)return n;if(c>u){var d=f(c/10);return 0===d?n:d<=u?void 0===a[d-1]?i.charAt(1):a[d-1]+i.charAt(1):n}l=a[c-1]}return void 0===l?"":l}))}}))},function(e,t,n){"use strict";var r=n(1),i=n(102),a=n(59);n(60)("search",1,(function(e,t,n,o){return[function(n){var r=e(this),i=null==n?void 0:n[t];return void 0!==i?i.call(n,r):new RegExp(n)[t](String(r))},function(e){var t=o(n,e,this);if(t.done)return t.value;var l=r(e),s=String(this),u=l.lastIndex;i(u,0)||(l.lastIndex=0);var c=a(l,s);return i(l.lastIndex,u)||(l.lastIndex=u),null===c?-1:c.index}]}))},function(e,t,n){"use strict";var r=n(57),i=n(1),a=n(51),o=n(90),l=n(6),s=n(59),u=n(89),c=n(3),f=Math.min,d=[].push,p="length",m=!c((function(){RegExp(4294967295,"y")}));n(60)("split",2,(function(e,t,n,c){var h;return h="c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1)[p]||2!="ab".split(/(?:ab)*/)[p]||4!=".".split(/(.?)(.?)/)[p]||".".split(/()()/)[p]>1||"".split(/.?/)[p]?function(e,t){var i=String(this);if(void 0===e&&0===t)return[];if(!r(e))return n.call(i,e,t);for(var a,o,l,s=[],c=(e.ignoreCase?"i":"")+(e.multiline?"m":"")+(e.unicode?"u":"")+(e.sticky?"y":""),f=0,m=void 0===t?4294967295:t>>>0,h=new RegExp(e.source,c+"g");(a=u.call(h,i))&&!((o=h.lastIndex)>f&&(s.push(i.slice(f,a.index)),a[p]>1&&a.index<i[p]&&d.apply(s,a.slice(1)),l=a[0][p],f=o,s[p]>=m));)h.lastIndex===a.index&&h.lastIndex++;return f===i[p]?!l&&h.test("")||s.push(""):s.push(i.slice(f)),s[p]>m?s.slice(0,m):s}:"0".split(void 0,0)[p]?function(e,t){return void 0===e&&0===t?[]:n.call(this,e,t)}:n,[function(n,r){var i=e(this),a=null==n?void 0:n[t];return void 0!==a?a.call(n,i,r):h.call(String(i),n,r)},function(e,t){var r=c(h,e,this,t,h!==n);if(r.done)return r.value;var u=i(e),d=String(this),p=a(u,RegExp),g=u.unicode,v=(u.ignoreCase?"i":"")+(u.multiline?"m":"")+(u.unicode?"u":"")+(m?"y":"g"),y=new p(m?u:"^(?:"+u.source+")",v),b=void 0===t?4294967295:t>>>0;if(0===b)return[];if(0===d.length)return null===s(y,d)?[d]:[];for(var w=0,k=0,_=[];k<d.length;){y.lastIndex=m?k:0;var E,x=s(y,m?d:d.slice(k));if(null===x||(E=f(l(y.lastIndex+(m?0:k)),d.length))===w)k=o(d,k,g);else{if(_.push(d.slice(w,k)),_.length===b)return _;for(var z=1;z<=x.length-1;z++)if(_.push(x[z]),_.length===b)return _;k=w=E}}return _.push(d.slice(w)),_}]}))},function(e,t,n){"use strict";var r,i,a,o,l=n(29),s=n(2),u=n(19),c=n(44),f=n(0),d=n(4),p=n(10),m=n(39),h=n(40),g=n(51),v=n(91).set,y=n(92)(),b=n(93),w=n(117),k=n(61),_=n(118),E=s.TypeError,x=s.process,z=x&&x.versions,S=z&&z.v8||"",T=s.Promise,N="process"==c(x),P=function(){},j=i=b.f,C=!!function(){try{var e=T.resolve(1),t=(e.constructor={})[n(5)("species")]=function(e){e(P,P)};return(N||"function"==typeof PromiseRejectionEvent)&&e.then(P)instanceof t&&0!==S.indexOf("6.6")&&-1===k.indexOf("Chrome/66")}catch(e){}}(),I=function(e){var t;return!(!d(e)||"function"!=typeof(t=e.then))&&t},M=function(e,t){if(!e._n){e._n=!0;var n=e._c;y((function(){for(var r=e._v,i=1==e._s,a=0,o=function(t){var n,a,o,l=i?t.ok:t.fail,s=t.resolve,u=t.reject,c=t.domain;try{l?(i||(2==e._h&&L(e),e._h=1),!0===l?n=r:(c&&c.enter(),n=l(r),c&&(c.exit(),o=!0)),n===t.promise?u(E("Promise-chain cycle")):(a=I(n))?a.call(n,s,u):s(n)):u(r)}catch(e){c&&!o&&c.exit(),u(e)}};n.length>a;)o(n[a++]);e._c=[],e._n=!1,t&&!e._h&&O(e)}))}},O=function(e){v.call(s,(function(){var t,n,r,i=e._v,a=D(e);if(a&&(t=w((function(){N?x.emit("unhandledRejection",i,e):(n=s.onunhandledrejection)?n({promise:e,reason:i}):(r=s.console)&&r.error&&r.error("Unhandled promise rejection",i)})),e._h=N||D(e)?2:1),e._a=void 0,a&&t.e)throw t.v}))},D=function(e){return 1!==e._h&&0===(e._a||e._c).length},L=function(e){v.call(s,(function(){var t;N?x.emit("rejectionHandled",e):(t=s.onrejectionhandled)&&t({promise:e,reason:e._v})}))},A=function(e){var t=this;t._d||(t._d=!0,(t=t._w||t)._v=e,t._s=2,t._a||(t._a=t._c.slice()),M(t,!0))},F=function(e){var t,n=this;if(!n._d){n._d=!0,n=n._w||n;try{if(n===e)throw E("Promise can't be resolved itself");(t=I(e))?y((function(){var r={_w:n,_d:!1};try{t.call(e,u(F,r,1),u(A,r,1))}catch(e){A.call(r,e)}})):(n._v=e,n._s=1,M(n,!1))}catch(e){A.call({_w:n,_d:!1},e)}}};C||(T=function(e){m(this,T,"Promise","_h"),p(e),r.call(this);try{e(u(F,this,1),u(A,this,1))}catch(e){A.call(this,e)}},(r=function(e){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1}).prototype=n(41)(T.prototype,{then:function(e,t){var n=j(g(this,T));return n.ok="function"!=typeof e||e,n.fail="function"==typeof t&&t,n.domain=N?x.domain:void 0,this._c.push(n),this._a&&this._a.push(n),this._s&&M(this,!1),n.promise},catch:function(e){return this.then(void 0,e)}}),a=function(){var e=new r;this.promise=e,this.resolve=u(F,e,1),this.reject=u(A,e,1)},b.f=j=function(e){return e===T||e===o?new a(e):i(e)}),f(f.G+f.W+f.F*!C,{Promise:T}),n(43)(T,"Promise"),n(38)("Promise"),o=n(18).Promise,f(f.S+f.F*!C,"Promise",{reject:function(e){var t=j(this);return(0,t.reject)(e),t.promise}}),f(f.S+f.F*(l||!C),"Promise",{resolve:function(e){return _(l&&this===o?T:this,e)}}),f(f.S+f.F*!(C&&n(58)((function(e){T.all(e).catch(P)}))),"Promise",{all:function(e){var t=this,n=j(t),r=n.resolve,i=n.reject,a=w((function(){var n=[],a=0,o=1;h(e,!1,(function(e){var l=a++,s=!1;n.push(void 0),o++,t.resolve(e).then((function(e){s||(s=!0,n[l]=e,--o||r(n))}),i)})),--o||r(n)}));return a.e&&i(a.v),n.promise},race:function(e){var t=this,n=j(t),r=n.reject,i=w((function(){h(e,!1,(function(e){t.resolve(e).then(n.resolve,r)}))}));return i.e&&r(i.v),n.promise}})},function(e,t,n){"use strict";var r=n(123),i=n(42);n(62)("WeakSet",(function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}}),{add:function(e){return r.def(i(this,"WeakSet"),e,!0)}},r,!1,!0)},function(e,t,n){"use strict";var r=n(0),i=n(63),a=n(94),o=n(1),l=n(35),s=n(6),u=n(4),c=n(2).ArrayBuffer,f=n(51),d=a.ArrayBuffer,p=a.DataView,m=i.ABV&&c.isView,h=d.prototype.slice,g=i.VIEW;r(r.G+r.W+r.F*(c!==d),{ArrayBuffer:d}),r(r.S+r.F*!i.CONSTR,"ArrayBuffer",{isView:function(e){return m&&m(e)||u(e)&&g in e}}),r(r.P+r.U+r.F*n(3)((function(){return!new d(2).slice(1,void 0).byteLength})),"ArrayBuffer",{slice:function(e,t){if(void 0!==h&&void 0===t)return h.call(o(this),e);for(var n=o(this).byteLength,r=l(e,n),i=l(void 0===t?n:t,n),a=new(f(this,d))(s(i-r)),u=new p(this),c=new p(a),m=0;r<i;)c.setUint8(m++,u.getUint8(r++));return a}}),n(38)("ArrayBuffer")},function(e,t,n){var r=n(0);r(r.G+r.W+r.F*!n(63).ABV,{DataView:n(94).DataView})},function(e,t,n){n(27)("Int8",1,(function(e){return function(t,n,r){return e(this,t,n,r)}}))},function(e,t,n){n(27)("Uint8",1,(function(e){return function(t,n,r){return e(this,t,n,r)}}))},function(e,t,n){n(27)("Uint8",1,(function(e){return function(t,n,r){return e(this,t,n,r)}}),!0)},function(e,t,n){n(27)("Int16",2,(function(e){return function(t,n,r){return e(this,t,n,r)}}))},function(e,t,n){n(27)("Uint16",2,(function(e){return function(t,n,r){return e(this,t,n,r)}}))},function(e,t,n){n(27)("Int32",4,(function(e){return function(t,n,r){return e(this,t,n,r)}}))},function(e,t,n){n(27)("Uint32",4,(function(e){return function(t,n,r){return e(this,t,n,r)}}))},function(e,t,n){n(27)("Float32",4,(function(e){return function(t,n,r){return e(this,t,n,r)}}))},function(e,t,n){n(27)("Float64",8,(function(e){return function(t,n,r){return e(this,t,n,r)}}))},function(e,t,n){var r=n(0),i=n(10),a=n(1),o=(n(2).Reflect||{}).apply,l=Function.apply;r(r.S+r.F*!n(3)((function(){o((function(){}))})),"Reflect",{apply:function(e,t,n){var r=i(e),s=a(n);return o?o(r,t,s):l.call(r,t,s)}})},function(e,t,n){var r=n(0),i=n(36),a=n(10),o=n(1),l=n(4),s=n(3),u=n(103),c=(n(2).Reflect||{}).construct,f=s((function(){function e(){}return!(c((function(){}),[],e)instanceof e)})),d=!s((function(){c((function(){}))}));r(r.S+r.F*(f||d),"Reflect",{construct:function(e,t){a(e),o(t);var n=arguments.length<3?e:a(arguments[2]);if(d&&!f)return c(e,t,n);if(e==n){switch(t.length){case 0:return new e;case 1:return new e(t[0]);case 2:return new e(t[0],t[1]);case 3:return new e(t[0],t[1],t[2]);case 4:return new e(t[0],t[1],t[2],t[3])}var r=[null];return r.push.apply(r,t),new(u.apply(e,r))}var s=n.prototype,p=i(l(s)?s:Object.prototype),m=Function.apply.call(e,p,t);return l(m)?m:p}})},function(e,t,n){var r=n(8),i=n(0),a=n(1),o=n(23);i(i.S+i.F*n(3)((function(){Reflect.defineProperty(r.f({},1,{value:1}),1,{value:2})})),"Reflect",{defineProperty:function(e,t,n){a(e),t=o(t,!0),a(n);try{return r.f(e,t,n),!0}catch(e){return!1}}})},function(e,t,n){var r=n(0),i=n(16).f,a=n(1);r(r.S,"Reflect",{deleteProperty:function(e,t){var n=i(a(e),t);return!(n&&!n.configurable)&&delete e[t]}})},function(e,t,n){"use strict";var r=n(0),i=n(1),a=function(e){this._t=i(e),this._i=0;var t,n=this._k=[];for(t in e)n.push(t)};n(80)(a,"Object",(function(){var e,t=this._k;do{if(this._i>=t.length)return{value:void 0,done:!0}}while(!((e=t[this._i++])in this._t));return{value:e,done:!1}})),r(r.S,"Reflect",{enumerate:function(e){return new a(e)}})},function(e,t,n){var r=n(16),i=n(17),a=n(14),o=n(0),l=n(4),s=n(1);o(o.S,"Reflect",{get:function e(t,n){var o,u,c=arguments.length<3?t:arguments[2];return s(t)===c?t[n]:(o=r.f(t,n))?a(o,"value")?o.value:void 0!==o.get?o.get.call(c):void 0:l(u=i(t))?e(u,n,c):void 0}})},function(e,t,n){var r=n(16),i=n(0),a=n(1);i(i.S,"Reflect",{getOwnPropertyDescriptor:function(e,t){return r.f(a(e),t)}})},function(e,t,n){var r=n(0),i=n(17),a=n(1);r(r.S,"Reflect",{getPrototypeOf:function(e){return i(a(e))}})},function(e,t,n){var r=n(0);r(r.S,"Reflect",{has:function(e,t){return t in e}})},function(e,t,n){var r=n(0),i=n(1),a=Object.isExtensible;r(r.S,"Reflect",{isExtensible:function(e){return i(e),!a||a(e)}})},function(e,t,n){var r=n(0);r(r.S,"Reflect",{ownKeys:n(125)})},function(e,t,n){var r=n(0),i=n(1),a=Object.preventExtensions;r(r.S,"Reflect",{preventExtensions:function(e){i(e);try{return a&&a(e),!0}catch(e){return!1}}})},function(e,t,n){var r=n(8),i=n(16),a=n(17),o=n(14),l=n(0),s=n(32),u=n(1),c=n(4);l(l.S,"Reflect",{set:function e(t,n,l){var f,d,p=arguments.length<4?t:arguments[3],m=i.f(u(t),n);if(!m){if(c(d=a(t)))return e(d,n,l,p);m=s(0)}if(o(m,"value")){if(!1===m.writable||!c(p))return!1;if(f=i.f(p,n)){if(f.get||f.set||!1===f.writable)return!1;f.value=l,r.f(p,n,f)}else r.f(p,n,s(0,l));return!0}return void 0!==m.set&&(m.set.call(p,l),!0)}})},function(e,t,n){var r=n(0),i=n(73);i&&r(r.S,"Reflect",{setPrototypeOf:function(e,t){i.check(e,t);try{return i.set(e,t),!0}catch(e){return!1}}})},function(e,t,n){"use strict";var r=n(0),i=n(53)(!0);r(r.P,"Array",{includes:function(e){return i(this,e,arguments.length>1?arguments[1]:void 0)}}),n(31)("includes")},function(e,t,n){"use strict";var r=n(0),i=n(126),a=n(9),o=n(6),l=n(10),s=n(86);r(r.P,"Array",{flatMap:function(e){var t,n,r=a(this);return l(e),t=o(r.length),n=s(r,0),i(n,r,r,t,0,1,e,arguments[1]),n}}),n(31)("flatMap")},function(e,t,n){"use strict";var r=n(0),i=n(126),a=n(9),o=n(6),l=n(21),s=n(86);r(r.P,"Array",{flatten:function(){var e=arguments[0],t=a(this),n=o(t.length),r=s(t,0);return i(r,t,t,n,0,void 0===e?1:l(e)),r}}),n(31)("flatten")},function(e,t,n){"use strict";var r=n(0),i=n(56)(!0);r(r.P,"String",{at:function(e){return i(this,e)}})},function(e,t,n){"use strict";var r=n(0),i=n(127),a=n(61),o=/Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(a);r(r.P+r.F*o,"String",{padStart:function(e){return i(this,e,arguments.length>1?arguments[1]:void 0,!0)}})},function(e,t,n){"use strict";var r=n(0),i=n(127),a=n(61),o=/Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(a);r(r.P+r.F*o,"String",{padEnd:function(e){return i(this,e,arguments.length>1?arguments[1]:void 0,!1)}})},function(e,t,n){"use strict";n(45)("trimLeft",(function(e){return function(){return e(this,1)}}),"trimStart")},function(e,t,n){"use strict";n(45)("trimRight",(function(e){return function(){return e(this,2)}}),"trimEnd")},function(e,t,n){"use strict";var r=n(0),i=n(24),a=n(6),o=n(57),l=n(50),s=RegExp.prototype,u=function(e,t){this._r=e,this._s=t};n(80)(u,"RegExp String",(function(){var e=this._r.exec(this._s);return{value:e,done:null===e}})),r(r.P,"String",{matchAll:function(e){if(i(this),!o(e))throw TypeError(e+" is not a regexp!");var t=String(this),n="flags"in s?String(e.flags):l.call(e),r=new RegExp(e.source,~n.indexOf("g")?n:"g"+n);return r.lastIndex=a(e.lastIndex),new u(r,t)}})},function(e,t,n){n(69)("asyncIterator")},function(e,t,n){n(69)("observable")},function(e,t,n){var r=n(0),i=n(125),a=n(15),o=n(16),l=n(84);r(r.S,"Object",{getOwnPropertyDescriptors:function(e){for(var t,n,r=a(e),s=o.f,u=i(r),c={},f=0;u.length>f;)void 0!==(n=s(r,t=u[f++]))&&l(c,t,n);return c}})},function(e,t,n){var r=n(0),i=n(128)(!1);r(r.S,"Object",{values:function(e){return i(e)}})},function(e,t,n){var r=n(0),i=n(128)(!0);r(r.S,"Object",{entries:function(e){return i(e)}})},function(e,t,n){"use strict";var r=n(0),i=n(9),a=n(10),o=n(8);n(7)&&r(r.P+n(64),"Object",{__defineGetter__:function(e,t){o.f(i(this),e,{get:a(t),enumerable:!0,configurable:!0})}})},function(e,t,n){"use strict";var r=n(0),i=n(9),a=n(10),o=n(8);n(7)&&r(r.P+n(64),"Object",{__defineSetter__:function(e,t){o.f(i(this),e,{set:a(t),enumerable:!0,configurable:!0})}})},function(e,t,n){"use strict";var r=n(0),i=n(9),a=n(23),o=n(17),l=n(16).f;n(7)&&r(r.P+n(64),"Object",{__lookupGetter__:function(e){var t,n=i(this),r=a(e,!0);do{if(t=l(n,r))return t.get}while(n=o(n))}})},function(e,t,n){"use strict";var r=n(0),i=n(9),a=n(23),o=n(17),l=n(16).f;n(7)&&r(r.P+n(64),"Object",{__lookupSetter__:function(e){var t,n=i(this),r=a(e,!0);do{if(t=l(n,r))return t.set}while(n=o(n))}})},function(e,t,n){var r=n(0);r(r.P+r.R,"Map",{toJSON:n(129)("Map")})},function(e,t,n){var r=n(0);r(r.P+r.R,"Set",{toJSON:n(129)("Set")})},function(e,t,n){n(65)("Map")},function(e,t,n){n(65)("Set")},function(e,t,n){n(65)("WeakMap")},function(e,t,n){n(65)("WeakSet")},function(e,t,n){n(66)("Map")},function(e,t,n){n(66)("Set")},function(e,t,n){n(66)("WeakMap")},function(e,t,n){n(66)("WeakSet")},function(e,t,n){var r=n(0);r(r.G,{global:n(2)})},function(e,t,n){var r=n(0);r(r.S,"System",{global:n(2)})},function(e,t,n){var r=n(0),i=n(20);r(r.S,"Error",{isError:function(e){return"Error"===i(e)}})},function(e,t,n){var r=n(0);r(r.S,"Math",{clamp:function(e,t,n){return Math.min(n,Math.max(t,e))}})},function(e,t,n){var r=n(0);r(r.S,"Math",{DEG_PER_RAD:Math.PI/180})},function(e,t,n){var r=n(0),i=180/Math.PI;r(r.S,"Math",{degrees:function(e){return e*i}})},function(e,t,n){var r=n(0),i=n(131),a=n(110);r(r.S,"Math",{fscale:function(e,t,n,r,o){return a(i(e,t,n,r,o))}})},function(e,t,n){var r=n(0);r(r.S,"Math",{iaddh:function(e,t,n,r){var i=e>>>0,a=n>>>0;return(t>>>0)+(r>>>0)+((i&a|(i|a)&~(i+a>>>0))>>>31)|0}})},function(e,t,n){var r=n(0);r(r.S,"Math",{isubh:function(e,t,n,r){var i=e>>>0,a=n>>>0;return(t>>>0)-(r>>>0)-((~i&a|~(i^a)&i-a>>>0)>>>31)|0}})},function(e,t,n){var r=n(0);r(r.S,"Math",{imulh:function(e,t){var n=+e,r=+t,i=65535&n,a=65535&r,o=n>>16,l=r>>16,s=(o*a>>>0)+(i*a>>>16);return o*l+(s>>16)+((i*l>>>0)+(65535&s)>>16)}})},function(e,t,n){var r=n(0);r(r.S,"Math",{RAD_PER_DEG:180/Math.PI})},function(e,t,n){var r=n(0),i=Math.PI/180;r(r.S,"Math",{radians:function(e){return e*i}})},function(e,t,n){var r=n(0);r(r.S,"Math",{scale:n(131)})},function(e,t,n){var r=n(0);r(r.S,"Math",{umulh:function(e,t){var n=+e,r=+t,i=65535&n,a=65535&r,o=n>>>16,l=r>>>16,s=(o*a>>>0)+(i*a>>>16);return o*l+(s>>>16)+((i*l>>>0)+(65535&s)>>>16)}})},function(e,t,n){var r=n(0);r(r.S,"Math",{signbit:function(e){return(e=+e)!=e?e:0==e?1/e==1/0:e>0}})},function(e,t,n){"use strict";var r=n(0),i=n(18),a=n(2),o=n(51),l=n(118);r(r.P+r.R,"Promise",{finally:function(e){var t=o(this,i.Promise||a.Promise),n="function"==typeof e;return this.then(n?function(n){return l(t,e()).then((function(){return n}))}:e,n?function(n){return l(t,e()).then((function(){throw n}))}:e)}})},function(e,t,n){"use strict";var r=n(0),i=n(93),a=n(117);r(r.S,"Promise",{try:function(e){var t=i.f(this),n=a(e);return(n.e?t.reject:t.resolve)(n.v),t.promise}})},function(e,t,n){var r=n(28),i=n(1),a=r.key,o=r.set;r.exp({defineMetadata:function(e,t,n,r){o(e,t,i(n),a(r))}})},function(e,t,n){var r=n(28),i=n(1),a=r.key,o=r.map,l=r.store;r.exp({deleteMetadata:function(e,t){var n=arguments.length<3?void 0:a(arguments[2]),r=o(i(t),n,!1);if(void 0===r||!r.delete(e))return!1;if(r.size)return!0;var s=l.get(t);return s.delete(n),!!s.size||l.delete(t)}})},function(e,t,n){var r=n(28),i=n(1),a=n(17),o=r.has,l=r.get,s=r.key,u=function(e,t,n){if(o(e,t,n))return l(e,t,n);var r=a(t);return null!==r?u(e,r,n):void 0};r.exp({getMetadata:function(e,t){return u(e,i(t),arguments.length<3?void 0:s(arguments[2]))}})},function(e,t,n){var r=n(121),i=n(130),a=n(28),o=n(1),l=n(17),s=a.keys,u=a.key,c=function(e,t){var n=s(e,t),a=l(e);if(null===a)return n;var o=c(a,t);return o.length?n.length?i(new r(n.concat(o))):o:n};a.exp({getMetadataKeys:function(e){return c(o(e),arguments.length<2?void 0:u(arguments[1]))}})},function(e,t,n){var r=n(28),i=n(1),a=r.get,o=r.key;r.exp({getOwnMetadata:function(e,t){return a(e,i(t),arguments.length<3?void 0:o(arguments[2]))}})},function(e,t,n){var r=n(28),i=n(1),a=r.keys,o=r.key;r.exp({getOwnMetadataKeys:function(e){return a(i(e),arguments.length<2?void 0:o(arguments[1]))}})},function(e,t,n){var r=n(28),i=n(1),a=n(17),o=r.has,l=r.key,s=function(e,t,n){if(o(e,t,n))return!0;var r=a(t);return null!==r&&s(e,r,n)};r.exp({hasMetadata:function(e,t){return s(e,i(t),arguments.length<3?void 0:l(arguments[2]))}})},function(e,t,n){var r=n(28),i=n(1),a=r.has,o=r.key;r.exp({hasOwnMetadata:function(e,t){return a(e,i(t),arguments.length<3?void 0:o(arguments[2]))}})},function(e,t,n){var r=n(28),i=n(1),a=n(10),o=r.key,l=r.set;r.exp({metadata:function(e,t){return function(n,r){l(e,t,(void 0!==r?i:a)(n),o(r))}}})},function(e,t,n){var r=n(0),i=n(92)(),a=n(2).process,o="process"==n(20)(a);r(r.G,{asap:function(e){var t=o&&a.domain;i(t?t.bind(e):e)}})},function(e,t,n){"use strict";var r=n(0),i=n(2),a=n(18),o=n(92)(),l=n(5)("observable"),s=n(10),u=n(1),c=n(39),f=n(41),d=n(11),p=n(40),m=p.RETURN,h=function(e){return null==e?void 0:s(e)},g=function(e){var t=e._c;t&&(e._c=void 0,t())},v=function(e){return void 0===e._o},y=function(e){v(e)||(e._o=void 0,g(e))},b=function(e,t){u(e),this._c=void 0,this._o=e,e=new w(this);try{var n=t(e),r=n;null!=n&&("function"==typeof n.unsubscribe?n=function(){r.unsubscribe()}:s(n),this._c=n)}catch(t){return void e.error(t)}v(this)&&g(this)};b.prototype=f({},{unsubscribe:function(){y(this)}});var w=function(e){this._s=e};w.prototype=f({},{next:function(e){var t=this._s;if(!v(t)){var n=t._o;try{var r=h(n.next);if(r)return r.call(n,e)}catch(e){try{y(t)}finally{throw e}}}},error:function(e){var t=this._s;if(v(t))throw e;var n=t._o;t._o=void 0;try{var r=h(n.error);if(!r)throw e;e=r.call(n,e)}catch(e){try{g(t)}finally{throw e}}return g(t),e},complete:function(e){var t=this._s;if(!v(t)){var n=t._o;t._o=void 0;try{var r=h(n.complete);e=r?r.call(n,e):void 0}catch(e){try{g(t)}finally{throw e}}return g(t),e}}});var k=function(e){c(this,k,"Observable","_f")._f=s(e)};f(k.prototype,{subscribe:function(e){return new b(e,this._f)},forEach:function(e){var t=this;return new(a.Promise||i.Promise)((function(n,r){s(e);var i=t.subscribe({next:function(t){try{return e(t)}catch(e){r(e),i.unsubscribe()}},error:r,complete:n})}))}}),f(k,{from:function(e){var t="function"==typeof this?this:k,n=h(u(e)[l]);if(n){var r=u(n.call(e));return r.constructor===t?r:new t((function(e){return r.subscribe(e)}))}return new t((function(t){var n=!1;return o((function(){if(!n){try{if(p(e,!1,(function(e){if(t.next(e),n)return m}))===m)return}catch(e){if(n)throw e;return void t.error(e)}t.complete()}})),function(){n=!0}}))},of:function(){for(var e=0,t=arguments.length,n=new Array(t);e<t;)n[e]=arguments[e++];return new("function"==typeof this?this:k)((function(e){var t=!1;return o((function(){if(!t){for(var r=0;r<n.length;++r)if(e.next(n[r]),t)return;e.complete()}})),function(){t=!0}}))}}),d(k.prototype,l,(function(){return this})),r(r.G,{Observable:k}),n(38)("Observable")},function(e,t,n){var r=n(2),i=n(0),a=n(61),o=[].slice,l=/MSIE .\./.test(a),s=function(e){return function(t,n){var r=arguments.length>2,i=!!r&&o.call(arguments,2);return e(r?function(){("function"==typeof t?t:Function(t)).apply(this,i)}:t,n)}};i(i.G+i.B+i.F*l,{setTimeout:s(r.setTimeout),setInterval:s(r.setInterval)})},function(e,t,n){var r=n(0),i=n(91);r(r.G+r.B,{setImmediate:i.set,clearImmediate:i.clear})},function(e,t,n){for(var r=n(88),i=n(34),a=n(12),o=n(2),l=n(11),s=n(46),u=n(5),c=u("iterator"),f=u("toStringTag"),d=s.Array,p={CSSRuleList:!0,CSSStyleDeclaration:!1,CSSValueList:!1,ClientRectList:!1,DOMRectList:!1,DOMStringList:!1,DOMTokenList:!0,DataTransferItemList:!1,FileList:!1,HTMLAllCollection:!1,HTMLCollection:!1,HTMLFormElement:!1,HTMLSelectElement:!1,MediaList:!0,MimeTypeArray:!1,NamedNodeMap:!1,NodeList:!0,PaintRequestList:!1,Plugin:!1,PluginArray:!1,SVGLengthList:!1,SVGNumberList:!1,SVGPathSegList:!1,SVGPointList:!1,SVGStringList:!1,SVGTransformList:!1,SourceBufferList:!1,StyleSheetList:!0,TextTrackCueList:!1,TextTrackList:!1,TouchList:!1},m=i(p),h=0;h<m.length;h++){var g,v=m[h],y=p[v],b=o[v],w=b&&b.prototype;if(w&&(w[c]||l(w,c,d),w[f]||l(w,f,v),s[v]=d,y))for(g in r)w[g]||a(w,g,r[g],!0)}},function(e,t,n){(function(t){!function(t){"use strict";var n=Object.prototype,r=n.hasOwnProperty,i="function"==typeof Symbol?Symbol:{},a=i.iterator||"@@iterator",o=i.asyncIterator||"@@asyncIterator",l=i.toStringTag||"@@toStringTag",s="object"==typeof e,u=t.regeneratorRuntime;if(u)s&&(e.exports=u);else{(u=t.regeneratorRuntime=s?e.exports:{}).wrap=h;var c={},f={};f[a]=function(){return this};var d=Object.getPrototypeOf,p=d&&d(d(S([])));p&&p!==n&&r.call(p,a)&&(f=p);var m=b.prototype=v.prototype=Object.create(f);y.prototype=m.constructor=b,b.constructor=y,b[l]=y.displayName="GeneratorFunction",u.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===y||"GeneratorFunction"===(t.displayName||t.name))},u.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,b):(e.__proto__=b,l in e||(e[l]="GeneratorFunction")),e.prototype=Object.create(m),e},u.awrap=function(e){return{__await:e}},w(k.prototype),k.prototype[o]=function(){return this},u.AsyncIterator=k,u.async=function(e,t,n,r){var i=new k(h(e,t,n,r));return u.isGeneratorFunction(t)?i:i.next().then((function(e){return e.done?e.value:i.next()}))},w(m),m[l]="Generator",m[a]=function(){return this},m.toString=function(){return"[object Generator]"},u.keys=function(e){var t=[];for(var n in e)t.push(n);return t.reverse(),function n(){for(;t.length;){var r=t.pop();if(r in e)return n.value=r,n.done=!1,n}return n.done=!0,n}},u.values=S,z.prototype={constructor:z,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(x),!e)for(var t in this)"t"===t.charAt(0)&&r.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function n(n,r){return o.type="throw",o.arg=e,t.next=n,r&&(t.method="next",t.arg=void 0),!!r}for(var i=this.tryEntries.length-1;i>=0;--i){var a=this.tryEntries[i],o=a.completion;if("root"===a.tryLoc)return n("end");if(a.tryLoc<=this.prev){var l=r.call(a,"catchLoc"),s=r.call(a,"finallyLoc");if(l&&s){if(this.prev<a.catchLoc)return n(a.catchLoc,!0);if(this.prev<a.finallyLoc)return n(a.finallyLoc)}else if(l){if(this.prev<a.catchLoc)return n(a.catchLoc,!0)}else{if(!s)throw new Error("try statement without catch or finally");if(this.prev<a.finallyLoc)return n(a.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var i=this.tryEntries[n];if(i.tryLoc<=this.prev&&r.call(i,"finallyLoc")&&this.prev<i.finallyLoc){var a=i;break}}a&&("break"===e||"continue"===e)&&a.tryLoc<=t&&t<=a.finallyLoc&&(a=null);var o=a?a.completion:{};return o.type=e,o.arg=t,a?(this.method="next",this.next=a.finallyLoc,c):this.complete(o)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),c},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),x(n),c}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var r=n.completion;if("throw"===r.type){var i=r.arg;x(n)}return i}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,n){return this.delegate={iterator:S(e),resultName:t,nextLoc:n},"next"===this.method&&(this.arg=void 0),c}}}function h(e,t,n,r){var i=t&&t.prototype instanceof v?t:v,a=Object.create(i.prototype),o=new z(r||[]);return a._invoke=function(e,t,n){var r="suspendedStart";return function(i,a){if("executing"===r)throw new Error("Generator is already running");if("completed"===r){if("throw"===i)throw a;return T()}for(n.method=i,n.arg=a;;){var o=n.delegate;if(o){var l=_(o,n);if(l){if(l===c)continue;return l}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if("suspendedStart"===r)throw r="completed",n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);r="executing";var s=g(e,t,n);if("normal"===s.type){if(r=n.done?"completed":"suspendedYield",s.arg===c)continue;return{value:s.arg,done:n.done}}"throw"===s.type&&(r="completed",n.method="throw",n.arg=s.arg)}}}(e,n,o),a}function g(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}function v(){}function y(){}function b(){}function w(e){["next","throw","return"].forEach((function(t){e[t]=function(e){return this._invoke(t,e)}}))}function k(e){function n(t,i,a,o){var l=g(e[t],e,i);if("throw"!==l.type){var s=l.arg,u=s.value;return u&&"object"==typeof u&&r.call(u,"__await")?Promise.resolve(u.__await).then((function(e){n("next",e,a,o)}),(function(e){n("throw",e,a,o)})):Promise.resolve(u).then((function(e){s.value=e,a(s)}),o)}o(l.arg)}var i;"object"==typeof t.process&&t.process.domain&&(n=t.process.domain.bind(n)),this._invoke=function(e,t){function r(){return new Promise((function(r,i){n(e,t,r,i)}))}return i=i?i.then(r,r):r()}}function _(e,t){var n=e.iterator[t.method];if(void 0===n){if(t.delegate=null,"throw"===t.method){if(e.iterator.return&&(t.method="return",t.arg=void 0,_(e,t),"throw"===t.method))return c;t.method="throw",t.arg=new TypeError("The iterator does not provide a 'throw' method")}return c}var r=g(n,e.iterator,t.arg);if("throw"===r.type)return t.method="throw",t.arg=r.arg,t.delegate=null,c;var i=r.arg;return i?i.done?(t[e.resultName]=i.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=void 0),t.delegate=null,c):i:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,c)}function E(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function x(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function z(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(E,this),this.reset(!0)}function S(e){if(e){var t=e[a];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var n=-1,i=function t(){for(;++n<e.length;)if(r.call(e,n))return t.value=e[n],t.done=!1,t;return t.value=void 0,t.done=!0,t};return i.next=i}}return{next:T}}function T(){return{value:void 0,done:!0}}}("object"==typeof t?t:"object"==typeof window?window:"object"==typeof self?self:this)}).call(this,n(95))},function(e,t,n){n(334),e.exports=n(18).RegExp.escape},function(e,t,n){var r=n(0),i=n(335)(/[\\^$*+?.()|[\]{}]/g,"\\$&");r(r.S,"RegExp",{escape:function(e){return i(e)}})},function(e,t){e.exports=function(e,t){var n=t===Object(t)?function(e){return t[e]}:t;return function(t){return String(t).replace(e,n)}}},function(e,t,n){"use strict";var r,i=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),a=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),l=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&a(t,e,n);return o(t,e),t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var u=l(n(52)),c=s(n(338)),f=n(67),d=s(n(342));n(348);var p=function(e){function t(t){var n=e.call(this,t)||this;return n.state={data:"..."},n.translations=d.default(),n}return i(t,e),t.prototype.componentDidMount=function(){var e=this;browser.runtime.sendMessage({action:"get-max-danger-count"}).then((function(t){e.setState({dangerCount:t})})).catch((function(){}));var t=window.location.search,n=new URLSearchParams(t).get("data");this.setState({data:n})},t.prototype.render=function(){var e=this.state.data;return u.default.createElement("div",{className:"Blocked",style:{backgroundImage:"url("+f.addonRoot()+"/logo/geran-de-klerk-2q-IVjbdm9I-unsplash.jpg"}},u.default.createElement("div",{className:"header"},u.default.createElement("h2",null,this.translations.dangerUrlPrefix+": "+e),u.default.createElement("h1",null,""+this.translations.dangerCount)),u.default.createElement("div",{className:"footer"},u.default.createElement("a",{href:f.addonPrefixDashboard()+"#/security-settings"},this.translations.popup_title_dashboard)))},t}(u.Component);c.default.render(u.default.createElement(p,null),document.getElementById("app"))},function(e,t,n){"use strict";
/** @license React v16.13.1
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(132),i="function"==typeof Symbol&&Symbol.for,a=i?Symbol.for("react.element"):60103,o=i?Symbol.for("react.portal"):60106,l=i?Symbol.for("react.fragment"):60107,s=i?Symbol.for("react.strict_mode"):60108,u=i?Symbol.for("react.profiler"):60114,c=i?Symbol.for("react.provider"):60109,f=i?Symbol.for("react.context"):60110,d=i?Symbol.for("react.forward_ref"):60112,p=i?Symbol.for("react.suspense"):60113,m=i?Symbol.for("react.memo"):60115,h=i?Symbol.for("react.lazy"):60116,g="function"==typeof Symbol&&Symbol.iterator;function v(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var y={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},b={};function w(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||y}function k(){}function _(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||y}w.prototype.isReactComponent={},w.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(v(85));this.updater.enqueueSetState(this,e,t,"setState")},w.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},k.prototype=w.prototype;var E=_.prototype=new k;E.constructor=_,r(E,w.prototype),E.isPureReactComponent=!0;var x={current:null},z=Object.prototype.hasOwnProperty,S={key:!0,ref:!0,__self:!0,__source:!0};function T(e,t,n){var r,i={},o=null,l=null;if(null!=t)for(r in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(o=""+t.key),t)z.call(t,r)&&!S.hasOwnProperty(r)&&(i[r]=t[r]);var s=arguments.length-2;if(1===s)i.children=n;else if(1<s){for(var u=Array(s),c=0;c<s;c++)u[c]=arguments[c+2];i.children=u}if(e&&e.defaultProps)for(r in s=e.defaultProps)void 0===i[r]&&(i[r]=s[r]);return{$$typeof:a,type:e,key:o,ref:l,props:i,_owner:x.current}}function N(e){return"object"==typeof e&&null!==e&&e.$$typeof===a}var P=/\/+/g,j=[];function C(e,t,n,r){if(j.length){var i=j.pop();return i.result=e,i.keyPrefix=t,i.func=n,i.context=r,i.count=0,i}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function I(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>j.length&&j.push(e)}function M(e,t,n){return null==e?0:function e(t,n,r,i){var l=typeof t;"undefined"!==l&&"boolean"!==l||(t=null);var s=!1;if(null===t)s=!0;else switch(l){case"string":case"number":s=!0;break;case"object":switch(t.$$typeof){case a:case o:s=!0}}if(s)return r(i,t,""===n?"."+O(t,0):n),1;if(s=0,n=""===n?".":n+":",Array.isArray(t))for(var u=0;u<t.length;u++){var c=n+O(l=t[u],u);s+=e(l,c,r,i)}else if(null===t||"object"!=typeof t?c=null:c="function"==typeof(c=g&&t[g]||t["@@iterator"])?c:null,"function"==typeof c)for(t=c.call(t),u=0;!(l=t.next()).done;)s+=e(l=l.value,c=n+O(l,u++),r,i);else if("object"===l)throw r=""+t,Error(v(31,"[object Object]"===r?"object with keys {"+Object.keys(t).join(", ")+"}":r,""));return s}(e,"",t,n)}function O(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,(function(e){return t[e]}))}(e.key):t.toString(36)}function D(e,t){e.func.call(e.context,t,e.count++)}function L(e,t,n){var r=e.result,i=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?A(e,r,n,(function(e){return e})):null!=e&&(N(e)&&(e=function(e,t){return{$$typeof:a,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,i+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(P,"$&/")+"/")+n)),r.push(e))}function A(e,t,n,r,i){var a="";null!=n&&(a=(""+n).replace(P,"$&/")+"/"),M(e,L,t=C(t,a,r,i)),I(t)}var F={current:null};function B(){var e=F.current;if(null===e)throw Error(v(321));return e}var R={ReactCurrentDispatcher:F,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:x,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:function(e,t,n){if(null==e)return e;var r=[];return A(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;M(e,D,t=C(null,null,t,n)),I(t)},count:function(e){return M(e,(function(){return null}),null)},toArray:function(e){var t=[];return A(e,t,null,(function(e){return e})),t},only:function(e){if(!N(e))throw Error(v(143));return e}},t.Component=w,t.Fragment=l,t.Profiler=u,t.PureComponent=_,t.StrictMode=s,t.Suspense=p,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=R,t.cloneElement=function(e,t,n){if(null==e)throw Error(v(267,e));var i=r({},e.props),o=e.key,l=e.ref,s=e._owner;if(null!=t){if(void 0!==t.ref&&(l=t.ref,s=x.current),void 0!==t.key&&(o=""+t.key),e.type&&e.type.defaultProps)var u=e.type.defaultProps;for(c in t)z.call(t,c)&&!S.hasOwnProperty(c)&&(i[c]=void 0===t[c]&&void 0!==u?u[c]:t[c])}var c=arguments.length-2;if(1===c)i.children=n;else if(1<c){u=Array(c);for(var f=0;f<c;f++)u[f]=arguments[f+2];i.children=u}return{$$typeof:a,type:e.type,key:o,ref:l,props:i,_owner:s}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:f,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:c,_context:e},e.Consumer=e},t.createElement=T,t.createFactory=function(e){var t=T.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:d,render:e}},t.isValidElement=N,t.lazy=function(e){return{$$typeof:h,_ctor:e,_status:-1,_result:null}},t.memo=function(e,t){return{$$typeof:m,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return B().useCallback(e,t)},t.useContext=function(e,t){return B().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return B().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return B().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return B().useLayoutEffect(e,t)},t.useMemo=function(e,t){return B().useMemo(e,t)},t.useReducer=function(e,t,n){return B().useReducer(e,t,n)},t.useRef=function(e){return B().useRef(e)},t.useState=function(e){return B().useState(e)},t.version="16.13.1"},function(e,t,n){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE){0;try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}}(),e.exports=n(339)},function(e,t,n){"use strict";
/** @license React v16.13.1
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(52),i=n(132),a=n(340);function o(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(o(227));function l(e,t,n,r,i,a,o,l,s){var u=Array.prototype.slice.call(arguments,3);try{t.apply(n,u)}catch(e){this.onError(e)}}var s=!1,u=null,c=!1,f=null,d={onError:function(e){s=!0,u=e}};function p(e,t,n,r,i,a,o,c,f){s=!1,u=null,l.apply(d,arguments)}var m=null,h=null,g=null;function v(e,t,n){var r=e.type||"unknown-event";e.currentTarget=g(n),function(e,t,n,r,i,a,l,d,m){if(p.apply(this,arguments),s){if(!s)throw Error(o(198));var h=u;s=!1,u=null,c||(c=!0,f=h)}}(r,t,void 0,e),e.currentTarget=null}var y=null,b={};function w(){if(y)for(var e in b){var t=b[e],n=y.indexOf(e);if(!(-1<n))throw Error(o(96,e));if(!_[n]){if(!t.extractEvents)throw Error(o(97,e));for(var r in _[n]=t,n=t.eventTypes){var i=void 0,a=n[r],l=t,s=r;if(E.hasOwnProperty(s))throw Error(o(99,s));E[s]=a;var u=a.phasedRegistrationNames;if(u){for(i in u)u.hasOwnProperty(i)&&k(u[i],l,s);i=!0}else a.registrationName?(k(a.registrationName,l,s),i=!0):i=!1;if(!i)throw Error(o(98,r,e))}}}}function k(e,t,n){if(x[e])throw Error(o(100,e));x[e]=t,z[e]=t.eventTypes[n].dependencies}var _=[],E={},x={},z={};function S(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];if(!b.hasOwnProperty(t)||b[t]!==r){if(b[t])throw Error(o(102,t));b[t]=r,n=!0}}n&&w()}var T=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),N=null,P=null,j=null;function C(e){if(e=h(e)){if("function"!=typeof N)throw Error(o(280));var t=e.stateNode;t&&(t=m(t),N(e.stateNode,e.type,t))}}function I(e){P?j?j.push(e):j=[e]:P=e}function M(){if(P){var e=P,t=j;if(j=P=null,C(e),t)for(e=0;e<t.length;e++)C(t[e])}}function O(e,t){return e(t)}function D(e,t,n,r,i){return e(t,n,r,i)}function L(){}var A=O,F=!1,B=!1;function R(){null===P&&null===j||(L(),M())}function W(e,t,n){if(B)return e(t,n);B=!0;try{return A(e,t,n)}finally{B=!1,R()}}var U=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,H=Object.prototype.hasOwnProperty,V={},K={};function $(e,t,n,r,i,a){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=i,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=a}var Q={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){Q[e]=new $(e,0,!1,e,null,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];Q[t]=new $(t,1,!1,e[1],null,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){Q[e]=new $(e,2,!1,e.toLowerCase(),null,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){Q[e]=new $(e,2,!1,e,null,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){Q[e]=new $(e,3,!1,e.toLowerCase(),null,!1)})),["checked","multiple","muted","selected"].forEach((function(e){Q[e]=new $(e,3,!0,e,null,!1)})),["capture","download"].forEach((function(e){Q[e]=new $(e,4,!1,e,null,!1)})),["cols","rows","size","span"].forEach((function(e){Q[e]=new $(e,6,!1,e,null,!1)})),["rowSpan","start"].forEach((function(e){Q[e]=new $(e,5,!1,e.toLowerCase(),null,!1)}));var q=/[\-:]([a-z])/g;function G(e){return e[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(q,G);Q[t]=new $(t,1,!1,e,null,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(q,G);Q[t]=new $(t,1,!1,e,"http://www.w3.org/1999/xlink",!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(q,G);Q[t]=new $(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1)})),["tabIndex","crossOrigin"].forEach((function(e){Q[e]=new $(e,1,!1,e.toLowerCase(),null,!1)})),Q.xlinkHref=new $("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0),["src","href","action","formAction"].forEach((function(e){Q[e]=new $(e,1,!1,e.toLowerCase(),null,!0)}));var J=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function Z(e,t,n,r){var i=Q.hasOwnProperty(t)?Q[t]:null;(null!==i?0===i.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,i,r)&&(n=null),r||null===i?function(e){return!!H.call(K,e)||!H.call(V,e)&&(U.test(e)?K[e]=!0:(V[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):i.mustUseProperty?e[i.propertyName]=null===n?3!==i.type&&"":n:(t=i.attributeName,r=i.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(i=i.type)||4===i&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}J.hasOwnProperty("ReactCurrentDispatcher")||(J.ReactCurrentDispatcher={current:null}),J.hasOwnProperty("ReactCurrentBatchConfig")||(J.ReactCurrentBatchConfig={suspense:null});var Y=/^(.*)[\\\/]/,X="function"==typeof Symbol&&Symbol.for,ee=X?Symbol.for("react.element"):60103,te=X?Symbol.for("react.portal"):60106,ne=X?Symbol.for("react.fragment"):60107,re=X?Symbol.for("react.strict_mode"):60108,ie=X?Symbol.for("react.profiler"):60114,ae=X?Symbol.for("react.provider"):60109,oe=X?Symbol.for("react.context"):60110,le=X?Symbol.for("react.concurrent_mode"):60111,se=X?Symbol.for("react.forward_ref"):60112,ue=X?Symbol.for("react.suspense"):60113,ce=X?Symbol.for("react.suspense_list"):60120,fe=X?Symbol.for("react.memo"):60115,de=X?Symbol.for("react.lazy"):60116,pe=X?Symbol.for("react.block"):60121,me="function"==typeof Symbol&&Symbol.iterator;function he(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=me&&e[me]||e["@@iterator"])?e:null}function ge(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case ne:return"Fragment";case te:return"Portal";case ie:return"Profiler";case re:return"StrictMode";case ue:return"Suspense";case ce:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case oe:return"Context.Consumer";case ae:return"Context.Provider";case se:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case fe:return ge(e.type);case pe:return ge(e.render);case de:if(e=1===e._status?e._result:null)return ge(e)}return null}function ve(e){var t="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break e;default:var r=e._debugOwner,i=e._debugSource,a=ge(e.type);n=null,r&&(n=ge(r.type)),r=a,a="",i?a=" (at "+i.fileName.replace(Y,"")+":"+i.lineNumber+")":n&&(a=" (created by "+n+")"),n="\n    in "+(r||"Unknown")+a}t+=n,e=e.return}while(e);return t}function ye(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function be(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function we(e){e._valueTracker||(e._valueTracker=function(e){var t=be(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var i=n.get,a=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return i.call(this)},set:function(e){r=""+e,a.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function ke(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=be(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function _e(e,t){var n=t.checked;return i({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Ee(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=ye(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function xe(e,t){null!=(t=t.checked)&&Z(e,"checked",t,!1)}function ze(e,t){xe(e,t);var n=ye(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?Te(e,t.type,n):t.hasOwnProperty("defaultValue")&&Te(e,t.type,ye(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Se(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function Te(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function Ne(e,t){return e=i({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function Pe(e,t,n,r){if(e=e.options,t){t={};for(var i=0;i<n.length;i++)t["$"+n[i]]=!0;for(n=0;n<e.length;n++)i=t.hasOwnProperty("$"+e[n].value),e[n].selected!==i&&(e[n].selected=i),i&&r&&(e[n].defaultSelected=!0)}else{for(n=""+ye(n),t=null,i=0;i<e.length;i++){if(e[i].value===n)return e[i].selected=!0,void(r&&(e[i].defaultSelected=!0));null!==t||e[i].disabled||(t=e[i])}null!==t&&(t.selected=!0)}}function je(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(o(91));return i({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Ce(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(o(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(o(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:ye(n)}}function Ie(e,t){var n=ye(t.value),r=ye(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function Me(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}var Oe="http://www.w3.org/1999/xhtml",De="http://www.w3.org/2000/svg";function Le(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Ae(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?Le(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var Fe,Be=function(e){return"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(t,n,r,i){MSApp.execUnsafeLocalFunction((function(){return e(t,n)}))}:e}((function(e,t){if(e.namespaceURI!==De||"innerHTML"in e)e.innerHTML=t;else{for((Fe=Fe||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=Fe.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}}));function Re(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}function We(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var Ue={animationend:We("Animation","AnimationEnd"),animationiteration:We("Animation","AnimationIteration"),animationstart:We("Animation","AnimationStart"),transitionend:We("Transition","TransitionEnd")},He={},Ve={};function Ke(e){if(He[e])return He[e];if(!Ue[e])return e;var t,n=Ue[e];for(t in n)if(n.hasOwnProperty(t)&&t in Ve)return He[e]=n[t];return e}T&&(Ve=document.createElement("div").style,"AnimationEvent"in window||(delete Ue.animationend.animation,delete Ue.animationiteration.animation,delete Ue.animationstart.animation),"TransitionEvent"in window||delete Ue.transitionend.transition);var $e=Ke("animationend"),Qe=Ke("animationiteration"),qe=Ke("animationstart"),Ge=Ke("transitionend"),Je="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Ze=new("function"==typeof WeakMap?WeakMap:Map);function Ye(e){var t=Ze.get(e);return void 0===t&&(t=new Map,Ze.set(e,t)),t}function Xe(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).effectTag)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function et(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function tt(e){if(Xe(e)!==e)throw Error(o(188))}function nt(e){if(!(e=function(e){var t=e.alternate;if(!t){if(null===(t=Xe(e)))throw Error(o(188));return t!==e?null:e}for(var n=e,r=t;;){var i=n.return;if(null===i)break;var a=i.alternate;if(null===a){if(null!==(r=i.return)){n=r;continue}break}if(i.child===a.child){for(a=i.child;a;){if(a===n)return tt(i),e;if(a===r)return tt(i),t;a=a.sibling}throw Error(o(188))}if(n.return!==r.return)n=i,r=a;else{for(var l=!1,s=i.child;s;){if(s===n){l=!0,n=i,r=a;break}if(s===r){l=!0,r=i,n=a;break}s=s.sibling}if(!l){for(s=a.child;s;){if(s===n){l=!0,n=a,r=i;break}if(s===r){l=!0,r=a,n=i;break}s=s.sibling}if(!l)throw Error(o(189))}}if(n.alternate!==r)throw Error(o(190))}if(3!==n.tag)throw Error(o(188));return n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function rt(e,t){if(null==t)throw Error(o(30));return null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function it(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var at=null;function ot(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t))for(var r=0;r<t.length&&!e.isPropagationStopped();r++)v(e,t[r],n[r]);else t&&v(e,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}function lt(e){if(null!==e&&(at=rt(at,e)),e=at,at=null,e){if(it(e,ot),at)throw Error(o(95));if(c)throw e=f,c=!1,f=null,e}}function st(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function ut(e){if(!T)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t}var ct=[];function ft(e){e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>ct.length&&ct.push(e)}function dt(e,t,n,r){if(ct.length){var i=ct.pop();return i.topLevelType=e,i.eventSystemFlags=r,i.nativeEvent=t,i.targetInst=n,i}return{topLevelType:e,eventSystemFlags:r,nativeEvent:t,targetInst:n,ancestors:[]}}function pt(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var r=n;if(3===r.tag)r=r.stateNode.containerInfo;else{for(;r.return;)r=r.return;r=3!==r.tag?null:r.stateNode.containerInfo}if(!r)break;5!==(t=n.tag)&&6!==t||e.ancestors.push(n),n=Tn(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var i=st(e.nativeEvent);r=e.topLevelType;var a=e.nativeEvent,o=e.eventSystemFlags;0===n&&(o|=64);for(var l=null,s=0;s<_.length;s++){var u=_[s];u&&(u=u.extractEvents(r,t,a,i,o))&&(l=rt(l,u))}lt(l)}}function mt(e,t,n){if(!n.has(e)){switch(e){case"scroll":qt(t,"scroll",!0);break;case"focus":case"blur":qt(t,"focus",!0),qt(t,"blur",!0),n.set("blur",null),n.set("focus",null);break;case"cancel":case"close":ut(e)&&qt(t,e,!0);break;case"invalid":case"submit":case"reset":break;default:-1===Je.indexOf(e)&&Qt(e,t)}n.set(e,null)}}var ht,gt,vt,yt=!1,bt=[],wt=null,kt=null,_t=null,Et=new Map,xt=new Map,zt=[],St="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "),Tt="focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");function Nt(e,t,n,r,i){return{blockedOn:e,topLevelType:t,eventSystemFlags:32|n,nativeEvent:i,container:r}}function Pt(e,t){switch(e){case"focus":case"blur":wt=null;break;case"dragenter":case"dragleave":kt=null;break;case"mouseover":case"mouseout":_t=null;break;case"pointerover":case"pointerout":Et.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":xt.delete(t.pointerId)}}function jt(e,t,n,r,i,a){return null===e||e.nativeEvent!==a?(e=Nt(t,n,r,i,a),null!==t&&(null!==(t=Nn(t))&&gt(t)),e):(e.eventSystemFlags|=r,e)}function Ct(e){var t=Tn(e.target);if(null!==t){var n=Xe(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=et(n)))return e.blockedOn=t,void a.unstable_runWithPriority(e.priority,(function(){vt(n)}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function It(e){if(null!==e.blockedOn)return!1;var t=Yt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);if(null!==t){var n=Nn(t);return null!==n&&gt(n),e.blockedOn=t,!1}return!0}function Mt(e,t,n){It(e)&&n.delete(t)}function Ot(){for(yt=!1;0<bt.length;){var e=bt[0];if(null!==e.blockedOn){null!==(e=Nn(e.blockedOn))&&ht(e);break}var t=Yt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);null!==t?e.blockedOn=t:bt.shift()}null!==wt&&It(wt)&&(wt=null),null!==kt&&It(kt)&&(kt=null),null!==_t&&It(_t)&&(_t=null),Et.forEach(Mt),xt.forEach(Mt)}function Dt(e,t){e.blockedOn===t&&(e.blockedOn=null,yt||(yt=!0,a.unstable_scheduleCallback(a.unstable_NormalPriority,Ot)))}function Lt(e){function t(t){return Dt(t,e)}if(0<bt.length){Dt(bt[0],e);for(var n=1;n<bt.length;n++){var r=bt[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==wt&&Dt(wt,e),null!==kt&&Dt(kt,e),null!==_t&&Dt(_t,e),Et.forEach(t),xt.forEach(t),n=0;n<zt.length;n++)(r=zt[n]).blockedOn===e&&(r.blockedOn=null);for(;0<zt.length&&null===(n=zt[0]).blockedOn;)Ct(n),null===n.blockedOn&&zt.shift()}var At={},Ft=new Map,Bt=new Map,Rt=["abort","abort",$e,"animationEnd",Qe,"animationIteration",qe,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Ge,"transitionEnd","waiting","waiting"];function Wt(e,t){for(var n=0;n<e.length;n+=2){var r=e[n],i=e[n+1],a="on"+(i[0].toUpperCase()+i.slice(1));a={phasedRegistrationNames:{bubbled:a,captured:a+"Capture"},dependencies:[r],eventPriority:t},Bt.set(r,t),Ft.set(r,a),At[i]=a}}Wt("blur blur cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focus focus input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),Wt("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),Wt(Rt,2);for(var Ut="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),Ht=0;Ht<Ut.length;Ht++)Bt.set(Ut[Ht],0);var Vt=a.unstable_UserBlockingPriority,Kt=a.unstable_runWithPriority,$t=!0;function Qt(e,t){qt(t,e,!1)}function qt(e,t,n){var r=Bt.get(t);switch(void 0===r?2:r){case 0:r=Gt.bind(null,t,1,e);break;case 1:r=Jt.bind(null,t,1,e);break;default:r=Zt.bind(null,t,1,e)}n?e.addEventListener(t,r,!0):e.addEventListener(t,r,!1)}function Gt(e,t,n,r){F||L();var i=Zt,a=F;F=!0;try{D(i,e,t,n,r)}finally{(F=a)||R()}}function Jt(e,t,n,r){Kt(Vt,Zt.bind(null,e,t,n,r))}function Zt(e,t,n,r){if($t)if(0<bt.length&&-1<St.indexOf(e))e=Nt(null,e,t,n,r),bt.push(e);else{var i=Yt(e,t,n,r);if(null===i)Pt(e,r);else if(-1<St.indexOf(e))e=Nt(i,e,t,n,r),bt.push(e);else if(!function(e,t,n,r,i){switch(t){case"focus":return wt=jt(wt,e,t,n,r,i),!0;case"dragenter":return kt=jt(kt,e,t,n,r,i),!0;case"mouseover":return _t=jt(_t,e,t,n,r,i),!0;case"pointerover":var a=i.pointerId;return Et.set(a,jt(Et.get(a)||null,e,t,n,r,i)),!0;case"gotpointercapture":return a=i.pointerId,xt.set(a,jt(xt.get(a)||null,e,t,n,r,i)),!0}return!1}(i,e,t,n,r)){Pt(e,r),e=dt(e,r,null,t);try{W(pt,e)}finally{ft(e)}}}}function Yt(e,t,n,r){if(null!==(n=Tn(n=st(r)))){var i=Xe(n);if(null===i)n=null;else{var a=i.tag;if(13===a){if(null!==(n=et(i)))return n;n=null}else if(3===a){if(i.stateNode.hydrate)return 3===i.tag?i.stateNode.containerInfo:null;n=null}else i!==n&&(n=null)}}e=dt(e,r,n,t);try{W(pt,e)}finally{ft(e)}return null}var Xt={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},en=["Webkit","ms","Moz","O"];function tn(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||Xt.hasOwnProperty(e)&&Xt[e]?(""+t).trim():t+"px"}function nn(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),i=tn(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,i):e[n]=i}}Object.keys(Xt).forEach((function(e){en.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),Xt[t]=Xt[e]}))}));var rn=i({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function an(e,t){if(t){if(rn[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(o(137,e,""));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(o(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(o(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(o(62,""))}}function on(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var ln=Oe;function sn(e,t){var n=Ye(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=z[t];for(var r=0;r<t.length;r++)mt(t[r],e,n)}function un(){}function cn(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function fn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function dn(e,t){var n,r=fn(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=fn(r)}}function pn(){for(var e=window,t=cn();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=cn((e=t.contentWindow).document)}return t}function mn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var hn=null,gn=null;function vn(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function yn(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var bn="function"==typeof setTimeout?setTimeout:void 0,wn="function"==typeof clearTimeout?clearTimeout:void 0;function kn(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function _n(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var En=Math.random().toString(36).slice(2),xn="__reactInternalInstance$"+En,zn="__reactEventHandlers$"+En,Sn="__reactContainere$"+En;function Tn(e){var t=e[xn];if(t)return t;for(var n=e.parentNode;n;){if(t=n[Sn]||n[xn]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=_n(e);null!==e;){if(n=e[xn])return n;e=_n(e)}return t}n=(e=n).parentNode}return null}function Nn(e){return!(e=e[xn]||e[Sn])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function Pn(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(o(33))}function jn(e){return e[zn]||null}function Cn(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function In(e,t){var n=e.stateNode;if(!n)return null;var r=m(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(o(231,t,typeof n));return n}function Mn(e,t,n){(t=In(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=rt(n._dispatchListeners,t),n._dispatchInstances=rt(n._dispatchInstances,e))}function On(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=Cn(t);for(t=n.length;0<t--;)Mn(n[t],"captured",e);for(t=0;t<n.length;t++)Mn(n[t],"bubbled",e)}}function Dn(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=In(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=rt(n._dispatchListeners,t),n._dispatchInstances=rt(n._dispatchInstances,e))}function Ln(e){e&&e.dispatchConfig.registrationName&&Dn(e._targetInst,null,e)}function An(e){it(e,On)}var Fn=null,Bn=null,Rn=null;function Wn(){if(Rn)return Rn;var e,t,n=Bn,r=n.length,i="value"in Fn?Fn.value:Fn.textContent,a=i.length;for(e=0;e<r&&n[e]===i[e];e++);var o=r-e;for(t=1;t<=o&&n[r-t]===i[a-t];t++);return Rn=i.slice(e,1<t?1-t:void 0)}function Un(){return!0}function Hn(){return!1}function Vn(e,t,n,r){for(var i in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(i)&&((t=e[i])?this[i]=t(n):"target"===i?this.target=r:this[i]=n[i]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?Un:Hn,this.isPropagationStopped=Hn,this}function Kn(e,t,n,r){if(this.eventPool.length){var i=this.eventPool.pop();return this.call(i,e,t,n,r),i}return new this(e,t,n,r)}function $n(e){if(!(e instanceof this))throw Error(o(279));e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function Qn(e){e.eventPool=[],e.getPooled=Kn,e.release=$n}i(Vn.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=Un)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=Un)},persist:function(){this.isPersistent=Un},isPersistent:Hn,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=Hn,this._dispatchInstances=this._dispatchListeners=null}}),Vn.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},Vn.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var a=new t;return i(a,n.prototype),n.prototype=a,n.prototype.constructor=n,n.Interface=i({},r.Interface,e),n.extend=r.extend,Qn(n),n},Qn(Vn);var qn=Vn.extend({data:null}),Gn=Vn.extend({data:null}),Jn=[9,13,27,32],Zn=T&&"CompositionEvent"in window,Yn=null;T&&"documentMode"in document&&(Yn=document.documentMode);var Xn=T&&"TextEvent"in window&&!Yn,er=T&&(!Zn||Yn&&8<Yn&&11>=Yn),tr=String.fromCharCode(32),nr={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},rr=!1;function ir(e,t){switch(e){case"keyup":return-1!==Jn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function ar(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var or=!1;var lr={eventTypes:nr,extractEvents:function(e,t,n,r){var i;if(Zn)e:{switch(e){case"compositionstart":var a=nr.compositionStart;break e;case"compositionend":a=nr.compositionEnd;break e;case"compositionupdate":a=nr.compositionUpdate;break e}a=void 0}else or?ir(e,n)&&(a=nr.compositionEnd):"keydown"===e&&229===n.keyCode&&(a=nr.compositionStart);return a?(er&&"ko"!==n.locale&&(or||a!==nr.compositionStart?a===nr.compositionEnd&&or&&(i=Wn()):(Bn="value"in(Fn=r)?Fn.value:Fn.textContent,or=!0)),a=qn.getPooled(a,t,n,r),i?a.data=i:null!==(i=ar(n))&&(a.data=i),An(a),i=a):i=null,(e=Xn?function(e,t){switch(e){case"compositionend":return ar(t);case"keypress":return 32!==t.which?null:(rr=!0,tr);case"textInput":return(e=t.data)===tr&&rr?null:e;default:return null}}(e,n):function(e,t){if(or)return"compositionend"===e||!Zn&&ir(e,t)?(e=Wn(),Rn=Bn=Fn=null,or=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return er&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))?((t=Gn.getPooled(nr.beforeInput,t,n,r)).data=e,An(t)):t=null,null===i?t:null===t?i:[i,t]}},sr={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function ur(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!sr[e.type]:"textarea"===t}var cr={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function fr(e,t,n){return(e=Vn.getPooled(cr.change,e,t,n)).type="change",I(n),An(e),e}var dr=null,pr=null;function mr(e){lt(e)}function hr(e){if(ke(Pn(e)))return e}function gr(e,t){if("change"===e)return t}var vr=!1;function yr(){dr&&(dr.detachEvent("onpropertychange",br),pr=dr=null)}function br(e){if("value"===e.propertyName&&hr(pr))if(e=fr(pr,e,st(e)),F)lt(e);else{F=!0;try{O(mr,e)}finally{F=!1,R()}}}function wr(e,t,n){"focus"===e?(yr(),pr=n,(dr=t).attachEvent("onpropertychange",br)):"blur"===e&&yr()}function kr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return hr(pr)}function _r(e,t){if("click"===e)return hr(t)}function Er(e,t){if("input"===e||"change"===e)return hr(t)}T&&(vr=ut("input")&&(!document.documentMode||9<document.documentMode));var xr={eventTypes:cr,_isInputEventSupported:vr,extractEvents:function(e,t,n,r){var i=t?Pn(t):window,a=i.nodeName&&i.nodeName.toLowerCase();if("select"===a||"input"===a&&"file"===i.type)var o=gr;else if(ur(i))if(vr)o=Er;else{o=kr;var l=wr}else(a=i.nodeName)&&"input"===a.toLowerCase()&&("checkbox"===i.type||"radio"===i.type)&&(o=_r);if(o&&(o=o(e,t)))return fr(o,n,r);l&&l(e,i,t),"blur"===e&&(e=i._wrapperState)&&e.controlled&&"number"===i.type&&Te(i,"number",i.value)}},zr=Vn.extend({view:null,detail:null}),Sr={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Tr(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Sr[e])&&!!t[e]}function Nr(){return Tr}var Pr=0,jr=0,Cr=!1,Ir=!1,Mr=zr.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Nr,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=Pr;return Pr=e.screenX,Cr?"mousemove"===e.type?e.screenX-t:0:(Cr=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=jr;return jr=e.screenY,Ir?"mousemove"===e.type?e.screenY-t:0:(Ir=!0,0)}}),Or=Mr.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Dr={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Lr={eventTypes:Dr,extractEvents:function(e,t,n,r,i){var a="mouseover"===e||"pointerover"===e,o="mouseout"===e||"pointerout"===e;if(a&&0==(32&i)&&(n.relatedTarget||n.fromElement)||!o&&!a)return null;(a=r.window===r?r:(a=r.ownerDocument)?a.defaultView||a.parentWindow:window,o)?(o=t,null!==(t=(t=n.relatedTarget||n.toElement)?Tn(t):null)&&(t!==Xe(t)||5!==t.tag&&6!==t.tag)&&(t=null)):o=null;if(o===t)return null;if("mouseout"===e||"mouseover"===e)var l=Mr,s=Dr.mouseLeave,u=Dr.mouseEnter,c="mouse";else"pointerout"!==e&&"pointerover"!==e||(l=Or,s=Dr.pointerLeave,u=Dr.pointerEnter,c="pointer");if(e=null==o?a:Pn(o),a=null==t?a:Pn(t),(s=l.getPooled(s,o,n,r)).type=c+"leave",s.target=e,s.relatedTarget=a,(n=l.getPooled(u,t,n,r)).type=c+"enter",n.target=a,n.relatedTarget=e,c=t,(r=o)&&c)e:{for(u=c,o=0,e=l=r;e;e=Cn(e))o++;for(e=0,t=u;t;t=Cn(t))e++;for(;0<o-e;)l=Cn(l),o--;for(;0<e-o;)u=Cn(u),e--;for(;o--;){if(l===u||l===u.alternate)break e;l=Cn(l),u=Cn(u)}l=null}else l=null;for(u=l,l=[];r&&r!==u&&(null===(o=r.alternate)||o!==u);)l.push(r),r=Cn(r);for(r=[];c&&c!==u&&(null===(o=c.alternate)||o!==u);)r.push(c),c=Cn(c);for(c=0;c<l.length;c++)Dn(l[c],"bubbled",s);for(c=r.length;0<c--;)Dn(r[c],"captured",n);return 0==(64&i)?[s]:[s,n]}};var Ar="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},Fr=Object.prototype.hasOwnProperty;function Br(e,t){if(Ar(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!Fr.call(t,n[r])||!Ar(e[n[r]],t[n[r]]))return!1;return!0}var Rr=T&&"documentMode"in document&&11>=document.documentMode,Wr={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Ur=null,Hr=null,Vr=null,Kr=!1;function $r(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return Kr||null==Ur||Ur!==cn(n)?null:("selectionStart"in(n=Ur)&&mn(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},Vr&&Br(Vr,n)?null:(Vr=n,(e=Vn.getPooled(Wr.select,Hr,e,t)).type="select",e.target=Ur,An(e),e))}var Qr={eventTypes:Wr,extractEvents:function(e,t,n,r,i,a){if(!(a=!(i=a||(r.window===r?r.document:9===r.nodeType?r:r.ownerDocument)))){e:{i=Ye(i),a=z.onSelect;for(var o=0;o<a.length;o++)if(!i.has(a[o])){i=!1;break e}i=!0}a=!i}if(a)return null;switch(i=t?Pn(t):window,e){case"focus":(ur(i)||"true"===i.contentEditable)&&(Ur=i,Hr=t,Vr=null);break;case"blur":Vr=Hr=Ur=null;break;case"mousedown":Kr=!0;break;case"contextmenu":case"mouseup":case"dragend":return Kr=!1,$r(n,r);case"selectionchange":if(Rr)break;case"keydown":case"keyup":return $r(n,r)}return null}},qr=Vn.extend({animationName:null,elapsedTime:null,pseudoElement:null}),Gr=Vn.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),Jr=zr.extend({relatedTarget:null});function Zr(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var Yr={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Xr={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},ei=zr.extend({key:function(e){if(e.key){var t=Yr[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=Zr(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Xr[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Nr,charCode:function(e){return"keypress"===e.type?Zr(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?Zr(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),ti=Mr.extend({dataTransfer:null}),ni=zr.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Nr}),ri=Vn.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),ii=Mr.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),ai={eventTypes:At,extractEvents:function(e,t,n,r){var i=Ft.get(e);if(!i)return null;switch(e){case"keypress":if(0===Zr(n))return null;case"keydown":case"keyup":e=ei;break;case"blur":case"focus":e=Jr;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=Mr;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=ti;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=ni;break;case $e:case Qe:case qe:e=qr;break;case Ge:e=ri;break;case"scroll":e=zr;break;case"wheel":e=ii;break;case"copy":case"cut":case"paste":e=Gr;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=Or;break;default:e=Vn}return An(t=e.getPooled(i,t,n,r)),t}};if(y)throw Error(o(101));y=Array.prototype.slice.call("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),w(),m=jn,h=Nn,g=Pn,S({SimpleEventPlugin:ai,EnterLeaveEventPlugin:Lr,ChangeEventPlugin:xr,SelectEventPlugin:Qr,BeforeInputEventPlugin:lr});var oi=[],li=-1;function si(e){0>li||(e.current=oi[li],oi[li]=null,li--)}function ui(e,t){li++,oi[li]=e.current,e.current=t}var ci={},fi={current:ci},di={current:!1},pi=ci;function mi(e,t){var n=e.type.contextTypes;if(!n)return ci;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var i,a={};for(i in n)a[i]=t[i];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=a),a}function hi(e){return null!=(e=e.childContextTypes)}function gi(){si(di),si(fi)}function vi(e,t,n){if(fi.current!==ci)throw Error(o(168));ui(fi,t),ui(di,n)}function yi(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var a in r=r.getChildContext())if(!(a in e))throw Error(o(108,ge(t)||"Unknown",a));return i({},n,{},r)}function bi(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||ci,pi=fi.current,ui(fi,e),ui(di,di.current),!0}function wi(e,t,n){var r=e.stateNode;if(!r)throw Error(o(169));n?(e=yi(e,t,pi),r.__reactInternalMemoizedMergedChildContext=e,si(di),si(fi),ui(fi,e)):si(di),ui(di,n)}var ki=a.unstable_runWithPriority,_i=a.unstable_scheduleCallback,Ei=a.unstable_cancelCallback,xi=a.unstable_requestPaint,zi=a.unstable_now,Si=a.unstable_getCurrentPriorityLevel,Ti=a.unstable_ImmediatePriority,Ni=a.unstable_UserBlockingPriority,Pi=a.unstable_NormalPriority,ji=a.unstable_LowPriority,Ci=a.unstable_IdlePriority,Ii={},Mi=a.unstable_shouldYield,Oi=void 0!==xi?xi:function(){},Di=null,Li=null,Ai=!1,Fi=zi(),Bi=1e4>Fi?zi:function(){return zi()-Fi};function Ri(){switch(Si()){case Ti:return 99;case Ni:return 98;case Pi:return 97;case ji:return 96;case Ci:return 95;default:throw Error(o(332))}}function Wi(e){switch(e){case 99:return Ti;case 98:return Ni;case 97:return Pi;case 96:return ji;case 95:return Ci;default:throw Error(o(332))}}function Ui(e,t){return e=Wi(e),ki(e,t)}function Hi(e,t,n){return e=Wi(e),_i(e,t,n)}function Vi(e){return null===Di?(Di=[e],Li=_i(Ti,$i)):Di.push(e),Ii}function Ki(){if(null!==Li){var e=Li;Li=null,Ei(e)}$i()}function $i(){if(!Ai&&null!==Di){Ai=!0;var e=0;try{var t=Di;Ui(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),Di=null}catch(t){throw null!==Di&&(Di=Di.slice(e+1)),_i(Ti,Ki),t}finally{Ai=!1}}}function Qi(e,t,n){return 1073741821-(1+((1073741821-e+t/10)/(n/=10)|0))*n}function qi(e,t){if(e&&e.defaultProps)for(var n in t=i({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}var Gi={current:null},Ji=null,Zi=null,Yi=null;function Xi(){Yi=Zi=Ji=null}function ea(e){var t=Gi.current;si(Gi),e.type._context._currentValue=t}function ta(e,t){for(;null!==e;){var n=e.alternate;if(e.childExpirationTime<t)e.childExpirationTime=t,null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t);else{if(!(null!==n&&n.childExpirationTime<t))break;n.childExpirationTime=t}e=e.return}}function na(e,t){Ji=e,Yi=Zi=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(e.expirationTime>=t&&(jo=!0),e.firstContext=null)}function ra(e,t){if(Yi!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(Yi=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Zi){if(null===Ji)throw Error(o(308));Zi=t,Ji.dependencies={expirationTime:0,firstContext:t,responders:null}}else Zi=Zi.next=t;return e._currentValue}var ia=!1;function aa(e){e.updateQueue={baseState:e.memoizedState,baseQueue:null,shared:{pending:null},effects:null}}function oa(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,baseQueue:e.baseQueue,shared:e.shared,effects:e.effects})}function la(e,t){return(e={expirationTime:e,suspenseConfig:t,tag:0,payload:null,callback:null,next:null}).next=e}function sa(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function ua(e,t){var n=e.alternate;null!==n&&oa(n,e),null===(n=(e=e.updateQueue).baseQueue)?(e.baseQueue=t.next=t,t.next=t):(t.next=n.next,n.next=t)}function ca(e,t,n,r){var a=e.updateQueue;ia=!1;var o=a.baseQueue,l=a.shared.pending;if(null!==l){if(null!==o){var s=o.next;o.next=l.next,l.next=s}o=l,a.shared.pending=null,null!==(s=e.alternate)&&(null!==(s=s.updateQueue)&&(s.baseQueue=l))}if(null!==o){s=o.next;var u=a.baseState,c=0,f=null,d=null,p=null;if(null!==s)for(var m=s;;){if((l=m.expirationTime)<r){var h={expirationTime:m.expirationTime,suspenseConfig:m.suspenseConfig,tag:m.tag,payload:m.payload,callback:m.callback,next:null};null===p?(d=p=h,f=u):p=p.next=h,l>c&&(c=l)}else{null!==p&&(p=p.next={expirationTime:1073741823,suspenseConfig:m.suspenseConfig,tag:m.tag,payload:m.payload,callback:m.callback,next:null}),as(l,m.suspenseConfig);e:{var g=e,v=m;switch(l=t,h=n,v.tag){case 1:if("function"==typeof(g=v.payload)){u=g.call(h,u,l);break e}u=g;break e;case 3:g.effectTag=-4097&g.effectTag|64;case 0:if(null==(l="function"==typeof(g=v.payload)?g.call(h,u,l):g))break e;u=i({},u,l);break e;case 2:ia=!0}}null!==m.callback&&(e.effectTag|=32,null===(l=a.effects)?a.effects=[m]:l.push(m))}if(null===(m=m.next)||m===s){if(null===(l=a.shared.pending))break;m=o.next=l.next,l.next=s,a.baseQueue=o=l,a.shared.pending=null}}null===p?f=u:p.next=d,a.baseState=f,a.baseQueue=p,os(c),e.expirationTime=c,e.memoizedState=u}}function fa(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],i=r.callback;if(null!==i){if(r.callback=null,r=i,i=n,"function"!=typeof r)throw Error(o(191,r));r.call(i)}}}var da=J.ReactCurrentBatchConfig,pa=(new r.Component).refs;function ma(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:i({},t,n),e.memoizedState=n,0===e.expirationTime&&(e.updateQueue.baseState=n)}var ha={isMounted:function(e){return!!(e=e._reactInternalFiber)&&Xe(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=$l(),i=da.suspense;(i=la(r=Ql(r,e,i),i)).payload=t,null!=n&&(i.callback=n),sa(e,i),ql(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=$l(),i=da.suspense;(i=la(r=Ql(r,e,i),i)).tag=1,i.payload=t,null!=n&&(i.callback=n),sa(e,i),ql(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=$l(),r=da.suspense;(r=la(n=Ql(n,e,r),r)).tag=2,null!=t&&(r.callback=t),sa(e,r),ql(e,n)}};function ga(e,t,n,r,i,a,o){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,a,o):!t.prototype||!t.prototype.isPureReactComponent||(!Br(n,r)||!Br(i,a))}function va(e,t,n){var r=!1,i=ci,a=t.contextType;return"object"==typeof a&&null!==a?a=ra(a):(i=hi(t)?pi:fi.current,a=(r=null!=(r=t.contextTypes))?mi(e,i):ci),t=new t(n,a),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=ha,e.stateNode=t,t._reactInternalFiber=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=i,e.__reactInternalMemoizedMaskedChildContext=a),t}function ya(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&ha.enqueueReplaceState(t,t.state,null)}function ba(e,t,n,r){var i=e.stateNode;i.props=n,i.state=e.memoizedState,i.refs=pa,aa(e);var a=t.contextType;"object"==typeof a&&null!==a?i.context=ra(a):(a=hi(t)?pi:fi.current,i.context=mi(e,a)),ca(e,n,i,r),i.state=e.memoizedState,"function"==typeof(a=t.getDerivedStateFromProps)&&(ma(e,t,a,n),i.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof i.getSnapshotBeforeUpdate||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||(t=i.state,"function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount(),t!==i.state&&ha.enqueueReplaceState(i,i.state,null),ca(e,n,i,r),i.state=e.memoizedState),"function"==typeof i.componentDidMount&&(e.effectTag|=4)}var wa=Array.isArray;function ka(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(o(309));var r=n.stateNode}if(!r)throw Error(o(147,e));var i=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===i?t.ref:((t=function(e){var t=r.refs;t===pa&&(t=r.refs={}),null===e?delete t[i]:t[i]=e})._stringRef=i,t)}if("string"!=typeof e)throw Error(o(284));if(!n._owner)throw Error(o(290,e))}return e}function _a(e,t){if("textarea"!==e.type)throw Error(o(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,""))}function Ea(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function i(e,t){return(e=Ss(e,t)).index=0,e.sibling=null,e}function a(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function l(t){return e&&null===t.alternate&&(t.effectTag=2),t}function s(e,t,n,r){return null===t||6!==t.tag?((t=Ps(n,e.mode,r)).return=e,t):((t=i(t,n)).return=e,t)}function u(e,t,n,r){return null!==t&&t.elementType===n.type?((r=i(t,n.props)).ref=ka(e,t,n),r.return=e,r):((r=Ts(n.type,n.key,n.props,null,e.mode,r)).ref=ka(e,t,n),r.return=e,r)}function c(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=js(n,e.mode,r)).return=e,t):((t=i(t,n.children||[])).return=e,t)}function f(e,t,n,r,a){return null===t||7!==t.tag?((t=Ns(n,e.mode,r,a)).return=e,t):((t=i(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Ps(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case ee:return(n=Ts(t.type,t.key,t.props,null,e.mode,n)).ref=ka(e,null,t),n.return=e,n;case te:return(t=js(t,e.mode,n)).return=e,t}if(wa(t)||he(t))return(t=Ns(t,e.mode,n,null)).return=e,t;_a(e,t)}return null}function p(e,t,n,r){var i=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==i?null:s(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case ee:return n.key===i?n.type===ne?f(e,t,n.props.children,r,i):u(e,t,n,r):null;case te:return n.key===i?c(e,t,n,r):null}if(wa(n)||he(n))return null!==i?null:f(e,t,n,r,null);_a(e,n)}return null}function m(e,t,n,r,i){if("string"==typeof r||"number"==typeof r)return s(t,e=e.get(n)||null,""+r,i);if("object"==typeof r&&null!==r){switch(r.$$typeof){case ee:return e=e.get(null===r.key?n:r.key)||null,r.type===ne?f(t,e,r.props.children,i,r.key):u(t,e,r,i);case te:return c(t,e=e.get(null===r.key?n:r.key)||null,r,i)}if(wa(r)||he(r))return f(t,e=e.get(n)||null,r,i,null);_a(t,r)}return null}function h(i,o,l,s){for(var u=null,c=null,f=o,h=o=0,g=null;null!==f&&h<l.length;h++){f.index>h?(g=f,f=null):g=f.sibling;var v=p(i,f,l[h],s);if(null===v){null===f&&(f=g);break}e&&f&&null===v.alternate&&t(i,f),o=a(v,o,h),null===c?u=v:c.sibling=v,c=v,f=g}if(h===l.length)return n(i,f),u;if(null===f){for(;h<l.length;h++)null!==(f=d(i,l[h],s))&&(o=a(f,o,h),null===c?u=f:c.sibling=f,c=f);return u}for(f=r(i,f);h<l.length;h++)null!==(g=m(f,i,h,l[h],s))&&(e&&null!==g.alternate&&f.delete(null===g.key?h:g.key),o=a(g,o,h),null===c?u=g:c.sibling=g,c=g);return e&&f.forEach((function(e){return t(i,e)})),u}function g(i,l,s,u){var c=he(s);if("function"!=typeof c)throw Error(o(150));if(null==(s=c.call(s)))throw Error(o(151));for(var f=c=null,h=l,g=l=0,v=null,y=s.next();null!==h&&!y.done;g++,y=s.next()){h.index>g?(v=h,h=null):v=h.sibling;var b=p(i,h,y.value,u);if(null===b){null===h&&(h=v);break}e&&h&&null===b.alternate&&t(i,h),l=a(b,l,g),null===f?c=b:f.sibling=b,f=b,h=v}if(y.done)return n(i,h),c;if(null===h){for(;!y.done;g++,y=s.next())null!==(y=d(i,y.value,u))&&(l=a(y,l,g),null===f?c=y:f.sibling=y,f=y);return c}for(h=r(i,h);!y.done;g++,y=s.next())null!==(y=m(h,i,g,y.value,u))&&(e&&null!==y.alternate&&h.delete(null===y.key?g:y.key),l=a(y,l,g),null===f?c=y:f.sibling=y,f=y);return e&&h.forEach((function(e){return t(i,e)})),c}return function(e,r,a,s){var u="object"==typeof a&&null!==a&&a.type===ne&&null===a.key;u&&(a=a.props.children);var c="object"==typeof a&&null!==a;if(c)switch(a.$$typeof){case ee:e:{for(c=a.key,u=r;null!==u;){if(u.key===c){switch(u.tag){case 7:if(a.type===ne){n(e,u.sibling),(r=i(u,a.props.children)).return=e,e=r;break e}break;default:if(u.elementType===a.type){n(e,u.sibling),(r=i(u,a.props)).ref=ka(e,u,a),r.return=e,e=r;break e}}n(e,u);break}t(e,u),u=u.sibling}a.type===ne?((r=Ns(a.props.children,e.mode,s,a.key)).return=e,e=r):((s=Ts(a.type,a.key,a.props,null,e.mode,s)).ref=ka(e,r,a),s.return=e,e=s)}return l(e);case te:e:{for(u=a.key;null!==r;){if(r.key===u){if(4===r.tag&&r.stateNode.containerInfo===a.containerInfo&&r.stateNode.implementation===a.implementation){n(e,r.sibling),(r=i(r,a.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=js(a,e.mode,s)).return=e,e=r}return l(e)}if("string"==typeof a||"number"==typeof a)return a=""+a,null!==r&&6===r.tag?(n(e,r.sibling),(r=i(r,a)).return=e,e=r):(n(e,r),(r=Ps(a,e.mode,s)).return=e,e=r),l(e);if(wa(a))return h(e,r,a,s);if(he(a))return g(e,r,a,s);if(c&&_a(e,a),void 0===a&&!u)switch(e.tag){case 1:case 0:throw e=e.type,Error(o(152,e.displayName||e.name||"Component"))}return n(e,r)}}var xa=Ea(!0),za=Ea(!1),Sa={},Ta={current:Sa},Na={current:Sa},Pa={current:Sa};function ja(e){if(e===Sa)throw Error(o(174));return e}function Ca(e,t){switch(ui(Pa,t),ui(Na,e),ui(Ta,Sa),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:Ae(null,"");break;default:t=Ae(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}si(Ta),ui(Ta,t)}function Ia(){si(Ta),si(Na),si(Pa)}function Ma(e){ja(Pa.current);var t=ja(Ta.current),n=Ae(t,e.type);t!==n&&(ui(Na,e),ui(Ta,n))}function Oa(e){Na.current===e&&(si(Ta),si(Na))}var Da={current:0};function La(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.effectTag))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}function Aa(e,t){return{responder:e,props:t}}var Fa=J.ReactCurrentDispatcher,Ba=J.ReactCurrentBatchConfig,Ra=0,Wa=null,Ua=null,Ha=null,Va=!1;function Ka(){throw Error(o(321))}function $a(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!Ar(e[n],t[n]))return!1;return!0}function Qa(e,t,n,r,i,a){if(Ra=a,Wa=t,t.memoizedState=null,t.updateQueue=null,t.expirationTime=0,Fa.current=null===e||null===e.memoizedState?vo:yo,e=n(r,i),t.expirationTime===Ra){a=0;do{if(t.expirationTime=0,!(25>a))throw Error(o(301));a+=1,Ha=Ua=null,t.updateQueue=null,Fa.current=bo,e=n(r,i)}while(t.expirationTime===Ra)}if(Fa.current=go,t=null!==Ua&&null!==Ua.next,Ra=0,Ha=Ua=Wa=null,Va=!1,t)throw Error(o(300));return e}function qa(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Ha?Wa.memoizedState=Ha=e:Ha=Ha.next=e,Ha}function Ga(){if(null===Ua){var e=Wa.alternate;e=null!==e?e.memoizedState:null}else e=Ua.next;var t=null===Ha?Wa.memoizedState:Ha.next;if(null!==t)Ha=t,Ua=e;else{if(null===e)throw Error(o(310));e={memoizedState:(Ua=e).memoizedState,baseState:Ua.baseState,baseQueue:Ua.baseQueue,queue:Ua.queue,next:null},null===Ha?Wa.memoizedState=Ha=e:Ha=Ha.next=e}return Ha}function Ja(e,t){return"function"==typeof t?t(e):t}function Za(e){var t=Ga(),n=t.queue;if(null===n)throw Error(o(311));n.lastRenderedReducer=e;var r=Ua,i=r.baseQueue,a=n.pending;if(null!==a){if(null!==i){var l=i.next;i.next=a.next,a.next=l}r.baseQueue=i=a,n.pending=null}if(null!==i){i=i.next,r=r.baseState;var s=l=a=null,u=i;do{var c=u.expirationTime;if(c<Ra){var f={expirationTime:u.expirationTime,suspenseConfig:u.suspenseConfig,action:u.action,eagerReducer:u.eagerReducer,eagerState:u.eagerState,next:null};null===s?(l=s=f,a=r):s=s.next=f,c>Wa.expirationTime&&(Wa.expirationTime=c,os(c))}else null!==s&&(s=s.next={expirationTime:1073741823,suspenseConfig:u.suspenseConfig,action:u.action,eagerReducer:u.eagerReducer,eagerState:u.eagerState,next:null}),as(c,u.suspenseConfig),r=u.eagerReducer===e?u.eagerState:e(r,u.action);u=u.next}while(null!==u&&u!==i);null===s?a=r:s.next=l,Ar(r,t.memoizedState)||(jo=!0),t.memoizedState=r,t.baseState=a,t.baseQueue=s,n.lastRenderedState=r}return[t.memoizedState,n.dispatch]}function Ya(e){var t=Ga(),n=t.queue;if(null===n)throw Error(o(311));n.lastRenderedReducer=e;var r=n.dispatch,i=n.pending,a=t.memoizedState;if(null!==i){n.pending=null;var l=i=i.next;do{a=e(a,l.action),l=l.next}while(l!==i);Ar(a,t.memoizedState)||(jo=!0),t.memoizedState=a,null===t.baseQueue&&(t.baseState=a),n.lastRenderedState=a}return[a,r]}function Xa(e){var t=qa();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:Ja,lastRenderedState:e}).dispatch=ho.bind(null,Wa,e),[t.memoizedState,e]}function eo(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=Wa.updateQueue)?(t={lastEffect:null},Wa.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function to(){return Ga().memoizedState}function no(e,t,n,r){var i=qa();Wa.effectTag|=e,i.memoizedState=eo(1|t,n,void 0,void 0===r?null:r)}function ro(e,t,n,r){var i=Ga();r=void 0===r?null:r;var a=void 0;if(null!==Ua){var o=Ua.memoizedState;if(a=o.destroy,null!==r&&$a(r,o.deps))return void eo(t,n,a,r)}Wa.effectTag|=e,i.memoizedState=eo(1|t,n,a,r)}function io(e,t){return no(516,4,e,t)}function ao(e,t){return ro(516,4,e,t)}function oo(e,t){return ro(4,2,e,t)}function lo(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function so(e,t,n){return n=null!=n?n.concat([e]):null,ro(4,2,lo.bind(null,t,e),n)}function uo(){}function co(e,t){return qa().memoizedState=[e,void 0===t?null:t],e}function fo(e,t){var n=Ga();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&$a(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function po(e,t){var n=Ga();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&$a(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function mo(e,t,n){var r=Ri();Ui(98>r?98:r,(function(){e(!0)})),Ui(97<r?97:r,(function(){var r=Ba.suspense;Ba.suspense=void 0===t?null:t;try{e(!1),n()}finally{Ba.suspense=r}}))}function ho(e,t,n){var r=$l(),i=da.suspense;i={expirationTime:r=Ql(r,e,i),suspenseConfig:i,action:n,eagerReducer:null,eagerState:null,next:null};var a=t.pending;if(null===a?i.next=i:(i.next=a.next,a.next=i),t.pending=i,a=e.alternate,e===Wa||null!==a&&a===Wa)Va=!0,i.expirationTime=Ra,Wa.expirationTime=Ra;else{if(0===e.expirationTime&&(null===a||0===a.expirationTime)&&null!==(a=t.lastRenderedReducer))try{var o=t.lastRenderedState,l=a(o,n);if(i.eagerReducer=a,i.eagerState=l,Ar(l,o))return}catch(e){}ql(e,r)}}var go={readContext:ra,useCallback:Ka,useContext:Ka,useEffect:Ka,useImperativeHandle:Ka,useLayoutEffect:Ka,useMemo:Ka,useReducer:Ka,useRef:Ka,useState:Ka,useDebugValue:Ka,useResponder:Ka,useDeferredValue:Ka,useTransition:Ka},vo={readContext:ra,useCallback:co,useContext:ra,useEffect:io,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,no(4,2,lo.bind(null,t,e),n)},useLayoutEffect:function(e,t){return no(4,2,e,t)},useMemo:function(e,t){var n=qa();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=qa();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=ho.bind(null,Wa,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},qa().memoizedState=e},useState:Xa,useDebugValue:uo,useResponder:Aa,useDeferredValue:function(e,t){var n=Xa(e),r=n[0],i=n[1];return io((function(){var n=Ba.suspense;Ba.suspense=void 0===t?null:t;try{i(e)}finally{Ba.suspense=n}}),[e,t]),r},useTransition:function(e){var t=Xa(!1),n=t[0];return t=t[1],[co(mo.bind(null,t,e),[t,e]),n]}},yo={readContext:ra,useCallback:fo,useContext:ra,useEffect:ao,useImperativeHandle:so,useLayoutEffect:oo,useMemo:po,useReducer:Za,useRef:to,useState:function(){return Za(Ja)},useDebugValue:uo,useResponder:Aa,useDeferredValue:function(e,t){var n=Za(Ja),r=n[0],i=n[1];return ao((function(){var n=Ba.suspense;Ba.suspense=void 0===t?null:t;try{i(e)}finally{Ba.suspense=n}}),[e,t]),r},useTransition:function(e){var t=Za(Ja),n=t[0];return t=t[1],[fo(mo.bind(null,t,e),[t,e]),n]}},bo={readContext:ra,useCallback:fo,useContext:ra,useEffect:ao,useImperativeHandle:so,useLayoutEffect:oo,useMemo:po,useReducer:Ya,useRef:to,useState:function(){return Ya(Ja)},useDebugValue:uo,useResponder:Aa,useDeferredValue:function(e,t){var n=Ya(Ja),r=n[0],i=n[1];return ao((function(){var n=Ba.suspense;Ba.suspense=void 0===t?null:t;try{i(e)}finally{Ba.suspense=n}}),[e,t]),r},useTransition:function(e){var t=Ya(Ja),n=t[0];return t=t[1],[fo(mo.bind(null,t,e),[t,e]),n]}},wo=null,ko=null,_o=!1;function Eo(e,t){var n=xs(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function xo(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function zo(e){if(_o){var t=ko;if(t){var n=t;if(!xo(e,t)){if(!(t=kn(n.nextSibling))||!xo(e,t))return e.effectTag=-1025&e.effectTag|2,_o=!1,void(wo=e);Eo(wo,n)}wo=e,ko=kn(t.firstChild)}else e.effectTag=-1025&e.effectTag|2,_o=!1,wo=e}}function So(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;wo=e}function To(e){if(e!==wo)return!1;if(!_o)return So(e),_o=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!yn(t,e.memoizedProps))for(t=ko;t;)Eo(e,t),t=kn(t.nextSibling);if(So(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(o(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){ko=kn(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}ko=null}}else ko=wo?kn(e.stateNode.nextSibling):null;return!0}function No(){ko=wo=null,_o=!1}var Po=J.ReactCurrentOwner,jo=!1;function Co(e,t,n,r){t.child=null===e?za(t,null,n,r):xa(t,e.child,n,r)}function Io(e,t,n,r,i){n=n.render;var a=t.ref;return na(t,i),r=Qa(e,t,n,r,a,i),null===e||jo?(t.effectTag|=1,Co(e,t,r,i),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=i&&(e.expirationTime=0),qo(e,t,i))}function Mo(e,t,n,r,i,a){if(null===e){var o=n.type;return"function"!=typeof o||zs(o)||void 0!==o.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Ts(n.type,null,r,null,t.mode,a)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=o,Oo(e,t,o,r,i,a))}return o=e.child,i<a&&(i=o.memoizedProps,(n=null!==(n=n.compare)?n:Br)(i,r)&&e.ref===t.ref)?qo(e,t,a):(t.effectTag|=1,(e=Ss(o,r)).ref=t.ref,e.return=t,t.child=e)}function Oo(e,t,n,r,i,a){return null!==e&&Br(e.memoizedProps,r)&&e.ref===t.ref&&(jo=!1,i<a)?(t.expirationTime=e.expirationTime,qo(e,t,a)):Lo(e,t,n,r,a)}function Do(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function Lo(e,t,n,r,i){var a=hi(n)?pi:fi.current;return a=mi(t,a),na(t,i),n=Qa(e,t,n,r,a,i),null===e||jo?(t.effectTag|=1,Co(e,t,n,i),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=i&&(e.expirationTime=0),qo(e,t,i))}function Ao(e,t,n,r,i){if(hi(n)){var a=!0;bi(t)}else a=!1;if(na(t,i),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),va(t,n,r),ba(t,n,r,i),r=!0;else if(null===e){var o=t.stateNode,l=t.memoizedProps;o.props=l;var s=o.context,u=n.contextType;"object"==typeof u&&null!==u?u=ra(u):u=mi(t,u=hi(n)?pi:fi.current);var c=n.getDerivedStateFromProps,f="function"==typeof c||"function"==typeof o.getSnapshotBeforeUpdate;f||"function"!=typeof o.UNSAFE_componentWillReceiveProps&&"function"!=typeof o.componentWillReceiveProps||(l!==r||s!==u)&&ya(t,o,r,u),ia=!1;var d=t.memoizedState;o.state=d,ca(t,r,o,i),s=t.memoizedState,l!==r||d!==s||di.current||ia?("function"==typeof c&&(ma(t,n,c,r),s=t.memoizedState),(l=ia||ga(t,n,l,r,d,s,u))?(f||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||("function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount()),"function"==typeof o.componentDidMount&&(t.effectTag|=4)):("function"==typeof o.componentDidMount&&(t.effectTag|=4),t.memoizedProps=r,t.memoizedState=s),o.props=r,o.state=s,o.context=u,r=l):("function"==typeof o.componentDidMount&&(t.effectTag|=4),r=!1)}else o=t.stateNode,oa(e,t),l=t.memoizedProps,o.props=t.type===t.elementType?l:qi(t.type,l),s=o.context,"object"==typeof(u=n.contextType)&&null!==u?u=ra(u):u=mi(t,u=hi(n)?pi:fi.current),(f="function"==typeof(c=n.getDerivedStateFromProps)||"function"==typeof o.getSnapshotBeforeUpdate)||"function"!=typeof o.UNSAFE_componentWillReceiveProps&&"function"!=typeof o.componentWillReceiveProps||(l!==r||s!==u)&&ya(t,o,r,u),ia=!1,s=t.memoizedState,o.state=s,ca(t,r,o,i),d=t.memoizedState,l!==r||s!==d||di.current||ia?("function"==typeof c&&(ma(t,n,c,r),d=t.memoizedState),(c=ia||ga(t,n,l,r,s,d,u))?(f||"function"!=typeof o.UNSAFE_componentWillUpdate&&"function"!=typeof o.componentWillUpdate||("function"==typeof o.componentWillUpdate&&o.componentWillUpdate(r,d,u),"function"==typeof o.UNSAFE_componentWillUpdate&&o.UNSAFE_componentWillUpdate(r,d,u)),"function"==typeof o.componentDidUpdate&&(t.effectTag|=4),"function"==typeof o.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof o.componentDidUpdate||l===e.memoizedProps&&s===e.memoizedState||(t.effectTag|=4),"function"!=typeof o.getSnapshotBeforeUpdate||l===e.memoizedProps&&s===e.memoizedState||(t.effectTag|=256),t.memoizedProps=r,t.memoizedState=d),o.props=r,o.state=d,o.context=u,r=c):("function"!=typeof o.componentDidUpdate||l===e.memoizedProps&&s===e.memoizedState||(t.effectTag|=4),"function"!=typeof o.getSnapshotBeforeUpdate||l===e.memoizedProps&&s===e.memoizedState||(t.effectTag|=256),r=!1);return Fo(e,t,n,r,a,i)}function Fo(e,t,n,r,i,a){Do(e,t);var o=0!=(64&t.effectTag);if(!r&&!o)return i&&wi(t,n,!1),qo(e,t,a);r=t.stateNode,Po.current=t;var l=o&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.effectTag|=1,null!==e&&o?(t.child=xa(t,e.child,null,a),t.child=xa(t,null,l,a)):Co(e,t,l,a),t.memoizedState=r.state,i&&wi(t,n,!0),t.child}function Bo(e){var t=e.stateNode;t.pendingContext?vi(0,t.pendingContext,t.pendingContext!==t.context):t.context&&vi(0,t.context,!1),Ca(e,t.containerInfo)}var Ro,Wo,Uo,Ho={dehydrated:null,retryTime:0};function Vo(e,t,n){var r,i=t.mode,a=t.pendingProps,o=Da.current,l=!1;if((r=0!=(64&t.effectTag))||(r=0!=(2&o)&&(null===e||null!==e.memoizedState)),r?(l=!0,t.effectTag&=-65):null!==e&&null===e.memoizedState||void 0===a.fallback||!0===a.unstable_avoidThisFallback||(o|=1),ui(Da,1&o),null===e){if(void 0!==a.fallback&&zo(t),l){if(l=a.fallback,(a=Ns(null,i,0,null)).return=t,0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,a.child=e;null!==e;)e.return=a,e=e.sibling;return(n=Ns(l,i,n,null)).return=t,a.sibling=n,t.memoizedState=Ho,t.child=a,n}return i=a.children,t.memoizedState=null,t.child=za(t,null,i,n)}if(null!==e.memoizedState){if(i=(e=e.child).sibling,l){if(a=a.fallback,(n=Ss(e,e.pendingProps)).return=t,0==(2&t.mode)&&(l=null!==t.memoizedState?t.child.child:t.child)!==e.child)for(n.child=l;null!==l;)l.return=n,l=l.sibling;return(i=Ss(i,a)).return=t,n.sibling=i,n.childExpirationTime=0,t.memoizedState=Ho,t.child=n,i}return n=xa(t,e.child,a.children,n),t.memoizedState=null,t.child=n}if(e=e.child,l){if(l=a.fallback,(a=Ns(null,i,0,null)).return=t,a.child=e,null!==e&&(e.return=a),0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,a.child=e;null!==e;)e.return=a,e=e.sibling;return(n=Ns(l,i,n,null)).return=t,a.sibling=n,n.effectTag|=2,a.childExpirationTime=0,t.memoizedState=Ho,t.child=a,n}return t.memoizedState=null,t.child=xa(t,e,a.children,n)}function Ko(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t),ta(e.return,t)}function $o(e,t,n,r,i,a){var o=e.memoizedState;null===o?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailExpiration:0,tailMode:i,lastEffect:a}:(o.isBackwards=t,o.rendering=null,o.renderingStartTime=0,o.last=r,o.tail=n,o.tailExpiration=0,o.tailMode=i,o.lastEffect=a)}function Qo(e,t,n){var r=t.pendingProps,i=r.revealOrder,a=r.tail;if(Co(e,t,r.children,n),0!=(2&(r=Da.current)))r=1&r|2,t.effectTag|=64;else{if(null!==e&&0!=(64&e.effectTag))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Ko(e,n);else if(19===e.tag)Ko(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(ui(Da,r),0==(2&t.mode))t.memoizedState=null;else switch(i){case"forwards":for(n=t.child,i=null;null!==n;)null!==(e=n.alternate)&&null===La(e)&&(i=n),n=n.sibling;null===(n=i)?(i=t.child,t.child=null):(i=n.sibling,n.sibling=null),$o(t,!1,i,n,a,t.lastEffect);break;case"backwards":for(n=null,i=t.child,t.child=null;null!==i;){if(null!==(e=i.alternate)&&null===La(e)){t.child=i;break}e=i.sibling,i.sibling=n,n=i,i=e}$o(t,!0,n,null,a,t.lastEffect);break;case"together":$o(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function qo(e,t,n){null!==e&&(t.dependencies=e.dependencies);var r=t.expirationTime;if(0!==r&&os(r),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child)throw Error(o(153));if(null!==t.child){for(n=Ss(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Ss(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function Go(e,t){switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function Jo(e,t,n){var r=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return hi(t.type)&&gi(),null;case 3:return Ia(),si(di),si(fi),(n=t.stateNode).pendingContext&&(n.context=n.pendingContext,n.pendingContext=null),null!==e&&null!==e.child||!To(t)||(t.effectTag|=4),null;case 5:Oa(t),n=ja(Pa.current);var a=t.type;if(null!==e&&null!=t.stateNode)Wo(e,t,a,r,n),e.ref!==t.ref&&(t.effectTag|=128);else{if(!r){if(null===t.stateNode)throw Error(o(166));return null}if(e=ja(Ta.current),To(t)){r=t.stateNode,a=t.type;var l=t.memoizedProps;switch(r[xn]=t,r[zn]=l,a){case"iframe":case"object":case"embed":Qt("load",r);break;case"video":case"audio":for(e=0;e<Je.length;e++)Qt(Je[e],r);break;case"source":Qt("error",r);break;case"img":case"image":case"link":Qt("error",r),Qt("load",r);break;case"form":Qt("reset",r),Qt("submit",r);break;case"details":Qt("toggle",r);break;case"input":Ee(r,l),Qt("invalid",r),sn(n,"onChange");break;case"select":r._wrapperState={wasMultiple:!!l.multiple},Qt("invalid",r),sn(n,"onChange");break;case"textarea":Ce(r,l),Qt("invalid",r),sn(n,"onChange")}for(var s in an(a,l),e=null,l)if(l.hasOwnProperty(s)){var u=l[s];"children"===s?"string"==typeof u?r.textContent!==u&&(e=["children",u]):"number"==typeof u&&r.textContent!==""+u&&(e=["children",""+u]):x.hasOwnProperty(s)&&null!=u&&sn(n,s)}switch(a){case"input":we(r),Se(r,l,!0);break;case"textarea":we(r),Me(r);break;case"select":case"option":break;default:"function"==typeof l.onClick&&(r.onclick=un)}n=e,t.updateQueue=n,null!==n&&(t.effectTag|=4)}else{switch(s=9===n.nodeType?n:n.ownerDocument,e===ln&&(e=Le(a)),e===ln?"script"===a?((e=s.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=s.createElement(a,{is:r.is}):(e=s.createElement(a),"select"===a&&(s=e,r.multiple?s.multiple=!0:r.size&&(s.size=r.size))):e=s.createElementNS(e,a),e[xn]=t,e[zn]=r,Ro(e,t),t.stateNode=e,s=on(a,r),a){case"iframe":case"object":case"embed":Qt("load",e),u=r;break;case"video":case"audio":for(u=0;u<Je.length;u++)Qt(Je[u],e);u=r;break;case"source":Qt("error",e),u=r;break;case"img":case"image":case"link":Qt("error",e),Qt("load",e),u=r;break;case"form":Qt("reset",e),Qt("submit",e),u=r;break;case"details":Qt("toggle",e),u=r;break;case"input":Ee(e,r),u=_e(e,r),Qt("invalid",e),sn(n,"onChange");break;case"option":u=Ne(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},u=i({},r,{value:void 0}),Qt("invalid",e),sn(n,"onChange");break;case"textarea":Ce(e,r),u=je(e,r),Qt("invalid",e),sn(n,"onChange");break;default:u=r}an(a,u);var c=u;for(l in c)if(c.hasOwnProperty(l)){var f=c[l];"style"===l?nn(e,f):"dangerouslySetInnerHTML"===l?null!=(f=f?f.__html:void 0)&&Be(e,f):"children"===l?"string"==typeof f?("textarea"!==a||""!==f)&&Re(e,f):"number"==typeof f&&Re(e,""+f):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(x.hasOwnProperty(l)?null!=f&&sn(n,l):null!=f&&Z(e,l,f,s))}switch(a){case"input":we(e),Se(e,r,!1);break;case"textarea":we(e),Me(e);break;case"option":null!=r.value&&e.setAttribute("value",""+ye(r.value));break;case"select":e.multiple=!!r.multiple,null!=(n=r.value)?Pe(e,!!r.multiple,n,!1):null!=r.defaultValue&&Pe(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof u.onClick&&(e.onclick=un)}vn(a,r)&&(t.effectTag|=4)}null!==t.ref&&(t.effectTag|=128)}return null;case 6:if(e&&null!=t.stateNode)Uo(0,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(o(166));n=ja(Pa.current),ja(Ta.current),To(t)?(n=t.stateNode,r=t.memoizedProps,n[xn]=t,n.nodeValue!==r&&(t.effectTag|=4)):((n=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[xn]=t,t.stateNode=n)}return null;case 13:return si(Da),r=t.memoizedState,0!=(64&t.effectTag)?(t.expirationTime=n,t):(n=null!==r,r=!1,null===e?void 0!==t.memoizedProps.fallback&&To(t):(r=null!==(a=e.memoizedState),n||null===a||null!==(a=e.child.sibling)&&(null!==(l=t.firstEffect)?(t.firstEffect=a,a.nextEffect=l):(t.firstEffect=t.lastEffect=a,a.nextEffect=null),a.effectTag=8)),n&&!r&&0!=(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&Da.current)?Tl===wl&&(Tl=kl):(Tl!==wl&&Tl!==kl||(Tl=_l),0!==Il&&null!==xl&&(Ms(xl,Sl),Os(xl,Il)))),(n||r)&&(t.effectTag|=4),null);case 4:return Ia(),null;case 10:return ea(t),null;case 17:return hi(t.type)&&gi(),null;case 19:if(si(Da),null===(r=t.memoizedState))return null;if(a=0!=(64&t.effectTag),null===(l=r.rendering)){if(a)Go(r,!1);else if(Tl!==wl||null!==e&&0!=(64&e.effectTag))for(l=t.child;null!==l;){if(null!==(e=La(l))){for(t.effectTag|=64,Go(r,!1),null!==(a=e.updateQueue)&&(t.updateQueue=a,t.effectTag|=4),null===r.lastEffect&&(t.firstEffect=null),t.lastEffect=r.lastEffect,r=t.child;null!==r;)l=n,(a=r).effectTag&=2,a.nextEffect=null,a.firstEffect=null,a.lastEffect=null,null===(e=a.alternate)?(a.childExpirationTime=0,a.expirationTime=l,a.child=null,a.memoizedProps=null,a.memoizedState=null,a.updateQueue=null,a.dependencies=null):(a.childExpirationTime=e.childExpirationTime,a.expirationTime=e.expirationTime,a.child=e.child,a.memoizedProps=e.memoizedProps,a.memoizedState=e.memoizedState,a.updateQueue=e.updateQueue,l=e.dependencies,a.dependencies=null===l?null:{expirationTime:l.expirationTime,firstContext:l.firstContext,responders:l.responders}),r=r.sibling;return ui(Da,1&Da.current|2),t.child}l=l.sibling}}else{if(!a)if(null!==(e=La(l))){if(t.effectTag|=64,a=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.effectTag|=4),Go(r,!0),null===r.tail&&"hidden"===r.tailMode&&!l.alternate)return null!==(t=t.lastEffect=r.lastEffect)&&(t.nextEffect=null),null}else 2*Bi()-r.renderingStartTime>r.tailExpiration&&1<n&&(t.effectTag|=64,a=!0,Go(r,!1),t.expirationTime=t.childExpirationTime=n-1);r.isBackwards?(l.sibling=t.child,t.child=l):(null!==(n=r.last)?n.sibling=l:t.child=l,r.last=l)}return null!==r.tail?(0===r.tailExpiration&&(r.tailExpiration=Bi()+500),n=r.tail,r.rendering=n,r.tail=n.sibling,r.lastEffect=t.lastEffect,r.renderingStartTime=Bi(),n.sibling=null,t=Da.current,ui(Da,a?1&t|2:1&t),n):null}throw Error(o(156,t.tag))}function Zo(e){switch(e.tag){case 1:hi(e.type)&&gi();var t=e.effectTag;return 4096&t?(e.effectTag=-4097&t|64,e):null;case 3:if(Ia(),si(di),si(fi),0!=(64&(t=e.effectTag)))throw Error(o(285));return e.effectTag=-4097&t|64,e;case 5:return Oa(e),null;case 13:return si(Da),4096&(t=e.effectTag)?(e.effectTag=-4097&t|64,e):null;case 19:return si(Da),null;case 4:return Ia(),null;case 10:return ea(e),null;default:return null}}function Yo(e,t){return{value:e,source:t,stack:ve(t)}}Ro=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Wo=function(e,t,n,r,a){var o=e.memoizedProps;if(o!==r){var l,s,u=t.stateNode;switch(ja(Ta.current),e=null,n){case"input":o=_e(u,o),r=_e(u,r),e=[];break;case"option":o=Ne(u,o),r=Ne(u,r),e=[];break;case"select":o=i({},o,{value:void 0}),r=i({},r,{value:void 0}),e=[];break;case"textarea":o=je(u,o),r=je(u,r),e=[];break;default:"function"!=typeof o.onClick&&"function"==typeof r.onClick&&(u.onclick=un)}for(l in an(n,r),n=null,o)if(!r.hasOwnProperty(l)&&o.hasOwnProperty(l)&&null!=o[l])if("style"===l)for(s in u=o[l])u.hasOwnProperty(s)&&(n||(n={}),n[s]="");else"dangerouslySetInnerHTML"!==l&&"children"!==l&&"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(x.hasOwnProperty(l)?e||(e=[]):(e=e||[]).push(l,null));for(l in r){var c=r[l];if(u=null!=o?o[l]:void 0,r.hasOwnProperty(l)&&c!==u&&(null!=c||null!=u))if("style"===l)if(u){for(s in u)!u.hasOwnProperty(s)||c&&c.hasOwnProperty(s)||(n||(n={}),n[s]="");for(s in c)c.hasOwnProperty(s)&&u[s]!==c[s]&&(n||(n={}),n[s]=c[s])}else n||(e||(e=[]),e.push(l,n)),n=c;else"dangerouslySetInnerHTML"===l?(c=c?c.__html:void 0,u=u?u.__html:void 0,null!=c&&u!==c&&(e=e||[]).push(l,c)):"children"===l?u===c||"string"!=typeof c&&"number"!=typeof c||(e=e||[]).push(l,""+c):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&(x.hasOwnProperty(l)?(null!=c&&sn(a,l),e||u===c||(e=[])):(e=e||[]).push(l,c))}n&&(e=e||[]).push("style",n),a=e,(t.updateQueue=a)&&(t.effectTag|=4)}},Uo=function(e,t,n,r){n!==r&&(t.effectTag|=4)};var Xo="function"==typeof WeakSet?WeakSet:Set;function el(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=ve(n)),null!==n&&ge(n.type),t=t.value,null!==e&&1===e.tag&&ge(e.type);try{console.error(t)}catch(e){setTimeout((function(){throw e}))}}function tl(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){ys(e,t)}else t.current=null}function nl(e,t){switch(t.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&t.effectTag&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:qi(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:case 5:case 6:case 4:case 17:return}throw Error(o(163))}function rl(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.destroy;n.destroy=void 0,void 0!==r&&r()}n=n.next}while(n!==t)}}function il(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function al(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:return void il(3,n);case 1:if(e=n.stateNode,4&n.effectTag)if(null===t)e.componentDidMount();else{var r=n.elementType===n.type?t.memoizedProps:qi(n.type,t.memoizedProps);e.componentDidUpdate(r,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate)}return void(null!==(t=n.updateQueue)&&fa(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:e=n.child.stateNode;break;case 1:e=n.child.stateNode}fa(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.effectTag&&vn(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&Lt(n)))));case 19:case 17:case 20:case 21:return}throw Error(o(163))}function ol(e,t,n){switch("function"==typeof _s&&_s(t),t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var r=e.next;Ui(97<n?97:n,(function(){var e=r;do{var n=e.destroy;if(void 0!==n){var i=t;try{n()}catch(e){ys(i,e)}}e=e.next}while(e!==r)}))}break;case 1:tl(t),"function"==typeof(n=t.stateNode).componentWillUnmount&&function(e,t){try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){ys(e,t)}}(t,n);break;case 5:tl(t);break;case 4:cl(e,t,n)}}function ll(e){var t=e.alternate;e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null,e.dependencies=null,e.alternate=null,e.firstEffect=null,e.lastEffect=null,e.pendingProps=null,e.memoizedProps=null,e.stateNode=null,null!==t&&ll(t)}function sl(e){return 5===e.tag||3===e.tag||4===e.tag}function ul(e){e:{for(var t=e.return;null!==t;){if(sl(t)){var n=t;break e}t=t.return}throw Error(o(160))}switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(o(161))}16&n.effectTag&&(Re(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||sl(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}r?function e(t,n,r){var i=t.tag,a=5===i||6===i;if(a)t=a?t.stateNode:t.stateNode.instance,n?8===r.nodeType?r.parentNode.insertBefore(t,n):r.insertBefore(t,n):(8===r.nodeType?(n=r.parentNode).insertBefore(t,r):(n=r).appendChild(t),null!==(r=r._reactRootContainer)&&void 0!==r||null!==n.onclick||(n.onclick=un));else if(4!==i&&null!==(t=t.child))for(e(t,n,r),t=t.sibling;null!==t;)e(t,n,r),t=t.sibling}(e,n,t):function e(t,n,r){var i=t.tag,a=5===i||6===i;if(a)t=a?t.stateNode:t.stateNode.instance,n?r.insertBefore(t,n):r.appendChild(t);else if(4!==i&&null!==(t=t.child))for(e(t,n,r),t=t.sibling;null!==t;)e(t,n,r),t=t.sibling}(e,n,t)}function cl(e,t,n){for(var r,i,a=t,l=!1;;){if(!l){l=a.return;e:for(;;){if(null===l)throw Error(o(160));switch(r=l.stateNode,l.tag){case 5:i=!1;break e;case 3:case 4:r=r.containerInfo,i=!0;break e}l=l.return}l=!0}if(5===a.tag||6===a.tag){e:for(var s=e,u=a,c=n,f=u;;)if(ol(s,f,c),null!==f.child&&4!==f.tag)f.child.return=f,f=f.child;else{if(f===u)break e;for(;null===f.sibling;){if(null===f.return||f.return===u)break e;f=f.return}f.sibling.return=f.return,f=f.sibling}i?(s=r,u=a.stateNode,8===s.nodeType?s.parentNode.removeChild(u):s.removeChild(u)):r.removeChild(a.stateNode)}else if(4===a.tag){if(null!==a.child){r=a.stateNode.containerInfo,i=!0,a.child.return=a,a=a.child;continue}}else if(ol(e,a,n),null!==a.child){a.child.return=a,a=a.child;continue}if(a===t)break;for(;null===a.sibling;){if(null===a.return||a.return===t)return;4===(a=a.return).tag&&(l=!1)}a.sibling.return=a.return,a=a.sibling}}function fl(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:return void rl(3,t);case 1:return;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps,i=null!==e?e.memoizedProps:r;e=t.type;var a=t.updateQueue;if(t.updateQueue=null,null!==a){for(n[zn]=r,"input"===e&&"radio"===r.type&&null!=r.name&&xe(n,r),on(e,i),t=on(e,r),i=0;i<a.length;i+=2){var l=a[i],s=a[i+1];"style"===l?nn(n,s):"dangerouslySetInnerHTML"===l?Be(n,s):"children"===l?Re(n,s):Z(n,l,s,t)}switch(e){case"input":ze(n,r);break;case"textarea":Ie(n,r);break;case"select":t=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(e=r.value)?Pe(n,!!r.multiple,e,!1):t!==!!r.multiple&&(null!=r.defaultValue?Pe(n,!!r.multiple,r.defaultValue,!0):Pe(n,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(o(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((t=t.stateNode).hydrate&&(t.hydrate=!1,Lt(t.containerInfo)));case 12:return;case 13:if(n=t,null===t.memoizedState?r=!1:(r=!0,n=t.child,Ol=Bi()),null!==n)e:for(e=n;;){if(5===e.tag)a=e.stateNode,r?"function"==typeof(a=a.style).setProperty?a.setProperty("display","none","important"):a.display="none":(a=e.stateNode,i=null!=(i=e.memoizedProps.style)&&i.hasOwnProperty("display")?i.display:null,a.style.display=tn("display",i));else if(6===e.tag)e.stateNode.nodeValue=r?"":e.memoizedProps;else{if(13===e.tag&&null!==e.memoizedState&&null===e.memoizedState.dehydrated){(a=e.child.sibling).return=e,e=a;continue}if(null!==e.child){e.child.return=e,e=e.child;continue}}if(e===n)break;for(;null===e.sibling;){if(null===e.return||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}return void dl(t);case 19:return void dl(t);case 17:return}throw Error(o(163))}function dl(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Xo),t.forEach((function(t){var r=ws.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}var pl="function"==typeof WeakMap?WeakMap:Map;function ml(e,t,n){(n=la(n,null)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Ll||(Ll=!0,Al=r),el(e,t)},n}function hl(e,t,n){(n=la(n,null)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var i=t.value;n.payload=function(){return el(e,t),r(i)}}var a=e.stateNode;return null!==a&&"function"==typeof a.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Fl?Fl=new Set([this]):Fl.add(this),el(e,t));var n=t.stack;this.componentDidCatch(t.value,{componentStack:null!==n?n:""})}),n}var gl,vl=Math.ceil,yl=J.ReactCurrentDispatcher,bl=J.ReactCurrentOwner,wl=0,kl=3,_l=4,El=0,xl=null,zl=null,Sl=0,Tl=wl,Nl=null,Pl=1073741823,jl=1073741823,Cl=null,Il=0,Ml=!1,Ol=0,Dl=null,Ll=!1,Al=null,Fl=null,Bl=!1,Rl=null,Wl=90,Ul=null,Hl=0,Vl=null,Kl=0;function $l(){return 0!=(48&El)?1073741821-(Bi()/10|0):0!==Kl?Kl:Kl=1073741821-(Bi()/10|0)}function Ql(e,t,n){if(0==(2&(t=t.mode)))return 1073741823;var r=Ri();if(0==(4&t))return 99===r?1073741823:1073741822;if(0!=(16&El))return Sl;if(null!==n)e=Qi(e,0|n.timeoutMs||5e3,250);else switch(r){case 99:e=1073741823;break;case 98:e=Qi(e,150,100);break;case 97:case 96:e=Qi(e,5e3,250);break;case 95:e=2;break;default:throw Error(o(326))}return null!==xl&&e===Sl&&--e,e}function ql(e,t){if(50<Hl)throw Hl=0,Vl=null,Error(o(185));if(null!==(e=Gl(e,t))){var n=Ri();1073741823===t?0!=(8&El)&&0==(48&El)?Xl(e):(Zl(e),0===El&&Ki()):Zl(e),0==(4&El)||98!==n&&99!==n||(null===Ul?Ul=new Map([[e,t]]):(void 0===(n=Ul.get(e))||n>t)&&Ul.set(e,t))}}function Gl(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var r=e.return,i=null;if(null===r&&3===e.tag)i=e.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<t&&(r.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===r.return&&3===r.tag){i=r.stateNode;break}r=r.return}return null!==i&&(xl===i&&(os(t),Tl===_l&&Ms(i,Sl)),Os(i,t)),i}function Jl(e){var t=e.lastExpiredTime;if(0!==t)return t;if(!Is(e,t=e.firstPendingTime))return t;var n=e.lastPingedTime;return 2>=(e=n>(e=e.nextKnownPendingLevel)?n:e)&&t!==e?0:e}function Zl(e){if(0!==e.lastExpiredTime)e.callbackExpirationTime=1073741823,e.callbackPriority=99,e.callbackNode=Vi(Xl.bind(null,e));else{var t=Jl(e),n=e.callbackNode;if(0===t)null!==n&&(e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90);else{var r=$l();if(1073741823===t?r=99:1===t||2===t?r=95:r=0>=(r=10*(1073741821-t)-10*(1073741821-r))?99:250>=r?98:5250>=r?97:95,null!==n){var i=e.callbackPriority;if(e.callbackExpirationTime===t&&i>=r)return;n!==Ii&&Ei(n)}e.callbackExpirationTime=t,e.callbackPriority=r,t=1073741823===t?Vi(Xl.bind(null,e)):Hi(r,Yl.bind(null,e),{timeout:10*(1073741821-t)-Bi()}),e.callbackNode=t}}}function Yl(e,t){if(Kl=0,t)return Ds(e,t=$l()),Zl(e),null;var n=Jl(e);if(0!==n){if(t=e.callbackNode,0!=(48&El))throw Error(o(327));if(hs(),e===xl&&n===Sl||ns(e,n),null!==zl){var r=El;El|=16;for(var i=is();;)try{ss();break}catch(t){rs(e,t)}if(Xi(),El=r,yl.current=i,1===Tl)throw t=Nl,ns(e,n),Ms(e,n),Zl(e),t;if(null===zl)switch(i=e.finishedWork=e.current.alternate,e.finishedExpirationTime=n,r=Tl,xl=null,r){case wl:case 1:throw Error(o(345));case 2:Ds(e,2<n?2:n);break;case kl:if(Ms(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=fs(i)),1073741823===Pl&&10<(i=Ol+500-Bi())){if(Ml){var a=e.lastPingedTime;if(0===a||a>=n){e.lastPingedTime=n,ns(e,n);break}}if(0!==(a=Jl(e))&&a!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}e.timeoutHandle=bn(ds.bind(null,e),i);break}ds(e);break;case _l:if(Ms(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=fs(i)),Ml&&(0===(i=e.lastPingedTime)||i>=n)){e.lastPingedTime=n,ns(e,n);break}if(0!==(i=Jl(e))&&i!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}if(1073741823!==jl?r=10*(1073741821-jl)-Bi():1073741823===Pl?r=0:(r=10*(1073741821-Pl)-5e3,0>(r=(i=Bi())-r)&&(r=0),(n=10*(1073741821-n)-i)<(r=(120>r?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*vl(r/1960))-r)&&(r=n)),10<r){e.timeoutHandle=bn(ds.bind(null,e),r);break}ds(e);break;case 5:if(1073741823!==Pl&&null!==Cl){a=Pl;var l=Cl;if(0>=(r=0|l.busyMinDurationMs)?r=0:(i=0|l.busyDelayMs,r=(a=Bi()-(10*(1073741821-a)-(0|l.timeoutMs||5e3)))<=i?0:i+r-a),10<r){Ms(e,n),e.timeoutHandle=bn(ds.bind(null,e),r);break}}ds(e);break;default:throw Error(o(329))}if(Zl(e),e.callbackNode===t)return Yl.bind(null,e)}}return null}function Xl(e){var t=e.lastExpiredTime;if(t=0!==t?t:1073741823,0!=(48&El))throw Error(o(327));if(hs(),e===xl&&t===Sl||ns(e,t),null!==zl){var n=El;El|=16;for(var r=is();;)try{ls();break}catch(t){rs(e,t)}if(Xi(),El=n,yl.current=r,1===Tl)throw n=Nl,ns(e,t),Ms(e,t),Zl(e),n;if(null!==zl)throw Error(o(261));e.finishedWork=e.current.alternate,e.finishedExpirationTime=t,xl=null,ds(e),Zl(e)}return null}function es(e,t){var n=El;El|=1;try{return e(t)}finally{0===(El=n)&&Ki()}}function ts(e,t){var n=El;El&=-2,El|=8;try{return e(t)}finally{0===(El=n)&&Ki()}}function ns(e,t){e.finishedWork=null,e.finishedExpirationTime=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,wn(n)),null!==zl)for(n=zl.return;null!==n;){var r=n;switch(r.tag){case 1:null!=(r=r.type.childContextTypes)&&gi();break;case 3:Ia(),si(di),si(fi);break;case 5:Oa(r);break;case 4:Ia();break;case 13:case 19:si(Da);break;case 10:ea(r)}n=n.return}xl=e,zl=Ss(e.current,null),Sl=t,Tl=wl,Nl=null,jl=Pl=1073741823,Cl=null,Il=0,Ml=!1}function rs(e,t){for(;;){try{if(Xi(),Fa.current=go,Va)for(var n=Wa.memoizedState;null!==n;){var r=n.queue;null!==r&&(r.pending=null),n=n.next}if(Ra=0,Ha=Ua=Wa=null,Va=!1,null===zl||null===zl.return)return Tl=1,Nl=t,zl=null;e:{var i=e,a=zl.return,o=zl,l=t;if(t=Sl,o.effectTag|=2048,o.firstEffect=o.lastEffect=null,null!==l&&"object"==typeof l&&"function"==typeof l.then){var s=l;if(0==(2&o.mode)){var u=o.alternate;u?(o.updateQueue=u.updateQueue,o.memoizedState=u.memoizedState,o.expirationTime=u.expirationTime):(o.updateQueue=null,o.memoizedState=null)}var c=0!=(1&Da.current),f=a;do{var d;if(d=13===f.tag){var p=f.memoizedState;if(null!==p)d=null!==p.dehydrated;else{var m=f.memoizedProps;d=void 0!==m.fallback&&(!0!==m.unstable_avoidThisFallback||!c)}}if(d){var h=f.updateQueue;if(null===h){var g=new Set;g.add(s),f.updateQueue=g}else h.add(s);if(0==(2&f.mode)){if(f.effectTag|=64,o.effectTag&=-2981,1===o.tag)if(null===o.alternate)o.tag=17;else{var v=la(1073741823,null);v.tag=2,sa(o,v)}o.expirationTime=1073741823;break e}l=void 0,o=t;var y=i.pingCache;if(null===y?(y=i.pingCache=new pl,l=new Set,y.set(s,l)):void 0===(l=y.get(s))&&(l=new Set,y.set(s,l)),!l.has(o)){l.add(o);var b=bs.bind(null,i,s,o);s.then(b,b)}f.effectTag|=4096,f.expirationTime=t;break e}f=f.return}while(null!==f);l=Error((ge(o.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+ve(o))}5!==Tl&&(Tl=2),l=Yo(l,o),f=a;do{switch(f.tag){case 3:s=l,f.effectTag|=4096,f.expirationTime=t,ua(f,ml(f,s,t));break e;case 1:s=l;var w=f.type,k=f.stateNode;if(0==(64&f.effectTag)&&("function"==typeof w.getDerivedStateFromError||null!==k&&"function"==typeof k.componentDidCatch&&(null===Fl||!Fl.has(k)))){f.effectTag|=4096,f.expirationTime=t,ua(f,hl(f,s,t));break e}}f=f.return}while(null!==f)}zl=cs(zl)}catch(e){t=e;continue}break}}function is(){var e=yl.current;return yl.current=go,null===e?go:e}function as(e,t){e<Pl&&2<e&&(Pl=e),null!==t&&e<jl&&2<e&&(jl=e,Cl=t)}function os(e){e>Il&&(Il=e)}function ls(){for(;null!==zl;)zl=us(zl)}function ss(){for(;null!==zl&&!Mi();)zl=us(zl)}function us(e){var t=gl(e.alternate,e,Sl);return e.memoizedProps=e.pendingProps,null===t&&(t=cs(e)),bl.current=null,t}function cs(e){zl=e;do{var t=zl.alternate;if(e=zl.return,0==(2048&zl.effectTag)){if(t=Jo(t,zl,Sl),1===Sl||1!==zl.childExpirationTime){for(var n=0,r=zl.child;null!==r;){var i=r.expirationTime,a=r.childExpirationTime;i>n&&(n=i),a>n&&(n=a),r=r.sibling}zl.childExpirationTime=n}if(null!==t)return t;null!==e&&0==(2048&e.effectTag)&&(null===e.firstEffect&&(e.firstEffect=zl.firstEffect),null!==zl.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=zl.firstEffect),e.lastEffect=zl.lastEffect),1<zl.effectTag&&(null!==e.lastEffect?e.lastEffect.nextEffect=zl:e.firstEffect=zl,e.lastEffect=zl))}else{if(null!==(t=Zo(zl)))return t.effectTag&=2047,t;null!==e&&(e.firstEffect=e.lastEffect=null,e.effectTag|=2048)}if(null!==(t=zl.sibling))return t;zl=e}while(null!==zl);return Tl===wl&&(Tl=5),null}function fs(e){var t=e.expirationTime;return t>(e=e.childExpirationTime)?t:e}function ds(e){var t=Ri();return Ui(99,ps.bind(null,e,t)),null}function ps(e,t){do{hs()}while(null!==Rl);if(0!=(48&El))throw Error(o(327));var n=e.finishedWork,r=e.finishedExpirationTime;if(null===n)return null;if(e.finishedWork=null,e.finishedExpirationTime=0,n===e.current)throw Error(o(177));e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90,e.nextKnownPendingLevel=0;var i=fs(n);if(e.firstPendingTime=i,r<=e.lastSuspendedTime?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:r<=e.firstSuspendedTime&&(e.firstSuspendedTime=r-1),r<=e.lastPingedTime&&(e.lastPingedTime=0),r<=e.lastExpiredTime&&(e.lastExpiredTime=0),e===xl&&(zl=xl=null,Sl=0),1<n.effectTag?null!==n.lastEffect?(n.lastEffect.nextEffect=n,i=n.firstEffect):i=n:i=n.firstEffect,null!==i){var a=El;El|=32,bl.current=null,hn=$t;var l=pn();if(mn(l)){if("selectionStart"in l)var s={start:l.selectionStart,end:l.selectionEnd};else e:{var u=(s=(s=l.ownerDocument)&&s.defaultView||window).getSelection&&s.getSelection();if(u&&0!==u.rangeCount){s=u.anchorNode;var c=u.anchorOffset,f=u.focusNode;u=u.focusOffset;try{s.nodeType,f.nodeType}catch(e){s=null;break e}var d=0,p=-1,m=-1,h=0,g=0,v=l,y=null;t:for(;;){for(var b;v!==s||0!==c&&3!==v.nodeType||(p=d+c),v!==f||0!==u&&3!==v.nodeType||(m=d+u),3===v.nodeType&&(d+=v.nodeValue.length),null!==(b=v.firstChild);)y=v,v=b;for(;;){if(v===l)break t;if(y===s&&++h===c&&(p=d),y===f&&++g===u&&(m=d),null!==(b=v.nextSibling))break;y=(v=y).parentNode}v=b}s=-1===p||-1===m?null:{start:p,end:m}}else s=null}s=s||{start:0,end:0}}else s=null;gn={activeElementDetached:null,focusedElem:l,selectionRange:s},$t=!1,Dl=i;do{try{ms()}catch(e){if(null===Dl)throw Error(o(330));ys(Dl,e),Dl=Dl.nextEffect}}while(null!==Dl);Dl=i;do{try{for(l=e,s=t;null!==Dl;){var w=Dl.effectTag;if(16&w&&Re(Dl.stateNode,""),128&w){var k=Dl.alternate;if(null!==k){var _=k.ref;null!==_&&("function"==typeof _?_(null):_.current=null)}}switch(1038&w){case 2:ul(Dl),Dl.effectTag&=-3;break;case 6:ul(Dl),Dl.effectTag&=-3,fl(Dl.alternate,Dl);break;case 1024:Dl.effectTag&=-1025;break;case 1028:Dl.effectTag&=-1025,fl(Dl.alternate,Dl);break;case 4:fl(Dl.alternate,Dl);break;case 8:cl(l,c=Dl,s),ll(c)}Dl=Dl.nextEffect}}catch(e){if(null===Dl)throw Error(o(330));ys(Dl,e),Dl=Dl.nextEffect}}while(null!==Dl);if(_=gn,k=pn(),w=_.focusedElem,s=_.selectionRange,k!==w&&w&&w.ownerDocument&&function e(t,n){return!(!t||!n)&&(t===n||(!t||3!==t.nodeType)&&(n&&3===n.nodeType?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}(w.ownerDocument.documentElement,w)){null!==s&&mn(w)&&(k=s.start,void 0===(_=s.end)&&(_=k),"selectionStart"in w?(w.selectionStart=k,w.selectionEnd=Math.min(_,w.value.length)):(_=(k=w.ownerDocument||document)&&k.defaultView||window).getSelection&&(_=_.getSelection(),c=w.textContent.length,l=Math.min(s.start,c),s=void 0===s.end?l:Math.min(s.end,c),!_.extend&&l>s&&(c=s,s=l,l=c),c=dn(w,l),f=dn(w,s),c&&f&&(1!==_.rangeCount||_.anchorNode!==c.node||_.anchorOffset!==c.offset||_.focusNode!==f.node||_.focusOffset!==f.offset)&&((k=k.createRange()).setStart(c.node,c.offset),_.removeAllRanges(),l>s?(_.addRange(k),_.extend(f.node,f.offset)):(k.setEnd(f.node,f.offset),_.addRange(k))))),k=[];for(_=w;_=_.parentNode;)1===_.nodeType&&k.push({element:_,left:_.scrollLeft,top:_.scrollTop});for("function"==typeof w.focus&&w.focus(),w=0;w<k.length;w++)(_=k[w]).element.scrollLeft=_.left,_.element.scrollTop=_.top}$t=!!hn,gn=hn=null,e.current=n,Dl=i;do{try{for(w=e;null!==Dl;){var E=Dl.effectTag;if(36&E&&al(w,Dl.alternate,Dl),128&E){k=void 0;var x=Dl.ref;if(null!==x){var z=Dl.stateNode;switch(Dl.tag){case 5:k=z;break;default:k=z}"function"==typeof x?x(k):x.current=k}}Dl=Dl.nextEffect}}catch(e){if(null===Dl)throw Error(o(330));ys(Dl,e),Dl=Dl.nextEffect}}while(null!==Dl);Dl=null,Oi(),El=a}else e.current=n;if(Bl)Bl=!1,Rl=e,Wl=t;else for(Dl=i;null!==Dl;)t=Dl.nextEffect,Dl.nextEffect=null,Dl=t;if(0===(t=e.firstPendingTime)&&(Fl=null),1073741823===t?e===Vl?Hl++:(Hl=0,Vl=e):Hl=0,"function"==typeof ks&&ks(n.stateNode,r),Zl(e),Ll)throw Ll=!1,e=Al,Al=null,e;return 0!=(8&El)||Ki(),null}function ms(){for(;null!==Dl;){var e=Dl.effectTag;0!=(256&e)&&nl(Dl.alternate,Dl),0==(512&e)||Bl||(Bl=!0,Hi(97,(function(){return hs(),null}))),Dl=Dl.nextEffect}}function hs(){if(90!==Wl){var e=97<Wl?97:Wl;return Wl=90,Ui(e,gs)}}function gs(){if(null===Rl)return!1;var e=Rl;if(Rl=null,0!=(48&El))throw Error(o(331));var t=El;for(El|=32,e=e.current.firstEffect;null!==e;){try{var n=e;if(0!=(512&n.effectTag))switch(n.tag){case 0:case 11:case 15:case 22:rl(5,n),il(5,n)}}catch(t){if(null===e)throw Error(o(330));ys(e,t)}n=e.nextEffect,e.nextEffect=null,e=n}return El=t,Ki(),!0}function vs(e,t,n){sa(e,t=ml(e,t=Yo(n,t),1073741823)),null!==(e=Gl(e,1073741823))&&Zl(e)}function ys(e,t){if(3===e.tag)vs(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){vs(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Fl||!Fl.has(r))){sa(n,e=hl(n,e=Yo(t,e),1073741823)),null!==(n=Gl(n,1073741823))&&Zl(n);break}}n=n.return}}function bs(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),xl===e&&Sl===n?Tl===_l||Tl===kl&&1073741823===Pl&&Bi()-Ol<500?ns(e,Sl):Ml=!0:Is(e,n)&&(0!==(t=e.lastPingedTime)&&t<n||(e.lastPingedTime=n,Zl(e)))}function ws(e,t){var n=e.stateNode;null!==n&&n.delete(t),0===(t=0)&&(t=Ql(t=$l(),e,null)),null!==(e=Gl(e,t))&&Zl(e)}gl=function(e,t,n){var r=t.expirationTime;if(null!==e){var i=t.pendingProps;if(e.memoizedProps!==i||di.current)jo=!0;else{if(r<n){switch(jo=!1,t.tag){case 3:Bo(t),No();break;case 5:if(Ma(t),4&t.mode&&1!==n&&i.hidden)return t.expirationTime=t.childExpirationTime=1,null;break;case 1:hi(t.type)&&bi(t);break;case 4:Ca(t,t.stateNode.containerInfo);break;case 10:r=t.memoizedProps.value,i=t.type._context,ui(Gi,i._currentValue),i._currentValue=r;break;case 13:if(null!==t.memoizedState)return 0!==(r=t.child.childExpirationTime)&&r>=n?Vo(e,t,n):(ui(Da,1&Da.current),null!==(t=qo(e,t,n))?t.sibling:null);ui(Da,1&Da.current);break;case 19:if(r=t.childExpirationTime>=n,0!=(64&e.effectTag)){if(r)return Qo(e,t,n);t.effectTag|=64}if(null!==(i=t.memoizedState)&&(i.rendering=null,i.tail=null),ui(Da,Da.current),!r)return null}return qo(e,t,n)}jo=!1}}else jo=!1;switch(t.expirationTime=0,t.tag){case 2:if(r=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,i=mi(t,fi.current),na(t,n),i=Qa(null,t,r,e,i,n),t.effectTag|=1,"object"==typeof i&&null!==i&&"function"==typeof i.render&&void 0===i.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,hi(r)){var a=!0;bi(t)}else a=!1;t.memoizedState=null!==i.state&&void 0!==i.state?i.state:null,aa(t);var l=r.getDerivedStateFromProps;"function"==typeof l&&ma(t,r,l,e),i.updater=ha,t.stateNode=i,i._reactInternalFiber=t,ba(t,r,e,n),t=Fo(null,t,r,!0,a,n)}else t.tag=0,Co(null,t,i,n),t=t.child;return t;case 16:e:{if(i=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,function(e){if(-1===e._status){e._status=0;var t=e._ctor;t=t(),e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}}(i),1!==i._status)throw i._result;switch(i=i._result,t.type=i,a=t.tag=function(e){if("function"==typeof e)return zs(e)?1:0;if(null!=e){if((e=e.$$typeof)===se)return 11;if(e===fe)return 14}return 2}(i),e=qi(i,e),a){case 0:t=Lo(null,t,i,e,n);break e;case 1:t=Ao(null,t,i,e,n);break e;case 11:t=Io(null,t,i,e,n);break e;case 14:t=Mo(null,t,i,qi(i.type,e),r,n);break e}throw Error(o(306,i,""))}return t;case 0:return r=t.type,i=t.pendingProps,Lo(e,t,r,i=t.elementType===r?i:qi(r,i),n);case 1:return r=t.type,i=t.pendingProps,Ao(e,t,r,i=t.elementType===r?i:qi(r,i),n);case 3:if(Bo(t),r=t.updateQueue,null===e||null===r)throw Error(o(282));if(r=t.pendingProps,i=null!==(i=t.memoizedState)?i.element:null,oa(e,t),ca(t,r,null,n),(r=t.memoizedState.element)===i)No(),t=qo(e,t,n);else{if((i=t.stateNode.hydrate)&&(ko=kn(t.stateNode.containerInfo.firstChild),wo=t,i=_o=!0),i)for(n=za(t,null,r,n),t.child=n;n;)n.effectTag=-3&n.effectTag|1024,n=n.sibling;else Co(e,t,r,n),No();t=t.child}return t;case 5:return Ma(t),null===e&&zo(t),r=t.type,i=t.pendingProps,a=null!==e?e.memoizedProps:null,l=i.children,yn(r,i)?l=null:null!==a&&yn(r,a)&&(t.effectTag|=16),Do(e,t),4&t.mode&&1!==n&&i.hidden?(t.expirationTime=t.childExpirationTime=1,t=null):(Co(e,t,l,n),t=t.child),t;case 6:return null===e&&zo(t),null;case 13:return Vo(e,t,n);case 4:return Ca(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=xa(t,null,r,n):Co(e,t,r,n),t.child;case 11:return r=t.type,i=t.pendingProps,Io(e,t,r,i=t.elementType===r?i:qi(r,i),n);case 7:return Co(e,t,t.pendingProps,n),t.child;case 8:case 12:return Co(e,t,t.pendingProps.children,n),t.child;case 10:e:{r=t.type._context,i=t.pendingProps,l=t.memoizedProps,a=i.value;var s=t.type._context;if(ui(Gi,s._currentValue),s._currentValue=a,null!==l)if(s=l.value,0===(a=Ar(s,a)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(s,a):1073741823))){if(l.children===i.children&&!di.current){t=qo(e,t,n);break e}}else for(null!==(s=t.child)&&(s.return=t);null!==s;){var u=s.dependencies;if(null!==u){l=s.child;for(var c=u.firstContext;null!==c;){if(c.context===r&&0!=(c.observedBits&a)){1===s.tag&&((c=la(n,null)).tag=2,sa(s,c)),s.expirationTime<n&&(s.expirationTime=n),null!==(c=s.alternate)&&c.expirationTime<n&&(c.expirationTime=n),ta(s.return,n),u.expirationTime<n&&(u.expirationTime=n);break}c=c.next}}else l=10===s.tag&&s.type===t.type?null:s.child;if(null!==l)l.return=s;else for(l=s;null!==l;){if(l===t){l=null;break}if(null!==(s=l.sibling)){s.return=l.return,l=s;break}l=l.return}s=l}Co(e,t,i.children,n),t=t.child}return t;case 9:return i=t.type,r=(a=t.pendingProps).children,na(t,n),r=r(i=ra(i,a.unstable_observedBits)),t.effectTag|=1,Co(e,t,r,n),t.child;case 14:return a=qi(i=t.type,t.pendingProps),Mo(e,t,i,a=qi(i.type,a),r,n);case 15:return Oo(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,i=t.pendingProps,i=t.elementType===r?i:qi(r,i),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,hi(r)?(e=!0,bi(t)):e=!1,na(t,n),va(t,r,i),ba(t,r,i,n),Fo(null,t,r,!0,e,n);case 19:return Qo(e,t,n)}throw Error(o(156,t.tag))};var ks=null,_s=null;function Es(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function xs(e,t,n,r){return new Es(e,t,n,r)}function zs(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Ss(e,t){var n=e.alternate;return null===n?((n=xs(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{expirationTime:t.expirationTime,firstContext:t.firstContext,responders:t.responders},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Ts(e,t,n,r,i,a){var l=2;if(r=e,"function"==typeof e)zs(e)&&(l=1);else if("string"==typeof e)l=5;else e:switch(e){case ne:return Ns(n.children,i,a,t);case le:l=8,i|=7;break;case re:l=8,i|=1;break;case ie:return(e=xs(12,n,t,8|i)).elementType=ie,e.type=ie,e.expirationTime=a,e;case ue:return(e=xs(13,n,t,i)).type=ue,e.elementType=ue,e.expirationTime=a,e;case ce:return(e=xs(19,n,t,i)).elementType=ce,e.expirationTime=a,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case ae:l=10;break e;case oe:l=9;break e;case se:l=11;break e;case fe:l=14;break e;case de:l=16,r=null;break e;case pe:l=22;break e}throw Error(o(130,null==e?e:typeof e,""))}return(t=xs(l,n,t,i)).elementType=e,t.type=r,t.expirationTime=a,t}function Ns(e,t,n,r){return(e=xs(7,e,r,t)).expirationTime=n,e}function Ps(e,t,n){return(e=xs(6,e,null,t)).expirationTime=n,e}function js(e,t,n){return(t=xs(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Cs(e,t,n){this.tag=t,this.current=null,this.containerInfo=e,this.pingCache=this.pendingChildren=null,this.finishedExpirationTime=0,this.finishedWork=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=90,this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}function Is(e,t){var n=e.firstSuspendedTime;return e=e.lastSuspendedTime,0!==n&&n>=t&&e<=t}function Ms(e,t){var n=e.firstSuspendedTime,r=e.lastSuspendedTime;n<t&&(e.firstSuspendedTime=t),(r>t||0===n)&&(e.lastSuspendedTime=t),t<=e.lastPingedTime&&(e.lastPingedTime=0),t<=e.lastExpiredTime&&(e.lastExpiredTime=0)}function Os(e,t){t>e.firstPendingTime&&(e.firstPendingTime=t);var n=e.firstSuspendedTime;0!==n&&(t>=n?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:t>=e.lastSuspendedTime&&(e.lastSuspendedTime=t+1),t>e.nextKnownPendingLevel&&(e.nextKnownPendingLevel=t))}function Ds(e,t){var n=e.lastExpiredTime;(0===n||n>t)&&(e.lastExpiredTime=t)}function Ls(e,t,n,r){var i=t.current,a=$l(),l=da.suspense;a=Ql(a,i,l);e:if(n){t:{if(Xe(n=n._reactInternalFiber)!==n||1!==n.tag)throw Error(o(170));var s=n;do{switch(s.tag){case 3:s=s.stateNode.context;break t;case 1:if(hi(s.type)){s=s.stateNode.__reactInternalMemoizedMergedChildContext;break t}}s=s.return}while(null!==s);throw Error(o(171))}if(1===n.tag){var u=n.type;if(hi(u)){n=yi(n,u,s);break e}}n=s}else n=ci;return null===t.context?t.context=n:t.pendingContext=n,(t=la(a,l)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),sa(i,t),ql(i,a),a}function As(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Fs(e,t){null!==(e=e.memoizedState)&&null!==e.dehydrated&&e.retryTime<t&&(e.retryTime=t)}function Bs(e,t){Fs(e,t),(e=e.alternate)&&Fs(e,t)}function Rs(e,t,n){var r=new Cs(e,t,n=null!=n&&!0===n.hydrate),i=xs(3,null,null,2===t?7:1===t?3:0);r.current=i,i.stateNode=r,aa(i),e[Sn]=r.current,n&&0!==t&&function(e,t){var n=Ye(t);St.forEach((function(e){mt(e,t,n)})),Tt.forEach((function(e){mt(e,t,n)}))}(0,9===e.nodeType?e:e.ownerDocument),this._internalRoot=r}function Ws(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Us(e,t,n,r,i){var a=n._reactRootContainer;if(a){var o=a._internalRoot;if("function"==typeof i){var l=i;i=function(){var e=As(o);l.call(e)}}Ls(t,o,e,i)}else{if(a=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Rs(e,0,t?{hydrate:!0}:void 0)}(n,r),o=a._internalRoot,"function"==typeof i){var s=i;i=function(){var e=As(o);s.call(e)}}ts((function(){Ls(t,o,e,i)}))}return As(o)}function Hs(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:te,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}function Vs(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Ws(t))throw Error(o(200));return Hs(e,t,null,n)}Rs.prototype.render=function(e){Ls(e,this._internalRoot,null,null)},Rs.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;Ls(null,e,null,(function(){t[Sn]=null}))},ht=function(e){if(13===e.tag){var t=Qi($l(),150,100);ql(e,t),Bs(e,t)}},gt=function(e){13===e.tag&&(ql(e,3),Bs(e,3))},vt=function(e){if(13===e.tag){var t=$l();ql(e,t=Ql(t,e,null)),Bs(e,t)}},N=function(e,t,n){switch(t){case"input":if(ze(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var i=jn(r);if(!i)throw Error(o(90));ke(r),ze(r,i)}}}break;case"textarea":Ie(e,n);break;case"select":null!=(t=n.value)&&Pe(e,!!n.multiple,t,!1)}},O=es,D=function(e,t,n,r,i){var a=El;El|=4;try{return Ui(98,e.bind(null,t,n,r,i))}finally{0===(El=a)&&Ki()}},L=function(){0==(49&El)&&(function(){if(null!==Ul){var e=Ul;Ul=null,e.forEach((function(e,t){Ds(t,e),Zl(t)})),Ki()}}(),hs())},A=function(e,t){var n=El;El|=2;try{return e(t)}finally{0===(El=n)&&Ki()}};var Ks,$s,Qs={Events:[Nn,Pn,jn,S,E,An,function(e){it(e,Ln)},I,M,Zt,lt,hs,{current:!1}]};$s=(Ks={findFiberByHostInstance:Tn,bundleType:0,version:"16.13.1",rendererPackageName:"react-dom"}).findFiberByHostInstance,function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);ks=function(e){try{t.onCommitFiberRoot(n,e,void 0,64==(64&e.current.effectTag))}catch(e){}},_s=function(e){try{t.onCommitFiberUnmount(n,e)}catch(e){}}}catch(e){}}(i({},Ks,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:J.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=nt(e))?null:e.stateNode},findFiberByHostInstance:function(e){return $s?$s(e):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null})),t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=Qs,t.createPortal=Vs,t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;if(void 0===t){if("function"==typeof e.render)throw Error(o(188));throw Error(o(268,Object.keys(e)))}return e=null===(e=nt(t))?null:e.stateNode},t.flushSync=function(e,t){if(0!=(48&El))throw Error(o(187));var n=El;El|=1;try{return Ui(99,e.bind(null,t))}finally{El=n,Ki()}},t.hydrate=function(e,t,n){if(!Ws(t))throw Error(o(200));return Us(null,e,t,!0,n)},t.render=function(e,t,n){if(!Ws(t))throw Error(o(200));return Us(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Ws(e))throw Error(o(40));return!!e._reactRootContainer&&(ts((function(){Us(null,null,e,!1,(function(){e._reactRootContainer=null,e[Sn]=null}))})),!0)},t.unstable_batchedUpdates=es,t.unstable_createPortal=function(e,t){return Vs(e,t,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!Ws(n))throw Error(o(200));if(null==e||void 0===e._reactInternalFiber)throw Error(o(38));return Us(e,t,n,!1,r)},t.version="16.13.1"},function(e,t,n){"use strict";e.exports=n(341)},function(e,t,n){"use strict";
/** @license React v0.19.1
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r,i,a,o,l;if("undefined"==typeof window||"function"!=typeof MessageChannel){var s=null,u=null,c=function(){if(null!==s)try{var e=t.unstable_now();s(!0,e),s=null}catch(e){throw setTimeout(c,0),e}},f=Date.now();t.unstable_now=function(){return Date.now()-f},r=function(e){null!==s?setTimeout(r,0,e):(s=e,setTimeout(c,0))},i=function(e,t){u=setTimeout(e,t)},a=function(){clearTimeout(u)},o=function(){return!1},l=t.unstable_forceFrameRate=function(){}}else{var d=window.performance,p=window.Date,m=window.setTimeout,h=window.clearTimeout;if("undefined"!=typeof console){var g=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof g&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills")}if("object"==typeof d&&"function"==typeof d.now)t.unstable_now=function(){return d.now()};else{var v=p.now();t.unstable_now=function(){return p.now()-v}}var y=!1,b=null,w=-1,k=5,_=0;o=function(){return t.unstable_now()>=_},l=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported"):k=0<e?Math.floor(1e3/e):5};var E=new MessageChannel,x=E.port2;E.port1.onmessage=function(){if(null!==b){var e=t.unstable_now();_=e+k;try{b(!0,e)?x.postMessage(null):(y=!1,b=null)}catch(e){throw x.postMessage(null),e}}else y=!1},r=function(e){b=e,y||(y=!0,x.postMessage(null))},i=function(e,n){w=m((function(){e(t.unstable_now())}),n)},a=function(){h(w),w=-1}}function z(e,t){var n=e.length;e.push(t);e:for(;;){var r=n-1>>>1,i=e[r];if(!(void 0!==i&&0<N(i,t)))break e;e[r]=t,e[n]=i,n=r}}function S(e){return void 0===(e=e[0])?null:e}function T(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,i=e.length;r<i;){var a=2*(r+1)-1,o=e[a],l=a+1,s=e[l];if(void 0!==o&&0>N(o,n))void 0!==s&&0>N(s,o)?(e[r]=s,e[l]=n,r=l):(e[r]=o,e[a]=n,r=a);else{if(!(void 0!==s&&0>N(s,n)))break e;e[r]=s,e[l]=n,r=l}}}return t}return null}function N(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var P=[],j=[],C=1,I=null,M=3,O=!1,D=!1,L=!1;function A(e){for(var t=S(j);null!==t;){if(null===t.callback)T(j);else{if(!(t.startTime<=e))break;T(j),t.sortIndex=t.expirationTime,z(P,t)}t=S(j)}}function F(e){if(L=!1,A(e),!D)if(null!==S(P))D=!0,r(B);else{var t=S(j);null!==t&&i(F,t.startTime-e)}}function B(e,n){D=!1,L&&(L=!1,a()),O=!0;var r=M;try{for(A(n),I=S(P);null!==I&&(!(I.expirationTime>n)||e&&!o());){var l=I.callback;if(null!==l){I.callback=null,M=I.priorityLevel;var s=l(I.expirationTime<=n);n=t.unstable_now(),"function"==typeof s?I.callback=s:I===S(P)&&T(P),A(n)}else T(P);I=S(P)}if(null!==I)var u=!0;else{var c=S(j);null!==c&&i(F,c.startTime-n),u=!1}return u}finally{I=null,M=r,O=!1}}function R(e){switch(e){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1e4;default:return 5e3}}var W=l;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){D||O||(D=!0,r(B))},t.unstable_getCurrentPriorityLevel=function(){return M},t.unstable_getFirstCallbackNode=function(){return S(P)},t.unstable_next=function(e){switch(M){case 1:case 2:case 3:var t=3;break;default:t=M}var n=M;M=t;try{return e()}finally{M=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=W,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=M;M=e;try{return t()}finally{M=n}},t.unstable_scheduleCallback=function(e,n,o){var l=t.unstable_now();if("object"==typeof o&&null!==o){var s=o.delay;s="number"==typeof s&&0<s?l+s:l,o="number"==typeof o.timeout?o.timeout:R(e)}else o=R(e),s=l;return e={id:C++,callback:n,priorityLevel:e,startTime:s,expirationTime:o=s+o,sortIndex:-1},s>l?(e.sortIndex=s,z(j,e),null===S(P)&&e===S(j)&&(L?a():L=!0,i(F,s-l))):(e.sortIndex=o,z(P,e),D||O||(D=!0,r(B))),e},t.unstable_shouldYield=function(){var e=t.unstable_now();A(e);var n=S(P);return n!==I&&null!==I&&null!==n&&null!==n.callback&&n.startTime<=e&&n.expirationTime<I.expirationTime||o()},t.unstable_wrapCallback=function(e){var t=M;return function(){var n=M;M=t;try{return e.apply(this,arguments)}finally{M=n}}}},function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var i=r(n(343)),a=r(n(344)),o=r(n(345)),l=r(n(346));t.default=function(){switch(l.default()){case"de":return i.default;case"en":return a.default;case"pl":return o.default;default:return a.default}}},function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&r(t,e,n);return i(t,e),t};Object.defineProperty(t,"__esModule",{value:!0});var o=a(n(52)),l=n(67),s={itemRemovedFromList:"Eintrag wurde aus der Liste entfernt",currntlyIs:"Klicken Sie die Box unten um den Blocker zu",currntlyIsOff:"aktivieren",currntlyIsOn:"deaktivieren",title_html_blocker:"Blocker",blocker_msg_7:"Content Blocker kann DOM Elemente der genutzten Website blockieren. Um dieses Feature zu nutzen aktiviere den Content Blocker und klicke auf ein Element das blockiert werden soll. Alle geblockten HTML Elemente können wieder hergestellt werden im Dashboard auf der Seite 'Blockiertes HTML'.",title_reset:"Reset",reset_done:"Die Applikation wurde auf Ihre Werkeinstellungen zurücksetzten.",reset:"Klicken Sie das Icon an um diese Erweiterung auf die Werkeinstellungen zurücksetzten. Alle deine gespeicherten Daten und Einstellungen werden gelöscht. Bitte exporiere vor diesem Prozess deine Daten und Einstellungen um diese später (über das Dashboard) wieder zu importieren.",menu_title_ninja:"Ninja Icon",ninjaIcon:"Das Ninja Icon dieser Erweiterung wurde entnommen von",turnOn:"NinjaProtect anschalten",turnOff:"NinjaProtect ausschalten",links:"Links",deleteAllIframes:"Iframes aus dieser Webseite enfernen",deleteAllCookies:"Cookies verwalten",notLoggedInStatisticMessage:"Sie arbeiten lokal. Bitte loggen Sie sich ein damit die Statistik rückwärts festgehalten werden kann.",today_blocked:"Heutige Statistik der blockierten Elemente",menu_text_statistic:"Statistik aller blockierten Elemente ",menu_text_statistic_small:"Statistik",menu_text_requests:"Anfragen",addon_not_available:"Diese Webseite unterstützt keine Addons",NoDataBlockedItemsToday:"Keine blockierten Elemente von heute verfügbar",NoDataBlockedItems:"Keine blockierten Daten",home_chat:"Mit Freunden chatten - ohne Tracking",home_messages:"Nachrichten senden - ohne Tracking",home_security:"Sicherheit im Internet - Blockierung von Trackern",home_images:"Fotos herunterladen - kein Tracking",menu_text_export:"Export",menu_title_export:"Navigiere zu dem Export",menu_text_import:"Import",menu_title_import:"Navigiere zu dem Import",messages_main:"Nachrichten",menu_text_messages:"Nachrichten",menu_title_messages:"Navigiere zu den Nachrichten",menu_text_notifications:"Benachrichtigungen",menu_title_notifications:"Navigiere zu den Benachrichtigungen",menu_text_favourites:"Freunde",menu_title_favourites:"Navigiere zu den Freunde",menu_text_add_favourites:"Suche",menu_title_add_favourites:"Navigiere zu der Freunden Suche",chat_main:"Chat",menu_text_chat:"Chat",menu_title_chat:"Navigiere zu dem Chat",menu_text_security:"Domäne",menu_text_security_main:"Liste",menu_title_security:"Navigiere zu dem Bereich Domänen Verwaltung",menu_text_security_settings:"Einstellungen",menu_title_security_settings:"Navigiere zu dem Bereich Sicherheits Einstellungen",menu_text_cookies:"Cookies",menu_title_cookies:"Navigiere zu dem Bereich Cookies",menu_text_home:"Startseite",menu_title_home:"Navigiere zur Startseite",menu_text_iframes:"Iframes",menu_title_iframes:"Navigiere zu dem Bereich Iframes",menu_text_security_examples:"Beispiele",menu_title_security_examples:"Navigiere zu dem Bereich Sichereich Beispiele",menu_text_download_images:"Fotos download",menu_title_download_images:"Navigiere zu dem Bereich Fotos herunterladen",menu_text_images:"Fotos",menu_text_images_favourites:"Gespeicherte Fotos",menu_title_images_favourites:"Navigiere zu dem Bereich gespiecherte Fotos",accountPrivacyTerms:"Nutzungsbedingungen",globalNetworkError:"Netzwerk Fehler.",globalProcessError:"Interner Fehler.",globalUserDoesNotExsists:"Benutzerkonto existiert nicht",globalInvalidEmailsAdress:"Ungültiges E-Mail-Adressformat",globalErrormessagePrefix:"Es wurde ein Fehler gefunden, der dazu führt, dass die Anwendung nicht ordnungsgemäß funktioniert.",globalErrormessageCloseButton:"Ignorieren",globalErrormessageLearnMoreButton:"Mehr lesen",globalInvalidCountry:"Fehlerhaftes Land",globalInvalidLanguage:"Fehlerhafte Sprache",globalErrorCodeTitle:"Fehlercode",globalErrorCode_1:'Netzwerkfehler. Wenn ein Netzwerkfehler aufgetreten ist, ist eine "Ajax" -Anforderung fehlgeschlagen. Überprüfen Sie Ihre Netzwerkverbindung oder das, da der Remote-Dienst derzeit nicht verfügbar ist.',globalErrorCode_2:"App-Prozessfehler. Dies bedeutet, dass die Antwort auf Ajax-Anforderungen eine ungültige Struktur für die Anwendung bereitgestellt hat.",globalErrorCode_3:"Antwort anders als erwartet. Der Mittelwert des angeforderten Werts des aktuellen Anwendungskontexts ist ungültig.",code:"Code",listNotSynchronizedUserNotLoggedIn:"Du arbeitest lokal. Logge dich ein um die Liste zu synchronisieren.",notLoggedIn:"Nicht eingeloggt Information",listSynchronized_one:"Synchronisiert",titleDeleteCookie:"Einzelnes Cookie Element löschen",titleCopyCookieValue:"Wert von dem Cookie in den zwischen speichern",cookie_msg_1:"Domäne:",cookie_msg_2:"Name:",cookie_msg_3:"Wert:",cookie_msg_4:"Alle Cookies löschen. Es ist gut möglich das du danach aus der Seite ausgeloggst wirst.",cookiesNoData:"Keine Cookies vorhanden",blacklist:"Schwarze Listen",whitelist:"Weiße Listen",blacklistedElementsWords:"Blacklist Wörter",blacklistedElementsDomians:"Blacklist Domänen",blacklistedElementsUrlsIncludes:"Blacklist Url Adressen",blacklistedElementsTrackers:"Blacklist Trackers",blacklistedElementsCookies:"Blacklist Cookies",blacklistedElementsClass:"Blockierung von HTML für class",blacklistedElementsId:"Blockierung von HTML für id",blacklistedElementsHref:"Blockierung von HTML für href",menuBlacklistedElementsClass:"Blockierung für class",menuBlacklistedElementsId:"Blockierung für id",menuBlacklistedElementsHref:"Blockierung für href",blacklistedElementsIframes:"Blacklist Iframes",blacklistedElementsIframesSources:"Blacklist Iframe Quellen",blacklistedElementsIframesNames:"Blacklist Iframe Namen",copiedToClipBoard:"In die Zwischenablage kopiert",action_title_copyToClipboard:"Liste in Zwischenablage kopieren",action_title_exportToFile:"Liste in JSON-Feld exportieren",action_title_deleteList:"Liste global leeren",action_title_copyToClipboard_single:"Wert in Zwischenablage kopieren",action_title_delete_single:"Eintrag löschen",forThisFunctionLogin:"Um diese Aktion auszuführen, melden Sie sich bitte an",emptyListDone:"Liste wurde geleert",restoreDefaultValue:"Stellen Sie die Liste auf den Standardwert zurück",whitelistedElementsDomains:"Whitelist Domänen",blockedElements:"Content Blocker",securityIsOn:"Diese Erweiterung ist AN oder AUS.",scanTextOnWebsite:"Wenn Sie diese Option ausschalten, werden alle Wörte auf den Websiten NICHT gescannt. Schwarze Liste: Wörte/ Attribute/ Attribute Wörter - werden ignoriert.",allowOnlyHttpsProtocol:"Erlaube nur den Besuch von HTTPS Websites - also der Zugriff auf alle HTTP Webseiten wird blockiert.",allowOnlyHttpProtocol:"Erlaube nur den Besuch von HTTP Websites - also der Zugriff auf alle HTTPS Webseiten wird blockiert.",makeSearchInSourceCode:"Scannen Sie Wörter im Quellcode eines bestimmten HTML-Elements (innerHTML) oder nur im Text von HTML-Elementen (innerText).",mutationCheck:"Überprüfen der HTML-Elemente von Websites nach dem Laden der Seite (DOM Mutationen von HTML Elementen in der Regel durchgeführt von Javascript Bibliotheken).",ignoreTagStyle:'Den Kod innerhalb von den "STYLE" Tags (<style> Tag) beim Scan Prozess ignorieren anhand der Schwarzen Liste Wörter.',ignoreTagScript:'Den Kod innerhalb von den "Script" Tags (<script> Tag) beim Scan Prozess ignorieren anhand der Schwarzen Liste Wörter.',ignoreTagLink:'Den Kod innerhalb von den "Link" Tags (<link> Tag) beim Scan Prozess ignorieren anhand der Schwarzen Liste Wörter.',ignoreTagMeta:'Den Kod innerhalb von den "Meta" Tags (<meta> Tag) beim Scan Prozess ignorieren anhand der Schwarzen Liste Wörter.',replacer:"Ersetze jedes einzelne Gefahrenwortzeichen durch diesen Eintrag. Die Gefahrenwörter sind Wörte aus Ihrer eigen definierten Schwarzen Liste Wörter.",maximumOfDangerWords:"Nach Erreichen dieses Wertes - anhand der schwarzen Listen: Blacklist Wörte, Blockierung von HTML für class, Blockierung von HTML für href oder Blockierung von HTML für id, dann wird die Website gesperrt. Der Minimalwert ist 1, der Maximalwert ist 300.",limitlessScan:"Ignorieren Sie die maximale Anzahl von blockierten Gefahren anhand den Schwarzen Listen: Blacklist Wörte, Blockierung von HTML für class, Blockierung von HTML für href oder Blockierung von HTML für id. Die Website wird nicht blockiert (ignorieren Sie den obigen Wert). Wenn Sie diese Funktion aktivieren, kann Protection die Leistung Ihres Browsers beeinträchtigen.",deleteCookies:"Lösche alle Cookies anhand der Schwarzen Liste Cookies auf jeder Webseite ? Cookie werden gelöscht beim Öffnen oder Schließen eines Tabs und wärend des Browsings alle 5 Sekunden.",popupMainTitle:"Schwarze Ninja Statistik",popup_blocked_trackers:"Blockierte Tracker",popup_blocked_cookies:"Blockierte Cookies",popup_blocked_words:"Blockierte Wörter",popup_blocked_requests:"Blockierte Anfragen",popup_blocked_iframes:"Blockierte Iframes",popup_blocked_dom:"Blockiertes HTML",popup_blocked_websites:"Blockierte Webseiten",popup_title_dashboard:"Dashboard",popup_title_global_chart:"Globale Statistik",titleDeleteIframe:"Löschen Sie einen einzelnen Iframe",iframe_msg_1:"Quelle:",iframe_msg_2:"Id:",iframe_msg_3:"className:",iframesNoData:"Keine Iframes vorhanden",popup_add_blacklistedElementsTrackers:"Fügen Sie den Blacklist-Trackern die aktuelle Domain hinzu. Alle Versuche, auf diese Domain zuzugreifen, werden blockiert.",popup_remove_blacklistedElementsTrackers:"Entfernen Sie die aktuelle Domain aus der Blacklist Trackern.",popup_add_blacklistedElementsDomians:"Fügen Sie der Blacklist-Domain die aktuelle Domain hinzu. Alle Versuche, von dieser Domain aus auf diese Domain oder Dienste zuzugreifen, werden blockiert.",popup_remove_blacklistedElementsDomians:"Entfernen Sie die aktuelle Domain aus der Blacklist Domänen.",popup_add_blacklistedElementsCookies:"Fügen Sie den Blacklist-Cookies die aktuelle Domain hinzu. Alle Cookies werden beim Laden der Website entfernt, dann alle 5 Sekunden und wenn die Website verlassen wird.",popup_remove_blacklistedElementsCookies:"Entfernen Sie die aktuelle Domain aus der Blacklist Cookies.",popup_add_blacklistedElementsIframes:"Aktuelle Domain zur Blacklist hinzufügen iframes.",popup_remove_blacklistedElementsIframes:"Entfernen Sie die aktuelle Domain aus der Blacklist Iframes. Alle Iframes werden gelöscht sobald diese Website versucht externen Content zu laden.",popup_add_blacklistedElementsIframesSources:"Aktuelle Url zur Blacklist Iframes Sources hinzufügen.",popup_remove_blacklistedElementsIframesSources:"Entfernen Sie die aktuelle Url aus der Blacklist Iframes Sources. Alle Iframes werden gelöscht sobald diese Website versucht externen Content zu laden.",popup_add_whitelistedElementsDomains:"Fügen Sie der Whitelist-Domain die aktuelle Domain hinzu und lassen Sie alles zu (keine Anfrage wird blockiert, keine Blacklist-Wortprüfung, keine Cookie-Löschung und keine automatische Iframe-Löschung).",popup_remove_whitelistedElementsDomains:"Entfernen Sie die aktuelle Domain aus der Whitelist Domänen.",popup_add_blacklistedElementsTrackers_popup:"Fügen Sie den aktuellen Eintrag zu der List  Blacklist Trackern hinzu. Alle Versuche, auf diese Domain zuzugreifen, werden blockiert.",popup_remove_blacklistedElementsTrackers_popup:"Entfernen Sie den Eintrag aus der Blacklist Tracker.",popup_add_blacklistedElementsDomians_popup:"Fügen Sie den aktuellen Eintrag zu der List  Blacklist Domains hinzu. Alle Versuche, von dieser Domain aus auf diese Domain oder Dienste zuzugreifen, werden blockiert.",popup_remove_blacklistedElementsDomians_popup:"Entfernen Sie den Eintrag aus der Blacklist Domänen.",popup_add_blacklistedElementsCookies_popup:"Fügen Sie den aktuellen Eintrag zu der List  Blacklist Cookies hinzu. Alle Cookies werden beim Laden der Website entfernt, dann alle 5 Sekunden und wenn die Website verlassen wird.",popup_remove_blacklistedElementsCookies_popup:"Entfernen Sie den Eintrag aus der Blacklist Cookie.",popup_add_blacklistedElementsIframes_popup:"Fügen Sie den aktuellen Eintrag zu der List  Blacklist Iframes hinzu. Alle Iframes werden gelöscht sobald diese Website versucht externen Content zu laden.",popup_remove_blacklistedElementsIframes_popup:"Entfernen Sie den Eintrag aus der Blacklist Iframes.",popup_add_blacklistedElementsIframesSources_popup:"Fügen Sie den aktuellen Eintrag zu der List  Blacklist Iframes Sources hinzu.",popup_remove_blacklistedElementsIframesSources_popup:"Entfernen Sie den Eintrag aus der Blacklist Iframes Sources. Alle Iframes werden gelöscht sobald diese Website versucht externen Content zu laden.",popup_add_whitelistedElementsDomains_popup:"Fügen Sie der Whitelist-Domain die aktuelle Domain hinzu und lassen Sie alles zu (keine Anfrage wird blockiert, keine Blacklist-Wortprüfung, keine Cookie-Löschung und keine automatische Iframe-Löschung).",popup_remove_whitelistedElementsDomains_popup:"Entfernen Sie die aktuelle Domain aus der Whitelist Domänen.",popup_reload_target:"Reload website",extendsblacklist:o.createElement("span",null,"Wärend des Laden einer Webseite, wird die Domäne über ein Blacklist Filter durchgefürfelt. Wenn die Domäne auf der Schwarzen Liste steht, wird diese blockiert. Um die maximale Sicherheit zu gewärleisten kann eine Erweiterte Blacklist hinzugefügt werden it weiteren 20822 Einträgen. Der Inhalt der Liste steht hier:",o.createElement("a",{target:"_blank",href:l.addonPrefix()+"/extendedblacklist.txt"},"extendedblacklist.txt")),extendspornlist:o.createElement("span",null,"Wärend des Laden einer Webseite, wird die Domäne über ein Blacklist Filter durchgefürfelt. Wenn die Domäne auf der Schwarzen Liste steht, wird diese blockiert. Um die maximale Sicherheit zu gewärleisten kann eine Erweiterte Pornlist hinzugefügt werden it weiteren 6668 Einträgen. Der Inhalt der Liste steht hier:",o.createElement("a",{target:"_blank",href:l.addonPrefix()+"/extendedpornlist.txt"},"extendedpornlist.txt")),blacklistedElementsCookies_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"Sie können hier einen Cookie-Namen oder einen Domain-Namen hinzufügen, der auf jeder Website gelöscht werden soll. Standardmäßig enthält diese Liste 640 Einträge mit vordefinierten Cookie-Namen oder Domain-Namen dass die Verwendung von Cookies für Tracking-Zwecke und dort automatisch durch den Sicherheitsinhalt gelöscht werden."),o.createElement("ul",null,o.createElement("li",null,"Beispiel Eintrag in der Liste: ",o.createElement("span",{className:"colored-example-element"},"GPS"),". Wenn Sie danach die Webseite besuchen: https://www.youtube.com, dann wird der Cookie mit dem Name ",o.createElement("span",{className:"colored-example-element"},"GPS")," gelöscht"),o.createElement("li",null,"Beispiel Eintrag in der Liste: ",o.createElement("span",{className:"colored-example-element"},"www.7search.com"),". Wenn Sie danach die Webseite besuchen: https://www.7search.com, dann werden ",o.createElement("span",{className:"colored-example-element"},"alle Cookies"),"  von der Seite gelöscht.")))),blacklistedElementsDomians_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"Dies ist eine auf Domainnamen basierende Blacklist. Alle Domains aus dieser Liste werden beim Besuch ihrer Websites blockiert."),o.createElement("ul",null,o.createElement("li",null,"Beispiel Eintrag in der Liste: ",o.createElement("span",{className:"colored-example-element"},"ytimg.com")," wenn Sie dann die Webseite besuchen ",o.createElement("span",{className:"colored-example-element"},"https://ytimg.com")," wird der Zugruff verweigert."),o.createElement("li",null,"Beispiel Eintrag in der Liste: ",o.createElement("span",{className:"colored-example-element"},"github.com")," wenn Sie dann die Webseite besuchen ",o.createElement("span",{className:"colored-example-element"},"https://github.com")," wird der Zugruff verweigert.")))),blacklistedElementsUrlsIncludes_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"Dies ist ein Domainname und Teil der URL-basierten Blacklist. Alle Domains aus dieser Liste und alle übereinstimmenden Einträge aus der Website-URL werden blockiert, wenn eine Übereinstimmung gefunden wurde."),o.createElement("ul",null,o.createElement("li",null,"Beispiel Eintrag in der Liste: ",o.createElement("span",{className:"colored-example-element"},"package"),". Wenn Sie danach die Webseite besuchen: https://www.npmjs.com/",o.createElement("span",{className:"colored-example-element"},"package"),"/gulp-babel  wird der Zugruff verweigert."),o.createElement("li",null,"Beispiel Eintrag in der Liste: ",o.createElement("span",{className:"colored-example-element"},"test"),". Wenn Sie danach die Webseite besuchen: https://www.google.com/search?q=",o.createElement("span",{className:"colored-example-element"},"test"),",  wird der Zugruff verweigert."),o.createElement("li",null,"Beispiel Eintrag in der Liste: ",o.createElement("span",{className:"colored-example-element"},"q"),". Wenn Sie danach die Webseite besuchen: https://www.google.com/search?",o.createElement("span",{className:"colored-example-element"},"q"),"=test,  wird der Zugruff verweigert."),o.createElement("li",null,"Beispiel Eintrag in der Liste: ",o.createElement("span",{className:"colored-example-element"},"hub.com"),". Wenn Sie danach die Webseite besuchen: https://www.git",o.createElement("span",{className:"colored-example-element"},"hub.com"),",  wird der Zugruff verweigert.")))),blacklistedElementsIframes_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"Wenn Sie eine Website besuchen und sich der Domainname der Website in dieser Liste befindet, werden alle Iframes entfernt."),o.createElement("ul",null,o.createElement("li",null,"Beispiel Eintrag in der Liste: ",o.createElement("span",{className:"colored-example-element"},"gazeta.pl"),". Wenn Sie danach die Webseite besuchen: https://www.gazeta.pl werden alle Iframes von der Seite https://",o.createElement("span",{className:"colored-example-element"},"gazeta.pl")," entfernt")))),blacklistedElementsIframesSources_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},'Wenn Sie eine Website besuchen und der Attribut "src" also Source (Quelle des Servers) eines Iframes einen Eintrag aus dieser Liste beinhaltet, wird das Iframe aus der Website entfernt.'),o.createElement("ul",null,o.createElement("li",null,"Beispiel Eintrag in der Liste: ",o.createElement("span",{className:"colored-example-element"},"https://dmp.theadex.com/r/"),". Wenn Sie danach die Webseite besuchen: https://www.gazeta.pl und irgendein Iframe Element das Attribut src (source), den Source beinhaltet ",o.createElement("span",{className:"colored-example-element"},"https://dmp.theadex.com/r/"),"230/1121/?c=4225222955758066709, wird das Iframe aus der Seite komplett entfernt")))),blacklistedElementsIframesNames_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},'Wenn Sie eine Website besuchen und der Attribut "name" eines Iframes einen Eintrag aus dieser Liste beinhaltet, wird das Iframe aus der Website entfernt.'),o.createElement("ul",null,o.createElement("li",null,"Beispiel Eintrag in der Liste: ",o.createElement("span",{className:"colored-example-element"},"googleads"),". Wenn Sie danach die Webseite besuchen: https://www.gazeta.pl und irgendein Iframe Element das Attribut name, die Zeichenkette beinhaltet ",o.createElement("span",{className:"colored-example-element"},"googleads"),"_sync, wird das Iframe aus der Seite komplett entfernt")))),blacklistedElementsTrackers_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"Wenn Sie eine Website besuchen und die Website andere implementiert hat (Dritte) Dienste oder Tracking-Dienste und der Domainname stimmen mit einem Domainnamen aus dieser Liste überein oder der gesamte URL-Pfad stimmt dann mit einem Eintrag aus dieser Liste überein Die Anfrage wird blockiert."),o.createElement("ul",null,o.createElement("li",null,"Beispiel Eintrag in der Liste: ",o.createElement("span",{className:"colored-example-element"},"cdn.mouseflow.com"),". Egal welche Webseite Sie besuchen, falls eine Webseite versuche einen Service von https://",o.createElement("span",{className:"colored-example-element"},"cdn.mouseflow.com"),"/lib/track.js abzurufen, wird diese Abfrage blockiert"),o.createElement("li",null,"Beispiel Eintrag in der Liste: ",o.createElement("span",{className:"colored-example-element"},"rsrc.php/v3/y4/r/-PAXP-deijE.gif"),". Egal welche Webseite Sie besuchen, falls eine Webseite versuche einen Service von: https://static.xx.fbcdn.net/",o.createElement("span",{className:"colored-example-element"},"rsrc.php/v3/y4/r/-PAXP-deijE.gif"),"  abzurufen, wird diese Abfrage blockiert")))),blacklistedElementsWords_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},'Der Sicherheitsinhalt findet jedes Wort aus dieser schwarzen Liste und jedes Wort wird durch den im Abschnitt "Einstellungen" definierten "Ersetzer" ersetzt. Wenn der Sicherheitsinhalt ein Gefahrenwort aus der "Blacklist: Words" in einem HTML-Tag gefunden hat, Anschließend werden die HTML-Tag-Attribute gescannt. Wenn ein Attributname aus dieser Liste nicht mit Einträgen aus der "Blacklist: Attribute" übereinstimmt, dann Der Sicherheitsinhalt findet jedes Wort innerhalb des Attributwerts aus dieser Liste und ersetzt jedes Zeichen durch das Ersetzerzeichen definiert im Abschnitt "Einstellungen".'),o.createElement("ul",null,o.createElement("li",null,'Zum Beispiel, wenn das Wort "guns" in dieser schwarzen Liste vorhanden ist und Sie eine Website besuchen, dann wird das Wort "guns" ersetzt werden.',o.createElement("br",null),'Beispiel Eingabe: "we have ',o.createElement("span",{className:"colored-example-element"},"guns"),' in ...".',o.createElement("br",null),'Beispielausgabe: "we have ',o.createElement("span",{className:"colored-example-element"},"####"),' in ..."'),o.createElement("li",null,'Zum Beispiel, wenn das Wort "seven" in dieser schwarzen Liste vorhanden ist und Sie eine Website besuchen, dann wird das Wort "seven" ersetzt werden.',o.createElement("br",null),'Beispiel Eingabe: "',o.createElement("span",{className:"colored-example-element"},"seven"),' years old ...".',o.createElement("br",null),'Beispielausgabe: "',o.createElement("span",{className:"colored-example-element"},"#####"),' years old ...".')))),blacklistedElementsClass_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"Blockieren von DOM-Elementen (Tags) basierend auf dem Attribut: class."),o.createElement("ul",null,o.createElement("li",null,"Beispiel Eintrag: \"font-bold\". Wenn du eine Webseite besuchtst und irgendein DOM Element das Attribut class mit dem Wert 'font-bold' befüllt ist (z.B.: ",'<span class="font-bold"> Text </span>',") dann wird das Element aus der Webseite enfernt.")))),blacklistedElementsHref_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},'Blockieren von "A" -Tag-Elementen basierend auf ihrem Attribut: href.'),o.createElement("ul",null,o.createElement("li",null,'Beispiel Eintrag: "redirect?". Wenn du ein Webseite besuchtst und das DOM Element ',"<a>"," das Attribut href mit dem Wert 'redirect?' befüllt hat (z.B.: ",'<a href="https://xv345bhFD.com/redirect?client=http://example.com">link</a>',"), dann wird das Element aus der Webseite enfernt.")))),blacklistedElementsId_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"Blockieren von DOM-Elementen (Tags) basierend auf dem Attribut: zd."),o.createElement("ul",null,o.createElement("li",null,"Beispiel Eintrag: \"extern-logo\". Wenn du eine Webseite besuchtst und irgendein DOM Element das Attribut id mit dem Wert 'extern-logo' befüllt ist (z.B.: ",'<img id="extern-logo"/>',"), dann wird das Element aus der Webseite enfernt.")))),whitelistedElementsDomains_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"Machen Sie nichts für ausgewählte Domainnamen."),o.createElement("ul",null,o.createElement("li",null,"Beispiel Eintrag in der Liste: ",o.createElement("span",{className:"colored-example-element"},"google.com")," wenn Sie dann die Webseite besuchen https://www.",o.createElement("span",{className:"colored-example-element"},"google.com")," findet keine Überprüfung jeglicher Art statt"),o.createElement("li",null,"Beispiel Eintrag in der Liste: ",o.createElement("span",{className:"colored-example-element"},"npmjs.com")," wenn Sie dann die Webseite besuchen https://www.",o.createElement("span",{className:"colored-example-element"},"npmjs.com"),"/package/gulp-babel findet keine Überprüfung jeglicher Art statt")))),example:"Beispiele",imagesPopupTitle:"Fotos wurden gefunden",imagesNoData:"Keine validen Fotos vorhanden",imagesNoDataFavourites:"Keine gespeicherten Fotos vorhanden",imagesLoadingTabs:"Aktive tabs werden geladen...",current_tabs_title:"Offene Tabs",filter:"Filtern",filter_all:"Alle",itemsPerSite:"Je Seite",itemsPerSiteSuffix:"Fotos",page:"Seite",of:"von",images:"Fotos",current_favourites_images:"Derzeit gespeicherte Fotos",open_in_new_tab:"Im neuen Tab öffnen",download:"Herunterladen",downloadSmall:"download",delete_all:"Alle löschen",notLoggedInImagesFavouritesAdd:"Nur angemeldete Benutzer können Bilder zur Favoritenliste hinzufügen",notLoggedInImagesFavouritesManage:"Nur angemeldete Benutzer können die Favoritenliste verwalten",tabsNoData:"Keine validen Tabs vorhanden",imagesLoadingData:"Fotos werden geladen...",infoItemAdded:"Eintrag wurde in die Liste hinzugefügt",infoItemRemoved:"Eintrag wurde aus der Liste entfernt",infoArrayIs0:"Liste ist leer, daher kann kein Element entfernt werden",infoIncorrectValue:"Wert ist nicht valide",infoItemInList:"Eintrag bereits in der Liste vorhanden",country:"Land",countriesNotFoundText:"Sorry, dieses Land habe ich nicht gefunden",dropText:"Hier loslassen",error:"Fehler",searchPlaceholder:"Suchen...",search:"Suche",list:"Liste",addPlaceholder:"Wert...",addNewEntryTitle:"Neuen Eintrag hinzufügen",no_data_list:"Keine Einträge vorhanden",no_data_list_search:"Keine Suchergebnisse vorhanden",loading:"Laden...",home_security_3:"Blockierung von Anfragen",home_security_2:"Blockierung von Cookies",home_security_1:"Blockierung von Trackern",home_security_4:"Blockierung von Pornographischen Seiten",home_security_5:"Blockierung von Wörtern",home_security_6:"Blockierung von Webseiten Content",upload:"Drag & Drop die NinjaProtects json Datei hier...",export:"Export",exportAll:"der globalen Listen und Einstellungen",dangerCount:"Ich beschütze dich!",dangerCountPrefix:"Die maximale Anzahl der Gefahren Elemente wurde erreicht und beträgt aktuell",dangerUrlPrefix:"Die URL oder ein Teil der URL ist gefährlich und befindet sich in einer der schwarzen Listen",domain:"Domänen Name ohne www. Beispiel: react-divcreator.cba.pl",tag:"Tag Name. Beispiel: div",languages:"Sprachen"};t.default=s},function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&r(t,e,n);return i(t,e),t};Object.defineProperty(t,"__esModule",{value:!0});var o=a(n(52)),l=n(67),s={itemRemovedFromList:"Entry has been removed from current list",currntlyIs:"Klick the box below to",currntlyIsOff:"activate",currntlyIsOn:"deactivate",title_html_blocker:"Blocker",blocker_msg_7:"Content blocker block's HTML content that's belong to the current visited website.  External content cannot be blocked, like: iframes. To block an element, activate the blocker then click on an HTML element on the website. All blocked elements can be deleted on the dashboard in the 'Blocked elements' section.",title_reset:"Factory reset",reset_done:"Reset of this application are done and factory configuration are restored.",reset:"Klick this text to make an factory reset of this extension. All your custom lists entries, configuration and the global statistic will be deleted, so please make an export of your lists, settings and statistic. After this process make an import from the dashboard page.",menu_title_ninja:"Ninja Icon",ninjaIcon:"Ninja Icon of this extensions are token from",turnOn:"Turn NinjaProtect on",turnOff:"Turn NinjaProtect off",links:"Links",deleteAllIframes:"Delete iframes from current website",deleteAllCookies:"Delete Cookies from current website",notLoggedInStatisticMessage:"You are working locally. Login to persist the statistic otherwise the statistic cannot be done backwards.",today_blocked:"Current day statistic of blocked elements",menu_text_statistic:"Statistic of blocked items",menu_text_statistic_small:"Statistic",menu_text_requests:"Requests",addon_not_available:"This website are not supporting extensions",NoDataBlockedItems:"No blocked data",NoDataBlockedItemsToday:"No blocked data from today available",home_chat:"Chat with friends - without tracking",home_messages:"Send messages - without tracking",home_security:"Keep yourself secure in the internet - block trackers",home_images:"Images download - without tracking",menu_text_export:"Export",menu_title_export:"Navigate to the export area",menu_text_import:"Import",menu_title_import:"Navigate to the import area",messages_main:"Messages",menu_text_messages:"Messages",menu_title_messages:"Navigate to the messages area",menu_text_notifications:"Notifications",menu_title_notifications:"Navigate to the notifications area",menu_text_favourites:"Friends",menu_title_favourites:"Navigate to the friends area",menu_text_add_favourites:"Search",menu_title_add_favourites:"Navigate to the friends search area",chat_main:"Chat",menu_text_chat:"Chat",menu_title_chat:"Navigate to the chat area",menu_text_security:"Domain",menu_text_security_main:"List",menu_title_security:"Navigate to the domain management area",menu_text_security_settings:"Settings",menu_title_security_settings:"Navigate to the security settings area",menu_text_cookies:"Cookies",menu_title_cookies:"Navigate to the cookies area",menu_text_home:"Home",menu_title_home:"Navigate to the homepage area",menu_text_iframes:"Iframes",menu_title_iframes:"Navigate to the iframes area",menu_text_security_examples:"Examples",menu_title_security_examples:"Navigate to the security examples area",menu_text_download_images:"Download images",menu_title_download_images:"Navigate to the images download area",menu_text_images:"Images",menu_text_images_favourites:"Saved images",menu_title_images_favourites:"Navigate to the saved images area",accountPrivacyTerms:"Privacy policy",globalNetworkError:"Network error.",globalProcessError:"Process error.",globalUserDoesNotExsists:"User Account does not exsists",globalInvalidEmailsAdress:"Invalid email address format",globalErrormessagePrefix:"An error occured which causes the application to not work properly.",globalErrormessageCloseButton:"Dismiss",globalErrormessageLearnMoreButton:"Learn more",globalInvalidCountry:"Invalid country",globalInvalidLanguage:"Invalid language",globalErrorCodeTitle:"Error code",globalErrorCode_1:'Network error. When a network error occured this mean an "ajax" request failed. Check your network connection or that because the remote service currently not available.',globalErrorCode_2:"App process error. It means that the ajax requests response provided an invalid structure for the application.",globalErrorCode_3:"Response other then expected. Its mean the requested value of the current applications context are invalid.",code:"Code",listNotSynchronizedUserNotLoggedIn:"You are working locally. Login to synchronize your list.",notLoggedIn:"Not logged in information",listSynchronized_one:"Synchronized",titleDeleteCookie:"Delete single cookie",cookie_msg_1:"Domain:",cookie_msg_2:"Name:",cookie_msg_3:"Value:",cookie_msg_4:"Delete all cookies. It is possible that you will be logged out from the current website.",cookiesNoData:"No cookies available",avatarErrorFileType:"Unrecognized file type",avatarErrorFileSize:"File size exceeds limit of 5MB for avatar",avatarErrorFileTypeSupport:"Only jpg, png and gif file types are allowed",blacklist:"Blacklists",whitelist:"Whitelists",blacklistedElementsWords:"Blacklist Words",blacklistedElementsDomians:"Blacklist Domains",blacklistedElementsUrlsIncludes:"Blacklist Urls includes",blacklistedElementsTrackers:"Blacklist Trackers",blacklistedElementsCookies:"Blacklist Cookies",blacklistedElementsClass:"Block HTML by class",blacklistedElementsId:"Block HTML by id",blacklistedElementsHref:"Block HTML by href",menuBlacklistedElementsClass:"Block by class",menuBlacklistedElementsId:"Block by id",menuBlacklistedElementsHref:"Block by href",blacklistedElementsIframes:"Blacklist Iframes",blacklistedElementsIframesSources:"Blacklist Iframe Sources",blacklistedElementsIframesNames:"Blacklist Iframe Names",copiedToClipBoard:"Copied to clipboard",action_title_copyToClipboard:"Copy list to clipboard",action_title_exportToFile:"Export list to JSON field",action_title_deleteList:"Empty list globally",action_title_copyToClipboard_single:"Copy value to clipboard",action_title_delete_single:"Remove entry",forThisFunctionLogin:"To perform this action, please login",emptyListDone:"List has been emptied",restoreDefaultValue:"Restore list to its default value",whitelistedElementsDomains:"Whitelist Domains",blockedElements:"Content Blocker",securityIsOn:"This extension is ON or OFF.",scanTextOnWebsite:"If you turn this option OFF, then all words are NOT scanned. The Blacklist: Words, Attributes, Attributes Words are ignored.",makeSearchInSourceCode:"Scan words in the source code of a given HTML element (innerHTML) or only in the text of HTML elements (innerText).",mutationCheck:"Check websites HTML elements after the page was loaded (DOM Mutations listener - grabbing all elements changed by Javascript libraries).",ignoreTagStyle:'Ignore the code inside the "Style" tags (<style> tag) while scanning process based on blacklist words.',ignoreTagScript:'Ignore the code inside the "SCRIPT" tags (<script> tag) while scanning process based on blacklist words.',ignoreTagLink:'Ignore the code inside the "Link" tags (<link> tag) while scanning process based on blacklist words.',ignoreTagMeta:'Ignore the code inside the "Meta" tags (<meta> tag) while scanning process based on blacklist words.',replacer:'Replace each single danger words character with this entry. The danger words comes from your customized "Blacklist Words".',maximumOfDangerWords:"After this value is reached - count based on blacklists: words, Block HTML by class, Block HTML by id and Block HTML by href (each blocked element causes the count to rise +1), the website will be blocked. Minimum value is 1, maximum value is 300.",limitlessScan:'Ignore the maximum count of all blocked elements. Blocked elements are counted based on this blacklists: "Blocked Content", "Blacklist Words", "Block by class", "Block by id" and "Block by href". The website will not be blocked (ignore the value above). If you activate this function, the security content can slow down the performance of your browser.',deleteCookies:"Autodelete all cookies based on the blacklist Cookies on each website ? Cookies are delete if you open or close an tab an while browsing each 5 seconds.",popupMainTitle:"Black ninja statistic",popup_blocked_trackers:"Blocked trackers",popup_blocked_cookies:"Blocked cookies",popup_blocked_words:"Blocked words",popup_blocked_requests:"Blocked requests",popup_blocked_iframes:"Blocked iframes",popup_blocked_dom:"Blocked HTML",popup_blocked_websites:"Blocked websites",popup_title_dashboard:"Dashboard",popup_title_global_chart:"Global statistic",titleDeleteIframe:"Delete single iframe",iframe_msg_1:"Source:",iframe_msg_2:"Id:",iframe_msg_3:"className:",iframesNoData:"No iframes available",popup_add_blacklistedElementsTrackers:"Add current domain to the blacklist trackers. All tries to access this domain will be blocked.",popup_remove_blacklistedElementsTrackers:"Remove current domain from the blacklist trackers.",popup_add_blacklistedElementsDomians:"Add current domain to the blacklist domains. All tries to access this domain or services from this domain will be blocked.",popup_remove_blacklistedElementsDomians:"Remove current domain from the blacklist domains.",popup_add_blacklistedElementsCookies:"Add current domain to the blacklist cookies. All cookies will be removed, if the website has been loaded, then for each 5 seconds and finally if you are leaving the current website all cookies deleted.",popup_remove_blacklistedElementsCookies:"Remove current domain from the blacklist cookies.",popup_add_blacklistedElementsIframes:"Add current domain to blacklist iframes and remove all iframes if the website tries to attach/ include an external iframe.",popup_remove_blacklistedElementsIframes:"Remove current domain from the blacklist iframes.",popup_add_blacklistedElementsIframesSources:"Add current listed url to blacklist Iframes Sources and remove all iframes if the website tries to attach/ include an external iframe.",popup_remove_blacklistedElementsIframesSources:"Remove current listed url from the blacklist Iframes Sources.",popup_add_whitelistedElementsDomains:"Add current domain to the whitelist domains and allow everything (no request are blocked, no blacklist words check, no cookie deletion and no auto iframe deletion).",popup_remove_whitelistedElementsDomains:"Remove current domain from the whitelist domains.",popup_add_blacklistedElementsTrackers_popup:"Add current entry to the blacklist trackers. All tries to access this domain will be blocked.",popup_remove_blacklistedElementsTrackers_popup:"Remove current entry from the blacklist trackers.",popup_add_blacklistedElementsDomians_popup:"Add current entry to the blacklist domains. All tries to access this domain or services from this domain will be blocked.",popup_remove_blacklistedElementsDomians_popup:"Remove current entry from the blacklist domains.",popup_add_blacklistedElementsCookies_popup:"Add current entry to the blacklist cookies. All cookies will be removed, if the website has been loaded, then for each 5 seconds and finally if you are leaving the current website all cookies deleted.",popup_remove_blacklistedElementsCookies_popup:"Remove current entry from the blacklist cookies.",popup_add_blacklistedElementsIframes_popup:"Add current entry to blacklist iframes and remove all iframes if the website tries to attach/ include an external iframe..",popup_remove_blacklistedElementsIframes_popup:"Remove current entry from the blacklist iframes.",popup_add_blacklistedElementsIframesSources_popup:"Add current entry to blacklist Iframes Sources  and remove all iframes if the website tries to attach/ include an external iframe..",popup_remove_blacklistedElementsIframesSources_popup:"Remove current entry from the blacklist Iframes Sources.",popup_add_whitelistedElementsDomains_popup:"Add current entry to the whitelist domains and allow everything (no request are blocked, no blacklist words check, no cookie deletion and no auto iframe deletion).",popup_remove_whitelistedElementsDomains_popup:"Remove current entry from the whitelist domains.",popup_reload_target:"Reload website",extendsblacklist:o.createElement("span",null,"While loading a website, the domain is scanned through a blacklist filter. If the domain is blacklisted, it will be blocked. To ensure maximum security, an extended blacklist can be added with another 20,822 entries. The content of the list is here:",o.createElement("a",{target:"_blank",href:l.addonPrefix()+"/extendedblacklist.txt"},"extendedblacklist.txt")),extendspornlist:o.createElement("span",null,"While loading a website, the domain is scanned through a blacklist filter. If the domain is blacklisted, it will be blocked. To ensure maximum security, an extended pornlist can be added with another 6,668 entries. The content of the list is here:",o.createElement("a",{target:"_blank",href:l.addonPrefix()+"/extendedpornlist.txt"},"extendedpornlist.txt")),blacklistedElementsCookies_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"You can add here an cookie name or an domain name which should be deleted on each website. Default this list has 640 entries with predefined cookie names or domain names that using cookies for tracking purposes and there are automatically deleted by the security content."),o.createElement("ul",null,o.createElement("li",null,"Example of list entry: ",o.createElement("span",{className:"colored-example-element"},"GPS"),". If you visit the website: https://www.youtube.com, then the cookie with the name ",o.createElement("span",{className:"colored-example-element"},"GPS")," are deleted"),o.createElement("li",null,"Example of list entry: ",o.createElement("span",{className:"colored-example-element"},"www.7search.com"),". If you visit the website: https://www.7search.com, then ",o.createElement("span",{className:"colored-example-element"},"all cookies")," from this website are deleted")))),blacklistedElementsDomians_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"This is an domain name based blacklist. All domains from this list are blocked while visiting there websites."),o.createElement("ul",null,o.createElement("li",null,"Example of list entry: ",o.createElement("span",{className:"colored-example-element"},"ytimg.com")," and if yout try to access the website ",o.createElement("span",{className:"colored-example-element"},"https://ytimg.com")," then the website are blocked"),o.createElement("li",null,"Example of list entry: ",o.createElement("span",{className:"colored-example-element"},"github.com")," and if yout try to access the website ",o.createElement("span",{className:"colored-example-element"},"https://github.com")," then the website are blocked")))),blacklistedElementsUrlsIncludes_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"This is an domain name and part of url based blacklist. All domains from this list and all matched entries from the websites url are blocked if an match was found."),o.createElement("ul",null,o.createElement("li",null,"Example of list entry: ",o.createElement("span",{className:"colored-example-element"},"package"),". If you visit the website: https://www.npmjs.com/",o.createElement("span",{className:"colored-example-element"},"package"),"/gulp-babel then the website are blocked"),o.createElement("li",null,"Example of list entry: ",o.createElement("span",{className:"colored-example-element"},"test"),". If you visit the website: https://www.google.com/search?q=",o.createElement("span",{className:"colored-example-element"},"test"),", then the website are blocked"),o.createElement("li",null,"Example of list entry: ",o.createElement("span",{className:"colored-example-element"},"q"),". If you visit the website: https://www.google.com/search?",o.createElement("span",{className:"colored-example-element"},"q"),"=test, then the website are blocked"),o.createElement("li",null,"Example of list entry: ",o.createElement("span",{className:"colored-example-element"},"hub.com"),". If you visit the website: https://www.git",o.createElement("span",{className:"colored-example-element"},"hub.com"),", then the website are blocked")))),blacklistedElementsIframes_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"If you visit an website an the websites domain name are inside this list then all iframes are removed."),o.createElement("ul",null,o.createElement("li",null,"Example of list entry: ",o.createElement("span",{className:"colored-example-element"},"gazeta.pl")," - if you visit the website: https://www.gazeta.pl then all iframes on the website https://",o.createElement("span",{className:"colored-example-element"},"gazeta.pl")," are removed")))),blacklistedElementsIframesSources_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},'If you visit an website an the website includes iframes and this iframes attribute "src" (source) includes one of an entry from this list, then the arget iframe will be removed.'),o.createElement("ul",null,o.createElement("li",null,"Example of list entry: ",o.createElement("span",{className:"colored-example-element"},"https://dmp.theadex.com/r/"),'. If you visit the website: https://www.gazeta.pl and if the website includes iframes and the iframes "src" (source) includes an entry from this list ',o.createElement("span",{className:"colored-example-element"},"https://dmp.theadex.com/r/"),"230/1121/?c=4225222955758066709, then this iframe are removed from the website")))),blacklistedElementsIframesNames_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},'If you visit an website an the website includes iframes and this iframes attribute "name" includes one of an entry from this list, then the arget iframe will be removed.'),o.createElement("ul",null,o.createElement("li",null,"Example of list entry: ",o.createElement("span",{className:"colored-example-element"},"googleads"),'. If you visit the website: https://www.gazeta.pl and if the website includes iframes and the iframes "name" includes an entry from this list ',o.createElement("span",{className:"colored-example-element"},"googleads"),"_sync, then this iframe are removed from the website")))),blacklistedElementsTrackers_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"If you visit a website, and the website has implemented other (third party) services or tracking services and the domain name match with an domain name from this list or the whole url path match with an entry from this list then the request will be blocked."),o.createElement("ul",null,o.createElement("li",null,"Example of list entry: ",o.createElement("span",{className:"colored-example-element"},"cdn.mouseflow.com"),". If an website will connect to an external service and the domain name contains: https://",o.createElement("span",{className:"colored-example-element"},"cdn.mouseflow.com")," then the request are blocked"),o.createElement("li",null,"Example of list entry: ",o.createElement("span",{className:"colored-example-element"},"rsrc.php/v3/y4/r/-PAXP-deijE.gif"),". If an website will connect to an external service and the url request contains: https://static.xx.fbcdn.net/",o.createElement("span",{className:"colored-example-element"},"rsrc.php/v3/y4/r/-PAXP-deijE.gif")," then the request are blocked")))),blacklistedElementsWords_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},'The security content will find each word from this blacklist and each word will be replace by the "replacer" defined in the "settings" section. If the security content has found an danger word, from the "Blacklist: Words" in any HTML tag, then the HTML tags attributes are scanned. If any attribute name from this list does not matches with entrys from the "Blacklist: attributes", then the security content will find each word, inside the attributes value, from this list and replace each character with the replacer defined in the "settings section.'),o.createElement("ul",null,o.createElement("li",null,"For example, if the word ",o.createElement("span",{className:"colored-example-element"},"guns")," are in this blacklist, then if you visit a website, then this word will be replaced",o.createElement("br",null),'Example input: "we have ',o.createElement("span",{className:"colored-example-element"},"guns"),' in ..."',o.createElement("br",null),'Example output: "we have ',o.createElement("span",{className:"colored-example-element"},"####"),' in ..."'),o.createElement("li",null,"For example, if the word ",o.createElement("span",{className:"colored-example-element"},"seven")," are in this blacklist, then if you visit a website, then this will be replaced",o.createElement("br",null),'Example input: "',o.createElement("span",{className:"colored-example-element"},"seven"),' years old ..."',o.createElement("br",null),'Example output: "',o.createElement("span",{className:"colored-example-element"},"#####"),' years old ..."')))),blacklistedElementsClass_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"Blocking DOM Elements (tags) based on its attribute: class."),o.createElement("ul",null,o.createElement("li",null,"Example of list entry: ",o.createElement("span",{className:"colored-example-element"},"font-bold"),'. When you visit an website and a single tag has the attributes class an the class value includes this text: "font-bold", example: ','<span class="font-bold"> Text </span>',", then this tag (DOM element) will be removed from the current visited website")))),blacklistedElementsHref_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},'Blocking "A" tag Elements based on its attribute: href.'),o.createElement("ul",null,o.createElement("li",null,"Example of list entry: ",o.createElement("span",{className:"colored-example-element"},"redirect?"),". When you visit an website and a single tag ","<a>",' has the attributes href an the href`s value includes this text: "redirect?", example: ','<a href="https://xv345bhFD.com/redirect?client=http://example.com">link</a>',", then this tag (DOM element) will be removed from the current visited website")))),blacklistedElementsId_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"Blocking DOM Elements (tags) based on its attribute: id."),o.createElement("ul",null,o.createElement("li",null,"Example of list entry: ",o.createElement("span",{className:"colored-example-element"},"extern-logo"),'. When you visit an website and a single tag has the attributes id an the id value includes this text: "extern-logo", example: ','<img id="extern-logo"/>',", then this tag (DOM element) will be removed from the current visited website")))),whitelistedElementsDomains_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"Make nothing for selected domain names."),o.createElement("ul",null,o.createElement("li",null,"Example of list entry: ",o.createElement("span",{className:"colored-example-element"},"google.com")," then the website https://www.",o.createElement("span",{className:"colored-example-element"},"google.com")," are allowed and no checks are made"),o.createElement("li",null,"Example of list entry: ",o.createElement("span",{className:"colored-example-element"},"npmjs.com")," then the website https://www.",o.createElement("span",{className:"colored-example-element"},"npmjs.com"),"/package/gulp-babel are allowed and no checks are made")))),example:"Examples",imagesPopupTitle:"Images on current website",imagesNoData:"No valid images found",imagesNoDataFavourites:"No saved images found",imagesLoadingTabs:"Loading active tabs...",current_tabs_title:"Current tabs",filter:"Filter",filter_all:"All",itemsPerSite:"Per site",itemsPerSiteSuffix:"images",page:"Page",of:"of",images:"images",current_favourites_images:"Currently saved images",open_in_new_tab:"Open in new tab",download:"Download",downloadSmall:"download",delete_all:"Delete all",notLoggedInImagesFavouritesAdd:"Only logged in users are able to add images to the favourites list",notLoggedInImagesFavouritesManage:"Only logged in users are able to manage the favourites list",tabsNoData:"No valid tabs available",imagesLoadingData:"Loading images...",infoItemAdded:"Item has been added to the current list",infoItemRemoved:"Item has been removed from list",infoArrayIs0:"List are empty, but you want to remove an value",infoIncorrectValue:"Value is incorrect",infoItemInList:"Item allready in list",country:"Country",countriesNotFoundText:"Sorry, no countries found",dropText:"Drop here",error:"Error",searchPlaceholder:"Search for value here...",search:"Search",list:"List",addPlaceholder:"Value...",addNewEntryTitle:"Add new entry",no_data_list:"No entries",no_data_list_search:"No search result",loading:"Loading...",home_security_1:"Blocking danger and tracking cookies",home_security_2:"Blocking danger and tracking requests",home_security_3:"Blocking trackers",home_security_4:"Blocking danger porn websites",home_security_5:"Blocking custom danger words",home_security_6:"Blocking custom websites HTML content",upload:"Drag & Drop NinjaProtect`s json file here...",export:"Export",exportAll:"of global lists and settings",dangerCount:"Protecting you!",dangerCountPrefix:"The maximum number of danger blocked elements has been reached and is currently",dangerUrlPrefix:"The current url or part of the given url are danger. Blocking by blacklist entry",domain:"Domain without www. Example: react-divcreator.cba.pl",tag:"Tag name. For example: div",languages:"Languages"};t.default=s},function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&r(t,e,n);return i(t,e),t};Object.defineProperty(t,"__esModule",{value:!0});var o=a(n(52)),l=n(67),s={itemRemovedFromList:"Wpis został usunięty z listy",currntlyIs:"Kliknij tekst poniżej aby wykonać",currntlyIsOff:"włączenie",currntlyIsOn:"wyłączenie",title_html_blocker:"Blocker",blocker_msg_7:"Content Blocker pozwala na zablokowanie treści bieżącej strony internetowej. Aby zablokować dany element drzewa DOM, włącz usługę Content Blocker potem wybierz element ze strony internetowej. Wszystkie zablokowane elementy mogą zostać skasowane w 'Dashboard' w sekcji 'Zablkowany HTML'.",title_reset:"Reset",reset_done:"Reset applikacji do ustawień fabrycznych został przeprowadzony pomyślnie.",reset:"Kliknij ten tekst aby przeprowadzić reset tej wtyczki do ustawień fabrycznych. Wszystkie twoja dane z list, ustawienia i statystyka zostana usunięte. Przejdz najpierw do działu eksportu danych aby po tym resecie móc wykonać import danych.",menu_title_ninja:"Ikonka Ninja",ninjaIcon:"Ikonka Ninja tego rozszerzenia została wzięta z",turnOn:"Włącz NinjaProtect",turnOff:"Wyłącz NinjaProtect",links:"Linki",deleteAllIframes:"Usuń ramki z bierzącej strony",deleteAllCookies:"Usuń ciasteczka z bierzącej strony",notLoggedInStatisticMessage:"Pracujesz lokalnie. Zaloguj się aby zachować statystykę wstecz.",today_blocked:"Statystyka zablokowanych elementów dnia dzisiejszego",menu_text_statistic:"Statystyka zablokowanych elementów",menu_text_statistic_small:"Statystyka",menu_text_requests:"Zapytania",addon_not_available:"Domena nie zezwala na używanie wtyczek",NoDataBlockedItems:"Brak zablokowanych informacji",NoDataBlockedItemsToday:"Brak informacji o zablokowanych elementach z dnia dzisiejszego",home_chat:"Chat z kolegami - bez śledzenia",home_messages:"Wysyłaj wiadomości - bez śledzenia",home_security:"Ochrona w internecie - blokowanie śledzących",home_images:"Pobieraj zdjęcia - bez śledzenia",menu_text_export:"Eksport",menu_title_export:"Przejdź do obszaru eksportu",menu_text_import:"Import",menu_title_import:"Przejdź do obszaru importu",messages_main:"Wiadomości",menu_text_messages:"Wiadomości",menu_title_messages:"Przejdź do obszaru wiadomości",menu_text_notifications:"Powiadomienia",menu_title_notifications:"Przejdź do obszaru powiadomień",favourites_main:"Znajomości",menu_text_favourites:"Znajomi",menu_title_favourites:"Przejdź do obszaru znajomi",menu_text_add_favourites:"Wyszukaj",menu_title_add_favourites:"Przejdź do obszaru szukania znajomych",chat_main:"Chat",menu_text_chat:"Chat",menu_title_chat:"Przejdź do obszaru chatu",menu_text_security:"Domena",menu_text_security_main:"Lista",menu_title_security:"Przejdź do obszaru zarządzania domeną",menu_text_security_settings:"Ustawienia",menu_title_security_settings:"Przejdź do obszaru ustawień ochrony",menu_text_cookies:"Cisteczka",menu_title_cookies:"Przejdź do obszaru ciasteczek",menu_text_home:"Strona główna",menu_title_home:"Przejdź do strony głównej",menu_text_iframes:"Ramki",menu_title_iframes:"Przejdź do obszaru ramek",menu_text_security_examples:"Przykłady",menu_title_security_examples:"Przejdź do obszaru przykładów ochrony",menu_text_download_images:"Pobierz zdjęcia",menu_title_download_images:"Przejdź do obszaru poboru zdjęć",menu_text_images:"Zdjęcia",menu_text_images_favourites:"Zapisane zdjęcia",menu_title_images_favourites:"Przejdź do obszaru zapisanych zdjęć",accountPrivacyTerms:"Warunki prywatności",globalNetworkError:"Błąd sieci.",globalProcessError:"Błąd procesu.",globalUserDoesNotExsists:"Konto użytkownika nie istnieje",globalInvalidEmailsAdress:"Nieprawidłowy format adresu e-mail",globalErrormessagePrefix:"Znaleziono błąd, który powoduje, że aplikacja nie działa poprawnie.",globalErrormessageCloseButton:"Ignoruj",globalErrormessageLearnMoreButton:"Czytaj więcej",globalInvalidCountry:"Niepoprawny kraj",globalInvalidLanguage:"Niepoprawny język",globalErrorCodeTitle:"Kod błędu",globalErrorCode_1:"Błąd sieci. Gdy wystąpił błąd sieci, oznacza to, że żądanie „ajax” nie powiodło się. Sprawdź połączenie sieciowe lub to, ponieważ usługa zdalna jest obecnie niedostępna.",globalErrorCode_2:"Błąd procesu aplikacji. Oznacza to, że odpowiedź na żądania ajax podała nieprawidłową strukturę aplikacji.",globalErrorCode_3:"Odpowiedź inna niż oczekiwana. Oznacza to, że żądana wartość bieżącego kontekstu aplikacji jest nieprawidłowa.",code:"Kod",listNotSynchronizedUserNotLoggedIn:"Pracujesz lokalnie. Zaloguj się aby synchronizować listę.",notLoggedIn:"Informacja niezalogowania",listSynchronized_one:"Synchronizowano",titleDeleteCookie:"Skasuj pojedyncze ciasteczko",titleCopyCookieValue:"Kopiuj wartość do schowka",cookie_msg_1:"Domena:",cookie_msg_2:"Nazwa:",cookie_msg_3:"Wartość:",cookie_msg_4:"Kasuj wszystkie ciasteczka. Jest możliwe że zostaniesz wylogowany z bieżącej strony.",cookiesNoData:"Brak ciasteczek",avatarErrorFileType:"Nierozpoznany typ pliku",avatarErrorFileSize:"Rozmiar pliku przekracza limit 5 MB dla programu Avatar",avatarErrorFileTypeSupport:"Dozwolone są tylko typy plików jpg, png i gif",blacklist:"Czarne listy",whitelist:"Białe listy",blacklistedElementsWords:"Czarna lista Słowa",blacklistedElementsDomians:"Czarna lista Domeny",blacklistedElementsUrlsIncludes:"Czarna lista Adresy url",blacklistedElementsTrackers:"Czarna lista Trackery",blacklistedElementsCookies:"Czarna lista Ciasteczka",blacklistedElementsClass:"Blokuj HTML dla class",blacklistedElementsId:"Blokuj HTML dla id",blacklistedElementsHref:"Blokuj HTML dla href",menuBlacklistedElementsClass:"Blokuj HTML dla class",menuBlacklistedElementsId:"Blokuj HTML dla id",menuBlacklistedElementsHref:"Blokuj HTML dla href",blacklistedElementsIframes:"Czarna lista Ramki",blacklistedElementsIframesSources:"Czarna lista Ramki źródło",blacklistedElementsIframesNames:"Czarna lista Ramki nazwa",copiedToClipBoard:"Skopiowano do schowka",action_title_copyToClipboard:"Skopiuj listę do schowka",action_title_exportToFile:"Eksportuj listę do pliku o formacie JSON",action_title_deleteList:"Wyczyść listę globalnie",action_title_copyToClipboard_single:"Skopiuj wartość do schowka",action_title_delete_single:"Usuń wpis",forThisFunctionLogin:"Zaloguj się, aby wykonać tę akcję",emptyListDone:"Lista została wyczyszczona",restoreDefaultValue:"Zresetuj listę do wartości domyślnych",whitelistedElementsDomains:"Biała lista Domeny",blockedElements:"Blocker HTML",securityIsOn:"Ta wtyczka jest włączona lub wyłączona.",scanTextOnWebsite:"Jeśli wyłączysz tę opcję, wtedy wszystkie słowa na stronie internetowej NIE są skanowane. Czarna lista: Słowa, są ignorowane.",allowOnlyHttpsProtocol:"Zezwalaj na odwiedzanie tylko stron internetowych HTTPS - czyli strony z protokołem HTTP zostaną zablokowane.",allowOnlyHttpProtocol:"Zezwalaj na odwiedzanie tylko stron internetowych HTTP - czyli strony z protokołem HTTPS zostaną zablokowane.",makeSearchInSourceCode:"Skanuj słowa w kodzie źródłowym danego elementu HTML (innerHTML) lub tylko w tekscie elementach HTML (innerText).",mutationCheck:"Sprawdzanie elementów HTML strony internetowej ma nastąpić również po załadowaniu strony (DOM mutacje na elementach HTML zazwyczaj poprzez biblioteki Javascript).",ignoreTagStyle:'Ignoruj kod zawarty w tagach "STYLE" (<style> tag) podczas skanowania na podstawie czarnej listy "Słowa".',ignoreTagScript:'Ignoruj kod zawarty w tagach "SCRIPT" (<script> tag) podczas skanowania na podstawie czarnej listy "Słowa".',ignoreTagLink:'Ignoruj kod zawarty w tagach "Link" (<link> tag) podczas skanowania na podstawie czarnej listy "Słowa".',ignoreTagMeta:'Ignoruj kod zawarty w tagach "Meta" (<meta> tag) podczas skanowania na podstawie czarnej listy "Słowa".',replacer:"Zastąp każdy znak niebezpiecznego słowa (niebezpieczne słowa pochodzą z czarnej listy Słowa) tym wpisem.",maximumOfDangerWords:"Po osiągnięciu tej wartości - poprzez sumę zablokowanych elementów na stronie na podstawie czarnych list: Czarna lista Słowa, Blokuj HTML dla class, Blokuj HTML dla href oraz Blokuj HTML dla id (każdy zablokowany element zwiększa wartości licznika o +1) wtedy strona internetowa zostanie zablokowana. Minimalna wartość to 1, maksymalna to 300.",limitlessScan:"Zignoruj maksymalną liczbę zablokowanych niebezpiecznych elementów na podstawie czarnych list: Czarna lista Słowa, Blokuj HTML dla class, Blokuj HTML dla href oraz Blokuj HTML dla id. Strona nie zostanie zablokowana (zignoruj powyższą wartość). Jeśli aktywujesz tę funkcję, Protection może spowolnić działanie przeglądarki.",deleteCookies:"Kasuj automatycznie wszystkie ciasteczka na podstawie czarnej listy Ciasteczka na wszytkich stronach. Ciasteczka kasowane są gdy otwierasz lub zamykasz stronę internetową i podczas przeglądania co 5 sekund.",popupMainTitle:"Czarny ninja statystyka",popup_blocked_trackers:"Zablokowani trackerzy",popup_blocked_cookies:"Zablokowane ciasteczka",popup_blocked_words:"Zablokowane łowa",popup_blocked_requests:"Zablokowane zapytania",popup_blocked_iframes:"Zablokowane ramki",popup_blocked_dom:"Zablokowany HTML",popup_blocked_websites:"Zablokowane strony",popup_title_dashboard:"Statystyka",popup_title_global_chart:"Globalna statystyka",titleDeleteIframe:"Usuń pojedynczy element iframe",iframe_msg_1:"Źródło:",iframe_msg_2:"Id:",iframe_msg_3:"className:",iframesNoData:"Brak ramek",popup_add_blacklistedElementsTrackers:"Dodaj bieżącą domenę do trackerów czarnej listy. Wszystkie próby uzyskania dostępu do tej domeny są zablokowane.",popup_remove_blacklistedElementsTrackers:"Usuń bieżącą domenę z czarnej listy - Trackerów.",popup_add_blacklistedElementsDomians:"Dodaj bieżące domeny do domeny czarnej listy domen. Wszystkie próby uzyskania dostępu do tej domeny lub usług z tej domeny są blokowane.",popup_remove_blacklistedElementsDomians:"Usuń bieżącą domenę z czarnej listy - Domen.",popup_add_blacklistedElementsCookies:"Dodaj bieżącą domenę do czarnej listy plików cookie. Wszystkie ciasteczka są usuwane podczas załadowania strony, potem co 5 sekund oraz odczas opusczania witryny.",popup_remove_blacklistedElementsCookies:"Usuń bieżącą domenę z czarnej listy - Ciasteczka",popup_add_blacklistedElementsIframes:"Dodaj bieżącą domenę do czarnej listy - Ramḱi. Wszystkie ramki sa usuwane ze strony, gdy ta probuje wczytac źródło zewnętrzengo serwisu (ramki).",popup_remove_blacklistedElementsIframes:"Usuń bieżącą domenę z czarnej listy - Ramki.",popup_add_blacklistedElementsIframesSources:"Dodaj bieżący adres url do czarnej listy - Ramki źródło. Wszystkie ramki sa usuwane ze strony, gdy ta probuje wczytac źródło zewnętrzengo serwisu (ramki).",popup_remove_blacklistedElementsIframesSources:"Usuń bieżący adres url z czarnej listy - Ramki źródło.",popup_add_whitelistedElementsDomains:"Dodaj bieżący wpis białej listy Domen. ezwól na wszystko (żadne żądanie nie jest blokowane, brak sprawdzania słów na czarnej liście, brak usuwania plików cookie i automatyczne usuwanie iframe).",popup_remove_whitelistedElementsDomains:"Usuń bieżącą domenę z białej listy Domen.",popup_add_blacklistedElementsTrackers_popup:"Dodaj bieżący wpis do czarnej listy Trackerów. Wszystkie próby uzyskania dostępu do tej domeny są zablokowane.",popup_remove_blacklistedElementsTrackers_popup:"Usuń bieżący wpis z czarnej listy Trackerów.",popup_add_blacklistedElementsDomians_popup:"Dodaj bieżący wpis do czarnej listy Domen. Wszystkie próby uzyskania dostępu do tej domeny lub usług z tej domeny są blokowane.",popup_remove_blacklistedElementsDomians_popup:"Usuń bieżący wpis z czarnej listy Domen.",popup_add_blacklistedElementsCookies_popup:"Dodaj bieżący wpis do czarnej listy Ciasteczka. Wszystkie ciasteczka są usuwane podczas załadowania strony, potem co 5 sekund oraz odczas opusczania witryny.",popup_remove_blacklistedElementsCookies_popup:"Usuń bieżący wpis z czarnej listy Ciasteczka",popup_add_blacklistedElementsIframes_popup:"Dodaj bieżący wpis do czarnej listy Ramḱi. Wszystkie ramki sa usuwane ze strony, gdy ta probuje wczytac źródło zewnętrzengo serwisu (ramki).",popup_remove_blacklistedElementsIframes_popup:"Usuń bieżący wpis z czarnej listy Ramki.",popup_add_blacklistedElementsIframesSources_popup:"Dodaj bieżący wpis do czarnej listy Ramki źródło. Wszystkie ramki sa usuwane ze strony, gdy ta probuje wczytac źródło zewnętrzengo serwisu (ramki).",popup_remove_blacklistedElementsIframesSources_popup:"Usuń bieżący wpis z czarnej listy Ramki źródło.",popup_add_whitelistedElementsDomains_popup:"Dodaj bieżący wpis białej listy Domen. Zezwól na wszystko (żadne żądanie nie jest blokowane, brak sprawdzania słów na czarnej liście, brak usuwania plików cookie i automatyczne usuwanie iframe).",popup_remove_whitelistedElementsDomains_popup:"Usuń bieżący wpis z białej listy Domen.",popup_reload_target:"Załaduj ponownie stronę",extendsblacklist:o.createElement("span",null,"Podczas ładowania witryny domena jest skanowana przez filtr czarnej listy. Jeśli domena jest na czarnej liście, zostanie zablokowana. Aby zapewnić maksymalne bezpieczeństwo, można dodać rozszerzoną czarną listę z kolejnymi 20822 wpisami. Treść listy znajduje się tutaj:",o.createElement("a",{target:"_blank",href:l.addonPrefix()+"/extendedblacklist.txt"},"extendedblacklist.txt")),extendspornlist:o.createElement("span",null,"Podczas ładowania witryny domena jest skanowana przez filtr czarnej listy. Jeśli domena jest na czarnej liście, zostanie zablokowana. Aby zapewnić maksymalne bezpieczeństwo, można dodać rozszerzoną czarną listę domen pornograficznych z kolejnymi 6668 wpisami. Treść listy znajduje się tutaj:",o.createElement("a",{target:"_blank",href:l.addonPrefix()+"/extendedpornlist.txt"},"extendedpornlist.txt")),blacklistedElementsCookies_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"Tutaj powinno się wpisać nazwę ciasteczka aby na każdej stronie internetowej każde ciasteczko o podanej nazwie zostało skasowane lub nazwa domeny na której każde ciasteczka mają zostać skasowane. Standardowo lista ma ponad 350 wpisów niebezpiecznych nazew domen lub usług śledzących, którą są automatycznie kasowane."),o.createElement("ul",null,o.createElement("li",null,"Przykładowy wpis w tej liście: ",o.createElement("span",{className:"colored-example-element"},"GPS"),". Jeśli odwiedzisz stronę internetową: https://www.youtube.com, wtedy ciasteczko o nazwie ",o.createElement("span",{className:"colored-example-element"},"GPS")," zostanie skasowane"),o.createElement("li",null,"Przykładowy wpis w tej liście: ",o.createElement("span",{className:"colored-example-element"},"www.7search.com"),". Jeśli odwiedzisz stronę internetową: https://www.7search.com, wtedy ",o.createElement("span",{className:"colored-example-element"},"wszystkie ciasteczka")," zostaną skasowane")))),blacklistedElementsDomians_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"To jest czarna lista oparta jest na nazwie domeny. Wszystkie domeny z tej listy są blokowane podczas odwiedzania tej witryny."),o.createElement("ul",null,o.createElement("li",null,"Przykładowy wpis w tej liście: ",o.createElement("span",{className:"colored-example-element"},"ytimg.com"),".Jeśli odwiedzisz stronę internetową  ",o.createElement("span",{className:"colored-example-element"},"https://ytimg.com")," strona internetowa zostanie zablokowana"),o.createElement("li",null,"Przykładowy wpis w tej liście: ",o.createElement("span",{className:"colored-example-element"},"github.com"),". Jeśli odwiedzisz stronę internetową ",o.createElement("span",{className:"colored-example-element"},"https://github.com")," strona internetowa zostanie zablokowana")))),blacklistedElementsUrlsIncludes_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"Czarna listy oparta na adresach URL lub część adresu url. Wszystkie nazwy domen z tej listy oraz wszystkie części z adresu URL sa brane pod uwagę podczas odwiedzania storny internetwej. Jezeli adres strony internetowej zawiera jakikolwiek znak lub ciąg znaków z tej listy wtedy dostęp do strony internetowej zostanie zablokowany."),o.createElement("ul",null,o.createElement("li",null,"Przykładowy wpis w tej liście: ",o.createElement("span",{className:"colored-example-element"},"package"),". Jeśli odwiedzisz stronę internetową: https://www.npmjs.com/",o.createElement("span",{className:"colored-example-element"},"package"),"/gulp-babel wtedy dostęp do strony internetowej zostanie zablokowany"),o.createElement("li",null,"Przykładowy wpis w tej liście: ",o.createElement("span",{className:"colored-example-element"},"test"),". Jeśli odwiedzisz stronę internetową: https://www.google.com/search?q=",o.createElement("span",{className:"colored-example-element"},"test")," wtedy dostęp do strony internetowej zostanie zablokowany"),o.createElement("li",null,"Przykładowy wpis w tej liście: ",o.createElement("span",{className:"colored-example-element"},"q"),". Jeśli odwiedzisz stronę internetową: https://www.google.com/search?",o.createElement("span",{className:"colored-example-element"},"q"),"=test wtedy dostęp do strony internetowej zostanie zablokowany"),o.createElement("li",null,"Przykładowy wpis w tej liście: ",o.createElement("span",{className:"colored-example-element"},"hub.com"),". Jeśli odwiedzisz stronę internetową: https://www.git",o.createElement("span",{className:"colored-example-element"},"hub.com")," wtedy dostęp do strony internetowej zostanie zablokowany")))),blacklistedElementsIframes_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"Czarna lista nazw domen na których (stronach internetowych) maja zostać usunięte ramki (iframe)."),o.createElement("ul",null,o.createElement("li",null,"Przykładowy wpis w tej liście: ",o.createElement("span",{className:"colored-example-element"},"gazeta.pl"),". Jeśli odwiedzisz stronę internetową: https://www.",o.createElement("span",{className:"colored-example-element"},"gazeta.pl")," wtedy wszystkie ramki zostaną usunięte")))),_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"Czarna lista źródeł ramek domen, które maja zostać usunięte na każdej stronie."),o.createElement("ul",null,o.createElement("li",null,"Przykładowy wpis w tej liście: ",o.createElement("span",{className:"colored-example-element"},"https://dmp.theadex.com/r/"),". Jeśli odwiedzisz stronę internetową: https://www.gazeta.pl a załadowanej ramki (tag: iframe) źródło zawiera: ",o.createElement("span",{className:"colored-example-element"},"https://dmp.theadex.com/r/"),"230/1121/?c=4225222955758066709, wtedy ramka zostanie usunięta ze strony")))),blacklistedElementsIframesNames_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"Czarna lista nazew ramek, które maja zostać usunięte na każdej stronie."),o.createElement("ul",null,o.createElement("li",null,"Przykładowy wpis w tej liście: ",o.createElement("span",{className:"colored-example-element"},"googleads"),". Jeśli odwiedzisz stronę internetową: https://www.gazeta.pl a załadowanej ramki (tag: iframe) nazwa zawiera: ",o.createElement("span",{className:"colored-example-element"},"googleads"),"_sync, wtedy ramka zostanie usunięta ze strony")))),blacklistedElementsTrackers_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"Jeśli odwiedzisz witrynę internetową, a witryna wdrożyła śledzenie usługi i nazwa domeny jest zgodna z jedną z nazw domen z tej listy lub cała ścieżka adresu url jest zgodna z jednym z wpisów z tej listy to żądanie zostanie zablokowane."),o.createElement("ul",null,o.createElement("li",null,"Przykładowy wpis w tej liście: ",o.createElement("span",{className:"colored-example-element"},"cdn.mouseflow.com"),". Jeśli witryna połączy się z usługą zewnętrzną i adres zapytania zawiera nazwę domeny: https://",o.createElement("span",{className:"colored-example-element"},"cdn.mouseflow.com")," to zapytania zostanie zablokowane"),o.createElement("li",null,"Przykładowy wpis w tej liście: ",o.createElement("span",{className:"colored-example-element"},"rsrc.php/v3/y4/r/-PAXP-deijE.gif"),". Jeśli witryna połączy się z usługą zewnętrzną i adres zapytania zawiera nazwę domeny: https://static.xx.fbcdn.net/",o.createElement("span",{className:"colored-example-element"},"rsrc.php/v3/y4/r/-PAXP-deijE.gif")," to zapytania zostanie zablokowane")))),blacklistedElementsWords_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"Konteks ochrony tej aplikacji znajdzie każde słowo z tej czarnej listy, a każde słowo zostanie zastąpione przez „zamiennik” zdefiniowany w sekcji „Ustawienia ochrony ."),o.createElement("ul",null,o.createElement("li",null,'Na przykład, jeśli słowo "pistolet" znajduje się na tej czarnej liście, to jeśli odwiedzisz stronę internetową, słowo „pistolet” zostanie zastąpione.',o.createElement("br",null),'Przykład przed: "mam ',o.createElement("span",{className:"colored-example-element"},"pistolet"),' w szafie.".',o.createElement("br",null),'Przykład po: "mam ',o.createElement("span",{className:"colored-example-element"},"########"),' w szafie."'),o.createElement("li",null,'Na przykład, jeśli słowo "zakupy" znajduje się na tej czarnej liście, to jeśli odwiedzisz stronę internetową, słowo zakupy zostanie zastąpione.',o.createElement("br",null),'Przykład przed: "moje ',o.createElement("span",{className:"colored-example-element"},"zakupy"),' są w samochodzie.".',o.createElement("br",null),'Przykład po: "moje ',o.createElement("span",{className:"colored-example-element"},"######"),' są w samochodzie."')))),blacklistedElementsClass_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"Blokowanie tagów drzewa DOM na podstawie jego identifikatora: class."),o.createElement("ul",null,o.createElement("li",null,"Przykładowy wpis na tej liście: \"font-bold\". Jeśli odwiedzisz jakąkolwiek stronę internetową wtedy wsyzstkie elementy zawierające atrybut class o wartości 'font-bold' (np: ",'<span class="font-bold"> Text </span>',") zostaną usunięte ze strony internetowej.")))),blacklistedElementsHref_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},'Blokowanie tagów "A" drzewa DOM na podstawie jego identifikatora: href.'),o.createElement("ul",null,o.createElement("li",null,'Przykładowy wpis na tej liście: "redirect?". Jeśli odwiedzisz jakąkolwiek stronę internetową wtedy wsyzstkie elementy drzewa DOM ',"<a>"," zawierające atrybut href o wartości 'redirect?' (np: ",'<a href="https://xv345bhFD.com/redirect?client=http://example.com">link</a>',") zostaną usunięte ze strony internetowej.")))),blacklistedElementsId_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"Blokowanie tagów drzewa DOM na podstawie jego identifikatora: id."),o.createElement("ul",null,o.createElement("li",null,"Przykładowy wpis na tej liście: \"extern-logo\". Jeśli odwiedzisz jakąkolwiek stronę internetową wtedy wsyzstkie elementy zawierające atrybut id o wartości 'extern-logo' (np: ",'<img id="extern-logo"/>',") zostaną usunięte ze strony internetowej.")))),whitelistedElementsDomains_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"Nie rób nic dla wybranych nazw domen."),o.createElement("ul",null,o.createElement("li",null,"Przykładowy wpis w tej liście: ",o.createElement("span",{className:"colored-example-element"},"google.com"),". Jeśli odwiedzisz stronę internetową: https://www.",o.createElement("span",{className:"colored-example-element"},"google.com")," nie są wykonywane żadne procesy ani nie jesteś chroniony"),o.createElement("li",null,"Przykładowy wpis w tej liście: ",o.createElement("span",{className:"colored-example-element"},"npmjs.com"),". Jeśli odwiedzisz stronę internetową: https://www.",o.createElement("span",{className:"colored-example-element"},"npmjs.com"),"/package/gulp-babel, nie są wykonywane żadne procesy ani nie jesteś chroniony")))),example:"Przykłady",imagesPopupTitle:"Znaleziono zdjęcia",imagesNoData:"Brak poprawnych zdjęć",imagesNoDataFavourites:"Brak zapisanych zdjęć",imagesLoadingTabs:"Ładowanie aktywnych okienek...",current_tabs_title:"Aktualne okna",filter:"Filtruj",filter_all:"Wszystkie",itemsPerSite:"Co stronę",itemsPerSiteSuffix:"zdjęć",page:"Strona",of:"z",images:"zdjęć",current_favourites_images:"Tymczasem zapisane zdjęcia",open_in_new_tab:"Otwórz w nowym okientku",download:"Pobierz",downloadSmall:"pobierz",delete_all:"Usuń wszysko",notLoggedInImagesFavouritesAdd:"Tylko zalogowani użytkownicy mogą dodawać zdjęcia do listy ulubionych",notLoggedInImagesFavouritesManage:"Tylko zalogowani użytkownicy mogą zarządzać listą ulubionych",tabsNoData:"Brak poprawnych okienek",imagesLoadingData:"Ładowanie zdjęć...",infoItemAdded:"Wpis został dodany do listy",infoItemRemoved:"Wpis został usunięty z listy",infoArrayIs0:"Lista jest pusta, więc nie można usunąć żadnego elementu",infoIncorrectValue:"Wartość jest nieprawidłowa",infoItemInList:"Wpis już istnieje na liście",country:"Kraj",countriesNotFoundText:"Przepraszam, nie znalazłem takiego kraju",dropText:"Upuść tutaj",error:"Błąd",searchPlaceholder:"Szukaj...",search:"Szukaj",list:"Lista",addPlaceholder:"Wartość...",addNewEntryTitle:"Dodaj nowy wpis",no_data_list:"Brak wpisów",no_data_list_search:"Brak wyników szukania",loading:"Ładowanie...",home_security_1:"Blokowanie niebezpiecznych ciasteczek",home_security_2:"Blokowanie niebezpiecznych zapytan",home_security_3:"Blokowanie niebezpiecznych usług śledczych",home_security_4:"Blokowanie niebezpiecznych stron pornograficznych",home_security_5:"Blokowanie niebezpiecznych słow",home_security_6:"Blokowanie niebezpiecznych zawartości stron internetowych",upload:"Przeciągnij i upuść plik json NinjaProtecta tutaj...",export:"Eksport",exportAll:"globalnych list i ustawien",dangerCount:"Chronię cię!",dangerCountPrefix:"Osiągnięto maksymalna liczbę niebezpiecznych elementów, która jest obecnie",dangerUrlPrefix:"Adres strony albo część adresu strony internetowej jest niebezpieczny i znajduje się w jednej z czarnej listy",domain:"Nazwa domena bez www. Na przykład: react-divcreator.cba.pl",tag:"Nazwa tagu. Na przykład: div",languages:"Języki"};t.default=s},function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var i=r(n(347));t.default=function(){var e=localStorage.getItem("applanguage")?localStorage.getItem("applanguage"):"en";return i.default.includes(e)||(e="en"),e.toLowerCase()}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.default=["de","en","pl"]},function(e,t,n){var r=n(349),i=n(350);"string"==typeof(i=i.__esModule?i.default:i)&&(i=[[e.i,i,""]]);var a={insert:"head",singleton:!1};r(i,a);e.exports=i.locals||{}},function(e,t,n){"use strict";var r,i=function(){return void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r},a=function(){var e={};return function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}e[t]=n}return e[t]}}(),o=[];function l(e){for(var t=-1,n=0;n<o.length;n++)if(o[n].identifier===e){t=n;break}return t}function s(e,t){for(var n={},r=[],i=0;i<e.length;i++){var a=e[i],s=t.base?a[0]+t.base:a[0],u=n[s]||0,c="".concat(s," ").concat(u);n[s]=u+1;var f=l(c),d={css:a[1],media:a[2],sourceMap:a[3]};-1!==f?(o[f].references++,o[f].updater(d)):o.push({identifier:c,updater:g(d,t),references:1}),r.push(c)}return r}function u(e){var t=document.createElement("style"),r=e.attributes||{};if(void 0===r.nonce){var i=n.nc;i&&(r.nonce=i)}if(Object.keys(r).forEach((function(e){t.setAttribute(e,r[e])})),"function"==typeof e.insert)e.insert(t);else{var o=a(e.insert||"head");if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}return t}var c,f=(c=[],function(e,t){return c[e]=t,c.filter(Boolean).join("\n")});function d(e,t,n,r){var i=n?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(e.styleSheet)e.styleSheet.cssText=f(t,i);else{var a=document.createTextNode(i),o=e.childNodes;o[t]&&e.removeChild(o[t]),o.length?e.insertBefore(a,o[t]):e.appendChild(a)}}function p(e,t,n){var r=n.css,i=n.media,a=n.sourceMap;if(i?e.setAttribute("media",i):e.removeAttribute("media"),a&&btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleSheet)e.styleSheet.cssText=r;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(r))}}var m=null,h=0;function g(e,t){var n,r,i;if(t.singleton){var a=h++;n=m||(m=u(t)),r=d.bind(null,n,a,!1),i=d.bind(null,n,a,!0)}else n=u(t),r=p.bind(null,n,t),i=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)};return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else i()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=i());var n=s(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var r=0;r<n.length;r++){var i=l(n[r]);o[i].references--}for(var a=s(e,t),u=0;u<n.length;u++){var c=l(n[u]);0===o[c].references&&(o[c].updater(),o.splice(c,1))}n=a}}}},function(e,t,n){(t=n(351)(!1)).push([e.i,".Blocked{width:100vw;height:100vh;overflow:hidden;background-size:cover}.Blocked h1,.Blocked h2{max-width:80%;text-align:center;line-height:30px;box-sizing:border-box;padding:20px;margin:0 auto;color:#fff;font-size:24px}.Blocked h2{color:gold;min-height:30px}.Blocked .header,.Blocked .footer{width:100vw;min-height:100px;height:auto;overflow:auto;background-color:rgba(39,39,39,0.9);position:absolute;left:0}.Blocked .header{top:0}.Blocked .footer{bottom:0}.Blocked .footer a{display:block;width:300px;margin:30px auto;background-color:gold;color:rgba(39,39,39,0.9);box-sizing:border-box;padding:10px 30px;text-align:center;line-height:30px;border-radius:5px;border:none;text-decoration:none;font-size:21px;transition-duration:300ms;box-shadow:0px 0px 8px transparent}.Blocked .footer a:hover{box-shadow:0px 0px 8px gold}\n",""]),e.exports=t},function(e,t,n){"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=function(e,t){var n=e[1]||"",r=e[3];if(!r)return n;if(t&&"function"==typeof btoa){var i=(o=r,l=btoa(unescape(encodeURIComponent(JSON.stringify(o)))),s="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(l),"/*# ".concat(s," */")),a=r.sources.map((function(e){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(e," */")}));return[n].concat(a).concat([i]).join("\n")}var o,l,s;return[n].join("\n")}(t,e);return t[2]?"@media ".concat(t[2]," {").concat(n,"}"):n})).join("")},t.i=function(e,n,r){"string"==typeof e&&(e=[[null,e,""]]);var i={};if(r)for(var a=0;a<this.length;a++){var o=this[a][0];null!=o&&(i[o]=!0)}for(var l=0;l<e.length;l++){var s=[].concat(e[l]);r&&i[s[0]]||(n&&(s[2]?s[2]="".concat(n," and ").concat(s[2]):s[2]=n),t.push(s))}},t}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fZXhwb3J0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2FuLW9iamVjdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19nbG9iYWwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fZmFpbHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faXMtb2JqZWN0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3drcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL190by1sZW5ndGguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fZGVzY3JpcHRvcnMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fb2JqZWN0LWRwLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3RvLW9iamVjdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19hLWZ1bmN0aW9uLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2hpZGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fcmVkZWZpbmUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fc3RyaW5nLWh0bWwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faGFzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3RvLWlvYmplY3QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fb2JqZWN0LWdvcGQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fb2JqZWN0LWdwby5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19jb3JlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2N0eC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19jb2YuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fdG8taW50ZWdlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19zdHJpY3QtbWV0aG9kLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3RvLXByaW1pdGl2ZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19kZWZpbmVkLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX29iamVjdC1zYXAuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fYXJyYXktbWV0aG9kcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL190eXBlZC1hcnJheS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19tZXRhZGF0YS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19saWJyYXJ5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX21ldGEuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fYWRkLXRvLXVuc2NvcGFibGVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3Byb3BlcnR5LWRlc2MuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fdWlkLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX29iamVjdC1rZXlzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3RvLWFic29sdXRlLWluZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX29iamVjdC1jcmVhdGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fb2JqZWN0LWdvcG4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fc2V0LXNwZWNpZXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fYW4taW5zdGFuY2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fZm9yLW9mLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3JlZGVmaW5lLWFsbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL192YWxpZGF0ZS1jb2xsZWN0aW9uLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3NldC10by1zdHJpbmctdGFnLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2NsYXNzb2YuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fc3RyaW5nLXRyaW0uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faXRlcmF0b3JzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3NoYXJlZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19pb2JqZWN0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX29iamVjdC1waWUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fZmxhZ3MuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fc3BlY2llcy1jb25zdHJ1Y3Rvci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fYXJyYXktaW5jbHVkZXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fb2JqZWN0LWdvcHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faXMtYXJyYXkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fc3RyaW5nLWF0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2lzLXJlZ2V4cC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19pdGVyLWRldGVjdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19yZWdleHAtZXhlYy1hYnN0cmFjdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19maXgtcmUtd2tzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3VzZXItYWdlbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fY29sbGVjdGlvbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL190eXBlZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19vYmplY3QtZm9yY2VkLXBhbS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19zZXQtY29sbGVjdGlvbi1vZi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19zZXQtY29sbGVjdGlvbi1mcm9tLmpzIiwid2VicGFjazovLy8uL1NvdXJjZS9BcHBGaWxlcy9GdW5jdGlvbnMvYWRkb25QcmVmaXgudHN4Iiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2RvbS1jcmVhdGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fd2tzLWRlZmluZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19zaGFyZWQta2V5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2VudW0tYnVnLWtleXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faHRtbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19zZXQtcHJvdG8uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fc3RyaW5nLXdzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2luaGVyaXQtaWYtcmVxdWlyZWQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fc3RyaW5nLXJlcGVhdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19tYXRoLXNpZ24uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fbWF0aC1leHBtMS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19pdGVyLWRlZmluZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19pdGVyLWNyZWF0ZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19zdHJpbmctY29udGV4dC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19mYWlscy1pcy1yZWdleHAuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faXMtYXJyYXktaXRlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19jcmVhdGUtcHJvcGVydHkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9jb3JlLmdldC1pdGVyYXRvci1tZXRob2QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fYXJyYXktc3BlY2llcy1jcmVhdGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fYXJyYXktZmlsbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5pdGVyYXRvci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19yZWdleHAtZXhlYy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19hZHZhbmNlLXN0cmluZy1pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL190YXNrLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX21pY3JvdGFzay5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19uZXctcHJvbWlzZS1jYXBhYmlsaXR5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3R5cGVkLWJ1ZmZlci5qcyIsIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vZ2xvYmFsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2llOC1kb20tZGVmaW5lLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3drcy1leHQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fb2JqZWN0LWtleXMtaW50ZXJuYWwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fb2JqZWN0LWRwcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19vYmplY3QtZ29wbi1leHQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fb2JqZWN0LWFzc2lnbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19zYW1lLXZhbHVlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2JpbmQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faW52b2tlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3BhcnNlLWludC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19wYXJzZS1mbG9hdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19hLW51bWJlci12YWx1ZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19pcy1pbnRlZ2VyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX21hdGgtbG9nMXAuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fbWF0aC1mcm91bmQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faXRlci1jYWxsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2FycmF5LXJlZHVjZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19hcnJheS1jb3B5LXdpdGhpbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19pdGVyLXN0ZXAuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVnZXhwLmV4ZWMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVnZXhwLmZsYWdzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3BlcmZvcm0uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fcHJvbWlzZS1yZXNvbHZlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm1hcC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19jb2xsZWN0aW9uLXN0cm9uZy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zZXQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYud2Vhay1tYXAuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fY29sbGVjdGlvbi13ZWFrLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3RvLWluZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX293bi1rZXlzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2ZsYXR0ZW4taW50by1hcnJheS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19zdHJpbmctcGFkLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX29iamVjdC10by1hcnJheS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19jb2xsZWN0aW9uLXRvLWpzb24uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fYXJyYXktZnJvbS1pdGVyYWJsZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19tYXRoLXNjYWxlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9vYmplY3QtYXNzaWduL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYWJlbC1wb2x5ZmlsbC9saWIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvc2hpbS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zeW1ib2wuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fZnVuY3Rpb24tdG8tc3RyaW5nLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2VudW0ta2V5cy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5vYmplY3QuY3JlYXRlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm9iamVjdC5kZWZpbmUtcHJvcGVydHkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LmRlZmluZS1wcm9wZXJ0aWVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm9iamVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3IuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LmdldC1wcm90b3R5cGUtb2YuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LmtleXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LmdldC1vd24tcHJvcGVydHktbmFtZXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LmZyZWV6ZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5vYmplY3Quc2VhbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5vYmplY3QucHJldmVudC1leHRlbnNpb25zLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm9iamVjdC5pcy1mcm96ZW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LmlzLXNlYWxlZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5vYmplY3QuaXMtZXh0ZW5zaWJsZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5vYmplY3QuYXNzaWduLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm9iamVjdC5pcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5vYmplY3Quc2V0LXByb3RvdHlwZS1vZi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5vYmplY3QudG8tc3RyaW5nLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmZ1bmN0aW9uLmJpbmQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuZnVuY3Rpb24ubmFtZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5mdW5jdGlvbi5oYXMtaW5zdGFuY2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucGFyc2UtaW50LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnBhcnNlLWZsb2F0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm51bWJlci5jb25zdHJ1Y3Rvci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5udW1iZXIudG8tZml4ZWQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubnVtYmVyLnRvLXByZWNpc2lvbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5udW1iZXIuZXBzaWxvbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5udW1iZXIuaXMtZmluaXRlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm51bWJlci5pcy1pbnRlZ2VyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm51bWJlci5pcy1uYW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubnVtYmVyLmlzLXNhZmUtaW50ZWdlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5udW1iZXIubWF4LXNhZmUtaW50ZWdlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5udW1iZXIubWluLXNhZmUtaW50ZWdlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5udW1iZXIucGFyc2UtZmxvYXQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubnVtYmVyLnBhcnNlLWludC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5tYXRoLmFjb3NoLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm1hdGguYXNpbmguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubWF0aC5hdGFuaC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5tYXRoLmNicnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubWF0aC5jbHozMi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5tYXRoLmNvc2guanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubWF0aC5leHBtMS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5tYXRoLmZyb3VuZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5tYXRoLmh5cG90LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm1hdGguaW11bC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5tYXRoLmxvZzEwLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm1hdGgubG9nMXAuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubWF0aC5sb2cyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm1hdGguc2lnbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5tYXRoLnNpbmguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubWF0aC50YW5oLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm1hdGgudHJ1bmMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLmZyb20tY29kZS1wb2ludC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcucmF3LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnN0cmluZy50cmltLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnN0cmluZy5pdGVyYXRvci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcuY29kZS1wb2ludC1hdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcuZW5kcy13aXRoLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnN0cmluZy5pbmNsdWRlcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcucmVwZWF0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnN0cmluZy5zdGFydHMtd2l0aC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcuYW5jaG9yLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnN0cmluZy5iaWcuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLmJsaW5rLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnN0cmluZy5ib2xkLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnN0cmluZy5maXhlZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcuZm9udGNvbG9yLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnN0cmluZy5mb250c2l6ZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcuaXRhbGljcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcubGluay5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcuc21hbGwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLnN0cmlrZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcuc3ViLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnN0cmluZy5zdXAuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuZGF0ZS5ub3cuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuZGF0ZS50by1qc29uLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmRhdGUudG8taXNvLXN0cmluZy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19kYXRlLXRvLWlzby1zdHJpbmcuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuZGF0ZS50by1zdHJpbmcuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuZGF0ZS50by1wcmltaXRpdmUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fZGF0ZS10by1wcmltaXRpdmUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuaXMtYXJyYXkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuZnJvbS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5vZi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5qb2luLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5LnNsaWNlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5LnNvcnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuZm9yLWVhY2guanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fYXJyYXktc3BlY2llcy1jb25zdHJ1Y3Rvci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5tYXAuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuZmlsdGVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5LnNvbWUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuZXZlcnkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkucmVkdWNlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5LnJlZHVjZS1yaWdodC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5pbmRleC1vZi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5sYXN0LWluZGV4LW9mLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5LmNvcHktd2l0aGluLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5LmZpbGwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuZmluZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5maW5kLWluZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5LnNwZWNpZXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVnZXhwLmNvbnN0cnVjdG9yLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnJlZ2V4cC50by1zdHJpbmcuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVnZXhwLm1hdGNoLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnJlZ2V4cC5yZXBsYWNlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnJlZ2V4cC5zZWFyY2guanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVnZXhwLnNwbGl0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnByb21pc2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYud2Vhay1zZXQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYudHlwZWQuYXJyYXktYnVmZmVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnR5cGVkLmRhdGEtdmlldy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi50eXBlZC5pbnQ4LWFycmF5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnR5cGVkLnVpbnQ4LWFycmF5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnR5cGVkLnVpbnQ4LWNsYW1wZWQtYXJyYXkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYudHlwZWQuaW50MTYtYXJyYXkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYudHlwZWQudWludDE2LWFycmF5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnR5cGVkLmludDMyLWFycmF5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnR5cGVkLnVpbnQzMi1hcnJheS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi50eXBlZC5mbG9hdDMyLWFycmF5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnR5cGVkLmZsb2F0NjQtYXJyYXkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVmbGVjdC5hcHBseS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5yZWZsZWN0LmNvbnN0cnVjdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5yZWZsZWN0LmRlZmluZS1wcm9wZXJ0eS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5yZWZsZWN0LmRlbGV0ZS1wcm9wZXJ0eS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5yZWZsZWN0LmVudW1lcmF0ZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5yZWZsZWN0LmdldC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5yZWZsZWN0LmdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5yZWZsZWN0LmdldC1wcm90b3R5cGUtb2YuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVmbGVjdC5oYXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVmbGVjdC5pcy1leHRlbnNpYmxlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnJlZmxlY3Qub3duLWtleXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVmbGVjdC5wcmV2ZW50LWV4dGVuc2lvbnMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVmbGVjdC5zZXQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVmbGVjdC5zZXQtcHJvdG90eXBlLW9mLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3LmFycmF5LmluY2x1ZGVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3LmFycmF5LmZsYXQtbWFwLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3LmFycmF5LmZsYXR0ZW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcuc3RyaW5nLmF0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3LnN0cmluZy5wYWQtc3RhcnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcuc3RyaW5nLnBhZC1lbmQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcuc3RyaW5nLnRyaW0tbGVmdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy5zdHJpbmcudHJpbS1yaWdodC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy5zdHJpbmcubWF0Y2gtYWxsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3LnN5bWJvbC5hc3luYy1pdGVyYXRvci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy5zeW1ib2wub2JzZXJ2YWJsZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9ycy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy5vYmplY3QudmFsdWVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3Lm9iamVjdC5lbnRyaWVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3Lm9iamVjdC5kZWZpbmUtZ2V0dGVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3Lm9iamVjdC5kZWZpbmUtc2V0dGVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3Lm9iamVjdC5sb29rdXAtZ2V0dGVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3Lm9iamVjdC5sb29rdXAtc2V0dGVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3Lm1hcC50by1qc29uLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3LnNldC50by1qc29uLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3Lm1hcC5vZi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy5zZXQub2YuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcud2Vhay1tYXAub2YuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcud2Vhay1zZXQub2YuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcubWFwLmZyb20uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcuc2V0LmZyb20uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcud2Vhay1tYXAuZnJvbS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy53ZWFrLXNldC5mcm9tLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3Lmdsb2JhbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy5zeXN0ZW0uZ2xvYmFsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3LmVycm9yLmlzLWVycm9yLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3Lm1hdGguY2xhbXAuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcubWF0aC5kZWctcGVyLXJhZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy5tYXRoLmRlZ3JlZXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcubWF0aC5mc2NhbGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcubWF0aC5pYWRkaC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy5tYXRoLmlzdWJoLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3Lm1hdGguaW11bGguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcubWF0aC5yYWQtcGVyLWRlZy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy5tYXRoLnJhZGlhbnMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcubWF0aC5zY2FsZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy5tYXRoLnVtdWxoLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3Lm1hdGguc2lnbmJpdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy5wcm9taXNlLmZpbmFsbHkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcucHJvbWlzZS50cnkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcucmVmbGVjdC5kZWZpbmUtbWV0YWRhdGEuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcucmVmbGVjdC5kZWxldGUtbWV0YWRhdGEuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcucmVmbGVjdC5nZXQtbWV0YWRhdGEuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcucmVmbGVjdC5nZXQtbWV0YWRhdGEta2V5cy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy5yZWZsZWN0LmdldC1vd24tbWV0YWRhdGEuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcucmVmbGVjdC5nZXQtb3duLW1ldGFkYXRhLWtleXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcucmVmbGVjdC5oYXMtbWV0YWRhdGEuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcucmVmbGVjdC5oYXMtb3duLW1ldGFkYXRhLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3LnJlZmxlY3QubWV0YWRhdGEuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcuYXNhcC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy5vYnNlcnZhYmxlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvd2ViLnRpbWVycy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL3dlYi5pbW1lZGlhdGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy93ZWIuZG9tLml0ZXJhYmxlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvZm4vcmVnZXhwL2VzY2FwZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2NvcmUucmVnZXhwLmVzY2FwZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19yZXBsYWNlci5qcyIsIndlYnBhY2s6Ly8vLi9Tb3VyY2UvRGFuZ2VyVXJsL2luZGV4LnRzeCIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QvY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9janMvcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3NjaGVkdWxlci9janMvc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8uL1RyYW5zbGF0aW9ucy9pbmRleC50c3giLCJ3ZWJwYWNrOi8vLy4vVHJhbnNsYXRpb25zL3BvcHVwX0RFLnRzeCIsIndlYnBhY2s6Ly8vLi9UcmFuc2xhdGlvbnMvcG9wdXBfRU4udHN4Iiwid2VicGFjazovLy8uL1RyYW5zbGF0aW9ucy9wb3B1cF9QTC50c3giLCJ3ZWJwYWNrOi8vLy4vU291cmNlL0FwcEZpbGVzL0Z1bmN0aW9ucy9sYW5ndWFnZS9nZXRMYW5ndWFnZS50c3giLCJ3ZWJwYWNrOi8vLy4vU291cmNlL0FwcEZpbGVzL0Z1bmN0aW9ucy9sYW5ndWFnZS9wb3NzaWJsZUxhbmd1YWdlcy50c3giLCJ3ZWJwYWNrOi8vLy4vU291cmNlL1Nhc3MvZGFzaGJvYXJkL2Jsb2NrZWRjb3VudC5zY3NzP2E0ZjEiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzIiwid2VicGFjazovLy8uL1NvdXJjZS9TYXNzL2Rhc2hib2FyZC9ibG9ja2VkY291bnQuc2NzcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIl0sIm5hbWVzIjpbImluc3RhbGxlZE1vZHVsZXMiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJleHBvcnRzIiwibW9kdWxlIiwiaSIsImwiLCJtb2R1bGVzIiwiY2FsbCIsIm0iLCJjIiwiZCIsIm5hbWUiLCJnZXR0ZXIiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiciIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIiwidmFsdWUiLCJ0IiwibW9kZSIsIl9fZXNNb2R1bGUiLCJucyIsImNyZWF0ZSIsImtleSIsImJpbmQiLCJuIiwib2JqZWN0IiwicHJvcGVydHkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsInAiLCJzIiwiZ2xvYmFsIiwiY29yZSIsImhpZGUiLCJyZWRlZmluZSIsImN0eCIsIiRleHBvcnQiLCJ0eXBlIiwic291cmNlIiwib3duIiwib3V0IiwiZXhwIiwiSVNfRk9SQ0VEIiwiRiIsIklTX0dMT0JBTCIsIkciLCJJU19TVEFUSUMiLCJTIiwiSVNfUFJPVE8iLCJQIiwiSVNfQklORCIsIkIiLCJ0YXJnZXQiLCJleHBQcm90byIsInVuZGVmaW5lZCIsIkZ1bmN0aW9uIiwiVSIsIlciLCJSIiwiaXNPYmplY3QiLCJpdCIsIlR5cGVFcnJvciIsIndpbmRvdyIsIk1hdGgiLCJzZWxmIiwiX19nIiwiZXhlYyIsImUiLCJzdG9yZSIsInVpZCIsIlVTRV9TWU1CT0wiLCJ0b0ludGVnZXIiLCJtaW4iLCJhIiwiYW5PYmplY3QiLCJJRThfRE9NX0RFRklORSIsInRvUHJpbWl0aXZlIiwiZFAiLCJmIiwiTyIsIkF0dHJpYnV0ZXMiLCJkZWZpbmVkIiwiY3JlYXRlRGVzYyIsImhhcyIsIlNSQyIsIiR0b1N0cmluZyIsIlRQTCIsInNwbGl0IiwiaW5zcGVjdFNvdXJjZSIsInZhbCIsInNhZmUiLCJpc0Z1bmN0aW9uIiwiam9pbiIsIlN0cmluZyIsInRoaXMiLCJmYWlscyIsInF1b3QiLCJjcmVhdGVIVE1MIiwic3RyaW5nIiwidGFnIiwiYXR0cmlidXRlIiwicDEiLCJyZXBsYWNlIiwiTkFNRSIsInRlc3QiLCJ0b0xvd2VyQ2FzZSIsImxlbmd0aCIsIklPYmplY3QiLCJwSUUiLCJ0b0lPYmplY3QiLCJnT1BEIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwidG9PYmplY3QiLCJJRV9QUk9UTyIsIk9iamVjdFByb3RvIiwiZ2V0UHJvdG90eXBlT2YiLCJjb25zdHJ1Y3RvciIsInZlcnNpb24iLCJfX2UiLCJhRnVuY3Rpb24iLCJmbiIsInRoYXQiLCJiIiwiYXBwbHkiLCJhcmd1bWVudHMiLCJ0b1N0cmluZyIsInNsaWNlIiwiY2VpbCIsImZsb29yIiwiaXNOYU4iLCJtZXRob2QiLCJhcmciLCJ2YWx1ZU9mIiwiS0VZIiwidG9MZW5ndGgiLCJhc2MiLCJUWVBFIiwiJGNyZWF0ZSIsIklTX01BUCIsIklTX0ZJTFRFUiIsIklTX1NPTUUiLCJJU19FVkVSWSIsIklTX0ZJTkRfSU5ERVgiLCJOT19IT0xFUyIsIiR0aGlzIiwiY2FsbGJhY2tmbiIsInJlcyIsImluZGV4IiwicmVzdWx0IiwicHVzaCIsIkxJQlJBUlkiLCIkdHlwZWQiLCIkYnVmZmVyIiwiYW5JbnN0YW5jZSIsInByb3BlcnR5RGVzYyIsInJlZGVmaW5lQWxsIiwidG9JbmRleCIsInRvQWJzb2x1dGVJbmRleCIsImNsYXNzb2YiLCJpc0FycmF5SXRlciIsImdPUE4iLCJnZXRJdGVyRm4iLCJ3a3MiLCJjcmVhdGVBcnJheU1ldGhvZCIsImNyZWF0ZUFycmF5SW5jbHVkZXMiLCJzcGVjaWVzQ29uc3RydWN0b3IiLCJBcnJheUl0ZXJhdG9ycyIsIkl0ZXJhdG9ycyIsIiRpdGVyRGV0ZWN0Iiwic2V0U3BlY2llcyIsImFycmF5RmlsbCIsImFycmF5Q29weVdpdGhpbiIsIiREUCIsIiRHT1BEIiwiUmFuZ2VFcnJvciIsIlVpbnQ4QXJyYXkiLCJBcnJheVByb3RvIiwiQXJyYXkiLCIkQXJyYXlCdWZmZXIiLCJBcnJheUJ1ZmZlciIsIiREYXRhVmlldyIsIkRhdGFWaWV3IiwiYXJyYXlGb3JFYWNoIiwiYXJyYXlGaWx0ZXIiLCJhcnJheVNvbWUiLCJhcnJheUV2ZXJ5IiwiYXJyYXlGaW5kIiwiYXJyYXlGaW5kSW5kZXgiLCJhcnJheUluY2x1ZGVzIiwiYXJyYXlJbmRleE9mIiwiYXJyYXlWYWx1ZXMiLCJ2YWx1ZXMiLCJhcnJheUtleXMiLCJrZXlzIiwiYXJyYXlFbnRyaWVzIiwiZW50cmllcyIsImFycmF5TGFzdEluZGV4T2YiLCJsYXN0SW5kZXhPZiIsImFycmF5UmVkdWNlIiwicmVkdWNlIiwiYXJyYXlSZWR1Y2VSaWdodCIsInJlZHVjZVJpZ2h0IiwiYXJyYXlKb2luIiwiYXJyYXlTb3J0Iiwic29ydCIsImFycmF5U2xpY2UiLCJhcnJheVRvU3RyaW5nIiwiYXJyYXlUb0xvY2FsZVN0cmluZyIsInRvTG9jYWxlU3RyaW5nIiwiSVRFUkFUT1IiLCJUQUciLCJUWVBFRF9DT05TVFJVQ1RPUiIsIkRFRl9DT05TVFJVQ1RPUiIsIkFMTF9DT05TVFJVQ1RPUlMiLCJDT05TVFIiLCJUWVBFRF9BUlJBWSIsIlRZUEVEIiwiVklFVyIsIiRtYXAiLCJhbGxvY2F0ZSIsIkxJVFRMRV9FTkRJQU4iLCJVaW50MTZBcnJheSIsImJ1ZmZlciIsIkZPUkNFRF9TRVQiLCJzZXQiLCJ0b09mZnNldCIsIkJZVEVTIiwib2Zmc2V0IiwidmFsaWRhdGUiLCJDIiwic3BlY2llc0Zyb21MaXN0IiwibGlzdCIsImZyb21MaXN0IiwiYWRkR2V0dGVyIiwiaW50ZXJuYWwiLCJfZCIsIiRmcm9tIiwic3RlcCIsIml0ZXJhdG9yIiwiYUxlbiIsIm1hcGZuIiwibWFwcGluZyIsIml0ZXJGbiIsIm5leHQiLCJkb25lIiwiJG9mIiwiVE9fTE9DQUxFX0JVRyIsIiR0b0xvY2FsZVN0cmluZyIsInByb3RvIiwiY29weVdpdGhpbiIsInN0YXJ0IiwiZXZlcnkiLCJmaWxsIiwiZmlsdGVyIiwiZmluZCIsInByZWRpY2F0ZSIsImZpbmRJbmRleCIsImZvckVhY2giLCJpbmRleE9mIiwic2VhcmNoRWxlbWVudCIsImluY2x1ZGVzIiwic2VwYXJhdG9yIiwibWFwIiwicmV2ZXJzZSIsIm1pZGRsZSIsInNvbWUiLCJjb21wYXJlZm4iLCJzdWJhcnJheSIsImJlZ2luIiwiZW5kIiwiJGJlZ2luIiwiYnl0ZU9mZnNldCIsIkJZVEVTX1BFUl9FTEVNRU5UIiwiJHNsaWNlIiwiJHNldCIsImFycmF5TGlrZSIsInNyYyIsImxlbiIsIiRpdGVyYXRvcnMiLCJpc1RBSW5kZXgiLCIkZ2V0RGVzYyIsIiRzZXREZXNjIiwiZGVzYyIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwiJFR5cGVkQXJyYXlQcm90b3R5cGUkIiwid3JhcHBlciIsIkNMQU1QRUQiLCJHRVRURVIiLCJTRVRURVIiLCJUeXBlZEFycmF5IiwiQmFzZSIsIlRBQyIsIkZPUkNFRCIsIkFCViIsIlR5cGVkQXJyYXlQcm90b3R5cGUiLCJhZGRFbGVtZW50IiwiZGF0YSIsInYiLCJyb3VuZCIsInNldHRlciIsIiRvZmZzZXQiLCIkbGVuZ3RoIiwiYnl0ZUxlbmd0aCIsImtsYXNzIiwiJGxlbiIsIml0ZXIiLCJjb25jYXQiLCIkbmF0aXZlSXRlcmF0b3IiLCJDT1JSRUNUX0lURVJfTkFNRSIsIiRpdGVyYXRvciIsIm9mIiwiZnJvbSIsIk1hcCIsInNoYXJlZCIsImdldE9yQ3JlYXRlTWV0YWRhdGFNYXAiLCJ0YXJnZXRLZXkiLCJ0YXJnZXRNZXRhZGF0YSIsImtleU1ldGFkYXRhIiwiTWV0YWRhdGFLZXkiLCJtZXRhZGF0YU1hcCIsIk1ldGFkYXRhVmFsdWUiLCJfIiwiTUVUQSIsInNldERlc2MiLCJpZCIsImlzRXh0ZW5zaWJsZSIsIkZSRUVaRSIsInByZXZlbnRFeHRlbnNpb25zIiwic2V0TWV0YSIsInciLCJtZXRhIiwiTkVFRCIsImZhc3RLZXkiLCJnZXRXZWFrIiwib25GcmVlemUiLCJVTlNDT1BBQkxFUyIsImJpdG1hcCIsInB4IiwicmFuZG9tIiwiJGtleXMiLCJlbnVtQnVnS2V5cyIsIm1heCIsImRQcyIsIkVtcHR5IiwiY3JlYXRlRGljdCIsImlmcmFtZURvY3VtZW50IiwiaWZyYW1lIiwic3R5bGUiLCJkaXNwbGF5IiwiYXBwZW5kQ2hpbGQiLCJjb250ZW50V2luZG93IiwiZG9jdW1lbnQiLCJvcGVuIiwid3JpdGUiLCJsdCIsImNsb3NlIiwiUHJvcGVydGllcyIsImhpZGRlbktleXMiLCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwiREVTQ1JJUFRPUlMiLCJTUEVDSUVTIiwiQ29uc3RydWN0b3IiLCJmb3JiaWRkZW5GaWVsZCIsIkJSRUFLIiwiUkVUVVJOIiwiaXRlcmFibGUiLCJfdCIsImRlZiIsInN0YXQiLCJjb2YiLCJBUkciLCJUIiwidHJ5R2V0IiwiY2FsbGVlIiwic3BhY2VzIiwic3BhY2UiLCJsdHJpbSIsIlJlZ0V4cCIsInJ0cmltIiwiZXhwb3J0ZXIiLCJBTElBUyIsIkZPUkNFIiwidHJpbSIsImNvcHlyaWdodCIsInByb3BlcnR5SXNFbnVtZXJhYmxlIiwiaWdub3JlQ2FzZSIsIm11bHRpbGluZSIsInVuaWNvZGUiLCJzdGlja3kiLCJEIiwiSVNfSU5DTFVERVMiLCJlbCIsImZyb21JbmRleCIsImdldE93blByb3BlcnR5U3ltYm9scyIsImlzQXJyYXkiLCJUT19TVFJJTkciLCJwb3MiLCJjaGFyQ29kZUF0IiwiY2hhckF0IiwiTUFUQ0giLCJpc1JlZ0V4cCIsIlNBRkVfQ0xPU0lORyIsInJpdGVyIiwic2tpcENsb3NpbmciLCJhcnIiLCJidWlsdGluRXhlYyIsInJlZ2V4cEV4ZWMiLCJSRVBMQUNFX1NVUFBPUlRTX05BTUVEX0dST1VQUyIsInJlIiwiZ3JvdXBzIiwiU1BMSVRfV09SS1NfV0lUSF9PVkVSV1JJVFRFTl9FWEVDIiwib3JpZ2luYWxFeGVjIiwiU1lNQk9MIiwiREVMRUdBVEVTX1RPX1NZTUJPTCIsIkRFTEVHQVRFU19UT19FWEVDIiwiZXhlY0NhbGxlZCIsIm5hdGl2ZVJlZ0V4cE1ldGhvZCIsImZucyIsIm5hdGl2ZU1ldGhvZCIsInJlZ2V4cCIsInN0ciIsImFyZzIiLCJmb3JjZVN0cmluZ01ldGhvZCIsInN0cmZuIiwicnhmbiIsIm5hdmlnYXRvciIsInVzZXJBZ2VudCIsImZvck9mIiwic2V0VG9TdHJpbmdUYWciLCJpbmhlcml0SWZSZXF1aXJlZCIsIm1ldGhvZHMiLCJjb21tb24iLCJJU19XRUFLIiwiQURERVIiLCJmaXhNZXRob2QiLCJpbnN0YW5jZSIsIkhBU05UX0NIQUlOSU5HIiwiVEhST1dTX09OX1BSSU1JVElWRVMiLCJBQ0NFUFRfSVRFUkFCTEVTIiwiQlVHR1lfWkVSTyIsIiRpbnN0YW5jZSIsImNsZWFyIiwiZ2V0Q29uc3RydWN0b3IiLCJzZXRTdHJvbmciLCJUeXBlZCIsIlR5cGVkQXJyYXlDb25zdHJ1Y3RvcnMiLCJLIiwiX19kZWZpbmVTZXR0ZXJfXyIsIkNPTExFQ1RJT04iLCJBIiwiY2IiLCJtYXBGbiIsIm5leHRJdGVtIiwiYWRkb25QcmVmaXhQb3B1cCIsImJyb3dzZXIiLCJydW50aW1lIiwiZ2V0VVJMIiwiYWRkb25QcmVmaXhEYXNoYm9hcmQiLCJhZGRvblByZWZpeERhc2hib2FyZE1lbnUiLCJhZGRvblByZWZpeCIsImFkZG9uUm9vdCIsImlzIiwiY3JlYXRlRWxlbWVudCIsIndrc0V4dCIsIiRTeW1ib2wiLCJkb2N1bWVudEVsZW1lbnQiLCJjaGVjayIsInNldFByb3RvdHlwZU9mIiwiYnVnZ3kiLCJfX3Byb3RvX18iLCJjb3VudCIsIkluZmluaXR5Iiwic2lnbiIsIngiLCIkZXhwbTEiLCJleHBtMSIsIiRpdGVyQ3JlYXRlIiwiQlVHR1kiLCJyZXR1cm5UaGlzIiwiREVGQVVMVCIsIklTX1NFVCIsIkl0ZXJhdG9yUHJvdG90eXBlIiwiZ2V0TWV0aG9kIiwia2luZCIsIkRFRl9WQUxVRVMiLCJWQUxVRVNfQlVHIiwiJG5hdGl2ZSIsIiRkZWZhdWx0IiwiJGVudHJpZXMiLCIkYW55TmF0aXZlIiwiZGVzY3JpcHRvciIsInNlYXJjaFN0cmluZyIsIiRkZWZpbmVQcm9wZXJ0eSIsImdldEl0ZXJhdG9yTWV0aG9kIiwib3JpZ2luYWwiLCJlbmRQb3MiLCJhZGRUb1Vuc2NvcGFibGVzIiwiaXRlcmF0ZWQiLCJfaSIsIl9rIiwiQXJndW1lbnRzIiwicmUxIiwicmUyIiwicmVnZXhwRmxhZ3MiLCJuYXRpdmVFeGVjIiwibmF0aXZlUmVwbGFjZSIsInBhdGNoZWRFeGVjIiwiVVBEQVRFU19MQVNUX0lOREVYX1dST05HIiwiTlBDR19JTkNMVURFRCIsImxhc3RJbmRleCIsInJlQ29weSIsIm1hdGNoIiwiYXQiLCJkZWZlciIsImNoYW5uZWwiLCJwb3J0IiwiaW52b2tlIiwiaHRtbCIsImNlbCIsInByb2Nlc3MiLCJzZXRUYXNrIiwic2V0SW1tZWRpYXRlIiwiY2xlYXJUYXNrIiwiY2xlYXJJbW1lZGlhdGUiLCJNZXNzYWdlQ2hhbm5lbCIsIkRpc3BhdGNoIiwiY291bnRlciIsInF1ZXVlIiwicnVuIiwibGlzdGVuZXIiLCJldmVudCIsImFyZ3MiLCJuZXh0VGljayIsIm5vdyIsInBvcnQyIiwicG9ydDEiLCJvbm1lc3NhZ2UiLCJwb3N0TWVzc2FnZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJpbXBvcnRTY3JpcHRzIiwicmVtb3ZlQ2hpbGQiLCJzZXRUaW1lb3V0IiwibWFjcm90YXNrIiwiT2JzZXJ2ZXIiLCJNdXRhdGlvbk9ic2VydmVyIiwiV2ViS2l0TXV0YXRpb25PYnNlcnZlciIsIlByb21pc2UiLCJpc05vZGUiLCJoZWFkIiwibGFzdCIsIm5vdGlmeSIsImZsdXNoIiwicGFyZW50IiwiZG9tYWluIiwiZXhpdCIsImVudGVyIiwic3RhbmRhbG9uZSIsInJlc29sdmUiLCJwcm9taXNlIiwidGhlbiIsInRvZ2dsZSIsIm5vZGUiLCJjcmVhdGVUZXh0Tm9kZSIsIm9ic2VydmUiLCJjaGFyYWN0ZXJEYXRhIiwidGFzayIsIlByb21pc2VDYXBhYmlsaXR5IiwicmVqZWN0IiwiJCRyZXNvbHZlIiwiJCRyZWplY3QiLCJCYXNlQnVmZmVyIiwiYWJzIiwicG93IiwibG9nIiwiTE4yIiwiJEJVRkZFUiIsIiRMRU5HVEgiLCIkT0ZGU0VUIiwicGFja0lFRUU3NTQiLCJtTGVuIiwibkJ5dGVzIiwiZUxlbiIsImVNYXgiLCJlQmlhcyIsInJ0IiwidW5wYWNrSUVFRTc1NCIsIm5CaXRzIiwiTmFOIiwidW5wYWNrSTMyIiwiYnl0ZXMiLCJwYWNrSTgiLCJwYWNrSTE2IiwicGFja0kzMiIsInBhY2tGNjQiLCJwYWNrRjMyIiwidmlldyIsImlzTGl0dGxlRW5kaWFuIiwiaW50SW5kZXgiLCJfYiIsInBhY2siLCJjb252ZXJzaW9uIiwiQXJyYXlCdWZmZXJQcm90byIsImoiLCIkc2V0SW50OCIsInNldEludDgiLCJnZXRJbnQ4Iiwic2V0VWludDgiLCJidWZmZXJMZW5ndGgiLCJnZXRVaW50OCIsImdldEludDE2IiwiZ2V0VWludDE2IiwiZ2V0SW50MzIiLCJnZXRVaW50MzIiLCJnZXRGbG9hdDMyIiwiZ2V0RmxvYXQ2NCIsInNldEludDE2Iiwic2V0VWludDE2Iiwic2V0SW50MzIiLCJzZXRVaW50MzIiLCJzZXRGbG9hdDMyIiwic2V0RmxvYXQ2NCIsImciLCJuYW1lcyIsImdldEtleXMiLCJkZWZpbmVQcm9wZXJ0aWVzIiwid2luZG93TmFtZXMiLCJnZXRXaW5kb3dOYW1lcyIsImdPUFMiLCIkYXNzaWduIiwiYXNzaWduIiwiayIsImdldFN5bWJvbHMiLCJpc0VudW0iLCJ5IiwiZmFjdG9yaWVzIiwiY29uc3RydWN0IiwicGFydEFyZ3MiLCJib3VuZCIsInVuIiwiJHBhcnNlSW50IiwicGFyc2VJbnQiLCIkdHJpbSIsIndzIiwiaGV4IiwicmFkaXgiLCIkcGFyc2VGbG9hdCIsInBhcnNlRmxvYXQiLCJtc2ciLCJpc0Zpbml0ZSIsImxvZzFwIiwiRVBTSUxPTiIsIkVQU0lMT04zMiIsIk1BWDMyIiwiTUlOMzIiLCJmcm91bmQiLCIkYWJzIiwiJHNpZ24iLCJyZXQiLCJtZW1vIiwiaXNSaWdodCIsInRvIiwiaW5jIiwiZm9yY2VkIiwiZmxhZ3MiLCJuZXdQcm9taXNlQ2FwYWJpbGl0eSIsInByb21pc2VDYXBhYmlsaXR5Iiwic3Ryb25nIiwiZW50cnkiLCJnZXRFbnRyeSIsIiRpdGVyRGVmaW5lIiwiU0laRSIsIl9mIiwiX2wiLCJwcmV2IiwiYWRkIiwiSW50ZXJuYWxNYXAiLCJlYWNoIiwid2VhayIsIk5BVElWRV9XRUFLX01BUCIsIklTX0lFMTEiLCJBY3RpdmVYT2JqZWN0IiwidW5jYXVnaHRGcm96ZW5TdG9yZSIsInVmc3RvcmUiLCIkV2Vha01hcCIsIiRoYXMiLCJVbmNhdWdodEZyb3plblN0b3JlIiwiZmluZFVuY2F1Z2h0RnJvemVuIiwic3BsaWNlIiwibnVtYmVyIiwiUmVmbGVjdCIsIm93bktleXMiLCJJU19DT05DQVRfU1BSRUFEQUJMRSIsImZsYXR0ZW5JbnRvQXJyYXkiLCJzb3VyY2VMZW4iLCJkZXB0aCIsIm1hcHBlciIsInRoaXNBcmciLCJlbGVtZW50Iiwic3ByZWFkYWJsZSIsInRhcmdldEluZGV4Iiwic291cmNlSW5kZXgiLCJyZXBlYXQiLCJtYXhMZW5ndGgiLCJmaWxsU3RyaW5nIiwibGVmdCIsInN0cmluZ0xlbmd0aCIsImZpbGxTdHIiLCJpbnRNYXhMZW5ndGgiLCJmaWxsTGVuIiwic3RyaW5nRmlsbGVyIiwiaXNFbnRyaWVzIiwic2NhbGUiLCJpbkxvdyIsImluSGlnaCIsIm91dExvdyIsIm91dEhpZ2giLCJwcm9wSXNFbnVtZXJhYmxlIiwidGVzdDEiLCJ0ZXN0MiIsImZyb21DaGFyQ29kZSIsInRlc3QzIiwibGV0dGVyIiwiZXJyIiwic2hvdWxkVXNlTmF0aXZlIiwic3ltYm9scyIsIl9iYWJlbFBvbHlmaWxsIiwiRXJyb3IiLCJkZWZpbmUiLCJwYWRTdGFydCIsInBhZEVuZCIsIiRmYWlscyIsIndrc0RlZmluZSIsImVudW1LZXlzIiwiX2NyZWF0ZSIsImdPUE5FeHQiLCIkR09QUyIsIiRKU09OIiwiSlNPTiIsIl9zdHJpbmdpZnkiLCJzdHJpbmdpZnkiLCJISURERU4iLCJUT19QUklNSVRJVkUiLCJTeW1ib2xSZWdpc3RyeSIsIkFsbFN5bWJvbHMiLCJPUFN5bWJvbHMiLCJVU0VfTkFUSVZFIiwiUU9iamVjdCIsImZpbmRDaGlsZCIsInNldFN5bWJvbERlc2MiLCJwcm90b0Rlc2MiLCJ3cmFwIiwic3ltIiwiaXNTeW1ib2wiLCIkZGVmaW5lUHJvcGVydGllcyIsIiRwcm9wZXJ0eUlzRW51bWVyYWJsZSIsIkUiLCIkZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiJGdldE93blByb3BlcnR5TmFtZXMiLCIkZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwiSVNfT1AiLCJlczZTeW1ib2xzIiwid2VsbEtub3duU3ltYm9scyIsImtleUZvciIsInVzZVNldHRlciIsInVzZVNpbXBsZSIsIkZBSUxTX09OX1BSSU1JVElWRVMiLCJyZXBsYWNlciIsIiRyZXBsYWNlciIsIiRnZXRQcm90b3R5cGVPZiIsIiRmcmVlemUiLCIkc2VhbCIsIiRwcmV2ZW50RXh0ZW5zaW9ucyIsIiRpc0Zyb3plbiIsIiRpc1NlYWxlZCIsIiRpc0V4dGVuc2libGUiLCJGUHJvdG8iLCJuYW1lUkUiLCJIQVNfSU5TVEFOQ0UiLCJGdW5jdGlvblByb3RvIiwiJE51bWJlciIsIkJST0tFTl9DT0YiLCJUUklNIiwidG9OdW1iZXIiLCJhcmd1bWVudCIsInRoaXJkIiwibWF4Q29kZSIsImZpcnN0IiwiY29kZSIsImRpZ2l0cyIsImFOdW1iZXJWYWx1ZSIsIiR0b0ZpeGVkIiwidG9GaXhlZCIsIkVSUk9SIiwibXVsdGlwbHkiLCJjMiIsImRpdmlkZSIsIm51bVRvU3RyaW5nIiwiYWNjIiwiZnJhY3Rpb25EaWdpdHMiLCJ6IiwieDIiLCIkdG9QcmVjaXNpb24iLCJ0b1ByZWNpc2lvbiIsInByZWNpc2lvbiIsIl9pc0Zpbml0ZSIsImlzSW50ZWdlciIsImlzU2FmZUludGVnZXIiLCJNQVhfU0FGRV9JTlRFR0VSIiwiTUlOX1NBRkVfSU5URUdFUiIsIk51bWJlciIsInNxcnQiLCIkYWNvc2giLCJhY29zaCIsIk1BWF9WQUxVRSIsIiRhc2luaCIsImFzaW5oIiwiJGF0YW5oIiwiYXRhbmgiLCJjYnJ0IiwiY2x6MzIiLCJMT0cyRSIsImNvc2giLCJoeXBvdCIsInZhbHVlMSIsInZhbHVlMiIsImRpdiIsInN1bSIsImxhcmciLCIkaW11bCIsImltdWwiLCJ4biIsInluIiwieGwiLCJ5bCIsImxvZzEwIiwiTE9HMTBFIiwibG9nMiIsInNpbmgiLCJ0YW5oIiwidHJ1bmMiLCIkZnJvbUNvZGVQb2ludCIsImZyb21Db2RlUG9pbnQiLCJyYXciLCJjYWxsU2l0ZSIsInRwbCIsIiRhdCIsInBvaW50IiwiY29kZVBvaW50QXQiLCJjb250ZXh0IiwiJGVuZHNXaXRoIiwiZW5kc1dpdGgiLCJlbmRQb3NpdGlvbiIsInNlYXJjaCIsIiRzdGFydHNXaXRoIiwic3RhcnRzV2l0aCIsImNvbG9yIiwic2l6ZSIsInVybCIsIkRhdGUiLCJnZXRUaW1lIiwidG9KU09OIiwidG9JU09TdHJpbmciLCJwdiIsIiR0b0lTT1N0cmluZyIsImx6IiwibnVtIiwiZ2V0VVRDRnVsbFllYXIiLCJnZXRVVENNaWxsaXNlY29uZHMiLCJnZXRVVENNb250aCIsImdldFVUQ0RhdGUiLCJnZXRVVENIb3VycyIsImdldFVUQ01pbnV0ZXMiLCJnZXRVVENTZWNvbmRzIiwiRGF0ZVByb3RvIiwiaGludCIsImNyZWF0ZVByb3BlcnR5IiwidXBUbyIsImNsb25lZCIsIiRzb3J0IiwiJGZvckVhY2giLCJTVFJJQ1QiLCIkZmlsdGVyIiwiJHNvbWUiLCIkZXZlcnkiLCIkcmVkdWNlIiwiJGluZGV4T2YiLCJORUdBVElWRV9aRVJPIiwiJGZpbmQiLCIkZmxhZ3MiLCIkUmVnRXhwIiwiQ09SUkVDVF9ORVciLCJ0aVJFIiwicGlSRSIsImZpVSIsInByb3h5IiwiYWR2YW5jZVN0cmluZ0luZGV4IiwicmVnRXhwRXhlYyIsIiRtYXRjaCIsIm1heWJlQ2FsbE5hdGl2ZSIsInJ4IiwiZnVsbFVuaWNvZGUiLCJtYXRjaFN0ciIsIlNVQlNUSVRVVElPTl9TWU1CT0xTIiwiU1VCU1RJVFVUSU9OX1NZTUJPTFNfTk9fTkFNRUQiLCJSRVBMQUNFIiwiJHJlcGxhY2UiLCJzZWFyY2hWYWx1ZSIsInJlcGxhY2VWYWx1ZSIsImZ1bmN0aW9uYWxSZXBsYWNlIiwicmVzdWx0cyIsImFjY3VtdWxhdGVkUmVzdWx0IiwibmV4dFNvdXJjZVBvc2l0aW9uIiwibWF0Y2hlZCIsInBvc2l0aW9uIiwiY2FwdHVyZXMiLCJuYW1lZENhcHR1cmVzIiwicmVwbGFjZXJBcmdzIiwicmVwbGFjZW1lbnQiLCJnZXRTdWJzdGl0dXRpb24iLCJ0YWlsUG9zIiwiY2giLCJjYXB0dXJlIiwic2FtZVZhbHVlIiwiU0VBUkNIIiwiJHNlYXJjaCIsInByZXZpb3VzTGFzdEluZGV4IiwiY2FsbFJlZ0V4cEV4ZWMiLCIkbWluIiwiJHB1c2giLCJMRU5HVEgiLCJTVVBQT1JUU19ZIiwiU1BMSVQiLCIkc3BsaXQiLCJpbnRlcm5hbFNwbGl0IiwibGltaXQiLCJsYXN0TGVuZ3RoIiwib3V0cHV0IiwibGFzdExhc3RJbmRleCIsInNwbGl0TGltaXQiLCJzZXBhcmF0b3JDb3B5Iiwic3BsaXR0ZXIiLCJ1bmljb2RlTWF0Y2hpbmciLCJsaW0iLCJxIiwiSW50ZXJuYWwiLCJuZXdHZW5lcmljUHJvbWlzZUNhcGFiaWxpdHkiLCJPd25Qcm9taXNlQ2FwYWJpbGl0eSIsIldyYXBwZXIiLCJtaWNyb3Rhc2siLCJuZXdQcm9taXNlQ2FwYWJpbGl0eU1vZHVsZSIsInBlcmZvcm0iLCJwcm9taXNlUmVzb2x2ZSIsInZlcnNpb25zIiwidjgiLCIkUHJvbWlzZSIsImVtcHR5IiwiRmFrZVByb21pc2UiLCJQcm9taXNlUmVqZWN0aW9uRXZlbnQiLCJpc1RoZW5hYmxlIiwiaXNSZWplY3QiLCJfbiIsImNoYWluIiwiX2MiLCJfdiIsIm9rIiwiX3MiLCJyZWFjdGlvbiIsImV4aXRlZCIsImhhbmRsZXIiLCJmYWlsIiwiX2giLCJvbkhhbmRsZVVuaGFuZGxlZCIsIm9uVW5oYW5kbGVkIiwiY29uc29sZSIsInVuaGFuZGxlZCIsImlzVW5oYW5kbGVkIiwiZW1pdCIsIm9udW5oYW5kbGVkcmVqZWN0aW9uIiwicmVhc29uIiwiZXJyb3IiLCJfYSIsIm9ucmVqZWN0aW9uaGFuZGxlZCIsIiRyZWplY3QiLCJfdyIsIiRyZXNvbHZlIiwiZXhlY3V0b3IiLCJvbkZ1bGZpbGxlZCIsIm9uUmVqZWN0ZWQiLCJjYXBhYmlsaXR5IiwiYWxsIiwicmVtYWluaW5nIiwiJGluZGV4IiwiYWxyZWFkeUNhbGxlZCIsInJhY2UiLCIkaXNWaWV3IiwiaXNWaWV3IiwiZmluIiwidmlld1MiLCJ2aWV3VCIsImluaXQiLCJyQXBwbHkiLCJmQXBwbHkiLCJ0aGlzQXJndW1lbnQiLCJhcmd1bWVudHNMaXN0IiwiTCIsInJDb25zdHJ1Y3QiLCJORVdfVEFSR0VUX0JVRyIsIkFSR1NfQlVHIiwiVGFyZ2V0IiwibmV3VGFyZ2V0IiwiJGFyZ3MiLCJwcm9wZXJ0eUtleSIsImF0dHJpYnV0ZXMiLCJkZWxldGVQcm9wZXJ0eSIsIkVudW1lcmF0ZSIsImVudW1lcmF0ZSIsInJlY2VpdmVyIiwiZ2V0UHJvdG8iLCJWIiwiZXhpc3RpbmdEZXNjcmlwdG9yIiwib3duRGVzYyIsInNldFByb3RvIiwiJGluY2x1ZGVzIiwiYXJyYXlTcGVjaWVzQ3JlYXRlIiwiZmxhdE1hcCIsImZsYXR0ZW4iLCJkZXB0aEFyZyIsIiRwYWQiLCJXRUJLSVRfQlVHIiwiZ2V0RmxhZ3MiLCJSZWdFeHBQcm90byIsIiRSZWdFeHBTdHJpbmdJdGVyYXRvciIsIl9yIiwibWF0Y2hBbGwiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzIiwiZ2V0RGVzYyIsIiR2YWx1ZXMiLCJfX2RlZmluZUdldHRlcl9fIiwiX19sb29rdXBHZXR0ZXJfXyIsIl9fbG9va3VwU2V0dGVyX18iLCJpc0Vycm9yIiwiY2xhbXAiLCJsb3dlciIsInVwcGVyIiwiREVHX1BFUl9SQUQiLCJQSSIsIlJBRF9QRVJfREVHIiwiZGVncmVlcyIsInJhZGlhbnMiLCJmc2NhbGUiLCJpYWRkaCIsIngwIiwieDEiLCJ5MCIsInkxIiwiJHgwIiwiJHkwIiwiaXN1YmgiLCJpbXVsaCIsInUiLCIkdSIsIiR2IiwidTAiLCJ2MCIsInUxIiwidjEiLCJ1bXVsaCIsInNpZ25iaXQiLCJvbkZpbmFsbHkiLCJtZXRhZGF0YSIsInRvTWV0YUtleSIsIm9yZGluYXJ5RGVmaW5lT3duTWV0YWRhdGEiLCJkZWZpbmVNZXRhZGF0YSIsIm1ldGFkYXRhS2V5IiwibWV0YWRhdGFWYWx1ZSIsImRlbGV0ZU1ldGFkYXRhIiwib3JkaW5hcnlIYXNPd25NZXRhZGF0YSIsIm9yZGluYXJ5R2V0T3duTWV0YWRhdGEiLCJvcmRpbmFyeUdldE1ldGFkYXRhIiwiZ2V0TWV0YWRhdGEiLCJTZXQiLCJvcmRpbmFyeU93bk1ldGFkYXRhS2V5cyIsIm9yZGluYXJ5TWV0YWRhdGFLZXlzIiwib0tleXMiLCJwS2V5cyIsImdldE1ldGFkYXRhS2V5cyIsImdldE93bk1ldGFkYXRhIiwiZ2V0T3duTWV0YWRhdGFLZXlzIiwib3JkaW5hcnlIYXNNZXRhZGF0YSIsImhhc01ldGFkYXRhIiwiaGFzT3duTWV0YWRhdGEiLCIkbWV0YWRhdGEiLCJhc2FwIiwiT0JTRVJWQUJMRSIsImNsZWFudXBTdWJzY3JpcHRpb24iLCJzdWJzY3JpcHRpb24iLCJjbGVhbnVwIiwic3Vic2NyaXB0aW9uQ2xvc2VkIiwiX28iLCJjbG9zZVN1YnNjcmlwdGlvbiIsIlN1YnNjcmlwdGlvbiIsIm9ic2VydmVyIiwic3Vic2NyaWJlciIsIlN1YnNjcmlwdGlvbk9ic2VydmVyIiwidW5zdWJzY3JpYmUiLCJjb21wbGV0ZSIsIiRPYnNlcnZhYmxlIiwic3Vic2NyaWJlIiwib2JzZXJ2YWJsZSIsIml0ZW1zIiwiT2JzZXJ2YWJsZSIsIk1TSUUiLCJ0aW1lIiwiYm91bmRBcmdzIiwic2V0SW50ZXJ2YWwiLCIkdGFzayIsIlRPX1NUUklOR19UQUciLCJBcnJheVZhbHVlcyIsIkRPTUl0ZXJhYmxlcyIsIkNTU1J1bGVMaXN0IiwiQ1NTU3R5bGVEZWNsYXJhdGlvbiIsIkNTU1ZhbHVlTGlzdCIsIkNsaWVudFJlY3RMaXN0IiwiRE9NUmVjdExpc3QiLCJET01TdHJpbmdMaXN0IiwiRE9NVG9rZW5MaXN0IiwiRGF0YVRyYW5zZmVySXRlbUxpc3QiLCJGaWxlTGlzdCIsIkhUTUxBbGxDb2xsZWN0aW9uIiwiSFRNTENvbGxlY3Rpb24iLCJIVE1MRm9ybUVsZW1lbnQiLCJIVE1MU2VsZWN0RWxlbWVudCIsIk1lZGlhTGlzdCIsIk1pbWVUeXBlQXJyYXkiLCJOYW1lZE5vZGVNYXAiLCJOb2RlTGlzdCIsIlBhaW50UmVxdWVzdExpc3QiLCJQbHVnaW4iLCJQbHVnaW5BcnJheSIsIlNWR0xlbmd0aExpc3QiLCJTVkdOdW1iZXJMaXN0IiwiU1ZHUGF0aFNlZ0xpc3QiLCJTVkdQb2ludExpc3QiLCJTVkdTdHJpbmdMaXN0IiwiU1ZHVHJhbnNmb3JtTGlzdCIsIlNvdXJjZUJ1ZmZlckxpc3QiLCJTdHlsZVNoZWV0TGlzdCIsIlRleHRUcmFja0N1ZUxpc3QiLCJUZXh0VHJhY2tMaXN0IiwiVG91Y2hMaXN0IiwiY29sbGVjdGlvbnMiLCJleHBsaWNpdCIsIkNvbGxlY3Rpb24iLCJPcCIsImhhc093biIsIml0ZXJhdG9yU3ltYm9sIiwiYXN5bmNJdGVyYXRvclN5bWJvbCIsImFzeW5jSXRlcmF0b3IiLCJ0b1N0cmluZ1RhZ1N5bWJvbCIsImluTW9kdWxlIiwicmVnZW5lcmF0b3JSdW50aW1lIiwiQ29udGludWVTZW50aW5lbCIsIk5hdGl2ZUl0ZXJhdG9yUHJvdG90eXBlIiwiR3AiLCJHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZSIsIkdlbmVyYXRvciIsIkdlbmVyYXRvckZ1bmN0aW9uIiwiZGlzcGxheU5hbWUiLCJpc0dlbmVyYXRvckZ1bmN0aW9uIiwiZ2VuRnVuIiwiY3RvciIsIm1hcmsiLCJhd3JhcCIsIl9fYXdhaXQiLCJkZWZpbmVJdGVyYXRvck1ldGhvZHMiLCJBc3luY0l0ZXJhdG9yIiwiYXN5bmMiLCJpbm5lckZuIiwib3V0ZXJGbiIsInRyeUxvY3NMaXN0IiwicG9wIiwiQ29udGV4dCIsInJlc2V0Iiwic2tpcFRlbXBSZXNldCIsInNlbnQiLCJfc2VudCIsImRlbGVnYXRlIiwidHJ5RW50cmllcyIsInJlc2V0VHJ5RW50cnkiLCJzdG9wIiwicm9vdFJlY29yZCIsImNvbXBsZXRpb24iLCJydmFsIiwiZGlzcGF0Y2hFeGNlcHRpb24iLCJleGNlcHRpb24iLCJoYW5kbGUiLCJsb2MiLCJjYXVnaHQiLCJyZWNvcmQiLCJ0cnlMb2MiLCJoYXNDYXRjaCIsImhhc0ZpbmFsbHkiLCJjYXRjaExvYyIsImZpbmFsbHlMb2MiLCJhYnJ1cHQiLCJmaW5hbGx5RW50cnkiLCJhZnRlckxvYyIsImZpbmlzaCIsInRocm93biIsImRlbGVnYXRlWWllbGQiLCJyZXN1bHROYW1lIiwibmV4dExvYyIsInByb3RvR2VuZXJhdG9yIiwiZ2VuZXJhdG9yIiwiX2ludm9rZSIsInN0YXRlIiwiZG9uZVJlc3VsdCIsImRlbGVnYXRlUmVzdWx0IiwibWF5YmVJbnZva2VEZWxlZ2F0ZSIsInRyeUNhdGNoIiwibWFrZUludm9rZU1ldGhvZCIsIm9iaiIsInVud3JhcHBlZCIsInByZXZpb3VzUHJvbWlzZSIsImNhbGxJbnZva2VXaXRoTWV0aG9kQW5kQXJnIiwicmV0dXJuIiwiaW5mbyIsInB1c2hUcnlFbnRyeSIsImxvY3MiLCJpdGVyYXRvck1ldGhvZCIsImVzY2FwZSIsIiRyZSIsInJlZ0V4cCIsInBhcnQiLCJwcm9wcyIsInRyYW5zbGF0aW9ucyIsImNvbXBvbmVudERpZE1vdW50Iiwic2VuZE1lc3NhZ2UiLCJhY3Rpb24iLCJkYW5nZXJDb3VudCIsInNldFN0YXRlIiwiY2F0Y2giLCJxdWVyeVN0cmluZyIsImxvY2F0aW9uIiwiVVJMU2VhcmNoUGFyYW1zIiwicmVuZGVyIiwiY2xhc3NOYW1lIiwiYmFja2dyb3VuZEltYWdlIiwiZGFuZ2VyVXJsUHJlZml4IiwiaHJlZiIsInBvcHVwX3RpdGxlX2Rhc2hib2FyZCIsIkNvbXBvbmVudCIsIkFwcCIsImdldEVsZW1lbnRCeUlkIiwiZm9yIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiaXNNb3VudGVkIiwiZW5xdWV1ZUZvcmNlVXBkYXRlIiwiZW5xdWV1ZVJlcGxhY2VTdGF0ZSIsImVucXVldWVTZXRTdGF0ZSIsInJlZnMiLCJ1cGRhdGVyIiwiSCIsImlzUmVhY3RDb21wb25lbnQiLCJmb3JjZVVwZGF0ZSIsIkkiLCJpc1B1cmVSZWFjdENvbXBvbmVudCIsIkoiLCJjdXJyZW50IiwicmVmIiwiX19zZWxmIiwiX19zb3VyY2UiLCJNIiwiY2hpbGRyZW4iLCJoIiwiZGVmYXVsdFByb3BzIiwiJCR0eXBlb2YiLCJfb3duZXIiLCJRIiwia2V5UHJlZml4IiwiZnVuYyIsImFhIiwiWCIsIk4iLCJZIiwiWiIsImJhIiwiUmVhY3RDdXJyZW50RGlzcGF0Y2hlciIsIlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnIiwic3VzcGVuc2UiLCJSZWFjdEN1cnJlbnRPd25lciIsIklzU29tZVJlbmRlcmVyQWN0aW5nIiwiQ2hpbGRyZW4iLCJ0b0FycmF5Iiwib25seSIsIkZyYWdtZW50IiwiUHJvZmlsZXIiLCJQdXJlQ29tcG9uZW50IiwiU3RyaWN0TW9kZSIsIlN1c3BlbnNlIiwiX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQiLCJjbG9uZUVsZW1lbnQiLCJjcmVhdGVDb250ZXh0IiwiX2NhbGN1bGF0ZUNoYW5nZWRCaXRzIiwiX2N1cnJlbnRWYWx1ZSIsIl9jdXJyZW50VmFsdWUyIiwiX3RocmVhZENvdW50IiwiUHJvdmlkZXIiLCJDb25zdW1lciIsIl9jb250ZXh0IiwiY3JlYXRlRmFjdG9yeSIsImNyZWF0ZVJlZiIsImZvcndhcmRSZWYiLCJpc1ZhbGlkRWxlbWVudCIsImxhenkiLCJfY3RvciIsIl9zdGF0dXMiLCJfcmVzdWx0IiwiY29tcGFyZSIsInVzZUNhbGxiYWNrIiwidXNlQ29udGV4dCIsInVzZURlYnVnVmFsdWUiLCJ1c2VFZmZlY3QiLCJ1c2VJbXBlcmF0aXZlSGFuZGxlIiwidXNlTGF5b3V0RWZmZWN0IiwidXNlTWVtbyIsInVzZVJlZHVjZXIiLCJ1c2VSZWYiLCJ1c2VTdGF0ZSIsImNoZWNrRENFIiwiX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fIiwib25FcnJvciIsImRhIiwiZWEiLCJmYSIsImhhIiwiaWEiLCJqYSIsImxhIiwibWEiLCJuYSIsIm9hIiwiY3VycmVudFRhcmdldCIsImthIiwicGEiLCJxYSIsInJhIiwic2EiLCJleHRyYWN0RXZlbnRzIiwiZXZlbnRUeXBlcyIsInRhIiwicGhhc2VkUmVnaXN0cmF0aW9uTmFtZXMiLCJ1YSIsInJlZ2lzdHJhdGlvbk5hbWUiLCJ2YSIsIndhIiwiZGVwZW5kZW5jaWVzIiwieGEiLCJ5YSIsInphIiwiQWEiLCJCYSIsIkNhIiwic3RhdGVOb2RlIiwiRGEiLCJFYSIsIkZhIiwiR2EiLCJIYSIsIklhIiwiSmEiLCJLYSIsIkxhIiwiTWEiLCJOYSIsIk9hIiwiUGEiLCJRYSIsImFjY2VwdHNCb29sZWFucyIsImF0dHJpYnV0ZU5hbWUiLCJhdHRyaWJ1dGVOYW1lc3BhY2UiLCJtdXN0VXNlUHJvcGVydHkiLCJwcm9wZXJ0eU5hbWUiLCJzYW5pdGl6ZVVSTCIsIlVhIiwiVmEiLCJ0b1VwcGVyQ2FzZSIsInhsaW5rSHJlZiIsIldhIiwiWGEiLCJTYSIsIlRhIiwiUmEiLCJyZW1vdmVBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGVOUyIsIllhIiwiWmEiLCIkYSIsImFiIiwiYmIiLCJkYiIsImViIiwiZmIiLCJnYiIsImhiIiwiaWIiLCJqYiIsImtiIiwibGIiLCJtYiIsIm5iIiwicGIiLCJxYiIsIl9kZWJ1Z093bmVyIiwiX2RlYnVnU291cmNlIiwiZmlsZU5hbWUiLCJsaW5lTnVtYmVyIiwicmIiLCJzYiIsIm5vZGVOYW1lIiwieGIiLCJfdmFsdWVUcmFja2VyIiwiZ2V0VmFsdWUiLCJzZXRWYWx1ZSIsInN0b3BUcmFja2luZyIsInRiIiwieWIiLCJjaGVja2VkIiwiemIiLCJkZWZhdWx0Q2hlY2tlZCIsImRlZmF1bHRWYWx1ZSIsIl93cmFwcGVyU3RhdGUiLCJpbml0aWFsQ2hlY2tlZCIsIkFiIiwiaW5pdGlhbFZhbHVlIiwiY29udHJvbGxlZCIsIkJiIiwiQ2IiLCJEYiIsIkViIiwib3duZXJEb2N1bWVudCIsImFjdGl2ZUVsZW1lbnQiLCJHYiIsIkZiIiwiSGIiLCJvcHRpb25zIiwic2VsZWN0ZWQiLCJkZWZhdWx0U2VsZWN0ZWQiLCJkaXNhYmxlZCIsIkliIiwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwiLCJKYiIsIktiIiwiTGIiLCJ0ZXh0Q29udGVudCIsIk1iIiwiTmIiLCJPYiIsIlBiIiwiUWIiLCJNU0FwcCIsImV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uIiwibmFtZXNwYWNlVVJJIiwiaW5uZXJIVE1MIiwiZmlyc3RDaGlsZCIsIlJiIiwibGFzdENoaWxkIiwibm9kZVR5cGUiLCJub2RlVmFsdWUiLCJTYiIsIlRiIiwiYW5pbWF0aW9uZW5kIiwiYW5pbWF0aW9uaXRlcmF0aW9uIiwiYW5pbWF0aW9uc3RhcnQiLCJ0cmFuc2l0aW9uZW5kIiwiVWIiLCJWYiIsIldiIiwiYW5pbWF0aW9uIiwidHJhbnNpdGlvbiIsIlhiIiwiWWIiLCJaYiIsIiRiIiwiYWMiLCJiYyIsIldlYWtNYXAiLCJjYyIsImRjIiwiYWx0ZXJuYXRlIiwiZWZmZWN0VGFnIiwiZWMiLCJtZW1vaXplZFN0YXRlIiwiZGVoeWRyYXRlZCIsImZjIiwiaGMiLCJjaGlsZCIsInNpYmxpbmciLCJnYyIsImljIiwiamMiLCJrYyIsImxjIiwiX2Rpc3BhdGNoTGlzdGVuZXJzIiwiX2Rpc3BhdGNoSW5zdGFuY2VzIiwiaXNQcm9wYWdhdGlvblN0b3BwZWQiLCJpc1BlcnNpc3RlbnQiLCJyZWxlYXNlIiwibWMiLCJuYyIsInNyY0VsZW1lbnQiLCJjb3JyZXNwb25kaW5nVXNlRWxlbWVudCIsInBhcmVudE5vZGUiLCJvYyIsInBjIiwicWMiLCJ0b3BMZXZlbFR5cGUiLCJuYXRpdmVFdmVudCIsInRhcmdldEluc3QiLCJhbmNlc3RvcnMiLCJyYyIsImV2ZW50U3lzdGVtRmxhZ3MiLCJzYyIsImNvbnRhaW5lckluZm8iLCJ0YyIsInVjIiwidmMiLCJ3YyIsInhjIiwieWMiLCJ6YyIsIkFjIiwiQmMiLCJDYyIsIkRjIiwiRWMiLCJGYyIsIkdjIiwiSGMiLCJJYyIsIktjIiwiYmxvY2tlZE9uIiwiY29udGFpbmVyIiwiTGMiLCJkZWxldGUiLCJwb2ludGVySWQiLCJNYyIsIk5jIiwiUGMiLCJ1bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHkiLCJwcmlvcml0eSIsImh5ZHJhdGUiLCJRYyIsIlJjIiwiU2MiLCJUYyIsInNoaWZ0IiwiVWMiLCJ1bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrIiwidW5zdGFibGVfTm9ybWFsUHJpb3JpdHkiLCJWYyIsIldjIiwiWWMiLCJaYyIsIiRjIiwiYWQiLCJidWJibGVkIiwiY2FwdHVyZWQiLCJldmVudFByaW9yaXR5IiwiYmQiLCJjZCIsImRkIiwidW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHkiLCJlZCIsImZkIiwiZ2QiLCJoZCIsIk9jIiwiamQiLCJhbmltYXRpb25JdGVyYXRpb25Db3VudCIsImJvcmRlckltYWdlT3V0c2V0IiwiYm9yZGVySW1hZ2VTbGljZSIsImJvcmRlckltYWdlV2lkdGgiLCJib3hGbGV4IiwiYm94RmxleEdyb3VwIiwiYm94T3JkaW5hbEdyb3VwIiwiY29sdW1uQ291bnQiLCJjb2x1bW5zIiwiZmxleCIsImZsZXhHcm93IiwiZmxleFBvc2l0aXZlIiwiZmxleFNocmluayIsImZsZXhOZWdhdGl2ZSIsImZsZXhPcmRlciIsImdyaWRBcmVhIiwiZ3JpZFJvdyIsImdyaWRSb3dFbmQiLCJncmlkUm93U3BhbiIsImdyaWRSb3dTdGFydCIsImdyaWRDb2x1bW4iLCJncmlkQ29sdW1uRW5kIiwiZ3JpZENvbHVtblNwYW4iLCJncmlkQ29sdW1uU3RhcnQiLCJmb250V2VpZ2h0IiwibGluZUNsYW1wIiwibGluZUhlaWdodCIsIm9wYWNpdHkiLCJvcmRlciIsIm9ycGhhbnMiLCJ0YWJTaXplIiwid2lkb3dzIiwiekluZGV4Iiwiem9vbSIsImZpbGxPcGFjaXR5IiwiZmxvb2RPcGFjaXR5Iiwic3RvcE9wYWNpdHkiLCJzdHJva2VEYXNoYXJyYXkiLCJzdHJva2VEYXNob2Zmc2V0Iiwic3Ryb2tlTWl0ZXJsaW1pdCIsInN0cm9rZU9wYWNpdHkiLCJzdHJva2VXaWR0aCIsImtkIiwibGQiLCJtZCIsInNldFByb3BlcnR5Iiwic3Vic3RyaW5nIiwibmQiLCJtZW51aXRlbSIsImFyZWEiLCJiYXNlIiwiYnIiLCJjb2wiLCJlbWJlZCIsImhyIiwiaW1nIiwiaW5wdXQiLCJrZXlnZW4iLCJsaW5rIiwicGFyYW0iLCJ0cmFjayIsIndiciIsIm9kIiwicGQiLCJxZCIsInJkIiwic2QiLCJ0ZCIsImJvZHkiLCJ1ZCIsInZkIiwibmV4dFNpYmxpbmciLCJ4ZCIsIkhUTUxJRnJhbWVFbGVtZW50IiwieWQiLCJjb250ZW50RWRpdGFibGUiLCJEZCIsIkVkIiwiRmQiLCJhdXRvRm9jdXMiLCJHZCIsIl9faHRtbCIsIkhkIiwiSWQiLCJjbGVhclRpbWVvdXQiLCJKZCIsIktkIiwicHJldmlvdXNTaWJsaW5nIiwiTGQiLCJNZCIsIk5kIiwiT2QiLCJQZCIsIlFkIiwiUmQiLCJTZCIsIlRkIiwiZGlzcGF0Y2hDb25maWciLCJVZCIsIl90YXJnZXRJbnN0IiwiVmQiLCJXZCIsIlhkIiwiWWQiLCJaZCIsIiRkIiwiYWUiLCJiZSIsImNlIiwiSW50ZXJmYWNlIiwiaXNEZWZhdWx0UHJldmVudGVkIiwiZGVmYXVsdFByZXZlbnRlZCIsInJldHVyblZhbHVlIiwiZWUiLCJldmVudFBvb2wiLCJmZSIsImRlc3RydWN0b3IiLCJkZSIsImdldFBvb2xlZCIsInByZXZlbnREZWZhdWx0Iiwic3RvcFByb3BhZ2F0aW9uIiwiY2FuY2VsQnViYmxlIiwicGVyc2lzdCIsImV2ZW50UGhhc2UiLCJidWJibGVzIiwiY2FuY2VsYWJsZSIsInRpbWVTdGFtcCIsImlzVHJ1c3RlZCIsImV4dGVuZCIsImdlIiwiaGUiLCJpZSIsImplIiwia2UiLCJkb2N1bWVudE1vZGUiLCJsZSIsIm1lIiwibmUiLCJvZSIsImJlZm9yZUlucHV0IiwiY29tcG9zaXRpb25FbmQiLCJjb21wb3NpdGlvblN0YXJ0IiwiY29tcG9zaXRpb25VcGRhdGUiLCJwZSIsInFlIiwia2V5Q29kZSIsImRldGFpbCIsInNlIiwidmUiLCJsb2NhbGUiLCJ3aGljaCIsInRlIiwiY3RybEtleSIsImFsdEtleSIsIm1ldGFLZXkiLCJjaGFyIiwidWUiLCJ3ZSIsImRhdGUiLCJkYXRldGltZSIsImVtYWlsIiwibW9udGgiLCJwYXNzd29yZCIsInJhbmdlIiwidGVsIiwidGV4dCIsIndlZWsiLCJ4ZSIsInllIiwiY2hhbmdlIiwiemUiLCJBZSIsIkJlIiwiQ2UiLCJEZSIsIkVlIiwiRmUiLCJHZSIsImRldGFjaEV2ZW50IiwiSGUiLCJJZSIsImF0dGFjaEV2ZW50IiwiSmUiLCJLZSIsIkxlIiwiTWUiLCJfaXNJbnB1dEV2ZW50U3VwcG9ydGVkIiwiTmUiLCJPZSIsIkFsdCIsIkNvbnRyb2wiLCJNZXRhIiwiU2hpZnQiLCJQZSIsImdldE1vZGlmaWVyU3RhdGUiLCJRZSIsIlJlIiwiU2UiLCJUZSIsIlVlIiwiVmUiLCJzY3JlZW5YIiwic2NyZWVuWSIsImNsaWVudFgiLCJjbGllbnRZIiwicGFnZVgiLCJwYWdlWSIsInNoaWZ0S2V5IiwiYnV0dG9uIiwiYnV0dG9ucyIsInJlbGF0ZWRUYXJnZXQiLCJmcm9tRWxlbWVudCIsInRvRWxlbWVudCIsIm1vdmVtZW50WCIsIm1vdmVtZW50WSIsIldlIiwid2lkdGgiLCJoZWlnaHQiLCJwcmVzc3VyZSIsInRhbmdlbnRpYWxQcmVzc3VyZSIsInRpbHRYIiwidGlsdFkiLCJ0d2lzdCIsInBvaW50ZXJUeXBlIiwiaXNQcmltYXJ5IiwiWGUiLCJtb3VzZUVudGVyIiwibW91c2VMZWF2ZSIsInBvaW50ZXJFbnRlciIsInBvaW50ZXJMZWF2ZSIsIlllIiwiZGVmYXVsdFZpZXciLCJwYXJlbnRXaW5kb3ciLCIkZSIsImFmIiwiYmYiLCJjZiIsImRmIiwic2VsZWN0IiwiZWYiLCJmZiIsImdmIiwiaGYiLCJqZiIsInNlbGVjdGlvblN0YXJ0Iiwic2VsZWN0aW9uRW5kIiwiYW5jaG9yTm9kZSIsImdldFNlbGVjdGlvbiIsImFuY2hvck9mZnNldCIsImZvY3VzTm9kZSIsImZvY3VzT2Zmc2V0Iiwia2YiLCJvblNlbGVjdCIsImxmIiwiYW5pbWF0aW9uTmFtZSIsImVsYXBzZWRUaW1lIiwicHNldWRvRWxlbWVudCIsIm1mIiwiY2xpcGJvYXJkRGF0YSIsIm5mIiwiY2hhckNvZGUiLCJwZiIsIkVzYyIsIlNwYWNlYmFyIiwiTGVmdCIsIlVwIiwiUmlnaHQiLCJEb3duIiwiRGVsIiwiV2luIiwiTWVudSIsIkFwcHMiLCJTY3JvbGwiLCJNb3pQcmludGFibGVLZXkiLCJxZiIsIjgiLCI5IiwiMTIiLCIxMyIsIjE2IiwiMTciLCIxOCIsIjE5IiwiMjAiLCIyNyIsIjMyIiwiMzMiLCIzNCIsIjM1IiwiMzYiLCIzNyIsIjM4IiwiMzkiLCI0MCIsIjQ1IiwiNDYiLCIxMTIiLCIxMTMiLCIxMTQiLCIxMTUiLCIxMTYiLCIxMTciLCIxMTgiLCIxMTkiLCIxMjAiLCIxMjEiLCIxMjIiLCIxMjMiLCIxNDQiLCIxNDUiLCIyMjQiLCJyZiIsInNmIiwiZGF0YVRyYW5zZmVyIiwidGYiLCJ0b3VjaGVzIiwidGFyZ2V0VG91Y2hlcyIsImNoYW5nZWRUb3VjaGVzIiwidWYiLCJ2ZiIsImRlbHRhWCIsIndoZWVsRGVsdGFYIiwiZGVsdGFZIiwid2hlZWxEZWx0YVkiLCJ3aGVlbERlbHRhIiwiZGVsdGFaIiwiZGVsdGFNb2RlIiwid2YiLCJTaW1wbGVFdmVudFBsdWdpbiIsIkVudGVyTGVhdmVFdmVudFBsdWdpbiIsIkNoYW5nZUV2ZW50UGx1Z2luIiwiU2VsZWN0RXZlbnRQbHVnaW4iLCJCZWZvcmVJbnB1dEV2ZW50UGx1Z2luIiwieWYiLCJ6ZiIsIkFmIiwiQmYiLCJDZiIsImNvbnRleHRUeXBlcyIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dCIsImNoaWxkQ29udGV4dFR5cGVzIiwiRGYiLCJFZiIsIkZmIiwiZ2V0Q2hpbGRDb250ZXh0IiwiR2YiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dCIsIkhmIiwiSWYiLCJKZiIsIktmIiwidW5zdGFibGVfY2FuY2VsQ2FsbGJhY2siLCJMZiIsInVuc3RhYmxlX3JlcXVlc3RQYWludCIsIk1mIiwidW5zdGFibGVfbm93IiwiTmYiLCJ1bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbCIsIk9mIiwidW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHkiLCJQZiIsIlFmIiwiUmYiLCJ1bnN0YWJsZV9Mb3dQcmlvcml0eSIsIlNmIiwidW5zdGFibGVfSWRsZVByaW9yaXR5IiwiVGYiLCJVZiIsInVuc3RhYmxlX3Nob3VsZFlpZWxkIiwiVmYiLCJXZiIsIlhmIiwiWWYiLCJaZiIsIiRmIiwiYWciLCJiZyIsImNnIiwiZGciLCJlZyIsImZnIiwiZ2ciLCJoZyIsImlnIiwiamciLCJrZyIsImxnIiwibWciLCJuZyIsIm9nIiwicGciLCJjaGlsZEV4cGlyYXRpb25UaW1lIiwicWciLCJmaXJzdENvbnRleHQiLCJleHBpcmF0aW9uVGltZSIsInJnIiwic2ciLCJvYnNlcnZlZEJpdHMiLCJyZXNwb25kZXJzIiwidGciLCJ1ZyIsInVwZGF0ZVF1ZXVlIiwiYmFzZVN0YXRlIiwiYmFzZVF1ZXVlIiwicGVuZGluZyIsImVmZmVjdHMiLCJ2ZyIsIndnIiwic3VzcGVuc2VDb25maWciLCJwYXlsb2FkIiwiY2FsbGJhY2siLCJ4ZyIsInlnIiwiemciLCJjYSIsIkFnIiwiQmciLCJDZyIsIkRnIiwiRWciLCJGZyIsIkpnIiwiX3JlYWN0SW50ZXJuYWxGaWJlciIsIkdnIiwiSGciLCJJZyIsIktnIiwic2hvdWxkQ29tcG9uZW50VXBkYXRlIiwiTGciLCJjb250ZXh0VHlwZSIsIk1nIiwiY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsIlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzIiwiTmciLCJnZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMiLCJnZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSIsIlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQiLCJjb21wb25lbnRXaWxsTW91bnQiLCJPZyIsIlBnIiwiX3N0cmluZ1JlZiIsIlFnIiwiUmciLCJsYXN0RWZmZWN0IiwibmV4dEVmZmVjdCIsImZpcnN0RWZmZWN0IiwiU2ciLCJUZyIsImVsZW1lbnRUeXBlIiwiVWciLCJpbXBsZW1lbnRhdGlvbiIsIlZnIiwiV2ciLCJYZyIsIllnIiwiWmciLCIkZyIsImFoIiwiYmgiLCJkaCIsInRhZ05hbWUiLCJlaCIsImZoIiwiZ2giLCJoaCIsIm1lbW9pemVkUHJvcHMiLCJyZXZlYWxPcmRlciIsImloIiwicmVzcG9uZGVyIiwiamgiLCJraCIsImxoIiwibWgiLCJuaCIsIm9oIiwicGgiLCJxaCIsInJoIiwic2giLCJ0aCIsInVoIiwidmgiLCJ3aCIsImxhc3RSZW5kZXJlZFJlZHVjZXIiLCJlYWdlclJlZHVjZXIiLCJlYWdlclN0YXRlIiwibGFzdFJlbmRlcmVkU3RhdGUiLCJkaXNwYXRjaCIsInhoIiwieWgiLCJ6aCIsIkFoIiwiZGVzdHJveSIsImRlcHMiLCJCaCIsIkNoIiwiRGgiLCJFaCIsIkZoIiwiR2giLCJIaCIsIkloIiwiSmgiLCJLaCIsIkxoIiwiTWgiLCJOaCIsInJlYWRDb250ZXh0IiwidXNlUmVzcG9uZGVyIiwidXNlRGVmZXJyZWRWYWx1ZSIsInVzZVRyYW5zaXRpb24iLCJPaCIsIlBoIiwiUWgiLCJSaCIsIlNoIiwiVGgiLCJwZW5kaW5nUHJvcHMiLCJVaCIsIlZoIiwiV2giLCJYaCIsIlloIiwiWmgiLCIkaCIsImFpIiwiYmkiLCJjaSIsImRpIiwiZWkiLCJmaSIsIlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlIiwiY29tcG9uZW50V2lsbFVwZGF0ZSIsImNvbXBvbmVudERpZFVwZGF0ZSIsImdpIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yIiwiaGkiLCJwZW5kaW5nQ29udGV4dCIsIm5pIiwicGkiLCJxaSIsImlpIiwicmV0cnlUaW1lIiwiamkiLCJmYWxsYmFjayIsInVuc3RhYmxlX2F2b2lkVGhpc0ZhbGxiYWNrIiwia2kiLCJsaSIsImlzQmFja3dhcmRzIiwicmVuZGVyaW5nIiwicmVuZGVyaW5nU3RhcnRUaW1lIiwidGFpbCIsInRhaWxFeHBpcmF0aW9uIiwidGFpbE1vZGUiLCJtaSIsInJpIiwic2kiLCJ3YXNNdWx0aXBsZSIsIm11bHRpcGxlIiwib25DbGljayIsIm9uY2xpY2siLCJjcmVhdGVFbGVtZW50TlMiLCJ0aSIsInVpIiwidmkiLCJ3aSIsInhpIiwieWkiLCJ6aSIsIkFpIiwic3RhY2siLCJCaSIsIldlYWtTZXQiLCJDaSIsIkZpIiwiRWkiLCJHaSIsIl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlIiwiSGkiLCJJaSIsIkppIiwiZm9jdXMiLCJLaSIsIkxpIiwiY29tcG9uZW50V2lsbFVubW91bnQiLCJEaSIsIk1pIiwiTmkiLCJPaSIsIlBpIiwiUWkiLCJpbnNlcnRCZWZvcmUiLCJfcmVhY3RSb290Q29udGFpbmVyIiwiUmkiLCJTaSIsIlRpIiwiVWkiLCJWaSIsIldpIiwiWGkiLCJZaSIsIlppIiwiJGkiLCJjb21wb25lbnREaWRDYXRjaCIsImFqIiwiY29tcG9uZW50U3RhY2siLCJSaiIsImJqIiwiY2oiLCJkaiIsImtqIiwibGoiLCJtaiIsIm5qIiwib2oiLCJxaiIsInJqIiwic2oiLCJ0aiIsInVqIiwidmoiLCJ3aiIsInRpbWVvdXRNcyIsInhqIiwieWoiLCJ6aiIsImxhc3RFeHBpcmVkVGltZSIsIkFqIiwiZmlyc3RQZW5kaW5nVGltZSIsImxhc3RQaW5nZWRUaW1lIiwibmV4dEtub3duUGVuZGluZ0xldmVsIiwiY2FsbGJhY2tFeHBpcmF0aW9uVGltZSIsImNhbGxiYWNrUHJpb3JpdHkiLCJjYWxsYmFja05vZGUiLCJCaiIsInRpbWVvdXQiLCJDaiIsIkRqIiwiRWoiLCJGaiIsIkdqIiwiSGoiLCJmaW5pc2hlZFdvcmsiLCJmaW5pc2hlZEV4cGlyYXRpb25UaW1lIiwibGFzdFN1c3BlbmRlZFRpbWUiLCJJaiIsInRpbWVvdXRIYW5kbGUiLCJKaiIsImJ1c3lNaW5EdXJhdGlvbk1zIiwiYnVzeURlbGF5TXMiLCJLaiIsIk1qIiwiTmoiLCJwaW5nQ2FjaGUiLCJPaiIsInViIiwiUGoiLCJYYyIsIlFqIiwiU2oiLCJmaXJzdFN1c3BlbmRlZFRpbWUiLCJyYW5nZUNvdW50Iiwid2IiLCJhY3RpdmVFbGVtZW50RGV0YWNoZWQiLCJmb2N1c2VkRWxlbSIsInNlbGVjdGlvblJhbmdlIiwiVGoiLCJ3ZCIsImNvbnRhaW5zIiwiY29tcGFyZURvY3VtZW50UG9zaXRpb24iLCJjcmVhdGVSYW5nZSIsInNldFN0YXJ0IiwicmVtb3ZlQWxsUmFuZ2VzIiwiYWRkUmFuZ2UiLCJzZXRFbmQiLCJzY3JvbGxMZWZ0IiwidG9wIiwic2Nyb2xsVG9wIiwidmIiLCJVaiIsIlZqIiwiV2oiLCJoaWRkZW4iLCJkZWZhdWx0Iiwib2IiLCJYaiIsInVuc3RhYmxlX29ic2VydmVkQml0cyIsIlpqIiwicGVuZGluZ0NoaWxkcmVuIiwiYWsiLCJiayIsImNrIiwiZGsiLCJlayIsImZrIiwiSmMiLCJfaW50ZXJuYWxSb290IiwiZ2siLCJpayIsImhhc0F0dHJpYnV0ZSIsImhrIiwiamsiLCJrayIsInVubW91bnQiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZm9ybSIsIkxqIiwibGsiLCJFdmVudHMiLCJmaW5kRmliZXJCeUhvc3RJbnN0YW5jZSIsImJ1bmRsZVR5cGUiLCJyZW5kZXJlclBhY2thZ2VOYW1lIiwiaXNEaXNhYmxlZCIsInN1cHBvcnRzRmliZXIiLCJpbmplY3QiLCJvbkNvbW1pdEZpYmVyUm9vdCIsIm9uQ29tbWl0RmliZXJVbm1vdW50IiwiWWoiLCJvdmVycmlkZUhvb2tTdGF0ZSIsIm92ZXJyaWRlUHJvcHMiLCJzZXRTdXNwZW5zZUhhbmRsZXIiLCJzY2hlZHVsZVVwZGF0ZSIsImN1cnJlbnREaXNwYXRjaGVyUmVmIiwiZmluZEhvc3RJbnN0YW5jZUJ5RmliZXIiLCJmaW5kSG9zdEluc3RhbmNlc0ZvclJlZnJlc2giLCJzY2hlZHVsZVJlZnJlc2giLCJzY2hlZHVsZVJvb3QiLCJzZXRSZWZyZXNoSGFuZGxlciIsImdldEN1cnJlbnRGaWJlciIsImNyZWF0ZVBvcnRhbCIsImZpbmRET01Ob2RlIiwiZmx1c2hTeW5jIiwidW5tb3VudENvbXBvbmVudEF0Tm9kZSIsInVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzIiwidW5zdGFibGVfY3JlYXRlUG9ydGFsIiwidW5zdGFibGVfcmVuZGVyU3VidHJlZUludG9Db250YWluZXIiLCJ1bnN0YWJsZV9mb3JjZUZyYW1lUmF0ZSIsInBlcmZvcm1hbmNlIiwiY2FuY2VsQW5pbWF0aW9uRnJhbWUiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJzb3J0SW5kZXgiLCJzdGFydFRpbWUiLCJwcmlvcml0eUxldmVsIiwidW5zdGFibGVfUHJvZmlsaW5nIiwidW5zdGFibGVfY29udGludWVFeGVjdXRpb24iLCJ1bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZSIsInVuc3RhYmxlX25leHQiLCJ1bnN0YWJsZV9wYXVzZUV4ZWN1dGlvbiIsImRlbGF5IiwidW5zdGFibGVfd3JhcENhbGxiYWNrIiwiREUiLCJpdGVtUmVtb3ZlZEZyb21MaXN0IiwiY3Vycm50bHlJcyIsImN1cnJudGx5SXNPZmYiLCJjdXJybnRseUlzT24iLCJ0aXRsZV9odG1sX2Jsb2NrZXIiLCJibG9ja2VyX21zZ183IiwidGl0bGVfcmVzZXQiLCJyZXNldF9kb25lIiwibWVudV90aXRsZV9uaW5qYSIsIm5pbmphSWNvbiIsInR1cm5PbiIsInR1cm5PZmYiLCJsaW5rcyIsImRlbGV0ZUFsbElmcmFtZXMiLCJkZWxldGVBbGxDb29raWVzIiwibm90TG9nZ2VkSW5TdGF0aXN0aWNNZXNzYWdlIiwidG9kYXlfYmxvY2tlZCIsIm1lbnVfdGV4dF9zdGF0aXN0aWMiLCJtZW51X3RleHRfc3RhdGlzdGljX3NtYWxsIiwibWVudV90ZXh0X3JlcXVlc3RzIiwiYWRkb25fbm90X2F2YWlsYWJsZSIsIk5vRGF0YUJsb2NrZWRJdGVtc1RvZGF5IiwiTm9EYXRhQmxvY2tlZEl0ZW1zIiwiaG9tZV9jaGF0IiwiaG9tZV9tZXNzYWdlcyIsImhvbWVfc2VjdXJpdHkiLCJob21lX2ltYWdlcyIsIm1lbnVfdGV4dF9leHBvcnQiLCJtZW51X3RpdGxlX2V4cG9ydCIsIm1lbnVfdGV4dF9pbXBvcnQiLCJtZW51X3RpdGxlX2ltcG9ydCIsIm1lc3NhZ2VzX21haW4iLCJtZW51X3RleHRfbWVzc2FnZXMiLCJtZW51X3RpdGxlX21lc3NhZ2VzIiwibWVudV90ZXh0X25vdGlmaWNhdGlvbnMiLCJtZW51X3RpdGxlX25vdGlmaWNhdGlvbnMiLCJtZW51X3RleHRfZmF2b3VyaXRlcyIsIm1lbnVfdGl0bGVfZmF2b3VyaXRlcyIsIm1lbnVfdGV4dF9hZGRfZmF2b3VyaXRlcyIsIm1lbnVfdGl0bGVfYWRkX2Zhdm91cml0ZXMiLCJjaGF0X21haW4iLCJtZW51X3RleHRfY2hhdCIsIm1lbnVfdGl0bGVfY2hhdCIsIm1lbnVfdGV4dF9zZWN1cml0eSIsIm1lbnVfdGV4dF9zZWN1cml0eV9tYWluIiwibWVudV90aXRsZV9zZWN1cml0eSIsIm1lbnVfdGV4dF9zZWN1cml0eV9zZXR0aW5ncyIsIm1lbnVfdGl0bGVfc2VjdXJpdHlfc2V0dGluZ3MiLCJtZW51X3RleHRfY29va2llcyIsIm1lbnVfdGl0bGVfY29va2llcyIsIm1lbnVfdGV4dF9ob21lIiwibWVudV90aXRsZV9ob21lIiwibWVudV90ZXh0X2lmcmFtZXMiLCJtZW51X3RpdGxlX2lmcmFtZXMiLCJtZW51X3RleHRfc2VjdXJpdHlfZXhhbXBsZXMiLCJtZW51X3RpdGxlX3NlY3VyaXR5X2V4YW1wbGVzIiwibWVudV90ZXh0X2Rvd25sb2FkX2ltYWdlcyIsIm1lbnVfdGl0bGVfZG93bmxvYWRfaW1hZ2VzIiwibWVudV90ZXh0X2ltYWdlcyIsIm1lbnVfdGV4dF9pbWFnZXNfZmF2b3VyaXRlcyIsIm1lbnVfdGl0bGVfaW1hZ2VzX2Zhdm91cml0ZXMiLCJhY2NvdW50UHJpdmFjeVRlcm1zIiwiZ2xvYmFsTmV0d29ya0Vycm9yIiwiZ2xvYmFsUHJvY2Vzc0Vycm9yIiwiZ2xvYmFsVXNlckRvZXNOb3RFeHNpc3RzIiwiZ2xvYmFsSW52YWxpZEVtYWlsc0FkcmVzcyIsImdsb2JhbEVycm9ybWVzc2FnZVByZWZpeCIsImdsb2JhbEVycm9ybWVzc2FnZUNsb3NlQnV0dG9uIiwiZ2xvYmFsRXJyb3JtZXNzYWdlTGVhcm5Nb3JlQnV0dG9uIiwiZ2xvYmFsSW52YWxpZENvdW50cnkiLCJnbG9iYWxJbnZhbGlkTGFuZ3VhZ2UiLCJnbG9iYWxFcnJvckNvZGVUaXRsZSIsImdsb2JhbEVycm9yQ29kZV8xIiwiZ2xvYmFsRXJyb3JDb2RlXzIiLCJnbG9iYWxFcnJvckNvZGVfMyIsImxpc3ROb3RTeW5jaHJvbml6ZWRVc2VyTm90TG9nZ2VkSW4iLCJub3RMb2dnZWRJbiIsImxpc3RTeW5jaHJvbml6ZWRfb25lIiwidGl0bGVEZWxldGVDb29raWUiLCJ0aXRsZUNvcHlDb29raWVWYWx1ZSIsImNvb2tpZV9tc2dfMSIsImNvb2tpZV9tc2dfMiIsImNvb2tpZV9tc2dfMyIsImNvb2tpZV9tc2dfNCIsImNvb2tpZXNOb0RhdGEiLCJibGFja2xpc3QiLCJ3aGl0ZWxpc3QiLCJibGFja2xpc3RlZEVsZW1lbnRzV29yZHMiLCJibGFja2xpc3RlZEVsZW1lbnRzRG9taWFucyIsImJsYWNrbGlzdGVkRWxlbWVudHNVcmxzSW5jbHVkZXMiLCJibGFja2xpc3RlZEVsZW1lbnRzVHJhY2tlcnMiLCJibGFja2xpc3RlZEVsZW1lbnRzQ29va2llcyIsImJsYWNrbGlzdGVkRWxlbWVudHNDbGFzcyIsImJsYWNrbGlzdGVkRWxlbWVudHNJZCIsImJsYWNrbGlzdGVkRWxlbWVudHNIcmVmIiwibWVudUJsYWNrbGlzdGVkRWxlbWVudHNDbGFzcyIsIm1lbnVCbGFja2xpc3RlZEVsZW1lbnRzSWQiLCJtZW51QmxhY2tsaXN0ZWRFbGVtZW50c0hyZWYiLCJibGFja2xpc3RlZEVsZW1lbnRzSWZyYW1lcyIsImJsYWNrbGlzdGVkRWxlbWVudHNJZnJhbWVzU291cmNlcyIsImJsYWNrbGlzdGVkRWxlbWVudHNJZnJhbWVzTmFtZXMiLCJjb3BpZWRUb0NsaXBCb2FyZCIsImFjdGlvbl90aXRsZV9jb3B5VG9DbGlwYm9hcmQiLCJhY3Rpb25fdGl0bGVfZXhwb3J0VG9GaWxlIiwiYWN0aW9uX3RpdGxlX2RlbGV0ZUxpc3QiLCJhY3Rpb25fdGl0bGVfY29weVRvQ2xpcGJvYXJkX3NpbmdsZSIsImFjdGlvbl90aXRsZV9kZWxldGVfc2luZ2xlIiwiZm9yVGhpc0Z1bmN0aW9uTG9naW4iLCJlbXB0eUxpc3REb25lIiwicmVzdG9yZURlZmF1bHRWYWx1ZSIsIndoaXRlbGlzdGVkRWxlbWVudHNEb21haW5zIiwiYmxvY2tlZEVsZW1lbnRzIiwic2VjdXJpdHlJc09uIiwic2NhblRleHRPbldlYnNpdGUiLCJhbGxvd09ubHlIdHRwc1Byb3RvY29sIiwiYWxsb3dPbmx5SHR0cFByb3RvY29sIiwibWFrZVNlYXJjaEluU291cmNlQ29kZSIsIm11dGF0aW9uQ2hlY2siLCJpZ25vcmVUYWdTdHlsZSIsImlnbm9yZVRhZ1NjcmlwdCIsImlnbm9yZVRhZ0xpbmsiLCJpZ25vcmVUYWdNZXRhIiwibWF4aW11bU9mRGFuZ2VyV29yZHMiLCJsaW1pdGxlc3NTY2FuIiwiZGVsZXRlQ29va2llcyIsInBvcHVwTWFpblRpdGxlIiwicG9wdXBfYmxvY2tlZF90cmFja2VycyIsInBvcHVwX2Jsb2NrZWRfY29va2llcyIsInBvcHVwX2Jsb2NrZWRfd29yZHMiLCJwb3B1cF9ibG9ja2VkX3JlcXVlc3RzIiwicG9wdXBfYmxvY2tlZF9pZnJhbWVzIiwicG9wdXBfYmxvY2tlZF9kb20iLCJwb3B1cF9ibG9ja2VkX3dlYnNpdGVzIiwicG9wdXBfdGl0bGVfZ2xvYmFsX2NoYXJ0IiwidGl0bGVEZWxldGVJZnJhbWUiLCJpZnJhbWVfbXNnXzEiLCJpZnJhbWVfbXNnXzIiLCJpZnJhbWVfbXNnXzMiLCJpZnJhbWVzTm9EYXRhIiwicG9wdXBfYWRkX2JsYWNrbGlzdGVkRWxlbWVudHNUcmFja2VycyIsInBvcHVwX3JlbW92ZV9ibGFja2xpc3RlZEVsZW1lbnRzVHJhY2tlcnMiLCJwb3B1cF9hZGRfYmxhY2tsaXN0ZWRFbGVtZW50c0RvbWlhbnMiLCJwb3B1cF9yZW1vdmVfYmxhY2tsaXN0ZWRFbGVtZW50c0RvbWlhbnMiLCJwb3B1cF9hZGRfYmxhY2tsaXN0ZWRFbGVtZW50c0Nvb2tpZXMiLCJwb3B1cF9yZW1vdmVfYmxhY2tsaXN0ZWRFbGVtZW50c0Nvb2tpZXMiLCJwb3B1cF9hZGRfYmxhY2tsaXN0ZWRFbGVtZW50c0lmcmFtZXMiLCJwb3B1cF9yZW1vdmVfYmxhY2tsaXN0ZWRFbGVtZW50c0lmcmFtZXMiLCJwb3B1cF9hZGRfYmxhY2tsaXN0ZWRFbGVtZW50c0lmcmFtZXNTb3VyY2VzIiwicG9wdXBfcmVtb3ZlX2JsYWNrbGlzdGVkRWxlbWVudHNJZnJhbWVzU291cmNlcyIsInBvcHVwX2FkZF93aGl0ZWxpc3RlZEVsZW1lbnRzRG9tYWlucyIsInBvcHVwX3JlbW92ZV93aGl0ZWxpc3RlZEVsZW1lbnRzRG9tYWlucyIsInBvcHVwX2FkZF9ibGFja2xpc3RlZEVsZW1lbnRzVHJhY2tlcnNfcG9wdXAiLCJwb3B1cF9yZW1vdmVfYmxhY2tsaXN0ZWRFbGVtZW50c1RyYWNrZXJzX3BvcHVwIiwicG9wdXBfYWRkX2JsYWNrbGlzdGVkRWxlbWVudHNEb21pYW5zX3BvcHVwIiwicG9wdXBfcmVtb3ZlX2JsYWNrbGlzdGVkRWxlbWVudHNEb21pYW5zX3BvcHVwIiwicG9wdXBfYWRkX2JsYWNrbGlzdGVkRWxlbWVudHNDb29raWVzX3BvcHVwIiwicG9wdXBfcmVtb3ZlX2JsYWNrbGlzdGVkRWxlbWVudHNDb29raWVzX3BvcHVwIiwicG9wdXBfYWRkX2JsYWNrbGlzdGVkRWxlbWVudHNJZnJhbWVzX3BvcHVwIiwicG9wdXBfcmVtb3ZlX2JsYWNrbGlzdGVkRWxlbWVudHNJZnJhbWVzX3BvcHVwIiwicG9wdXBfYWRkX2JsYWNrbGlzdGVkRWxlbWVudHNJZnJhbWVzU291cmNlc19wb3B1cCIsInBvcHVwX3JlbW92ZV9ibGFja2xpc3RlZEVsZW1lbnRzSWZyYW1lc1NvdXJjZXNfcG9wdXAiLCJwb3B1cF9hZGRfd2hpdGVsaXN0ZWRFbGVtZW50c0RvbWFpbnNfcG9wdXAiLCJwb3B1cF9yZW1vdmVfd2hpdGVsaXN0ZWRFbGVtZW50c0RvbWFpbnNfcG9wdXAiLCJwb3B1cF9yZWxvYWRfdGFyZ2V0IiwiZXh0ZW5kc2JsYWNrbGlzdCIsImV4dGVuZHNwb3JubGlzdCIsImJsYWNrbGlzdGVkRWxlbWVudHNDb29raWVzX2h0bWwiLCJibGFja2xpc3RlZEVsZW1lbnRzRG9taWFuc19odG1sIiwiYmxhY2tsaXN0ZWRFbGVtZW50c1VybHNJbmNsdWRlc19odG1sIiwiYmxhY2tsaXN0ZWRFbGVtZW50c0lmcmFtZXNfaHRtbCIsImJsYWNrbGlzdGVkRWxlbWVudHNJZnJhbWVzU291cmNlc19odG1sIiwiYmxhY2tsaXN0ZWRFbGVtZW50c0lmcmFtZXNOYW1lc19odG1sIiwiYmxhY2tsaXN0ZWRFbGVtZW50c1RyYWNrZXJzX2h0bWwiLCJibGFja2xpc3RlZEVsZW1lbnRzV29yZHNfaHRtbCIsImJsYWNrbGlzdGVkRWxlbWVudHNDbGFzc19odG1sIiwiYmxhY2tsaXN0ZWRFbGVtZW50c0hyZWZfaHRtbCIsImJsYWNrbGlzdGVkRWxlbWVudHNJZF9odG1sIiwid2hpdGVsaXN0ZWRFbGVtZW50c0RvbWFpbnNfaHRtbCIsImV4YW1wbGUiLCJpbWFnZXNQb3B1cFRpdGxlIiwiaW1hZ2VzTm9EYXRhIiwiaW1hZ2VzTm9EYXRhRmF2b3VyaXRlcyIsImltYWdlc0xvYWRpbmdUYWJzIiwiY3VycmVudF90YWJzX3RpdGxlIiwiZmlsdGVyX2FsbCIsIml0ZW1zUGVyU2l0ZSIsIml0ZW1zUGVyU2l0ZVN1ZmZpeCIsInBhZ2UiLCJpbWFnZXMiLCJjdXJyZW50X2Zhdm91cml0ZXNfaW1hZ2VzIiwib3Blbl9pbl9uZXdfdGFiIiwiZG93bmxvYWQiLCJkb3dubG9hZFNtYWxsIiwiZGVsZXRlX2FsbCIsIm5vdExvZ2dlZEluSW1hZ2VzRmF2b3VyaXRlc0FkZCIsIm5vdExvZ2dlZEluSW1hZ2VzRmF2b3VyaXRlc01hbmFnZSIsInRhYnNOb0RhdGEiLCJpbWFnZXNMb2FkaW5nRGF0YSIsImluZm9JdGVtQWRkZWQiLCJpbmZvSXRlbVJlbW92ZWQiLCJpbmZvQXJyYXlJczAiLCJpbmZvSW5jb3JyZWN0VmFsdWUiLCJpbmZvSXRlbUluTGlzdCIsImNvdW50cnkiLCJjb3VudHJpZXNOb3RGb3VuZFRleHQiLCJkcm9wVGV4dCIsInNlYXJjaFBsYWNlaG9sZGVyIiwiYWRkUGxhY2Vob2xkZXIiLCJhZGROZXdFbnRyeVRpdGxlIiwibm9fZGF0YV9saXN0Iiwibm9fZGF0YV9saXN0X3NlYXJjaCIsImxvYWRpbmciLCJob21lX3NlY3VyaXR5XzMiLCJob21lX3NlY3VyaXR5XzIiLCJob21lX3NlY3VyaXR5XzEiLCJob21lX3NlY3VyaXR5XzQiLCJob21lX3NlY3VyaXR5XzUiLCJob21lX3NlY3VyaXR5XzYiLCJ1cGxvYWQiLCJleHBvcnQiLCJleHBvcnRBbGwiLCJkYW5nZXJDb3VudFByZWZpeCIsImxhbmd1YWdlcyIsIkVOIiwiYXZhdGFyRXJyb3JGaWxlVHlwZSIsImF2YXRhckVycm9yRmlsZVNpemUiLCJhdmF0YXJFcnJvckZpbGVUeXBlU3VwcG9ydCIsIlBMIiwiZmF2b3VyaXRlc19tYWluIiwiX2h0bWwiLCJjdXJyZW50TGFuZ3VhZ2UiLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwiYXBpIiwiY29udGVudCIsImxvY2FscyIsImlzT2xkSUUiLCJCb29sZWFuIiwiYXRvYiIsImdldFRhcmdldCIsInN0eWxlVGFyZ2V0IiwicXVlcnlTZWxlY3RvciIsImNvbnRlbnREb2N1bWVudCIsInN0eWxlc0luRG9tIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwibW9kdWxlc1RvRG9tIiwiaWRDb3VudE1hcCIsImlkZW50aWZpZXJzIiwiaXRlbSIsImNzcyIsIm1lZGlhIiwic291cmNlTWFwIiwicmVmZXJlbmNlcyIsImFkZFN0eWxlIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwibm9uY2UiLCJpbnNlcnQiLCJ0ZXh0U3RvcmUiLCJyZXBsYWNlVGV4dCIsImFwcGx5VG9TaW5nbGV0b25UYWciLCJyZW1vdmUiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImNzc05vZGUiLCJjaGlsZE5vZGVzIiwiYXBwbHlUb1RhZyIsImJ0b2EiLCJ1bmVzY2FwZSIsInNpbmdsZXRvbiIsInNpbmdsZXRvbkNvdW50ZXIiLCJ1cGRhdGUiLCJzdHlsZUluZGV4IiwicmVtb3ZlU3R5bGVFbGVtZW50IiwibmV3T2JqIiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pbmRleCIsIl9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyIsInVzZVNvdXJjZU1hcCIsImNzc01hcHBpbmciLCJzb3VyY2VNYXBwaW5nIiwiYmFzZTY0Iiwic291cmNlVVJMcyIsInNvdXJjZXMiLCJzb3VyY2VSb290IiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsIm1lZGlhUXVlcnkiLCJkZWR1cGUiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIl0sIm1hcHBpbmdzIjoiYUFDRSxJQUFJQSxFQUFtQixHQUd2QixTQUFTQyxFQUFvQkMsR0FHNUIsR0FBR0YsRUFBaUJFLEdBQ25CLE9BQU9GLEVBQWlCRSxHQUFVQyxRQUduQyxJQUFJQyxFQUFTSixFQUFpQkUsR0FBWSxDQUN6Q0csRUFBR0gsRUFDSEksR0FBRyxFQUNISCxRQUFTLElBVVYsT0FOQUksRUFBUUwsR0FBVU0sS0FBS0osRUFBT0QsUUFBU0MsRUFBUUEsRUFBT0QsUUFBU0YsR0FHL0RHLEVBQU9FLEdBQUksRUFHSkYsRUFBT0QsUUFLZkYsRUFBb0JRLEVBQUlGLEVBR3hCTixFQUFvQlMsRUFBSVYsRUFHeEJDLEVBQW9CVSxFQUFJLFNBQVNSLEVBQVNTLEVBQU1DLEdBQzNDWixFQUFvQmEsRUFBRVgsRUFBU1MsSUFDbENHLE9BQU9DLGVBQWViLEVBQVNTLEVBQU0sQ0FBRUssWUFBWSxFQUFNQyxJQUFLTCxLQUtoRVosRUFBb0JrQixFQUFJLFNBQVNoQixHQUNYLG9CQUFYaUIsUUFBMEJBLE9BQU9DLGFBQzFDTixPQUFPQyxlQUFlYixFQUFTaUIsT0FBT0MsWUFBYSxDQUFFQyxNQUFPLFdBRTdEUCxPQUFPQyxlQUFlYixFQUFTLGFBQWMsQ0FBRW1CLE9BQU8sS0FRdkRyQixFQUFvQnNCLEVBQUksU0FBU0QsRUFBT0UsR0FFdkMsR0FEVSxFQUFQQSxJQUFVRixFQUFRckIsRUFBb0JxQixJQUMvQixFQUFQRSxFQUFVLE9BQU9GLEVBQ3BCLEdBQVcsRUFBUEUsR0FBOEIsaUJBQVZGLEdBQXNCQSxHQUFTQSxFQUFNRyxXQUFZLE9BQU9ILEVBQ2hGLElBQUlJLEVBQUtYLE9BQU9ZLE9BQU8sTUFHdkIs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QVEsS0FDUixFQUFRLEtBQ1IsRUFBUSxLQUNSLEVBQVEsS0FDUixFQUFRLEtBQ1IsRUFBUSxLQUNSLEVBQVEsS0FDUixFQUFRLEtBQ1IsRUFBUSxLQUNSLEVBQVEsS0FDUixFQUFRLEtBQ1IsRUFBUSxLQUNSLEVBQVEsS0FDUixFQUFRLEtBQ1IsRUFBUSxLQUNSLEVBQVEsS0FDUixFQUFRLEtBQ1IsRUFBUSxLQUNSLEVBQVEsS0FDUixFQUFRLEtBQ1IsRUFBUSxLQUNSLEVBQVEsS0FDUixFQUFRLEtBQ1IsRUFBUSxLQUNSLEVBQVEsS0FDUixFQUFRLEtBQ1IsRUFBUSxLQUNSLEVBQVEsS0FDUixFQUFRLEtBQ1IsRUFBUSxLQUNSLEVBQVEsS0FDUixFQUFRLEtBQ1IsRUFBUSxLQUNSLEVBQVEsS0FDUixFQUFRLElBQ1IsRUFBUSxLQUNSLEVBQVEsS0FDUixFQUFRLEtBQ1IsRUFBUSxLQUNSLEVBQVEsS0FDUixFQUFRLEtBQ1IsRUFBUSxLQUNSLEVBQVEsS0FDUixFQUFRLEtBQ1IsRUFBUSxLQUNSLEVBQVEsS0FDUixFQUFRLEtBQ1IsRUFBUSxLQUNSLEVBQVEsS0FDUixFQUFRLEtBQ1IsRUFBUSxLQUNSLEVBQVEsS0FDUixFQUFRLEtBQ1IsRUFBUSxLQUNSLEVBQVEsS0FDUixFQUFRLEtBQ1IsRUFBUSxLQUNSLEVBQVEsS0FDUixFQUFRLEtBQ1IsRUFBUSxLQUNSLEVBQVEsS0FDUixFQUFRLEtBQ1IsRUFBUSxLQUNSLEVBQVEsS0FDUixFQUFRLEtBQ1IsRUFBUSxLQUNSLEVBQVEsS0FDUixFQUFRLEtBQ1IsRUFBUSxLQUNSLEVBQVEsS0FDUixFQUFRLEtBQ1IsRUFBUSxLQUNSLEVBQVEsS0FDUixFQUFRLEtBQ1IsRUFBUSxLQUNSLEVBQVEsS0FDUixFQUFRLEtBQ1IsRUFBUSxLQUNSLEVBQVEsS0FDUixFQUFRLEtBQ1IsRUFBUSxLQUNSLEVBQVEsS0FDUixFQUFRLEtBQ1IsRUFBUSxLQUNSLEVBQVEsS0FDUixFQUFRLEtBQ1IsRUFBUSxLQUNSLEVBQVEsS0FDUixFQUFRLEtBQ1IsRUFBUSxLQUNSLEVB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ckUsSUFBbUI2N0UsRUFFYitCLEVBQ0Evd0UsRUFQSixNQUFPLENBQUM4dEUsR0FBUzM2RSxLQUFLLE1BdkVKZytFLENBQXVCdEMsRUFBTStCLEdBRTNDLE9BQUkvQixFQUFLLEdBQ0EsVUFBVW51RSxPQUFPbXVFLEVBQUssR0FBSSxNQUFNbnVFLE9BQU9vdEUsRUFBUyxLQUdsREEsS0FDTjM2RSxLQUFLLEtBS1YySSxFQUFLeE8sRUFBSSxTQUFVRSxFQUFTNGpGLEVBQVlDLEdBQ2YsaUJBQVo3akYsSUFFVEEsRUFBVSxDQUFDLENBQUMsS0FBTUEsRUFBUyxNQUc3QixJQUFJOGpGLEVBQXlCLEdBRTdCLEdBQUlELEVBQ0YsSUFBSyxJQUFJL2pGLEVBQUksRUFBR0EsRUFBSStGLEtBQUtZLE9BQVEzRyxJQUFLLENBRXBDLElBQUlzVSxFQUFLdk8sS0FBSy9GLEdBQUcsR0FFUCxNQUFOc1UsSUFDRjB2RSxFQUF1QjF2RSxJQUFNLEdBS25DLElBQUssSUFBSThLLEVBQUssRUFBR0EsRUFBS2xmLEVBQVF5RyxPQUFReVksSUFBTSxDQUMxQyxJQUFJbWlFLEVBQU8sR0FBR251RSxPQUFPbFQsRUFBUWtmLElBRXpCMmtFLEdBQVVDLEVBQXVCekMsRUFBSyxNQUt0Q3VDLElBQ0d2QyxFQUFLLEdBR1JBLEVBQUssR0FBSyxHQUFHbnVFLE9BQU8wd0UsRUFBWSxTQUFTMXdFLE9BQU9tdUUsRUFBSyxJQUZyREEsRUFBSyxHQUFLdUMsR0FNZHQxRSxFQUFLbEYsS0FBS2k0RSxNQUlQL3lFIiwiZmlsZSI6InByb2R1Y3Rpb24ubmluamEucHJvdGVjdGlvbi52NC43LjAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4gXHRcdH1cbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4gXHQvLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbiBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcbiBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4gXHRcdGlmKChtb2RlICYgNCkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG4gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShucywgJ2RlZmF1bHQnLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2YWx1ZSB9KTtcbiBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuIFx0XHRyZXR1cm4gbnM7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gMTMzKTtcbiIsInZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBjb3JlID0gcmVxdWlyZSgnLi9fY29yZScpO1xudmFyIGhpZGUgPSByZXF1aXJlKCcuL19oaWRlJyk7XG52YXIgcmVkZWZpbmUgPSByZXF1aXJlKCcuL19yZWRlZmluZScpO1xudmFyIGN0eCA9IHJlcXVpcmUoJy4vX2N0eCcpO1xudmFyIFBST1RPVFlQRSA9ICdwcm90b3R5cGUnO1xuXG52YXIgJGV4cG9ydCA9IGZ1bmN0aW9uICh0eXBlLCBuYW1lLCBzb3VyY2UpIHtcbiAgdmFyIElTX0ZPUkNFRCA9IHR5cGUgJiAkZXhwb3J0LkY7XG4gIHZhciBJU19HTE9CQUwgPSB0eXBlICYgJGV4cG9ydC5HO1xuICB2YXIgSVNfU1RBVElDID0gdHlwZSAmICRleHBvcnQuUztcbiAgdmFyIElTX1BST1RPID0gdHlwZSAmICRleHBvcnQuUDtcbiAgdmFyIElTX0JJTkQgPSB0eXBlICYgJGV4cG9ydC5CO1xuICB2YXIgdGFyZ2V0ID0gSVNfR0xPQkFMID8gZ2xvYmFsIDogSVNfU1RBVElDID8gZ2xvYmFsW25hbWVdIHx8IChnbG9iYWxbbmFtZV0gPSB7fSkgOiAoZ2xvYmFsW25hbWVdIHx8IHt9KVtQUk9UT1RZUEVdO1xuICB2YXIgZXhwb3J0cyA9IElTX0dMT0JBTCA/IGNvcmUgOiBjb3JlW25hbWVdIHx8IChjb3JlW25hbWVdID0ge30pO1xuICB2YXIgZXhwUHJvdG8gPSBleHBvcnRzW1BST1RPVFlQRV0gfHwgKGV4cG9ydHNbUFJPVE9UWVBFXSA9IHt9KTtcbiAgdmFyIGtleSwgb3duLCBvdXQsIGV4cDtcbiAgaWYgKElTX0dMT0JBTCkgc291cmNlID0gbmFtZTtcbiAgZm9yIChrZXkgaW4gc291cmNlKSB7XG4gICAgLy8gY29udGFpbnMgaW4gbmF0aXZlXG4gICAgb3duID0gIUlTX0ZPUkNFRCAmJiB0YXJnZXQgJiYgdGFyZ2V0W2tleV0gIT09IHVuZGVmaW5lZDtcbiAgICAvLyBleHBvcnQgbmF0aXZlIG9yIHBhc3NlZFxuICAgIG91dCA9IChvd24gPyB0YXJnZXQgOiBzb3VyY2UpW2tleV07XG4gICAgLy8gYmluZCB0aW1lcnMgdG8gZ2xvYmFsIGZvciBjYWxsIGZyb20gZXhwb3J0IGNvbnRleHRcbiAgICBleHAgPSBJU19CSU5EICYmIG93biA/IGN0eChvdXQsIGdsb2JhbCkgOiBJU19QUk9UTyAmJiB0eXBlb2Ygb3V0ID09ICdmdW5jdGlvbicgPyBjdHgoRnVuY3Rpb24uY2FsbCwgb3V0KSA6IG91dDtcbiAgICAvLyBleHRlbmQgZ2xvYmFsXG4gICAgaWYgKHRhcmdldCkgcmVkZWZpbmUodGFyZ2V0LCBrZXksIG91dCwgdHlwZSAmICRleHBvcnQuVSk7XG4gICAgLy8gZXhwb3J0XG4gICAgaWYgKGV4cG9ydHNba2V5XSAhPSBvdXQpIGhpZGUoZXhwb3J0cywga2V5LCBleHApO1xuICAgIGlmIChJU19QUk9UTyAmJiBleHBQcm90b1trZXldICE9IG91dCkgZXhwUHJvdG9ba2V5XSA9IG91dDtcbiAgfVxufTtcbmdsb2JhbC5jb3JlID0gY29yZTtcbi8vIHR5cGUgYml0bWFwXG4kZXhwb3J0LkYgPSAxOyAgIC8vIGZvcmNlZFxuJGV4cG9ydC5HID0gMjsgICAvLyBnbG9iYWxcbiRleHBvcnQuUyA9IDQ7ICAgLy8gc3RhdGljXG4kZXhwb3J0LlAgPSA4OyAgIC8vIHByb3RvXG4kZXhwb3J0LkIgPSAxNjsgIC8vIGJpbmRcbiRleHBvcnQuVyA9IDMyOyAgLy8gd3JhcFxuJGV4cG9ydC5VID0gNjQ7ICAvLyBzYWZlXG4kZXhwb3J0LlIgPSAxMjg7IC8vIHJlYWwgcHJvdG8gbWV0aG9kIGZvciBgbGlicmFyeWBcbm1vZHVsZS5leHBvcnRzID0gJGV4cG9ydDtcbiIsInZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgaWYgKCFpc09iamVjdChpdCkpIHRocm93IFR5cGVFcnJvcihpdCArICcgaXMgbm90IGFuIG9iamVjdCEnKTtcbiAgcmV0dXJuIGl0O1xufTtcbiIsIi8vIGh0dHBzOi8vZ2l0aHViLmNvbS96bG9pcm9jay9jb3JlLWpzL2lzc3Vlcy84NiNpc3N1ZWNvbW1lbnQtMTE1NzU5MDI4XG52YXIgZ2xvYmFsID0gbW9kdWxlLmV4cG9ydHMgPSB0eXBlb2Ygd2luZG93ICE9ICd1bmRlZmluZWQnICYmIHdpbmRvdy5NYXRoID09IE1hdGhcbiAgPyB3aW5kb3cgOiB0eXBlb2Ygc2VsZiAhPSAndW5kZWZpbmVkJyAmJiBzZWxmLk1hdGggPT0gTWF0aCA/IHNlbGZcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLW5ldy1mdW5jXG4gIDogRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcbmlmICh0eXBlb2YgX19nID09ICdudW1iZXInKSBfX2cgPSBnbG9iYWw7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW5kZWZcbiIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGV4ZWMpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gISFleGVjKCk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxufTtcbiIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiB0eXBlb2YgaXQgPT09ICdvYmplY3QnID8gaXQgIT09IG51bGwgOiB0eXBlb2YgaXQgPT09ICdmdW5jdGlvbic7XG59O1xuIiwidmFyIHN0b3JlID0gcmVxdWlyZSgnLi9fc2hhcmVkJykoJ3drcycpO1xudmFyIHVpZCA9IHJlcXVpcmUoJy4vX3VpZCcpO1xudmFyIFN5bWJvbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpLlN5bWJvbDtcbnZhciBVU0VfU1lNQk9MID0gdHlwZW9mIFN5bWJvbCA9PSAnZnVuY3Rpb24nO1xuXG52YXIgJGV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChuYW1lKSB7XG4gIHJldHVybiBzdG9yZVtuYW1lXSB8fCAoc3RvcmVbbmFtZV0gPVxuICAgIFVTRV9TWU1CT0wgJiYgU3ltYm9sW25hbWVdIHx8IChVU0VfU1lNQk9MID8gU3ltYm9sIDogdWlkKSgnU3ltYm9sLicgKyBuYW1lKSk7XG59O1xuXG4kZXhwb3J0cy5zdG9yZSA9IHN0b3JlO1xuIiwiLy8gNy4xLjE1IFRvTGVuZ3RoXG52YXIgdG9JbnRlZ2VyID0gcmVxdWlyZSgnLi9fdG8taW50ZWdlcicpO1xudmFyIG1pbiA9IE1hdGgubWluO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIGl0ID4gMCA/IG1pbih0b0ludGVnZXIoaXQpLCAweDFmZmZmZmZmZmZmZmZmKSA6IDA7IC8vIHBvdygyLCA1MykgLSAxID09IDkwMDcxOTkyNTQ3NDA5OTFcbn07XG4iLCIvLyBUaGFuaydzIElFOCBmb3IgaGlzIGZ1bm55IGRlZmluZVByb3BlcnR5XG5tb2R1bGUuZXhwb3J0cyA9ICFyZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh7fSwgJ2EnLCB7IGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gNzsgfSB9KS5hICE9IDc7XG59KTtcbiIsInZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIElFOF9ET01fREVGSU5FID0gcmVxdWlyZSgnLi9faWU4LWRvbS1kZWZpbmUnKTtcbnZhciB0b1ByaW1pdGl2ZSA9IHJlcXVpcmUoJy4vX3RvLXByaW1pdGl2ZScpO1xudmFyIGRQID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xuXG5leHBvcnRzLmYgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpID8gT2JqZWN0LmRlZmluZVByb3BlcnR5IDogZnVuY3Rpb24gZGVmaW5lUHJvcGVydHkoTywgUCwgQXR0cmlidXRlcykge1xuICBhbk9iamVjdChPKTtcbiAgUCA9IHRvUHJpbWl0aXZlKFAsIHRydWUpO1xuICBhbk9iamVjdChBdHRyaWJ1dGVzKTtcbiAgaWYgKElFOF9ET01fREVGSU5FKSB0cnkge1xuICAgIHJldHVybiBkUChPLCBQLCBBdHRyaWJ1dGVzKTtcbiAgfSBjYXRjaCAoZSkgeyAvKiBlbXB0eSAqLyB9XG4gIGlmICgnZ2V0JyBpbiBBdHRyaWJ1dGVzIHx8ICdzZXQnIGluIEF0dHJpYnV0ZXMpIHRocm93IFR5cGVFcnJvcignQWNjZXNzb3JzIG5vdCBzdXBwb3J0ZWQhJyk7XG4gIGlmICgndmFsdWUnIGluIEF0dHJpYnV0ZXMpIE9bUF0gPSBBdHRyaWJ1dGVzLnZhbHVlO1xuICByZXR1cm4gTztcbn07XG4iLCIvLyA3LjEuMTMgVG9PYmplY3QoYXJndW1lbnQpXG52YXIgZGVmaW5lZCA9IHJlcXVpcmUoJy4vX2RlZmluZWQnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBPYmplY3QoZGVmaW5lZChpdCkpO1xufTtcbiIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIGlmICh0eXBlb2YgaXQgIT0gJ2Z1bmN0aW9uJykgdGhyb3cgVHlwZUVycm9yKGl0ICsgJyBpcyBub3QgYSBmdW5jdGlvbiEnKTtcbiAgcmV0dXJuIGl0O1xufTtcbiIsInZhciBkUCA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpO1xudmFyIGNyZWF0ZURlc2MgPSByZXF1aXJlKCcuL19wcm9wZXJ0eS1kZXNjJyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgPyBmdW5jdGlvbiAob2JqZWN0LCBrZXksIHZhbHVlKSB7XG4gIHJldHVybiBkUC5mKG9iamVjdCwga2V5LCBjcmVhdGVEZXNjKDEsIHZhbHVlKSk7XG59IDogZnVuY3Rpb24gKG9iamVjdCwga2V5LCB2YWx1ZSkge1xuICBvYmplY3Rba2V5XSA9IHZhbHVlO1xuICByZXR1cm4gb2JqZWN0O1xufTtcbiIsInZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBoaWRlID0gcmVxdWlyZSgnLi9faGlkZScpO1xudmFyIGhhcyA9IHJlcXVpcmUoJy4vX2hhcycpO1xudmFyIFNSQyA9IHJlcXVpcmUoJy4vX3VpZCcpKCdzcmMnKTtcbnZhciAkdG9TdHJpbmcgPSByZXF1aXJlKCcuL19mdW5jdGlvbi10by1zdHJpbmcnKTtcbnZhciBUT19TVFJJTkcgPSAndG9TdHJpbmcnO1xudmFyIFRQTCA9ICgnJyArICR0b1N0cmluZykuc3BsaXQoVE9fU1RSSU5HKTtcblxucmVxdWlyZSgnLi9fY29yZScpLmluc3BlY3RTb3VyY2UgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuICR0b1N0cmluZy5jYWxsKGl0KTtcbn07XG5cbihtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChPLCBrZXksIHZhbCwgc2FmZSkge1xuICB2YXIgaXNGdW5jdGlvbiA9IHR5cGVvZiB2YWwgPT0gJ2Z1bmN0aW9uJztcbiAgaWYgKGlzRnVuY3Rpb24pIGhhcyh2YWwsICduYW1lJykgfHwgaGlkZSh2YWwsICduYW1lJywga2V5KTtcbiAgaWYgKE9ba2V5XSA9PT0gdmFsKSByZXR1cm47XG4gIGlmIChpc0Z1bmN0aW9uKSBoYXModmFsLCBTUkMpIHx8IGhpZGUodmFsLCBTUkMsIE9ba2V5XSA/ICcnICsgT1trZXldIDogVFBMLmpvaW4oU3RyaW5nKGtleSkpKTtcbiAgaWYgKE8gPT09IGdsb2JhbCkge1xuICAgIE9ba2V5XSA9IHZhbDtcbiAgfSBlbHNlIGlmICghc2FmZSkge1xuICAgIGRlbGV0ZSBPW2tleV07XG4gICAgaGlkZShPLCBrZXksIHZhbCk7XG4gIH0gZWxzZSBpZiAoT1trZXldKSB7XG4gICAgT1trZXldID0gdmFsO1xuICB9IGVsc2Uge1xuICAgIGhpZGUoTywga2V5LCB2YWwpO1xuICB9XG4vLyBhZGQgZmFrZSBGdW5jdGlvbiN0b1N0cmluZyBmb3IgY29ycmVjdCB3b3JrIHdyYXBwZWQgbWV0aG9kcyAvIGNvbnN0cnVjdG9ycyB3aXRoIG1ldGhvZHMgbGlrZSBMb0Rhc2ggaXNOYXRpdmVcbn0pKEZ1bmN0aW9uLnByb3RvdHlwZSwgVE9fU1RSSU5HLCBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgcmV0dXJuIHR5cGVvZiB0aGlzID09ICdmdW5jdGlvbicgJiYgdGhpc1tTUkNdIHx8ICR0b1N0cmluZy5jYWxsKHRoaXMpO1xufSk7XG4iLCJ2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi9fZmFpbHMnKTtcbnZhciBkZWZpbmVkID0gcmVxdWlyZSgnLi9fZGVmaW5lZCcpO1xudmFyIHF1b3QgPSAvXCIvZztcbi8vIEIuMi4zLjIuMSBDcmVhdGVIVE1MKHN0cmluZywgdGFnLCBhdHRyaWJ1dGUsIHZhbHVlKVxudmFyIGNyZWF0ZUhUTUwgPSBmdW5jdGlvbiAoc3RyaW5nLCB0YWcsIGF0dHJpYnV0ZSwgdmFsdWUpIHtcbiAgdmFyIFMgPSBTdHJpbmcoZGVmaW5lZChzdHJpbmcpKTtcbiAgdmFyIHAxID0gJzwnICsgdGFnO1xuICBpZiAoYXR0cmlidXRlICE9PSAnJykgcDEgKz0gJyAnICsgYXR0cmlidXRlICsgJz1cIicgKyBTdHJpbmcodmFsdWUpLnJlcGxhY2UocXVvdCwgJyZxdW90OycpICsgJ1wiJztcbiAgcmV0dXJuIHAxICsgJz4nICsgUyArICc8LycgKyB0YWcgKyAnPic7XG59O1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoTkFNRSwgZXhlYykge1xuICB2YXIgTyA9IHt9O1xuICBPW05BTUVdID0gZXhlYyhjcmVhdGVIVE1MKTtcbiAgJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiBmYWlscyhmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHRlc3QgPSAnJ1tOQU1FXSgnXCInKTtcbiAgICByZXR1cm4gdGVzdCAhPT0gdGVzdC50b0xvd2VyQ2FzZSgpIHx8IHRlc3Quc3BsaXQoJ1wiJykubGVuZ3RoID4gMztcbiAgfSksICdTdHJpbmcnLCBPKTtcbn07XG4iLCJ2YXIgaGFzT3duUHJvcGVydHkgPSB7fS5oYXNPd25Qcm9wZXJ0eTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0LCBrZXkpIHtcbiAgcmV0dXJuIGhhc093blByb3BlcnR5LmNhbGwoaXQsIGtleSk7XG59O1xuIiwiLy8gdG8gaW5kZXhlZCBvYmplY3QsIHRvT2JqZWN0IHdpdGggZmFsbGJhY2sgZm9yIG5vbi1hcnJheS1saWtlIEVTMyBzdHJpbmdzXG52YXIgSU9iamVjdCA9IHJlcXVpcmUoJy4vX2lvYmplY3QnKTtcbnZhciBkZWZpbmVkID0gcmVxdWlyZSgnLi9fZGVmaW5lZCcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIElPYmplY3QoZGVmaW5lZChpdCkpO1xufTtcbiIsInZhciBwSUUgPSByZXF1aXJlKCcuL19vYmplY3QtcGllJyk7XG52YXIgY3JlYXRlRGVzYyA9IHJlcXVpcmUoJy4vX3Byb3BlcnR5LWRlc2MnKTtcbnZhciB0b0lPYmplY3QgPSByZXF1aXJlKCcuL190by1pb2JqZWN0Jyk7XG52YXIgdG9QcmltaXRpdmUgPSByZXF1aXJlKCcuL190by1wcmltaXRpdmUnKTtcbnZhciBoYXMgPSByZXF1aXJlKCcuL19oYXMnKTtcbnZhciBJRThfRE9NX0RFRklORSA9IHJlcXVpcmUoJy4vX2llOC1kb20tZGVmaW5lJyk7XG52YXIgZ09QRCA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XG5cbmV4cG9ydHMuZiA9IHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgPyBnT1BEIDogZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE8sIFApIHtcbiAgTyA9IHRvSU9iamVjdChPKTtcbiAgUCA9IHRvUHJpbWl0aXZlKFAsIHRydWUpO1xuICBpZiAoSUU4X0RPTV9ERUZJTkUpIHRyeSB7XG4gICAgcmV0dXJuIGdPUEQoTywgUCk7XG4gIH0gY2F0Y2ggKGUpIHsgLyogZW1wdHkgKi8gfVxuICBpZiAoaGFzKE8sIFApKSByZXR1cm4gY3JlYXRlRGVzYyghcElFLmYuY2FsbChPLCBQKSwgT1tQXSk7XG59O1xuIiwiLy8gMTkuMS4yLjkgLyAxNS4yLjMuMiBPYmplY3QuZ2V0UHJvdG90eXBlT2YoTylcbnZhciBoYXMgPSByZXF1aXJlKCcuL19oYXMnKTtcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpO1xudmFyIElFX1BST1RPID0gcmVxdWlyZSgnLi9fc2hhcmVkLWtleScpKCdJRV9QUk9UTycpO1xudmFyIE9iamVjdFByb3RvID0gT2JqZWN0LnByb3RvdHlwZTtcblxubW9kdWxlLmV4cG9ydHMgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2YgfHwgZnVuY3Rpb24gKE8pIHtcbiAgTyA9IHRvT2JqZWN0KE8pO1xuICBpZiAoaGFzKE8sIElFX1BST1RPKSkgcmV0dXJuIE9bSUVfUFJPVE9dO1xuICBpZiAodHlwZW9mIE8uY29uc3RydWN0b3IgPT0gJ2Z1bmN0aW9uJyAmJiBPIGluc3RhbmNlb2YgTy5jb25zdHJ1Y3Rvcikge1xuICAgIHJldHVybiBPLmNvbnN0cnVjdG9yLnByb3RvdHlwZTtcbiAgfSByZXR1cm4gTyBpbnN0YW5jZW9mIE9iamVjdCA/IE9iamVjdFByb3RvIDogbnVsbDtcbn07XG4iLCJ2YXIgY29yZSA9IG1vZHVsZS5leHBvcnRzID0geyB2ZXJzaW9uOiAnMi42LjExJyB9O1xuaWYgKHR5cGVvZiBfX2UgPT0gJ251bWJlcicpIF9fZSA9IGNvcmU7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW5kZWZcbiIsIi8vIG9wdGlvbmFsIC8gc2ltcGxlIGNvbnRleHQgYmluZGluZ1xudmFyIGFGdW5jdGlvbiA9IHJlcXVpcmUoJy4vX2EtZnVuY3Rpb24nKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGZuLCB0aGF0LCBsZW5ndGgpIHtcbiAgYUZ1bmN0aW9uKGZuKTtcbiAgaWYgKHRoYXQgPT09IHVuZGVmaW5lZCkgcmV0dXJuIGZuO1xuICBzd2l0Y2ggKGxlbmd0aCkge1xuICAgIGNhc2UgMTogcmV0dXJuIGZ1bmN0aW9uIChhKSB7XG4gICAgICByZXR1cm4gZm4uY2FsbCh0aGF0LCBhKTtcbiAgICB9O1xuICAgIGNhc2UgMjogcmV0dXJuIGZ1bmN0aW9uIChhLCBiKSB7XG4gICAgICByZXR1cm4gZm4uY2FsbCh0aGF0LCBhLCBiKTtcbiAgICB9O1xuICAgIGNhc2UgMzogcmV0dXJuIGZ1bmN0aW9uIChhLCBiLCBjKSB7XG4gICAgICByZXR1cm4gZm4uY2FsbCh0aGF0LCBhLCBiLCBjKTtcbiAgICB9O1xuICB9XG4gIHJldHVybiBmdW5jdGlvbiAoLyogLi4uYXJncyAqLykge1xuICAgIHJldHVybiBmbi5hcHBseSh0aGF0LCBhcmd1bWVudHMpO1xuICB9O1xufTtcbiIsInZhciB0b1N0cmluZyA9IHt9LnRvU3RyaW5nO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gdG9TdHJpbmcuY2FsbChpdCkuc2xpY2UoOCwgLTEpO1xufTtcbiIsIi8vIDcuMS40IFRvSW50ZWdlclxudmFyIGNlaWwgPSBNYXRoLmNlaWw7XG52YXIgZmxvb3IgPSBNYXRoLmZsb29yO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIGlzTmFOKGl0ID0gK2l0KSA/IDAgOiAoaXQgPiAwID8gZmxvb3IgOiBjZWlsKShpdCk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi9fZmFpbHMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobWV0aG9kLCBhcmcpIHtcbiAgcmV0dXJuICEhbWV0aG9kICYmIGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdXNlbGVzcy1jYWxsXG4gICAgYXJnID8gbWV0aG9kLmNhbGwobnVsbCwgZnVuY3Rpb24gKCkgeyAvKiBlbXB0eSAqLyB9LCAxKSA6IG1ldGhvZC5jYWxsKG51bGwpO1xuICB9KTtcbn07XG4iLCIvLyA3LjEuMSBUb1ByaW1pdGl2ZShpbnB1dCBbLCBQcmVmZXJyZWRUeXBlXSlcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xuLy8gaW5zdGVhZCBvZiB0aGUgRVM2IHNwZWMgdmVyc2lvbiwgd2UgZGlkbid0IGltcGxlbWVudCBAQHRvUHJpbWl0aXZlIGNhc2Vcbi8vIGFuZCB0aGUgc2Vjb25kIGFyZ3VtZW50IC0gZmxhZyAtIHByZWZlcnJlZCB0eXBlIGlzIGEgc3RyaW5nXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCwgUykge1xuICBpZiAoIWlzT2JqZWN0KGl0KSkgcmV0dXJuIGl0O1xuICB2YXIgZm4sIHZhbDtcbiAgaWYgKFMgJiYgdHlwZW9mIChmbiA9IGl0LnRvU3RyaW5nKSA9PSAnZnVuY3Rpb24nICYmICFpc09iamVjdCh2YWwgPSBmbi5jYWxsKGl0KSkpIHJldHVybiB2YWw7XG4gIGlmICh0eXBlb2YgKGZuID0gaXQudmFsdWVPZikgPT0gJ2Z1bmN0aW9uJyAmJiAhaXNPYmplY3QodmFsID0gZm4uY2FsbChpdCkpKSByZXR1cm4gdmFsO1xuICBpZiAoIVMgJiYgdHlwZW9mIChmbiA9IGl0LnRvU3RyaW5nKSA9PSAnZnVuY3Rpb24nICYmICFpc09iamVjdCh2YWwgPSBmbi5jYWxsKGl0KSkpIHJldHVybiB2YWw7XG4gIHRocm93IFR5cGVFcnJvcihcIkNhbid0IGNvbnZlcnQgb2JqZWN0IHRvIHByaW1pdGl2ZSB2YWx1ZVwiKTtcbn07XG4iLCIvLyA3LjIuMSBSZXF1aXJlT2JqZWN0Q29lcmNpYmxlKGFyZ3VtZW50KVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgaWYgKGl0ID09IHVuZGVmaW5lZCkgdGhyb3cgVHlwZUVycm9yKFwiQ2FuJ3QgY2FsbCBtZXRob2Qgb24gIFwiICsgaXQpO1xuICByZXR1cm4gaXQ7XG59O1xuIiwiLy8gbW9zdCBPYmplY3QgbWV0aG9kcyBieSBFUzYgc2hvdWxkIGFjY2VwdCBwcmltaXRpdmVzXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGNvcmUgPSByZXF1aXJlKCcuL19jb3JlJyk7XG52YXIgZmFpbHMgPSByZXF1aXJlKCcuL19mYWlscycpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoS0VZLCBleGVjKSB7XG4gIHZhciBmbiA9IChjb3JlLk9iamVjdCB8fCB7fSlbS0VZXSB8fCBPYmplY3RbS0VZXTtcbiAgdmFyIGV4cCA9IHt9O1xuICBleHBbS0VZXSA9IGV4ZWMoZm4pO1xuICAkZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqIGZhaWxzKGZ1bmN0aW9uICgpIHsgZm4oMSk7IH0pLCAnT2JqZWN0JywgZXhwKTtcbn07XG4iLCIvLyAwIC0+IEFycmF5I2ZvckVhY2hcbi8vIDEgLT4gQXJyYXkjbWFwXG4vLyAyIC0+IEFycmF5I2ZpbHRlclxuLy8gMyAtPiBBcnJheSNzb21lXG4vLyA0IC0+IEFycmF5I2V2ZXJ5XG4vLyA1IC0+IEFycmF5I2ZpbmRcbi8vIDYgLT4gQXJyYXkjZmluZEluZGV4XG52YXIgY3R4ID0gcmVxdWlyZSgnLi9fY3R4Jyk7XG52YXIgSU9iamVjdCA9IHJlcXVpcmUoJy4vX2lvYmplY3QnKTtcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpO1xudmFyIHRvTGVuZ3RoID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJyk7XG52YXIgYXNjID0gcmVxdWlyZSgnLi9fYXJyYXktc3BlY2llcy1jcmVhdGUnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKFRZUEUsICRjcmVhdGUpIHtcbiAgdmFyIElTX01BUCA9IFRZUEUgPT0gMTtcbiAgdmFyIElTX0ZJTFRFUiA9IFRZUEUgPT0gMjtcbiAgdmFyIElTX1NPTUUgPSBUWVBFID09IDM7XG4gIHZhciBJU19FVkVSWSA9IFRZUEUgPT0gNDtcbiAgdmFyIElTX0ZJTkRfSU5ERVggPSBUWVBFID09IDY7XG4gIHZhciBOT19IT0xFUyA9IFRZUEUgPT0gNSB8fCBJU19GSU5EX0lOREVYO1xuICB2YXIgY3JlYXRlID0gJGNyZWF0ZSB8fCBhc2M7XG4gIHJldHVybiBmdW5jdGlvbiAoJHRoaXMsIGNhbGxiYWNrZm4sIHRoYXQpIHtcbiAgICB2YXIgTyA9IHRvT2JqZWN0KCR0aGlzKTtcbiAgICB2YXIgc2VsZiA9IElPYmplY3QoTyk7XG4gICAgdmFyIGYgPSBjdHgoY2FsbGJhY2tmbiwgdGhhdCwgMyk7XG4gICAgdmFyIGxlbmd0aCA9IHRvTGVuZ3RoKHNlbGYubGVuZ3RoKTtcbiAgICB2YXIgaW5kZXggPSAwO1xuICAgIHZhciByZXN1bHQgPSBJU19NQVAgPyBjcmVhdGUoJHRoaXMsIGxlbmd0aCkgOiBJU19GSUxURVIgPyBjcmVhdGUoJHRoaXMsIDApIDogdW5kZWZpbmVkO1xuICAgIHZhciB2YWwsIHJlcztcbiAgICBmb3IgKDtsZW5ndGggPiBpbmRleDsgaW5kZXgrKykgaWYgKE5PX0hPTEVTIHx8IGluZGV4IGluIHNlbGYpIHtcbiAgICAgIHZhbCA9IHNlbGZbaW5kZXhdO1xuICAgICAgcmVzID0gZih2YWwsIGluZGV4LCBPKTtcbiAgICAgIGlmIChUWVBFKSB7XG4gICAgICAgIGlmIChJU19NQVApIHJlc3VsdFtpbmRleF0gPSByZXM7ICAgLy8gbWFwXG4gICAgICAgIGVsc2UgaWYgKHJlcykgc3dpdGNoIChUWVBFKSB7XG4gICAgICAgICAgY2FzZSAzOiByZXR1cm4gdHJ1ZTsgICAgICAgICAgICAgLy8gc29tZVxuICAgICAgICAgIGNhc2UgNTogcmV0dXJuIHZhbDsgICAgICAgICAgICAgIC8vIGZpbmRcbiAgICAgICAgICBjYXNlIDY6IHJldHVybiBpbmRleDsgICAgICAgICAgICAvLyBmaW5kSW5kZXhcbiAgICAgICAgICBjYXNlIDI6IHJlc3VsdC5wdXNoKHZhbCk7ICAgICAgICAvLyBmaWx0ZXJcbiAgICAgICAgfSBlbHNlIGlmIChJU19FVkVSWSkgcmV0dXJuIGZhbHNlOyAvLyBldmVyeVxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gSVNfRklORF9JTkRFWCA/IC0xIDogSVNfU09NRSB8fCBJU19FVkVSWSA/IElTX0VWRVJZIDogcmVzdWx0O1xuICB9O1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbmlmIChyZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpKSB7XG4gIHZhciBMSUJSQVJZID0gcmVxdWlyZSgnLi9fbGlicmFyeScpO1xuICB2YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG4gIHZhciBmYWlscyA9IHJlcXVpcmUoJy4vX2ZhaWxzJyk7XG4gIHZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG4gIHZhciAkdHlwZWQgPSByZXF1aXJlKCcuL190eXBlZCcpO1xuICB2YXIgJGJ1ZmZlciA9IHJlcXVpcmUoJy4vX3R5cGVkLWJ1ZmZlcicpO1xuICB2YXIgY3R4ID0gcmVxdWlyZSgnLi9fY3R4Jyk7XG4gIHZhciBhbkluc3RhbmNlID0gcmVxdWlyZSgnLi9fYW4taW5zdGFuY2UnKTtcbiAgdmFyIHByb3BlcnR5RGVzYyA9IHJlcXVpcmUoJy4vX3Byb3BlcnR5LWRlc2MnKTtcbiAgdmFyIGhpZGUgPSByZXF1aXJlKCcuL19oaWRlJyk7XG4gIHZhciByZWRlZmluZUFsbCA9IHJlcXVpcmUoJy4vX3JlZGVmaW5lLWFsbCcpO1xuICB2YXIgdG9JbnRlZ2VyID0gcmVxdWlyZSgnLi9fdG8taW50ZWdlcicpO1xuICB2YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcbiAgdmFyIHRvSW5kZXggPSByZXF1aXJlKCcuL190by1pbmRleCcpO1xuICB2YXIgdG9BYnNvbHV0ZUluZGV4ID0gcmVxdWlyZSgnLi9fdG8tYWJzb2x1dGUtaW5kZXgnKTtcbiAgdmFyIHRvUHJpbWl0aXZlID0gcmVxdWlyZSgnLi9fdG8tcHJpbWl0aXZlJyk7XG4gIHZhciBoYXMgPSByZXF1aXJlKCcuL19oYXMnKTtcbiAgdmFyIGNsYXNzb2YgPSByZXF1aXJlKCcuL19jbGFzc29mJyk7XG4gIHZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xuICB2YXIgdG9PYmplY3QgPSByZXF1aXJlKCcuL190by1vYmplY3QnKTtcbiAgdmFyIGlzQXJyYXlJdGVyID0gcmVxdWlyZSgnLi9faXMtYXJyYXktaXRlcicpO1xuICB2YXIgY3JlYXRlID0gcmVxdWlyZSgnLi9fb2JqZWN0LWNyZWF0ZScpO1xuICB2YXIgZ2V0UHJvdG90eXBlT2YgPSByZXF1aXJlKCcuL19vYmplY3QtZ3BvJyk7XG4gIHZhciBnT1BOID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcG4nKS5mO1xuICB2YXIgZ2V0SXRlckZuID0gcmVxdWlyZSgnLi9jb3JlLmdldC1pdGVyYXRvci1tZXRob2QnKTtcbiAgdmFyIHVpZCA9IHJlcXVpcmUoJy4vX3VpZCcpO1xuICB2YXIgd2tzID0gcmVxdWlyZSgnLi9fd2tzJyk7XG4gIHZhciBjcmVhdGVBcnJheU1ldGhvZCA9IHJlcXVpcmUoJy4vX2FycmF5LW1ldGhvZHMnKTtcbiAgdmFyIGNyZWF0ZUFycmF5SW5jbHVkZXMgPSByZXF1aXJlKCcuL19hcnJheS1pbmNsdWRlcycpO1xuICB2YXIgc3BlY2llc0NvbnN0cnVjdG9yID0gcmVxdWlyZSgnLi9fc3BlY2llcy1jb25zdHJ1Y3RvcicpO1xuICB2YXIgQXJyYXlJdGVyYXRvcnMgPSByZXF1aXJlKCcuL2VzNi5hcnJheS5pdGVyYXRvcicpO1xuICB2YXIgSXRlcmF0b3JzID0gcmVxdWlyZSgnLi9faXRlcmF0b3JzJyk7XG4gIHZhciAkaXRlckRldGVjdCA9IHJlcXVpcmUoJy4vX2l0ZXItZGV0ZWN0Jyk7XG4gIHZhciBzZXRTcGVjaWVzID0gcmVxdWlyZSgnLi9fc2V0LXNwZWNpZXMnKTtcbiAgdmFyIGFycmF5RmlsbCA9IHJlcXVpcmUoJy4vX2FycmF5LWZpbGwnKTtcbiAgdmFyIGFycmF5Q29weVdpdGhpbiA9IHJlcXVpcmUoJy4vX2FycmF5LWNvcHktd2l0aGluJyk7XG4gIHZhciAkRFAgPSByZXF1aXJlKCcuL19vYmplY3QtZHAnKTtcbiAgdmFyICRHT1BEID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcGQnKTtcbiAgdmFyIGRQID0gJERQLmY7XG4gIHZhciBnT1BEID0gJEdPUEQuZjtcbiAgdmFyIFJhbmdlRXJyb3IgPSBnbG9iYWwuUmFuZ2VFcnJvcjtcbiAgdmFyIFR5cGVFcnJvciA9IGdsb2JhbC5UeXBlRXJyb3I7XG4gIHZhciBVaW50OEFycmF5ID0gZ2xvYmFsLlVpbnQ4QXJyYXk7XG4gIHZhciBBUlJBWV9CVUZGRVIgPSAnQXJyYXlCdWZmZXInO1xuICB2YXIgU0hBUkVEX0JVRkZFUiA9ICdTaGFyZWQnICsgQVJSQVlfQlVGRkVSO1xuICB2YXIgQllURVNfUEVSX0VMRU1FTlQgPSAnQllURVNfUEVSX0VMRU1FTlQnO1xuICB2YXIgUFJPVE9UWVBFID0gJ3Byb3RvdHlwZSc7XG4gIHZhciBBcnJheVByb3RvID0gQXJyYXlbUFJPVE9UWVBFXTtcbiAgdmFyICRBcnJheUJ1ZmZlciA9ICRidWZmZXIuQXJyYXlCdWZmZXI7XG4gIHZhciAkRGF0YVZpZXcgPSAkYnVmZmVyLkRhdGFWaWV3O1xuICB2YXIgYXJyYXlGb3JFYWNoID0gY3JlYXRlQXJyYXlNZXRob2QoMCk7XG4gIHZhciBhcnJheUZpbHRlciA9IGNyZWF0ZUFycmF5TWV0aG9kKDIpO1xuICB2YXIgYXJyYXlTb21lID0gY3JlYXRlQXJyYXlNZXRob2QoMyk7XG4gIHZhciBhcnJheUV2ZXJ5ID0gY3JlYXRlQXJyYXlNZXRob2QoNCk7XG4gIHZhciBhcnJheUZpbmQgPSBjcmVhdGVBcnJheU1ldGhvZCg1KTtcbiAgdmFyIGFycmF5RmluZEluZGV4ID0gY3JlYXRlQXJyYXlNZXRob2QoNik7XG4gIHZhciBhcnJheUluY2x1ZGVzID0gY3JlYXRlQXJyYXlJbmNsdWRlcyh0cnVlKTtcbiAgdmFyIGFycmF5SW5kZXhPZiA9IGNyZWF0ZUFycmF5SW5jbHVkZXMoZmFsc2UpO1xuICB2YXIgYXJyYXlWYWx1ZXMgPSBBcnJheUl0ZXJhdG9ycy52YWx1ZXM7XG4gIHZhciBhcnJheUtleXMgPSBBcnJheUl0ZXJhdG9ycy5rZXlzO1xuICB2YXIgYXJyYXlFbnRyaWVzID0gQXJyYXlJdGVyYXRvcnMuZW50cmllcztcbiAgdmFyIGFycmF5TGFzdEluZGV4T2YgPSBBcnJheVByb3RvLmxhc3RJbmRleE9mO1xuICB2YXIgYXJyYXlSZWR1Y2UgPSBBcnJheVByb3RvLnJlZHVjZTtcbiAgdmFyIGFycmF5UmVkdWNlUmlnaHQgPSBBcnJheVByb3RvLnJlZHVjZVJpZ2h0O1xuICB2YXIgYXJyYXlKb2luID0gQXJyYXlQcm90by5qb2luO1xuICB2YXIgYXJyYXlTb3J0ID0gQXJyYXlQcm90by5zb3J0O1xuICB2YXIgYXJyYXlTbGljZSA9IEFycmF5UHJvdG8uc2xpY2U7XG4gIHZhciBhcnJheVRvU3RyaW5nID0gQXJyYXlQcm90by50b1N0cmluZztcbiAgdmFyIGFycmF5VG9Mb2NhbGVTdHJpbmcgPSBBcnJheVByb3RvLnRvTG9jYWxlU3RyaW5nO1xuICB2YXIgSVRFUkFUT1IgPSB3a3MoJ2l0ZXJhdG9yJyk7XG4gIHZhciBUQUcgPSB3a3MoJ3RvU3RyaW5nVGFnJyk7XG4gIHZhciBUWVBFRF9DT05TVFJVQ1RPUiA9IHVpZCgndHlwZWRfY29uc3RydWN0b3InKTtcbiAgdmFyIERFRl9DT05TVFJVQ1RPUiA9IHVpZCgnZGVmX2NvbnN0cnVjdG9yJyk7XG4gIHZhciBBTExfQ09OU1RSVUNUT1JTID0gJHR5cGVkLkNPTlNUUjtcbiAgdmFyIFRZUEVEX0FSUkFZID0gJHR5cGVkLlRZUEVEO1xuICB2YXIgVklFVyA9ICR0eXBlZC5WSUVXO1xuICB2YXIgV1JPTkdfTEVOR1RIID0gJ1dyb25nIGxlbmd0aCEnO1xuXG4gIHZhciAkbWFwID0gY3JlYXRlQXJyYXlNZXRob2QoMSwgZnVuY3Rpb24gKE8sIGxlbmd0aCkge1xuICAgIHJldHVybiBhbGxvY2F0ZShzcGVjaWVzQ29uc3RydWN0b3IoTywgT1tERUZfQ09OU1RSVUNUT1JdKSwgbGVuZ3RoKTtcbiAgfSk7XG5cbiAgdmFyIExJVFRMRV9FTkRJQU4gPSBmYWlscyhmdW5jdGlvbiAoKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmXG4gICAgcmV0dXJuIG5ldyBVaW50OEFycmF5KG5ldyBVaW50MTZBcnJheShbMV0pLmJ1ZmZlcilbMF0gPT09IDE7XG4gIH0pO1xuXG4gIHZhciBGT1JDRURfU0VUID0gISFVaW50OEFycmF5ICYmICEhVWludDhBcnJheVtQUk9UT1RZUEVdLnNldCAmJiBmYWlscyhmdW5jdGlvbiAoKSB7XG4gICAgbmV3IFVpbnQ4QXJyYXkoMSkuc2V0KHt9KTtcbiAgfSk7XG5cbiAgdmFyIHRvT2Zmc2V0ID0gZnVuY3Rpb24gKGl0LCBCWVRFUykge1xuICAgIHZhciBvZmZzZXQgPSB0b0ludGVnZXIoaXQpO1xuICAgIGlmIChvZmZzZXQgPCAwIHx8IG9mZnNldCAlIEJZVEVTKSB0aHJvdyBSYW5nZUVycm9yKCdXcm9uZyBvZmZzZXQhJyk7XG4gICAgcmV0dXJuIG9mZnNldDtcbiAgfTtcblxuICB2YXIgdmFsaWRhdGUgPSBmdW5jdGlvbiAoaXQpIHtcbiAgICBpZiAoaXNPYmplY3QoaXQpICYmIFRZUEVEX0FSUkFZIGluIGl0KSByZXR1cm4gaXQ7XG4gICAgdGhyb3cgVHlwZUVycm9yKGl0ICsgJyBpcyBub3QgYSB0eXBlZCBhcnJheSEnKTtcbiAgfTtcblxuICB2YXIgYWxsb2NhdGUgPSBmdW5jdGlvbiAoQywgbGVuZ3RoKSB7XG4gICAgaWYgKCEoaXNPYmplY3QoQykgJiYgVFlQRURfQ09OU1RSVUNUT1IgaW4gQykpIHtcbiAgICAgIHRocm93IFR5cGVFcnJvcignSXQgaXMgbm90IGEgdHlwZWQgYXJyYXkgY29uc3RydWN0b3IhJyk7XG4gICAgfSByZXR1cm4gbmV3IEMobGVuZ3RoKTtcbiAgfTtcblxuICB2YXIgc3BlY2llc0Zyb21MaXN0ID0gZnVuY3Rpb24gKE8sIGxpc3QpIHtcbiAgICByZXR1cm4gZnJvbUxpc3Qoc3BlY2llc0NvbnN0cnVjdG9yKE8sIE9bREVGX0NPTlNUUlVDVE9SXSksIGxpc3QpO1xuICB9O1xuXG4gIHZhciBmcm9tTGlzdCA9IGZ1bmN0aW9uIChDLCBsaXN0KSB7XG4gICAgdmFyIGluZGV4ID0gMDtcbiAgICB2YXIgbGVuZ3RoID0gbGlzdC5sZW5ndGg7XG4gICAgdmFyIHJlc3VsdCA9IGFsbG9jYXRlKEMsIGxlbmd0aCk7XG4gICAgd2hpbGUgKGxlbmd0aCA+IGluZGV4KSByZXN1bHRbaW5kZXhdID0gbGlzdFtpbmRleCsrXTtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9O1xuXG4gIHZhciBhZGRHZXR0ZXIgPSBmdW5jdGlvbiAoaXQsIGtleSwgaW50ZXJuYWwpIHtcbiAgICBkUChpdCwga2V5LCB7IGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gdGhpcy5fZFtpbnRlcm5hbF07IH0gfSk7XG4gIH07XG5cbiAgdmFyICRmcm9tID0gZnVuY3Rpb24gZnJvbShzb3VyY2UgLyogLCBtYXBmbiwgdGhpc0FyZyAqLykge1xuICAgIHZhciBPID0gdG9PYmplY3Qoc291cmNlKTtcbiAgICB2YXIgYUxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgdmFyIG1hcGZuID0gYUxlbiA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQ7XG4gICAgdmFyIG1hcHBpbmcgPSBtYXBmbiAhPT0gdW5kZWZpbmVkO1xuICAgIHZhciBpdGVyRm4gPSBnZXRJdGVyRm4oTyk7XG4gICAgdmFyIGksIGxlbmd0aCwgdmFsdWVzLCByZXN1bHQsIHN0ZXAsIGl0ZXJhdG9yO1xuICAgIGlmIChpdGVyRm4gIT0gdW5kZWZpbmVkICYmICFpc0FycmF5SXRlcihpdGVyRm4pKSB7XG4gICAgICBmb3IgKGl0ZXJhdG9yID0gaXRlckZuLmNhbGwoTyksIHZhbHVlcyA9IFtdLCBpID0gMDsgIShzdGVwID0gaXRlcmF0b3IubmV4dCgpKS5kb25lOyBpKyspIHtcbiAgICAgICAgdmFsdWVzLnB1c2goc3RlcC52YWx1ZSk7XG4gICAgICB9IE8gPSB2YWx1ZXM7XG4gICAgfVxuICAgIGlmIChtYXBwaW5nICYmIGFMZW4gPiAyKSBtYXBmbiA9IGN0eChtYXBmbiwgYXJndW1lbnRzWzJdLCAyKTtcbiAgICBmb3IgKGkgPSAwLCBsZW5ndGggPSB0b0xlbmd0aChPLmxlbmd0aCksIHJlc3VsdCA9IGFsbG9jYXRlKHRoaXMsIGxlbmd0aCk7IGxlbmd0aCA+IGk7IGkrKykge1xuICAgICAgcmVzdWx0W2ldID0gbWFwcGluZyA/IG1hcGZuKE9baV0sIGkpIDogT1tpXTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfTtcblxuICB2YXIgJG9mID0gZnVuY3Rpb24gb2YoLyogLi4uaXRlbXMgKi8pIHtcbiAgICB2YXIgaW5kZXggPSAwO1xuICAgIHZhciBsZW5ndGggPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgIHZhciByZXN1bHQgPSBhbGxvY2F0ZSh0aGlzLCBsZW5ndGgpO1xuICAgIHdoaWxlIChsZW5ndGggPiBpbmRleCkgcmVzdWx0W2luZGV4XSA9IGFyZ3VtZW50c1tpbmRleCsrXTtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9O1xuXG4gIC8vIGlPUyBTYWZhcmkgNi54IGZhaWxzIGhlcmVcbiAgdmFyIFRPX0xPQ0FMRV9CVUcgPSAhIVVpbnQ4QXJyYXkgJiYgZmFpbHMoZnVuY3Rpb24gKCkgeyBhcnJheVRvTG9jYWxlU3RyaW5nLmNhbGwobmV3IFVpbnQ4QXJyYXkoMSkpOyB9KTtcblxuICB2YXIgJHRvTG9jYWxlU3RyaW5nID0gZnVuY3Rpb24gdG9Mb2NhbGVTdHJpbmcoKSB7XG4gICAgcmV0dXJuIGFycmF5VG9Mb2NhbGVTdHJpbmcuYXBwbHkoVE9fTE9DQUxFX0JVRyA/IGFycmF5U2xpY2UuY2FsbCh2YWxpZGF0ZSh0aGlzKSkgOiB2YWxpZGF0ZSh0aGlzKSwgYXJndW1lbnRzKTtcbiAgfTtcblxuICB2YXIgcHJvdG8gPSB7XG4gICAgY29weVdpdGhpbjogZnVuY3Rpb24gY29weVdpdGhpbih0YXJnZXQsIHN0YXJ0IC8qICwgZW5kICovKSB7XG4gICAgICByZXR1cm4gYXJyYXlDb3B5V2l0aGluLmNhbGwodmFsaWRhdGUodGhpcyksIHRhcmdldCwgc3RhcnQsIGFyZ3VtZW50cy5sZW5ndGggPiAyID8gYXJndW1lbnRzWzJdIDogdW5kZWZpbmVkKTtcbiAgICB9LFxuICAgIGV2ZXJ5OiBmdW5jdGlvbiBldmVyeShjYWxsYmFja2ZuIC8qICwgdGhpc0FyZyAqLykge1xuICAgICAgcmV0dXJuIGFycmF5RXZlcnkodmFsaWRhdGUodGhpcyksIGNhbGxiYWNrZm4sIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkKTtcbiAgICB9LFxuICAgIGZpbGw6IGZ1bmN0aW9uIGZpbGwodmFsdWUgLyogLCBzdGFydCwgZW5kICovKSB7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW51c2VkLXZhcnNcbiAgICAgIHJldHVybiBhcnJheUZpbGwuYXBwbHkodmFsaWRhdGUodGhpcyksIGFyZ3VtZW50cyk7XG4gICAgfSxcbiAgICBmaWx0ZXI6IGZ1bmN0aW9uIGZpbHRlcihjYWxsYmFja2ZuIC8qICwgdGhpc0FyZyAqLykge1xuICAgICAgcmV0dXJuIHNwZWNpZXNGcm9tTGlzdCh0aGlzLCBhcnJheUZpbHRlcih2YWxpZGF0ZSh0aGlzKSwgY2FsbGJhY2tmbixcbiAgICAgICAgYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQpKTtcbiAgICB9LFxuICAgIGZpbmQ6IGZ1bmN0aW9uIGZpbmQocHJlZGljYXRlIC8qICwgdGhpc0FyZyAqLykge1xuICAgICAgcmV0dXJuIGFycmF5RmluZCh2YWxpZGF0ZSh0aGlzKSwgcHJlZGljYXRlLCBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZCk7XG4gICAgfSxcbiAgICBmaW5kSW5kZXg6IGZ1bmN0aW9uIGZpbmRJbmRleChwcmVkaWNhdGUgLyogLCB0aGlzQXJnICovKSB7XG4gICAgICByZXR1cm4gYXJyYXlGaW5kSW5kZXgodmFsaWRhdGUodGhpcyksIHByZWRpY2F0ZSwgYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQpO1xuICAgIH0sXG4gICAgZm9yRWFjaDogZnVuY3Rpb24gZm9yRWFjaChjYWxsYmFja2ZuIC8qICwgdGhpc0FyZyAqLykge1xuICAgICAgYXJyYXlGb3JFYWNoKHZhbGlkYXRlKHRoaXMpLCBjYWxsYmFja2ZuLCBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZCk7XG4gICAgfSxcbiAgICBpbmRleE9mOiBmdW5jdGlvbiBpbmRleE9mKHNlYXJjaEVsZW1lbnQgLyogLCBmcm9tSW5kZXggKi8pIHtcbiAgICAgIHJldHVybiBhcnJheUluZGV4T2YodmFsaWRhdGUodGhpcyksIHNlYXJjaEVsZW1lbnQsIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkKTtcbiAgICB9LFxuICAgIGluY2x1ZGVzOiBmdW5jdGlvbiBpbmNsdWRlcyhzZWFyY2hFbGVtZW50IC8qICwgZnJvbUluZGV4ICovKSB7XG4gICAgICByZXR1cm4gYXJyYXlJbmNsdWRlcyh2YWxpZGF0ZSh0aGlzKSwgc2VhcmNoRWxlbWVudCwgYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQpO1xuICAgIH0sXG4gICAgam9pbjogZnVuY3Rpb24gam9pbihzZXBhcmF0b3IpIHsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bnVzZWQtdmFyc1xuICAgICAgcmV0dXJuIGFycmF5Sm9pbi5hcHBseSh2YWxpZGF0ZSh0aGlzKSwgYXJndW1lbnRzKTtcbiAgICB9LFxuICAgIGxhc3RJbmRleE9mOiBmdW5jdGlvbiBsYXN0SW5kZXhPZihzZWFyY2hFbGVtZW50IC8qICwgZnJvbUluZGV4ICovKSB7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW51c2VkLXZhcnNcbiAgICAgIHJldHVybiBhcnJheUxhc3RJbmRleE9mLmFwcGx5KHZhbGlkYXRlKHRoaXMpLCBhcmd1bWVudHMpO1xuICAgIH0sXG4gICAgbWFwOiBmdW5jdGlvbiBtYXAobWFwZm4gLyogLCB0aGlzQXJnICovKSB7XG4gICAgICByZXR1cm4gJG1hcCh2YWxpZGF0ZSh0aGlzKSwgbWFwZm4sIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkKTtcbiAgICB9LFxuICAgIHJlZHVjZTogZnVuY3Rpb24gcmVkdWNlKGNhbGxiYWNrZm4gLyogLCBpbml0aWFsVmFsdWUgKi8pIHsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bnVzZWQtdmFyc1xuICAgICAgcmV0dXJuIGFycmF5UmVkdWNlLmFwcGx5KHZhbGlkYXRlKHRoaXMpLCBhcmd1bWVudHMpO1xuICAgIH0sXG4gICAgcmVkdWNlUmlnaHQ6IGZ1bmN0aW9uIHJlZHVjZVJpZ2h0KGNhbGxiYWNrZm4gLyogLCBpbml0aWFsVmFsdWUgKi8pIHsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bnVzZWQtdmFyc1xuICAgICAgcmV0dXJuIGFycmF5UmVkdWNlUmlnaHQuYXBwbHkodmFsaWRhdGUodGhpcyksIGFyZ3VtZW50cyk7XG4gICAgfSxcbiAgICByZXZlcnNlOiBmdW5jdGlvbiByZXZlcnNlKCkge1xuICAgICAgdmFyIHRoYXQgPSB0aGlzO1xuICAgICAgdmFyIGxlbmd0aCA9IHZhbGlkYXRlKHRoYXQpLmxlbmd0aDtcbiAgICAgIHZhciBtaWRkbGUgPSBNYXRoLmZsb29yKGxlbmd0aCAvIDIpO1xuICAgICAgdmFyIGluZGV4ID0gMDtcbiAgICAgIHZhciB2YWx1ZTtcbiAgICAgIHdoaWxlIChpbmRleCA8IG1pZGRsZSkge1xuICAgICAgICB2YWx1ZSA9IHRoYXRbaW5kZXhdO1xuICAgICAgICB0aGF0W2luZGV4KytdID0gdGhhdFstLWxlbmd0aF07XG4gICAgICAgIHRoYXRbbGVuZ3RoXSA9IHZhbHVlO1xuICAgICAgfSByZXR1cm4gdGhhdDtcbiAgICB9LFxuICAgIHNvbWU6IGZ1bmN0aW9uIHNvbWUoY2FsbGJhY2tmbiAvKiAsIHRoaXNBcmcgKi8pIHtcbiAgICAgIHJldHVybiBhcnJheVNvbWUodmFsaWRhdGUodGhpcyksIGNhbGxiYWNrZm4sIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkKTtcbiAgICB9LFxuICAgIHNvcnQ6IGZ1bmN0aW9uIHNvcnQoY29tcGFyZWZuKSB7XG4gICAgICByZXR1cm4gYXJyYXlTb3J0LmNhbGwodmFsaWRhdGUodGhpcyksIGNvbXBhcmVmbik7XG4gICAgfSxcbiAgICBzdWJhcnJheTogZnVuY3Rpb24gc3ViYXJyYXkoYmVnaW4sIGVuZCkge1xuICAgICAgdmFyIE8gPSB2YWxpZGF0ZSh0aGlzKTtcbiAgICAgIHZhciBsZW5ndGggPSBPLmxlbmd0aDtcbiAgICAgIHZhciAkYmVnaW4gPSB0b0Fic29sdXRlSW5kZXgoYmVnaW4sIGxlbmd0aCk7XG4gICAgICByZXR1cm4gbmV3IChzcGVjaWVzQ29uc3RydWN0b3IoTywgT1tERUZfQ09OU1RSVUNUT1JdKSkoXG4gICAgICAgIE8uYnVmZmVyLFxuICAgICAgICBPLmJ5dGVPZmZzZXQgKyAkYmVnaW4gKiBPLkJZVEVTX1BFUl9FTEVNRU5ULFxuICAgICAgICB0b0xlbmd0aCgoZW5kID09PSB1bmRlZmluZWQgPyBsZW5ndGggOiB0b0Fic29sdXRlSW5kZXgoZW5kLCBsZW5ndGgpKSAtICRiZWdpbilcbiAgICAgICk7XG4gICAgfVxuICB9O1xuXG4gIHZhciAkc2xpY2UgPSBmdW5jdGlvbiBzbGljZShzdGFydCwgZW5kKSB7XG4gICAgcmV0dXJuIHNwZWNpZXNGcm9tTGlzdCh0aGlzLCBhcnJheVNsaWNlLmNhbGwodmFsaWRhdGUodGhpcyksIHN0YXJ0LCBlbmQpKTtcbiAgfTtcblxuICB2YXIgJHNldCA9IGZ1bmN0aW9uIHNldChhcnJheUxpa2UgLyogLCBvZmZzZXQgKi8pIHtcbiAgICB2YWxpZGF0ZSh0aGlzKTtcbiAgICB2YXIgb2Zmc2V0ID0gdG9PZmZzZXQoYXJndW1lbnRzWzFdLCAxKTtcbiAgICB2YXIgbGVuZ3RoID0gdGhpcy5sZW5ndGg7XG4gICAgdmFyIHNyYyA9IHRvT2JqZWN0KGFycmF5TGlrZSk7XG4gICAgdmFyIGxlbiA9IHRvTGVuZ3RoKHNyYy5sZW5ndGgpO1xuICAgIHZhciBpbmRleCA9IDA7XG4gICAgaWYgKGxlbiArIG9mZnNldCA+IGxlbmd0aCkgdGhyb3cgUmFuZ2VFcnJvcihXUk9OR19MRU5HVEgpO1xuICAgIHdoaWxlIChpbmRleCA8IGxlbikgdGhpc1tvZmZzZXQgKyBpbmRleF0gPSBzcmNbaW5kZXgrK107XG4gIH07XG5cbiAgdmFyICRpdGVyYXRvcnMgPSB7XG4gICAgZW50cmllczogZnVuY3Rpb24gZW50cmllcygpIHtcbiAgICAgIHJldHVybiBhcnJheUVudHJpZXMuY2FsbCh2YWxpZGF0ZSh0aGlzKSk7XG4gICAgfSxcbiAgICBrZXlzOiBmdW5jdGlvbiBrZXlzKCkge1xuICAgICAgcmV0dXJuIGFycmF5S2V5cy5jYWxsKHZhbGlkYXRlKHRoaXMpKTtcbiAgICB9LFxuICAgIHZhbHVlczogZnVuY3Rpb24gdmFsdWVzKCkge1xuICAgICAgcmV0dXJuIGFycmF5VmFsdWVzLmNhbGwodmFsaWRhdGUodGhpcykpO1xuICAgIH1cbiAgfTtcblxuICB2YXIgaXNUQUluZGV4ID0gZnVuY3Rpb24gKHRhcmdldCwga2V5KSB7XG4gICAgcmV0dXJuIGlzT2JqZWN0KHRhcmdldClcbiAgICAgICYmIHRhcmdldFtUWVBFRF9BUlJBWV1cbiAgICAgICYmIHR5cGVvZiBrZXkgIT0gJ3N5bWJvbCdcbiAgICAgICYmIGtleSBpbiB0YXJnZXRcbiAgICAgICYmIFN0cmluZygra2V5KSA9PSBTdHJpbmcoa2V5KTtcbiAgfTtcbiAgdmFyICRnZXREZXNjID0gZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHRhcmdldCwga2V5KSB7XG4gICAgcmV0dXJuIGlzVEFJbmRleCh0YXJnZXQsIGtleSA9IHRvUHJpbWl0aXZlKGtleSwgdHJ1ZSkpXG4gICAgICA/IHByb3BlcnR5RGVzYygyLCB0YXJnZXRba2V5XSlcbiAgICAgIDogZ09QRCh0YXJnZXQsIGtleSk7XG4gIH07XG4gIHZhciAkc2V0RGVzYyA9IGZ1bmN0aW9uIGRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBkZXNjKSB7XG4gICAgaWYgKGlzVEFJbmRleCh0YXJnZXQsIGtleSA9IHRvUHJpbWl0aXZlKGtleSwgdHJ1ZSkpXG4gICAgICAmJiBpc09iamVjdChkZXNjKVxuICAgICAgJiYgaGFzKGRlc2MsICd2YWx1ZScpXG4gICAgICAmJiAhaGFzKGRlc2MsICdnZXQnKVxuICAgICAgJiYgIWhhcyhkZXNjLCAnc2V0JylcbiAgICAgIC8vIFRPRE86IGFkZCB2YWxpZGF0aW9uIGRlc2NyaXB0b3Igdy9vIGNhbGxpbmcgYWNjZXNzb3JzXG4gICAgICAmJiAhZGVzYy5jb25maWd1cmFibGVcbiAgICAgICYmICghaGFzKGRlc2MsICd3cml0YWJsZScpIHx8IGRlc2Mud3JpdGFibGUpXG4gICAgICAmJiAoIWhhcyhkZXNjLCAnZW51bWVyYWJsZScpIHx8IGRlc2MuZW51bWVyYWJsZSlcbiAgICApIHtcbiAgICAgIHRhcmdldFtrZXldID0gZGVzYy52YWx1ZTtcbiAgICAgIHJldHVybiB0YXJnZXQ7XG4gICAgfSByZXR1cm4gZFAodGFyZ2V0LCBrZXksIGRlc2MpO1xuICB9O1xuXG4gIGlmICghQUxMX0NPTlNUUlVDVE9SUykge1xuICAgICRHT1BELmYgPSAkZ2V0RGVzYztcbiAgICAkRFAuZiA9ICRzZXREZXNjO1xuICB9XG5cbiAgJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAhQUxMX0NPTlNUUlVDVE9SUywgJ09iamVjdCcsIHtcbiAgICBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I6ICRnZXREZXNjLFxuICAgIGRlZmluZVByb3BlcnR5OiAkc2V0RGVzY1xuICB9KTtcblxuICBpZiAoZmFpbHMoZnVuY3Rpb24gKCkgeyBhcnJheVRvU3RyaW5nLmNhbGwoe30pOyB9KSkge1xuICAgIGFycmF5VG9TdHJpbmcgPSBhcnJheVRvTG9jYWxlU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgICByZXR1cm4gYXJyYXlKb2luLmNhbGwodGhpcyk7XG4gICAgfTtcbiAgfVxuXG4gIHZhciAkVHlwZWRBcnJheVByb3RvdHlwZSQgPSByZWRlZmluZUFsbCh7fSwgcHJvdG8pO1xuICByZWRlZmluZUFsbCgkVHlwZWRBcnJheVByb3RvdHlwZSQsICRpdGVyYXRvcnMpO1xuICBoaWRlKCRUeXBlZEFycmF5UHJvdG90eXBlJCwgSVRFUkFUT1IsICRpdGVyYXRvcnMudmFsdWVzKTtcbiAgcmVkZWZpbmVBbGwoJFR5cGVkQXJyYXlQcm90b3R5cGUkLCB7XG4gICAgc2xpY2U6ICRzbGljZSxcbiAgICBzZXQ6ICRzZXQsXG4gICAgY29uc3RydWN0b3I6IGZ1bmN0aW9uICgpIHsgLyogbm9vcCAqLyB9LFxuICAgIHRvU3RyaW5nOiBhcnJheVRvU3RyaW5nLFxuICAgIHRvTG9jYWxlU3RyaW5nOiAkdG9Mb2NhbGVTdHJpbmdcbiAgfSk7XG4gIGFkZEdldHRlcigkVHlwZWRBcnJheVByb3RvdHlwZSQsICdidWZmZXInLCAnYicpO1xuICBhZGRHZXR0ZXIoJFR5cGVkQXJyYXlQcm90b3R5cGUkLCAnYnl0ZU9mZnNldCcsICdvJyk7XG4gIGFkZEdldHRlcigkVHlwZWRBcnJheVByb3RvdHlwZSQsICdieXRlTGVuZ3RoJywgJ2wnKTtcbiAgYWRkR2V0dGVyKCRUeXBlZEFycmF5UHJvdG90eXBlJCwgJ2xlbmd0aCcsICdlJyk7XG4gIGRQKCRUeXBlZEFycmF5UHJvdG90eXBlJCwgVEFHLCB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzW1RZUEVEX0FSUkFZXTsgfVxuICB9KTtcblxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbWF4LXN0YXRlbWVudHNcbiAgbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoS0VZLCBCWVRFUywgd3JhcHBlciwgQ0xBTVBFRCkge1xuICAgIENMQU1QRUQgPSAhIUNMQU1QRUQ7XG4gICAgdmFyIE5BTUUgPSBLRVkgKyAoQ0xBTVBFRCA/ICdDbGFtcGVkJyA6ICcnKSArICdBcnJheSc7XG4gICAgdmFyIEdFVFRFUiA9ICdnZXQnICsgS0VZO1xuICAgIHZhciBTRVRURVIgPSAnc2V0JyArIEtFWTtcbiAgICB2YXIgVHlwZWRBcnJheSA9IGdsb2JhbFtOQU1FXTtcbiAgICB2YXIgQmFzZSA9IFR5cGVkQXJyYXkgfHwge307XG4gICAgdmFyIFRBQyA9IFR5cGVkQXJyYXkgJiYgZ2V0UHJvdG90eXBlT2YoVHlwZWRBcnJheSk7XG4gICAgdmFyIEZPUkNFRCA9ICFUeXBlZEFycmF5IHx8ICEkdHlwZWQuQUJWO1xuICAgIHZhciBPID0ge307XG4gICAgdmFyIFR5cGVkQXJyYXlQcm90b3R5cGUgPSBUeXBlZEFycmF5ICYmIFR5cGVkQXJyYXlbUFJPVE9UWVBFXTtcbiAgICB2YXIgZ2V0dGVyID0gZnVuY3Rpb24gKHRoYXQsIGluZGV4KSB7XG4gICAgICB2YXIgZGF0YSA9IHRoYXQuX2Q7XG4gICAgICByZXR1cm4gZGF0YS52W0dFVFRFUl0oaW5kZXggKiBCWVRFUyArIGRhdGEubywgTElUVExFX0VORElBTik7XG4gICAgfTtcbiAgICB2YXIgc2V0dGVyID0gZnVuY3Rpb24gKHRoYXQsIGluZGV4LCB2YWx1ZSkge1xuICAgICAgdmFyIGRhdGEgPSB0aGF0Ll9kO1xuICAgICAgaWYgKENMQU1QRUQpIHZhbHVlID0gKHZhbHVlID0gTWF0aC5yb3VuZCh2YWx1ZSkpIDwgMCA/IDAgOiB2YWx1ZSA+IDB4ZmYgPyAweGZmIDogdmFsdWUgJiAweGZmO1xuICAgICAgZGF0YS52W1NFVFRFUl0oaW5kZXggKiBCWVRFUyArIGRhdGEubywgdmFsdWUsIExJVFRMRV9FTkRJQU4pO1xuICAgIH07XG4gICAgdmFyIGFkZEVsZW1lbnQgPSBmdW5jdGlvbiAodGhhdCwgaW5kZXgpIHtcbiAgICAgIGRQKHRoYXQsIGluZGV4LCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgIHJldHVybiBnZXR0ZXIodGhpcywgaW5kZXgpO1xuICAgICAgICB9LFxuICAgICAgICBzZXQ6IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgICAgIHJldHVybiBzZXR0ZXIodGhpcywgaW5kZXgsIHZhbHVlKTtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZVxuICAgICAgfSk7XG4gICAgfTtcbiAgICBpZiAoRk9SQ0VEKSB7XG4gICAgICBUeXBlZEFycmF5ID0gd3JhcHBlcihmdW5jdGlvbiAodGhhdCwgZGF0YSwgJG9mZnNldCwgJGxlbmd0aCkge1xuICAgICAgICBhbkluc3RhbmNlKHRoYXQsIFR5cGVkQXJyYXksIE5BTUUsICdfZCcpO1xuICAgICAgICB2YXIgaW5kZXggPSAwO1xuICAgICAgICB2YXIgb2Zmc2V0ID0gMDtcbiAgICAgICAgdmFyIGJ1ZmZlciwgYnl0ZUxlbmd0aCwgbGVuZ3RoLCBrbGFzcztcbiAgICAgICAgaWYgKCFpc09iamVjdChkYXRhKSkge1xuICAgICAgICAgIGxlbmd0aCA9IHRvSW5kZXgoZGF0YSk7XG4gICAgICAgICAgYnl0ZUxlbmd0aCA9IGxlbmd0aCAqIEJZVEVTO1xuICAgICAgICAgIGJ1ZmZlciA9IG5ldyAkQXJyYXlCdWZmZXIoYnl0ZUxlbmd0aCk7XG4gICAgICAgIH0gZWxzZSBpZiAoZGF0YSBpbnN0YW5jZW9mICRBcnJheUJ1ZmZlciB8fCAoa2xhc3MgPSBjbGFzc29mKGRhdGEpKSA9PSBBUlJBWV9CVUZGRVIgfHwga2xhc3MgPT0gU0hBUkVEX0JVRkZFUikge1xuICAgICAgICAgIGJ1ZmZlciA9IGRhdGE7XG4gICAgICAgICAgb2Zmc2V0ID0gdG9PZmZzZXQoJG9mZnNldCwgQllURVMpO1xuICAgICAgICAgIHZhciAkbGVuID0gZGF0YS5ieXRlTGVuZ3RoO1xuICAgICAgICAgIGlmICgkbGVuZ3RoID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGlmICgkbGVuICUgQllURVMpIHRocm93IFJhbmdlRXJyb3IoV1JPTkdfTEVOR1RIKTtcbiAgICAgICAgICAgIGJ5dGVMZW5ndGggPSAkbGVuIC0gb2Zmc2V0O1xuICAgICAgICAgICAgaWYgKGJ5dGVMZW5ndGggPCAwKSB0aHJvdyBSYW5nZUVycm9yKFdST05HX0xFTkdUSCk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGJ5dGVMZW5ndGggPSB0b0xlbmd0aCgkbGVuZ3RoKSAqIEJZVEVTO1xuICAgICAgICAgICAgaWYgKGJ5dGVMZW5ndGggKyBvZmZzZXQgPiAkbGVuKSB0aHJvdyBSYW5nZUVycm9yKFdST05HX0xFTkdUSCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGxlbmd0aCA9IGJ5dGVMZW5ndGggLyBCWVRFUztcbiAgICAgICAgfSBlbHNlIGlmIChUWVBFRF9BUlJBWSBpbiBkYXRhKSB7XG4gICAgICAgICAgcmV0dXJuIGZyb21MaXN0KFR5cGVkQXJyYXksIGRhdGEpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVybiAkZnJvbS5jYWxsKFR5cGVkQXJyYXksIGRhdGEpO1xuICAgICAgICB9XG4gICAgICAgIGhpZGUodGhhdCwgJ19kJywge1xuICAgICAgICAgIGI6IGJ1ZmZlcixcbiAgICAgICAgICBvOiBvZmZzZXQsXG4gICAgICAgICAgbDogYnl0ZUxlbmd0aCxcbiAgICAgICAgICBlOiBsZW5ndGgsXG4gICAgICAgICAgdjogbmV3ICREYXRhVmlldyhidWZmZXIpXG4gICAgICAgIH0pO1xuICAgICAgICB3aGlsZSAoaW5kZXggPCBsZW5ndGgpIGFkZEVsZW1lbnQodGhhdCwgaW5kZXgrKyk7XG4gICAgICB9KTtcbiAgICAgIFR5cGVkQXJyYXlQcm90b3R5cGUgPSBUeXBlZEFycmF5W1BST1RPVFlQRV0gPSBjcmVhdGUoJFR5cGVkQXJyYXlQcm90b3R5cGUkKTtcbiAgICAgIGhpZGUoVHlwZWRBcnJheVByb3RvdHlwZSwgJ2NvbnN0cnVjdG9yJywgVHlwZWRBcnJheSk7XG4gICAgfSBlbHNlIGlmICghZmFpbHMoZnVuY3Rpb24gKCkge1xuICAgICAgVHlwZWRBcnJheSgxKTtcbiAgICB9KSB8fCAhZmFpbHMoZnVuY3Rpb24gKCkge1xuICAgICAgbmV3IFR5cGVkQXJyYXkoLTEpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ld1xuICAgIH0pIHx8ICEkaXRlckRldGVjdChmdW5jdGlvbiAoaXRlcikge1xuICAgICAgbmV3IFR5cGVkQXJyYXkoKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXdcbiAgICAgIG5ldyBUeXBlZEFycmF5KG51bGwpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ld1xuICAgICAgbmV3IFR5cGVkQXJyYXkoMS41KTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXdcbiAgICAgIG5ldyBUeXBlZEFycmF5KGl0ZXIpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ld1xuICAgIH0sIHRydWUpKSB7XG4gICAgICBUeXBlZEFycmF5ID0gd3JhcHBlcihmdW5jdGlvbiAodGhhdCwgZGF0YSwgJG9mZnNldCwgJGxlbmd0aCkge1xuICAgICAgICBhbkluc3RhbmNlKHRoYXQsIFR5cGVkQXJyYXksIE5BTUUpO1xuICAgICAgICB2YXIga2xhc3M7XG4gICAgICAgIC8vIGB3c2AgbW9kdWxlIGJ1ZywgdGVtcG9yYXJpbHkgcmVtb3ZlIHZhbGlkYXRpb24gbGVuZ3RoIGZvciBVaW50OEFycmF5XG4gICAgICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS93ZWJzb2NrZXRzL3dzL3B1bGwvNjQ1XG4gICAgICAgIGlmICghaXNPYmplY3QoZGF0YSkpIHJldHVybiBuZXcgQmFzZSh0b0luZGV4KGRhdGEpKTtcbiAgICAgICAgaWYgKGRhdGEgaW5zdGFuY2VvZiAkQXJyYXlCdWZmZXIgfHwgKGtsYXNzID0gY2xhc3NvZihkYXRhKSkgPT0gQVJSQVlfQlVGRkVSIHx8IGtsYXNzID09IFNIQVJFRF9CVUZGRVIpIHtcbiAgICAgICAgICByZXR1cm4gJGxlbmd0aCAhPT0gdW5kZWZpbmVkXG4gICAgICAgICAgICA/IG5ldyBCYXNlKGRhdGEsIHRvT2Zmc2V0KCRvZmZzZXQsIEJZVEVTKSwgJGxlbmd0aClcbiAgICAgICAgICAgIDogJG9mZnNldCAhPT0gdW5kZWZpbmVkXG4gICAgICAgICAgICAgID8gbmV3IEJhc2UoZGF0YSwgdG9PZmZzZXQoJG9mZnNldCwgQllURVMpKVxuICAgICAgICAgICAgICA6IG5ldyBCYXNlKGRhdGEpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChUWVBFRF9BUlJBWSBpbiBkYXRhKSByZXR1cm4gZnJvbUxpc3QoVHlwZWRBcnJheSwgZGF0YSk7XG4gICAgICAgIHJldHVybiAkZnJvbS5jYWxsKFR5cGVkQXJyYXksIGRhdGEpO1xuICAgICAgfSk7XG4gICAgICBhcnJheUZvckVhY2goVEFDICE9PSBGdW5jdGlvbi5wcm90b3R5cGUgPyBnT1BOKEJhc2UpLmNvbmNhdChnT1BOKFRBQykpIDogZ09QTihCYXNlKSwgZnVuY3Rpb24gKGtleSkge1xuICAgICAgICBpZiAoIShrZXkgaW4gVHlwZWRBcnJheSkpIGhpZGUoVHlwZWRBcnJheSwga2V5LCBCYXNlW2tleV0pO1xuICAgICAgfSk7XG4gICAgICBUeXBlZEFycmF5W1BST1RPVFlQRV0gPSBUeXBlZEFycmF5UHJvdG90eXBlO1xuICAgICAgaWYgKCFMSUJSQVJZKSBUeXBlZEFycmF5UHJvdG90eXBlLmNvbnN0cnVjdG9yID0gVHlwZWRBcnJheTtcbiAgICB9XG4gICAgdmFyICRuYXRpdmVJdGVyYXRvciA9IFR5cGVkQXJyYXlQcm90b3R5cGVbSVRFUkFUT1JdO1xuICAgIHZhciBDT1JSRUNUX0lURVJfTkFNRSA9ICEhJG5hdGl2ZUl0ZXJhdG9yXG4gICAgICAmJiAoJG5hdGl2ZUl0ZXJhdG9yLm5hbWUgPT0gJ3ZhbHVlcycgfHwgJG5hdGl2ZUl0ZXJhdG9yLm5hbWUgPT0gdW5kZWZpbmVkKTtcbiAgICB2YXIgJGl0ZXJhdG9yID0gJGl0ZXJhdG9ycy52YWx1ZXM7XG4gICAgaGlkZShUeXBlZEFycmF5LCBUWVBFRF9DT05TVFJVQ1RPUiwgdHJ1ZSk7XG4gICAgaGlkZShUeXBlZEFycmF5UHJvdG90eXBlLCBUWVBFRF9BUlJBWSwgTkFNRSk7XG4gICAgaGlkZShUeXBlZEFycmF5UHJvdG90eXBlLCBWSUVXLCB0cnVlKTtcbiAgICBoaWRlKFR5cGVkQXJyYXlQcm90b3R5cGUsIERFRl9DT05TVFJVQ1RPUiwgVHlwZWRBcnJheSk7XG5cbiAgICBpZiAoQ0xBTVBFRCA/IG5ldyBUeXBlZEFycmF5KDEpW1RBR10gIT0gTkFNRSA6ICEoVEFHIGluIFR5cGVkQXJyYXlQcm90b3R5cGUpKSB7XG4gICAgICBkUChUeXBlZEFycmF5UHJvdG90eXBlLCBUQUcsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBOQU1FOyB9XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBPW05BTUVdID0gVHlwZWRBcnJheTtcblxuICAgICRleHBvcnQoJGV4cG9ydC5HICsgJGV4cG9ydC5XICsgJGV4cG9ydC5GICogKFR5cGVkQXJyYXkgIT0gQmFzZSksIE8pO1xuXG4gICAgJGV4cG9ydCgkZXhwb3J0LlMsIE5BTUUsIHtcbiAgICAgIEJZVEVTX1BFUl9FTEVNRU5UOiBCWVRFU1xuICAgIH0pO1xuXG4gICAgJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiBmYWlscyhmdW5jdGlvbiAoKSB7IEJhc2Uub2YuY2FsbChUeXBlZEFycmF5LCAxKTsgfSksIE5BTUUsIHtcbiAgICAgIGZyb206ICRmcm9tLFxuICAgICAgb2Y6ICRvZlxuICAgIH0pO1xuXG4gICAgaWYgKCEoQllURVNfUEVSX0VMRU1FTlQgaW4gVHlwZWRBcnJheVByb3RvdHlwZSkpIGhpZGUoVHlwZWRBcnJheVByb3RvdHlwZSwgQllURVNfUEVSX0VMRU1FTlQsIEJZVEVTKTtcblxuICAgICRleHBvcnQoJGV4cG9ydC5QLCBOQU1FLCBwcm90byk7XG5cbiAgICBzZXRTcGVjaWVzKE5BTUUpO1xuXG4gICAgJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiBGT1JDRURfU0VULCBOQU1FLCB7IHNldDogJHNldCB9KTtcblxuICAgICRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogIUNPUlJFQ1RfSVRFUl9OQU1FLCBOQU1FLCAkaXRlcmF0b3JzKTtcblxuICAgIGlmICghTElCUkFSWSAmJiBUeXBlZEFycmF5UHJvdG90eXBlLnRvU3RyaW5nICE9IGFycmF5VG9TdHJpbmcpIFR5cGVkQXJyYXlQcm90b3R5cGUudG9TdHJpbmcgPSBhcnJheVRvU3RyaW5nO1xuXG4gICAgJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiBmYWlscyhmdW5jdGlvbiAoKSB7XG4gICAgICBuZXcgVHlwZWRBcnJheSgxKS5zbGljZSgpO1xuICAgIH0pLCBOQU1FLCB7IHNsaWNlOiAkc2xpY2UgfSk7XG5cbiAgICAkZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqIChmYWlscyhmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gWzEsIDJdLnRvTG9jYWxlU3RyaW5nKCkgIT0gbmV3IFR5cGVkQXJyYXkoWzEsIDJdKS50b0xvY2FsZVN0cmluZygpO1xuICAgIH0pIHx8ICFmYWlscyhmdW5jdGlvbiAoKSB7XG4gICAgICBUeXBlZEFycmF5UHJvdG90eXBlLnRvTG9jYWxlU3RyaW5nLmNhbGwoWzEsIDJdKTtcbiAgICB9KSksIE5BTUUsIHsgdG9Mb2NhbGVTdHJpbmc6ICR0b0xvY2FsZVN0cmluZyB9KTtcblxuICAgIEl0ZXJhdG9yc1tOQU1FXSA9IENPUlJFQ1RfSVRFUl9OQU1FID8gJG5hdGl2ZUl0ZXJhdG9yIDogJGl0ZXJhdG9yO1xuICAgIGlmICghTElCUkFSWSAmJiAhQ09SUkVDVF9JVEVSX05BTUUpIGhpZGUoVHlwZWRBcnJheVByb3RvdHlwZSwgSVRFUkFUT1IsICRpdGVyYXRvcik7XG4gIH07XG59IGVsc2UgbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoKSB7IC8qIGVtcHR5ICovIH07XG4iLCJ2YXIgTWFwID0gcmVxdWlyZSgnLi9lczYubWFwJyk7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIHNoYXJlZCA9IHJlcXVpcmUoJy4vX3NoYXJlZCcpKCdtZXRhZGF0YScpO1xudmFyIHN0b3JlID0gc2hhcmVkLnN0b3JlIHx8IChzaGFyZWQuc3RvcmUgPSBuZXcgKHJlcXVpcmUoJy4vZXM2LndlYWstbWFwJykpKCkpO1xuXG52YXIgZ2V0T3JDcmVhdGVNZXRhZGF0YU1hcCA9IGZ1bmN0aW9uICh0YXJnZXQsIHRhcmdldEtleSwgY3JlYXRlKSB7XG4gIHZhciB0YXJnZXRNZXRhZGF0YSA9IHN0b3JlLmdldCh0YXJnZXQpO1xuICBpZiAoIXRhcmdldE1ldGFkYXRhKSB7XG4gICAgaWYgKCFjcmVhdGUpIHJldHVybiB1bmRlZmluZWQ7XG4gICAgc3RvcmUuc2V0KHRhcmdldCwgdGFyZ2V0TWV0YWRhdGEgPSBuZXcgTWFwKCkpO1xuICB9XG4gIHZhciBrZXlNZXRhZGF0YSA9IHRhcmdldE1ldGFkYXRhLmdldCh0YXJnZXRLZXkpO1xuICBpZiAoIWtleU1ldGFkYXRhKSB7XG4gICAgaWYgKCFjcmVhdGUpIHJldHVybiB1bmRlZmluZWQ7XG4gICAgdGFyZ2V0TWV0YWRhdGEuc2V0KHRhcmdldEtleSwga2V5TWV0YWRhdGEgPSBuZXcgTWFwKCkpO1xuICB9IHJldHVybiBrZXlNZXRhZGF0YTtcbn07XG52YXIgb3JkaW5hcnlIYXNPd25NZXRhZGF0YSA9IGZ1bmN0aW9uIChNZXRhZGF0YUtleSwgTywgUCkge1xuICB2YXIgbWV0YWRhdGFNYXAgPSBnZXRPckNyZWF0ZU1ldGFkYXRhTWFwKE8sIFAsIGZhbHNlKTtcbiAgcmV0dXJuIG1ldGFkYXRhTWFwID09PSB1bmRlZmluZWQgPyBmYWxzZSA6IG1ldGFkYXRhTWFwLmhhcyhNZXRhZGF0YUtleSk7XG59O1xudmFyIG9yZGluYXJ5R2V0T3duTWV0YWRhdGEgPSBmdW5jdGlvbiAoTWV0YWRhdGFLZXksIE8sIFApIHtcbiAgdmFyIG1ldGFkYXRhTWFwID0gZ2V0T3JDcmVhdGVNZXRhZGF0YU1hcChPLCBQLCBmYWxzZSk7XG4gIHJldHVybiBtZXRhZGF0YU1hcCA9PT0gdW5kZWZpbmVkID8gdW5kZWZpbmVkIDogbWV0YWRhdGFNYXAuZ2V0KE1ldGFkYXRhS2V5KTtcbn07XG52YXIgb3JkaW5hcnlEZWZpbmVPd25NZXRhZGF0YSA9IGZ1bmN0aW9uIChNZXRhZGF0YUtleSwgTWV0YWRhdGFWYWx1ZSwgTywgUCkge1xuICBnZXRPckNyZWF0ZU1ldGFkYXRhTWFwKE8sIFAsIHRydWUpLnNldChNZXRhZGF0YUtleSwgTWV0YWRhdGFWYWx1ZSk7XG59O1xudmFyIG9yZGluYXJ5T3duTWV0YWRhdGFLZXlzID0gZnVuY3Rpb24gKHRhcmdldCwgdGFyZ2V0S2V5KSB7XG4gIHZhciBtZXRhZGF0YU1hcCA9IGdldE9yQ3JlYXRlTWV0YWRhdGFNYXAodGFyZ2V0LCB0YXJnZXRLZXksIGZhbHNlKTtcbiAgdmFyIGtleXMgPSBbXTtcbiAgaWYgKG1ldGFkYXRhTWFwKSBtZXRhZGF0YU1hcC5mb3JFYWNoKGZ1bmN0aW9uIChfLCBrZXkpIHsga2V5cy5wdXNoKGtleSk7IH0pO1xuICByZXR1cm4ga2V5cztcbn07XG52YXIgdG9NZXRhS2V5ID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBpdCA9PT0gdW5kZWZpbmVkIHx8IHR5cGVvZiBpdCA9PSAnc3ltYm9sJyA/IGl0IDogU3RyaW5nKGl0KTtcbn07XG52YXIgZXhwID0gZnVuY3Rpb24gKE8pIHtcbiAgJGV4cG9ydCgkZXhwb3J0LlMsICdSZWZsZWN0JywgTyk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgc3RvcmU6IHN0b3JlLFxuICBtYXA6IGdldE9yQ3JlYXRlTWV0YWRhdGFNYXAsXG4gIGhhczogb3JkaW5hcnlIYXNPd25NZXRhZGF0YSxcbiAgZ2V0OiBvcmRpbmFyeUdldE93bk1ldGFkYXRhLFxuICBzZXQ6IG9yZGluYXJ5RGVmaW5lT3duTWV0YWRhdGEsXG4gIGtleXM6IG9yZGluYXJ5T3duTWV0YWRhdGFLZXlzLFxuICBrZXk6IHRvTWV0YUtleSxcbiAgZXhwOiBleHBcbn07XG4iLCJtb2R1bGUuZXhwb3J0cyA9IGZhbHNlO1xuIiwidmFyIE1FVEEgPSByZXF1aXJlKCcuL191aWQnKSgnbWV0YScpO1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgaGFzID0gcmVxdWlyZSgnLi9faGFzJyk7XG52YXIgc2V0RGVzYyA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpLmY7XG52YXIgaWQgPSAwO1xudmFyIGlzRXh0ZW5zaWJsZSA9IE9iamVjdC5pc0V4dGVuc2libGUgfHwgZnVuY3Rpb24gKCkge1xuICByZXR1cm4gdHJ1ZTtcbn07XG52YXIgRlJFRVpFID0gIXJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24gKCkge1xuICByZXR1cm4gaXNFeHRlbnNpYmxlKE9iamVjdC5wcmV2ZW50RXh0ZW5zaW9ucyh7fSkpO1xufSk7XG52YXIgc2V0TWV0YSA9IGZ1bmN0aW9uIChpdCkge1xuICBzZXREZXNjKGl0LCBNRVRBLCB7IHZhbHVlOiB7XG4gICAgaTogJ08nICsgKytpZCwgLy8gb2JqZWN0IElEXG4gICAgdzoge30gICAgICAgICAgLy8gd2VhayBjb2xsZWN0aW9ucyBJRHNcbiAgfSB9KTtcbn07XG52YXIgZmFzdEtleSA9IGZ1bmN0aW9uIChpdCwgY3JlYXRlKSB7XG4gIC8vIHJldHVybiBwcmltaXRpdmUgd2l0aCBwcmVmaXhcbiAgaWYgKCFpc09iamVjdChpdCkpIHJldHVybiB0eXBlb2YgaXQgPT0gJ3N5bWJvbCcgPyBpdCA6ICh0eXBlb2YgaXQgPT0gJ3N0cmluZycgPyAnUycgOiAnUCcpICsgaXQ7XG4gIGlmICghaGFzKGl0LCBNRVRBKSkge1xuICAgIC8vIGNhbid0IHNldCBtZXRhZGF0YSB0byB1bmNhdWdodCBmcm96ZW4gb2JqZWN0XG4gICAgaWYgKCFpc0V4dGVuc2libGUoaXQpKSByZXR1cm4gJ0YnO1xuICAgIC8vIG5vdCBuZWNlc3NhcnkgdG8gYWRkIG1ldGFkYXRhXG4gICAgaWYgKCFjcmVhdGUpIHJldHVybiAnRSc7XG4gICAgLy8gYWRkIG1pc3NpbmcgbWV0YWRhdGFcbiAgICBzZXRNZXRhKGl0KTtcbiAgLy8gcmV0dXJuIG9iamVjdCBJRFxuICB9IHJldHVybiBpdFtNRVRBXS5pO1xufTtcbnZhciBnZXRXZWFrID0gZnVuY3Rpb24gKGl0LCBjcmVhdGUpIHtcbiAgaWYgKCFoYXMoaXQsIE1FVEEpKSB7XG4gICAgLy8gY2FuJ3Qgc2V0IG1ldGFkYXRhIHRvIHVuY2F1Z2h0IGZyb3plbiBvYmplY3RcbiAgICBpZiAoIWlzRXh0ZW5zaWJsZShpdCkpIHJldHVybiB0cnVlO1xuICAgIC8vIG5vdCBuZWNlc3NhcnkgdG8gYWRkIG1ldGFkYXRhXG4gICAgaWYgKCFjcmVhdGUpIHJldHVybiBmYWxzZTtcbiAgICAvLyBhZGQgbWlzc2luZyBtZXRhZGF0YVxuICAgIHNldE1ldGEoaXQpO1xuICAvLyByZXR1cm4gaGFzaCB3ZWFrIGNvbGxlY3Rpb25zIElEc1xuICB9IHJldHVybiBpdFtNRVRBXS53O1xufTtcbi8vIGFkZCBtZXRhZGF0YSBvbiBmcmVlemUtZmFtaWx5IG1ldGhvZHMgY2FsbGluZ1xudmFyIG9uRnJlZXplID0gZnVuY3Rpb24gKGl0KSB7XG4gIGlmIChGUkVFWkUgJiYgbWV0YS5ORUVEICYmIGlzRXh0ZW5zaWJsZShpdCkgJiYgIWhhcyhpdCwgTUVUQSkpIHNldE1ldGEoaXQpO1xuICByZXR1cm4gaXQ7XG59O1xudmFyIG1ldGEgPSBtb2R1bGUuZXhwb3J0cyA9IHtcbiAgS0VZOiBNRVRBLFxuICBORUVEOiBmYWxzZSxcbiAgZmFzdEtleTogZmFzdEtleSxcbiAgZ2V0V2VhazogZ2V0V2VhayxcbiAgb25GcmVlemU6IG9uRnJlZXplXG59O1xuIiwiLy8gMjIuMS4zLjMxIEFycmF5LnByb3RvdHlwZVtAQHVuc2NvcGFibGVzXVxudmFyIFVOU0NPUEFCTEVTID0gcmVxdWlyZSgnLi9fd2tzJykoJ3Vuc2NvcGFibGVzJyk7XG52YXIgQXJyYXlQcm90byA9IEFycmF5LnByb3RvdHlwZTtcbmlmIChBcnJheVByb3RvW1VOU0NPUEFCTEVTXSA9PSB1bmRlZmluZWQpIHJlcXVpcmUoJy4vX2hpZGUnKShBcnJheVByb3RvLCBVTlNDT1BBQkxFUywge30pO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoa2V5KSB7XG4gIEFycmF5UHJvdG9bVU5TQ09QQUJMRVNdW2tleV0gPSB0cnVlO1xufTtcbiIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGJpdG1hcCwgdmFsdWUpIHtcbiAgcmV0dXJuIHtcbiAgICBlbnVtZXJhYmxlOiAhKGJpdG1hcCAmIDEpLFxuICAgIGNvbmZpZ3VyYWJsZTogIShiaXRtYXAgJiAyKSxcbiAgICB3cml0YWJsZTogIShiaXRtYXAgJiA0KSxcbiAgICB2YWx1ZTogdmFsdWVcbiAgfTtcbn07XG4iLCJ2YXIgaWQgPSAwO1xudmFyIHB4ID0gTWF0aC5yYW5kb20oKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGtleSkge1xuICByZXR1cm4gJ1N5bWJvbCgnLmNvbmNhdChrZXkgPT09IHVuZGVmaW5lZCA/ICcnIDoga2V5LCAnKV8nLCAoKytpZCArIHB4KS50b1N0cmluZygzNikpO1xufTtcbiIsIi8vIDE5LjEuMi4xNCAvIDE1LjIuMy4xNCBPYmplY3Qua2V5cyhPKVxudmFyICRrZXlzID0gcmVxdWlyZSgnLi9fb2JqZWN0LWtleXMtaW50ZXJuYWwnKTtcbnZhciBlbnVtQnVnS2V5cyA9IHJlcXVpcmUoJy4vX2VudW0tYnVnLWtleXMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBPYmplY3Qua2V5cyB8fCBmdW5jdGlvbiBrZXlzKE8pIHtcbiAgcmV0dXJuICRrZXlzKE8sIGVudW1CdWdLZXlzKTtcbn07XG4iLCJ2YXIgdG9JbnRlZ2VyID0gcmVxdWlyZSgnLi9fdG8taW50ZWdlcicpO1xudmFyIG1heCA9IE1hdGgubWF4O1xudmFyIG1pbiA9IE1hdGgubWluO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaW5kZXgsIGxlbmd0aCkge1xuICBpbmRleCA9IHRvSW50ZWdlcihpbmRleCk7XG4gIHJldHVybiBpbmRleCA8IDAgPyBtYXgoaW5kZXggKyBsZW5ndGgsIDApIDogbWluKGluZGV4LCBsZW5ndGgpO1xufTtcbiIsIi8vIDE5LjEuMi4yIC8gMTUuMi4zLjUgT2JqZWN0LmNyZWF0ZShPIFssIFByb3BlcnRpZXNdKVxudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgZFBzID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwcycpO1xudmFyIGVudW1CdWdLZXlzID0gcmVxdWlyZSgnLi9fZW51bS1idWcta2V5cycpO1xudmFyIElFX1BST1RPID0gcmVxdWlyZSgnLi9fc2hhcmVkLWtleScpKCdJRV9QUk9UTycpO1xudmFyIEVtcHR5ID0gZnVuY3Rpb24gKCkgeyAvKiBlbXB0eSAqLyB9O1xudmFyIFBST1RPVFlQRSA9ICdwcm90b3R5cGUnO1xuXG4vLyBDcmVhdGUgb2JqZWN0IHdpdGggZmFrZSBgbnVsbGAgcHJvdG90eXBlOiB1c2UgaWZyYW1lIE9iamVjdCB3aXRoIGNsZWFyZWQgcHJvdG90eXBlXG52YXIgY3JlYXRlRGljdCA9IGZ1bmN0aW9uICgpIHtcbiAgLy8gVGhyYXNoLCB3YXN0ZSBhbmQgc29kb215OiBJRSBHQyBidWdcbiAgdmFyIGlmcmFtZSA9IHJlcXVpcmUoJy4vX2RvbS1jcmVhdGUnKSgnaWZyYW1lJyk7XG4gIHZhciBpID0gZW51bUJ1Z0tleXMubGVuZ3RoO1xuICB2YXIgbHQgPSAnPCc7XG4gIHZhciBndCA9ICc+JztcbiAgdmFyIGlmcmFtZURvY3VtZW50O1xuICBpZnJhbWUuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgcmVxdWlyZSgnLi9faHRtbCcpLmFwcGVuZENoaWxkKGlmcmFtZSk7XG4gIGlmcmFtZS5zcmMgPSAnamF2YXNjcmlwdDonOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXNjcmlwdC11cmxcbiAgLy8gY3JlYXRlRGljdCA9IGlmcmFtZS5jb250ZW50V2luZG93Lk9iamVjdDtcbiAgLy8gaHRtbC5yZW1vdmVDaGlsZChpZnJhbWUpO1xuICBpZnJhbWVEb2N1bWVudCA9IGlmcmFtZS5jb250ZW50V2luZG93LmRvY3VtZW50O1xuICBpZnJhbWVEb2N1bWVudC5vcGVuKCk7XG4gIGlmcmFtZURvY3VtZW50LndyaXRlKGx0ICsgJ3NjcmlwdCcgKyBndCArICdkb2N1bWVudC5GPU9iamVjdCcgKyBsdCArICcvc2NyaXB0JyArIGd0KTtcbiAgaWZyYW1lRG9jdW1lbnQuY2xvc2UoKTtcbiAgY3JlYXRlRGljdCA9IGlmcmFtZURvY3VtZW50LkY7XG4gIHdoaWxlIChpLS0pIGRlbGV0ZSBjcmVhdGVEaWN0W1BST1RPVFlQRV1bZW51bUJ1Z0tleXNbaV1dO1xuICByZXR1cm4gY3JlYXRlRGljdCgpO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBPYmplY3QuY3JlYXRlIHx8IGZ1bmN0aW9uIGNyZWF0ZShPLCBQcm9wZXJ0aWVzKSB7XG4gIHZhciByZXN1bHQ7XG4gIGlmIChPICE9PSBudWxsKSB7XG4gICAgRW1wdHlbUFJPVE9UWVBFXSA9IGFuT2JqZWN0KE8pO1xuICAgIHJlc3VsdCA9IG5ldyBFbXB0eSgpO1xuICAgIEVtcHR5W1BST1RPVFlQRV0gPSBudWxsO1xuICAgIC8vIGFkZCBcIl9fcHJvdG9fX1wiIGZvciBPYmplY3QuZ2V0UHJvdG90eXBlT2YgcG9seWZpbGxcbiAgICByZXN1bHRbSUVfUFJPVE9dID0gTztcbiAgfSBlbHNlIHJlc3VsdCA9IGNyZWF0ZURpY3QoKTtcbiAgcmV0dXJuIFByb3BlcnRpZXMgPT09IHVuZGVmaW5lZCA/IHJlc3VsdCA6IGRQcyhyZXN1bHQsIFByb3BlcnRpZXMpO1xufTtcbiIsIi8vIDE5LjEuMi43IC8gMTUuMi4zLjQgT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoTylcbnZhciAka2V5cyA9IHJlcXVpcmUoJy4vX29iamVjdC1rZXlzLWludGVybmFsJyk7XG52YXIgaGlkZGVuS2V5cyA9IHJlcXVpcmUoJy4vX2VudW0tYnVnLWtleXMnKS5jb25jYXQoJ2xlbmd0aCcsICdwcm90b3R5cGUnKTtcblxuZXhwb3J0cy5mID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMgfHwgZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlOYW1lcyhPKSB7XG4gIHJldHVybiAka2V5cyhPLCBoaWRkZW5LZXlzKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgZFAgPSByZXF1aXJlKCcuL19vYmplY3QtZHAnKTtcbnZhciBERVNDUklQVE9SUyA9IHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJyk7XG52YXIgU1BFQ0lFUyA9IHJlcXVpcmUoJy4vX3drcycpKCdzcGVjaWVzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKEtFWSkge1xuICB2YXIgQyA9IGdsb2JhbFtLRVldO1xuICBpZiAoREVTQ1JJUFRPUlMgJiYgQyAmJiAhQ1tTUEVDSUVTXSkgZFAuZihDLCBTUEVDSUVTLCB7XG4gICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gdGhpczsgfVxuICB9KTtcbn07XG4iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCwgQ29uc3RydWN0b3IsIG5hbWUsIGZvcmJpZGRlbkZpZWxkKSB7XG4gIGlmICghKGl0IGluc3RhbmNlb2YgQ29uc3RydWN0b3IpIHx8IChmb3JiaWRkZW5GaWVsZCAhPT0gdW5kZWZpbmVkICYmIGZvcmJpZGRlbkZpZWxkIGluIGl0KSkge1xuICAgIHRocm93IFR5cGVFcnJvcihuYW1lICsgJzogaW5jb3JyZWN0IGludm9jYXRpb24hJyk7XG4gIH0gcmV0dXJuIGl0O1xufTtcbiIsInZhciBjdHggPSByZXF1aXJlKCcuL19jdHgnKTtcbnZhciBjYWxsID0gcmVxdWlyZSgnLi9faXRlci1jYWxsJyk7XG52YXIgaXNBcnJheUl0ZXIgPSByZXF1aXJlKCcuL19pcy1hcnJheS1pdGVyJyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xudmFyIGdldEl0ZXJGbiA9IHJlcXVpcmUoJy4vY29yZS5nZXQtaXRlcmF0b3ItbWV0aG9kJyk7XG52YXIgQlJFQUsgPSB7fTtcbnZhciBSRVRVUk4gPSB7fTtcbnZhciBleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlcmFibGUsIGVudHJpZXMsIGZuLCB0aGF0LCBJVEVSQVRPUikge1xuICB2YXIgaXRlckZuID0gSVRFUkFUT1IgPyBmdW5jdGlvbiAoKSB7IHJldHVybiBpdGVyYWJsZTsgfSA6IGdldEl0ZXJGbihpdGVyYWJsZSk7XG4gIHZhciBmID0gY3R4KGZuLCB0aGF0LCBlbnRyaWVzID8gMiA6IDEpO1xuICB2YXIgaW5kZXggPSAwO1xuICB2YXIgbGVuZ3RoLCBzdGVwLCBpdGVyYXRvciwgcmVzdWx0O1xuICBpZiAodHlwZW9mIGl0ZXJGbiAhPSAnZnVuY3Rpb24nKSB0aHJvdyBUeXBlRXJyb3IoaXRlcmFibGUgKyAnIGlzIG5vdCBpdGVyYWJsZSEnKTtcbiAgLy8gZmFzdCBjYXNlIGZvciBhcnJheXMgd2l0aCBkZWZhdWx0IGl0ZXJhdG9yXG4gIGlmIChpc0FycmF5SXRlcihpdGVyRm4pKSBmb3IgKGxlbmd0aCA9IHRvTGVuZ3RoKGl0ZXJhYmxlLmxlbmd0aCk7IGxlbmd0aCA+IGluZGV4OyBpbmRleCsrKSB7XG4gICAgcmVzdWx0ID0gZW50cmllcyA/IGYoYW5PYmplY3Qoc3RlcCA9IGl0ZXJhYmxlW2luZGV4XSlbMF0sIHN0ZXBbMV0pIDogZihpdGVyYWJsZVtpbmRleF0pO1xuICAgIGlmIChyZXN1bHQgPT09IEJSRUFLIHx8IHJlc3VsdCA9PT0gUkVUVVJOKSByZXR1cm4gcmVzdWx0O1xuICB9IGVsc2UgZm9yIChpdGVyYXRvciA9IGl0ZXJGbi5jYWxsKGl0ZXJhYmxlKTsgIShzdGVwID0gaXRlcmF0b3IubmV4dCgpKS5kb25lOykge1xuICAgIHJlc3VsdCA9IGNhbGwoaXRlcmF0b3IsIGYsIHN0ZXAudmFsdWUsIGVudHJpZXMpO1xuICAgIGlmIChyZXN1bHQgPT09IEJSRUFLIHx8IHJlc3VsdCA9PT0gUkVUVVJOKSByZXR1cm4gcmVzdWx0O1xuICB9XG59O1xuZXhwb3J0cy5CUkVBSyA9IEJSRUFLO1xuZXhwb3J0cy5SRVRVUk4gPSBSRVRVUk47XG4iLCJ2YXIgcmVkZWZpbmUgPSByZXF1aXJlKCcuL19yZWRlZmluZScpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAodGFyZ2V0LCBzcmMsIHNhZmUpIHtcbiAgZm9yICh2YXIga2V5IGluIHNyYykgcmVkZWZpbmUodGFyZ2V0LCBrZXksIHNyY1trZXldLCBzYWZlKTtcbiAgcmV0dXJuIHRhcmdldDtcbn07XG4iLCJ2YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0LCBUWVBFKSB7XG4gIGlmICghaXNPYmplY3QoaXQpIHx8IGl0Ll90ICE9PSBUWVBFKSB0aHJvdyBUeXBlRXJyb3IoJ0luY29tcGF0aWJsZSByZWNlaXZlciwgJyArIFRZUEUgKyAnIHJlcXVpcmVkIScpO1xuICByZXR1cm4gaXQ7XG59O1xuIiwidmFyIGRlZiA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpLmY7XG52YXIgaGFzID0gcmVxdWlyZSgnLi9faGFzJyk7XG52YXIgVEFHID0gcmVxdWlyZSgnLi9fd2tzJykoJ3RvU3RyaW5nVGFnJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0LCB0YWcsIHN0YXQpIHtcbiAgaWYgKGl0ICYmICFoYXMoaXQgPSBzdGF0ID8gaXQgOiBpdC5wcm90b3R5cGUsIFRBRykpIGRlZihpdCwgVEFHLCB7IGNvbmZpZ3VyYWJsZTogdHJ1ZSwgdmFsdWU6IHRhZyB9KTtcbn07XG4iLCIvLyBnZXR0aW5nIHRhZyBmcm9tIDE5LjEuMy42IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcoKVxudmFyIGNvZiA9IHJlcXVpcmUoJy4vX2NvZicpO1xudmFyIFRBRyA9IHJlcXVpcmUoJy4vX3drcycpKCd0b1N0cmluZ1RhZycpO1xuLy8gRVMzIHdyb25nIGhlcmVcbnZhciBBUkcgPSBjb2YoZnVuY3Rpb24gKCkgeyByZXR1cm4gYXJndW1lbnRzOyB9KCkpID09ICdBcmd1bWVudHMnO1xuXG4vLyBmYWxsYmFjayBmb3IgSUUxMSBTY3JpcHQgQWNjZXNzIERlbmllZCBlcnJvclxudmFyIHRyeUdldCA9IGZ1bmN0aW9uIChpdCwga2V5KSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIGl0W2tleV07XG4gIH0gY2F0Y2ggKGUpIHsgLyogZW1wdHkgKi8gfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgdmFyIE8sIFQsIEI7XG4gIHJldHVybiBpdCA9PT0gdW5kZWZpbmVkID8gJ1VuZGVmaW5lZCcgOiBpdCA9PT0gbnVsbCA/ICdOdWxsJ1xuICAgIC8vIEBAdG9TdHJpbmdUYWcgY2FzZVxuICAgIDogdHlwZW9mIChUID0gdHJ5R2V0KE8gPSBPYmplY3QoaXQpLCBUQUcpKSA9PSAnc3RyaW5nJyA/IFRcbiAgICAvLyBidWlsdGluVGFnIGNhc2VcbiAgICA6IEFSRyA/IGNvZihPKVxuICAgIC8vIEVTMyBhcmd1bWVudHMgZmFsbGJhY2tcbiAgICA6IChCID0gY29mKE8pKSA9PSAnT2JqZWN0JyAmJiB0eXBlb2YgTy5jYWxsZWUgPT0gJ2Z1bmN0aW9uJyA/ICdBcmd1bWVudHMnIDogQjtcbn07XG4iLCJ2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGRlZmluZWQgPSByZXF1aXJlKCcuL19kZWZpbmVkJyk7XG52YXIgZmFpbHMgPSByZXF1aXJlKCcuL19mYWlscycpO1xudmFyIHNwYWNlcyA9IHJlcXVpcmUoJy4vX3N0cmluZy13cycpO1xudmFyIHNwYWNlID0gJ1snICsgc3BhY2VzICsgJ10nO1xudmFyIG5vbiA9ICdcXHUyMDBiXFx1MDA4NSc7XG52YXIgbHRyaW0gPSBSZWdFeHAoJ14nICsgc3BhY2UgKyBzcGFjZSArICcqJyk7XG52YXIgcnRyaW0gPSBSZWdFeHAoc3BhY2UgKyBzcGFjZSArICcqJCcpO1xuXG52YXIgZXhwb3J0ZXIgPSBmdW5jdGlvbiAoS0VZLCBleGVjLCBBTElBUykge1xuICB2YXIgZXhwID0ge307XG4gIHZhciBGT1JDRSA9IGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gISFzcGFjZXNbS0VZXSgpIHx8IG5vbltLRVldKCkgIT0gbm9uO1xuICB9KTtcbiAgdmFyIGZuID0gZXhwW0tFWV0gPSBGT1JDRSA/IGV4ZWModHJpbSkgOiBzcGFjZXNbS0VZXTtcbiAgaWYgKEFMSUFTKSBleHBbQUxJQVNdID0gZm47XG4gICRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogRk9SQ0UsICdTdHJpbmcnLCBleHApO1xufTtcblxuLy8gMSAtPiBTdHJpbmcjdHJpbUxlZnRcbi8vIDIgLT4gU3RyaW5nI3RyaW1SaWdodFxuLy8gMyAtPiBTdHJpbmcjdHJpbVxudmFyIHRyaW0gPSBleHBvcnRlci50cmltID0gZnVuY3Rpb24gKHN0cmluZywgVFlQRSkge1xuICBzdHJpbmcgPSBTdHJpbmcoZGVmaW5lZChzdHJpbmcpKTtcbiAgaWYgKFRZUEUgJiAxKSBzdHJpbmcgPSBzdHJpbmcucmVwbGFjZShsdHJpbSwgJycpO1xuICBpZiAoVFlQRSAmIDIpIHN0cmluZyA9IHN0cmluZy5yZXBsYWNlKHJ0cmltLCAnJyk7XG4gIHJldHVybiBzdHJpbmc7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydGVyO1xuIiwibW9kdWxlLmV4cG9ydHMgPSB7fTtcbiIsInZhciBjb3JlID0gcmVxdWlyZSgnLi9fY29yZScpO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIFNIQVJFRCA9ICdfX2NvcmUtanNfc2hhcmVkX18nO1xudmFyIHN0b3JlID0gZ2xvYmFsW1NIQVJFRF0gfHwgKGdsb2JhbFtTSEFSRURdID0ge30pO1xuXG4obW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoa2V5LCB2YWx1ZSkge1xuICByZXR1cm4gc3RvcmVba2V5XSB8fCAoc3RvcmVba2V5XSA9IHZhbHVlICE9PSB1bmRlZmluZWQgPyB2YWx1ZSA6IHt9KTtcbn0pKCd2ZXJzaW9ucycsIFtdKS5wdXNoKHtcbiAgdmVyc2lvbjogY29yZS52ZXJzaW9uLFxuICBtb2RlOiByZXF1aXJlKCcuL19saWJyYXJ5JykgPyAncHVyZScgOiAnZ2xvYmFsJyxcbiAgY29weXJpZ2h0OiAnwqkgMjAxOSBEZW5pcyBQdXNoa2FyZXYgKHpsb2lyb2NrLnJ1KSdcbn0pO1xuIiwiLy8gZmFsbGJhY2sgZm9yIG5vbi1hcnJheS1saWtlIEVTMyBhbmQgbm9uLWVudW1lcmFibGUgb2xkIFY4IHN0cmluZ3NcbnZhciBjb2YgPSByZXF1aXJlKCcuL19jb2YnKTtcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wcm90b3R5cGUtYnVpbHRpbnNcbm1vZHVsZS5leHBvcnRzID0gT2JqZWN0KCd6JykucHJvcGVydHlJc0VudW1lcmFibGUoMCkgPyBPYmplY3QgOiBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIGNvZihpdCkgPT0gJ1N0cmluZycgPyBpdC5zcGxpdCgnJykgOiBPYmplY3QoaXQpO1xufTtcbiIsImV4cG9ydHMuZiA9IHt9LnByb3BlcnR5SXNFbnVtZXJhYmxlO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gMjEuMi41LjMgZ2V0IFJlZ0V4cC5wcm90b3R5cGUuZmxhZ3NcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoKSB7XG4gIHZhciB0aGF0ID0gYW5PYmplY3QodGhpcyk7XG4gIHZhciByZXN1bHQgPSAnJztcbiAgaWYgKHRoYXQuZ2xvYmFsKSByZXN1bHQgKz0gJ2cnO1xuICBpZiAodGhhdC5pZ25vcmVDYXNlKSByZXN1bHQgKz0gJ2knO1xuICBpZiAodGhhdC5tdWx0aWxpbmUpIHJlc3VsdCArPSAnbSc7XG4gIGlmICh0aGF0LnVuaWNvZGUpIHJlc3VsdCArPSAndSc7XG4gIGlmICh0aGF0LnN0aWNreSkgcmVzdWx0ICs9ICd5JztcbiAgcmV0dXJuIHJlc3VsdDtcbn07XG4iLCIvLyA3LjMuMjAgU3BlY2llc0NvbnN0cnVjdG9yKE8sIGRlZmF1bHRDb25zdHJ1Y3RvcilcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIGFGdW5jdGlvbiA9IHJlcXVpcmUoJy4vX2EtZnVuY3Rpb24nKTtcbnZhciBTUEVDSUVTID0gcmVxdWlyZSgnLi9fd2tzJykoJ3NwZWNpZXMnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKE8sIEQpIHtcbiAgdmFyIEMgPSBhbk9iamVjdChPKS5jb25zdHJ1Y3RvcjtcbiAgdmFyIFM7XG4gIHJldHVybiBDID09PSB1bmRlZmluZWQgfHwgKFMgPSBhbk9iamVjdChDKVtTUEVDSUVTXSkgPT0gdW5kZWZpbmVkID8gRCA6IGFGdW5jdGlvbihTKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8vIGZhbHNlIC0+IEFycmF5I2luZGV4T2Zcbi8vIHRydWUgIC0+IEFycmF5I2luY2x1ZGVzXG52YXIgdG9JT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8taW9iamVjdCcpO1xudmFyIHRvTGVuZ3RoID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJyk7XG52YXIgdG9BYnNvbHV0ZUluZGV4ID0gcmVxdWlyZSgnLi9fdG8tYWJzb2x1dGUtaW5kZXgnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKElTX0lOQ0xVREVTKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoJHRoaXMsIGVsLCBmcm9tSW5kZXgpIHtcbiAgICB2YXIgTyA9IHRvSU9iamVjdCgkdGhpcyk7XG4gICAgdmFyIGxlbmd0aCA9IHRvTGVuZ3RoKE8ubGVuZ3RoKTtcbiAgICB2YXIgaW5kZXggPSB0b0Fic29sdXRlSW5kZXgoZnJvbUluZGV4LCBsZW5ndGgpO1xuICAgIHZhciB2YWx1ZTtcbiAgICAvLyBBcnJheSNpbmNsdWRlcyB1c2VzIFNhbWVWYWx1ZVplcm8gZXF1YWxpdHkgYWxnb3JpdGhtXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXNlbGYtY29tcGFyZVxuICAgIGlmIChJU19JTkNMVURFUyAmJiBlbCAhPSBlbCkgd2hpbGUgKGxlbmd0aCA+IGluZGV4KSB7XG4gICAgICB2YWx1ZSA9IE9baW5kZXgrK107XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tc2VsZi1jb21wYXJlXG4gICAgICBpZiAodmFsdWUgIT0gdmFsdWUpIHJldHVybiB0cnVlO1xuICAgIC8vIEFycmF5I2luZGV4T2YgaWdub3JlcyBob2xlcywgQXJyYXkjaW5jbHVkZXMgLSBub3RcbiAgICB9IGVsc2UgZm9yICg7bGVuZ3RoID4gaW5kZXg7IGluZGV4KyspIGlmIChJU19JTkNMVURFUyB8fCBpbmRleCBpbiBPKSB7XG4gICAgICBpZiAoT1tpbmRleF0gPT09IGVsKSByZXR1cm4gSVNfSU5DTFVERVMgfHwgaW5kZXggfHwgMDtcbiAgICB9IHJldHVybiAhSVNfSU5DTFVERVMgJiYgLTE7XG4gIH07XG59O1xuIiwiZXhwb3J0cy5mID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcbiIsIi8vIDcuMi4yIElzQXJyYXkoYXJndW1lbnQpXG52YXIgY29mID0gcmVxdWlyZSgnLi9fY29mJyk7XG5tb2R1bGUuZXhwb3J0cyA9IEFycmF5LmlzQXJyYXkgfHwgZnVuY3Rpb24gaXNBcnJheShhcmcpIHtcbiAgcmV0dXJuIGNvZihhcmcpID09ICdBcnJheSc7XG59O1xuIiwidmFyIHRvSW50ZWdlciA9IHJlcXVpcmUoJy4vX3RvLWludGVnZXInKTtcbnZhciBkZWZpbmVkID0gcmVxdWlyZSgnLi9fZGVmaW5lZCcpO1xuLy8gdHJ1ZSAgLT4gU3RyaW5nI2F0XG4vLyBmYWxzZSAtPiBTdHJpbmcjY29kZVBvaW50QXRcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKFRPX1NUUklORykge1xuICByZXR1cm4gZnVuY3Rpb24gKHRoYXQsIHBvcykge1xuICAgIHZhciBzID0gU3RyaW5nKGRlZmluZWQodGhhdCkpO1xuICAgIHZhciBpID0gdG9JbnRlZ2VyKHBvcyk7XG4gICAgdmFyIGwgPSBzLmxlbmd0aDtcbiAgICB2YXIgYSwgYjtcbiAgICBpZiAoaSA8IDAgfHwgaSA+PSBsKSByZXR1cm4gVE9fU1RSSU5HID8gJycgOiB1bmRlZmluZWQ7XG4gICAgYSA9IHMuY2hhckNvZGVBdChpKTtcbiAgICByZXR1cm4gYSA8IDB4ZDgwMCB8fCBhID4gMHhkYmZmIHx8IGkgKyAxID09PSBsIHx8IChiID0gcy5jaGFyQ29kZUF0KGkgKyAxKSkgPCAweGRjMDAgfHwgYiA+IDB4ZGZmZlxuICAgICAgPyBUT19TVFJJTkcgPyBzLmNoYXJBdChpKSA6IGFcbiAgICAgIDogVE9fU1RSSU5HID8gcy5zbGljZShpLCBpICsgMikgOiAoYSAtIDB4ZDgwMCA8PCAxMCkgKyAoYiAtIDB4ZGMwMCkgKyAweDEwMDAwO1xuICB9O1xufTtcbiIsIi8vIDcuMi44IElzUmVnRXhwKGFyZ3VtZW50KVxudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgY29mID0gcmVxdWlyZSgnLi9fY29mJyk7XG52YXIgTUFUQ0ggPSByZXF1aXJlKCcuL193a3MnKSgnbWF0Y2gnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHZhciBpc1JlZ0V4cDtcbiAgcmV0dXJuIGlzT2JqZWN0KGl0KSAmJiAoKGlzUmVnRXhwID0gaXRbTUFUQ0hdKSAhPT0gdW5kZWZpbmVkID8gISFpc1JlZ0V4cCA6IGNvZihpdCkgPT0gJ1JlZ0V4cCcpO1xufTtcbiIsInZhciBJVEVSQVRPUiA9IHJlcXVpcmUoJy4vX3drcycpKCdpdGVyYXRvcicpO1xudmFyIFNBRkVfQ0xPU0lORyA9IGZhbHNlO1xuXG50cnkge1xuICB2YXIgcml0ZXIgPSBbN11bSVRFUkFUT1JdKCk7XG4gIHJpdGVyWydyZXR1cm4nXSA9IGZ1bmN0aW9uICgpIHsgU0FGRV9DTE9TSU5HID0gdHJ1ZTsgfTtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXRocm93LWxpdGVyYWxcbiAgQXJyYXkuZnJvbShyaXRlciwgZnVuY3Rpb24gKCkgeyB0aHJvdyAyOyB9KTtcbn0gY2F0Y2ggKGUpIHsgLyogZW1wdHkgKi8gfVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChleGVjLCBza2lwQ2xvc2luZykge1xuICBpZiAoIXNraXBDbG9zaW5nICYmICFTQUZFX0NMT1NJTkcpIHJldHVybiBmYWxzZTtcbiAgdmFyIHNhZmUgPSBmYWxzZTtcbiAgdHJ5IHtcbiAgICB2YXIgYXJyID0gWzddO1xuICAgIHZhciBpdGVyID0gYXJyW0lURVJBVE9SXSgpO1xuICAgIGl0ZXIubmV4dCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHsgZG9uZTogc2FmZSA9IHRydWUgfTsgfTtcbiAgICBhcnJbSVRFUkFUT1JdID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gaXRlcjsgfTtcbiAgICBleGVjKGFycik7XG4gIH0gY2F0Y2ggKGUpIHsgLyogZW1wdHkgKi8gfVxuICByZXR1cm4gc2FmZTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciBjbGFzc29mID0gcmVxdWlyZSgnLi9fY2xhc3NvZicpO1xudmFyIGJ1aWx0aW5FeGVjID0gUmVnRXhwLnByb3RvdHlwZS5leGVjO1xuXG4gLy8gYFJlZ0V4cEV4ZWNgIGFic3RyYWN0IG9wZXJhdGlvblxuLy8gaHR0cHM6Ly90YzM5LmdpdGh1Yi5pby9lY21hMjYyLyNzZWMtcmVnZXhwZXhlY1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoUiwgUykge1xuICB2YXIgZXhlYyA9IFIuZXhlYztcbiAgaWYgKHR5cGVvZiBleGVjID09PSAnZnVuY3Rpb24nKSB7XG4gICAgdmFyIHJlc3VsdCA9IGV4ZWMuY2FsbChSLCBTKTtcbiAgICBpZiAodHlwZW9mIHJlc3VsdCAhPT0gJ29iamVjdCcpIHtcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ1JlZ0V4cCBleGVjIG1ldGhvZCByZXR1cm5lZCBzb21ldGhpbmcgb3RoZXIgdGhhbiBhbiBPYmplY3Qgb3IgbnVsbCcpO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG4gIGlmIChjbGFzc29mKFIpICE9PSAnUmVnRXhwJykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ1JlZ0V4cCNleGVjIGNhbGxlZCBvbiBpbmNvbXBhdGlibGUgcmVjZWl2ZXInKTtcbiAgfVxuICByZXR1cm4gYnVpbHRpbkV4ZWMuY2FsbChSLCBTKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5yZXF1aXJlKCcuL2VzNi5yZWdleHAuZXhlYycpO1xudmFyIHJlZGVmaW5lID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUnKTtcbnZhciBoaWRlID0gcmVxdWlyZSgnLi9faGlkZScpO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi9fZmFpbHMnKTtcbnZhciBkZWZpbmVkID0gcmVxdWlyZSgnLi9fZGVmaW5lZCcpO1xudmFyIHdrcyA9IHJlcXVpcmUoJy4vX3drcycpO1xudmFyIHJlZ2V4cEV4ZWMgPSByZXF1aXJlKCcuL19yZWdleHAtZXhlYycpO1xuXG52YXIgU1BFQ0lFUyA9IHdrcygnc3BlY2llcycpO1xuXG52YXIgUkVQTEFDRV9TVVBQT1JUU19OQU1FRF9HUk9VUFMgPSAhZmFpbHMoZnVuY3Rpb24gKCkge1xuICAvLyAjcmVwbGFjZSBuZWVkcyBidWlsdC1pbiBzdXBwb3J0IGZvciBuYW1lZCBncm91cHMuXG4gIC8vICNtYXRjaCB3b3JrcyBmaW5lIGJlY2F1c2UgaXQganVzdCByZXR1cm4gdGhlIGV4ZWMgcmVzdWx0cywgZXZlbiBpZiBpdCBoYXNcbiAgLy8gYSBcImdyb3BzXCIgcHJvcGVydHkuXG4gIHZhciByZSA9IC8uLztcbiAgcmUuZXhlYyA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgcmVzdWx0ID0gW107XG4gICAgcmVzdWx0Lmdyb3VwcyA9IHsgYTogJzcnIH07XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfTtcbiAgcmV0dXJuICcnLnJlcGxhY2UocmUsICckPGE+JykgIT09ICc3Jztcbn0pO1xuXG52YXIgU1BMSVRfV09SS1NfV0lUSF9PVkVSV1JJVFRFTl9FWEVDID0gKGZ1bmN0aW9uICgpIHtcbiAgLy8gQ2hyb21lIDUxIGhhcyBhIGJ1Z2d5IFwic3BsaXRcIiBpbXBsZW1lbnRhdGlvbiB3aGVuIFJlZ0V4cCNleGVjICE9PSBuYXRpdmVFeGVjXG4gIHZhciByZSA9IC8oPzopLztcbiAgdmFyIG9yaWdpbmFsRXhlYyA9IHJlLmV4ZWM7XG4gIHJlLmV4ZWMgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBvcmlnaW5hbEV4ZWMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsgfTtcbiAgdmFyIHJlc3VsdCA9ICdhYicuc3BsaXQocmUpO1xuICByZXR1cm4gcmVzdWx0Lmxlbmd0aCA9PT0gMiAmJiByZXN1bHRbMF0gPT09ICdhJyAmJiByZXN1bHRbMV0gPT09ICdiJztcbn0pKCk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKEtFWSwgbGVuZ3RoLCBleGVjKSB7XG4gIHZhciBTWU1CT0wgPSB3a3MoS0VZKTtcblxuICB2YXIgREVMRUdBVEVTX1RPX1NZTUJPTCA9ICFmYWlscyhmdW5jdGlvbiAoKSB7XG4gICAgLy8gU3RyaW5nIG1ldGhvZHMgY2FsbCBzeW1ib2wtbmFtZWQgUmVnRXAgbWV0aG9kc1xuICAgIHZhciBPID0ge307XG4gICAgT1tTWU1CT0xdID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gNzsgfTtcbiAgICByZXR1cm4gJydbS0VZXShPKSAhPSA3O1xuICB9KTtcblxuICB2YXIgREVMRUdBVEVTX1RPX0VYRUMgPSBERUxFR0FURVNfVE9fU1lNQk9MID8gIWZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgICAvLyBTeW1ib2wtbmFtZWQgUmVnRXhwIG1ldGhvZHMgY2FsbCAuZXhlY1xuICAgIHZhciBleGVjQ2FsbGVkID0gZmFsc2U7XG4gICAgdmFyIHJlID0gL2EvO1xuICAgIHJlLmV4ZWMgPSBmdW5jdGlvbiAoKSB7IGV4ZWNDYWxsZWQgPSB0cnVlOyByZXR1cm4gbnVsbDsgfTtcbiAgICBpZiAoS0VZID09PSAnc3BsaXQnKSB7XG4gICAgICAvLyBSZWdFeHBbQEBzcGxpdF0gZG9lc24ndCBjYWxsIHRoZSByZWdleCdzIGV4ZWMgbWV0aG9kLCBidXQgZmlyc3QgY3JlYXRlc1xuICAgICAgLy8gYSBuZXcgb25lLiBXZSBuZWVkIHRvIHJldHVybiB0aGUgcGF0Y2hlZCByZWdleCB3aGVuIGNyZWF0aW5nIHRoZSBuZXcgb25lLlxuICAgICAgcmUuY29uc3RydWN0b3IgPSB7fTtcbiAgICAgIHJlLmNvbnN0cnVjdG9yW1NQRUNJRVNdID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gcmU7IH07XG4gICAgfVxuICAgIHJlW1NZTUJPTF0oJycpO1xuICAgIHJldHVybiAhZXhlY0NhbGxlZDtcbiAgfSkgOiB1bmRlZmluZWQ7XG5cbiAgaWYgKFxuICAgICFERUxFR0FURVNfVE9fU1lNQk9MIHx8XG4gICAgIURFTEVHQVRFU19UT19FWEVDIHx8XG4gICAgKEtFWSA9PT0gJ3JlcGxhY2UnICYmICFSRVBMQUNFX1NVUFBPUlRTX05BTUVEX0dST1VQUykgfHxcbiAgICAoS0VZID09PSAnc3BsaXQnICYmICFTUExJVF9XT1JLU19XSVRIX09WRVJXUklUVEVOX0VYRUMpXG4gICkge1xuICAgIHZhciBuYXRpdmVSZWdFeHBNZXRob2QgPSAvLi9bU1lNQk9MXTtcbiAgICB2YXIgZm5zID0gZXhlYyhcbiAgICAgIGRlZmluZWQsXG4gICAgICBTWU1CT0wsXG4gICAgICAnJ1tLRVldLFxuICAgICAgZnVuY3Rpb24gbWF5YmVDYWxsTmF0aXZlKG5hdGl2ZU1ldGhvZCwgcmVnZXhwLCBzdHIsIGFyZzIsIGZvcmNlU3RyaW5nTWV0aG9kKSB7XG4gICAgICAgIGlmIChyZWdleHAuZXhlYyA9PT0gcmVnZXhwRXhlYykge1xuICAgICAgICAgIGlmIChERUxFR0FURVNfVE9fU1lNQk9MICYmICFmb3JjZVN0cmluZ01ldGhvZCkge1xuICAgICAgICAgICAgLy8gVGhlIG5hdGl2ZSBTdHJpbmcgbWV0aG9kIGFscmVhZHkgZGVsZWdhdGVzIHRvIEBAbWV0aG9kICh0aGlzXG4gICAgICAgICAgICAvLyBwb2x5ZmlsbGVkIGZ1bmN0aW9uKSwgbGVhc2luZyB0byBpbmZpbml0ZSByZWN1cnNpb24uXG4gICAgICAgICAgICAvLyBXZSBhdm9pZCBpdCBieSBkaXJlY3RseSBjYWxsaW5nIHRoZSBuYXRpdmUgQEBtZXRob2QgbWV0aG9kLlxuICAgICAgICAgICAgcmV0dXJuIHsgZG9uZTogdHJ1ZSwgdmFsdWU6IG5hdGl2ZVJlZ0V4cE1ldGhvZC5jYWxsKHJlZ2V4cCwgc3RyLCBhcmcyKSB9O1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4geyBkb25lOiB0cnVlLCB2YWx1ZTogbmF0aXZlTWV0aG9kLmNhbGwoc3RyLCByZWdleHAsIGFyZzIpIH07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHsgZG9uZTogZmFsc2UgfTtcbiAgICAgIH1cbiAgICApO1xuICAgIHZhciBzdHJmbiA9IGZuc1swXTtcbiAgICB2YXIgcnhmbiA9IGZuc1sxXTtcblxuICAgIHJlZGVmaW5lKFN0cmluZy5wcm90b3R5cGUsIEtFWSwgc3RyZm4pO1xuICAgIGhpZGUoUmVnRXhwLnByb3RvdHlwZSwgU1lNQk9MLCBsZW5ndGggPT0gMlxuICAgICAgLy8gMjEuMi41LjggUmVnRXhwLnByb3RvdHlwZVtAQHJlcGxhY2VdKHN0cmluZywgcmVwbGFjZVZhbHVlKVxuICAgICAgLy8gMjEuMi41LjExIFJlZ0V4cC5wcm90b3R5cGVbQEBzcGxpdF0oc3RyaW5nLCBsaW1pdClcbiAgICAgID8gZnVuY3Rpb24gKHN0cmluZywgYXJnKSB7IHJldHVybiByeGZuLmNhbGwoc3RyaW5nLCB0aGlzLCBhcmcpOyB9XG4gICAgICAvLyAyMS4yLjUuNiBSZWdFeHAucHJvdG90eXBlW0BAbWF0Y2hdKHN0cmluZylcbiAgICAgIC8vIDIxLjIuNS45IFJlZ0V4cC5wcm90b3R5cGVbQEBzZWFyY2hdKHN0cmluZylcbiAgICAgIDogZnVuY3Rpb24gKHN0cmluZykgeyByZXR1cm4gcnhmbi5jYWxsKHN0cmluZywgdGhpcyk7IH1cbiAgICApO1xuICB9XG59O1xuIiwidmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIG5hdmlnYXRvciA9IGdsb2JhbC5uYXZpZ2F0b3I7XG5cbm1vZHVsZS5leHBvcnRzID0gbmF2aWdhdG9yICYmIG5hdmlnYXRvci51c2VyQWdlbnQgfHwgJyc7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIHJlZGVmaW5lID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUnKTtcbnZhciByZWRlZmluZUFsbCA9IHJlcXVpcmUoJy4vX3JlZGVmaW5lLWFsbCcpO1xudmFyIG1ldGEgPSByZXF1aXJlKCcuL19tZXRhJyk7XG52YXIgZm9yT2YgPSByZXF1aXJlKCcuL19mb3Itb2YnKTtcbnZhciBhbkluc3RhbmNlID0gcmVxdWlyZSgnLi9fYW4taW5zdGFuY2UnKTtcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi9fZmFpbHMnKTtcbnZhciAkaXRlckRldGVjdCA9IHJlcXVpcmUoJy4vX2l0ZXItZGV0ZWN0Jyk7XG52YXIgc2V0VG9TdHJpbmdUYWcgPSByZXF1aXJlKCcuL19zZXQtdG8tc3RyaW5nLXRhZycpO1xudmFyIGluaGVyaXRJZlJlcXVpcmVkID0gcmVxdWlyZSgnLi9faW5oZXJpdC1pZi1yZXF1aXJlZCcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChOQU1FLCB3cmFwcGVyLCBtZXRob2RzLCBjb21tb24sIElTX01BUCwgSVNfV0VBSykge1xuICB2YXIgQmFzZSA9IGdsb2JhbFtOQU1FXTtcbiAgdmFyIEMgPSBCYXNlO1xuICB2YXIgQURERVIgPSBJU19NQVAgPyAnc2V0JyA6ICdhZGQnO1xuICB2YXIgcHJvdG8gPSBDICYmIEMucHJvdG90eXBlO1xuICB2YXIgTyA9IHt9O1xuICB2YXIgZml4TWV0aG9kID0gZnVuY3Rpb24gKEtFWSkge1xuICAgIHZhciBmbiA9IHByb3RvW0tFWV07XG4gICAgcmVkZWZpbmUocHJvdG8sIEtFWSxcbiAgICAgIEtFWSA9PSAnZGVsZXRlJyA/IGZ1bmN0aW9uIChhKSB7XG4gICAgICAgIHJldHVybiBJU19XRUFLICYmICFpc09iamVjdChhKSA/IGZhbHNlIDogZm4uY2FsbCh0aGlzLCBhID09PSAwID8gMCA6IGEpO1xuICAgICAgfSA6IEtFWSA9PSAnaGFzJyA/IGZ1bmN0aW9uIGhhcyhhKSB7XG4gICAgICAgIHJldHVybiBJU19XRUFLICYmICFpc09iamVjdChhKSA/IGZhbHNlIDogZm4uY2FsbCh0aGlzLCBhID09PSAwID8gMCA6IGEpO1xuICAgICAgfSA6IEtFWSA9PSAnZ2V0JyA/IGZ1bmN0aW9uIGdldChhKSB7XG4gICAgICAgIHJldHVybiBJU19XRUFLICYmICFpc09iamVjdChhKSA/IHVuZGVmaW5lZCA6IGZuLmNhbGwodGhpcywgYSA9PT0gMCA/IDAgOiBhKTtcbiAgICAgIH0gOiBLRVkgPT0gJ2FkZCcgPyBmdW5jdGlvbiBhZGQoYSkgeyBmbi5jYWxsKHRoaXMsIGEgPT09IDAgPyAwIDogYSk7IHJldHVybiB0aGlzOyB9XG4gICAgICAgIDogZnVuY3Rpb24gc2V0KGEsIGIpIHsgZm4uY2FsbCh0aGlzLCBhID09PSAwID8gMCA6IGEsIGIpOyByZXR1cm4gdGhpczsgfVxuICAgICk7XG4gIH07XG4gIGlmICh0eXBlb2YgQyAhPSAnZnVuY3Rpb24nIHx8ICEoSVNfV0VBSyB8fCBwcm90by5mb3JFYWNoICYmICFmYWlscyhmdW5jdGlvbiAoKSB7XG4gICAgbmV3IEMoKS5lbnRyaWVzKCkubmV4dCgpO1xuICB9KSkpIHtcbiAgICAvLyBjcmVhdGUgY29sbGVjdGlvbiBjb25zdHJ1Y3RvclxuICAgIEMgPSBjb21tb24uZ2V0Q29uc3RydWN0b3Iod3JhcHBlciwgTkFNRSwgSVNfTUFQLCBBRERFUik7XG4gICAgcmVkZWZpbmVBbGwoQy5wcm90b3R5cGUsIG1ldGhvZHMpO1xuICAgIG1ldGEuTkVFRCA9IHRydWU7XG4gIH0gZWxzZSB7XG4gICAgdmFyIGluc3RhbmNlID0gbmV3IEMoKTtcbiAgICAvLyBlYXJseSBpbXBsZW1lbnRhdGlvbnMgbm90IHN1cHBvcnRzIGNoYWluaW5nXG4gICAgdmFyIEhBU05UX0NIQUlOSU5HID0gaW5zdGFuY2VbQURERVJdKElTX1dFQUsgPyB7fSA6IC0wLCAxKSAhPSBpbnN0YW5jZTtcbiAgICAvLyBWOCB+ICBDaHJvbWl1bSA0MC0gd2Vhay1jb2xsZWN0aW9ucyB0aHJvd3Mgb24gcHJpbWl0aXZlcywgYnV0IHNob3VsZCByZXR1cm4gZmFsc2VcbiAgICB2YXIgVEhST1dTX09OX1BSSU1JVElWRVMgPSBmYWlscyhmdW5jdGlvbiAoKSB7IGluc3RhbmNlLmhhcygxKTsgfSk7XG4gICAgLy8gbW9zdCBlYXJseSBpbXBsZW1lbnRhdGlvbnMgZG9lc24ndCBzdXBwb3J0cyBpdGVyYWJsZXMsIG1vc3QgbW9kZXJuIC0gbm90IGNsb3NlIGl0IGNvcnJlY3RseVxuICAgIHZhciBBQ0NFUFRfSVRFUkFCTEVTID0gJGl0ZXJEZXRlY3QoZnVuY3Rpb24gKGl0ZXIpIHsgbmV3IEMoaXRlcik7IH0pOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ld1xuICAgIC8vIGZvciBlYXJseSBpbXBsZW1lbnRhdGlvbnMgLTAgYW5kICswIG5vdCB0aGUgc2FtZVxuICAgIHZhciBCVUdHWV9aRVJPID0gIUlTX1dFQUsgJiYgZmFpbHMoZnVuY3Rpb24gKCkge1xuICAgICAgLy8gVjggfiBDaHJvbWl1bSA0Mi0gZmFpbHMgb25seSB3aXRoIDUrIGVsZW1lbnRzXG4gICAgICB2YXIgJGluc3RhbmNlID0gbmV3IEMoKTtcbiAgICAgIHZhciBpbmRleCA9IDU7XG4gICAgICB3aGlsZSAoaW5kZXgtLSkgJGluc3RhbmNlW0FEREVSXShpbmRleCwgaW5kZXgpO1xuICAgICAgcmV0dXJuICEkaW5zdGFuY2UuaGFzKC0wKTtcbiAgICB9KTtcbiAgICBpZiAoIUFDQ0VQVF9JVEVSQUJMRVMpIHtcbiAgICAgIEMgPSB3cmFwcGVyKGZ1bmN0aW9uICh0YXJnZXQsIGl0ZXJhYmxlKSB7XG4gICAgICAgIGFuSW5zdGFuY2UodGFyZ2V0LCBDLCBOQU1FKTtcbiAgICAgICAgdmFyIHRoYXQgPSBpbmhlcml0SWZSZXF1aXJlZChuZXcgQmFzZSgpLCB0YXJnZXQsIEMpO1xuICAgICAgICBpZiAoaXRlcmFibGUgIT0gdW5kZWZpbmVkKSBmb3JPZihpdGVyYWJsZSwgSVNfTUFQLCB0aGF0W0FEREVSXSwgdGhhdCk7XG4gICAgICAgIHJldHVybiB0aGF0O1xuICAgICAgfSk7XG4gICAgICBDLnByb3RvdHlwZSA9IHByb3RvO1xuICAgICAgcHJvdG8uY29uc3RydWN0b3IgPSBDO1xuICAgIH1cbiAgICBpZiAoVEhST1dTX09OX1BSSU1JVElWRVMgfHwgQlVHR1lfWkVSTykge1xuICAgICAgZml4TWV0aG9kKCdkZWxldGUnKTtcbiAgICAgIGZpeE1ldGhvZCgnaGFzJyk7XG4gICAgICBJU19NQVAgJiYgZml4TWV0aG9kKCdnZXQnKTtcbiAgICB9XG4gICAgaWYgKEJVR0dZX1pFUk8gfHwgSEFTTlRfQ0hBSU5JTkcpIGZpeE1ldGhvZChBRERFUik7XG4gICAgLy8gd2VhayBjb2xsZWN0aW9ucyBzaG91bGQgbm90IGNvbnRhaW5zIC5jbGVhciBtZXRob2RcbiAgICBpZiAoSVNfV0VBSyAmJiBwcm90by5jbGVhcikgZGVsZXRlIHByb3RvLmNsZWFyO1xuICB9XG5cbiAgc2V0VG9TdHJpbmdUYWcoQywgTkFNRSk7XG5cbiAgT1tOQU1FXSA9IEM7XG4gICRleHBvcnQoJGV4cG9ydC5HICsgJGV4cG9ydC5XICsgJGV4cG9ydC5GICogKEMgIT0gQmFzZSksIE8pO1xuXG4gIGlmICghSVNfV0VBSykgY29tbW9uLnNldFN0cm9uZyhDLCBOQU1FLCBJU19NQVApO1xuXG4gIHJldHVybiBDO1xufTtcbiIsInZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBoaWRlID0gcmVxdWlyZSgnLi9faGlkZScpO1xudmFyIHVpZCA9IHJlcXVpcmUoJy4vX3VpZCcpO1xudmFyIFRZUEVEID0gdWlkKCd0eXBlZF9hcnJheScpO1xudmFyIFZJRVcgPSB1aWQoJ3ZpZXcnKTtcbnZhciBBQlYgPSAhIShnbG9iYWwuQXJyYXlCdWZmZXIgJiYgZ2xvYmFsLkRhdGFWaWV3KTtcbnZhciBDT05TVFIgPSBBQlY7XG52YXIgaSA9IDA7XG52YXIgbCA9IDk7XG52YXIgVHlwZWQ7XG5cbnZhciBUeXBlZEFycmF5Q29uc3RydWN0b3JzID0gKFxuICAnSW50OEFycmF5LFVpbnQ4QXJyYXksVWludDhDbGFtcGVkQXJyYXksSW50MTZBcnJheSxVaW50MTZBcnJheSxJbnQzMkFycmF5LFVpbnQzMkFycmF5LEZsb2F0MzJBcnJheSxGbG9hdDY0QXJyYXknXG4pLnNwbGl0KCcsJyk7XG5cbndoaWxlIChpIDwgbCkge1xuICBpZiAoVHlwZWQgPSBnbG9iYWxbVHlwZWRBcnJheUNvbnN0cnVjdG9yc1tpKytdXSkge1xuICAgIGhpZGUoVHlwZWQucHJvdG90eXBlLCBUWVBFRCwgdHJ1ZSk7XG4gICAgaGlkZShUeXBlZC5wcm90b3R5cGUsIFZJRVcsIHRydWUpO1xuICB9IGVsc2UgQ09OU1RSID0gZmFsc2U7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBBQlY6IEFCVixcbiAgQ09OU1RSOiBDT05TVFIsXG4gIFRZUEVEOiBUWVBFRCxcbiAgVklFVzogVklFV1xufTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIEZvcmNlZCByZXBsYWNlbWVudCBwcm90b3R5cGUgYWNjZXNzb3JzIG1ldGhvZHNcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9fbGlicmFyeScpIHx8ICFyZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uICgpIHtcbiAgdmFyIEsgPSBNYXRoLnJhbmRvbSgpO1xuICAvLyBJbiBGRiB0aHJvd3Mgb25seSBkZWZpbmUgbWV0aG9kc1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWYsIG5vLXVzZWxlc3MtY2FsbFxuICBfX2RlZmluZVNldHRlcl9fLmNhbGwobnVsbCwgSywgZnVuY3Rpb24gKCkgeyAvKiBlbXB0eSAqLyB9KTtcbiAgZGVsZXRlIHJlcXVpcmUoJy4vX2dsb2JhbCcpW0tdO1xufSk7XG4iLCIndXNlIHN0cmljdCc7XG4vLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL3Byb3Bvc2FsLXNldG1hcC1vZmZyb20vXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChDT0xMRUNUSU9OKSB7XG4gICRleHBvcnQoJGV4cG9ydC5TLCBDT0xMRUNUSU9OLCB7IG9mOiBmdW5jdGlvbiBvZigpIHtcbiAgICB2YXIgbGVuZ3RoID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICB2YXIgQSA9IG5ldyBBcnJheShsZW5ndGgpO1xuICAgIHdoaWxlIChsZW5ndGgtLSkgQVtsZW5ndGhdID0gYXJndW1lbnRzW2xlbmd0aF07XG4gICAgcmV0dXJuIG5ldyB0aGlzKEEpO1xuICB9IH0pO1xufTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIGh0dHBzOi8vdGMzOS5naXRodWIuaW8vcHJvcG9zYWwtc2V0bWFwLW9mZnJvbS9cbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgYUZ1bmN0aW9uID0gcmVxdWlyZSgnLi9fYS1mdW5jdGlvbicpO1xudmFyIGN0eCA9IHJlcXVpcmUoJy4vX2N0eCcpO1xudmFyIGZvck9mID0gcmVxdWlyZSgnLi9fZm9yLW9mJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKENPTExFQ1RJT04pIHtcbiAgJGV4cG9ydCgkZXhwb3J0LlMsIENPTExFQ1RJT04sIHsgZnJvbTogZnVuY3Rpb24gZnJvbShzb3VyY2UgLyogLCBtYXBGbiwgdGhpc0FyZyAqLykge1xuICAgIHZhciBtYXBGbiA9IGFyZ3VtZW50c1sxXTtcbiAgICB2YXIgbWFwcGluZywgQSwgbiwgY2I7XG4gICAgYUZ1bmN0aW9uKHRoaXMpO1xuICAgIG1hcHBpbmcgPSBtYXBGbiAhPT0gdW5kZWZpbmVkO1xuICAgIGlmIChtYXBwaW5nKSBhRnVuY3Rpb24obWFwRm4pO1xuICAgIGlmIChzb3VyY2UgPT0gdW5kZWZpbmVkKSByZXR1cm4gbmV3IHRoaXMoKTtcbiAgICBBID0gW107XG4gICAgaWYgKG1hcHBpbmcpIHtcbiAgICAgIG4gPSAwO1xuICAgICAgY2IgPSBjdHgobWFwRm4sIGFyZ3VtZW50c1syXSwgMik7XG4gICAgICBmb3JPZihzb3VyY2UsIGZhbHNlLCBmdW5jdGlvbiAobmV4dEl0ZW0pIHtcbiAgICAgICAgQS5wdXNoKGNiKG5leHRJdGVtLCBuKyspKTtcbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBmb3JPZihzb3VyY2UsIGZhbHNlLCBBLnB1c2gsIEEpO1xuICAgIH1cbiAgICByZXR1cm4gbmV3IHRoaXMoQSk7XG4gIH0gfSk7XG59O1xuIiwiZXhwb3J0IGNvbnN0IGFkZG9uUHJlZml4UG9wdXAgPSAoKSA9PiB7XG4gIC8vIEB0cy1pZ25vcmVcbiAgcmV0dXJuIGJyb3dzZXIucnVudGltZS5nZXRVUkwoJ0Rpc3RyaWJ1dGlvbi9Qb3B1cC9pbmRleC5odG1sJyk7XG59O1xuXG5leHBvcnQgY29uc3QgYWRkb25QcmVmaXhEYXNoYm9hcmQgPSAoKSA9PiB7XG4gIC8vIEB0cy1pZ25vcmVcbiAgcmV0dXJuIGJyb3dzZXIucnVudGltZS5nZXRVUkwoJ0Rpc3RyaWJ1dGlvbi9EYXNoYm9hcmQvaW5kZXguaHRtbCcpO1xufTtcblxuZXhwb3J0IGNvbnN0IGFkZG9uUHJlZml4RGFzaGJvYXJkTWVudSA9ICgpID0+IHtcbiAgLy8gQHRzLWlnbm9yZVxuICByZXR1cm4gYnJvd3Nlci5ydW50aW1lLmdldFVSTCgnRGlzdHJpYnV0aW9uL0Rhc2hib2FyZC8nKTtcbn07XG5cbmV4cG9ydCBjb25zdCBhZGRvblByZWZpeCA9ICgpID0+IHtcbiAgLy8gQHRzLWlnbm9yZVxuICByZXR1cm4gYnJvd3Nlci5ydW50aW1lLmdldFVSTCgnRGlzdHJpYnV0aW9uJyk7XG59O1xuXG5leHBvcnQgY29uc3QgYWRkb25Sb290ID0gKCkgPT4ge1xuICAvLyBAdHMtaWdub3JlXG4gIHJldHVybiBicm93c2VyLnJ1bnRpbWUuZ2V0VVJMKCcnKTtcbn07XG4iLCJ2YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciBkb2N1bWVudCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpLmRvY3VtZW50O1xuLy8gdHlwZW9mIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQgaXMgJ29iamVjdCcgaW4gb2xkIElFXG52YXIgaXMgPSBpc09iamVjdChkb2N1bWVudCkgJiYgaXNPYmplY3QoZG9jdW1lbnQuY3JlYXRlRWxlbWVudCk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gaXMgPyBkb2N1bWVudC5jcmVhdGVFbGVtZW50KGl0KSA6IHt9O1xufTtcbiIsInZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBjb3JlID0gcmVxdWlyZSgnLi9fY29yZScpO1xudmFyIExJQlJBUlkgPSByZXF1aXJlKCcuL19saWJyYXJ5Jyk7XG52YXIgd2tzRXh0ID0gcmVxdWlyZSgnLi9fd2tzLWV4dCcpO1xudmFyIGRlZmluZVByb3BlcnR5ID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJykuZjtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKG5hbWUpIHtcbiAgdmFyICRTeW1ib2wgPSBjb3JlLlN5bWJvbCB8fCAoY29yZS5TeW1ib2wgPSBMSUJSQVJZID8ge30gOiBnbG9iYWwuU3ltYm9sIHx8IHt9KTtcbiAgaWYgKG5hbWUuY2hhckF0KDApICE9ICdfJyAmJiAhKG5hbWUgaW4gJFN5bWJvbCkpIGRlZmluZVByb3BlcnR5KCRTeW1ib2wsIG5hbWUsIHsgdmFsdWU6IHdrc0V4dC5mKG5hbWUpIH0pO1xufTtcbiIsInZhciBzaGFyZWQgPSByZXF1aXJlKCcuL19zaGFyZWQnKSgna2V5cycpO1xudmFyIHVpZCA9IHJlcXVpcmUoJy4vX3VpZCcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoa2V5KSB7XG4gIHJldHVybiBzaGFyZWRba2V5XSB8fCAoc2hhcmVkW2tleV0gPSB1aWQoa2V5KSk7XG59O1xuIiwiLy8gSUUgOC0gZG9uJ3QgZW51bSBidWcga2V5c1xubW9kdWxlLmV4cG9ydHMgPSAoXG4gICdjb25zdHJ1Y3RvcixoYXNPd25Qcm9wZXJ0eSxpc1Byb3RvdHlwZU9mLHByb3BlcnR5SXNFbnVtZXJhYmxlLHRvTG9jYWxlU3RyaW5nLHRvU3RyaW5nLHZhbHVlT2YnXG4pLnNwbGl0KCcsJyk7XG4iLCJ2YXIgZG9jdW1lbnQgPSByZXF1aXJlKCcuL19nbG9iYWwnKS5kb2N1bWVudDtcbm1vZHVsZS5leHBvcnRzID0gZG9jdW1lbnQgJiYgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50O1xuIiwiLy8gV29ya3Mgd2l0aCBfX3Byb3RvX18gb25seS4gT2xkIHY4IGNhbid0IHdvcmsgd2l0aCBudWxsIHByb3RvIG9iamVjdHMuXG4vKiBlc2xpbnQtZGlzYWJsZSBuby1wcm90byAqL1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBjaGVjayA9IGZ1bmN0aW9uIChPLCBwcm90bykge1xuICBhbk9iamVjdChPKTtcbiAgaWYgKCFpc09iamVjdChwcm90bykgJiYgcHJvdG8gIT09IG51bGwpIHRocm93IFR5cGVFcnJvcihwcm90byArIFwiOiBjYW4ndCBzZXQgYXMgcHJvdG90eXBlIVwiKTtcbn07XG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgc2V0OiBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwgKCdfX3Byb3RvX18nIGluIHt9ID8gLy8gZXNsaW50LWRpc2FibGUtbGluZVxuICAgIGZ1bmN0aW9uICh0ZXN0LCBidWdneSwgc2V0KSB7XG4gICAgICB0cnkge1xuICAgICAgICBzZXQgPSByZXF1aXJlKCcuL19jdHgnKShGdW5jdGlvbi5jYWxsLCByZXF1aXJlKCcuL19vYmplY3QtZ29wZCcpLmYoT2JqZWN0LnByb3RvdHlwZSwgJ19fcHJvdG9fXycpLnNldCwgMik7XG4gICAgICAgIHNldCh0ZXN0LCBbXSk7XG4gICAgICAgIGJ1Z2d5ID0gISh0ZXN0IGluc3RhbmNlb2YgQXJyYXkpO1xuICAgICAgfSBjYXRjaCAoZSkgeyBidWdneSA9IHRydWU7IH1cbiAgICAgIHJldHVybiBmdW5jdGlvbiBzZXRQcm90b3R5cGVPZihPLCBwcm90bykge1xuICAgICAgICBjaGVjayhPLCBwcm90byk7XG4gICAgICAgIGlmIChidWdneSkgTy5fX3Byb3RvX18gPSBwcm90bztcbiAgICAgICAgZWxzZSBzZXQoTywgcHJvdG8pO1xuICAgICAgICByZXR1cm4gTztcbiAgICAgIH07XG4gICAgfSh7fSwgZmFsc2UpIDogdW5kZWZpbmVkKSxcbiAgY2hlY2s6IGNoZWNrXG59O1xuIiwibW9kdWxlLmV4cG9ydHMgPSAnXFx4MDlcXHgwQVxceDBCXFx4MENcXHgwRFxceDIwXFx4QTBcXHUxNjgwXFx1MTgwRVxcdTIwMDBcXHUyMDAxXFx1MjAwMlxcdTIwMDMnICtcbiAgJ1xcdTIwMDRcXHUyMDA1XFx1MjAwNlxcdTIwMDdcXHUyMDA4XFx1MjAwOVxcdTIwMEFcXHUyMDJGXFx1MjA1RlxcdTMwMDBcXHUyMDI4XFx1MjAyOVxcdUZFRkYnO1xuIiwidmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgc2V0UHJvdG90eXBlT2YgPSByZXF1aXJlKCcuL19zZXQtcHJvdG8nKS5zZXQ7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh0aGF0LCB0YXJnZXQsIEMpIHtcbiAgdmFyIFMgPSB0YXJnZXQuY29uc3RydWN0b3I7XG4gIHZhciBQO1xuICBpZiAoUyAhPT0gQyAmJiB0eXBlb2YgUyA9PSAnZnVuY3Rpb24nICYmIChQID0gUy5wcm90b3R5cGUpICE9PSBDLnByb3RvdHlwZSAmJiBpc09iamVjdChQKSAmJiBzZXRQcm90b3R5cGVPZikge1xuICAgIHNldFByb3RvdHlwZU9mKHRoYXQsIFApO1xuICB9IHJldHVybiB0aGF0O1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciB0b0ludGVnZXIgPSByZXF1aXJlKCcuL190by1pbnRlZ2VyJyk7XG52YXIgZGVmaW5lZCA9IHJlcXVpcmUoJy4vX2RlZmluZWQnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiByZXBlYXQoY291bnQpIHtcbiAgdmFyIHN0ciA9IFN0cmluZyhkZWZpbmVkKHRoaXMpKTtcbiAgdmFyIHJlcyA9ICcnO1xuICB2YXIgbiA9IHRvSW50ZWdlcihjb3VudCk7XG4gIGlmIChuIDwgMCB8fCBuID09IEluZmluaXR5KSB0aHJvdyBSYW5nZUVycm9yKFwiQ291bnQgY2FuJ3QgYmUgbmVnYXRpdmVcIik7XG4gIGZvciAoO24gPiAwOyAobiA+Pj49IDEpICYmIChzdHIgKz0gc3RyKSkgaWYgKG4gJiAxKSByZXMgKz0gc3RyO1xuICByZXR1cm4gcmVzO1xufTtcbiIsIi8vIDIwLjIuMi4yOCBNYXRoLnNpZ24oeClcbm1vZHVsZS5leHBvcnRzID0gTWF0aC5zaWduIHx8IGZ1bmN0aW9uIHNpZ24oeCkge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tc2VsZi1jb21wYXJlXG4gIHJldHVybiAoeCA9ICt4KSA9PSAwIHx8IHggIT0geCA/IHggOiB4IDwgMCA/IC0xIDogMTtcbn07XG4iLCIvLyAyMC4yLjIuMTQgTWF0aC5leHBtMSh4KVxudmFyICRleHBtMSA9IE1hdGguZXhwbTE7XG5tb2R1bGUuZXhwb3J0cyA9ICghJGV4cG0xXG4gIC8vIE9sZCBGRiBidWdcbiAgfHwgJGV4cG0xKDEwKSA+IDIyMDI1LjQ2NTc5NDgwNjcxOSB8fCAkZXhwbTEoMTApIDwgMjIwMjUuNDY1Nzk0ODA2NzE2NTE2OFxuICAvLyBUb3IgQnJvd3NlciBidWdcbiAgfHwgJGV4cG0xKC0yZS0xNykgIT0gLTJlLTE3XG4pID8gZnVuY3Rpb24gZXhwbTEoeCkge1xuICByZXR1cm4gKHggPSAreCkgPT0gMCA/IHggOiB4ID4gLTFlLTYgJiYgeCA8IDFlLTYgPyB4ICsgeCAqIHggLyAyIDogTWF0aC5leHAoeCkgLSAxO1xufSA6ICRleHBtMTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBMSUJSQVJZID0gcmVxdWlyZSgnLi9fbGlicmFyeScpO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciByZWRlZmluZSA9IHJlcXVpcmUoJy4vX3JlZGVmaW5lJyk7XG52YXIgaGlkZSA9IHJlcXVpcmUoJy4vX2hpZGUnKTtcbnZhciBJdGVyYXRvcnMgPSByZXF1aXJlKCcuL19pdGVyYXRvcnMnKTtcbnZhciAkaXRlckNyZWF0ZSA9IHJlcXVpcmUoJy4vX2l0ZXItY3JlYXRlJyk7XG52YXIgc2V0VG9TdHJpbmdUYWcgPSByZXF1aXJlKCcuL19zZXQtdG8tc3RyaW5nLXRhZycpO1xudmFyIGdldFByb3RvdHlwZU9mID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdwbycpO1xudmFyIElURVJBVE9SID0gcmVxdWlyZSgnLi9fd2tzJykoJ2l0ZXJhdG9yJyk7XG52YXIgQlVHR1kgPSAhKFtdLmtleXMgJiYgJ25leHQnIGluIFtdLmtleXMoKSk7IC8vIFNhZmFyaSBoYXMgYnVnZ3kgaXRlcmF0b3JzIHcvbyBgbmV4dGBcbnZhciBGRl9JVEVSQVRPUiA9ICdAQGl0ZXJhdG9yJztcbnZhciBLRVlTID0gJ2tleXMnO1xudmFyIFZBTFVFUyA9ICd2YWx1ZXMnO1xuXG52YXIgcmV0dXJuVGhpcyA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXM7IH07XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKEJhc2UsIE5BTUUsIENvbnN0cnVjdG9yLCBuZXh0LCBERUZBVUxULCBJU19TRVQsIEZPUkNFRCkge1xuICAkaXRlckNyZWF0ZShDb25zdHJ1Y3RvciwgTkFNRSwgbmV4dCk7XG4gIHZhciBnZXRNZXRob2QgPSBmdW5jdGlvbiAoa2luZCkge1xuICAgIGlmICghQlVHR1kgJiYga2luZCBpbiBwcm90bykgcmV0dXJuIHByb3RvW2tpbmRdO1xuICAgIHN3aXRjaCAoa2luZCkge1xuICAgICAgY2FzZSBLRVlTOiByZXR1cm4gZnVuY3Rpb24ga2V5cygpIHsgcmV0dXJuIG5ldyBDb25zdHJ1Y3Rvcih0aGlzLCBraW5kKTsgfTtcbiAgICAgIGNhc2UgVkFMVUVTOiByZXR1cm4gZnVuY3Rpb24gdmFsdWVzKCkgeyByZXR1cm4gbmV3IENvbnN0cnVjdG9yKHRoaXMsIGtpbmQpOyB9O1xuICAgIH0gcmV0dXJuIGZ1bmN0aW9uIGVudHJpZXMoKSB7IHJldHVybiBuZXcgQ29uc3RydWN0b3IodGhpcywga2luZCk7IH07XG4gIH07XG4gIHZhciBUQUcgPSBOQU1FICsgJyBJdGVyYXRvcic7XG4gIHZhciBERUZfVkFMVUVTID0gREVGQVVMVCA9PSBWQUxVRVM7XG4gIHZhciBWQUxVRVNfQlVHID0gZmFsc2U7XG4gIHZhciBwcm90byA9IEJhc2UucHJvdG90eXBlO1xuICB2YXIgJG5hdGl2ZSA9IHByb3RvW0lURVJBVE9SXSB8fCBwcm90b1tGRl9JVEVSQVRPUl0gfHwgREVGQVVMVCAmJiBwcm90b1tERUZBVUxUXTtcbiAgdmFyICRkZWZhdWx0ID0gJG5hdGl2ZSB8fCBnZXRNZXRob2QoREVGQVVMVCk7XG4gIHZhciAkZW50cmllcyA9IERFRkFVTFQgPyAhREVGX1ZBTFVFUyA/ICRkZWZhdWx0IDogZ2V0TWV0aG9kKCdlbnRyaWVzJykgOiB1bmRlZmluZWQ7XG4gIHZhciAkYW55TmF0aXZlID0gTkFNRSA9PSAnQXJyYXknID8gcHJvdG8uZW50cmllcyB8fCAkbmF0aXZlIDogJG5hdGl2ZTtcbiAgdmFyIG1ldGhvZHMsIGtleSwgSXRlcmF0b3JQcm90b3R5cGU7XG4gIC8vIEZpeCBuYXRpdmVcbiAgaWYgKCRhbnlOYXRpdmUpIHtcbiAgICBJdGVyYXRvclByb3RvdHlwZSA9IGdldFByb3RvdHlwZU9mKCRhbnlOYXRpdmUuY2FsbChuZXcgQmFzZSgpKSk7XG4gICAgaWYgKEl0ZXJhdG9yUHJvdG90eXBlICE9PSBPYmplY3QucHJvdG90eXBlICYmIEl0ZXJhdG9yUHJvdG90eXBlLm5leHQpIHtcbiAgICAgIC8vIFNldCBAQHRvU3RyaW5nVGFnIHRvIG5hdGl2ZSBpdGVyYXRvcnNcbiAgICAgIHNldFRvU3RyaW5nVGFnKEl0ZXJhdG9yUHJvdG90eXBlLCBUQUcsIHRydWUpO1xuICAgICAgLy8gZml4IGZvciBzb21lIG9sZCBlbmdpbmVzXG4gICAgICBpZiAoIUxJQlJBUlkgJiYgdHlwZW9mIEl0ZXJhdG9yUHJvdG90eXBlW0lURVJBVE9SXSAhPSAnZnVuY3Rpb24nKSBoaWRlKEl0ZXJhdG9yUHJvdG90eXBlLCBJVEVSQVRPUiwgcmV0dXJuVGhpcyk7XG4gICAgfVxuICB9XG4gIC8vIGZpeCBBcnJheSN7dmFsdWVzLCBAQGl0ZXJhdG9yfS5uYW1lIGluIFY4IC8gRkZcbiAgaWYgKERFRl9WQUxVRVMgJiYgJG5hdGl2ZSAmJiAkbmF0aXZlLm5hbWUgIT09IFZBTFVFUykge1xuICAgIFZBTFVFU19CVUcgPSB0cnVlO1xuICAgICRkZWZhdWx0ID0gZnVuY3Rpb24gdmFsdWVzKCkgeyByZXR1cm4gJG5hdGl2ZS5jYWxsKHRoaXMpOyB9O1xuICB9XG4gIC8vIERlZmluZSBpdGVyYXRvclxuICBpZiAoKCFMSUJSQVJZIHx8IEZPUkNFRCkgJiYgKEJVR0dZIHx8IFZBTFVFU19CVUcgfHwgIXByb3RvW0lURVJBVE9SXSkpIHtcbiAgICBoaWRlKHByb3RvLCBJVEVSQVRPUiwgJGRlZmF1bHQpO1xuICB9XG4gIC8vIFBsdWcgZm9yIGxpYnJhcnlcbiAgSXRlcmF0b3JzW05BTUVdID0gJGRlZmF1bHQ7XG4gIEl0ZXJhdG9yc1tUQUddID0gcmV0dXJuVGhpcztcbiAgaWYgKERFRkFVTFQpIHtcbiAgICBtZXRob2RzID0ge1xuICAgICAgdmFsdWVzOiBERUZfVkFMVUVTID8gJGRlZmF1bHQgOiBnZXRNZXRob2QoVkFMVUVTKSxcbiAgICAgIGtleXM6IElTX1NFVCA/ICRkZWZhdWx0IDogZ2V0TWV0aG9kKEtFWVMpLFxuICAgICAgZW50cmllczogJGVudHJpZXNcbiAgICB9O1xuICAgIGlmIChGT1JDRUQpIGZvciAoa2V5IGluIG1ldGhvZHMpIHtcbiAgICAgIGlmICghKGtleSBpbiBwcm90bykpIHJlZGVmaW5lKHByb3RvLCBrZXksIG1ldGhvZHNba2V5XSk7XG4gICAgfSBlbHNlICRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogKEJVR0dZIHx8IFZBTFVFU19CVUcpLCBOQU1FLCBtZXRob2RzKTtcbiAgfVxuICByZXR1cm4gbWV0aG9kcztcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgY3JlYXRlID0gcmVxdWlyZSgnLi9fb2JqZWN0LWNyZWF0ZScpO1xudmFyIGRlc2NyaXB0b3IgPSByZXF1aXJlKCcuL19wcm9wZXJ0eS1kZXNjJyk7XG52YXIgc2V0VG9TdHJpbmdUYWcgPSByZXF1aXJlKCcuL19zZXQtdG8tc3RyaW5nLXRhZycpO1xudmFyIEl0ZXJhdG9yUHJvdG90eXBlID0ge307XG5cbi8vIDI1LjEuMi4xLjEgJUl0ZXJhdG9yUHJvdG90eXBlJVtAQGl0ZXJhdG9yXSgpXG5yZXF1aXJlKCcuL19oaWRlJykoSXRlcmF0b3JQcm90b3R5cGUsIHJlcXVpcmUoJy4vX3drcycpKCdpdGVyYXRvcicpLCBmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzOyB9KTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIE5BTUUsIG5leHQpIHtcbiAgQ29uc3RydWN0b3IucHJvdG90eXBlID0gY3JlYXRlKEl0ZXJhdG9yUHJvdG90eXBlLCB7IG5leHQ6IGRlc2NyaXB0b3IoMSwgbmV4dCkgfSk7XG4gIHNldFRvU3RyaW5nVGFnKENvbnN0cnVjdG9yLCBOQU1FICsgJyBJdGVyYXRvcicpO1xufTtcbiIsIi8vIGhlbHBlciBmb3IgU3RyaW5nI3tzdGFydHNXaXRoLCBlbmRzV2l0aCwgaW5jbHVkZXN9XG52YXIgaXNSZWdFeHAgPSByZXF1aXJlKCcuL19pcy1yZWdleHAnKTtcbnZhciBkZWZpbmVkID0gcmVxdWlyZSgnLi9fZGVmaW5lZCcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh0aGF0LCBzZWFyY2hTdHJpbmcsIE5BTUUpIHtcbiAgaWYgKGlzUmVnRXhwKHNlYXJjaFN0cmluZykpIHRocm93IFR5cGVFcnJvcignU3RyaW5nIycgKyBOQU1FICsgXCIgZG9lc24ndCBhY2NlcHQgcmVnZXghXCIpO1xuICByZXR1cm4gU3RyaW5nKGRlZmluZWQodGhhdCkpO1xufTtcbiIsInZhciBNQVRDSCA9IHJlcXVpcmUoJy4vX3drcycpKCdtYXRjaCcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoS0VZKSB7XG4gIHZhciByZSA9IC8uLztcbiAgdHJ5IHtcbiAgICAnLy4vJ1tLRVldKHJlKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHRyeSB7XG4gICAgICByZVtNQVRDSF0gPSBmYWxzZTtcbiAgICAgIHJldHVybiAhJy8uLydbS0VZXShyZSk7XG4gICAgfSBjYXRjaCAoZikgeyAvKiBlbXB0eSAqLyB9XG4gIH0gcmV0dXJuIHRydWU7XG59O1xuIiwiLy8gY2hlY2sgb24gZGVmYXVsdCBBcnJheSBpdGVyYXRvclxudmFyIEl0ZXJhdG9ycyA9IHJlcXVpcmUoJy4vX2l0ZXJhdG9ycycpO1xudmFyIElURVJBVE9SID0gcmVxdWlyZSgnLi9fd2tzJykoJ2l0ZXJhdG9yJyk7XG52YXIgQXJyYXlQcm90byA9IEFycmF5LnByb3RvdHlwZTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIGl0ICE9PSB1bmRlZmluZWQgJiYgKEl0ZXJhdG9ycy5BcnJheSA9PT0gaXQgfHwgQXJyYXlQcm90b1tJVEVSQVRPUl0gPT09IGl0KTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJGRlZmluZVByb3BlcnR5ID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJyk7XG52YXIgY3JlYXRlRGVzYyA9IHJlcXVpcmUoJy4vX3Byb3BlcnR5LWRlc2MnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAob2JqZWN0LCBpbmRleCwgdmFsdWUpIHtcbiAgaWYgKGluZGV4IGluIG9iamVjdCkgJGRlZmluZVByb3BlcnR5LmYob2JqZWN0LCBpbmRleCwgY3JlYXRlRGVzYygwLCB2YWx1ZSkpO1xuICBlbHNlIG9iamVjdFtpbmRleF0gPSB2YWx1ZTtcbn07XG4iLCJ2YXIgY2xhc3NvZiA9IHJlcXVpcmUoJy4vX2NsYXNzb2YnKTtcbnZhciBJVEVSQVRPUiA9IHJlcXVpcmUoJy4vX3drcycpKCdpdGVyYXRvcicpO1xudmFyIEl0ZXJhdG9ycyA9IHJlcXVpcmUoJy4vX2l0ZXJhdG9ycycpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL19jb3JlJykuZ2V0SXRlcmF0b3JNZXRob2QgPSBmdW5jdGlvbiAoaXQpIHtcbiAgaWYgKGl0ICE9IHVuZGVmaW5lZCkgcmV0dXJuIGl0W0lURVJBVE9SXVxuICAgIHx8IGl0WydAQGl0ZXJhdG9yJ11cbiAgICB8fCBJdGVyYXRvcnNbY2xhc3NvZihpdCldO1xufTtcbiIsIi8vIDkuNC4yLjMgQXJyYXlTcGVjaWVzQ3JlYXRlKG9yaWdpbmFsQXJyYXksIGxlbmd0aClcbnZhciBzcGVjaWVzQ29uc3RydWN0b3IgPSByZXF1aXJlKCcuL19hcnJheS1zcGVjaWVzLWNvbnN0cnVjdG9yJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKG9yaWdpbmFsLCBsZW5ndGgpIHtcbiAgcmV0dXJuIG5ldyAoc3BlY2llc0NvbnN0cnVjdG9yKG9yaWdpbmFsKSkobGVuZ3RoKTtcbn07XG4iLCIvLyAyMi4xLjMuNiBBcnJheS5wcm90b3R5cGUuZmlsbCh2YWx1ZSwgc3RhcnQgPSAwLCBlbmQgPSB0aGlzLmxlbmd0aClcbid1c2Ugc3RyaWN0JztcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpO1xudmFyIHRvQWJzb2x1dGVJbmRleCA9IHJlcXVpcmUoJy4vX3RvLWFic29sdXRlLWluZGV4Jyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZmlsbCh2YWx1ZSAvKiAsIHN0YXJ0ID0gMCwgZW5kID0gQGxlbmd0aCAqLykge1xuICB2YXIgTyA9IHRvT2JqZWN0KHRoaXMpO1xuICB2YXIgbGVuZ3RoID0gdG9MZW5ndGgoTy5sZW5ndGgpO1xuICB2YXIgYUxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gIHZhciBpbmRleCA9IHRvQWJzb2x1dGVJbmRleChhTGVuID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZCwgbGVuZ3RoKTtcbiAgdmFyIGVuZCA9IGFMZW4gPiAyID8gYXJndW1lbnRzWzJdIDogdW5kZWZpbmVkO1xuICB2YXIgZW5kUG9zID0gZW5kID09PSB1bmRlZmluZWQgPyBsZW5ndGggOiB0b0Fic29sdXRlSW5kZXgoZW5kLCBsZW5ndGgpO1xuICB3aGlsZSAoZW5kUG9zID4gaW5kZXgpIE9baW5kZXgrK10gPSB2YWx1ZTtcbiAgcmV0dXJuIE87XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGFkZFRvVW5zY29wYWJsZXMgPSByZXF1aXJlKCcuL19hZGQtdG8tdW5zY29wYWJsZXMnKTtcbnZhciBzdGVwID0gcmVxdWlyZSgnLi9faXRlci1zdGVwJyk7XG52YXIgSXRlcmF0b3JzID0gcmVxdWlyZSgnLi9faXRlcmF0b3JzJyk7XG52YXIgdG9JT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8taW9iamVjdCcpO1xuXG4vLyAyMi4xLjMuNCBBcnJheS5wcm90b3R5cGUuZW50cmllcygpXG4vLyAyMi4xLjMuMTMgQXJyYXkucHJvdG90eXBlLmtleXMoKVxuLy8gMjIuMS4zLjI5IEFycmF5LnByb3RvdHlwZS52YWx1ZXMoKVxuLy8gMjIuMS4zLjMwIEFycmF5LnByb3RvdHlwZVtAQGl0ZXJhdG9yXSgpXG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vX2l0ZXItZGVmaW5lJykoQXJyYXksICdBcnJheScsIGZ1bmN0aW9uIChpdGVyYXRlZCwga2luZCkge1xuICB0aGlzLl90ID0gdG9JT2JqZWN0KGl0ZXJhdGVkKTsgLy8gdGFyZ2V0XG4gIHRoaXMuX2kgPSAwOyAgICAgICAgICAgICAgICAgICAvLyBuZXh0IGluZGV4XG4gIHRoaXMuX2sgPSBraW5kOyAgICAgICAgICAgICAgICAvLyBraW5kXG4vLyAyMi4xLjUuMi4xICVBcnJheUl0ZXJhdG9yUHJvdG90eXBlJS5uZXh0KClcbn0sIGZ1bmN0aW9uICgpIHtcbiAgdmFyIE8gPSB0aGlzLl90O1xuICB2YXIga2luZCA9IHRoaXMuX2s7XG4gIHZhciBpbmRleCA9IHRoaXMuX2krKztcbiAgaWYgKCFPIHx8IGluZGV4ID49IE8ubGVuZ3RoKSB7XG4gICAgdGhpcy5fdCA9IHVuZGVmaW5lZDtcbiAgICByZXR1cm4gc3RlcCgxKTtcbiAgfVxuICBpZiAoa2luZCA9PSAna2V5cycpIHJldHVybiBzdGVwKDAsIGluZGV4KTtcbiAgaWYgKGtpbmQgPT0gJ3ZhbHVlcycpIHJldHVybiBzdGVwKDAsIE9baW5kZXhdKTtcbiAgcmV0dXJuIHN0ZXAoMCwgW2luZGV4LCBPW2luZGV4XV0pO1xufSwgJ3ZhbHVlcycpO1xuXG4vLyBhcmd1bWVudHNMaXN0W0BAaXRlcmF0b3JdIGlzICVBcnJheVByb3RvX3ZhbHVlcyUgKDkuNC40LjYsIDkuNC40LjcpXG5JdGVyYXRvcnMuQXJndW1lbnRzID0gSXRlcmF0b3JzLkFycmF5O1xuXG5hZGRUb1Vuc2NvcGFibGVzKCdrZXlzJyk7XG5hZGRUb1Vuc2NvcGFibGVzKCd2YWx1ZXMnKTtcbmFkZFRvVW5zY29wYWJsZXMoJ2VudHJpZXMnKTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHJlZ2V4cEZsYWdzID0gcmVxdWlyZSgnLi9fZmxhZ3MnKTtcblxudmFyIG5hdGl2ZUV4ZWMgPSBSZWdFeHAucHJvdG90eXBlLmV4ZWM7XG4vLyBUaGlzIGFsd2F5cyByZWZlcnMgdG8gdGhlIG5hdGl2ZSBpbXBsZW1lbnRhdGlvbiwgYmVjYXVzZSB0aGVcbi8vIFN0cmluZyNyZXBsYWNlIHBvbHlmaWxsIHVzZXMgLi9maXgtcmVnZXhwLXdlbGwta25vd24tc3ltYm9sLWxvZ2ljLmpzLFxuLy8gd2hpY2ggbG9hZHMgdGhpcyBmaWxlIGJlZm9yZSBwYXRjaGluZyB0aGUgbWV0aG9kLlxudmFyIG5hdGl2ZVJlcGxhY2UgPSBTdHJpbmcucHJvdG90eXBlLnJlcGxhY2U7XG5cbnZhciBwYXRjaGVkRXhlYyA9IG5hdGl2ZUV4ZWM7XG5cbnZhciBMQVNUX0lOREVYID0gJ2xhc3RJbmRleCc7XG5cbnZhciBVUERBVEVTX0xBU1RfSU5ERVhfV1JPTkcgPSAoZnVuY3Rpb24gKCkge1xuICB2YXIgcmUxID0gL2EvLFxuICAgICAgcmUyID0gL2IqL2c7XG4gIG5hdGl2ZUV4ZWMuY2FsbChyZTEsICdhJyk7XG4gIG5hdGl2ZUV4ZWMuY2FsbChyZTIsICdhJyk7XG4gIHJldHVybiByZTFbTEFTVF9JTkRFWF0gIT09IDAgfHwgcmUyW0xBU1RfSU5ERVhdICE9PSAwO1xufSkoKTtcblxuLy8gbm9ucGFydGljaXBhdGluZyBjYXB0dXJpbmcgZ3JvdXAsIGNvcGllZCBmcm9tIGVzNS1zaGltJ3MgU3RyaW5nI3NwbGl0IHBhdGNoLlxudmFyIE5QQ0dfSU5DTFVERUQgPSAvKCk/Py8uZXhlYygnJylbMV0gIT09IHVuZGVmaW5lZDtcblxudmFyIFBBVENIID0gVVBEQVRFU19MQVNUX0lOREVYX1dST05HIHx8IE5QQ0dfSU5DTFVERUQ7XG5cbmlmIChQQVRDSCkge1xuICBwYXRjaGVkRXhlYyA9IGZ1bmN0aW9uIGV4ZWMoc3RyKSB7XG4gICAgdmFyIHJlID0gdGhpcztcbiAgICB2YXIgbGFzdEluZGV4LCByZUNvcHksIG1hdGNoLCBpO1xuXG4gICAgaWYgKE5QQ0dfSU5DTFVERUQpIHtcbiAgICAgIHJlQ29weSA9IG5ldyBSZWdFeHAoJ14nICsgcmUuc291cmNlICsgJyQoPyFcXFxccyknLCByZWdleHBGbGFncy5jYWxsKHJlKSk7XG4gICAgfVxuICAgIGlmIChVUERBVEVTX0xBU1RfSU5ERVhfV1JPTkcpIGxhc3RJbmRleCA9IHJlW0xBU1RfSU5ERVhdO1xuXG4gICAgbWF0Y2ggPSBuYXRpdmVFeGVjLmNhbGwocmUsIHN0cik7XG5cbiAgICBpZiAoVVBEQVRFU19MQVNUX0lOREVYX1dST05HICYmIG1hdGNoKSB7XG4gICAgICByZVtMQVNUX0lOREVYXSA9IHJlLmdsb2JhbCA/IG1hdGNoLmluZGV4ICsgbWF0Y2hbMF0ubGVuZ3RoIDogbGFzdEluZGV4O1xuICAgIH1cbiAgICBpZiAoTlBDR19JTkNMVURFRCAmJiBtYXRjaCAmJiBtYXRjaC5sZW5ndGggPiAxKSB7XG4gICAgICAvLyBGaXggYnJvd3NlcnMgd2hvc2UgYGV4ZWNgIG1ldGhvZHMgZG9uJ3QgY29uc2lzdGVudGx5IHJldHVybiBgdW5kZWZpbmVkYFxuICAgICAgLy8gZm9yIE5QQ0csIGxpa2UgSUU4LiBOT1RFOiBUaGlzIGRvZXNuJyB3b3JrIGZvciAvKC4/KT8vXG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tbG9vcC1mdW5jXG4gICAgICBuYXRpdmVSZXBsYWNlLmNhbGwobWF0Y2hbMF0sIHJlQ29weSwgZnVuY3Rpb24gKCkge1xuICAgICAgICBmb3IgKGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aCAtIDI7IGkrKykge1xuICAgICAgICAgIGlmIChhcmd1bWVudHNbaV0gPT09IHVuZGVmaW5lZCkgbWF0Y2hbaV0gPSB1bmRlZmluZWQ7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiBtYXRjaDtcbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBwYXRjaGVkRXhlYztcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBhdCA9IHJlcXVpcmUoJy4vX3N0cmluZy1hdCcpKHRydWUpO1xuXG4gLy8gYEFkdmFuY2VTdHJpbmdJbmRleGAgYWJzdHJhY3Qgb3BlcmF0aW9uXG4vLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL2VjbWEyNjIvI3NlYy1hZHZhbmNlc3RyaW5naW5kZXhcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKFMsIGluZGV4LCB1bmljb2RlKSB7XG4gIHJldHVybiBpbmRleCArICh1bmljb2RlID8gYXQoUywgaW5kZXgpLmxlbmd0aCA6IDEpO1xufTtcbiIsInZhciBjdHggPSByZXF1aXJlKCcuL19jdHgnKTtcbnZhciBpbnZva2UgPSByZXF1aXJlKCcuL19pbnZva2UnKTtcbnZhciBodG1sID0gcmVxdWlyZSgnLi9faHRtbCcpO1xudmFyIGNlbCA9IHJlcXVpcmUoJy4vX2RvbS1jcmVhdGUnKTtcbnZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBwcm9jZXNzID0gZ2xvYmFsLnByb2Nlc3M7XG52YXIgc2V0VGFzayA9IGdsb2JhbC5zZXRJbW1lZGlhdGU7XG52YXIgY2xlYXJUYXNrID0gZ2xvYmFsLmNsZWFySW1tZWRpYXRlO1xudmFyIE1lc3NhZ2VDaGFubmVsID0gZ2xvYmFsLk1lc3NhZ2VDaGFubmVsO1xudmFyIERpc3BhdGNoID0gZ2xvYmFsLkRpc3BhdGNoO1xudmFyIGNvdW50ZXIgPSAwO1xudmFyIHF1ZXVlID0ge307XG52YXIgT05SRUFEWVNUQVRFQ0hBTkdFID0gJ29ucmVhZHlzdGF0ZWNoYW5nZSc7XG52YXIgZGVmZXIsIGNoYW5uZWwsIHBvcnQ7XG52YXIgcnVuID0gZnVuY3Rpb24gKCkge1xuICB2YXIgaWQgPSArdGhpcztcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXByb3RvdHlwZS1idWlsdGluc1xuICBpZiAocXVldWUuaGFzT3duUHJvcGVydHkoaWQpKSB7XG4gICAgdmFyIGZuID0gcXVldWVbaWRdO1xuICAgIGRlbGV0ZSBxdWV1ZVtpZF07XG4gICAgZm4oKTtcbiAgfVxufTtcbnZhciBsaXN0ZW5lciA9IGZ1bmN0aW9uIChldmVudCkge1xuICBydW4uY2FsbChldmVudC5kYXRhKTtcbn07XG4vLyBOb2RlLmpzIDAuOSsgJiBJRTEwKyBoYXMgc2V0SW1tZWRpYXRlLCBvdGhlcndpc2U6XG5pZiAoIXNldFRhc2sgfHwgIWNsZWFyVGFzaykge1xuICBzZXRUYXNrID0gZnVuY3Rpb24gc2V0SW1tZWRpYXRlKGZuKSB7XG4gICAgdmFyIGFyZ3MgPSBbXTtcbiAgICB2YXIgaSA9IDE7XG4gICAgd2hpbGUgKGFyZ3VtZW50cy5sZW5ndGggPiBpKSBhcmdzLnB1c2goYXJndW1lbnRzW2krK10pO1xuICAgIHF1ZXVlWysrY291bnRlcl0gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tbmV3LWZ1bmNcbiAgICAgIGludm9rZSh0eXBlb2YgZm4gPT0gJ2Z1bmN0aW9uJyA/IGZuIDogRnVuY3Rpb24oZm4pLCBhcmdzKTtcbiAgICB9O1xuICAgIGRlZmVyKGNvdW50ZXIpO1xuICAgIHJldHVybiBjb3VudGVyO1xuICB9O1xuICBjbGVhclRhc2sgPSBmdW5jdGlvbiBjbGVhckltbWVkaWF0ZShpZCkge1xuICAgIGRlbGV0ZSBxdWV1ZVtpZF07XG4gIH07XG4gIC8vIE5vZGUuanMgMC44LVxuICBpZiAocmVxdWlyZSgnLi9fY29mJykocHJvY2VzcykgPT0gJ3Byb2Nlc3MnKSB7XG4gICAgZGVmZXIgPSBmdW5jdGlvbiAoaWQpIHtcbiAgICAgIHByb2Nlc3MubmV4dFRpY2soY3R4KHJ1biwgaWQsIDEpKTtcbiAgICB9O1xuICAvLyBTcGhlcmUgKEpTIGdhbWUgZW5naW5lKSBEaXNwYXRjaCBBUElcbiAgfSBlbHNlIGlmIChEaXNwYXRjaCAmJiBEaXNwYXRjaC5ub3cpIHtcbiAgICBkZWZlciA9IGZ1bmN0aW9uIChpZCkge1xuICAgICAgRGlzcGF0Y2gubm93KGN0eChydW4sIGlkLCAxKSk7XG4gICAgfTtcbiAgLy8gQnJvd3NlcnMgd2l0aCBNZXNzYWdlQ2hhbm5lbCwgaW5jbHVkZXMgV2ViV29ya2Vyc1xuICB9IGVsc2UgaWYgKE1lc3NhZ2VDaGFubmVsKSB7XG4gICAgY2hhbm5lbCA9IG5ldyBNZXNzYWdlQ2hhbm5lbCgpO1xuICAgIHBvcnQgPSBjaGFubmVsLnBvcnQyO1xuICAgIGNoYW5uZWwucG9ydDEub25tZXNzYWdlID0gbGlzdGVuZXI7XG4gICAgZGVmZXIgPSBjdHgocG9ydC5wb3N0TWVzc2FnZSwgcG9ydCwgMSk7XG4gIC8vIEJyb3dzZXJzIHdpdGggcG9zdE1lc3NhZ2UsIHNraXAgV2ViV29ya2Vyc1xuICAvLyBJRTggaGFzIHBvc3RNZXNzYWdlLCBidXQgaXQncyBzeW5jICYgdHlwZW9mIGl0cyBwb3N0TWVzc2FnZSBpcyAnb2JqZWN0J1xuICB9IGVsc2UgaWYgKGdsb2JhbC5hZGRFdmVudExpc3RlbmVyICYmIHR5cGVvZiBwb3N0TWVzc2FnZSA9PSAnZnVuY3Rpb24nICYmICFnbG9iYWwuaW1wb3J0U2NyaXB0cykge1xuICAgIGRlZmVyID0gZnVuY3Rpb24gKGlkKSB7XG4gICAgICBnbG9iYWwucG9zdE1lc3NhZ2UoaWQgKyAnJywgJyonKTtcbiAgICB9O1xuICAgIGdsb2JhbC5hZGRFdmVudExpc3RlbmVyKCdtZXNzYWdlJywgbGlzdGVuZXIsIGZhbHNlKTtcbiAgLy8gSUU4LVxuICB9IGVsc2UgaWYgKE9OUkVBRFlTVEFURUNIQU5HRSBpbiBjZWwoJ3NjcmlwdCcpKSB7XG4gICAgZGVmZXIgPSBmdW5jdGlvbiAoaWQpIHtcbiAgICAgIGh0bWwuYXBwZW5kQ2hpbGQoY2VsKCdzY3JpcHQnKSlbT05SRUFEWVNUQVRFQ0hBTkdFXSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaHRtbC5yZW1vdmVDaGlsZCh0aGlzKTtcbiAgICAgICAgcnVuLmNhbGwoaWQpO1xuICAgICAgfTtcbiAgICB9O1xuICAvLyBSZXN0IG9sZCBicm93c2Vyc1xuICB9IGVsc2Uge1xuICAgIGRlZmVyID0gZnVuY3Rpb24gKGlkKSB7XG4gICAgICBzZXRUaW1lb3V0KGN0eChydW4sIGlkLCAxKSwgMCk7XG4gICAgfTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHNldDogc2V0VGFzayxcbiAgY2xlYXI6IGNsZWFyVGFza1xufTtcbiIsInZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBtYWNyb3Rhc2sgPSByZXF1aXJlKCcuL190YXNrJykuc2V0O1xudmFyIE9ic2VydmVyID0gZ2xvYmFsLk11dGF0aW9uT2JzZXJ2ZXIgfHwgZ2xvYmFsLldlYktpdE11dGF0aW9uT2JzZXJ2ZXI7XG52YXIgcHJvY2VzcyA9IGdsb2JhbC5wcm9jZXNzO1xudmFyIFByb21pc2UgPSBnbG9iYWwuUHJvbWlzZTtcbnZhciBpc05vZGUgPSByZXF1aXJlKCcuL19jb2YnKShwcm9jZXNzKSA9PSAncHJvY2Vzcyc7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKCkge1xuICB2YXIgaGVhZCwgbGFzdCwgbm90aWZ5O1xuXG4gIHZhciBmbHVzaCA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgcGFyZW50LCBmbjtcbiAgICBpZiAoaXNOb2RlICYmIChwYXJlbnQgPSBwcm9jZXNzLmRvbWFpbikpIHBhcmVudC5leGl0KCk7XG4gICAgd2hpbGUgKGhlYWQpIHtcbiAgICAgIGZuID0gaGVhZC5mbjtcbiAgICAgIGhlYWQgPSBoZWFkLm5leHQ7XG4gICAgICB0cnkge1xuICAgICAgICBmbigpO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBpZiAoaGVhZCkgbm90aWZ5KCk7XG4gICAgICAgIGVsc2UgbGFzdCA9IHVuZGVmaW5lZDtcbiAgICAgICAgdGhyb3cgZTtcbiAgICAgIH1cbiAgICB9IGxhc3QgPSB1bmRlZmluZWQ7XG4gICAgaWYgKHBhcmVudCkgcGFyZW50LmVudGVyKCk7XG4gIH07XG5cbiAgLy8gTm9kZS5qc1xuICBpZiAoaXNOb2RlKSB7XG4gICAgbm90aWZ5ID0gZnVuY3Rpb24gKCkge1xuICAgICAgcHJvY2Vzcy5uZXh0VGljayhmbHVzaCk7XG4gICAgfTtcbiAgLy8gYnJvd3NlcnMgd2l0aCBNdXRhdGlvbk9ic2VydmVyLCBleGNlcHQgaU9TIFNhZmFyaSAtIGh0dHBzOi8vZ2l0aHViLmNvbS96bG9pcm9jay9jb3JlLWpzL2lzc3Vlcy8zMzlcbiAgfSBlbHNlIGlmIChPYnNlcnZlciAmJiAhKGdsb2JhbC5uYXZpZ2F0b3IgJiYgZ2xvYmFsLm5hdmlnYXRvci5zdGFuZGFsb25lKSkge1xuICAgIHZhciB0b2dnbGUgPSB0cnVlO1xuICAgIHZhciBub2RlID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoJycpO1xuICAgIG5ldyBPYnNlcnZlcihmbHVzaCkub2JzZXJ2ZShub2RlLCB7IGNoYXJhY3RlckRhdGE6IHRydWUgfSk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3XG4gICAgbm90aWZ5ID0gZnVuY3Rpb24gKCkge1xuICAgICAgbm9kZS5kYXRhID0gdG9nZ2xlID0gIXRvZ2dsZTtcbiAgICB9O1xuICAvLyBlbnZpcm9ubWVudHMgd2l0aCBtYXliZSBub24tY29tcGxldGVseSBjb3JyZWN0LCBidXQgZXhpc3RlbnQgUHJvbWlzZVxuICB9IGVsc2UgaWYgKFByb21pc2UgJiYgUHJvbWlzZS5yZXNvbHZlKSB7XG4gICAgLy8gUHJvbWlzZS5yZXNvbHZlIHdpdGhvdXQgYW4gYXJndW1lbnQgdGhyb3dzIGFuIGVycm9yIGluIExHIFdlYk9TIDJcbiAgICB2YXIgcHJvbWlzZSA9IFByb21pc2UucmVzb2x2ZSh1bmRlZmluZWQpO1xuICAgIG5vdGlmeSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHByb21pc2UudGhlbihmbHVzaCk7XG4gICAgfTtcbiAgLy8gZm9yIG90aGVyIGVudmlyb25tZW50cyAtIG1hY3JvdGFzayBiYXNlZCBvbjpcbiAgLy8gLSBzZXRJbW1lZGlhdGVcbiAgLy8gLSBNZXNzYWdlQ2hhbm5lbFxuICAvLyAtIHdpbmRvdy5wb3N0TWVzc2FnXG4gIC8vIC0gb25yZWFkeXN0YXRlY2hhbmdlXG4gIC8vIC0gc2V0VGltZW91dFxuICB9IGVsc2Uge1xuICAgIG5vdGlmeSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIC8vIHN0cmFuZ2UgSUUgKyB3ZWJwYWNrIGRldiBzZXJ2ZXIgYnVnIC0gdXNlIC5jYWxsKGdsb2JhbClcbiAgICAgIG1hY3JvdGFzay5jYWxsKGdsb2JhbCwgZmx1c2gpO1xuICAgIH07XG4gIH1cblxuICByZXR1cm4gZnVuY3Rpb24gKGZuKSB7XG4gICAgdmFyIHRhc2sgPSB7IGZuOiBmbiwgbmV4dDogdW5kZWZpbmVkIH07XG4gICAgaWYgKGxhc3QpIGxhc3QubmV4dCA9IHRhc2s7XG4gICAgaWYgKCFoZWFkKSB7XG4gICAgICBoZWFkID0gdGFzaztcbiAgICAgIG5vdGlmeSgpO1xuICAgIH0gbGFzdCA9IHRhc2s7XG4gIH07XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gMjUuNC4xLjUgTmV3UHJvbWlzZUNhcGFiaWxpdHkoQylcbnZhciBhRnVuY3Rpb24gPSByZXF1aXJlKCcuL19hLWZ1bmN0aW9uJyk7XG5cbmZ1bmN0aW9uIFByb21pc2VDYXBhYmlsaXR5KEMpIHtcbiAgdmFyIHJlc29sdmUsIHJlamVjdDtcbiAgdGhpcy5wcm9taXNlID0gbmV3IEMoZnVuY3Rpb24gKCQkcmVzb2x2ZSwgJCRyZWplY3QpIHtcbiAgICBpZiAocmVzb2x2ZSAhPT0gdW5kZWZpbmVkIHx8IHJlamVjdCAhPT0gdW5kZWZpbmVkKSB0aHJvdyBUeXBlRXJyb3IoJ0JhZCBQcm9taXNlIGNvbnN0cnVjdG9yJyk7XG4gICAgcmVzb2x2ZSA9ICQkcmVzb2x2ZTtcbiAgICByZWplY3QgPSAkJHJlamVjdDtcbiAgfSk7XG4gIHRoaXMucmVzb2x2ZSA9IGFGdW5jdGlvbihyZXNvbHZlKTtcbiAgdGhpcy5yZWplY3QgPSBhRnVuY3Rpb24ocmVqZWN0KTtcbn1cblxubW9kdWxlLmV4cG9ydHMuZiA9IGZ1bmN0aW9uIChDKSB7XG4gIHJldHVybiBuZXcgUHJvbWlzZUNhcGFiaWxpdHkoQyk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIERFU0NSSVBUT1JTID0gcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKTtcbnZhciBMSUJSQVJZID0gcmVxdWlyZSgnLi9fbGlicmFyeScpO1xudmFyICR0eXBlZCA9IHJlcXVpcmUoJy4vX3R5cGVkJyk7XG52YXIgaGlkZSA9IHJlcXVpcmUoJy4vX2hpZGUnKTtcbnZhciByZWRlZmluZUFsbCA9IHJlcXVpcmUoJy4vX3JlZGVmaW5lLWFsbCcpO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi9fZmFpbHMnKTtcbnZhciBhbkluc3RhbmNlID0gcmVxdWlyZSgnLi9fYW4taW5zdGFuY2UnKTtcbnZhciB0b0ludGVnZXIgPSByZXF1aXJlKCcuL190by1pbnRlZ2VyJyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcbnZhciB0b0luZGV4ID0gcmVxdWlyZSgnLi9fdG8taW5kZXgnKTtcbnZhciBnT1BOID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcG4nKS5mO1xudmFyIGRQID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJykuZjtcbnZhciBhcnJheUZpbGwgPSByZXF1aXJlKCcuL19hcnJheS1maWxsJyk7XG52YXIgc2V0VG9TdHJpbmdUYWcgPSByZXF1aXJlKCcuL19zZXQtdG8tc3RyaW5nLXRhZycpO1xudmFyIEFSUkFZX0JVRkZFUiA9ICdBcnJheUJ1ZmZlcic7XG52YXIgREFUQV9WSUVXID0gJ0RhdGFWaWV3JztcbnZhciBQUk9UT1RZUEUgPSAncHJvdG90eXBlJztcbnZhciBXUk9OR19MRU5HVEggPSAnV3JvbmcgbGVuZ3RoISc7XG52YXIgV1JPTkdfSU5ERVggPSAnV3JvbmcgaW5kZXghJztcbnZhciAkQXJyYXlCdWZmZXIgPSBnbG9iYWxbQVJSQVlfQlVGRkVSXTtcbnZhciAkRGF0YVZpZXcgPSBnbG9iYWxbREFUQV9WSUVXXTtcbnZhciBNYXRoID0gZ2xvYmFsLk1hdGg7XG52YXIgUmFuZ2VFcnJvciA9IGdsb2JhbC5SYW5nZUVycm9yO1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXNoYWRvdy1yZXN0cmljdGVkLW5hbWVzXG52YXIgSW5maW5pdHkgPSBnbG9iYWwuSW5maW5pdHk7XG52YXIgQmFzZUJ1ZmZlciA9ICRBcnJheUJ1ZmZlcjtcbnZhciBhYnMgPSBNYXRoLmFicztcbnZhciBwb3cgPSBNYXRoLnBvdztcbnZhciBmbG9vciA9IE1hdGguZmxvb3I7XG52YXIgbG9nID0gTWF0aC5sb2c7XG52YXIgTE4yID0gTWF0aC5MTjI7XG52YXIgQlVGRkVSID0gJ2J1ZmZlcic7XG52YXIgQllURV9MRU5HVEggPSAnYnl0ZUxlbmd0aCc7XG52YXIgQllURV9PRkZTRVQgPSAnYnl0ZU9mZnNldCc7XG52YXIgJEJVRkZFUiA9IERFU0NSSVBUT1JTID8gJ19iJyA6IEJVRkZFUjtcbnZhciAkTEVOR1RIID0gREVTQ1JJUFRPUlMgPyAnX2wnIDogQllURV9MRU5HVEg7XG52YXIgJE9GRlNFVCA9IERFU0NSSVBUT1JTID8gJ19vJyA6IEJZVEVfT0ZGU0VUO1xuXG4vLyBJRUVFNzU0IGNvbnZlcnNpb25zIGJhc2VkIG9uIGh0dHBzOi8vZ2l0aHViLmNvbS9mZXJvc3MvaWVlZTc1NFxuZnVuY3Rpb24gcGFja0lFRUU3NTQodmFsdWUsIG1MZW4sIG5CeXRlcykge1xuICB2YXIgYnVmZmVyID0gbmV3IEFycmF5KG5CeXRlcyk7XG4gIHZhciBlTGVuID0gbkJ5dGVzICogOCAtIG1MZW4gLSAxO1xuICB2YXIgZU1heCA9ICgxIDw8IGVMZW4pIC0gMTtcbiAgdmFyIGVCaWFzID0gZU1heCA+PiAxO1xuICB2YXIgcnQgPSBtTGVuID09PSAyMyA/IHBvdygyLCAtMjQpIC0gcG93KDIsIC03NykgOiAwO1xuICB2YXIgaSA9IDA7XG4gIHZhciBzID0gdmFsdWUgPCAwIHx8IHZhbHVlID09PSAwICYmIDEgLyB2YWx1ZSA8IDAgPyAxIDogMDtcbiAgdmFyIGUsIG0sIGM7XG4gIHZhbHVlID0gYWJzKHZhbHVlKTtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXNlbGYtY29tcGFyZVxuICBpZiAodmFsdWUgIT0gdmFsdWUgfHwgdmFsdWUgPT09IEluZmluaXR5KSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXNlbGYtY29tcGFyZVxuICAgIG0gPSB2YWx1ZSAhPSB2YWx1ZSA/IDEgOiAwO1xuICAgIGUgPSBlTWF4O1xuICB9IGVsc2Uge1xuICAgIGUgPSBmbG9vcihsb2codmFsdWUpIC8gTE4yKTtcbiAgICBpZiAodmFsdWUgKiAoYyA9IHBvdygyLCAtZSkpIDwgMSkge1xuICAgICAgZS0tO1xuICAgICAgYyAqPSAyO1xuICAgIH1cbiAgICBpZiAoZSArIGVCaWFzID49IDEpIHtcbiAgICAgIHZhbHVlICs9IHJ0IC8gYztcbiAgICB9IGVsc2Uge1xuICAgICAgdmFsdWUgKz0gcnQgKiBwb3coMiwgMSAtIGVCaWFzKTtcbiAgICB9XG4gICAgaWYgKHZhbHVlICogYyA+PSAyKSB7XG4gICAgICBlKys7XG4gICAgICBjIC89IDI7XG4gICAgfVxuICAgIGlmIChlICsgZUJpYXMgPj0gZU1heCkge1xuICAgICAgbSA9IDA7XG4gICAgICBlID0gZU1heDtcbiAgICB9IGVsc2UgaWYgKGUgKyBlQmlhcyA+PSAxKSB7XG4gICAgICBtID0gKHZhbHVlICogYyAtIDEpICogcG93KDIsIG1MZW4pO1xuICAgICAgZSA9IGUgKyBlQmlhcztcbiAgICB9IGVsc2Uge1xuICAgICAgbSA9IHZhbHVlICogcG93KDIsIGVCaWFzIC0gMSkgKiBwb3coMiwgbUxlbik7XG4gICAgICBlID0gMDtcbiAgICB9XG4gIH1cbiAgZm9yICg7IG1MZW4gPj0gODsgYnVmZmVyW2krK10gPSBtICYgMjU1LCBtIC89IDI1NiwgbUxlbiAtPSA4KTtcbiAgZSA9IGUgPDwgbUxlbiB8IG07XG4gIGVMZW4gKz0gbUxlbjtcbiAgZm9yICg7IGVMZW4gPiAwOyBidWZmZXJbaSsrXSA9IGUgJiAyNTUsIGUgLz0gMjU2LCBlTGVuIC09IDgpO1xuICBidWZmZXJbLS1pXSB8PSBzICogMTI4O1xuICByZXR1cm4gYnVmZmVyO1xufVxuZnVuY3Rpb24gdW5wYWNrSUVFRTc1NChidWZmZXIsIG1MZW4sIG5CeXRlcykge1xuICB2YXIgZUxlbiA9IG5CeXRlcyAqIDggLSBtTGVuIC0gMTtcbiAgdmFyIGVNYXggPSAoMSA8PCBlTGVuKSAtIDE7XG4gIHZhciBlQmlhcyA9IGVNYXggPj4gMTtcbiAgdmFyIG5CaXRzID0gZUxlbiAtIDc7XG4gIHZhciBpID0gbkJ5dGVzIC0gMTtcbiAgdmFyIHMgPSBidWZmZXJbaS0tXTtcbiAgdmFyIGUgPSBzICYgMTI3O1xuICB2YXIgbTtcbiAgcyA+Pj0gNztcbiAgZm9yICg7IG5CaXRzID4gMDsgZSA9IGUgKiAyNTYgKyBidWZmZXJbaV0sIGktLSwgbkJpdHMgLT0gOCk7XG4gIG0gPSBlICYgKDEgPDwgLW5CaXRzKSAtIDE7XG4gIGUgPj49IC1uQml0cztcbiAgbkJpdHMgKz0gbUxlbjtcbiAgZm9yICg7IG5CaXRzID4gMDsgbSA9IG0gKiAyNTYgKyBidWZmZXJbaV0sIGktLSwgbkJpdHMgLT0gOCk7XG4gIGlmIChlID09PSAwKSB7XG4gICAgZSA9IDEgLSBlQmlhcztcbiAgfSBlbHNlIGlmIChlID09PSBlTWF4KSB7XG4gICAgcmV0dXJuIG0gPyBOYU4gOiBzID8gLUluZmluaXR5IDogSW5maW5pdHk7XG4gIH0gZWxzZSB7XG4gICAgbSA9IG0gKyBwb3coMiwgbUxlbik7XG4gICAgZSA9IGUgLSBlQmlhcztcbiAgfSByZXR1cm4gKHMgPyAtMSA6IDEpICogbSAqIHBvdygyLCBlIC0gbUxlbik7XG59XG5cbmZ1bmN0aW9uIHVucGFja0kzMihieXRlcykge1xuICByZXR1cm4gYnl0ZXNbM10gPDwgMjQgfCBieXRlc1syXSA8PCAxNiB8IGJ5dGVzWzFdIDw8IDggfCBieXRlc1swXTtcbn1cbmZ1bmN0aW9uIHBhY2tJOChpdCkge1xuICByZXR1cm4gW2l0ICYgMHhmZl07XG59XG5mdW5jdGlvbiBwYWNrSTE2KGl0KSB7XG4gIHJldHVybiBbaXQgJiAweGZmLCBpdCA+PiA4ICYgMHhmZl07XG59XG5mdW5jdGlvbiBwYWNrSTMyKGl0KSB7XG4gIHJldHVybiBbaXQgJiAweGZmLCBpdCA+PiA4ICYgMHhmZiwgaXQgPj4gMTYgJiAweGZmLCBpdCA+PiAyNCAmIDB4ZmZdO1xufVxuZnVuY3Rpb24gcGFja0Y2NChpdCkge1xuICByZXR1cm4gcGFja0lFRUU3NTQoaXQsIDUyLCA4KTtcbn1cbmZ1bmN0aW9uIHBhY2tGMzIoaXQpIHtcbiAgcmV0dXJuIHBhY2tJRUVFNzU0KGl0LCAyMywgNCk7XG59XG5cbmZ1bmN0aW9uIGFkZEdldHRlcihDLCBrZXksIGludGVybmFsKSB7XG4gIGRQKENbUFJPVE9UWVBFXSwga2V5LCB7IGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gdGhpc1tpbnRlcm5hbF07IH0gfSk7XG59XG5cbmZ1bmN0aW9uIGdldCh2aWV3LCBieXRlcywgaW5kZXgsIGlzTGl0dGxlRW5kaWFuKSB7XG4gIHZhciBudW1JbmRleCA9ICtpbmRleDtcbiAgdmFyIGludEluZGV4ID0gdG9JbmRleChudW1JbmRleCk7XG4gIGlmIChpbnRJbmRleCArIGJ5dGVzID4gdmlld1skTEVOR1RIXSkgdGhyb3cgUmFuZ2VFcnJvcihXUk9OR19JTkRFWCk7XG4gIHZhciBzdG9yZSA9IHZpZXdbJEJVRkZFUl0uX2I7XG4gIHZhciBzdGFydCA9IGludEluZGV4ICsgdmlld1skT0ZGU0VUXTtcbiAgdmFyIHBhY2sgPSBzdG9yZS5zbGljZShzdGFydCwgc3RhcnQgKyBieXRlcyk7XG4gIHJldHVybiBpc0xpdHRsZUVuZGlhbiA/IHBhY2sgOiBwYWNrLnJldmVyc2UoKTtcbn1cbmZ1bmN0aW9uIHNldCh2aWV3LCBieXRlcywgaW5kZXgsIGNvbnZlcnNpb24sIHZhbHVlLCBpc0xpdHRsZUVuZGlhbikge1xuICB2YXIgbnVtSW5kZXggPSAraW5kZXg7XG4gIHZhciBpbnRJbmRleCA9IHRvSW5kZXgobnVtSW5kZXgpO1xuICBpZiAoaW50SW5kZXggKyBieXRlcyA+IHZpZXdbJExFTkdUSF0pIHRocm93IFJhbmdlRXJyb3IoV1JPTkdfSU5ERVgpO1xuICB2YXIgc3RvcmUgPSB2aWV3WyRCVUZGRVJdLl9iO1xuICB2YXIgc3RhcnQgPSBpbnRJbmRleCArIHZpZXdbJE9GRlNFVF07XG4gIHZhciBwYWNrID0gY29udmVyc2lvbigrdmFsdWUpO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGJ5dGVzOyBpKyspIHN0b3JlW3N0YXJ0ICsgaV0gPSBwYWNrW2lzTGl0dGxlRW5kaWFuID8gaSA6IGJ5dGVzIC0gaSAtIDFdO1xufVxuXG5pZiAoISR0eXBlZC5BQlYpIHtcbiAgJEFycmF5QnVmZmVyID0gZnVuY3Rpb24gQXJyYXlCdWZmZXIobGVuZ3RoKSB7XG4gICAgYW5JbnN0YW5jZSh0aGlzLCAkQXJyYXlCdWZmZXIsIEFSUkFZX0JVRkZFUik7XG4gICAgdmFyIGJ5dGVMZW5ndGggPSB0b0luZGV4KGxlbmd0aCk7XG4gICAgdGhpcy5fYiA9IGFycmF5RmlsbC5jYWxsKG5ldyBBcnJheShieXRlTGVuZ3RoKSwgMCk7XG4gICAgdGhpc1skTEVOR1RIXSA9IGJ5dGVMZW5ndGg7XG4gIH07XG5cbiAgJERhdGFWaWV3ID0gZnVuY3Rpb24gRGF0YVZpZXcoYnVmZmVyLCBieXRlT2Zmc2V0LCBieXRlTGVuZ3RoKSB7XG4gICAgYW5JbnN0YW5jZSh0aGlzLCAkRGF0YVZpZXcsIERBVEFfVklFVyk7XG4gICAgYW5JbnN0YW5jZShidWZmZXIsICRBcnJheUJ1ZmZlciwgREFUQV9WSUVXKTtcbiAgICB2YXIgYnVmZmVyTGVuZ3RoID0gYnVmZmVyWyRMRU5HVEhdO1xuICAgIHZhciBvZmZzZXQgPSB0b0ludGVnZXIoYnl0ZU9mZnNldCk7XG4gICAgaWYgKG9mZnNldCA8IDAgfHwgb2Zmc2V0ID4gYnVmZmVyTGVuZ3RoKSB0aHJvdyBSYW5nZUVycm9yKCdXcm9uZyBvZmZzZXQhJyk7XG4gICAgYnl0ZUxlbmd0aCA9IGJ5dGVMZW5ndGggPT09IHVuZGVmaW5lZCA/IGJ1ZmZlckxlbmd0aCAtIG9mZnNldCA6IHRvTGVuZ3RoKGJ5dGVMZW5ndGgpO1xuICAgIGlmIChvZmZzZXQgKyBieXRlTGVuZ3RoID4gYnVmZmVyTGVuZ3RoKSB0aHJvdyBSYW5nZUVycm9yKFdST05HX0xFTkdUSCk7XG4gICAgdGhpc1skQlVGRkVSXSA9IGJ1ZmZlcjtcbiAgICB0aGlzWyRPRkZTRVRdID0gb2Zmc2V0O1xuICAgIHRoaXNbJExFTkdUSF0gPSBieXRlTGVuZ3RoO1xuICB9O1xuXG4gIGlmIChERVNDUklQVE9SUykge1xuICAgIGFkZEdldHRlcigkQXJyYXlCdWZmZXIsIEJZVEVfTEVOR1RILCAnX2wnKTtcbiAgICBhZGRHZXR0ZXIoJERhdGFWaWV3LCBCVUZGRVIsICdfYicpO1xuICAgIGFkZEdldHRlcigkRGF0YVZpZXcsIEJZVEVfTEVOR1RILCAnX2wnKTtcbiAgICBhZGRHZXR0ZXIoJERhdGFWaWV3LCBCWVRFX09GRlNFVCwgJ19vJyk7XG4gIH1cblxuICByZWRlZmluZUFsbCgkRGF0YVZpZXdbUFJPVE9UWVBFXSwge1xuICAgIGdldEludDg6IGZ1bmN0aW9uIGdldEludDgoYnl0ZU9mZnNldCkge1xuICAgICAgcmV0dXJuIGdldCh0aGlzLCAxLCBieXRlT2Zmc2V0KVswXSA8PCAyNCA+PiAyNDtcbiAgICB9LFxuICAgIGdldFVpbnQ4OiBmdW5jdGlvbiBnZXRVaW50OChieXRlT2Zmc2V0KSB7XG4gICAgICByZXR1cm4gZ2V0KHRoaXMsIDEsIGJ5dGVPZmZzZXQpWzBdO1xuICAgIH0sXG4gICAgZ2V0SW50MTY6IGZ1bmN0aW9uIGdldEludDE2KGJ5dGVPZmZzZXQgLyogLCBsaXR0bGVFbmRpYW4gKi8pIHtcbiAgICAgIHZhciBieXRlcyA9IGdldCh0aGlzLCAyLCBieXRlT2Zmc2V0LCBhcmd1bWVudHNbMV0pO1xuICAgICAgcmV0dXJuIChieXRlc1sxXSA8PCA4IHwgYnl0ZXNbMF0pIDw8IDE2ID4+IDE2O1xuICAgIH0sXG4gICAgZ2V0VWludDE2OiBmdW5jdGlvbiBnZXRVaW50MTYoYnl0ZU9mZnNldCAvKiAsIGxpdHRsZUVuZGlhbiAqLykge1xuICAgICAgdmFyIGJ5dGVzID0gZ2V0KHRoaXMsIDIsIGJ5dGVPZmZzZXQsIGFyZ3VtZW50c1sxXSk7XG4gICAgICByZXR1cm4gYnl0ZXNbMV0gPDwgOCB8IGJ5dGVzWzBdO1xuICAgIH0sXG4gICAgZ2V0SW50MzI6IGZ1bmN0aW9uIGdldEludDMyKGJ5dGVPZmZzZXQgLyogLCBsaXR0bGVFbmRpYW4gKi8pIHtcbiAgICAgIHJldHVybiB1bnBhY2tJMzIoZ2V0KHRoaXMsIDQsIGJ5dGVPZmZzZXQsIGFyZ3VtZW50c1sxXSkpO1xuICAgIH0sXG4gICAgZ2V0VWludDMyOiBmdW5jdGlvbiBnZXRVaW50MzIoYnl0ZU9mZnNldCAvKiAsIGxpdHRsZUVuZGlhbiAqLykge1xuICAgICAgcmV0dXJuIHVucGFja0kzMihnZXQodGhpcywgNCwgYnl0ZU9mZnNldCwgYXJndW1lbnRzWzFdKSkgPj4+IDA7XG4gICAgfSxcbiAgICBnZXRGbG9hdDMyOiBmdW5jdGlvbiBnZXRGbG9hdDMyKGJ5dGVPZmZzZXQgLyogLCBsaXR0bGVFbmRpYW4gKi8pIHtcbiAgICAgIHJldHVybiB1bnBhY2tJRUVFNzU0KGdldCh0aGlzLCA0LCBieXRlT2Zmc2V0LCBhcmd1bWVudHNbMV0pLCAyMywgNCk7XG4gICAgfSxcbiAgICBnZXRGbG9hdDY0OiBmdW5jdGlvbiBnZXRGbG9hdDY0KGJ5dGVPZmZzZXQgLyogLCBsaXR0bGVFbmRpYW4gKi8pIHtcbiAgICAgIHJldHVybiB1bnBhY2tJRUVFNzU0KGdldCh0aGlzLCA4LCBieXRlT2Zmc2V0LCBhcmd1bWVudHNbMV0pLCA1MiwgOCk7XG4gICAgfSxcbiAgICBzZXRJbnQ4OiBmdW5jdGlvbiBzZXRJbnQ4KGJ5dGVPZmZzZXQsIHZhbHVlKSB7XG4gICAgICBzZXQodGhpcywgMSwgYnl0ZU9mZnNldCwgcGFja0k4LCB2YWx1ZSk7XG4gICAgfSxcbiAgICBzZXRVaW50ODogZnVuY3Rpb24gc2V0VWludDgoYnl0ZU9mZnNldCwgdmFsdWUpIHtcbiAgICAgIHNldCh0aGlzLCAxLCBieXRlT2Zmc2V0LCBwYWNrSTgsIHZhbHVlKTtcbiAgICB9LFxuICAgIHNldEludDE2OiBmdW5jdGlvbiBzZXRJbnQxNihieXRlT2Zmc2V0LCB2YWx1ZSAvKiAsIGxpdHRsZUVuZGlhbiAqLykge1xuICAgICAgc2V0KHRoaXMsIDIsIGJ5dGVPZmZzZXQsIHBhY2tJMTYsIHZhbHVlLCBhcmd1bWVudHNbMl0pO1xuICAgIH0sXG4gICAgc2V0VWludDE2OiBmdW5jdGlvbiBzZXRVaW50MTYoYnl0ZU9mZnNldCwgdmFsdWUgLyogLCBsaXR0bGVFbmRpYW4gKi8pIHtcbiAgICAgIHNldCh0aGlzLCAyLCBieXRlT2Zmc2V0LCBwYWNrSTE2LCB2YWx1ZSwgYXJndW1lbnRzWzJdKTtcbiAgICB9LFxuICAgIHNldEludDMyOiBmdW5jdGlvbiBzZXRJbnQzMihieXRlT2Zmc2V0LCB2YWx1ZSAvKiAsIGxpdHRsZUVuZGlhbiAqLykge1xuICAgICAgc2V0KHRoaXMsIDQsIGJ5dGVPZmZzZXQsIHBhY2tJMzIsIHZhbHVlLCBhcmd1bWVudHNbMl0pO1xuICAgIH0sXG4gICAgc2V0VWludDMyOiBmdW5jdGlvbiBzZXRVaW50MzIoYnl0ZU9mZnNldCwgdmFsdWUgLyogLCBsaXR0bGVFbmRpYW4gKi8pIHtcbiAgICAgIHNldCh0aGlzLCA0LCBieXRlT2Zmc2V0LCBwYWNrSTMyLCB2YWx1ZSwgYXJndW1lbnRzWzJdKTtcbiAgICB9LFxuICAgIHNldEZsb2F0MzI6IGZ1bmN0aW9uIHNldEZsb2F0MzIoYnl0ZU9mZnNldCwgdmFsdWUgLyogLCBsaXR0bGVFbmRpYW4gKi8pIHtcbiAgICAgIHNldCh0aGlzLCA0LCBieXRlT2Zmc2V0LCBwYWNrRjMyLCB2YWx1ZSwgYXJndW1lbnRzWzJdKTtcbiAgICB9LFxuICAgIHNldEZsb2F0NjQ6IGZ1bmN0aW9uIHNldEZsb2F0NjQoYnl0ZU9mZnNldCwgdmFsdWUgLyogLCBsaXR0bGVFbmRpYW4gKi8pIHtcbiAgICAgIHNldCh0aGlzLCA4LCBieXRlT2Zmc2V0LCBwYWNrRjY0LCB2YWx1ZSwgYXJndW1lbnRzWzJdKTtcbiAgICB9XG4gIH0pO1xufSBlbHNlIHtcbiAgaWYgKCFmYWlscyhmdW5jdGlvbiAoKSB7XG4gICAgJEFycmF5QnVmZmVyKDEpO1xuICB9KSB8fCAhZmFpbHMoZnVuY3Rpb24gKCkge1xuICAgIG5ldyAkQXJyYXlCdWZmZXIoLTEpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ld1xuICB9KSB8fCBmYWlscyhmdW5jdGlvbiAoKSB7XG4gICAgbmV3ICRBcnJheUJ1ZmZlcigpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ld1xuICAgIG5ldyAkQXJyYXlCdWZmZXIoMS41KTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXdcbiAgICBuZXcgJEFycmF5QnVmZmVyKE5hTik7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3XG4gICAgcmV0dXJuICRBcnJheUJ1ZmZlci5uYW1lICE9IEFSUkFZX0JVRkZFUjtcbiAgfSkpIHtcbiAgICAkQXJyYXlCdWZmZXIgPSBmdW5jdGlvbiBBcnJheUJ1ZmZlcihsZW5ndGgpIHtcbiAgICAgIGFuSW5zdGFuY2UodGhpcywgJEFycmF5QnVmZmVyKTtcbiAgICAgIHJldHVybiBuZXcgQmFzZUJ1ZmZlcih0b0luZGV4KGxlbmd0aCkpO1xuICAgIH07XG4gICAgdmFyIEFycmF5QnVmZmVyUHJvdG8gPSAkQXJyYXlCdWZmZXJbUFJPVE9UWVBFXSA9IEJhc2VCdWZmZXJbUFJPVE9UWVBFXTtcbiAgICBmb3IgKHZhciBrZXlzID0gZ09QTihCYXNlQnVmZmVyKSwgaiA9IDAsIGtleTsga2V5cy5sZW5ndGggPiBqOykge1xuICAgICAgaWYgKCEoKGtleSA9IGtleXNbaisrXSkgaW4gJEFycmF5QnVmZmVyKSkgaGlkZSgkQXJyYXlCdWZmZXIsIGtleSwgQmFzZUJ1ZmZlcltrZXldKTtcbiAgICB9XG4gICAgaWYgKCFMSUJSQVJZKSBBcnJheUJ1ZmZlclByb3RvLmNvbnN0cnVjdG9yID0gJEFycmF5QnVmZmVyO1xuICB9XG4gIC8vIGlPUyBTYWZhcmkgNy54IGJ1Z1xuICB2YXIgdmlldyA9IG5ldyAkRGF0YVZpZXcobmV3ICRBcnJheUJ1ZmZlcigyKSk7XG4gIHZhciAkc2V0SW50OCA9ICREYXRhVmlld1tQUk9UT1RZUEVdLnNldEludDg7XG4gIHZpZXcuc2V0SW50OCgwLCAyMTQ3NDgzNjQ4KTtcbiAgdmlldy5zZXRJbnQ4KDEsIDIxNDc0ODM2NDkpO1xuICBpZiAodmlldy5nZXRJbnQ4KDApIHx8ICF2aWV3LmdldEludDgoMSkpIHJlZGVmaW5lQWxsKCREYXRhVmlld1tQUk9UT1RZUEVdLCB7XG4gICAgc2V0SW50ODogZnVuY3Rpb24gc2V0SW50OChieXRlT2Zmc2V0LCB2YWx1ZSkge1xuICAgICAgJHNldEludDguY2FsbCh0aGlzLCBieXRlT2Zmc2V0LCB2YWx1ZSA8PCAyNCA+PiAyNCk7XG4gICAgfSxcbiAgICBzZXRVaW50ODogZnVuY3Rpb24gc2V0VWludDgoYnl0ZU9mZnNldCwgdmFsdWUpIHtcbiAgICAgICRzZXRJbnQ4LmNhbGwodGhpcywgYnl0ZU9mZnNldCwgdmFsdWUgPDwgMjQgPj4gMjQpO1xuICAgIH1cbiAgfSwgdHJ1ZSk7XG59XG5zZXRUb1N0cmluZ1RhZygkQXJyYXlCdWZmZXIsIEFSUkFZX0JVRkZFUik7XG5zZXRUb1N0cmluZ1RhZygkRGF0YVZpZXcsIERBVEFfVklFVyk7XG5oaWRlKCREYXRhVmlld1tQUk9UT1RZUEVdLCAkdHlwZWQuVklFVywgdHJ1ZSk7XG5leHBvcnRzW0FSUkFZX0JVRkZFUl0gPSAkQXJyYXlCdWZmZXI7XG5leHBvcnRzW0RBVEFfVklFV10gPSAkRGF0YVZpZXc7XG4iLCJ2YXIgZztcblxuLy8gVGhpcyB3b3JrcyBpbiBub24tc3RyaWN0IG1vZGVcbmcgPSAoZnVuY3Rpb24oKSB7XG5cdHJldHVybiB0aGlzO1xufSkoKTtcblxudHJ5IHtcblx0Ly8gVGhpcyB3b3JrcyBpZiBldmFsIGlzIGFsbG93ZWQgKHNlZSBDU1ApXG5cdGcgPSBnIHx8IG5ldyBGdW5jdGlvbihcInJldHVybiB0aGlzXCIpKCk7XG59IGNhdGNoIChlKSB7XG5cdC8vIFRoaXMgd29ya3MgaWYgdGhlIHdpbmRvdyByZWZlcmVuY2UgaXMgYXZhaWxhYmxlXG5cdGlmICh0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiKSBnID0gd2luZG93O1xufVxuXG4vLyBnIGNhbiBzdGlsbCBiZSB1bmRlZmluZWQsIGJ1dCBub3RoaW5nIHRvIGRvIGFib3V0IGl0Li4uXG4vLyBXZSByZXR1cm4gdW5kZWZpbmVkLCBpbnN0ZWFkIG9mIG5vdGhpbmcgaGVyZSwgc28gaXQnc1xuLy8gZWFzaWVyIHRvIGhhbmRsZSB0aGlzIGNhc2UuIGlmKCFnbG9iYWwpIHsgLi4ufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGc7XG4iLCJtb2R1bGUuZXhwb3J0cyA9ICFyZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpICYmICFyZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyZXF1aXJlKCcuL19kb20tY3JlYXRlJykoJ2RpdicpLCAnYScsIHsgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiA3OyB9IH0pLmEgIT0gNztcbn0pO1xuIiwiZXhwb3J0cy5mID0gcmVxdWlyZSgnLi9fd2tzJyk7XG4iLCJ2YXIgaGFzID0gcmVxdWlyZSgnLi9faGFzJyk7XG52YXIgdG9JT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8taW9iamVjdCcpO1xudmFyIGFycmF5SW5kZXhPZiA9IHJlcXVpcmUoJy4vX2FycmF5LWluY2x1ZGVzJykoZmFsc2UpO1xudmFyIElFX1BST1RPID0gcmVxdWlyZSgnLi9fc2hhcmVkLWtleScpKCdJRV9QUk9UTycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChvYmplY3QsIG5hbWVzKSB7XG4gIHZhciBPID0gdG9JT2JqZWN0KG9iamVjdCk7XG4gIHZhciBpID0gMDtcbiAgdmFyIHJlc3VsdCA9IFtdO1xuICB2YXIga2V5O1xuICBmb3IgKGtleSBpbiBPKSBpZiAoa2V5ICE9IElFX1BST1RPKSBoYXMoTywga2V5KSAmJiByZXN1bHQucHVzaChrZXkpO1xuICAvLyBEb24ndCBlbnVtIGJ1ZyAmIGhpZGRlbiBrZXlzXG4gIHdoaWxlIChuYW1lcy5sZW5ndGggPiBpKSBpZiAoaGFzKE8sIGtleSA9IG5hbWVzW2krK10pKSB7XG4gICAgfmFycmF5SW5kZXhPZihyZXN1bHQsIGtleSkgfHwgcmVzdWx0LnB1c2goa2V5KTtcbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufTtcbiIsInZhciBkUCA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgZ2V0S2V5cyA9IHJlcXVpcmUoJy4vX29iamVjdC1rZXlzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKSA/IE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzIDogZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyhPLCBQcm9wZXJ0aWVzKSB7XG4gIGFuT2JqZWN0KE8pO1xuICB2YXIga2V5cyA9IGdldEtleXMoUHJvcGVydGllcyk7XG4gIHZhciBsZW5ndGggPSBrZXlzLmxlbmd0aDtcbiAgdmFyIGkgPSAwO1xuICB2YXIgUDtcbiAgd2hpbGUgKGxlbmd0aCA+IGkpIGRQLmYoTywgUCA9IGtleXNbaSsrXSwgUHJvcGVydGllc1tQXSk7XG4gIHJldHVybiBPO1xufTtcbiIsIi8vIGZhbGxiYWNrIGZvciBJRTExIGJ1Z2d5IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzIHdpdGggaWZyYW1lIGFuZCB3aW5kb3dcbnZhciB0b0lPYmplY3QgPSByZXF1aXJlKCcuL190by1pb2JqZWN0Jyk7XG52YXIgZ09QTiA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BuJykuZjtcbnZhciB0b1N0cmluZyA9IHt9LnRvU3RyaW5nO1xuXG52YXIgd2luZG93TmFtZXMgPSB0eXBlb2Ygd2luZG93ID09ICdvYmplY3QnICYmIHdpbmRvdyAmJiBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lc1xuICA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHdpbmRvdykgOiBbXTtcblxudmFyIGdldFdpbmRvd05hbWVzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIGdPUE4oaXQpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIHdpbmRvd05hbWVzLnNsaWNlKCk7XG4gIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzLmYgPSBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eU5hbWVzKGl0KSB7XG4gIHJldHVybiB3aW5kb3dOYW1lcyAmJiB0b1N0cmluZy5jYWxsKGl0KSA9PSAnW29iamVjdCBXaW5kb3ddJyA/IGdldFdpbmRvd05hbWVzKGl0KSA6IGdPUE4odG9JT2JqZWN0KGl0KSk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gMTkuMS4yLjEgT2JqZWN0LmFzc2lnbih0YXJnZXQsIHNvdXJjZSwgLi4uKVxudmFyIERFU0NSSVBUT1JTID0gcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKTtcbnZhciBnZXRLZXlzID0gcmVxdWlyZSgnLi9fb2JqZWN0LWtleXMnKTtcbnZhciBnT1BTID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcHMnKTtcbnZhciBwSUUgPSByZXF1aXJlKCcuL19vYmplY3QtcGllJyk7XG52YXIgdG9PYmplY3QgPSByZXF1aXJlKCcuL190by1vYmplY3QnKTtcbnZhciBJT2JqZWN0ID0gcmVxdWlyZSgnLi9faW9iamVjdCcpO1xudmFyICRhc3NpZ24gPSBPYmplY3QuYXNzaWduO1xuXG4vLyBzaG91bGQgd29yayB3aXRoIHN5bWJvbHMgYW5kIHNob3VsZCBoYXZlIGRldGVybWluaXN0aWMgcHJvcGVydHkgb3JkZXIgKFY4IGJ1Zylcbm1vZHVsZS5leHBvcnRzID0gISRhc3NpZ24gfHwgcmVxdWlyZSgnLi9fZmFpbHMnKShmdW5jdGlvbiAoKSB7XG4gIHZhciBBID0ge307XG4gIHZhciBCID0ge307XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZlxuICB2YXIgUyA9IFN5bWJvbCgpO1xuICB2YXIgSyA9ICdhYmNkZWZnaGlqa2xtbm9wcXJzdCc7XG4gIEFbU10gPSA3O1xuICBLLnNwbGl0KCcnKS5mb3JFYWNoKGZ1bmN0aW9uIChrKSB7IEJba10gPSBrOyB9KTtcbiAgcmV0dXJuICRhc3NpZ24oe30sIEEpW1NdICE9IDcgfHwgT2JqZWN0LmtleXMoJGFzc2lnbih7fSwgQikpLmpvaW4oJycpICE9IEs7XG59KSA/IGZ1bmN0aW9uIGFzc2lnbih0YXJnZXQsIHNvdXJjZSkgeyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVudXNlZC12YXJzXG4gIHZhciBUID0gdG9PYmplY3QodGFyZ2V0KTtcbiAgdmFyIGFMZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICB2YXIgaW5kZXggPSAxO1xuICB2YXIgZ2V0U3ltYm9scyA9IGdPUFMuZjtcbiAgdmFyIGlzRW51bSA9IHBJRS5mO1xuICB3aGlsZSAoYUxlbiA+IGluZGV4KSB7XG4gICAgdmFyIFMgPSBJT2JqZWN0KGFyZ3VtZW50c1tpbmRleCsrXSk7XG4gICAgdmFyIGtleXMgPSBnZXRTeW1ib2xzID8gZ2V0S2V5cyhTKS5jb25jYXQoZ2V0U3ltYm9scyhTKSkgOiBnZXRLZXlzKFMpO1xuICAgIHZhciBsZW5ndGggPSBrZXlzLmxlbmd0aDtcbiAgICB2YXIgaiA9IDA7XG4gICAgdmFyIGtleTtcbiAgICB3aGlsZSAobGVuZ3RoID4gaikge1xuICAgICAga2V5ID0ga2V5c1tqKytdO1xuICAgICAgaWYgKCFERVNDUklQVE9SUyB8fCBpc0VudW0uY2FsbChTLCBrZXkpKSBUW2tleV0gPSBTW2tleV07XG4gICAgfVxuICB9IHJldHVybiBUO1xufSA6ICRhc3NpZ247XG4iLCIvLyA3LjIuOSBTYW1lVmFsdWUoeCwgeSlcbm1vZHVsZS5leHBvcnRzID0gT2JqZWN0LmlzIHx8IGZ1bmN0aW9uIGlzKHgsIHkpIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXNlbGYtY29tcGFyZVxuICByZXR1cm4geCA9PT0geSA/IHggIT09IDAgfHwgMSAvIHggPT09IDEgLyB5IDogeCAhPSB4ICYmIHkgIT0geTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgYUZ1bmN0aW9uID0gcmVxdWlyZSgnLi9fYS1mdW5jdGlvbicpO1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgaW52b2tlID0gcmVxdWlyZSgnLi9faW52b2tlJyk7XG52YXIgYXJyYXlTbGljZSA9IFtdLnNsaWNlO1xudmFyIGZhY3RvcmllcyA9IHt9O1xuXG52YXIgY29uc3RydWN0ID0gZnVuY3Rpb24gKEYsIGxlbiwgYXJncykge1xuICBpZiAoIShsZW4gaW4gZmFjdG9yaWVzKSkge1xuICAgIGZvciAodmFyIG4gPSBbXSwgaSA9IDA7IGkgPCBsZW47IGkrKykgbltpXSA9ICdhWycgKyBpICsgJ10nO1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1uZXctZnVuY1xuICAgIGZhY3Rvcmllc1tsZW5dID0gRnVuY3Rpb24oJ0YsYScsICdyZXR1cm4gbmV3IEYoJyArIG4uam9pbignLCcpICsgJyknKTtcbiAgfSByZXR1cm4gZmFjdG9yaWVzW2xlbl0oRiwgYXJncyk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEZ1bmN0aW9uLmJpbmQgfHwgZnVuY3Rpb24gYmluZCh0aGF0IC8qICwgLi4uYXJncyAqLykge1xuICB2YXIgZm4gPSBhRnVuY3Rpb24odGhpcyk7XG4gIHZhciBwYXJ0QXJncyA9IGFycmF5U2xpY2UuY2FsbChhcmd1bWVudHMsIDEpO1xuICB2YXIgYm91bmQgPSBmdW5jdGlvbiAoLyogYXJncy4uLiAqLykge1xuICAgIHZhciBhcmdzID0gcGFydEFyZ3MuY29uY2F0KGFycmF5U2xpY2UuY2FsbChhcmd1bWVudHMpKTtcbiAgICByZXR1cm4gdGhpcyBpbnN0YW5jZW9mIGJvdW5kID8gY29uc3RydWN0KGZuLCBhcmdzLmxlbmd0aCwgYXJncykgOiBpbnZva2UoZm4sIGFyZ3MsIHRoYXQpO1xuICB9O1xuICBpZiAoaXNPYmplY3QoZm4ucHJvdG90eXBlKSkgYm91bmQucHJvdG90eXBlID0gZm4ucHJvdG90eXBlO1xuICByZXR1cm4gYm91bmQ7XG59O1xuIiwiLy8gZmFzdCBhcHBseSwgaHR0cDovL2pzcGVyZi5sbmtpdC5jb20vZmFzdC1hcHBseS81XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChmbiwgYXJncywgdGhhdCkge1xuICB2YXIgdW4gPSB0aGF0ID09PSB1bmRlZmluZWQ7XG4gIHN3aXRjaCAoYXJncy5sZW5ndGgpIHtcbiAgICBjYXNlIDA6IHJldHVybiB1biA/IGZuKClcbiAgICAgICAgICAgICAgICAgICAgICA6IGZuLmNhbGwodGhhdCk7XG4gICAgY2FzZSAxOiByZXR1cm4gdW4gPyBmbihhcmdzWzBdKVxuICAgICAgICAgICAgICAgICAgICAgIDogZm4uY2FsbCh0aGF0LCBhcmdzWzBdKTtcbiAgICBjYXNlIDI6IHJldHVybiB1biA/IGZuKGFyZ3NbMF0sIGFyZ3NbMV0pXG4gICAgICAgICAgICAgICAgICAgICAgOiBmbi5jYWxsKHRoYXQsIGFyZ3NbMF0sIGFyZ3NbMV0pO1xuICAgIGNhc2UgMzogcmV0dXJuIHVuID8gZm4oYXJnc1swXSwgYXJnc1sxXSwgYXJnc1syXSlcbiAgICAgICAgICAgICAgICAgICAgICA6IGZuLmNhbGwodGhhdCwgYXJnc1swXSwgYXJnc1sxXSwgYXJnc1syXSk7XG4gICAgY2FzZSA0OiByZXR1cm4gdW4gPyBmbihhcmdzWzBdLCBhcmdzWzFdLCBhcmdzWzJdLCBhcmdzWzNdKVxuICAgICAgICAgICAgICAgICAgICAgIDogZm4uY2FsbCh0aGF0LCBhcmdzWzBdLCBhcmdzWzFdLCBhcmdzWzJdLCBhcmdzWzNdKTtcbiAgfSByZXR1cm4gZm4uYXBwbHkodGhhdCwgYXJncyk7XG59O1xuIiwidmFyICRwYXJzZUludCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpLnBhcnNlSW50O1xudmFyICR0cmltID0gcmVxdWlyZSgnLi9fc3RyaW5nLXRyaW0nKS50cmltO1xudmFyIHdzID0gcmVxdWlyZSgnLi9fc3RyaW5nLXdzJyk7XG52YXIgaGV4ID0gL15bLStdPzBbeFhdLztcblxubW9kdWxlLmV4cG9ydHMgPSAkcGFyc2VJbnQod3MgKyAnMDgnKSAhPT0gOCB8fCAkcGFyc2VJbnQod3MgKyAnMHgxNicpICE9PSAyMiA/IGZ1bmN0aW9uIHBhcnNlSW50KHN0ciwgcmFkaXgpIHtcbiAgdmFyIHN0cmluZyA9ICR0cmltKFN0cmluZyhzdHIpLCAzKTtcbiAgcmV0dXJuICRwYXJzZUludChzdHJpbmcsIChyYWRpeCA+Pj4gMCkgfHwgKGhleC50ZXN0KHN0cmluZykgPyAxNiA6IDEwKSk7XG59IDogJHBhcnNlSW50O1xuIiwidmFyICRwYXJzZUZsb2F0ID0gcmVxdWlyZSgnLi9fZ2xvYmFsJykucGFyc2VGbG9hdDtcbnZhciAkdHJpbSA9IHJlcXVpcmUoJy4vX3N0cmluZy10cmltJykudHJpbTtcblxubW9kdWxlLmV4cG9ydHMgPSAxIC8gJHBhcnNlRmxvYXQocmVxdWlyZSgnLi9fc3RyaW5nLXdzJykgKyAnLTAnKSAhPT0gLUluZmluaXR5ID8gZnVuY3Rpb24gcGFyc2VGbG9hdChzdHIpIHtcbiAgdmFyIHN0cmluZyA9ICR0cmltKFN0cmluZyhzdHIpLCAzKTtcbiAgdmFyIHJlc3VsdCA9ICRwYXJzZUZsb2F0KHN0cmluZyk7XG4gIHJldHVybiByZXN1bHQgPT09IDAgJiYgc3RyaW5nLmNoYXJBdCgwKSA9PSAnLScgPyAtMCA6IHJlc3VsdDtcbn0gOiAkcGFyc2VGbG9hdDtcbiIsInZhciBjb2YgPSByZXF1aXJlKCcuL19jb2YnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0LCBtc2cpIHtcbiAgaWYgKHR5cGVvZiBpdCAhPSAnbnVtYmVyJyAmJiBjb2YoaXQpICE9ICdOdW1iZXInKSB0aHJvdyBUeXBlRXJyb3IobXNnKTtcbiAgcmV0dXJuICtpdDtcbn07XG4iLCIvLyAyMC4xLjIuMyBOdW1iZXIuaXNJbnRlZ2VyKG51bWJlcilcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIGZsb29yID0gTWF0aC5mbG9vcjtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaXNJbnRlZ2VyKGl0KSB7XG4gIHJldHVybiAhaXNPYmplY3QoaXQpICYmIGlzRmluaXRlKGl0KSAmJiBmbG9vcihpdCkgPT09IGl0O1xufTtcbiIsIi8vIDIwLjIuMi4yMCBNYXRoLmxvZzFwKHgpXG5tb2R1bGUuZXhwb3J0cyA9IE1hdGgubG9nMXAgfHwgZnVuY3Rpb24gbG9nMXAoeCkge1xuICByZXR1cm4gKHggPSAreCkgPiAtMWUtOCAmJiB4IDwgMWUtOCA/IHggLSB4ICogeCAvIDIgOiBNYXRoLmxvZygxICsgeCk7XG59O1xuIiwiLy8gMjAuMi4yLjE2IE1hdGguZnJvdW5kKHgpXG52YXIgc2lnbiA9IHJlcXVpcmUoJy4vX21hdGgtc2lnbicpO1xudmFyIHBvdyA9IE1hdGgucG93O1xudmFyIEVQU0lMT04gPSBwb3coMiwgLTUyKTtcbnZhciBFUFNJTE9OMzIgPSBwb3coMiwgLTIzKTtcbnZhciBNQVgzMiA9IHBvdygyLCAxMjcpICogKDIgLSBFUFNJTE9OMzIpO1xudmFyIE1JTjMyID0gcG93KDIsIC0xMjYpO1xuXG52YXIgcm91bmRUaWVzVG9FdmVuID0gZnVuY3Rpb24gKG4pIHtcbiAgcmV0dXJuIG4gKyAxIC8gRVBTSUxPTiAtIDEgLyBFUFNJTE9OO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBNYXRoLmZyb3VuZCB8fCBmdW5jdGlvbiBmcm91bmQoeCkge1xuICB2YXIgJGFicyA9IE1hdGguYWJzKHgpO1xuICB2YXIgJHNpZ24gPSBzaWduKHgpO1xuICB2YXIgYSwgcmVzdWx0O1xuICBpZiAoJGFicyA8IE1JTjMyKSByZXR1cm4gJHNpZ24gKiByb3VuZFRpZXNUb0V2ZW4oJGFicyAvIE1JTjMyIC8gRVBTSUxPTjMyKSAqIE1JTjMyICogRVBTSUxPTjMyO1xuICBhID0gKDEgKyBFUFNJTE9OMzIgLyBFUFNJTE9OKSAqICRhYnM7XG4gIHJlc3VsdCA9IGEgLSAoYSAtICRhYnMpO1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tc2VsZi1jb21wYXJlXG4gIGlmIChyZXN1bHQgPiBNQVgzMiB8fCByZXN1bHQgIT0gcmVzdWx0KSByZXR1cm4gJHNpZ24gKiBJbmZpbml0eTtcbiAgcmV0dXJuICRzaWduICogcmVzdWx0O1xufTtcbiIsIi8vIGNhbGwgc29tZXRoaW5nIG9uIGl0ZXJhdG9yIHN0ZXAgd2l0aCBzYWZlIGNsb3Npbmcgb24gZXJyb3JcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlcmF0b3IsIGZuLCB2YWx1ZSwgZW50cmllcykge1xuICB0cnkge1xuICAgIHJldHVybiBlbnRyaWVzID8gZm4oYW5PYmplY3QodmFsdWUpWzBdLCB2YWx1ZVsxXSkgOiBmbih2YWx1ZSk7XG4gIC8vIDcuNC42IEl0ZXJhdG9yQ2xvc2UoaXRlcmF0b3IsIGNvbXBsZXRpb24pXG4gIH0gY2F0Y2ggKGUpIHtcbiAgICB2YXIgcmV0ID0gaXRlcmF0b3JbJ3JldHVybiddO1xuICAgIGlmIChyZXQgIT09IHVuZGVmaW5lZCkgYW5PYmplY3QocmV0LmNhbGwoaXRlcmF0b3IpKTtcbiAgICB0aHJvdyBlO1xuICB9XG59O1xuIiwidmFyIGFGdW5jdGlvbiA9IHJlcXVpcmUoJy4vX2EtZnVuY3Rpb24nKTtcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpO1xudmFyIElPYmplY3QgPSByZXF1aXJlKCcuL19pb2JqZWN0Jyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAodGhhdCwgY2FsbGJhY2tmbiwgYUxlbiwgbWVtbywgaXNSaWdodCkge1xuICBhRnVuY3Rpb24oY2FsbGJhY2tmbik7XG4gIHZhciBPID0gdG9PYmplY3QodGhhdCk7XG4gIHZhciBzZWxmID0gSU9iamVjdChPKTtcbiAgdmFyIGxlbmd0aCA9IHRvTGVuZ3RoKE8ubGVuZ3RoKTtcbiAgdmFyIGluZGV4ID0gaXNSaWdodCA/IGxlbmd0aCAtIDEgOiAwO1xuICB2YXIgaSA9IGlzUmlnaHQgPyAtMSA6IDE7XG4gIGlmIChhTGVuIDwgMikgZm9yICg7Oykge1xuICAgIGlmIChpbmRleCBpbiBzZWxmKSB7XG4gICAgICBtZW1vID0gc2VsZltpbmRleF07XG4gICAgICBpbmRleCArPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICAgIGluZGV4ICs9IGk7XG4gICAgaWYgKGlzUmlnaHQgPyBpbmRleCA8IDAgOiBsZW5ndGggPD0gaW5kZXgpIHtcbiAgICAgIHRocm93IFR5cGVFcnJvcignUmVkdWNlIG9mIGVtcHR5IGFycmF5IHdpdGggbm8gaW5pdGlhbCB2YWx1ZScpO1xuICAgIH1cbiAgfVxuICBmb3IgKDtpc1JpZ2h0ID8gaW5kZXggPj0gMCA6IGxlbmd0aCA+IGluZGV4OyBpbmRleCArPSBpKSBpZiAoaW5kZXggaW4gc2VsZikge1xuICAgIG1lbW8gPSBjYWxsYmFja2ZuKG1lbW8sIHNlbGZbaW5kZXhdLCBpbmRleCwgTyk7XG4gIH1cbiAgcmV0dXJuIG1lbW87XG59O1xuIiwiLy8gMjIuMS4zLjMgQXJyYXkucHJvdG90eXBlLmNvcHlXaXRoaW4odGFyZ2V0LCBzdGFydCwgZW5kID0gdGhpcy5sZW5ndGgpXG4ndXNlIHN0cmljdCc7XG52YXIgdG9PYmplY3QgPSByZXF1aXJlKCcuL190by1vYmplY3QnKTtcbnZhciB0b0Fic29sdXRlSW5kZXggPSByZXF1aXJlKCcuL190by1hYnNvbHV0ZS1pbmRleCcpO1xudmFyIHRvTGVuZ3RoID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gW10uY29weVdpdGhpbiB8fCBmdW5jdGlvbiBjb3B5V2l0aGluKHRhcmdldCAvKiA9IDAgKi8sIHN0YXJ0IC8qID0gMCwgZW5kID0gQGxlbmd0aCAqLykge1xuICB2YXIgTyA9IHRvT2JqZWN0KHRoaXMpO1xuICB2YXIgbGVuID0gdG9MZW5ndGgoTy5sZW5ndGgpO1xuICB2YXIgdG8gPSB0b0Fic29sdXRlSW5kZXgodGFyZ2V0LCBsZW4pO1xuICB2YXIgZnJvbSA9IHRvQWJzb2x1dGVJbmRleChzdGFydCwgbGVuKTtcbiAgdmFyIGVuZCA9IGFyZ3VtZW50cy5sZW5ndGggPiAyID8gYXJndW1lbnRzWzJdIDogdW5kZWZpbmVkO1xuICB2YXIgY291bnQgPSBNYXRoLm1pbigoZW5kID09PSB1bmRlZmluZWQgPyBsZW4gOiB0b0Fic29sdXRlSW5kZXgoZW5kLCBsZW4pKSAtIGZyb20sIGxlbiAtIHRvKTtcbiAgdmFyIGluYyA9IDE7XG4gIGlmIChmcm9tIDwgdG8gJiYgdG8gPCBmcm9tICsgY291bnQpIHtcbiAgICBpbmMgPSAtMTtcbiAgICBmcm9tICs9IGNvdW50IC0gMTtcbiAgICB0byArPSBjb3VudCAtIDE7XG4gIH1cbiAgd2hpbGUgKGNvdW50LS0gPiAwKSB7XG4gICAgaWYgKGZyb20gaW4gTykgT1t0b10gPSBPW2Zyb21dO1xuICAgIGVsc2UgZGVsZXRlIE9bdG9dO1xuICAgIHRvICs9IGluYztcbiAgICBmcm9tICs9IGluYztcbiAgfSByZXR1cm4gTztcbn07XG4iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChkb25lLCB2YWx1ZSkge1xuICByZXR1cm4geyB2YWx1ZTogdmFsdWUsIGRvbmU6ICEhZG9uZSB9O1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciByZWdleHBFeGVjID0gcmVxdWlyZSgnLi9fcmVnZXhwLWV4ZWMnKTtcbnJlcXVpcmUoJy4vX2V4cG9ydCcpKHtcbiAgdGFyZ2V0OiAnUmVnRXhwJyxcbiAgcHJvdG86IHRydWUsXG4gIGZvcmNlZDogcmVnZXhwRXhlYyAhPT0gLy4vLmV4ZWNcbn0sIHtcbiAgZXhlYzogcmVnZXhwRXhlY1xufSk7XG4iLCIvLyAyMS4yLjUuMyBnZXQgUmVnRXhwLnByb3RvdHlwZS5mbGFncygpXG5pZiAocmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKSAmJiAvLi9nLmZsYWdzICE9ICdnJykgcmVxdWlyZSgnLi9fb2JqZWN0LWRwJykuZihSZWdFeHAucHJvdG90eXBlLCAnZmxhZ3MnLCB7XG4gIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgZ2V0OiByZXF1aXJlKCcuL19mbGFncycpXG59KTtcbiIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGV4ZWMpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4geyBlOiBmYWxzZSwgdjogZXhlYygpIH07XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm4geyBlOiB0cnVlLCB2OiBlIH07XG4gIH1cbn07XG4iLCJ2YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIG5ld1Byb21pc2VDYXBhYmlsaXR5ID0gcmVxdWlyZSgnLi9fbmV3LXByb21pc2UtY2FwYWJpbGl0eScpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChDLCB4KSB7XG4gIGFuT2JqZWN0KEMpO1xuICBpZiAoaXNPYmplY3QoeCkgJiYgeC5jb25zdHJ1Y3RvciA9PT0gQykgcmV0dXJuIHg7XG4gIHZhciBwcm9taXNlQ2FwYWJpbGl0eSA9IG5ld1Byb21pc2VDYXBhYmlsaXR5LmYoQyk7XG4gIHZhciByZXNvbHZlID0gcHJvbWlzZUNhcGFiaWxpdHkucmVzb2x2ZTtcbiAgcmVzb2x2ZSh4KTtcbiAgcmV0dXJuIHByb21pc2VDYXBhYmlsaXR5LnByb21pc2U7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIHN0cm9uZyA9IHJlcXVpcmUoJy4vX2NvbGxlY3Rpb24tc3Ryb25nJyk7XG52YXIgdmFsaWRhdGUgPSByZXF1aXJlKCcuL192YWxpZGF0ZS1jb2xsZWN0aW9uJyk7XG52YXIgTUFQID0gJ01hcCc7XG5cbi8vIDIzLjEgTWFwIE9iamVjdHNcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9fY29sbGVjdGlvbicpKE1BUCwgZnVuY3Rpb24gKGdldCkge1xuICByZXR1cm4gZnVuY3Rpb24gTWFwKCkgeyByZXR1cm4gZ2V0KHRoaXMsIGFyZ3VtZW50cy5sZW5ndGggPiAwID8gYXJndW1lbnRzWzBdIDogdW5kZWZpbmVkKTsgfTtcbn0sIHtcbiAgLy8gMjMuMS4zLjYgTWFwLnByb3RvdHlwZS5nZXQoa2V5KVxuICBnZXQ6IGZ1bmN0aW9uIGdldChrZXkpIHtcbiAgICB2YXIgZW50cnkgPSBzdHJvbmcuZ2V0RW50cnkodmFsaWRhdGUodGhpcywgTUFQKSwga2V5KTtcbiAgICByZXR1cm4gZW50cnkgJiYgZW50cnkudjtcbiAgfSxcbiAgLy8gMjMuMS4zLjkgTWFwLnByb3RvdHlwZS5zZXQoa2V5LCB2YWx1ZSlcbiAgc2V0OiBmdW5jdGlvbiBzZXQoa2V5LCB2YWx1ZSkge1xuICAgIHJldHVybiBzdHJvbmcuZGVmKHZhbGlkYXRlKHRoaXMsIE1BUCksIGtleSA9PT0gMCA/IDAgOiBrZXksIHZhbHVlKTtcbiAgfVxufSwgc3Ryb25nLCB0cnVlKTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBkUCA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpLmY7XG52YXIgY3JlYXRlID0gcmVxdWlyZSgnLi9fb2JqZWN0LWNyZWF0ZScpO1xudmFyIHJlZGVmaW5lQWxsID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUtYWxsJyk7XG52YXIgY3R4ID0gcmVxdWlyZSgnLi9fY3R4Jyk7XG52YXIgYW5JbnN0YW5jZSA9IHJlcXVpcmUoJy4vX2FuLWluc3RhbmNlJyk7XG52YXIgZm9yT2YgPSByZXF1aXJlKCcuL19mb3Itb2YnKTtcbnZhciAkaXRlckRlZmluZSA9IHJlcXVpcmUoJy4vX2l0ZXItZGVmaW5lJyk7XG52YXIgc3RlcCA9IHJlcXVpcmUoJy4vX2l0ZXItc3RlcCcpO1xudmFyIHNldFNwZWNpZXMgPSByZXF1aXJlKCcuL19zZXQtc3BlY2llcycpO1xudmFyIERFU0NSSVBUT1JTID0gcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKTtcbnZhciBmYXN0S2V5ID0gcmVxdWlyZSgnLi9fbWV0YScpLmZhc3RLZXk7XG52YXIgdmFsaWRhdGUgPSByZXF1aXJlKCcuL192YWxpZGF0ZS1jb2xsZWN0aW9uJyk7XG52YXIgU0laRSA9IERFU0NSSVBUT1JTID8gJ19zJyA6ICdzaXplJztcblxudmFyIGdldEVudHJ5ID0gZnVuY3Rpb24gKHRoYXQsIGtleSkge1xuICAvLyBmYXN0IGNhc2VcbiAgdmFyIGluZGV4ID0gZmFzdEtleShrZXkpO1xuICB2YXIgZW50cnk7XG4gIGlmIChpbmRleCAhPT0gJ0YnKSByZXR1cm4gdGhhdC5faVtpbmRleF07XG4gIC8vIGZyb3plbiBvYmplY3QgY2FzZVxuICBmb3IgKGVudHJ5ID0gdGhhdC5fZjsgZW50cnk7IGVudHJ5ID0gZW50cnkubikge1xuICAgIGlmIChlbnRyeS5rID09IGtleSkgcmV0dXJuIGVudHJ5O1xuICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgZ2V0Q29uc3RydWN0b3I6IGZ1bmN0aW9uICh3cmFwcGVyLCBOQU1FLCBJU19NQVAsIEFEREVSKSB7XG4gICAgdmFyIEMgPSB3cmFwcGVyKGZ1bmN0aW9uICh0aGF0LCBpdGVyYWJsZSkge1xuICAgICAgYW5JbnN0YW5jZSh0aGF0LCBDLCBOQU1FLCAnX2knKTtcbiAgICAgIHRoYXQuX3QgPSBOQU1FOyAgICAgICAgIC8vIGNvbGxlY3Rpb24gdHlwZVxuICAgICAgdGhhdC5faSA9IGNyZWF0ZShudWxsKTsgLy8gaW5kZXhcbiAgICAgIHRoYXQuX2YgPSB1bmRlZmluZWQ7ICAgIC8vIGZpcnN0IGVudHJ5XG4gICAgICB0aGF0Ll9sID0gdW5kZWZpbmVkOyAgICAvLyBsYXN0IGVudHJ5XG4gICAgICB0aGF0W1NJWkVdID0gMDsgICAgICAgICAvLyBzaXplXG4gICAgICBpZiAoaXRlcmFibGUgIT0gdW5kZWZpbmVkKSBmb3JPZihpdGVyYWJsZSwgSVNfTUFQLCB0aGF0W0FEREVSXSwgdGhhdCk7XG4gICAgfSk7XG4gICAgcmVkZWZpbmVBbGwoQy5wcm90b3R5cGUsIHtcbiAgICAgIC8vIDIzLjEuMy4xIE1hcC5wcm90b3R5cGUuY2xlYXIoKVxuICAgICAgLy8gMjMuMi4zLjIgU2V0LnByb3RvdHlwZS5jbGVhcigpXG4gICAgICBjbGVhcjogZnVuY3Rpb24gY2xlYXIoKSB7XG4gICAgICAgIGZvciAodmFyIHRoYXQgPSB2YWxpZGF0ZSh0aGlzLCBOQU1FKSwgZGF0YSA9IHRoYXQuX2ksIGVudHJ5ID0gdGhhdC5fZjsgZW50cnk7IGVudHJ5ID0gZW50cnkubikge1xuICAgICAgICAgIGVudHJ5LnIgPSB0cnVlO1xuICAgICAgICAgIGlmIChlbnRyeS5wKSBlbnRyeS5wID0gZW50cnkucC5uID0gdW5kZWZpbmVkO1xuICAgICAgICAgIGRlbGV0ZSBkYXRhW2VudHJ5LmldO1xuICAgICAgICB9XG4gICAgICAgIHRoYXQuX2YgPSB0aGF0Ll9sID0gdW5kZWZpbmVkO1xuICAgICAgICB0aGF0W1NJWkVdID0gMDtcbiAgICAgIH0sXG4gICAgICAvLyAyMy4xLjMuMyBNYXAucHJvdG90eXBlLmRlbGV0ZShrZXkpXG4gICAgICAvLyAyMy4yLjMuNCBTZXQucHJvdG90eXBlLmRlbGV0ZSh2YWx1ZSlcbiAgICAgICdkZWxldGUnOiBmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgIHZhciB0aGF0ID0gdmFsaWRhdGUodGhpcywgTkFNRSk7XG4gICAgICAgIHZhciBlbnRyeSA9IGdldEVudHJ5KHRoYXQsIGtleSk7XG4gICAgICAgIGlmIChlbnRyeSkge1xuICAgICAgICAgIHZhciBuZXh0ID0gZW50cnkubjtcbiAgICAgICAgICB2YXIgcHJldiA9IGVudHJ5LnA7XG4gICAgICAgICAgZGVsZXRlIHRoYXQuX2lbZW50cnkuaV07XG4gICAgICAgICAgZW50cnkuciA9IHRydWU7XG4gICAgICAgICAgaWYgKHByZXYpIHByZXYubiA9IG5leHQ7XG4gICAgICAgICAgaWYgKG5leHQpIG5leHQucCA9IHByZXY7XG4gICAgICAgICAgaWYgKHRoYXQuX2YgPT0gZW50cnkpIHRoYXQuX2YgPSBuZXh0O1xuICAgICAgICAgIGlmICh0aGF0Ll9sID09IGVudHJ5KSB0aGF0Ll9sID0gcHJldjtcbiAgICAgICAgICB0aGF0W1NJWkVdLS07XG4gICAgICAgIH0gcmV0dXJuICEhZW50cnk7XG4gICAgICB9LFxuICAgICAgLy8gMjMuMi4zLjYgU2V0LnByb3RvdHlwZS5mb3JFYWNoKGNhbGxiYWNrZm4sIHRoaXNBcmcgPSB1bmRlZmluZWQpXG4gICAgICAvLyAyMy4xLjMuNSBNYXAucHJvdG90eXBlLmZvckVhY2goY2FsbGJhY2tmbiwgdGhpc0FyZyA9IHVuZGVmaW5lZClcbiAgICAgIGZvckVhY2g6IGZ1bmN0aW9uIGZvckVhY2goY2FsbGJhY2tmbiAvKiAsIHRoYXQgPSB1bmRlZmluZWQgKi8pIHtcbiAgICAgICAgdmFsaWRhdGUodGhpcywgTkFNRSk7XG4gICAgICAgIHZhciBmID0gY3R4KGNhbGxiYWNrZm4sIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkLCAzKTtcbiAgICAgICAgdmFyIGVudHJ5O1xuICAgICAgICB3aGlsZSAoZW50cnkgPSBlbnRyeSA/IGVudHJ5Lm4gOiB0aGlzLl9mKSB7XG4gICAgICAgICAgZihlbnRyeS52LCBlbnRyeS5rLCB0aGlzKTtcbiAgICAgICAgICAvLyByZXZlcnQgdG8gdGhlIGxhc3QgZXhpc3RpbmcgZW50cnlcbiAgICAgICAgICB3aGlsZSAoZW50cnkgJiYgZW50cnkucikgZW50cnkgPSBlbnRyeS5wO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgLy8gMjMuMS4zLjcgTWFwLnByb3RvdHlwZS5oYXMoa2V5KVxuICAgICAgLy8gMjMuMi4zLjcgU2V0LnByb3RvdHlwZS5oYXModmFsdWUpXG4gICAgICBoYXM6IGZ1bmN0aW9uIGhhcyhrZXkpIHtcbiAgICAgICAgcmV0dXJuICEhZ2V0RW50cnkodmFsaWRhdGUodGhpcywgTkFNRSksIGtleSk7XG4gICAgICB9XG4gICAgfSk7XG4gICAgaWYgKERFU0NSSVBUT1JTKSBkUChDLnByb3RvdHlwZSwgJ3NpemUnLCB7XG4gICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHZhbGlkYXRlKHRoaXMsIE5BTUUpW1NJWkVdO1xuICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiBDO1xuICB9LFxuICBkZWY6IGZ1bmN0aW9uICh0aGF0LCBrZXksIHZhbHVlKSB7XG4gICAgdmFyIGVudHJ5ID0gZ2V0RW50cnkodGhhdCwga2V5KTtcbiAgICB2YXIgcHJldiwgaW5kZXg7XG4gICAgLy8gY2hhbmdlIGV4aXN0aW5nIGVudHJ5XG4gICAgaWYgKGVudHJ5KSB7XG4gICAgICBlbnRyeS52ID0gdmFsdWU7XG4gICAgLy8gY3JlYXRlIG5ldyBlbnRyeVxuICAgIH0gZWxzZSB7XG4gICAgICB0aGF0Ll9sID0gZW50cnkgPSB7XG4gICAgICAgIGk6IGluZGV4ID0gZmFzdEtleShrZXksIHRydWUpLCAvLyA8LSBpbmRleFxuICAgICAgICBrOiBrZXksICAgICAgICAgICAgICAgICAgICAgICAgLy8gPC0ga2V5XG4gICAgICAgIHY6IHZhbHVlLCAgICAgICAgICAgICAgICAgICAgICAvLyA8LSB2YWx1ZVxuICAgICAgICBwOiBwcmV2ID0gdGhhdC5fbCwgICAgICAgICAgICAgLy8gPC0gcHJldmlvdXMgZW50cnlcbiAgICAgICAgbjogdW5kZWZpbmVkLCAgICAgICAgICAgICAgICAgIC8vIDwtIG5leHQgZW50cnlcbiAgICAgICAgcjogZmFsc2UgICAgICAgICAgICAgICAgICAgICAgIC8vIDwtIHJlbW92ZWRcbiAgICAgIH07XG4gICAgICBpZiAoIXRoYXQuX2YpIHRoYXQuX2YgPSBlbnRyeTtcbiAgICAgIGlmIChwcmV2KSBwcmV2Lm4gPSBlbnRyeTtcbiAgICAgIHRoYXRbU0laRV0rKztcbiAgICAgIC8vIGFkZCB0byBpbmRleFxuICAgICAgaWYgKGluZGV4ICE9PSAnRicpIHRoYXQuX2lbaW5kZXhdID0gZW50cnk7XG4gICAgfSByZXR1cm4gdGhhdDtcbiAgfSxcbiAgZ2V0RW50cnk6IGdldEVudHJ5LFxuICBzZXRTdHJvbmc6IGZ1bmN0aW9uIChDLCBOQU1FLCBJU19NQVApIHtcbiAgICAvLyBhZGQgLmtleXMsIC52YWx1ZXMsIC5lbnRyaWVzLCBbQEBpdGVyYXRvcl1cbiAgICAvLyAyMy4xLjMuNCwgMjMuMS4zLjgsIDIzLjEuMy4xMSwgMjMuMS4zLjEyLCAyMy4yLjMuNSwgMjMuMi4zLjgsIDIzLjIuMy4xMCwgMjMuMi4zLjExXG4gICAgJGl0ZXJEZWZpbmUoQywgTkFNRSwgZnVuY3Rpb24gKGl0ZXJhdGVkLCBraW5kKSB7XG4gICAgICB0aGlzLl90ID0gdmFsaWRhdGUoaXRlcmF0ZWQsIE5BTUUpOyAvLyB0YXJnZXRcbiAgICAgIHRoaXMuX2sgPSBraW5kOyAgICAgICAgICAgICAgICAgICAgIC8vIGtpbmRcbiAgICAgIHRoaXMuX2wgPSB1bmRlZmluZWQ7ICAgICAgICAgICAgICAgIC8vIHByZXZpb3VzXG4gICAgfSwgZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIHRoYXQgPSB0aGlzO1xuICAgICAgdmFyIGtpbmQgPSB0aGF0Ll9rO1xuICAgICAgdmFyIGVudHJ5ID0gdGhhdC5fbDtcbiAgICAgIC8vIHJldmVydCB0byB0aGUgbGFzdCBleGlzdGluZyBlbnRyeVxuICAgICAgd2hpbGUgKGVudHJ5ICYmIGVudHJ5LnIpIGVudHJ5ID0gZW50cnkucDtcbiAgICAgIC8vIGdldCBuZXh0IGVudHJ5XG4gICAgICBpZiAoIXRoYXQuX3QgfHwgISh0aGF0Ll9sID0gZW50cnkgPSBlbnRyeSA/IGVudHJ5Lm4gOiB0aGF0Ll90Ll9mKSkge1xuICAgICAgICAvLyBvciBmaW5pc2ggdGhlIGl0ZXJhdGlvblxuICAgICAgICB0aGF0Ll90ID0gdW5kZWZpbmVkO1xuICAgICAgICByZXR1cm4gc3RlcCgxKTtcbiAgICAgIH1cbiAgICAgIC8vIHJldHVybiBzdGVwIGJ5IGtpbmRcbiAgICAgIGlmIChraW5kID09ICdrZXlzJykgcmV0dXJuIHN0ZXAoMCwgZW50cnkuayk7XG4gICAgICBpZiAoa2luZCA9PSAndmFsdWVzJykgcmV0dXJuIHN0ZXAoMCwgZW50cnkudik7XG4gICAgICByZXR1cm4gc3RlcCgwLCBbZW50cnkuaywgZW50cnkudl0pO1xuICAgIH0sIElTX01BUCA/ICdlbnRyaWVzJyA6ICd2YWx1ZXMnLCAhSVNfTUFQLCB0cnVlKTtcblxuICAgIC8vIGFkZCBbQEBzcGVjaWVzXSwgMjMuMS4yLjIsIDIzLjIuMi4yXG4gICAgc2V0U3BlY2llcyhOQU1FKTtcbiAgfVxufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBzdHJvbmcgPSByZXF1aXJlKCcuL19jb2xsZWN0aW9uLXN0cm9uZycpO1xudmFyIHZhbGlkYXRlID0gcmVxdWlyZSgnLi9fdmFsaWRhdGUtY29sbGVjdGlvbicpO1xudmFyIFNFVCA9ICdTZXQnO1xuXG4vLyAyMy4yIFNldCBPYmplY3RzXG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vX2NvbGxlY3Rpb24nKShTRVQsIGZ1bmN0aW9uIChnZXQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIFNldCgpIHsgcmV0dXJuIGdldCh0aGlzLCBhcmd1bWVudHMubGVuZ3RoID4gMCA/IGFyZ3VtZW50c1swXSA6IHVuZGVmaW5lZCk7IH07XG59LCB7XG4gIC8vIDIzLjIuMy4xIFNldC5wcm90b3R5cGUuYWRkKHZhbHVlKVxuICBhZGQ6IGZ1bmN0aW9uIGFkZCh2YWx1ZSkge1xuICAgIHJldHVybiBzdHJvbmcuZGVmKHZhbGlkYXRlKHRoaXMsIFNFVCksIHZhbHVlID0gdmFsdWUgPT09IDAgPyAwIDogdmFsdWUsIHZhbHVlKTtcbiAgfVxufSwgc3Ryb25nKTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBlYWNoID0gcmVxdWlyZSgnLi9fYXJyYXktbWV0aG9kcycpKDApO1xudmFyIHJlZGVmaW5lID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUnKTtcbnZhciBtZXRhID0gcmVxdWlyZSgnLi9fbWV0YScpO1xudmFyIGFzc2lnbiA9IHJlcXVpcmUoJy4vX29iamVjdC1hc3NpZ24nKTtcbnZhciB3ZWFrID0gcmVxdWlyZSgnLi9fY29sbGVjdGlvbi13ZWFrJyk7XG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciB2YWxpZGF0ZSA9IHJlcXVpcmUoJy4vX3ZhbGlkYXRlLWNvbGxlY3Rpb24nKTtcbnZhciBOQVRJVkVfV0VBS19NQVAgPSByZXF1aXJlKCcuL192YWxpZGF0ZS1jb2xsZWN0aW9uJyk7XG52YXIgSVNfSUUxMSA9ICFnbG9iYWwuQWN0aXZlWE9iamVjdCAmJiAnQWN0aXZlWE9iamVjdCcgaW4gZ2xvYmFsO1xudmFyIFdFQUtfTUFQID0gJ1dlYWtNYXAnO1xudmFyIGdldFdlYWsgPSBtZXRhLmdldFdlYWs7XG52YXIgaXNFeHRlbnNpYmxlID0gT2JqZWN0LmlzRXh0ZW5zaWJsZTtcbnZhciB1bmNhdWdodEZyb3plblN0b3JlID0gd2Vhay51ZnN0b3JlO1xudmFyIEludGVybmFsTWFwO1xuXG52YXIgd3JhcHBlciA9IGZ1bmN0aW9uIChnZXQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIFdlYWtNYXAoKSB7XG4gICAgcmV0dXJuIGdldCh0aGlzLCBhcmd1bWVudHMubGVuZ3RoID4gMCA/IGFyZ3VtZW50c1swXSA6IHVuZGVmaW5lZCk7XG4gIH07XG59O1xuXG52YXIgbWV0aG9kcyA9IHtcbiAgLy8gMjMuMy4zLjMgV2Vha01hcC5wcm90b3R5cGUuZ2V0KGtleSlcbiAgZ2V0OiBmdW5jdGlvbiBnZXQoa2V5KSB7XG4gICAgaWYgKGlzT2JqZWN0KGtleSkpIHtcbiAgICAgIHZhciBkYXRhID0gZ2V0V2VhayhrZXkpO1xuICAgICAgaWYgKGRhdGEgPT09IHRydWUpIHJldHVybiB1bmNhdWdodEZyb3plblN0b3JlKHZhbGlkYXRlKHRoaXMsIFdFQUtfTUFQKSkuZ2V0KGtleSk7XG4gICAgICByZXR1cm4gZGF0YSA/IGRhdGFbdGhpcy5faV0gOiB1bmRlZmluZWQ7XG4gICAgfVxuICB9LFxuICAvLyAyMy4zLjMuNSBXZWFrTWFwLnByb3RvdHlwZS5zZXQoa2V5LCB2YWx1ZSlcbiAgc2V0OiBmdW5jdGlvbiBzZXQoa2V5LCB2YWx1ZSkge1xuICAgIHJldHVybiB3ZWFrLmRlZih2YWxpZGF0ZSh0aGlzLCBXRUFLX01BUCksIGtleSwgdmFsdWUpO1xuICB9XG59O1xuXG4vLyAyMy4zIFdlYWtNYXAgT2JqZWN0c1xudmFyICRXZWFrTWFwID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL19jb2xsZWN0aW9uJykoV0VBS19NQVAsIHdyYXBwZXIsIG1ldGhvZHMsIHdlYWssIHRydWUsIHRydWUpO1xuXG4vLyBJRTExIFdlYWtNYXAgZnJvemVuIGtleXMgZml4XG5pZiAoTkFUSVZFX1dFQUtfTUFQICYmIElTX0lFMTEpIHtcbiAgSW50ZXJuYWxNYXAgPSB3ZWFrLmdldENvbnN0cnVjdG9yKHdyYXBwZXIsIFdFQUtfTUFQKTtcbiAgYXNzaWduKEludGVybmFsTWFwLnByb3RvdHlwZSwgbWV0aG9kcyk7XG4gIG1ldGEuTkVFRCA9IHRydWU7XG4gIGVhY2goWydkZWxldGUnLCAnaGFzJywgJ2dldCcsICdzZXQnXSwgZnVuY3Rpb24gKGtleSkge1xuICAgIHZhciBwcm90byA9ICRXZWFrTWFwLnByb3RvdHlwZTtcbiAgICB2YXIgbWV0aG9kID0gcHJvdG9ba2V5XTtcbiAgICByZWRlZmluZShwcm90bywga2V5LCBmdW5jdGlvbiAoYSwgYikge1xuICAgICAgLy8gc3RvcmUgZnJvemVuIG9iamVjdHMgb24gaW50ZXJuYWwgd2Vha21hcCBzaGltXG4gICAgICBpZiAoaXNPYmplY3QoYSkgJiYgIWlzRXh0ZW5zaWJsZShhKSkge1xuICAgICAgICBpZiAoIXRoaXMuX2YpIHRoaXMuX2YgPSBuZXcgSW50ZXJuYWxNYXAoKTtcbiAgICAgICAgdmFyIHJlc3VsdCA9IHRoaXMuX2Zba2V5XShhLCBiKTtcbiAgICAgICAgcmV0dXJuIGtleSA9PSAnc2V0JyA/IHRoaXMgOiByZXN1bHQ7XG4gICAgICAvLyBzdG9yZSBhbGwgdGhlIHJlc3Qgb24gbmF0aXZlIHdlYWttYXBcbiAgICAgIH0gcmV0dXJuIG1ldGhvZC5jYWxsKHRoaXMsIGEsIGIpO1xuICAgIH0pO1xuICB9KTtcbn1cbiIsIid1c2Ugc3RyaWN0JztcbnZhciByZWRlZmluZUFsbCA9IHJlcXVpcmUoJy4vX3JlZGVmaW5lLWFsbCcpO1xudmFyIGdldFdlYWsgPSByZXF1aXJlKCcuL19tZXRhJykuZ2V0V2VhaztcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgYW5JbnN0YW5jZSA9IHJlcXVpcmUoJy4vX2FuLWluc3RhbmNlJyk7XG52YXIgZm9yT2YgPSByZXF1aXJlKCcuL19mb3Itb2YnKTtcbnZhciBjcmVhdGVBcnJheU1ldGhvZCA9IHJlcXVpcmUoJy4vX2FycmF5LW1ldGhvZHMnKTtcbnZhciAkaGFzID0gcmVxdWlyZSgnLi9faGFzJyk7XG52YXIgdmFsaWRhdGUgPSByZXF1aXJlKCcuL192YWxpZGF0ZS1jb2xsZWN0aW9uJyk7XG52YXIgYXJyYXlGaW5kID0gY3JlYXRlQXJyYXlNZXRob2QoNSk7XG52YXIgYXJyYXlGaW5kSW5kZXggPSBjcmVhdGVBcnJheU1ldGhvZCg2KTtcbnZhciBpZCA9IDA7XG5cbi8vIGZhbGxiYWNrIGZvciB1bmNhdWdodCBmcm96ZW4ga2V5c1xudmFyIHVuY2F1Z2h0RnJvemVuU3RvcmUgPSBmdW5jdGlvbiAodGhhdCkge1xuICByZXR1cm4gdGhhdC5fbCB8fCAodGhhdC5fbCA9IG5ldyBVbmNhdWdodEZyb3plblN0b3JlKCkpO1xufTtcbnZhciBVbmNhdWdodEZyb3plblN0b3JlID0gZnVuY3Rpb24gKCkge1xuICB0aGlzLmEgPSBbXTtcbn07XG52YXIgZmluZFVuY2F1Z2h0RnJvemVuID0gZnVuY3Rpb24gKHN0b3JlLCBrZXkpIHtcbiAgcmV0dXJuIGFycmF5RmluZChzdG9yZS5hLCBmdW5jdGlvbiAoaXQpIHtcbiAgICByZXR1cm4gaXRbMF0gPT09IGtleTtcbiAgfSk7XG59O1xuVW5jYXVnaHRGcm96ZW5TdG9yZS5wcm90b3R5cGUgPSB7XG4gIGdldDogZnVuY3Rpb24gKGtleSkge1xuICAgIHZhciBlbnRyeSA9IGZpbmRVbmNhdWdodEZyb3plbih0aGlzLCBrZXkpO1xuICAgIGlmIChlbnRyeSkgcmV0dXJuIGVudHJ5WzFdO1xuICB9LFxuICBoYXM6IGZ1bmN0aW9uIChrZXkpIHtcbiAgICByZXR1cm4gISFmaW5kVW5jYXVnaHRGcm96ZW4odGhpcywga2V5KTtcbiAgfSxcbiAgc2V0OiBmdW5jdGlvbiAoa2V5LCB2YWx1ZSkge1xuICAgIHZhciBlbnRyeSA9IGZpbmRVbmNhdWdodEZyb3plbih0aGlzLCBrZXkpO1xuICAgIGlmIChlbnRyeSkgZW50cnlbMV0gPSB2YWx1ZTtcbiAgICBlbHNlIHRoaXMuYS5wdXNoKFtrZXksIHZhbHVlXSk7XG4gIH0sXG4gICdkZWxldGUnOiBmdW5jdGlvbiAoa2V5KSB7XG4gICAgdmFyIGluZGV4ID0gYXJyYXlGaW5kSW5kZXgodGhpcy5hLCBmdW5jdGlvbiAoaXQpIHtcbiAgICAgIHJldHVybiBpdFswXSA9PT0ga2V5O1xuICAgIH0pO1xuICAgIGlmICh+aW5kZXgpIHRoaXMuYS5zcGxpY2UoaW5kZXgsIDEpO1xuICAgIHJldHVybiAhIX5pbmRleDtcbiAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGdldENvbnN0cnVjdG9yOiBmdW5jdGlvbiAod3JhcHBlciwgTkFNRSwgSVNfTUFQLCBBRERFUikge1xuICAgIHZhciBDID0gd3JhcHBlcihmdW5jdGlvbiAodGhhdCwgaXRlcmFibGUpIHtcbiAgICAgIGFuSW5zdGFuY2UodGhhdCwgQywgTkFNRSwgJ19pJyk7XG4gICAgICB0aGF0Ll90ID0gTkFNRTsgICAgICAvLyBjb2xsZWN0aW9uIHR5cGVcbiAgICAgIHRoYXQuX2kgPSBpZCsrOyAgICAgIC8vIGNvbGxlY3Rpb24gaWRcbiAgICAgIHRoYXQuX2wgPSB1bmRlZmluZWQ7IC8vIGxlYWsgc3RvcmUgZm9yIHVuY2F1Z2h0IGZyb3plbiBvYmplY3RzXG4gICAgICBpZiAoaXRlcmFibGUgIT0gdW5kZWZpbmVkKSBmb3JPZihpdGVyYWJsZSwgSVNfTUFQLCB0aGF0W0FEREVSXSwgdGhhdCk7XG4gICAgfSk7XG4gICAgcmVkZWZpbmVBbGwoQy5wcm90b3R5cGUsIHtcbiAgICAgIC8vIDIzLjMuMy4yIFdlYWtNYXAucHJvdG90eXBlLmRlbGV0ZShrZXkpXG4gICAgICAvLyAyMy40LjMuMyBXZWFrU2V0LnByb3RvdHlwZS5kZWxldGUodmFsdWUpXG4gICAgICAnZGVsZXRlJzogZnVuY3Rpb24gKGtleSkge1xuICAgICAgICBpZiAoIWlzT2JqZWN0KGtleSkpIHJldHVybiBmYWxzZTtcbiAgICAgICAgdmFyIGRhdGEgPSBnZXRXZWFrKGtleSk7XG4gICAgICAgIGlmIChkYXRhID09PSB0cnVlKSByZXR1cm4gdW5jYXVnaHRGcm96ZW5TdG9yZSh2YWxpZGF0ZSh0aGlzLCBOQU1FKSlbJ2RlbGV0ZSddKGtleSk7XG4gICAgICAgIHJldHVybiBkYXRhICYmICRoYXMoZGF0YSwgdGhpcy5faSkgJiYgZGVsZXRlIGRhdGFbdGhpcy5faV07XG4gICAgICB9LFxuICAgICAgLy8gMjMuMy4zLjQgV2Vha01hcC5wcm90b3R5cGUuaGFzKGtleSlcbiAgICAgIC8vIDIzLjQuMy40IFdlYWtTZXQucHJvdG90eXBlLmhhcyh2YWx1ZSlcbiAgICAgIGhhczogZnVuY3Rpb24gaGFzKGtleSkge1xuICAgICAgICBpZiAoIWlzT2JqZWN0KGtleSkpIHJldHVybiBmYWxzZTtcbiAgICAgICAgdmFyIGRhdGEgPSBnZXRXZWFrKGtleSk7XG4gICAgICAgIGlmIChkYXRhID09PSB0cnVlKSByZXR1cm4gdW5jYXVnaHRGcm96ZW5TdG9yZSh2YWxpZGF0ZSh0aGlzLCBOQU1FKSkuaGFzKGtleSk7XG4gICAgICAgIHJldHVybiBkYXRhICYmICRoYXMoZGF0YSwgdGhpcy5faSk7XG4gICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIEM7XG4gIH0sXG4gIGRlZjogZnVuY3Rpb24gKHRoYXQsIGtleSwgdmFsdWUpIHtcbiAgICB2YXIgZGF0YSA9IGdldFdlYWsoYW5PYmplY3Qoa2V5KSwgdHJ1ZSk7XG4gICAgaWYgKGRhdGEgPT09IHRydWUpIHVuY2F1Z2h0RnJvemVuU3RvcmUodGhhdCkuc2V0KGtleSwgdmFsdWUpO1xuICAgIGVsc2UgZGF0YVt0aGF0Ll9pXSA9IHZhbHVlO1xuICAgIHJldHVybiB0aGF0O1xuICB9LFxuICB1ZnN0b3JlOiB1bmNhdWdodEZyb3plblN0b3JlXG59O1xuIiwiLy8gaHR0cHM6Ly90YzM5LmdpdGh1Yi5pby9lY21hMjYyLyNzZWMtdG9pbmRleFxudmFyIHRvSW50ZWdlciA9IHJlcXVpcmUoJy4vX3RvLWludGVnZXInKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgaWYgKGl0ID09PSB1bmRlZmluZWQpIHJldHVybiAwO1xuICB2YXIgbnVtYmVyID0gdG9JbnRlZ2VyKGl0KTtcbiAgdmFyIGxlbmd0aCA9IHRvTGVuZ3RoKG51bWJlcik7XG4gIGlmIChudW1iZXIgIT09IGxlbmd0aCkgdGhyb3cgUmFuZ2VFcnJvcignV3JvbmcgbGVuZ3RoIScpO1xuICByZXR1cm4gbGVuZ3RoO1xufTtcbiIsIi8vIGFsbCBvYmplY3Qga2V5cywgaW5jbHVkZXMgbm9uLWVudW1lcmFibGUgYW5kIHN5bWJvbHNcbnZhciBnT1BOID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcG4nKTtcbnZhciBnT1BTID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcHMnKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIFJlZmxlY3QgPSByZXF1aXJlKCcuL19nbG9iYWwnKS5SZWZsZWN0O1xubW9kdWxlLmV4cG9ydHMgPSBSZWZsZWN0ICYmIFJlZmxlY3Qub3duS2V5cyB8fCBmdW5jdGlvbiBvd25LZXlzKGl0KSB7XG4gIHZhciBrZXlzID0gZ09QTi5mKGFuT2JqZWN0KGl0KSk7XG4gIHZhciBnZXRTeW1ib2xzID0gZ09QUy5mO1xuICByZXR1cm4gZ2V0U3ltYm9scyA/IGtleXMuY29uY2F0KGdldFN5bWJvbHMoaXQpKSA6IGtleXM7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gaHR0cHM6Ly90YzM5LmdpdGh1Yi5pby9wcm9wb3NhbC1mbGF0TWFwLyNzZWMtRmxhdHRlbkludG9BcnJheVxudmFyIGlzQXJyYXkgPSByZXF1aXJlKCcuL19pcy1hcnJheScpO1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcbnZhciBjdHggPSByZXF1aXJlKCcuL19jdHgnKTtcbnZhciBJU19DT05DQVRfU1BSRUFEQUJMRSA9IHJlcXVpcmUoJy4vX3drcycpKCdpc0NvbmNhdFNwcmVhZGFibGUnKTtcblxuZnVuY3Rpb24gZmxhdHRlbkludG9BcnJheSh0YXJnZXQsIG9yaWdpbmFsLCBzb3VyY2UsIHNvdXJjZUxlbiwgc3RhcnQsIGRlcHRoLCBtYXBwZXIsIHRoaXNBcmcpIHtcbiAgdmFyIHRhcmdldEluZGV4ID0gc3RhcnQ7XG4gIHZhciBzb3VyY2VJbmRleCA9IDA7XG4gIHZhciBtYXBGbiA9IG1hcHBlciA/IGN0eChtYXBwZXIsIHRoaXNBcmcsIDMpIDogZmFsc2U7XG4gIHZhciBlbGVtZW50LCBzcHJlYWRhYmxlO1xuXG4gIHdoaWxlIChzb3VyY2VJbmRleCA8IHNvdXJjZUxlbikge1xuICAgIGlmIChzb3VyY2VJbmRleCBpbiBzb3VyY2UpIHtcbiAgICAgIGVsZW1lbnQgPSBtYXBGbiA/IG1hcEZuKHNvdXJjZVtzb3VyY2VJbmRleF0sIHNvdXJjZUluZGV4LCBvcmlnaW5hbCkgOiBzb3VyY2Vbc291cmNlSW5kZXhdO1xuXG4gICAgICBzcHJlYWRhYmxlID0gZmFsc2U7XG4gICAgICBpZiAoaXNPYmplY3QoZWxlbWVudCkpIHtcbiAgICAgICAgc3ByZWFkYWJsZSA9IGVsZW1lbnRbSVNfQ09OQ0FUX1NQUkVBREFCTEVdO1xuICAgICAgICBzcHJlYWRhYmxlID0gc3ByZWFkYWJsZSAhPT0gdW5kZWZpbmVkID8gISFzcHJlYWRhYmxlIDogaXNBcnJheShlbGVtZW50KTtcbiAgICAgIH1cblxuICAgICAgaWYgKHNwcmVhZGFibGUgJiYgZGVwdGggPiAwKSB7XG4gICAgICAgIHRhcmdldEluZGV4ID0gZmxhdHRlbkludG9BcnJheSh0YXJnZXQsIG9yaWdpbmFsLCBlbGVtZW50LCB0b0xlbmd0aChlbGVtZW50Lmxlbmd0aCksIHRhcmdldEluZGV4LCBkZXB0aCAtIDEpIC0gMTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmICh0YXJnZXRJbmRleCA+PSAweDFmZmZmZmZmZmZmZmZmKSB0aHJvdyBUeXBlRXJyb3IoKTtcbiAgICAgICAgdGFyZ2V0W3RhcmdldEluZGV4XSA9IGVsZW1lbnQ7XG4gICAgICB9XG5cbiAgICAgIHRhcmdldEluZGV4Kys7XG4gICAgfVxuICAgIHNvdXJjZUluZGV4Kys7XG4gIH1cbiAgcmV0dXJuIHRhcmdldEluZGV4O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZsYXR0ZW5JbnRvQXJyYXk7XG4iLCIvLyBodHRwczovL2dpdGh1Yi5jb20vdGMzOS9wcm9wb3NhbC1zdHJpbmctcGFkLXN0YXJ0LWVuZFxudmFyIHRvTGVuZ3RoID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJyk7XG52YXIgcmVwZWF0ID0gcmVxdWlyZSgnLi9fc3RyaW5nLXJlcGVhdCcpO1xudmFyIGRlZmluZWQgPSByZXF1aXJlKCcuL19kZWZpbmVkJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHRoYXQsIG1heExlbmd0aCwgZmlsbFN0cmluZywgbGVmdCkge1xuICB2YXIgUyA9IFN0cmluZyhkZWZpbmVkKHRoYXQpKTtcbiAgdmFyIHN0cmluZ0xlbmd0aCA9IFMubGVuZ3RoO1xuICB2YXIgZmlsbFN0ciA9IGZpbGxTdHJpbmcgPT09IHVuZGVmaW5lZCA/ICcgJyA6IFN0cmluZyhmaWxsU3RyaW5nKTtcbiAgdmFyIGludE1heExlbmd0aCA9IHRvTGVuZ3RoKG1heExlbmd0aCk7XG4gIGlmIChpbnRNYXhMZW5ndGggPD0gc3RyaW5nTGVuZ3RoIHx8IGZpbGxTdHIgPT0gJycpIHJldHVybiBTO1xuICB2YXIgZmlsbExlbiA9IGludE1heExlbmd0aCAtIHN0cmluZ0xlbmd0aDtcbiAgdmFyIHN0cmluZ0ZpbGxlciA9IHJlcGVhdC5jYWxsKGZpbGxTdHIsIE1hdGguY2VpbChmaWxsTGVuIC8gZmlsbFN0ci5sZW5ndGgpKTtcbiAgaWYgKHN0cmluZ0ZpbGxlci5sZW5ndGggPiBmaWxsTGVuKSBzdHJpbmdGaWxsZXIgPSBzdHJpbmdGaWxsZXIuc2xpY2UoMCwgZmlsbExlbik7XG4gIHJldHVybiBsZWZ0ID8gc3RyaW5nRmlsbGVyICsgUyA6IFMgKyBzdHJpbmdGaWxsZXI7XG59O1xuIiwidmFyIERFU0NSSVBUT1JTID0gcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKTtcbnZhciBnZXRLZXlzID0gcmVxdWlyZSgnLi9fb2JqZWN0LWtleXMnKTtcbnZhciB0b0lPYmplY3QgPSByZXF1aXJlKCcuL190by1pb2JqZWN0Jyk7XG52YXIgaXNFbnVtID0gcmVxdWlyZSgnLi9fb2JqZWN0LXBpZScpLmY7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpc0VudHJpZXMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIChpdCkge1xuICAgIHZhciBPID0gdG9JT2JqZWN0KGl0KTtcbiAgICB2YXIga2V5cyA9IGdldEtleXMoTyk7XG4gICAgdmFyIGxlbmd0aCA9IGtleXMubGVuZ3RoO1xuICAgIHZhciBpID0gMDtcbiAgICB2YXIgcmVzdWx0ID0gW107XG4gICAgdmFyIGtleTtcbiAgICB3aGlsZSAobGVuZ3RoID4gaSkge1xuICAgICAga2V5ID0ga2V5c1tpKytdO1xuICAgICAgaWYgKCFERVNDUklQVE9SUyB8fCBpc0VudW0uY2FsbChPLCBrZXkpKSB7XG4gICAgICAgIHJlc3VsdC5wdXNoKGlzRW50cmllcyA/IFtrZXksIE9ba2V5XV0gOiBPW2tleV0pO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xuICB9O1xufTtcbiIsIi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9EYXZpZEJydWFudC9NYXAtU2V0LnByb3RvdHlwZS50b0pTT05cbnZhciBjbGFzc29mID0gcmVxdWlyZSgnLi9fY2xhc3NvZicpO1xudmFyIGZyb20gPSByZXF1aXJlKCcuL19hcnJheS1mcm9tLWl0ZXJhYmxlJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChOQU1FKSB7XG4gIHJldHVybiBmdW5jdGlvbiB0b0pTT04oKSB7XG4gICAgaWYgKGNsYXNzb2YodGhpcykgIT0gTkFNRSkgdGhyb3cgVHlwZUVycm9yKE5BTUUgKyBcIiN0b0pTT04gaXNuJ3QgZ2VuZXJpY1wiKTtcbiAgICByZXR1cm4gZnJvbSh0aGlzKTtcbiAgfTtcbn07XG4iLCJ2YXIgZm9yT2YgPSByZXF1aXJlKCcuL19mb3Itb2YnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlciwgSVRFUkFUT1IpIHtcbiAgdmFyIHJlc3VsdCA9IFtdO1xuICBmb3JPZihpdGVyLCBmYWxzZSwgcmVzdWx0LnB1c2gsIHJlc3VsdCwgSVRFUkFUT1IpO1xuICByZXR1cm4gcmVzdWx0O1xufTtcbiIsIi8vIGh0dHBzOi8vcndhbGRyb24uZ2l0aHViLmlvL3Byb3Bvc2FsLW1hdGgtZXh0ZW5zaW9ucy9cbm1vZHVsZS5leHBvcnRzID0gTWF0aC5zY2FsZSB8fCBmdW5jdGlvbiBzY2FsZSh4LCBpbkxvdywgaW5IaWdoLCBvdXRMb3csIG91dEhpZ2gpIHtcbiAgaWYgKFxuICAgIGFyZ3VtZW50cy5sZW5ndGggPT09IDBcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1zZWxmLWNvbXBhcmVcbiAgICAgIHx8IHggIT0geFxuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXNlbGYtY29tcGFyZVxuICAgICAgfHwgaW5Mb3cgIT0gaW5Mb3dcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1zZWxmLWNvbXBhcmVcbiAgICAgIHx8IGluSGlnaCAhPSBpbkhpZ2hcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1zZWxmLWNvbXBhcmVcbiAgICAgIHx8IG91dExvdyAhPSBvdXRMb3dcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1zZWxmLWNvbXBhcmVcbiAgICAgIHx8IG91dEhpZ2ggIT0gb3V0SGlnaFxuICApIHJldHVybiBOYU47XG4gIGlmICh4ID09PSBJbmZpbml0eSB8fCB4ID09PSAtSW5maW5pdHkpIHJldHVybiB4O1xuICByZXR1cm4gKHggLSBpbkxvdykgKiAob3V0SGlnaCAtIG91dExvdykgLyAoaW5IaWdoIC0gaW5Mb3cpICsgb3V0TG93O1xufTtcbiIsIi8qXG5vYmplY3QtYXNzaWduXG4oYykgU2luZHJlIFNvcmh1c1xuQGxpY2Vuc2UgTUlUXG4qL1xuXG4ndXNlIHN0cmljdCc7XG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqL1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgaGFzT3duUHJvcGVydHkgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xudmFyIHByb3BJc0VudW1lcmFibGUgPSBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlO1xuXG5mdW5jdGlvbiB0b09iamVjdCh2YWwpIHtcblx0aWYgKHZhbCA9PT0gbnVsbCB8fCB2YWwgPT09IHVuZGVmaW5lZCkge1xuXHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ09iamVjdC5hc3NpZ24gY2Fubm90IGJlIGNhbGxlZCB3aXRoIG51bGwgb3IgdW5kZWZpbmVkJyk7XG5cdH1cblxuXHRyZXR1cm4gT2JqZWN0KHZhbCk7XG59XG5cbmZ1bmN0aW9uIHNob3VsZFVzZU5hdGl2ZSgpIHtcblx0dHJ5IHtcblx0XHRpZiAoIU9iamVjdC5hc3NpZ24pIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBEZXRlY3QgYnVnZ3kgcHJvcGVydHkgZW51bWVyYXRpb24gb3JkZXIgaW4gb2xkZXIgVjggdmVyc2lvbnMuXG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD00MTE4XG5cdFx0dmFyIHRlc3QxID0gbmV3IFN0cmluZygnYWJjJyk7ICAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ldy13cmFwcGVyc1xuXHRcdHRlc3QxWzVdID0gJ2RlJztcblx0XHRpZiAoT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDEpWzBdID09PSAnNScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QyID0ge307XG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCAxMDsgaSsrKSB7XG5cdFx0XHR0ZXN0MlsnXycgKyBTdHJpbmcuZnJvbUNoYXJDb2RlKGkpXSA9IGk7XG5cdFx0fVxuXHRcdHZhciBvcmRlcjIgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MikubWFwKGZ1bmN0aW9uIChuKSB7XG5cdFx0XHRyZXR1cm4gdGVzdDJbbl07XG5cdFx0fSk7XG5cdFx0aWYgKG9yZGVyMi5qb2luKCcnKSAhPT0gJzAxMjM0NTY3ODknKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MyA9IHt9O1xuXHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcuc3BsaXQoJycpLmZvckVhY2goZnVuY3Rpb24gKGxldHRlcikge1xuXHRcdFx0dGVzdDNbbGV0dGVyXSA9IGxldHRlcjtcblx0XHR9KTtcblx0XHRpZiAoT2JqZWN0LmtleXMoT2JqZWN0LmFzc2lnbih7fSwgdGVzdDMpKS5qb2luKCcnKSAhPT1cblx0XHRcdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdHJldHVybiB0cnVlO1xuXHR9IGNhdGNoIChlcnIpIHtcblx0XHQvLyBXZSBkb24ndCBleHBlY3QgYW55IG9mIHRoZSBhYm92ZSB0byB0aHJvdywgYnV0IGJldHRlciB0byBiZSBzYWZlLlxuXHRcdHJldHVybiBmYWxzZTtcblx0fVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNob3VsZFVzZU5hdGl2ZSgpID8gT2JqZWN0LmFzc2lnbiA6IGZ1bmN0aW9uICh0YXJnZXQsIHNvdXJjZSkge1xuXHR2YXIgZnJvbTtcblx0dmFyIHRvID0gdG9PYmplY3QodGFyZ2V0KTtcblx0dmFyIHN5bWJvbHM7XG5cblx0Zm9yICh2YXIgcyA9IDE7IHMgPCBhcmd1bWVudHMubGVuZ3RoOyBzKyspIHtcblx0XHRmcm9tID0gT2JqZWN0KGFyZ3VtZW50c1tzXSk7XG5cblx0XHRmb3IgKHZhciBrZXkgaW4gZnJvbSkge1xuXHRcdFx0aWYgKGhhc093blByb3BlcnR5LmNhbGwoZnJvbSwga2V5KSkge1xuXHRcdFx0XHR0b1trZXldID0gZnJvbVtrZXldO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmIChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcblx0XHRcdHN5bWJvbHMgPSBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZnJvbSk7XG5cdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHN5bWJvbHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdFx0aWYgKHByb3BJc0VudW1lcmFibGUuY2FsbChmcm9tLCBzeW1ib2xzW2ldKSkge1xuXHRcdFx0XHRcdHRvW3N5bWJvbHNbaV1dID0gZnJvbVtzeW1ib2xzW2ldXTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiB0bztcbn07XG4iLCJcInVzZSBzdHJpY3RcIjtcblxucmVxdWlyZShcImNvcmUtanMvc2hpbVwiKTtcblxucmVxdWlyZShcInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZVwiKTtcblxucmVxdWlyZShcImNvcmUtanMvZm4vcmVnZXhwL2VzY2FwZVwiKTtcblxuaWYgKGdsb2JhbC5fYmFiZWxQb2x5ZmlsbCkge1xuICB0aHJvdyBuZXcgRXJyb3IoXCJvbmx5IG9uZSBpbnN0YW5jZSBvZiBiYWJlbC1wb2x5ZmlsbCBpcyBhbGxvd2VkXCIpO1xufVxuZ2xvYmFsLl9iYWJlbFBvbHlmaWxsID0gdHJ1ZTtcblxudmFyIERFRklORV9QUk9QRVJUWSA9IFwiZGVmaW5lUHJvcGVydHlcIjtcbmZ1bmN0aW9uIGRlZmluZShPLCBrZXksIHZhbHVlKSB7XG4gIE9ba2V5XSB8fCBPYmplY3RbREVGSU5FX1BST1BFUlRZXShPLCBrZXksIHtcbiAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgdmFsdWU6IHZhbHVlXG4gIH0pO1xufVxuXG5kZWZpbmUoU3RyaW5nLnByb3RvdHlwZSwgXCJwYWRMZWZ0XCIsIFwiXCIucGFkU3RhcnQpO1xuZGVmaW5lKFN0cmluZy5wcm90b3R5cGUsIFwicGFkUmlnaHRcIiwgXCJcIi5wYWRFbmQpO1xuXG5cInBvcCxyZXZlcnNlLHNoaWZ0LGtleXMsdmFsdWVzLGVudHJpZXMsaW5kZXhPZixldmVyeSxzb21lLGZvckVhY2gsbWFwLGZpbHRlcixmaW5kLGZpbmRJbmRleCxpbmNsdWRlcyxqb2luLHNsaWNlLGNvbmNhdCxwdXNoLHNwbGljZSx1bnNoaWZ0LHNvcnQsbGFzdEluZGV4T2YscmVkdWNlLHJlZHVjZVJpZ2h0LGNvcHlXaXRoaW4sZmlsbFwiLnNwbGl0KFwiLFwiKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgW11ba2V5XSAmJiBkZWZpbmUoQXJyYXksIGtleSwgRnVuY3Rpb24uY2FsbC5iaW5kKFtdW2tleV0pKTtcbn0pOyIsInJlcXVpcmUoJy4vbW9kdWxlcy9lczYuc3ltYm9sJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm9iamVjdC5jcmVhdGUnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYub2JqZWN0LmRlZmluZS1wcm9wZXJ0eScpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5vYmplY3QuZGVmaW5lLXByb3BlcnRpZXMnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYub2JqZWN0LmdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvcicpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5vYmplY3QuZ2V0LXByb3RvdHlwZS1vZicpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5vYmplY3Qua2V5cycpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1uYW1lcycpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5vYmplY3QuZnJlZXplJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm9iamVjdC5zZWFsJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm9iamVjdC5wcmV2ZW50LWV4dGVuc2lvbnMnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYub2JqZWN0LmlzLWZyb3plbicpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5vYmplY3QuaXMtc2VhbGVkJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm9iamVjdC5pcy1leHRlbnNpYmxlJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm9iamVjdC5hc3NpZ24nKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYub2JqZWN0LmlzJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm9iamVjdC5zZXQtcHJvdG90eXBlLW9mJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm9iamVjdC50by1zdHJpbmcnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuZnVuY3Rpb24uYmluZCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5mdW5jdGlvbi5uYW1lJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LmZ1bmN0aW9uLmhhcy1pbnN0YW5jZScpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5wYXJzZS1pbnQnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYucGFyc2UtZmxvYXQnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYubnVtYmVyLmNvbnN0cnVjdG9yJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm51bWJlci50by1maXhlZCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5udW1iZXIudG8tcHJlY2lzaW9uJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm51bWJlci5lcHNpbG9uJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm51bWJlci5pcy1maW5pdGUnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYubnVtYmVyLmlzLWludGVnZXInKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYubnVtYmVyLmlzLW5hbicpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5udW1iZXIuaXMtc2FmZS1pbnRlZ2VyJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm51bWJlci5tYXgtc2FmZS1pbnRlZ2VyJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm51bWJlci5taW4tc2FmZS1pbnRlZ2VyJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm51bWJlci5wYXJzZS1mbG9hdCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5udW1iZXIucGFyc2UtaW50Jyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm1hdGguYWNvc2gnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYubWF0aC5hc2luaCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5tYXRoLmF0YW5oJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm1hdGguY2JydCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5tYXRoLmNsejMyJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm1hdGguY29zaCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5tYXRoLmV4cG0xJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm1hdGguZnJvdW5kJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm1hdGguaHlwb3QnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYubWF0aC5pbXVsJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm1hdGgubG9nMTAnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYubWF0aC5sb2cxcCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5tYXRoLmxvZzInKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYubWF0aC5zaWduJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm1hdGguc2luaCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5tYXRoLnRhbmgnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYubWF0aC50cnVuYycpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5zdHJpbmcuZnJvbS1jb2RlLXBvaW50Jyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnN0cmluZy5yYXcnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuc3RyaW5nLnRyaW0nKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuc3RyaW5nLml0ZXJhdG9yJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnN0cmluZy5jb2RlLXBvaW50LWF0Jyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnN0cmluZy5lbmRzLXdpdGgnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuc3RyaW5nLmluY2x1ZGVzJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnN0cmluZy5yZXBlYXQnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuc3RyaW5nLnN0YXJ0cy13aXRoJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnN0cmluZy5hbmNob3InKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuc3RyaW5nLmJpZycpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5zdHJpbmcuYmxpbmsnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuc3RyaW5nLmJvbGQnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuc3RyaW5nLmZpeGVkJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnN0cmluZy5mb250Y29sb3InKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuc3RyaW5nLmZvbnRzaXplJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnN0cmluZy5pdGFsaWNzJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnN0cmluZy5saW5rJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnN0cmluZy5zbWFsbCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5zdHJpbmcuc3RyaWtlJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnN0cmluZy5zdWInKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuc3RyaW5nLnN1cCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5kYXRlLm5vdycpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5kYXRlLnRvLWpzb24nKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuZGF0ZS50by1pc28tc3RyaW5nJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LmRhdGUudG8tc3RyaW5nJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LmRhdGUudG8tcHJpbWl0aXZlJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LmFycmF5LmlzLWFycmF5Jyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LmFycmF5LmZyb20nKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuYXJyYXkub2YnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuYXJyYXkuam9pbicpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5hcnJheS5zbGljZScpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5hcnJheS5zb3J0Jyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LmFycmF5LmZvci1lYWNoJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LmFycmF5Lm1hcCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5hcnJheS5maWx0ZXInKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuYXJyYXkuc29tZScpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5hcnJheS5ldmVyeScpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5hcnJheS5yZWR1Y2UnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuYXJyYXkucmVkdWNlLXJpZ2h0Jyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LmFycmF5LmluZGV4LW9mJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LmFycmF5Lmxhc3QtaW5kZXgtb2YnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuYXJyYXkuY29weS13aXRoaW4nKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuYXJyYXkuZmlsbCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5hcnJheS5maW5kJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LmFycmF5LmZpbmQtaW5kZXgnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuYXJyYXkuc3BlY2llcycpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5hcnJheS5pdGVyYXRvcicpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5yZWdleHAuY29uc3RydWN0b3InKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYucmVnZXhwLmV4ZWMnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYucmVnZXhwLnRvLXN0cmluZycpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5yZWdleHAuZmxhZ3MnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYucmVnZXhwLm1hdGNoJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnJlZ2V4cC5yZXBsYWNlJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnJlZ2V4cC5zZWFyY2gnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYucmVnZXhwLnNwbGl0Jyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnByb21pc2UnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYubWFwJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnNldCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi53ZWFrLW1hcCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi53ZWFrLXNldCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi50eXBlZC5hcnJheS1idWZmZXInKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYudHlwZWQuZGF0YS12aWV3Jyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnR5cGVkLmludDgtYXJyYXknKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYudHlwZWQudWludDgtYXJyYXknKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYudHlwZWQudWludDgtY2xhbXBlZC1hcnJheScpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi50eXBlZC5pbnQxNi1hcnJheScpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi50eXBlZC51aW50MTYtYXJyYXknKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYudHlwZWQuaW50MzItYXJyYXknKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYudHlwZWQudWludDMyLWFycmF5Jyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnR5cGVkLmZsb2F0MzItYXJyYXknKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYudHlwZWQuZmxvYXQ2NC1hcnJheScpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5yZWZsZWN0LmFwcGx5Jyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnJlZmxlY3QuY29uc3RydWN0Jyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnJlZmxlY3QuZGVmaW5lLXByb3BlcnR5Jyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnJlZmxlY3QuZGVsZXRlLXByb3BlcnR5Jyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnJlZmxlY3QuZW51bWVyYXRlJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnJlZmxlY3QuZ2V0Jyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnJlZmxlY3QuZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9yJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnJlZmxlY3QuZ2V0LXByb3RvdHlwZS1vZicpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5yZWZsZWN0LmhhcycpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5yZWZsZWN0LmlzLWV4dGVuc2libGUnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYucmVmbGVjdC5vd24ta2V5cycpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5yZWZsZWN0LnByZXZlbnQtZXh0ZW5zaW9ucycpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5yZWZsZWN0LnNldCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5yZWZsZWN0LnNldC1wcm90b3R5cGUtb2YnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczcuYXJyYXkuaW5jbHVkZXMnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczcuYXJyYXkuZmxhdC1tYXAnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczcuYXJyYXkuZmxhdHRlbicpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5zdHJpbmcuYXQnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczcuc3RyaW5nLnBhZC1zdGFydCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5zdHJpbmcucGFkLWVuZCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5zdHJpbmcudHJpbS1sZWZ0Jyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM3LnN0cmluZy50cmltLXJpZ2h0Jyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM3LnN0cmluZy5tYXRjaC1hbGwnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczcuc3ltYm9sLmFzeW5jLWl0ZXJhdG9yJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM3LnN5bWJvbC5vYnNlcnZhYmxlJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM3Lm9iamVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3JzJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM3Lm9iamVjdC52YWx1ZXMnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczcub2JqZWN0LmVudHJpZXMnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczcub2JqZWN0LmRlZmluZS1nZXR0ZXInKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczcub2JqZWN0LmRlZmluZS1zZXR0ZXInKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczcub2JqZWN0Lmxvb2t1cC1nZXR0ZXInKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczcub2JqZWN0Lmxvb2t1cC1zZXR0ZXInKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczcubWFwLnRvLWpzb24nKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczcuc2V0LnRvLWpzb24nKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczcubWFwLm9mJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM3LnNldC5vZicpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNy53ZWFrLW1hcC5vZicpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNy53ZWFrLXNldC5vZicpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5tYXAuZnJvbScpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5zZXQuZnJvbScpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNy53ZWFrLW1hcC5mcm9tJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM3LndlYWstc2V0LmZyb20nKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczcuZ2xvYmFsJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM3LnN5c3RlbS5nbG9iYWwnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczcuZXJyb3IuaXMtZXJyb3InKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczcubWF0aC5jbGFtcCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5tYXRoLmRlZy1wZXItcmFkJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM3Lm1hdGguZGVncmVlcycpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5tYXRoLmZzY2FsZScpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5tYXRoLmlhZGRoJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM3Lm1hdGguaXN1YmgnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczcubWF0aC5pbXVsaCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5tYXRoLnJhZC1wZXItZGVnJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM3Lm1hdGgucmFkaWFucycpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5tYXRoLnNjYWxlJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM3Lm1hdGgudW11bGgnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczcubWF0aC5zaWduYml0Jyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM3LnByb21pc2UuZmluYWxseScpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5wcm9taXNlLnRyeScpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5yZWZsZWN0LmRlZmluZS1tZXRhZGF0YScpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5yZWZsZWN0LmRlbGV0ZS1tZXRhZGF0YScpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5yZWZsZWN0LmdldC1tZXRhZGF0YScpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5yZWZsZWN0LmdldC1tZXRhZGF0YS1rZXlzJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM3LnJlZmxlY3QuZ2V0LW93bi1tZXRhZGF0YScpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5yZWZsZWN0LmdldC1vd24tbWV0YWRhdGEta2V5cycpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5yZWZsZWN0Lmhhcy1tZXRhZGF0YScpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5yZWZsZWN0Lmhhcy1vd24tbWV0YWRhdGEnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczcucmVmbGVjdC5tZXRhZGF0YScpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5hc2FwJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM3Lm9ic2VydmFibGUnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy93ZWIudGltZXJzJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvd2ViLmltbWVkaWF0ZScpO1xucmVxdWlyZSgnLi9tb2R1bGVzL3dlYi5kb20uaXRlcmFibGUnKTtcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9tb2R1bGVzL19jb3JlJyk7XG4iLCIndXNlIHN0cmljdCc7XG4vLyBFQ01BU2NyaXB0IDYgc3ltYm9scyBzaGltXG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgaGFzID0gcmVxdWlyZSgnLi9faGFzJyk7XG52YXIgREVTQ1JJUFRPUlMgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciByZWRlZmluZSA9IHJlcXVpcmUoJy4vX3JlZGVmaW5lJyk7XG52YXIgTUVUQSA9IHJlcXVpcmUoJy4vX21ldGEnKS5LRVk7XG52YXIgJGZhaWxzID0gcmVxdWlyZSgnLi9fZmFpbHMnKTtcbnZhciBzaGFyZWQgPSByZXF1aXJlKCcuL19zaGFyZWQnKTtcbnZhciBzZXRUb1N0cmluZ1RhZyA9IHJlcXVpcmUoJy4vX3NldC10by1zdHJpbmctdGFnJyk7XG52YXIgdWlkID0gcmVxdWlyZSgnLi9fdWlkJyk7XG52YXIgd2tzID0gcmVxdWlyZSgnLi9fd2tzJyk7XG52YXIgd2tzRXh0ID0gcmVxdWlyZSgnLi9fd2tzLWV4dCcpO1xudmFyIHdrc0RlZmluZSA9IHJlcXVpcmUoJy4vX3drcy1kZWZpbmUnKTtcbnZhciBlbnVtS2V5cyA9IHJlcXVpcmUoJy4vX2VudW0ta2V5cycpO1xudmFyIGlzQXJyYXkgPSByZXF1aXJlKCcuL19pcy1hcnJheScpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpO1xudmFyIHRvSU9iamVjdCA9IHJlcXVpcmUoJy4vX3RvLWlvYmplY3QnKTtcbnZhciB0b1ByaW1pdGl2ZSA9IHJlcXVpcmUoJy4vX3RvLXByaW1pdGl2ZScpO1xudmFyIGNyZWF0ZURlc2MgPSByZXF1aXJlKCcuL19wcm9wZXJ0eS1kZXNjJyk7XG52YXIgX2NyZWF0ZSA9IHJlcXVpcmUoJy4vX29iamVjdC1jcmVhdGUnKTtcbnZhciBnT1BORXh0ID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcG4tZXh0Jyk7XG52YXIgJEdPUEQgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wZCcpO1xudmFyICRHT1BTID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcHMnKTtcbnZhciAkRFAgPSByZXF1aXJlKCcuL19vYmplY3QtZHAnKTtcbnZhciAka2V5cyA9IHJlcXVpcmUoJy4vX29iamVjdC1rZXlzJyk7XG52YXIgZ09QRCA9ICRHT1BELmY7XG52YXIgZFAgPSAkRFAuZjtcbnZhciBnT1BOID0gZ09QTkV4dC5mO1xudmFyICRTeW1ib2wgPSBnbG9iYWwuU3ltYm9sO1xudmFyICRKU09OID0gZ2xvYmFsLkpTT047XG52YXIgX3N0cmluZ2lmeSA9ICRKU09OICYmICRKU09OLnN0cmluZ2lmeTtcbnZhciBQUk9UT1RZUEUgPSAncHJvdG90eXBlJztcbnZhciBISURERU4gPSB3a3MoJ19oaWRkZW4nKTtcbnZhciBUT19QUklNSVRJVkUgPSB3a3MoJ3RvUHJpbWl0aXZlJyk7XG52YXIgaXNFbnVtID0ge30ucHJvcGVydHlJc0VudW1lcmFibGU7XG52YXIgU3ltYm9sUmVnaXN0cnkgPSBzaGFyZWQoJ3N5bWJvbC1yZWdpc3RyeScpO1xudmFyIEFsbFN5bWJvbHMgPSBzaGFyZWQoJ3N5bWJvbHMnKTtcbnZhciBPUFN5bWJvbHMgPSBzaGFyZWQoJ29wLXN5bWJvbHMnKTtcbnZhciBPYmplY3RQcm90byA9IE9iamVjdFtQUk9UT1RZUEVdO1xudmFyIFVTRV9OQVRJVkUgPSB0eXBlb2YgJFN5bWJvbCA9PSAnZnVuY3Rpb24nICYmICEhJEdPUFMuZjtcbnZhciBRT2JqZWN0ID0gZ2xvYmFsLlFPYmplY3Q7XG4vLyBEb24ndCB1c2Ugc2V0dGVycyBpbiBRdCBTY3JpcHQsIGh0dHBzOi8vZ2l0aHViLmNvbS96bG9pcm9jay9jb3JlLWpzL2lzc3Vlcy8xNzNcbnZhciBzZXR0ZXIgPSAhUU9iamVjdCB8fCAhUU9iamVjdFtQUk9UT1RZUEVdIHx8ICFRT2JqZWN0W1BST1RPVFlQRV0uZmluZENoaWxkO1xuXG4vLyBmYWxsYmFjayBmb3Igb2xkIEFuZHJvaWQsIGh0dHBzOi8vY29kZS5nb29nbGUuY29tL3AvdjgvaXNzdWVzL2RldGFpbD9pZD02ODdcbnZhciBzZXRTeW1ib2xEZXNjID0gREVTQ1JJUFRPUlMgJiYgJGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIF9jcmVhdGUoZFAoe30sICdhJywge1xuICAgIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gZFAodGhpcywgJ2EnLCB7IHZhbHVlOiA3IH0pLmE7IH1cbiAgfSkpLmEgIT0gNztcbn0pID8gZnVuY3Rpb24gKGl0LCBrZXksIEQpIHtcbiAgdmFyIHByb3RvRGVzYyA9IGdPUEQoT2JqZWN0UHJvdG8sIGtleSk7XG4gIGlmIChwcm90b0Rlc2MpIGRlbGV0ZSBPYmplY3RQcm90b1trZXldO1xuICBkUChpdCwga2V5LCBEKTtcbiAgaWYgKHByb3RvRGVzYyAmJiBpdCAhPT0gT2JqZWN0UHJvdG8pIGRQKE9iamVjdFByb3RvLCBrZXksIHByb3RvRGVzYyk7XG59IDogZFA7XG5cbnZhciB3cmFwID0gZnVuY3Rpb24gKHRhZykge1xuICB2YXIgc3ltID0gQWxsU3ltYm9sc1t0YWddID0gX2NyZWF0ZSgkU3ltYm9sW1BST1RPVFlQRV0pO1xuICBzeW0uX2sgPSB0YWc7XG4gIHJldHVybiBzeW07XG59O1xuXG52YXIgaXNTeW1ib2wgPSBVU0VfTkFUSVZFICYmIHR5cGVvZiAkU3ltYm9sLml0ZXJhdG9yID09ICdzeW1ib2wnID8gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiB0eXBlb2YgaXQgPT0gJ3N5bWJvbCc7XG59IDogZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBpdCBpbnN0YW5jZW9mICRTeW1ib2w7XG59O1xuXG52YXIgJGRlZmluZVByb3BlcnR5ID0gZnVuY3Rpb24gZGVmaW5lUHJvcGVydHkoaXQsIGtleSwgRCkge1xuICBpZiAoaXQgPT09IE9iamVjdFByb3RvKSAkZGVmaW5lUHJvcGVydHkoT1BTeW1ib2xzLCBrZXksIEQpO1xuICBhbk9iamVjdChpdCk7XG4gIGtleSA9IHRvUHJpbWl0aXZlKGtleSwgdHJ1ZSk7XG4gIGFuT2JqZWN0KEQpO1xuICBpZiAoaGFzKEFsbFN5bWJvbHMsIGtleSkpIHtcbiAgICBpZiAoIUQuZW51bWVyYWJsZSkge1xuICAgICAgaWYgKCFoYXMoaXQsIEhJRERFTikpIGRQKGl0LCBISURERU4sIGNyZWF0ZURlc2MoMSwge30pKTtcbiAgICAgIGl0W0hJRERFTl1ba2V5XSA9IHRydWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChoYXMoaXQsIEhJRERFTikgJiYgaXRbSElEREVOXVtrZXldKSBpdFtISURERU5dW2tleV0gPSBmYWxzZTtcbiAgICAgIEQgPSBfY3JlYXRlKEQsIHsgZW51bWVyYWJsZTogY3JlYXRlRGVzYygwLCBmYWxzZSkgfSk7XG4gICAgfSByZXR1cm4gc2V0U3ltYm9sRGVzYyhpdCwga2V5LCBEKTtcbiAgfSByZXR1cm4gZFAoaXQsIGtleSwgRCk7XG59O1xudmFyICRkZWZpbmVQcm9wZXJ0aWVzID0gZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyhpdCwgUCkge1xuICBhbk9iamVjdChpdCk7XG4gIHZhciBrZXlzID0gZW51bUtleXMoUCA9IHRvSU9iamVjdChQKSk7XG4gIHZhciBpID0gMDtcbiAgdmFyIGwgPSBrZXlzLmxlbmd0aDtcbiAgdmFyIGtleTtcbiAgd2hpbGUgKGwgPiBpKSAkZGVmaW5lUHJvcGVydHkoaXQsIGtleSA9IGtleXNbaSsrXSwgUFtrZXldKTtcbiAgcmV0dXJuIGl0O1xufTtcbnZhciAkY3JlYXRlID0gZnVuY3Rpb24gY3JlYXRlKGl0LCBQKSB7XG4gIHJldHVybiBQID09PSB1bmRlZmluZWQgPyBfY3JlYXRlKGl0KSA6ICRkZWZpbmVQcm9wZXJ0aWVzKF9jcmVhdGUoaXQpLCBQKTtcbn07XG52YXIgJHByb3BlcnR5SXNFbnVtZXJhYmxlID0gZnVuY3Rpb24gcHJvcGVydHlJc0VudW1lcmFibGUoa2V5KSB7XG4gIHZhciBFID0gaXNFbnVtLmNhbGwodGhpcywga2V5ID0gdG9QcmltaXRpdmUoa2V5LCB0cnVlKSk7XG4gIGlmICh0aGlzID09PSBPYmplY3RQcm90byAmJiBoYXMoQWxsU3ltYm9scywga2V5KSAmJiAhaGFzKE9QU3ltYm9scywga2V5KSkgcmV0dXJuIGZhbHNlO1xuICByZXR1cm4gRSB8fCAhaGFzKHRoaXMsIGtleSkgfHwgIWhhcyhBbGxTeW1ib2xzLCBrZXkpIHx8IGhhcyh0aGlzLCBISURERU4pICYmIHRoaXNbSElEREVOXVtrZXldID8gRSA6IHRydWU7XG59O1xudmFyICRnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPSBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoaXQsIGtleSkge1xuICBpdCA9IHRvSU9iamVjdChpdCk7XG4gIGtleSA9IHRvUHJpbWl0aXZlKGtleSwgdHJ1ZSk7XG4gIGlmIChpdCA9PT0gT2JqZWN0UHJvdG8gJiYgaGFzKEFsbFN5bWJvbHMsIGtleSkgJiYgIWhhcyhPUFN5bWJvbHMsIGtleSkpIHJldHVybjtcbiAgdmFyIEQgPSBnT1BEKGl0LCBrZXkpO1xuICBpZiAoRCAmJiBoYXMoQWxsU3ltYm9scywga2V5KSAmJiAhKGhhcyhpdCwgSElEREVOKSAmJiBpdFtISURERU5dW2tleV0pKSBELmVudW1lcmFibGUgPSB0cnVlO1xuICByZXR1cm4gRDtcbn07XG52YXIgJGdldE93blByb3BlcnR5TmFtZXMgPSBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eU5hbWVzKGl0KSB7XG4gIHZhciBuYW1lcyA9IGdPUE4odG9JT2JqZWN0KGl0KSk7XG4gIHZhciByZXN1bHQgPSBbXTtcbiAgdmFyIGkgPSAwO1xuICB2YXIga2V5O1xuICB3aGlsZSAobmFtZXMubGVuZ3RoID4gaSkge1xuICAgIGlmICghaGFzKEFsbFN5bWJvbHMsIGtleSA9IG5hbWVzW2krK10pICYmIGtleSAhPSBISURERU4gJiYga2V5ICE9IE1FVEEpIHJlc3VsdC5wdXNoKGtleSk7XG4gIH0gcmV0dXJuIHJlc3VsdDtcbn07XG52YXIgJGdldE93blByb3BlcnR5U3ltYm9scyA9IGZ1bmN0aW9uIGdldE93blByb3BlcnR5U3ltYm9scyhpdCkge1xuICB2YXIgSVNfT1AgPSBpdCA9PT0gT2JqZWN0UHJvdG87XG4gIHZhciBuYW1lcyA9IGdPUE4oSVNfT1AgPyBPUFN5bWJvbHMgOiB0b0lPYmplY3QoaXQpKTtcbiAgdmFyIHJlc3VsdCA9IFtdO1xuICB2YXIgaSA9IDA7XG4gIHZhciBrZXk7XG4gIHdoaWxlIChuYW1lcy5sZW5ndGggPiBpKSB7XG4gICAgaWYgKGhhcyhBbGxTeW1ib2xzLCBrZXkgPSBuYW1lc1tpKytdKSAmJiAoSVNfT1AgPyBoYXMoT2JqZWN0UHJvdG8sIGtleSkgOiB0cnVlKSkgcmVzdWx0LnB1c2goQWxsU3ltYm9sc1trZXldKTtcbiAgfSByZXR1cm4gcmVzdWx0O1xufTtcblxuLy8gMTkuNC4xLjEgU3ltYm9sKFtkZXNjcmlwdGlvbl0pXG5pZiAoIVVTRV9OQVRJVkUpIHtcbiAgJFN5bWJvbCA9IGZ1bmN0aW9uIFN5bWJvbCgpIHtcbiAgICBpZiAodGhpcyBpbnN0YW5jZW9mICRTeW1ib2wpIHRocm93IFR5cGVFcnJvcignU3ltYm9sIGlzIG5vdCBhIGNvbnN0cnVjdG9yIScpO1xuICAgIHZhciB0YWcgPSB1aWQoYXJndW1lbnRzLmxlbmd0aCA+IDAgPyBhcmd1bWVudHNbMF0gOiB1bmRlZmluZWQpO1xuICAgIHZhciAkc2V0ID0gZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICBpZiAodGhpcyA9PT0gT2JqZWN0UHJvdG8pICRzZXQuY2FsbChPUFN5bWJvbHMsIHZhbHVlKTtcbiAgICAgIGlmIChoYXModGhpcywgSElEREVOKSAmJiBoYXModGhpc1tISURERU5dLCB0YWcpKSB0aGlzW0hJRERFTl1bdGFnXSA9IGZhbHNlO1xuICAgICAgc2V0U3ltYm9sRGVzYyh0aGlzLCB0YWcsIGNyZWF0ZURlc2MoMSwgdmFsdWUpKTtcbiAgICB9O1xuICAgIGlmIChERVNDUklQVE9SUyAmJiBzZXR0ZXIpIHNldFN5bWJvbERlc2MoT2JqZWN0UHJvdG8sIHRhZywgeyBjb25maWd1cmFibGU6IHRydWUsIHNldDogJHNldCB9KTtcbiAgICByZXR1cm4gd3JhcCh0YWcpO1xuICB9O1xuICByZWRlZmluZSgkU3ltYm9sW1BST1RPVFlQRV0sICd0b1N0cmluZycsIGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLl9rO1xuICB9KTtcblxuICAkR09QRC5mID0gJGdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcbiAgJERQLmYgPSAkZGVmaW5lUHJvcGVydHk7XG4gIHJlcXVpcmUoJy4vX29iamVjdC1nb3BuJykuZiA9IGdPUE5FeHQuZiA9ICRnZXRPd25Qcm9wZXJ0eU5hbWVzO1xuICByZXF1aXJlKCcuL19vYmplY3QtcGllJykuZiA9ICRwcm9wZXJ0eUlzRW51bWVyYWJsZTtcbiAgJEdPUFMuZiA9ICRnZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG5cbiAgaWYgKERFU0NSSVBUT1JTICYmICFyZXF1aXJlKCcuL19saWJyYXJ5JykpIHtcbiAgICByZWRlZmluZShPYmplY3RQcm90bywgJ3Byb3BlcnR5SXNFbnVtZXJhYmxlJywgJHByb3BlcnR5SXNFbnVtZXJhYmxlLCB0cnVlKTtcbiAgfVxuXG4gIHdrc0V4dC5mID0gZnVuY3Rpb24gKG5hbWUpIHtcbiAgICByZXR1cm4gd3JhcCh3a3MobmFtZSkpO1xuICB9O1xufVxuXG4kZXhwb3J0KCRleHBvcnQuRyArICRleHBvcnQuVyArICRleHBvcnQuRiAqICFVU0VfTkFUSVZFLCB7IFN5bWJvbDogJFN5bWJvbCB9KTtcblxuZm9yICh2YXIgZXM2U3ltYm9scyA9IChcbiAgLy8gMTkuNC4yLjIsIDE5LjQuMi4zLCAxOS40LjIuNCwgMTkuNC4yLjYsIDE5LjQuMi44LCAxOS40LjIuOSwgMTkuNC4yLjEwLCAxOS40LjIuMTEsIDE5LjQuMi4xMiwgMTkuNC4yLjEzLCAxOS40LjIuMTRcbiAgJ2hhc0luc3RhbmNlLGlzQ29uY2F0U3ByZWFkYWJsZSxpdGVyYXRvcixtYXRjaCxyZXBsYWNlLHNlYXJjaCxzcGVjaWVzLHNwbGl0LHRvUHJpbWl0aXZlLHRvU3RyaW5nVGFnLHVuc2NvcGFibGVzJ1xuKS5zcGxpdCgnLCcpLCBqID0gMDsgZXM2U3ltYm9scy5sZW5ndGggPiBqOyl3a3MoZXM2U3ltYm9sc1tqKytdKTtcblxuZm9yICh2YXIgd2VsbEtub3duU3ltYm9scyA9ICRrZXlzKHdrcy5zdG9yZSksIGsgPSAwOyB3ZWxsS25vd25TeW1ib2xzLmxlbmd0aCA+IGs7KSB3a3NEZWZpbmUod2VsbEtub3duU3ltYm9sc1trKytdKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAhVVNFX05BVElWRSwgJ1N5bWJvbCcsIHtcbiAgLy8gMTkuNC4yLjEgU3ltYm9sLmZvcihrZXkpXG4gICdmb3InOiBmdW5jdGlvbiAoa2V5KSB7XG4gICAgcmV0dXJuIGhhcyhTeW1ib2xSZWdpc3RyeSwga2V5ICs9ICcnKVxuICAgICAgPyBTeW1ib2xSZWdpc3RyeVtrZXldXG4gICAgICA6IFN5bWJvbFJlZ2lzdHJ5W2tleV0gPSAkU3ltYm9sKGtleSk7XG4gIH0sXG4gIC8vIDE5LjQuMi41IFN5bWJvbC5rZXlGb3Ioc3ltKVxuICBrZXlGb3I6IGZ1bmN0aW9uIGtleUZvcihzeW0pIHtcbiAgICBpZiAoIWlzU3ltYm9sKHN5bSkpIHRocm93IFR5cGVFcnJvcihzeW0gKyAnIGlzIG5vdCBhIHN5bWJvbCEnKTtcbiAgICBmb3IgKHZhciBrZXkgaW4gU3ltYm9sUmVnaXN0cnkpIGlmIChTeW1ib2xSZWdpc3RyeVtrZXldID09PSBzeW0pIHJldHVybiBrZXk7XG4gIH0sXG4gIHVzZVNldHRlcjogZnVuY3Rpb24gKCkgeyBzZXR0ZXIgPSB0cnVlOyB9LFxuICB1c2VTaW1wbGU6IGZ1bmN0aW9uICgpIHsgc2V0dGVyID0gZmFsc2U7IH1cbn0pO1xuXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICFVU0VfTkFUSVZFLCAnT2JqZWN0Jywge1xuICAvLyAxOS4xLjIuMiBPYmplY3QuY3JlYXRlKE8gWywgUHJvcGVydGllc10pXG4gIGNyZWF0ZTogJGNyZWF0ZSxcbiAgLy8gMTkuMS4yLjQgT2JqZWN0LmRlZmluZVByb3BlcnR5KE8sIFAsIEF0dHJpYnV0ZXMpXG4gIGRlZmluZVByb3BlcnR5OiAkZGVmaW5lUHJvcGVydHksXG4gIC8vIDE5LjEuMi4zIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKE8sIFByb3BlcnRpZXMpXG4gIGRlZmluZVByb3BlcnRpZXM6ICRkZWZpbmVQcm9wZXJ0aWVzLFxuICAvLyAxOS4xLjIuNiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE8sIFApXG4gIGdldE93blByb3BlcnR5RGVzY3JpcHRvcjogJGdldE93blByb3BlcnR5RGVzY3JpcHRvcixcbiAgLy8gMTkuMS4yLjcgT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoTylcbiAgZ2V0T3duUHJvcGVydHlOYW1lczogJGdldE93blByb3BlcnR5TmFtZXMsXG4gIC8vIDE5LjEuMi44IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoTylcbiAgZ2V0T3duUHJvcGVydHlTeW1ib2xzOiAkZ2V0T3duUHJvcGVydHlTeW1ib2xzXG59KTtcblxuLy8gQ2hyb21lIDM4IGFuZCAzOSBgT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9sc2AgZmFpbHMgb24gcHJpbWl0aXZlc1xuLy8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzQ0M1xudmFyIEZBSUxTX09OX1BSSU1JVElWRVMgPSAkZmFpbHMoZnVuY3Rpb24gKCkgeyAkR09QUy5mKDEpOyB9KTtcblxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiBGQUlMU19PTl9QUklNSVRJVkVTLCAnT2JqZWN0Jywge1xuICBnZXRPd25Qcm9wZXJ0eVN5bWJvbHM6IGZ1bmN0aW9uIGdldE93blByb3BlcnR5U3ltYm9scyhpdCkge1xuICAgIHJldHVybiAkR09QUy5mKHRvT2JqZWN0KGl0KSk7XG4gIH1cbn0pO1xuXG4vLyAyNC4zLjIgSlNPTi5zdHJpbmdpZnkodmFsdWUgWywgcmVwbGFjZXIgWywgc3BhY2VdXSlcbiRKU09OICYmICRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogKCFVU0VfTkFUSVZFIHx8ICRmYWlscyhmdW5jdGlvbiAoKSB7XG4gIHZhciBTID0gJFN5bWJvbCgpO1xuICAvLyBNUyBFZGdlIGNvbnZlcnRzIHN5bWJvbCB2YWx1ZXMgdG8gSlNPTiBhcyB7fVxuICAvLyBXZWJLaXQgY29udmVydHMgc3ltYm9sIHZhbHVlcyB0byBKU09OIGFzIG51bGxcbiAgLy8gVjggdGhyb3dzIG9uIGJveGVkIHN5bWJvbHNcbiAgcmV0dXJuIF9zdHJpbmdpZnkoW1NdKSAhPSAnW251bGxdJyB8fCBfc3RyaW5naWZ5KHsgYTogUyB9KSAhPSAne30nIHx8IF9zdHJpbmdpZnkoT2JqZWN0KFMpKSAhPSAne30nO1xufSkpLCAnSlNPTicsIHtcbiAgc3RyaW5naWZ5OiBmdW5jdGlvbiBzdHJpbmdpZnkoaXQpIHtcbiAgICB2YXIgYXJncyA9IFtpdF07XG4gICAgdmFyIGkgPSAxO1xuICAgIHZhciByZXBsYWNlciwgJHJlcGxhY2VyO1xuICAgIHdoaWxlIChhcmd1bWVudHMubGVuZ3RoID4gaSkgYXJncy5wdXNoKGFyZ3VtZW50c1tpKytdKTtcbiAgICAkcmVwbGFjZXIgPSByZXBsYWNlciA9IGFyZ3NbMV07XG4gICAgaWYgKCFpc09iamVjdChyZXBsYWNlcikgJiYgaXQgPT09IHVuZGVmaW5lZCB8fCBpc1N5bWJvbChpdCkpIHJldHVybjsgLy8gSUU4IHJldHVybnMgc3RyaW5nIG9uIHVuZGVmaW5lZFxuICAgIGlmICghaXNBcnJheShyZXBsYWNlcikpIHJlcGxhY2VyID0gZnVuY3Rpb24gKGtleSwgdmFsdWUpIHtcbiAgICAgIGlmICh0eXBlb2YgJHJlcGxhY2VyID09ICdmdW5jdGlvbicpIHZhbHVlID0gJHJlcGxhY2VyLmNhbGwodGhpcywga2V5LCB2YWx1ZSk7XG4gICAgICBpZiAoIWlzU3ltYm9sKHZhbHVlKSkgcmV0dXJuIHZhbHVlO1xuICAgIH07XG4gICAgYXJnc1sxXSA9IHJlcGxhY2VyO1xuICAgIHJldHVybiBfc3RyaW5naWZ5LmFwcGx5KCRKU09OLCBhcmdzKTtcbiAgfVxufSk7XG5cbi8vIDE5LjQuMy40IFN5bWJvbC5wcm90b3R5cGVbQEB0b1ByaW1pdGl2ZV0oaGludClcbiRTeW1ib2xbUFJPVE9UWVBFXVtUT19QUklNSVRJVkVdIHx8IHJlcXVpcmUoJy4vX2hpZGUnKSgkU3ltYm9sW1BST1RPVFlQRV0sIFRPX1BSSU1JVElWRSwgJFN5bWJvbFtQUk9UT1RZUEVdLnZhbHVlT2YpO1xuLy8gMTkuNC4zLjUgU3ltYm9sLnByb3RvdHlwZVtAQHRvU3RyaW5nVGFnXVxuc2V0VG9TdHJpbmdUYWcoJFN5bWJvbCwgJ1N5bWJvbCcpO1xuLy8gMjAuMi4xLjkgTWF0aFtAQHRvU3RyaW5nVGFnXVxuc2V0VG9TdHJpbmdUYWcoTWF0aCwgJ01hdGgnLCB0cnVlKTtcbi8vIDI0LjMuMyBKU09OW0BAdG9TdHJpbmdUYWddXG5zZXRUb1N0cmluZ1RhZyhnbG9iYWwuSlNPTiwgJ0pTT04nLCB0cnVlKTtcbiIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9fc2hhcmVkJykoJ25hdGl2ZS1mdW5jdGlvbi10by1zdHJpbmcnLCBGdW5jdGlvbi50b1N0cmluZyk7XG4iLCIvLyBhbGwgZW51bWVyYWJsZSBvYmplY3Qga2V5cywgaW5jbHVkZXMgc3ltYm9sc1xudmFyIGdldEtleXMgPSByZXF1aXJlKCcuL19vYmplY3Qta2V5cycpO1xudmFyIGdPUFMgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wcycpO1xudmFyIHBJRSA9IHJlcXVpcmUoJy4vX29iamVjdC1waWUnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHZhciByZXN1bHQgPSBnZXRLZXlzKGl0KTtcbiAgdmFyIGdldFN5bWJvbHMgPSBnT1BTLmY7XG4gIGlmIChnZXRTeW1ib2xzKSB7XG4gICAgdmFyIHN5bWJvbHMgPSBnZXRTeW1ib2xzKGl0KTtcbiAgICB2YXIgaXNFbnVtID0gcElFLmY7XG4gICAgdmFyIGkgPSAwO1xuICAgIHZhciBrZXk7XG4gICAgd2hpbGUgKHN5bWJvbHMubGVuZ3RoID4gaSkgaWYgKGlzRW51bS5jYWxsKGl0LCBrZXkgPSBzeW1ib2xzW2krK10pKSByZXN1bHQucHVzaChrZXkpO1xuICB9IHJldHVybiByZXN1bHQ7XG59O1xuIiwidmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbi8vIDE5LjEuMi4yIC8gMTUuMi4zLjUgT2JqZWN0LmNyZWF0ZShPIFssIFByb3BlcnRpZXNdKVxuJGV4cG9ydCgkZXhwb3J0LlMsICdPYmplY3QnLCB7IGNyZWF0ZTogcmVxdWlyZSgnLi9fb2JqZWN0LWNyZWF0ZScpIH0pO1xuIiwidmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbi8vIDE5LjEuMi40IC8gMTUuMi4zLjYgT2JqZWN0LmRlZmluZVByb3BlcnR5KE8sIFAsIEF0dHJpYnV0ZXMpXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICFyZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpLCAnT2JqZWN0JywgeyBkZWZpbmVQcm9wZXJ0eTogcmVxdWlyZSgnLi9fb2JqZWN0LWRwJykuZiB9KTtcbiIsInZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG4vLyAxOS4xLjIuMyAvIDE1LjIuMy43IE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKE8sIFByb3BlcnRpZXMpXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICFyZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpLCAnT2JqZWN0JywgeyBkZWZpbmVQcm9wZXJ0aWVzOiByZXF1aXJlKCcuL19vYmplY3QtZHBzJykgfSk7XG4iLCIvLyAxOS4xLjIuNiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE8sIFApXG52YXIgdG9JT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8taW9iamVjdCcpO1xudmFyICRnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wZCcpLmY7XG5cbnJlcXVpcmUoJy4vX29iamVjdC1zYXAnKSgnZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yJywgZnVuY3Rpb24gKCkge1xuICByZXR1cm4gZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGl0LCBrZXkpIHtcbiAgICByZXR1cm4gJGdldE93blByb3BlcnR5RGVzY3JpcHRvcih0b0lPYmplY3QoaXQpLCBrZXkpO1xuICB9O1xufSk7XG4iLCIvLyAxOS4xLjIuOSBPYmplY3QuZ2V0UHJvdG90eXBlT2YoTylcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpO1xudmFyICRnZXRQcm90b3R5cGVPZiA9IHJlcXVpcmUoJy4vX29iamVjdC1ncG8nKTtcblxucmVxdWlyZSgnLi9fb2JqZWN0LXNhcCcpKCdnZXRQcm90b3R5cGVPZicsIGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGdldFByb3RvdHlwZU9mKGl0KSB7XG4gICAgcmV0dXJuICRnZXRQcm90b3R5cGVPZih0b09iamVjdChpdCkpO1xuICB9O1xufSk7XG4iLCIvLyAxOS4xLjIuMTQgT2JqZWN0LmtleXMoTylcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpO1xudmFyICRrZXlzID0gcmVxdWlyZSgnLi9fb2JqZWN0LWtleXMnKTtcblxucmVxdWlyZSgnLi9fb2JqZWN0LXNhcCcpKCdrZXlzJywgZnVuY3Rpb24gKCkge1xuICByZXR1cm4gZnVuY3Rpb24ga2V5cyhpdCkge1xuICAgIHJldHVybiAka2V5cyh0b09iamVjdChpdCkpO1xuICB9O1xufSk7XG4iLCIvLyAxOS4xLjIuNyBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhPKVxucmVxdWlyZSgnLi9fb2JqZWN0LXNhcCcpKCdnZXRPd25Qcm9wZXJ0eU5hbWVzJywgZnVuY3Rpb24gKCkge1xuICByZXR1cm4gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcG4tZXh0JykuZjtcbn0pO1xuIiwiLy8gMTkuMS4yLjUgT2JqZWN0LmZyZWV6ZShPKVxudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgbWV0YSA9IHJlcXVpcmUoJy4vX21ldGEnKS5vbkZyZWV6ZTtcblxucmVxdWlyZSgnLi9fb2JqZWN0LXNhcCcpKCdmcmVlemUnLCBmdW5jdGlvbiAoJGZyZWV6ZSkge1xuICByZXR1cm4gZnVuY3Rpb24gZnJlZXplKGl0KSB7XG4gICAgcmV0dXJuICRmcmVlemUgJiYgaXNPYmplY3QoaXQpID8gJGZyZWV6ZShtZXRhKGl0KSkgOiBpdDtcbiAgfTtcbn0pO1xuIiwiLy8gMTkuMS4yLjE3IE9iamVjdC5zZWFsKE8pXG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciBtZXRhID0gcmVxdWlyZSgnLi9fbWV0YScpLm9uRnJlZXplO1xuXG5yZXF1aXJlKCcuL19vYmplY3Qtc2FwJykoJ3NlYWwnLCBmdW5jdGlvbiAoJHNlYWwpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIHNlYWwoaXQpIHtcbiAgICByZXR1cm4gJHNlYWwgJiYgaXNPYmplY3QoaXQpID8gJHNlYWwobWV0YShpdCkpIDogaXQ7XG4gIH07XG59KTtcbiIsIi8vIDE5LjEuMi4xNSBPYmplY3QucHJldmVudEV4dGVuc2lvbnMoTylcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIG1ldGEgPSByZXF1aXJlKCcuL19tZXRhJykub25GcmVlemU7XG5cbnJlcXVpcmUoJy4vX29iamVjdC1zYXAnKSgncHJldmVudEV4dGVuc2lvbnMnLCBmdW5jdGlvbiAoJHByZXZlbnRFeHRlbnNpb25zKSB7XG4gIHJldHVybiBmdW5jdGlvbiBwcmV2ZW50RXh0ZW5zaW9ucyhpdCkge1xuICAgIHJldHVybiAkcHJldmVudEV4dGVuc2lvbnMgJiYgaXNPYmplY3QoaXQpID8gJHByZXZlbnRFeHRlbnNpb25zKG1ldGEoaXQpKSA6IGl0O1xuICB9O1xufSk7XG4iLCIvLyAxOS4xLjIuMTIgT2JqZWN0LmlzRnJvemVuKE8pXG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcblxucmVxdWlyZSgnLi9fb2JqZWN0LXNhcCcpKCdpc0Zyb3plbicsIGZ1bmN0aW9uICgkaXNGcm96ZW4pIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGlzRnJvemVuKGl0KSB7XG4gICAgcmV0dXJuIGlzT2JqZWN0KGl0KSA/ICRpc0Zyb3plbiA/ICRpc0Zyb3plbihpdCkgOiBmYWxzZSA6IHRydWU7XG4gIH07XG59KTtcbiIsIi8vIDE5LjEuMi4xMyBPYmplY3QuaXNTZWFsZWQoTylcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xuXG5yZXF1aXJlKCcuL19vYmplY3Qtc2FwJykoJ2lzU2VhbGVkJywgZnVuY3Rpb24gKCRpc1NlYWxlZCkge1xuICByZXR1cm4gZnVuY3Rpb24gaXNTZWFsZWQoaXQpIHtcbiAgICByZXR1cm4gaXNPYmplY3QoaXQpID8gJGlzU2VhbGVkID8gJGlzU2VhbGVkKGl0KSA6IGZhbHNlIDogdHJ1ZTtcbiAgfTtcbn0pO1xuIiwiLy8gMTkuMS4yLjExIE9iamVjdC5pc0V4dGVuc2libGUoTylcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xuXG5yZXF1aXJlKCcuL19vYmplY3Qtc2FwJykoJ2lzRXh0ZW5zaWJsZScsIGZ1bmN0aW9uICgkaXNFeHRlbnNpYmxlKSB7XG4gIHJldHVybiBmdW5jdGlvbiBpc0V4dGVuc2libGUoaXQpIHtcbiAgICByZXR1cm4gaXNPYmplY3QoaXQpID8gJGlzRXh0ZW5zaWJsZSA/ICRpc0V4dGVuc2libGUoaXQpIDogdHJ1ZSA6IGZhbHNlO1xuICB9O1xufSk7XG4iLCIvLyAxOS4xLjMuMSBPYmplY3QuYXNzaWduKHRhcmdldCwgc291cmNlKVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYsICdPYmplY3QnLCB7IGFzc2lnbjogcmVxdWlyZSgnLi9fb2JqZWN0LWFzc2lnbicpIH0pO1xuIiwiLy8gMTkuMS4zLjEwIE9iamVjdC5pcyh2YWx1ZTEsIHZhbHVlMilcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG4kZXhwb3J0KCRleHBvcnQuUywgJ09iamVjdCcsIHsgaXM6IHJlcXVpcmUoJy4vX3NhbWUtdmFsdWUnKSB9KTtcbiIsIi8vIDE5LjEuMy4xOSBPYmplY3Quc2V0UHJvdG90eXBlT2YoTywgcHJvdG8pXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuJGV4cG9ydCgkZXhwb3J0LlMsICdPYmplY3QnLCB7IHNldFByb3RvdHlwZU9mOiByZXF1aXJlKCcuL19zZXQtcHJvdG8nKS5zZXQgfSk7XG4iLCIndXNlIHN0cmljdCc7XG4vLyAxOS4xLjMuNiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nKClcbnZhciBjbGFzc29mID0gcmVxdWlyZSgnLi9fY2xhc3NvZicpO1xudmFyIHRlc3QgPSB7fTtcbnRlc3RbcmVxdWlyZSgnLi9fd2tzJykoJ3RvU3RyaW5nVGFnJyldID0gJ3onO1xuaWYgKHRlc3QgKyAnJyAhPSAnW29iamVjdCB6XScpIHtcbiAgcmVxdWlyZSgnLi9fcmVkZWZpbmUnKShPYmplY3QucHJvdG90eXBlLCAndG9TdHJpbmcnLCBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gJ1tvYmplY3QgJyArIGNsYXNzb2YodGhpcykgKyAnXSc7XG4gIH0sIHRydWUpO1xufVxuIiwiLy8gMTkuMi4zLjIgLyAxNS4zLjQuNSBGdW5jdGlvbi5wcm90b3R5cGUuYmluZCh0aGlzQXJnLCBhcmdzLi4uKVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlAsICdGdW5jdGlvbicsIHsgYmluZDogcmVxdWlyZSgnLi9fYmluZCcpIH0pO1xuIiwidmFyIGRQID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJykuZjtcbnZhciBGUHJvdG8gPSBGdW5jdGlvbi5wcm90b3R5cGU7XG52YXIgbmFtZVJFID0gL15cXHMqZnVuY3Rpb24gKFteIChdKikvO1xudmFyIE5BTUUgPSAnbmFtZSc7XG5cbi8vIDE5LjIuNC4yIG5hbWVcbk5BTUUgaW4gRlByb3RvIHx8IHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgJiYgZFAoRlByb3RvLCBOQU1FLCB7XG4gIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiAoJycgKyB0aGlzKS5tYXRjaChuYW1lUkUpWzFdO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIHJldHVybiAnJztcbiAgICB9XG4gIH1cbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgZ2V0UHJvdG90eXBlT2YgPSByZXF1aXJlKCcuL19vYmplY3QtZ3BvJyk7XG52YXIgSEFTX0lOU1RBTkNFID0gcmVxdWlyZSgnLi9fd2tzJykoJ2hhc0luc3RhbmNlJyk7XG52YXIgRnVuY3Rpb25Qcm90byA9IEZ1bmN0aW9uLnByb3RvdHlwZTtcbi8vIDE5LjIuMy42IEZ1bmN0aW9uLnByb3RvdHlwZVtAQGhhc0luc3RhbmNlXShWKVxuaWYgKCEoSEFTX0lOU1RBTkNFIGluIEZ1bmN0aW9uUHJvdG8pKSByZXF1aXJlKCcuL19vYmplY3QtZHAnKS5mKEZ1bmN0aW9uUHJvdG8sIEhBU19JTlNUQU5DRSwgeyB2YWx1ZTogZnVuY3Rpb24gKE8pIHtcbiAgaWYgKHR5cGVvZiB0aGlzICE9ICdmdW5jdGlvbicgfHwgIWlzT2JqZWN0KE8pKSByZXR1cm4gZmFsc2U7XG4gIGlmICghaXNPYmplY3QodGhpcy5wcm90b3R5cGUpKSByZXR1cm4gTyBpbnN0YW5jZW9mIHRoaXM7XG4gIC8vIGZvciBlbnZpcm9ubWVudCB3L28gbmF0aXZlIGBAQGhhc0luc3RhbmNlYCBsb2dpYyBlbm91Z2ggYGluc3RhbmNlb2ZgLCBidXQgYWRkIHRoaXM6XG4gIHdoaWxlIChPID0gZ2V0UHJvdG90eXBlT2YoTykpIGlmICh0aGlzLnByb3RvdHlwZSA9PT0gTykgcmV0dXJuIHRydWU7XG4gIHJldHVybiBmYWxzZTtcbn0gfSk7XG4iLCJ2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRwYXJzZUludCA9IHJlcXVpcmUoJy4vX3BhcnNlLWludCcpO1xuLy8gMTguMi41IHBhcnNlSW50KHN0cmluZywgcmFkaXgpXG4kZXhwb3J0KCRleHBvcnQuRyArICRleHBvcnQuRiAqIChwYXJzZUludCAhPSAkcGFyc2VJbnQpLCB7IHBhcnNlSW50OiAkcGFyc2VJbnQgfSk7XG4iLCJ2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRwYXJzZUZsb2F0ID0gcmVxdWlyZSgnLi9fcGFyc2UtZmxvYXQnKTtcbi8vIDE4LjIuNCBwYXJzZUZsb2F0KHN0cmluZylcbiRleHBvcnQoJGV4cG9ydC5HICsgJGV4cG9ydC5GICogKHBhcnNlRmxvYXQgIT0gJHBhcnNlRmxvYXQpLCB7IHBhcnNlRmxvYXQ6ICRwYXJzZUZsb2F0IH0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIGhhcyA9IHJlcXVpcmUoJy4vX2hhcycpO1xudmFyIGNvZiA9IHJlcXVpcmUoJy4vX2NvZicpO1xudmFyIGluaGVyaXRJZlJlcXVpcmVkID0gcmVxdWlyZSgnLi9faW5oZXJpdC1pZi1yZXF1aXJlZCcpO1xudmFyIHRvUHJpbWl0aXZlID0gcmVxdWlyZSgnLi9fdG8tcHJpbWl0aXZlJyk7XG52YXIgZmFpbHMgPSByZXF1aXJlKCcuL19mYWlscycpO1xudmFyIGdPUE4gPSByZXF1aXJlKCcuL19vYmplY3QtZ29wbicpLmY7XG52YXIgZ09QRCA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BkJykuZjtcbnZhciBkUCA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpLmY7XG52YXIgJHRyaW0gPSByZXF1aXJlKCcuL19zdHJpbmctdHJpbScpLnRyaW07XG52YXIgTlVNQkVSID0gJ051bWJlcic7XG52YXIgJE51bWJlciA9IGdsb2JhbFtOVU1CRVJdO1xudmFyIEJhc2UgPSAkTnVtYmVyO1xudmFyIHByb3RvID0gJE51bWJlci5wcm90b3R5cGU7XG4vLyBPcGVyYSB+MTIgaGFzIGJyb2tlbiBPYmplY3QjdG9TdHJpbmdcbnZhciBCUk9LRU5fQ09GID0gY29mKHJlcXVpcmUoJy4vX29iamVjdC1jcmVhdGUnKShwcm90bykpID09IE5VTUJFUjtcbnZhciBUUklNID0gJ3RyaW0nIGluIFN0cmluZy5wcm90b3R5cGU7XG5cbi8vIDcuMS4zIFRvTnVtYmVyKGFyZ3VtZW50KVxudmFyIHRvTnVtYmVyID0gZnVuY3Rpb24gKGFyZ3VtZW50KSB7XG4gIHZhciBpdCA9IHRvUHJpbWl0aXZlKGFyZ3VtZW50LCBmYWxzZSk7XG4gIGlmICh0eXBlb2YgaXQgPT0gJ3N0cmluZycgJiYgaXQubGVuZ3RoID4gMikge1xuICAgIGl0ID0gVFJJTSA/IGl0LnRyaW0oKSA6ICR0cmltKGl0LCAzKTtcbiAgICB2YXIgZmlyc3QgPSBpdC5jaGFyQ29kZUF0KDApO1xuICAgIHZhciB0aGlyZCwgcmFkaXgsIG1heENvZGU7XG4gICAgaWYgKGZpcnN0ID09PSA0MyB8fCBmaXJzdCA9PT0gNDUpIHtcbiAgICAgIHRoaXJkID0gaXQuY2hhckNvZGVBdCgyKTtcbiAgICAgIGlmICh0aGlyZCA9PT0gODggfHwgdGhpcmQgPT09IDEyMCkgcmV0dXJuIE5hTjsgLy8gTnVtYmVyKCcrMHgxJykgc2hvdWxkIGJlIE5hTiwgb2xkIFY4IGZpeFxuICAgIH0gZWxzZSBpZiAoZmlyc3QgPT09IDQ4KSB7XG4gICAgICBzd2l0Y2ggKGl0LmNoYXJDb2RlQXQoMSkpIHtcbiAgICAgICAgY2FzZSA2NjogY2FzZSA5ODogcmFkaXggPSAyOyBtYXhDb2RlID0gNDk7IGJyZWFrOyAvLyBmYXN0IGVxdWFsIC9eMGJbMDFdKyQvaVxuICAgICAgICBjYXNlIDc5OiBjYXNlIDExMTogcmFkaXggPSA4OyBtYXhDb2RlID0gNTU7IGJyZWFrOyAvLyBmYXN0IGVxdWFsIC9eMG9bMC03XSskL2lcbiAgICAgICAgZGVmYXVsdDogcmV0dXJuICtpdDtcbiAgICAgIH1cbiAgICAgIGZvciAodmFyIGRpZ2l0cyA9IGl0LnNsaWNlKDIpLCBpID0gMCwgbCA9IGRpZ2l0cy5sZW5ndGgsIGNvZGU7IGkgPCBsOyBpKyspIHtcbiAgICAgICAgY29kZSA9IGRpZ2l0cy5jaGFyQ29kZUF0KGkpO1xuICAgICAgICAvLyBwYXJzZUludCBwYXJzZXMgYSBzdHJpbmcgdG8gYSBmaXJzdCB1bmF2YWlsYWJsZSBzeW1ib2xcbiAgICAgICAgLy8gYnV0IFRvTnVtYmVyIHNob3VsZCByZXR1cm4gTmFOIGlmIGEgc3RyaW5nIGNvbnRhaW5zIHVuYXZhaWxhYmxlIHN5bWJvbHNcbiAgICAgICAgaWYgKGNvZGUgPCA0OCB8fCBjb2RlID4gbWF4Q29kZSkgcmV0dXJuIE5hTjtcbiAgICAgIH0gcmV0dXJuIHBhcnNlSW50KGRpZ2l0cywgcmFkaXgpO1xuICAgIH1cbiAgfSByZXR1cm4gK2l0O1xufTtcblxuaWYgKCEkTnVtYmVyKCcgMG8xJykgfHwgISROdW1iZXIoJzBiMScpIHx8ICROdW1iZXIoJysweDEnKSkge1xuICAkTnVtYmVyID0gZnVuY3Rpb24gTnVtYmVyKHZhbHVlKSB7XG4gICAgdmFyIGl0ID0gYXJndW1lbnRzLmxlbmd0aCA8IDEgPyAwIDogdmFsdWU7XG4gICAgdmFyIHRoYXQgPSB0aGlzO1xuICAgIHJldHVybiB0aGF0IGluc3RhbmNlb2YgJE51bWJlclxuICAgICAgLy8gY2hlY2sgb24gMS4uY29uc3RydWN0b3IoZm9vKSBjYXNlXG4gICAgICAmJiAoQlJPS0VOX0NPRiA/IGZhaWxzKGZ1bmN0aW9uICgpIHsgcHJvdG8udmFsdWVPZi5jYWxsKHRoYXQpOyB9KSA6IGNvZih0aGF0KSAhPSBOVU1CRVIpXG4gICAgICAgID8gaW5oZXJpdElmUmVxdWlyZWQobmV3IEJhc2UodG9OdW1iZXIoaXQpKSwgdGhhdCwgJE51bWJlcikgOiB0b051bWJlcihpdCk7XG4gIH07XG4gIGZvciAodmFyIGtleXMgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpID8gZ09QTihCYXNlKSA6IChcbiAgICAvLyBFUzM6XG4gICAgJ01BWF9WQUxVRSxNSU5fVkFMVUUsTmFOLE5FR0FUSVZFX0lORklOSVRZLFBPU0lUSVZFX0lORklOSVRZLCcgK1xuICAgIC8vIEVTNiAoaW4gY2FzZSwgaWYgbW9kdWxlcyB3aXRoIEVTNiBOdW1iZXIgc3RhdGljcyByZXF1aXJlZCBiZWZvcmUpOlxuICAgICdFUFNJTE9OLGlzRmluaXRlLGlzSW50ZWdlcixpc05hTixpc1NhZmVJbnRlZ2VyLE1BWF9TQUZFX0lOVEVHRVIsJyArXG4gICAgJ01JTl9TQUZFX0lOVEVHRVIscGFyc2VGbG9hdCxwYXJzZUludCxpc0ludGVnZXInXG4gICkuc3BsaXQoJywnKSwgaiA9IDAsIGtleTsga2V5cy5sZW5ndGggPiBqOyBqKyspIHtcbiAgICBpZiAoaGFzKEJhc2UsIGtleSA9IGtleXNbal0pICYmICFoYXMoJE51bWJlciwga2V5KSkge1xuICAgICAgZFAoJE51bWJlciwga2V5LCBnT1BEKEJhc2UsIGtleSkpO1xuICAgIH1cbiAgfVxuICAkTnVtYmVyLnByb3RvdHlwZSA9IHByb3RvO1xuICBwcm90by5jb25zdHJ1Y3RvciA9ICROdW1iZXI7XG4gIHJlcXVpcmUoJy4vX3JlZGVmaW5lJykoZ2xvYmFsLCBOVU1CRVIsICROdW1iZXIpO1xufVxuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciB0b0ludGVnZXIgPSByZXF1aXJlKCcuL190by1pbnRlZ2VyJyk7XG52YXIgYU51bWJlclZhbHVlID0gcmVxdWlyZSgnLi9fYS1udW1iZXItdmFsdWUnKTtcbnZhciByZXBlYXQgPSByZXF1aXJlKCcuL19zdHJpbmctcmVwZWF0Jyk7XG52YXIgJHRvRml4ZWQgPSAxLjAudG9GaXhlZDtcbnZhciBmbG9vciA9IE1hdGguZmxvb3I7XG52YXIgZGF0YSA9IFswLCAwLCAwLCAwLCAwLCAwXTtcbnZhciBFUlJPUiA9ICdOdW1iZXIudG9GaXhlZDogaW5jb3JyZWN0IGludm9jYXRpb24hJztcbnZhciBaRVJPID0gJzAnO1xuXG52YXIgbXVsdGlwbHkgPSBmdW5jdGlvbiAobiwgYykge1xuICB2YXIgaSA9IC0xO1xuICB2YXIgYzIgPSBjO1xuICB3aGlsZSAoKytpIDwgNikge1xuICAgIGMyICs9IG4gKiBkYXRhW2ldO1xuICAgIGRhdGFbaV0gPSBjMiAlIDFlNztcbiAgICBjMiA9IGZsb29yKGMyIC8gMWU3KTtcbiAgfVxufTtcbnZhciBkaXZpZGUgPSBmdW5jdGlvbiAobikge1xuICB2YXIgaSA9IDY7XG4gIHZhciBjID0gMDtcbiAgd2hpbGUgKC0taSA+PSAwKSB7XG4gICAgYyArPSBkYXRhW2ldO1xuICAgIGRhdGFbaV0gPSBmbG9vcihjIC8gbik7XG4gICAgYyA9IChjICUgbikgKiAxZTc7XG4gIH1cbn07XG52YXIgbnVtVG9TdHJpbmcgPSBmdW5jdGlvbiAoKSB7XG4gIHZhciBpID0gNjtcbiAgdmFyIHMgPSAnJztcbiAgd2hpbGUgKC0taSA+PSAwKSB7XG4gICAgaWYgKHMgIT09ICcnIHx8IGkgPT09IDAgfHwgZGF0YVtpXSAhPT0gMCkge1xuICAgICAgdmFyIHQgPSBTdHJpbmcoZGF0YVtpXSk7XG4gICAgICBzID0gcyA9PT0gJycgPyB0IDogcyArIHJlcGVhdC5jYWxsKFpFUk8sIDcgLSB0Lmxlbmd0aCkgKyB0O1xuICAgIH1cbiAgfSByZXR1cm4gcztcbn07XG52YXIgcG93ID0gZnVuY3Rpb24gKHgsIG4sIGFjYykge1xuICByZXR1cm4gbiA9PT0gMCA/IGFjYyA6IG4gJSAyID09PSAxID8gcG93KHgsIG4gLSAxLCBhY2MgKiB4KSA6IHBvdyh4ICogeCwgbiAvIDIsIGFjYyk7XG59O1xudmFyIGxvZyA9IGZ1bmN0aW9uICh4KSB7XG4gIHZhciBuID0gMDtcbiAgdmFyIHgyID0geDtcbiAgd2hpbGUgKHgyID49IDQwOTYpIHtcbiAgICBuICs9IDEyO1xuICAgIHgyIC89IDQwOTY7XG4gIH1cbiAgd2hpbGUgKHgyID49IDIpIHtcbiAgICBuICs9IDE7XG4gICAgeDIgLz0gMjtcbiAgfSByZXR1cm4gbjtcbn07XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogKCEhJHRvRml4ZWQgJiYgKFxuICAwLjAwMDA4LnRvRml4ZWQoMykgIT09ICcwLjAwMCcgfHxcbiAgMC45LnRvRml4ZWQoMCkgIT09ICcxJyB8fFxuICAxLjI1NS50b0ZpeGVkKDIpICE9PSAnMS4yNScgfHxcbiAgMTAwMDAwMDAwMDAwMDAwMDEyOC4wLnRvRml4ZWQoMCkgIT09ICcxMDAwMDAwMDAwMDAwMDAwMTI4J1xuKSB8fCAhcmVxdWlyZSgnLi9fZmFpbHMnKShmdW5jdGlvbiAoKSB7XG4gIC8vIFY4IH4gQW5kcm9pZCA0LjMtXG4gICR0b0ZpeGVkLmNhbGwoe30pO1xufSkpLCAnTnVtYmVyJywge1xuICB0b0ZpeGVkOiBmdW5jdGlvbiB0b0ZpeGVkKGZyYWN0aW9uRGlnaXRzKSB7XG4gICAgdmFyIHggPSBhTnVtYmVyVmFsdWUodGhpcywgRVJST1IpO1xuICAgIHZhciBmID0gdG9JbnRlZ2VyKGZyYWN0aW9uRGlnaXRzKTtcbiAgICB2YXIgcyA9ICcnO1xuICAgIHZhciBtID0gWkVSTztcbiAgICB2YXIgZSwgeiwgaiwgaztcbiAgICBpZiAoZiA8IDAgfHwgZiA+IDIwKSB0aHJvdyBSYW5nZUVycm9yKEVSUk9SKTtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tc2VsZi1jb21wYXJlXG4gICAgaWYgKHggIT0geCkgcmV0dXJuICdOYU4nO1xuICAgIGlmICh4IDw9IC0xZTIxIHx8IHggPj0gMWUyMSkgcmV0dXJuIFN0cmluZyh4KTtcbiAgICBpZiAoeCA8IDApIHtcbiAgICAgIHMgPSAnLSc7XG4gICAgICB4ID0gLXg7XG4gICAgfVxuICAgIGlmICh4ID4gMWUtMjEpIHtcbiAgICAgIGUgPSBsb2coeCAqIHBvdygyLCA2OSwgMSkpIC0gNjk7XG4gICAgICB6ID0gZSA8IDAgPyB4ICogcG93KDIsIC1lLCAxKSA6IHggLyBwb3coMiwgZSwgMSk7XG4gICAgICB6ICo9IDB4MTAwMDAwMDAwMDAwMDA7XG4gICAgICBlID0gNTIgLSBlO1xuICAgICAgaWYgKGUgPiAwKSB7XG4gICAgICAgIG11bHRpcGx5KDAsIHopO1xuICAgICAgICBqID0gZjtcbiAgICAgICAgd2hpbGUgKGogPj0gNykge1xuICAgICAgICAgIG11bHRpcGx5KDFlNywgMCk7XG4gICAgICAgICAgaiAtPSA3O1xuICAgICAgICB9XG4gICAgICAgIG11bHRpcGx5KHBvdygxMCwgaiwgMSksIDApO1xuICAgICAgICBqID0gZSAtIDE7XG4gICAgICAgIHdoaWxlIChqID49IDIzKSB7XG4gICAgICAgICAgZGl2aWRlKDEgPDwgMjMpO1xuICAgICAgICAgIGogLT0gMjM7XG4gICAgICAgIH1cbiAgICAgICAgZGl2aWRlKDEgPDwgaik7XG4gICAgICAgIG11bHRpcGx5KDEsIDEpO1xuICAgICAgICBkaXZpZGUoMik7XG4gICAgICAgIG0gPSBudW1Ub1N0cmluZygpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbXVsdGlwbHkoMCwgeik7XG4gICAgICAgIG11bHRpcGx5KDEgPDwgLWUsIDApO1xuICAgICAgICBtID0gbnVtVG9TdHJpbmcoKSArIHJlcGVhdC5jYWxsKFpFUk8sIGYpO1xuICAgICAgfVxuICAgIH1cbiAgICBpZiAoZiA+IDApIHtcbiAgICAgIGsgPSBtLmxlbmd0aDtcbiAgICAgIG0gPSBzICsgKGsgPD0gZiA/ICcwLicgKyByZXBlYXQuY2FsbChaRVJPLCBmIC0gaykgKyBtIDogbS5zbGljZSgwLCBrIC0gZikgKyAnLicgKyBtLnNsaWNlKGsgLSBmKSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIG0gPSBzICsgbTtcbiAgICB9IHJldHVybiBtO1xuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgJGZhaWxzID0gcmVxdWlyZSgnLi9fZmFpbHMnKTtcbnZhciBhTnVtYmVyVmFsdWUgPSByZXF1aXJlKCcuL19hLW51bWJlci12YWx1ZScpO1xudmFyICR0b1ByZWNpc2lvbiA9IDEuMC50b1ByZWNpc2lvbjtcblxuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiAoJGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgLy8gSUU3LVxuICByZXR1cm4gJHRvUHJlY2lzaW9uLmNhbGwoMSwgdW5kZWZpbmVkKSAhPT0gJzEnO1xufSkgfHwgISRmYWlscyhmdW5jdGlvbiAoKSB7XG4gIC8vIFY4IH4gQW5kcm9pZCA0LjMtXG4gICR0b1ByZWNpc2lvbi5jYWxsKHt9KTtcbn0pKSwgJ051bWJlcicsIHtcbiAgdG9QcmVjaXNpb246IGZ1bmN0aW9uIHRvUHJlY2lzaW9uKHByZWNpc2lvbikge1xuICAgIHZhciB0aGF0ID0gYU51bWJlclZhbHVlKHRoaXMsICdOdW1iZXIjdG9QcmVjaXNpb246IGluY29ycmVjdCBpbnZvY2F0aW9uIScpO1xuICAgIHJldHVybiBwcmVjaXNpb24gPT09IHVuZGVmaW5lZCA/ICR0b1ByZWNpc2lvbi5jYWxsKHRoYXQpIDogJHRvUHJlY2lzaW9uLmNhbGwodGhhdCwgcHJlY2lzaW9uKTtcbiAgfVxufSk7XG4iLCIvLyAyMC4xLjIuMSBOdW1iZXIuRVBTSUxPTlxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdOdW1iZXInLCB7IEVQU0lMT046IE1hdGgucG93KDIsIC01MikgfSk7XG4iLCIvLyAyMC4xLjIuMiBOdW1iZXIuaXNGaW5pdGUobnVtYmVyKVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBfaXNGaW5pdGUgPSByZXF1aXJlKCcuL19nbG9iYWwnKS5pc0Zpbml0ZTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdOdW1iZXInLCB7XG4gIGlzRmluaXRlOiBmdW5jdGlvbiBpc0Zpbml0ZShpdCkge1xuICAgIHJldHVybiB0eXBlb2YgaXQgPT0gJ251bWJlcicgJiYgX2lzRmluaXRlKGl0KTtcbiAgfVxufSk7XG4iLCIvLyAyMC4xLjIuMyBOdW1iZXIuaXNJbnRlZ2VyKG51bWJlcilcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnTnVtYmVyJywgeyBpc0ludGVnZXI6IHJlcXVpcmUoJy4vX2lzLWludGVnZXInKSB9KTtcbiIsIi8vIDIwLjEuMi40IE51bWJlci5pc05hTihudW1iZXIpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ051bWJlcicsIHtcbiAgaXNOYU46IGZ1bmN0aW9uIGlzTmFOKG51bWJlcikge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1zZWxmLWNvbXBhcmVcbiAgICByZXR1cm4gbnVtYmVyICE9IG51bWJlcjtcbiAgfVxufSk7XG4iLCIvLyAyMC4xLjIuNSBOdW1iZXIuaXNTYWZlSW50ZWdlcihudW1iZXIpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGlzSW50ZWdlciA9IHJlcXVpcmUoJy4vX2lzLWludGVnZXInKTtcbnZhciBhYnMgPSBNYXRoLmFicztcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdOdW1iZXInLCB7XG4gIGlzU2FmZUludGVnZXI6IGZ1bmN0aW9uIGlzU2FmZUludGVnZXIobnVtYmVyKSB7XG4gICAgcmV0dXJuIGlzSW50ZWdlcihudW1iZXIpICYmIGFicyhudW1iZXIpIDw9IDB4MWZmZmZmZmZmZmZmZmY7XG4gIH1cbn0pO1xuIiwiLy8gMjAuMS4yLjYgTnVtYmVyLk1BWF9TQUZFX0lOVEVHRVJcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnTnVtYmVyJywgeyBNQVhfU0FGRV9JTlRFR0VSOiAweDFmZmZmZmZmZmZmZmZmIH0pO1xuIiwiLy8gMjAuMS4yLjEwIE51bWJlci5NSU5fU0FGRV9JTlRFR0VSXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ051bWJlcicsIHsgTUlOX1NBRkVfSU5URUdFUjogLTB4MWZmZmZmZmZmZmZmZmYgfSk7XG4iLCJ2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRwYXJzZUZsb2F0ID0gcmVxdWlyZSgnLi9fcGFyc2UtZmxvYXQnKTtcbi8vIDIwLjEuMi4xMiBOdW1iZXIucGFyc2VGbG9hdChzdHJpbmcpXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqIChOdW1iZXIucGFyc2VGbG9hdCAhPSAkcGFyc2VGbG9hdCksICdOdW1iZXInLCB7IHBhcnNlRmxvYXQ6ICRwYXJzZUZsb2F0IH0pO1xuIiwidmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkcGFyc2VJbnQgPSByZXF1aXJlKCcuL19wYXJzZS1pbnQnKTtcbi8vIDIwLjEuMi4xMyBOdW1iZXIucGFyc2VJbnQoc3RyaW5nLCByYWRpeClcbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogKE51bWJlci5wYXJzZUludCAhPSAkcGFyc2VJbnQpLCAnTnVtYmVyJywgeyBwYXJzZUludDogJHBhcnNlSW50IH0pO1xuIiwiLy8gMjAuMi4yLjMgTWF0aC5hY29zaCh4KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBsb2cxcCA9IHJlcXVpcmUoJy4vX21hdGgtbG9nMXAnKTtcbnZhciBzcXJ0ID0gTWF0aC5zcXJ0O1xudmFyICRhY29zaCA9IE1hdGguYWNvc2g7XG5cbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogISgkYWNvc2hcbiAgLy8gVjggYnVnOiBodHRwczovL2NvZGUuZ29vZ2xlLmNvbS9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzUwOVxuICAmJiBNYXRoLmZsb29yKCRhY29zaChOdW1iZXIuTUFYX1ZBTFVFKSkgPT0gNzEwXG4gIC8vIFRvciBCcm93c2VyIGJ1ZzogTWF0aC5hY29zaChJbmZpbml0eSkgLT4gTmFOXG4gICYmICRhY29zaChJbmZpbml0eSkgPT0gSW5maW5pdHlcbiksICdNYXRoJywge1xuICBhY29zaDogZnVuY3Rpb24gYWNvc2goeCkge1xuICAgIHJldHVybiAoeCA9ICt4KSA8IDEgPyBOYU4gOiB4ID4gOTQ5MDYyNjUuNjI0MjUxNTZcbiAgICAgID8gTWF0aC5sb2coeCkgKyBNYXRoLkxOMlxuICAgICAgOiBsb2cxcCh4IC0gMSArIHNxcnQoeCAtIDEpICogc3FydCh4ICsgMSkpO1xuICB9XG59KTtcbiIsIi8vIDIwLjIuMi41IE1hdGguYXNpbmgoeClcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgJGFzaW5oID0gTWF0aC5hc2luaDtcblxuZnVuY3Rpb24gYXNpbmgoeCkge1xuICByZXR1cm4gIWlzRmluaXRlKHggPSAreCkgfHwgeCA9PSAwID8geCA6IHggPCAwID8gLWFzaW5oKC14KSA6IE1hdGgubG9nKHggKyBNYXRoLnNxcnQoeCAqIHggKyAxKSk7XG59XG5cbi8vIFRvciBCcm93c2VyIGJ1ZzogTWF0aC5hc2luaCgwKSAtPiAtMFxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAhKCRhc2luaCAmJiAxIC8gJGFzaW5oKDApID4gMCksICdNYXRoJywgeyBhc2luaDogYXNpbmggfSk7XG4iLCIvLyAyMC4yLjIuNyBNYXRoLmF0YW5oKHgpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRhdGFuaCA9IE1hdGguYXRhbmg7XG5cbi8vIFRvciBCcm93c2VyIGJ1ZzogTWF0aC5hdGFuaCgtMCkgLT4gMFxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAhKCRhdGFuaCAmJiAxIC8gJGF0YW5oKC0wKSA8IDApLCAnTWF0aCcsIHtcbiAgYXRhbmg6IGZ1bmN0aW9uIGF0YW5oKHgpIHtcbiAgICByZXR1cm4gKHggPSAreCkgPT0gMCA/IHggOiBNYXRoLmxvZygoMSArIHgpIC8gKDEgLSB4KSkgLyAyO1xuICB9XG59KTtcbiIsIi8vIDIwLjIuMi45IE1hdGguY2JydCh4KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBzaWduID0gcmVxdWlyZSgnLi9fbWF0aC1zaWduJyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnTWF0aCcsIHtcbiAgY2JydDogZnVuY3Rpb24gY2JydCh4KSB7XG4gICAgcmV0dXJuIHNpZ24oeCA9ICt4KSAqIE1hdGgucG93KE1hdGguYWJzKHgpLCAxIC8gMyk7XG4gIH1cbn0pO1xuIiwiLy8gMjAuMi4yLjExIE1hdGguY2x6MzIoeClcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnTWF0aCcsIHtcbiAgY2x6MzI6IGZ1bmN0aW9uIGNsejMyKHgpIHtcbiAgICByZXR1cm4gKHggPj4+PSAwKSA/IDMxIC0gTWF0aC5mbG9vcihNYXRoLmxvZyh4ICsgMC41KSAqIE1hdGguTE9HMkUpIDogMzI7XG4gIH1cbn0pO1xuIiwiLy8gMjAuMi4yLjEyIE1hdGguY29zaCh4KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBleHAgPSBNYXRoLmV4cDtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdNYXRoJywge1xuICBjb3NoOiBmdW5jdGlvbiBjb3NoKHgpIHtcbiAgICByZXR1cm4gKGV4cCh4ID0gK3gpICsgZXhwKC14KSkgLyAyO1xuICB9XG59KTtcbiIsIi8vIDIwLjIuMi4xNCBNYXRoLmV4cG0xKHgpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRleHBtMSA9IHJlcXVpcmUoJy4vX21hdGgtZXhwbTEnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAoJGV4cG0xICE9IE1hdGguZXhwbTEpLCAnTWF0aCcsIHsgZXhwbTE6ICRleHBtMSB9KTtcbiIsIi8vIDIwLjIuMi4xNiBNYXRoLmZyb3VuZCh4KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdNYXRoJywgeyBmcm91bmQ6IHJlcXVpcmUoJy4vX21hdGgtZnJvdW5kJykgfSk7XG4iLCIvLyAyMC4yLjIuMTcgTWF0aC5oeXBvdChbdmFsdWUxWywgdmFsdWUyWywg4oCmIF1dXSlcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgYWJzID0gTWF0aC5hYnM7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnTWF0aCcsIHtcbiAgaHlwb3Q6IGZ1bmN0aW9uIGh5cG90KHZhbHVlMSwgdmFsdWUyKSB7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW51c2VkLXZhcnNcbiAgICB2YXIgc3VtID0gMDtcbiAgICB2YXIgaSA9IDA7XG4gICAgdmFyIGFMZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgIHZhciBsYXJnID0gMDtcbiAgICB2YXIgYXJnLCBkaXY7XG4gICAgd2hpbGUgKGkgPCBhTGVuKSB7XG4gICAgICBhcmcgPSBhYnMoYXJndW1lbnRzW2krK10pO1xuICAgICAgaWYgKGxhcmcgPCBhcmcpIHtcbiAgICAgICAgZGl2ID0gbGFyZyAvIGFyZztcbiAgICAgICAgc3VtID0gc3VtICogZGl2ICogZGl2ICsgMTtcbiAgICAgICAgbGFyZyA9IGFyZztcbiAgICAgIH0gZWxzZSBpZiAoYXJnID4gMCkge1xuICAgICAgICBkaXYgPSBhcmcgLyBsYXJnO1xuICAgICAgICBzdW0gKz0gZGl2ICogZGl2O1xuICAgICAgfSBlbHNlIHN1bSArPSBhcmc7XG4gICAgfVxuICAgIHJldHVybiBsYXJnID09PSBJbmZpbml0eSA/IEluZmluaXR5IDogbGFyZyAqIE1hdGguc3FydChzdW0pO1xuICB9XG59KTtcbiIsIi8vIDIwLjIuMi4xOCBNYXRoLmltdWwoeCwgeSlcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgJGltdWwgPSBNYXRoLmltdWw7XG5cbi8vIHNvbWUgV2ViS2l0IHZlcnNpb25zIGZhaWxzIHdpdGggYmlnIG51bWJlcnMsIHNvbWUgaGFzIHdyb25nIGFyaXR5XG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqIHJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24gKCkge1xuICByZXR1cm4gJGltdWwoMHhmZmZmZmZmZiwgNSkgIT0gLTUgfHwgJGltdWwubGVuZ3RoICE9IDI7XG59KSwgJ01hdGgnLCB7XG4gIGltdWw6IGZ1bmN0aW9uIGltdWwoeCwgeSkge1xuICAgIHZhciBVSU5UMTYgPSAweGZmZmY7XG4gICAgdmFyIHhuID0gK3g7XG4gICAgdmFyIHluID0gK3k7XG4gICAgdmFyIHhsID0gVUlOVDE2ICYgeG47XG4gICAgdmFyIHlsID0gVUlOVDE2ICYgeW47XG4gICAgcmV0dXJuIDAgfCB4bCAqIHlsICsgKChVSU5UMTYgJiB4biA+Pj4gMTYpICogeWwgKyB4bCAqIChVSU5UMTYgJiB5biA+Pj4gMTYpIDw8IDE2ID4+PiAwKTtcbiAgfVxufSk7XG4iLCIvLyAyMC4yLjIuMjEgTWF0aC5sb2cxMCh4KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdNYXRoJywge1xuICBsb2cxMDogZnVuY3Rpb24gbG9nMTAoeCkge1xuICAgIHJldHVybiBNYXRoLmxvZyh4KSAqIE1hdGguTE9HMTBFO1xuICB9XG59KTtcbiIsIi8vIDIwLjIuMi4yMCBNYXRoLmxvZzFwKHgpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ01hdGgnLCB7IGxvZzFwOiByZXF1aXJlKCcuL19tYXRoLWxvZzFwJykgfSk7XG4iLCIvLyAyMC4yLjIuMjIgTWF0aC5sb2cyKHgpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ01hdGgnLCB7XG4gIGxvZzI6IGZ1bmN0aW9uIGxvZzIoeCkge1xuICAgIHJldHVybiBNYXRoLmxvZyh4KSAvIE1hdGguTE4yO1xuICB9XG59KTtcbiIsIi8vIDIwLjIuMi4yOCBNYXRoLnNpZ24oeClcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnTWF0aCcsIHsgc2lnbjogcmVxdWlyZSgnLi9fbWF0aC1zaWduJykgfSk7XG4iLCIvLyAyMC4yLjIuMzAgTWF0aC5zaW5oKHgpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGV4cG0xID0gcmVxdWlyZSgnLi9fbWF0aC1leHBtMScpO1xudmFyIGV4cCA9IE1hdGguZXhwO1xuXG4vLyBWOCBuZWFyIENocm9taXVtIDM4IGhhcyBhIHByb2JsZW0gd2l0aCB2ZXJ5IHNtYWxsIG51bWJlcnNcbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogcmVxdWlyZSgnLi9fZmFpbHMnKShmdW5jdGlvbiAoKSB7XG4gIHJldHVybiAhTWF0aC5zaW5oKC0yZS0xNykgIT0gLTJlLTE3O1xufSksICdNYXRoJywge1xuICBzaW5oOiBmdW5jdGlvbiBzaW5oKHgpIHtcbiAgICByZXR1cm4gTWF0aC5hYnMoeCA9ICt4KSA8IDFcbiAgICAgID8gKGV4cG0xKHgpIC0gZXhwbTEoLXgpKSAvIDJcbiAgICAgIDogKGV4cCh4IC0gMSkgLSBleHAoLXggLSAxKSkgKiAoTWF0aC5FIC8gMik7XG4gIH1cbn0pO1xuIiwiLy8gMjAuMi4yLjMzIE1hdGgudGFuaCh4KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBleHBtMSA9IHJlcXVpcmUoJy4vX21hdGgtZXhwbTEnKTtcbnZhciBleHAgPSBNYXRoLmV4cDtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdNYXRoJywge1xuICB0YW5oOiBmdW5jdGlvbiB0YW5oKHgpIHtcbiAgICB2YXIgYSA9IGV4cG0xKHggPSAreCk7XG4gICAgdmFyIGIgPSBleHBtMSgteCk7XG4gICAgcmV0dXJuIGEgPT0gSW5maW5pdHkgPyAxIDogYiA9PSBJbmZpbml0eSA/IC0xIDogKGEgLSBiKSAvIChleHAoeCkgKyBleHAoLXgpKTtcbiAgfVxufSk7XG4iLCIvLyAyMC4yLjIuMzQgTWF0aC50cnVuYyh4KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdNYXRoJywge1xuICB0cnVuYzogZnVuY3Rpb24gdHJ1bmMoaXQpIHtcbiAgICByZXR1cm4gKGl0ID4gMCA/IE1hdGguZmxvb3IgOiBNYXRoLmNlaWwpKGl0KTtcbiAgfVxufSk7XG4iLCJ2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIHRvQWJzb2x1dGVJbmRleCA9IHJlcXVpcmUoJy4vX3RvLWFic29sdXRlLWluZGV4Jyk7XG52YXIgZnJvbUNoYXJDb2RlID0gU3RyaW5nLmZyb21DaGFyQ29kZTtcbnZhciAkZnJvbUNvZGVQb2ludCA9IFN0cmluZy5mcm9tQ29kZVBvaW50O1xuXG4vLyBsZW5ndGggc2hvdWxkIGJlIDEsIG9sZCBGRiBwcm9ibGVtXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICghISRmcm9tQ29kZVBvaW50ICYmICRmcm9tQ29kZVBvaW50Lmxlbmd0aCAhPSAxKSwgJ1N0cmluZycsIHtcbiAgLy8gMjEuMS4yLjIgU3RyaW5nLmZyb21Db2RlUG9pbnQoLi4uY29kZVBvaW50cylcbiAgZnJvbUNvZGVQb2ludDogZnVuY3Rpb24gZnJvbUNvZGVQb2ludCh4KSB7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW51c2VkLXZhcnNcbiAgICB2YXIgcmVzID0gW107XG4gICAgdmFyIGFMZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgIHZhciBpID0gMDtcbiAgICB2YXIgY29kZTtcbiAgICB3aGlsZSAoYUxlbiA+IGkpIHtcbiAgICAgIGNvZGUgPSArYXJndW1lbnRzW2krK107XG4gICAgICBpZiAodG9BYnNvbHV0ZUluZGV4KGNvZGUsIDB4MTBmZmZmKSAhPT0gY29kZSkgdGhyb3cgUmFuZ2VFcnJvcihjb2RlICsgJyBpcyBub3QgYSB2YWxpZCBjb2RlIHBvaW50Jyk7XG4gICAgICByZXMucHVzaChjb2RlIDwgMHgxMDAwMFxuICAgICAgICA/IGZyb21DaGFyQ29kZShjb2RlKVxuICAgICAgICA6IGZyb21DaGFyQ29kZSgoKGNvZGUgLT0gMHgxMDAwMCkgPj4gMTApICsgMHhkODAwLCBjb2RlICUgMHg0MDAgKyAweGRjMDApXG4gICAgICApO1xuICAgIH0gcmV0dXJuIHJlcy5qb2luKCcnKTtcbiAgfVxufSk7XG4iLCJ2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIHRvSU9iamVjdCA9IHJlcXVpcmUoJy4vX3RvLWlvYmplY3QnKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ1N0cmluZycsIHtcbiAgLy8gMjEuMS4yLjQgU3RyaW5nLnJhdyhjYWxsU2l0ZSwgLi4uc3Vic3RpdHV0aW9ucylcbiAgcmF3OiBmdW5jdGlvbiByYXcoY2FsbFNpdGUpIHtcbiAgICB2YXIgdHBsID0gdG9JT2JqZWN0KGNhbGxTaXRlLnJhdyk7XG4gICAgdmFyIGxlbiA9IHRvTGVuZ3RoKHRwbC5sZW5ndGgpO1xuICAgIHZhciBhTGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICB2YXIgcmVzID0gW107XG4gICAgdmFyIGkgPSAwO1xuICAgIHdoaWxlIChsZW4gPiBpKSB7XG4gICAgICByZXMucHVzaChTdHJpbmcodHBsW2krK10pKTtcbiAgICAgIGlmIChpIDwgYUxlbikgcmVzLnB1c2goU3RyaW5nKGFyZ3VtZW50c1tpXSkpO1xuICAgIH0gcmV0dXJuIHJlcy5qb2luKCcnKTtcbiAgfVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG4vLyAyMS4xLjMuMjUgU3RyaW5nLnByb3RvdHlwZS50cmltKClcbnJlcXVpcmUoJy4vX3N0cmluZy10cmltJykoJ3RyaW0nLCBmdW5jdGlvbiAoJHRyaW0pIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIHRyaW0oKSB7XG4gICAgcmV0dXJuICR0cmltKHRoaXMsIDMpO1xuICB9O1xufSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJGF0ID0gcmVxdWlyZSgnLi9fc3RyaW5nLWF0JykodHJ1ZSk7XG5cbi8vIDIxLjEuMy4yNyBTdHJpbmcucHJvdG90eXBlW0BAaXRlcmF0b3JdKClcbnJlcXVpcmUoJy4vX2l0ZXItZGVmaW5lJykoU3RyaW5nLCAnU3RyaW5nJywgZnVuY3Rpb24gKGl0ZXJhdGVkKSB7XG4gIHRoaXMuX3QgPSBTdHJpbmcoaXRlcmF0ZWQpOyAvLyB0YXJnZXRcbiAgdGhpcy5faSA9IDA7ICAgICAgICAgICAgICAgIC8vIG5leHQgaW5kZXhcbi8vIDIxLjEuNS4yLjEgJVN0cmluZ0l0ZXJhdG9yUHJvdG90eXBlJS5uZXh0KClcbn0sIGZ1bmN0aW9uICgpIHtcbiAgdmFyIE8gPSB0aGlzLl90O1xuICB2YXIgaW5kZXggPSB0aGlzLl9pO1xuICB2YXIgcG9pbnQ7XG4gIGlmIChpbmRleCA+PSBPLmxlbmd0aCkgcmV0dXJuIHsgdmFsdWU6IHVuZGVmaW5lZCwgZG9uZTogdHJ1ZSB9O1xuICBwb2ludCA9ICRhdChPLCBpbmRleCk7XG4gIHRoaXMuX2kgKz0gcG9pbnQubGVuZ3RoO1xuICByZXR1cm4geyB2YWx1ZTogcG9pbnQsIGRvbmU6IGZhbHNlIH07XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgJGF0ID0gcmVxdWlyZSgnLi9fc3RyaW5nLWF0JykoZmFsc2UpO1xuJGV4cG9ydCgkZXhwb3J0LlAsICdTdHJpbmcnLCB7XG4gIC8vIDIxLjEuMy4zIFN0cmluZy5wcm90b3R5cGUuY29kZVBvaW50QXQocG9zKVxuICBjb2RlUG9pbnRBdDogZnVuY3Rpb24gY29kZVBvaW50QXQocG9zKSB7XG4gICAgcmV0dXJuICRhdCh0aGlzLCBwb3MpO1xuICB9XG59KTtcbiIsIi8vIDIxLjEuMy42IFN0cmluZy5wcm90b3R5cGUuZW5kc1dpdGgoc2VhcmNoU3RyaW5nIFssIGVuZFBvc2l0aW9uXSlcbid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcbnZhciBjb250ZXh0ID0gcmVxdWlyZSgnLi9fc3RyaW5nLWNvbnRleHQnKTtcbnZhciBFTkRTX1dJVEggPSAnZW5kc1dpdGgnO1xudmFyICRlbmRzV2l0aCA9ICcnW0VORFNfV0lUSF07XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogcmVxdWlyZSgnLi9fZmFpbHMtaXMtcmVnZXhwJykoRU5EU19XSVRIKSwgJ1N0cmluZycsIHtcbiAgZW5kc1dpdGg6IGZ1bmN0aW9uIGVuZHNXaXRoKHNlYXJjaFN0cmluZyAvKiAsIGVuZFBvc2l0aW9uID0gQGxlbmd0aCAqLykge1xuICAgIHZhciB0aGF0ID0gY29udGV4dCh0aGlzLCBzZWFyY2hTdHJpbmcsIEVORFNfV0lUSCk7XG4gICAgdmFyIGVuZFBvc2l0aW9uID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQ7XG4gICAgdmFyIGxlbiA9IHRvTGVuZ3RoKHRoYXQubGVuZ3RoKTtcbiAgICB2YXIgZW5kID0gZW5kUG9zaXRpb24gPT09IHVuZGVmaW5lZCA/IGxlbiA6IE1hdGgubWluKHRvTGVuZ3RoKGVuZFBvc2l0aW9uKSwgbGVuKTtcbiAgICB2YXIgc2VhcmNoID0gU3RyaW5nKHNlYXJjaFN0cmluZyk7XG4gICAgcmV0dXJuICRlbmRzV2l0aFxuICAgICAgPyAkZW5kc1dpdGguY2FsbCh0aGF0LCBzZWFyY2gsIGVuZClcbiAgICAgIDogdGhhdC5zbGljZShlbmQgLSBzZWFyY2gubGVuZ3RoLCBlbmQpID09PSBzZWFyY2g7XG4gIH1cbn0pO1xuIiwiLy8gMjEuMS4zLjcgU3RyaW5nLnByb3RvdHlwZS5pbmNsdWRlcyhzZWFyY2hTdHJpbmcsIHBvc2l0aW9uID0gMClcbid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgY29udGV4dCA9IHJlcXVpcmUoJy4vX3N0cmluZy1jb250ZXh0Jyk7XG52YXIgSU5DTFVERVMgPSAnaW5jbHVkZXMnO1xuXG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqIHJlcXVpcmUoJy4vX2ZhaWxzLWlzLXJlZ2V4cCcpKElOQ0xVREVTKSwgJ1N0cmluZycsIHtcbiAgaW5jbHVkZXM6IGZ1bmN0aW9uIGluY2x1ZGVzKHNlYXJjaFN0cmluZyAvKiAsIHBvc2l0aW9uID0gMCAqLykge1xuICAgIHJldHVybiAhIX5jb250ZXh0KHRoaXMsIHNlYXJjaFN0cmluZywgSU5DTFVERVMpXG4gICAgICAuaW5kZXhPZihzZWFyY2hTdHJpbmcsIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkKTtcbiAgfVxufSk7XG4iLCJ2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUCwgJ1N0cmluZycsIHtcbiAgLy8gMjEuMS4zLjEzIFN0cmluZy5wcm90b3R5cGUucmVwZWF0KGNvdW50KVxuICByZXBlYXQ6IHJlcXVpcmUoJy4vX3N0cmluZy1yZXBlYXQnKVxufSk7XG4iLCIvLyAyMS4xLjMuMTggU3RyaW5nLnByb3RvdHlwZS5zdGFydHNXaXRoKHNlYXJjaFN0cmluZyBbLCBwb3NpdGlvbiBdKVxuJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xudmFyIGNvbnRleHQgPSByZXF1aXJlKCcuL19zdHJpbmctY29udGV4dCcpO1xudmFyIFNUQVJUU19XSVRIID0gJ3N0YXJ0c1dpdGgnO1xudmFyICRzdGFydHNXaXRoID0gJydbU1RBUlRTX1dJVEhdO1xuXG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqIHJlcXVpcmUoJy4vX2ZhaWxzLWlzLXJlZ2V4cCcpKFNUQVJUU19XSVRIKSwgJ1N0cmluZycsIHtcbiAgc3RhcnRzV2l0aDogZnVuY3Rpb24gc3RhcnRzV2l0aChzZWFyY2hTdHJpbmcgLyogLCBwb3NpdGlvbiA9IDAgKi8pIHtcbiAgICB2YXIgdGhhdCA9IGNvbnRleHQodGhpcywgc2VhcmNoU3RyaW5nLCBTVEFSVFNfV0lUSCk7XG4gICAgdmFyIGluZGV4ID0gdG9MZW5ndGgoTWF0aC5taW4oYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQsIHRoYXQubGVuZ3RoKSk7XG4gICAgdmFyIHNlYXJjaCA9IFN0cmluZyhzZWFyY2hTdHJpbmcpO1xuICAgIHJldHVybiAkc3RhcnRzV2l0aFxuICAgICAgPyAkc3RhcnRzV2l0aC5jYWxsKHRoYXQsIHNlYXJjaCwgaW5kZXgpXG4gICAgICA6IHRoYXQuc2xpY2UoaW5kZXgsIGluZGV4ICsgc2VhcmNoLmxlbmd0aCkgPT09IHNlYXJjaDtcbiAgfVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG4vLyBCLjIuMy4yIFN0cmluZy5wcm90b3R5cGUuYW5jaG9yKG5hbWUpXG5yZXF1aXJlKCcuL19zdHJpbmctaHRtbCcpKCdhbmNob3InLCBmdW5jdGlvbiAoY3JlYXRlSFRNTCkge1xuICByZXR1cm4gZnVuY3Rpb24gYW5jaG9yKG5hbWUpIHtcbiAgICByZXR1cm4gY3JlYXRlSFRNTCh0aGlzLCAnYScsICduYW1lJywgbmFtZSk7XG4gIH07XG59KTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIEIuMi4zLjMgU3RyaW5nLnByb3RvdHlwZS5iaWcoKVxucmVxdWlyZSgnLi9fc3RyaW5nLWh0bWwnKSgnYmlnJywgZnVuY3Rpb24gKGNyZWF0ZUhUTUwpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGJpZygpIHtcbiAgICByZXR1cm4gY3JlYXRlSFRNTCh0aGlzLCAnYmlnJywgJycsICcnKTtcbiAgfTtcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gQi4yLjMuNCBTdHJpbmcucHJvdG90eXBlLmJsaW5rKClcbnJlcXVpcmUoJy4vX3N0cmluZy1odG1sJykoJ2JsaW5rJywgZnVuY3Rpb24gKGNyZWF0ZUhUTUwpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGJsaW5rKCkge1xuICAgIHJldHVybiBjcmVhdGVIVE1MKHRoaXMsICdibGluaycsICcnLCAnJyk7XG4gIH07XG59KTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIEIuMi4zLjUgU3RyaW5nLnByb3RvdHlwZS5ib2xkKClcbnJlcXVpcmUoJy4vX3N0cmluZy1odG1sJykoJ2JvbGQnLCBmdW5jdGlvbiAoY3JlYXRlSFRNTCkge1xuICByZXR1cm4gZnVuY3Rpb24gYm9sZCgpIHtcbiAgICByZXR1cm4gY3JlYXRlSFRNTCh0aGlzLCAnYicsICcnLCAnJyk7XG4gIH07XG59KTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIEIuMi4zLjYgU3RyaW5nLnByb3RvdHlwZS5maXhlZCgpXG5yZXF1aXJlKCcuL19zdHJpbmctaHRtbCcpKCdmaXhlZCcsIGZ1bmN0aW9uIChjcmVhdGVIVE1MKSB7XG4gIHJldHVybiBmdW5jdGlvbiBmaXhlZCgpIHtcbiAgICByZXR1cm4gY3JlYXRlSFRNTCh0aGlzLCAndHQnLCAnJywgJycpO1xuICB9O1xufSk7XG4iLCIndXNlIHN0cmljdCc7XG4vLyBCLjIuMy43IFN0cmluZy5wcm90b3R5cGUuZm9udGNvbG9yKGNvbG9yKVxucmVxdWlyZSgnLi9fc3RyaW5nLWh0bWwnKSgnZm9udGNvbG9yJywgZnVuY3Rpb24gKGNyZWF0ZUhUTUwpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGZvbnRjb2xvcihjb2xvcikge1xuICAgIHJldHVybiBjcmVhdGVIVE1MKHRoaXMsICdmb250JywgJ2NvbG9yJywgY29sb3IpO1xuICB9O1xufSk7XG4iLCIndXNlIHN0cmljdCc7XG4vLyBCLjIuMy44IFN0cmluZy5wcm90b3R5cGUuZm9udHNpemUoc2l6ZSlcbnJlcXVpcmUoJy4vX3N0cmluZy1odG1sJykoJ2ZvbnRzaXplJywgZnVuY3Rpb24gKGNyZWF0ZUhUTUwpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGZvbnRzaXplKHNpemUpIHtcbiAgICByZXR1cm4gY3JlYXRlSFRNTCh0aGlzLCAnZm9udCcsICdzaXplJywgc2l6ZSk7XG4gIH07XG59KTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIEIuMi4zLjkgU3RyaW5nLnByb3RvdHlwZS5pdGFsaWNzKClcbnJlcXVpcmUoJy4vX3N0cmluZy1odG1sJykoJ2l0YWxpY3MnLCBmdW5jdGlvbiAoY3JlYXRlSFRNTCkge1xuICByZXR1cm4gZnVuY3Rpb24gaXRhbGljcygpIHtcbiAgICByZXR1cm4gY3JlYXRlSFRNTCh0aGlzLCAnaScsICcnLCAnJyk7XG4gIH07XG59KTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIEIuMi4zLjEwIFN0cmluZy5wcm90b3R5cGUubGluayh1cmwpXG5yZXF1aXJlKCcuL19zdHJpbmctaHRtbCcpKCdsaW5rJywgZnVuY3Rpb24gKGNyZWF0ZUhUTUwpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGxpbmsodXJsKSB7XG4gICAgcmV0dXJuIGNyZWF0ZUhUTUwodGhpcywgJ2EnLCAnaHJlZicsIHVybCk7XG4gIH07XG59KTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIEIuMi4zLjExIFN0cmluZy5wcm90b3R5cGUuc21hbGwoKVxucmVxdWlyZSgnLi9fc3RyaW5nLWh0bWwnKSgnc21hbGwnLCBmdW5jdGlvbiAoY3JlYXRlSFRNTCkge1xuICByZXR1cm4gZnVuY3Rpb24gc21hbGwoKSB7XG4gICAgcmV0dXJuIGNyZWF0ZUhUTUwodGhpcywgJ3NtYWxsJywgJycsICcnKTtcbiAgfTtcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gQi4yLjMuMTIgU3RyaW5nLnByb3RvdHlwZS5zdHJpa2UoKVxucmVxdWlyZSgnLi9fc3RyaW5nLWh0bWwnKSgnc3RyaWtlJywgZnVuY3Rpb24gKGNyZWF0ZUhUTUwpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIHN0cmlrZSgpIHtcbiAgICByZXR1cm4gY3JlYXRlSFRNTCh0aGlzLCAnc3RyaWtlJywgJycsICcnKTtcbiAgfTtcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gQi4yLjMuMTMgU3RyaW5nLnByb3RvdHlwZS5zdWIoKVxucmVxdWlyZSgnLi9fc3RyaW5nLWh0bWwnKSgnc3ViJywgZnVuY3Rpb24gKGNyZWF0ZUhUTUwpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIHN1YigpIHtcbiAgICByZXR1cm4gY3JlYXRlSFRNTCh0aGlzLCAnc3ViJywgJycsICcnKTtcbiAgfTtcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gQi4yLjMuMTQgU3RyaW5nLnByb3RvdHlwZS5zdXAoKVxucmVxdWlyZSgnLi9fc3RyaW5nLWh0bWwnKSgnc3VwJywgZnVuY3Rpb24gKGNyZWF0ZUhUTUwpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIHN1cCgpIHtcbiAgICByZXR1cm4gY3JlYXRlSFRNTCh0aGlzLCAnc3VwJywgJycsICcnKTtcbiAgfTtcbn0pO1xuIiwiLy8gMjAuMy4zLjEgLyAxNS45LjQuNCBEYXRlLm5vdygpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ0RhdGUnLCB7IG5vdzogZnVuY3Rpb24gKCkgeyByZXR1cm4gbmV3IERhdGUoKS5nZXRUaW1lKCk7IH0gfSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8tb2JqZWN0Jyk7XG52YXIgdG9QcmltaXRpdmUgPSByZXF1aXJlKCcuL190by1wcmltaXRpdmUnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiByZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIG5ldyBEYXRlKE5hTikudG9KU09OKCkgIT09IG51bGxcbiAgICB8fCBEYXRlLnByb3RvdHlwZS50b0pTT04uY2FsbCh7IHRvSVNPU3RyaW5nOiBmdW5jdGlvbiAoKSB7IHJldHVybiAxOyB9IH0pICE9PSAxO1xufSksICdEYXRlJywge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnNcbiAgdG9KU09OOiBmdW5jdGlvbiB0b0pTT04oa2V5KSB7XG4gICAgdmFyIE8gPSB0b09iamVjdCh0aGlzKTtcbiAgICB2YXIgcHYgPSB0b1ByaW1pdGl2ZShPKTtcbiAgICByZXR1cm4gdHlwZW9mIHB2ID09ICdudW1iZXInICYmICFpc0Zpbml0ZShwdikgPyBudWxsIDogTy50b0lTT1N0cmluZygpO1xuICB9XG59KTtcbiIsIi8vIDIwLjMuNC4zNiAvIDE1LjkuNS40MyBEYXRlLnByb3RvdHlwZS50b0lTT1N0cmluZygpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIHRvSVNPU3RyaW5nID0gcmVxdWlyZSgnLi9fZGF0ZS10by1pc28tc3RyaW5nJyk7XG5cbi8vIFBoYW50b21KUyAvIG9sZCBXZWJLaXQgaGFzIGEgYnJva2VuIGltcGxlbWVudGF0aW9uc1xuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiAoRGF0ZS5wcm90b3R5cGUudG9JU09TdHJpbmcgIT09IHRvSVNPU3RyaW5nKSwgJ0RhdGUnLCB7XG4gIHRvSVNPU3RyaW5nOiB0b0lTT1N0cmluZ1xufSk7XG4iLCIndXNlIHN0cmljdCc7XG4vLyAyMC4zLjQuMzYgLyAxNS45LjUuNDMgRGF0ZS5wcm90b3R5cGUudG9JU09TdHJpbmcoKVxudmFyIGZhaWxzID0gcmVxdWlyZSgnLi9fZmFpbHMnKTtcbnZhciBnZXRUaW1lID0gRGF0ZS5wcm90b3R5cGUuZ2V0VGltZTtcbnZhciAkdG9JU09TdHJpbmcgPSBEYXRlLnByb3RvdHlwZS50b0lTT1N0cmluZztcblxudmFyIGx6ID0gZnVuY3Rpb24gKG51bSkge1xuICByZXR1cm4gbnVtID4gOSA/IG51bSA6ICcwJyArIG51bTtcbn07XG5cbi8vIFBoYW50b21KUyAvIG9sZCBXZWJLaXQgaGFzIGEgYnJva2VuIGltcGxlbWVudGF0aW9uc1xubW9kdWxlLmV4cG9ydHMgPSAoZmFpbHMoZnVuY3Rpb24gKCkge1xuICByZXR1cm4gJHRvSVNPU3RyaW5nLmNhbGwobmV3IERhdGUoLTVlMTMgLSAxKSkgIT0gJzAzODUtMDctMjVUMDc6MDY6MzkuOTk5Wic7XG59KSB8fCAhZmFpbHMoZnVuY3Rpb24gKCkge1xuICAkdG9JU09TdHJpbmcuY2FsbChuZXcgRGF0ZShOYU4pKTtcbn0pKSA/IGZ1bmN0aW9uIHRvSVNPU3RyaW5nKCkge1xuICBpZiAoIWlzRmluaXRlKGdldFRpbWUuY2FsbCh0aGlzKSkpIHRocm93IFJhbmdlRXJyb3IoJ0ludmFsaWQgdGltZSB2YWx1ZScpO1xuICB2YXIgZCA9IHRoaXM7XG4gIHZhciB5ID0gZC5nZXRVVENGdWxsWWVhcigpO1xuICB2YXIgbSA9IGQuZ2V0VVRDTWlsbGlzZWNvbmRzKCk7XG4gIHZhciBzID0geSA8IDAgPyAnLScgOiB5ID4gOTk5OSA/ICcrJyA6ICcnO1xuICByZXR1cm4gcyArICgnMDAwMDAnICsgTWF0aC5hYnMoeSkpLnNsaWNlKHMgPyAtNiA6IC00KSArXG4gICAgJy0nICsgbHooZC5nZXRVVENNb250aCgpICsgMSkgKyAnLScgKyBseihkLmdldFVUQ0RhdGUoKSkgK1xuICAgICdUJyArIGx6KGQuZ2V0VVRDSG91cnMoKSkgKyAnOicgKyBseihkLmdldFVUQ01pbnV0ZXMoKSkgK1xuICAgICc6JyArIGx6KGQuZ2V0VVRDU2Vjb25kcygpKSArICcuJyArIChtID4gOTkgPyBtIDogJzAnICsgbHoobSkpICsgJ1onO1xufSA6ICR0b0lTT1N0cmluZztcbiIsInZhciBEYXRlUHJvdG8gPSBEYXRlLnByb3RvdHlwZTtcbnZhciBJTlZBTElEX0RBVEUgPSAnSW52YWxpZCBEYXRlJztcbnZhciBUT19TVFJJTkcgPSAndG9TdHJpbmcnO1xudmFyICR0b1N0cmluZyA9IERhdGVQcm90b1tUT19TVFJJTkddO1xudmFyIGdldFRpbWUgPSBEYXRlUHJvdG8uZ2V0VGltZTtcbmlmIChuZXcgRGF0ZShOYU4pICsgJycgIT0gSU5WQUxJRF9EQVRFKSB7XG4gIHJlcXVpcmUoJy4vX3JlZGVmaW5lJykoRGF0ZVByb3RvLCBUT19TVFJJTkcsIGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHZhciB2YWx1ZSA9IGdldFRpbWUuY2FsbCh0aGlzKTtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tc2VsZi1jb21wYXJlXG4gICAgcmV0dXJuIHZhbHVlID09PSB2YWx1ZSA/ICR0b1N0cmluZy5jYWxsKHRoaXMpIDogSU5WQUxJRF9EQVRFO1xuICB9KTtcbn1cbiIsInZhciBUT19QUklNSVRJVkUgPSByZXF1aXJlKCcuL193a3MnKSgndG9QcmltaXRpdmUnKTtcbnZhciBwcm90byA9IERhdGUucHJvdG90eXBlO1xuXG5pZiAoIShUT19QUklNSVRJVkUgaW4gcHJvdG8pKSByZXF1aXJlKCcuL19oaWRlJykocHJvdG8sIFRPX1BSSU1JVElWRSwgcmVxdWlyZSgnLi9fZGF0ZS10by1wcmltaXRpdmUnKSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciB0b1ByaW1pdGl2ZSA9IHJlcXVpcmUoJy4vX3RvLXByaW1pdGl2ZScpO1xudmFyIE5VTUJFUiA9ICdudW1iZXInO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChoaW50KSB7XG4gIGlmIChoaW50ICE9PSAnc3RyaW5nJyAmJiBoaW50ICE9PSBOVU1CRVIgJiYgaGludCAhPT0gJ2RlZmF1bHQnKSB0aHJvdyBUeXBlRXJyb3IoJ0luY29ycmVjdCBoaW50Jyk7XG4gIHJldHVybiB0b1ByaW1pdGl2ZShhbk9iamVjdCh0aGlzKSwgaGludCAhPSBOVU1CRVIpO1xufTtcbiIsIi8vIDIyLjEuMi4yIC8gMTUuNC4zLjIgQXJyYXkuaXNBcnJheShhcmcpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ0FycmF5JywgeyBpc0FycmF5OiByZXF1aXJlKCcuL19pcy1hcnJheScpIH0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGN0eCA9IHJlcXVpcmUoJy4vX2N0eCcpO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpO1xudmFyIGNhbGwgPSByZXF1aXJlKCcuL19pdGVyLWNhbGwnKTtcbnZhciBpc0FycmF5SXRlciA9IHJlcXVpcmUoJy4vX2lzLWFycmF5LWl0ZXInKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xudmFyIGNyZWF0ZVByb3BlcnR5ID0gcmVxdWlyZSgnLi9fY3JlYXRlLXByb3BlcnR5Jyk7XG52YXIgZ2V0SXRlckZuID0gcmVxdWlyZSgnLi9jb3JlLmdldC1pdGVyYXRvci1tZXRob2QnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAhcmVxdWlyZSgnLi9faXRlci1kZXRlY3QnKShmdW5jdGlvbiAoaXRlcikgeyBBcnJheS5mcm9tKGl0ZXIpOyB9KSwgJ0FycmF5Jywge1xuICAvLyAyMi4xLjIuMSBBcnJheS5mcm9tKGFycmF5TGlrZSwgbWFwZm4gPSB1bmRlZmluZWQsIHRoaXNBcmcgPSB1bmRlZmluZWQpXG4gIGZyb206IGZ1bmN0aW9uIGZyb20oYXJyYXlMaWtlIC8qICwgbWFwZm4gPSB1bmRlZmluZWQsIHRoaXNBcmcgPSB1bmRlZmluZWQgKi8pIHtcbiAgICB2YXIgTyA9IHRvT2JqZWN0KGFycmF5TGlrZSk7XG4gICAgdmFyIEMgPSB0eXBlb2YgdGhpcyA9PSAnZnVuY3Rpb24nID8gdGhpcyA6IEFycmF5O1xuICAgIHZhciBhTGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICB2YXIgbWFwZm4gPSBhTGVuID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZDtcbiAgICB2YXIgbWFwcGluZyA9IG1hcGZuICE9PSB1bmRlZmluZWQ7XG4gICAgdmFyIGluZGV4ID0gMDtcbiAgICB2YXIgaXRlckZuID0gZ2V0SXRlckZuKE8pO1xuICAgIHZhciBsZW5ndGgsIHJlc3VsdCwgc3RlcCwgaXRlcmF0b3I7XG4gICAgaWYgKG1hcHBpbmcpIG1hcGZuID0gY3R4KG1hcGZuLCBhTGVuID4gMiA/IGFyZ3VtZW50c1syXSA6IHVuZGVmaW5lZCwgMik7XG4gICAgLy8gaWYgb2JqZWN0IGlzbid0IGl0ZXJhYmxlIG9yIGl0J3MgYXJyYXkgd2l0aCBkZWZhdWx0IGl0ZXJhdG9yIC0gdXNlIHNpbXBsZSBjYXNlXG4gICAgaWYgKGl0ZXJGbiAhPSB1bmRlZmluZWQgJiYgIShDID09IEFycmF5ICYmIGlzQXJyYXlJdGVyKGl0ZXJGbikpKSB7XG4gICAgICBmb3IgKGl0ZXJhdG9yID0gaXRlckZuLmNhbGwoTyksIHJlc3VsdCA9IG5ldyBDKCk7ICEoc3RlcCA9IGl0ZXJhdG9yLm5leHQoKSkuZG9uZTsgaW5kZXgrKykge1xuICAgICAgICBjcmVhdGVQcm9wZXJ0eShyZXN1bHQsIGluZGV4LCBtYXBwaW5nID8gY2FsbChpdGVyYXRvciwgbWFwZm4sIFtzdGVwLnZhbHVlLCBpbmRleF0sIHRydWUpIDogc3RlcC52YWx1ZSk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGxlbmd0aCA9IHRvTGVuZ3RoKE8ubGVuZ3RoKTtcbiAgICAgIGZvciAocmVzdWx0ID0gbmV3IEMobGVuZ3RoKTsgbGVuZ3RoID4gaW5kZXg7IGluZGV4KyspIHtcbiAgICAgICAgY3JlYXRlUHJvcGVydHkocmVzdWx0LCBpbmRleCwgbWFwcGluZyA/IG1hcGZuKE9baW5kZXhdLCBpbmRleCkgOiBPW2luZGV4XSk7XG4gICAgICB9XG4gICAgfVxuICAgIHJlc3VsdC5sZW5ndGggPSBpbmRleDtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgY3JlYXRlUHJvcGVydHkgPSByZXF1aXJlKCcuL19jcmVhdGUtcHJvcGVydHknKTtcblxuLy8gV2ViS2l0IEFycmF5Lm9mIGlzbid0IGdlbmVyaWNcbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogcmVxdWlyZSgnLi9fZmFpbHMnKShmdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIEYoKSB7IC8qIGVtcHR5ICovIH1cbiAgcmV0dXJuICEoQXJyYXkub2YuY2FsbChGKSBpbnN0YW5jZW9mIEYpO1xufSksICdBcnJheScsIHtcbiAgLy8gMjIuMS4yLjMgQXJyYXkub2YoIC4uLml0ZW1zKVxuICBvZjogZnVuY3Rpb24gb2YoLyogLi4uYXJncyAqLykge1xuICAgIHZhciBpbmRleCA9IDA7XG4gICAgdmFyIGFMZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgIHZhciByZXN1bHQgPSBuZXcgKHR5cGVvZiB0aGlzID09ICdmdW5jdGlvbicgPyB0aGlzIDogQXJyYXkpKGFMZW4pO1xuICAgIHdoaWxlIChhTGVuID4gaW5kZXgpIGNyZWF0ZVByb3BlcnR5KHJlc3VsdCwgaW5kZXgsIGFyZ3VtZW50c1tpbmRleCsrXSk7XG4gICAgcmVzdWx0Lmxlbmd0aCA9IGFMZW47XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG4vLyAyMi4xLjMuMTMgQXJyYXkucHJvdG90eXBlLmpvaW4oc2VwYXJhdG9yKVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciB0b0lPYmplY3QgPSByZXF1aXJlKCcuL190by1pb2JqZWN0Jyk7XG52YXIgYXJyYXlKb2luID0gW10uam9pbjtcblxuLy8gZmFsbGJhY2sgZm9yIG5vdCBhcnJheS1saWtlIHN0cmluZ3NcbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogKHJlcXVpcmUoJy4vX2lvYmplY3QnKSAhPSBPYmplY3QgfHwgIXJlcXVpcmUoJy4vX3N0cmljdC1tZXRob2QnKShhcnJheUpvaW4pKSwgJ0FycmF5Jywge1xuICBqb2luOiBmdW5jdGlvbiBqb2luKHNlcGFyYXRvcikge1xuICAgIHJldHVybiBhcnJheUpvaW4uY2FsbCh0b0lPYmplY3QodGhpcyksIHNlcGFyYXRvciA9PT0gdW5kZWZpbmVkID8gJywnIDogc2VwYXJhdG9yKTtcbiAgfVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGh0bWwgPSByZXF1aXJlKCcuL19odG1sJyk7XG52YXIgY29mID0gcmVxdWlyZSgnLi9fY29mJyk7XG52YXIgdG9BYnNvbHV0ZUluZGV4ID0gcmVxdWlyZSgnLi9fdG8tYWJzb2x1dGUtaW5kZXgnKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xudmFyIGFycmF5U2xpY2UgPSBbXS5zbGljZTtcblxuLy8gZmFsbGJhY2sgZm9yIG5vdCBhcnJheS1saWtlIEVTMyBzdHJpbmdzIGFuZCBET00gb2JqZWN0c1xuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiByZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uICgpIHtcbiAgaWYgKGh0bWwpIGFycmF5U2xpY2UuY2FsbChodG1sKTtcbn0pLCAnQXJyYXknLCB7XG4gIHNsaWNlOiBmdW5jdGlvbiBzbGljZShiZWdpbiwgZW5kKSB7XG4gICAgdmFyIGxlbiA9IHRvTGVuZ3RoKHRoaXMubGVuZ3RoKTtcbiAgICB2YXIga2xhc3MgPSBjb2YodGhpcyk7XG4gICAgZW5kID0gZW5kID09PSB1bmRlZmluZWQgPyBsZW4gOiBlbmQ7XG4gICAgaWYgKGtsYXNzID09ICdBcnJheScpIHJldHVybiBhcnJheVNsaWNlLmNhbGwodGhpcywgYmVnaW4sIGVuZCk7XG4gICAgdmFyIHN0YXJ0ID0gdG9BYnNvbHV0ZUluZGV4KGJlZ2luLCBsZW4pO1xuICAgIHZhciB1cFRvID0gdG9BYnNvbHV0ZUluZGV4KGVuZCwgbGVuKTtcbiAgICB2YXIgc2l6ZSA9IHRvTGVuZ3RoKHVwVG8gLSBzdGFydCk7XG4gICAgdmFyIGNsb25lZCA9IG5ldyBBcnJheShzaXplKTtcbiAgICB2YXIgaSA9IDA7XG4gICAgZm9yICg7IGkgPCBzaXplOyBpKyspIGNsb25lZFtpXSA9IGtsYXNzID09ICdTdHJpbmcnXG4gICAgICA/IHRoaXMuY2hhckF0KHN0YXJ0ICsgaSlcbiAgICAgIDogdGhpc1tzdGFydCArIGldO1xuICAgIHJldHVybiBjbG9uZWQ7XG4gIH1cbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBhRnVuY3Rpb24gPSByZXF1aXJlKCcuL19hLWZ1bmN0aW9uJyk7XG52YXIgdG9PYmplY3QgPSByZXF1aXJlKCcuL190by1vYmplY3QnKTtcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4vX2ZhaWxzJyk7XG52YXIgJHNvcnQgPSBbXS5zb3J0O1xudmFyIHRlc3QgPSBbMSwgMiwgM107XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogKGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgLy8gSUU4LVxuICB0ZXN0LnNvcnQodW5kZWZpbmVkKTtcbn0pIHx8ICFmYWlscyhmdW5jdGlvbiAoKSB7XG4gIC8vIFY4IGJ1Z1xuICB0ZXN0LnNvcnQobnVsbCk7XG4gIC8vIE9sZCBXZWJLaXRcbn0pIHx8ICFyZXF1aXJlKCcuL19zdHJpY3QtbWV0aG9kJykoJHNvcnQpKSwgJ0FycmF5Jywge1xuICAvLyAyMi4xLjMuMjUgQXJyYXkucHJvdG90eXBlLnNvcnQoY29tcGFyZWZuKVxuICBzb3J0OiBmdW5jdGlvbiBzb3J0KGNvbXBhcmVmbikge1xuICAgIHJldHVybiBjb21wYXJlZm4gPT09IHVuZGVmaW5lZFxuICAgICAgPyAkc29ydC5jYWxsKHRvT2JqZWN0KHRoaXMpKVxuICAgICAgOiAkc29ydC5jYWxsKHRvT2JqZWN0KHRoaXMpLCBhRnVuY3Rpb24oY29tcGFyZWZuKSk7XG4gIH1cbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkZm9yRWFjaCA9IHJlcXVpcmUoJy4vX2FycmF5LW1ldGhvZHMnKSgwKTtcbnZhciBTVFJJQ1QgPSByZXF1aXJlKCcuL19zdHJpY3QtbWV0aG9kJykoW10uZm9yRWFjaCwgdHJ1ZSk7XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogIVNUUklDVCwgJ0FycmF5Jywge1xuICAvLyAyMi4xLjMuMTAgLyAxNS40LjQuMTggQXJyYXkucHJvdG90eXBlLmZvckVhY2goY2FsbGJhY2tmbiBbLCB0aGlzQXJnXSlcbiAgZm9yRWFjaDogZnVuY3Rpb24gZm9yRWFjaChjYWxsYmFja2ZuIC8qICwgdGhpc0FyZyAqLykge1xuICAgIHJldHVybiAkZm9yRWFjaCh0aGlzLCBjYWxsYmFja2ZuLCBhcmd1bWVudHNbMV0pO1xuICB9XG59KTtcbiIsInZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIGlzQXJyYXkgPSByZXF1aXJlKCcuL19pcy1hcnJheScpO1xudmFyIFNQRUNJRVMgPSByZXF1aXJlKCcuL193a3MnKSgnc3BlY2llcycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChvcmlnaW5hbCkge1xuICB2YXIgQztcbiAgaWYgKGlzQXJyYXkob3JpZ2luYWwpKSB7XG4gICAgQyA9IG9yaWdpbmFsLmNvbnN0cnVjdG9yO1xuICAgIC8vIGNyb3NzLXJlYWxtIGZhbGxiYWNrXG4gICAgaWYgKHR5cGVvZiBDID09ICdmdW5jdGlvbicgJiYgKEMgPT09IEFycmF5IHx8IGlzQXJyYXkoQy5wcm90b3R5cGUpKSkgQyA9IHVuZGVmaW5lZDtcbiAgICBpZiAoaXNPYmplY3QoQykpIHtcbiAgICAgIEMgPSBDW1NQRUNJRVNdO1xuICAgICAgaWYgKEMgPT09IG51bGwpIEMgPSB1bmRlZmluZWQ7XG4gICAgfVxuICB9IHJldHVybiBDID09PSB1bmRlZmluZWQgPyBBcnJheSA6IEM7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkbWFwID0gcmVxdWlyZSgnLi9fYXJyYXktbWV0aG9kcycpKDEpO1xuXG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqICFyZXF1aXJlKCcuL19zdHJpY3QtbWV0aG9kJykoW10ubWFwLCB0cnVlKSwgJ0FycmF5Jywge1xuICAvLyAyMi4xLjMuMTUgLyAxNS40LjQuMTkgQXJyYXkucHJvdG90eXBlLm1hcChjYWxsYmFja2ZuIFssIHRoaXNBcmddKVxuICBtYXA6IGZ1bmN0aW9uIG1hcChjYWxsYmFja2ZuIC8qICwgdGhpc0FyZyAqLykge1xuICAgIHJldHVybiAkbWFwKHRoaXMsIGNhbGxiYWNrZm4sIGFyZ3VtZW50c1sxXSk7XG4gIH1cbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkZmlsdGVyID0gcmVxdWlyZSgnLi9fYXJyYXktbWV0aG9kcycpKDIpO1xuXG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqICFyZXF1aXJlKCcuL19zdHJpY3QtbWV0aG9kJykoW10uZmlsdGVyLCB0cnVlKSwgJ0FycmF5Jywge1xuICAvLyAyMi4xLjMuNyAvIDE1LjQuNC4yMCBBcnJheS5wcm90b3R5cGUuZmlsdGVyKGNhbGxiYWNrZm4gWywgdGhpc0FyZ10pXG4gIGZpbHRlcjogZnVuY3Rpb24gZmlsdGVyKGNhbGxiYWNrZm4gLyogLCB0aGlzQXJnICovKSB7XG4gICAgcmV0dXJuICRmaWx0ZXIodGhpcywgY2FsbGJhY2tmbiwgYXJndW1lbnRzWzFdKTtcbiAgfVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRzb21lID0gcmVxdWlyZSgnLi9fYXJyYXktbWV0aG9kcycpKDMpO1xuXG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqICFyZXF1aXJlKCcuL19zdHJpY3QtbWV0aG9kJykoW10uc29tZSwgdHJ1ZSksICdBcnJheScsIHtcbiAgLy8gMjIuMS4zLjIzIC8gMTUuNC40LjE3IEFycmF5LnByb3RvdHlwZS5zb21lKGNhbGxiYWNrZm4gWywgdGhpc0FyZ10pXG4gIHNvbWU6IGZ1bmN0aW9uIHNvbWUoY2FsbGJhY2tmbiAvKiAsIHRoaXNBcmcgKi8pIHtcbiAgICByZXR1cm4gJHNvbWUodGhpcywgY2FsbGJhY2tmbiwgYXJndW1lbnRzWzFdKTtcbiAgfVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRldmVyeSA9IHJlcXVpcmUoJy4vX2FycmF5LW1ldGhvZHMnKSg0KTtcblxuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiAhcmVxdWlyZSgnLi9fc3RyaWN0LW1ldGhvZCcpKFtdLmV2ZXJ5LCB0cnVlKSwgJ0FycmF5Jywge1xuICAvLyAyMi4xLjMuNSAvIDE1LjQuNC4xNiBBcnJheS5wcm90b3R5cGUuZXZlcnkoY2FsbGJhY2tmbiBbLCB0aGlzQXJnXSlcbiAgZXZlcnk6IGZ1bmN0aW9uIGV2ZXJ5KGNhbGxiYWNrZm4gLyogLCB0aGlzQXJnICovKSB7XG4gICAgcmV0dXJuICRldmVyeSh0aGlzLCBjYWxsYmFja2ZuLCBhcmd1bWVudHNbMV0pO1xuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgJHJlZHVjZSA9IHJlcXVpcmUoJy4vX2FycmF5LXJlZHVjZScpO1xuXG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqICFyZXF1aXJlKCcuL19zdHJpY3QtbWV0aG9kJykoW10ucmVkdWNlLCB0cnVlKSwgJ0FycmF5Jywge1xuICAvLyAyMi4xLjMuMTggLyAxNS40LjQuMjEgQXJyYXkucHJvdG90eXBlLnJlZHVjZShjYWxsYmFja2ZuIFssIGluaXRpYWxWYWx1ZV0pXG4gIHJlZHVjZTogZnVuY3Rpb24gcmVkdWNlKGNhbGxiYWNrZm4gLyogLCBpbml0aWFsVmFsdWUgKi8pIHtcbiAgICByZXR1cm4gJHJlZHVjZSh0aGlzLCBjYWxsYmFja2ZuLCBhcmd1bWVudHMubGVuZ3RoLCBhcmd1bWVudHNbMV0sIGZhbHNlKTtcbiAgfVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRyZWR1Y2UgPSByZXF1aXJlKCcuL19hcnJheS1yZWR1Y2UnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiAhcmVxdWlyZSgnLi9fc3RyaWN0LW1ldGhvZCcpKFtdLnJlZHVjZVJpZ2h0LCB0cnVlKSwgJ0FycmF5Jywge1xuICAvLyAyMi4xLjMuMTkgLyAxNS40LjQuMjIgQXJyYXkucHJvdG90eXBlLnJlZHVjZVJpZ2h0KGNhbGxiYWNrZm4gWywgaW5pdGlhbFZhbHVlXSlcbiAgcmVkdWNlUmlnaHQ6IGZ1bmN0aW9uIHJlZHVjZVJpZ2h0KGNhbGxiYWNrZm4gLyogLCBpbml0aWFsVmFsdWUgKi8pIHtcbiAgICByZXR1cm4gJHJlZHVjZSh0aGlzLCBjYWxsYmFja2ZuLCBhcmd1bWVudHMubGVuZ3RoLCBhcmd1bWVudHNbMV0sIHRydWUpO1xuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgJGluZGV4T2YgPSByZXF1aXJlKCcuL19hcnJheS1pbmNsdWRlcycpKGZhbHNlKTtcbnZhciAkbmF0aXZlID0gW10uaW5kZXhPZjtcbnZhciBORUdBVElWRV9aRVJPID0gISEkbmF0aXZlICYmIDEgLyBbMV0uaW5kZXhPZigxLCAtMCkgPCAwO1xuXG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqIChORUdBVElWRV9aRVJPIHx8ICFyZXF1aXJlKCcuL19zdHJpY3QtbWV0aG9kJykoJG5hdGl2ZSkpLCAnQXJyYXknLCB7XG4gIC8vIDIyLjEuMy4xMSAvIDE1LjQuNC4xNCBBcnJheS5wcm90b3R5cGUuaW5kZXhPZihzZWFyY2hFbGVtZW50IFssIGZyb21JbmRleF0pXG4gIGluZGV4T2Y6IGZ1bmN0aW9uIGluZGV4T2Yoc2VhcmNoRWxlbWVudCAvKiAsIGZyb21JbmRleCA9IDAgKi8pIHtcbiAgICByZXR1cm4gTkVHQVRJVkVfWkVST1xuICAgICAgLy8gY29udmVydCAtMCB0byArMFxuICAgICAgPyAkbmF0aXZlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgMFxuICAgICAgOiAkaW5kZXhPZih0aGlzLCBzZWFyY2hFbGVtZW50LCBhcmd1bWVudHNbMV0pO1xuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgdG9JT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8taW9iamVjdCcpO1xudmFyIHRvSW50ZWdlciA9IHJlcXVpcmUoJy4vX3RvLWludGVnZXInKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xudmFyICRuYXRpdmUgPSBbXS5sYXN0SW5kZXhPZjtcbnZhciBORUdBVElWRV9aRVJPID0gISEkbmF0aXZlICYmIDEgLyBbMV0ubGFzdEluZGV4T2YoMSwgLTApIDwgMDtcblxuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiAoTkVHQVRJVkVfWkVSTyB8fCAhcmVxdWlyZSgnLi9fc3RyaWN0LW1ldGhvZCcpKCRuYXRpdmUpKSwgJ0FycmF5Jywge1xuICAvLyAyMi4xLjMuMTQgLyAxNS40LjQuMTUgQXJyYXkucHJvdG90eXBlLmxhc3RJbmRleE9mKHNlYXJjaEVsZW1lbnQgWywgZnJvbUluZGV4XSlcbiAgbGFzdEluZGV4T2Y6IGZ1bmN0aW9uIGxhc3RJbmRleE9mKHNlYXJjaEVsZW1lbnQgLyogLCBmcm9tSW5kZXggPSBAWyotMV0gKi8pIHtcbiAgICAvLyBjb252ZXJ0IC0wIHRvICswXG4gICAgaWYgKE5FR0FUSVZFX1pFUk8pIHJldHVybiAkbmF0aXZlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgMDtcbiAgICB2YXIgTyA9IHRvSU9iamVjdCh0aGlzKTtcbiAgICB2YXIgbGVuZ3RoID0gdG9MZW5ndGgoTy5sZW5ndGgpO1xuICAgIHZhciBpbmRleCA9IGxlbmd0aCAtIDE7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPiAxKSBpbmRleCA9IE1hdGgubWluKGluZGV4LCB0b0ludGVnZXIoYXJndW1lbnRzWzFdKSk7XG4gICAgaWYgKGluZGV4IDwgMCkgaW5kZXggPSBsZW5ndGggKyBpbmRleDtcbiAgICBmb3IgKDtpbmRleCA+PSAwOyBpbmRleC0tKSBpZiAoaW5kZXggaW4gTykgaWYgKE9baW5kZXhdID09PSBzZWFyY2hFbGVtZW50KSByZXR1cm4gaW5kZXggfHwgMDtcbiAgICByZXR1cm4gLTE7XG4gIH1cbn0pO1xuIiwiLy8gMjIuMS4zLjMgQXJyYXkucHJvdG90eXBlLmNvcHlXaXRoaW4odGFyZ2V0LCBzdGFydCwgZW5kID0gdGhpcy5sZW5ndGgpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUCwgJ0FycmF5JywgeyBjb3B5V2l0aGluOiByZXF1aXJlKCcuL19hcnJheS1jb3B5LXdpdGhpbicpIH0pO1xuXG5yZXF1aXJlKCcuL19hZGQtdG8tdW5zY29wYWJsZXMnKSgnY29weVdpdGhpbicpO1xuIiwiLy8gMjIuMS4zLjYgQXJyYXkucHJvdG90eXBlLmZpbGwodmFsdWUsIHN0YXJ0ID0gMCwgZW5kID0gdGhpcy5sZW5ndGgpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUCwgJ0FycmF5JywgeyBmaWxsOiByZXF1aXJlKCcuL19hcnJheS1maWxsJykgfSk7XG5cbnJlcXVpcmUoJy4vX2FkZC10by11bnNjb3BhYmxlcycpKCdmaWxsJyk7XG4iLCIndXNlIHN0cmljdCc7XG4vLyAyMi4xLjMuOCBBcnJheS5wcm90b3R5cGUuZmluZChwcmVkaWNhdGUsIHRoaXNBcmcgPSB1bmRlZmluZWQpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRmaW5kID0gcmVxdWlyZSgnLi9fYXJyYXktbWV0aG9kcycpKDUpO1xudmFyIEtFWSA9ICdmaW5kJztcbnZhciBmb3JjZWQgPSB0cnVlO1xuLy8gU2hvdWxkbid0IHNraXAgaG9sZXNcbmlmIChLRVkgaW4gW10pIEFycmF5KDEpW0tFWV0oZnVuY3Rpb24gKCkgeyBmb3JjZWQgPSBmYWxzZTsgfSk7XG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqIGZvcmNlZCwgJ0FycmF5Jywge1xuICBmaW5kOiBmdW5jdGlvbiBmaW5kKGNhbGxiYWNrZm4gLyogLCB0aGF0ID0gdW5kZWZpbmVkICovKSB7XG4gICAgcmV0dXJuICRmaW5kKHRoaXMsIGNhbGxiYWNrZm4sIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkKTtcbiAgfVxufSk7XG5yZXF1aXJlKCcuL19hZGQtdG8tdW5zY29wYWJsZXMnKShLRVkpO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gMjIuMS4zLjkgQXJyYXkucHJvdG90eXBlLmZpbmRJbmRleChwcmVkaWNhdGUsIHRoaXNBcmcgPSB1bmRlZmluZWQpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRmaW5kID0gcmVxdWlyZSgnLi9fYXJyYXktbWV0aG9kcycpKDYpO1xudmFyIEtFWSA9ICdmaW5kSW5kZXgnO1xudmFyIGZvcmNlZCA9IHRydWU7XG4vLyBTaG91bGRuJ3Qgc2tpcCBob2xlc1xuaWYgKEtFWSBpbiBbXSkgQXJyYXkoMSlbS0VZXShmdW5jdGlvbiAoKSB7IGZvcmNlZCA9IGZhbHNlOyB9KTtcbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogZm9yY2VkLCAnQXJyYXknLCB7XG4gIGZpbmRJbmRleDogZnVuY3Rpb24gZmluZEluZGV4KGNhbGxiYWNrZm4gLyogLCB0aGF0ID0gdW5kZWZpbmVkICovKSB7XG4gICAgcmV0dXJuICRmaW5kKHRoaXMsIGNhbGxiYWNrZm4sIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkKTtcbiAgfVxufSk7XG5yZXF1aXJlKCcuL19hZGQtdG8tdW5zY29wYWJsZXMnKShLRVkpO1xuIiwicmVxdWlyZSgnLi9fc2V0LXNwZWNpZXMnKSgnQXJyYXknKTtcbiIsInZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBpbmhlcml0SWZSZXF1aXJlZCA9IHJlcXVpcmUoJy4vX2luaGVyaXQtaWYtcmVxdWlyZWQnKTtcbnZhciBkUCA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpLmY7XG52YXIgZ09QTiA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BuJykuZjtcbnZhciBpc1JlZ0V4cCA9IHJlcXVpcmUoJy4vX2lzLXJlZ2V4cCcpO1xudmFyICRmbGFncyA9IHJlcXVpcmUoJy4vX2ZsYWdzJyk7XG52YXIgJFJlZ0V4cCA9IGdsb2JhbC5SZWdFeHA7XG52YXIgQmFzZSA9ICRSZWdFeHA7XG52YXIgcHJvdG8gPSAkUmVnRXhwLnByb3RvdHlwZTtcbnZhciByZTEgPSAvYS9nO1xudmFyIHJlMiA9IC9hL2c7XG4vLyBcIm5ld1wiIGNyZWF0ZXMgYSBuZXcgb2JqZWN0LCBvbGQgd2Via2l0IGJ1Z2d5IGhlcmVcbnZhciBDT1JSRUNUX05FVyA9IG5ldyAkUmVnRXhwKHJlMSkgIT09IHJlMTtcblxuaWYgKHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgJiYgKCFDT1JSRUNUX05FVyB8fCByZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uICgpIHtcbiAgcmUyW3JlcXVpcmUoJy4vX3drcycpKCdtYXRjaCcpXSA9IGZhbHNlO1xuICAvLyBSZWdFeHAgY29uc3RydWN0b3IgY2FuIGFsdGVyIGZsYWdzIGFuZCBJc1JlZ0V4cCB3b3JrcyBjb3JyZWN0IHdpdGggQEBtYXRjaFxuICByZXR1cm4gJFJlZ0V4cChyZTEpICE9IHJlMSB8fCAkUmVnRXhwKHJlMikgPT0gcmUyIHx8ICRSZWdFeHAocmUxLCAnaScpICE9ICcvYS9pJztcbn0pKSkge1xuICAkUmVnRXhwID0gZnVuY3Rpb24gUmVnRXhwKHAsIGYpIHtcbiAgICB2YXIgdGlSRSA9IHRoaXMgaW5zdGFuY2VvZiAkUmVnRXhwO1xuICAgIHZhciBwaVJFID0gaXNSZWdFeHAocCk7XG4gICAgdmFyIGZpVSA9IGYgPT09IHVuZGVmaW5lZDtcbiAgICByZXR1cm4gIXRpUkUgJiYgcGlSRSAmJiBwLmNvbnN0cnVjdG9yID09PSAkUmVnRXhwICYmIGZpVSA/IHBcbiAgICAgIDogaW5oZXJpdElmUmVxdWlyZWQoQ09SUkVDVF9ORVdcbiAgICAgICAgPyBuZXcgQmFzZShwaVJFICYmICFmaVUgPyBwLnNvdXJjZSA6IHAsIGYpXG4gICAgICAgIDogQmFzZSgocGlSRSA9IHAgaW5zdGFuY2VvZiAkUmVnRXhwKSA/IHAuc291cmNlIDogcCwgcGlSRSAmJiBmaVUgPyAkZmxhZ3MuY2FsbChwKSA6IGYpXG4gICAgICAsIHRpUkUgPyB0aGlzIDogcHJvdG8sICRSZWdFeHApO1xuICB9O1xuICB2YXIgcHJveHkgPSBmdW5jdGlvbiAoa2V5KSB7XG4gICAga2V5IGluICRSZWdFeHAgfHwgZFAoJFJlZ0V4cCwga2V5LCB7XG4gICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIEJhc2Vba2V5XTsgfSxcbiAgICAgIHNldDogZnVuY3Rpb24gKGl0KSB7IEJhc2Vba2V5XSA9IGl0OyB9XG4gICAgfSk7XG4gIH07XG4gIGZvciAodmFyIGtleXMgPSBnT1BOKEJhc2UpLCBpID0gMDsga2V5cy5sZW5ndGggPiBpOykgcHJveHkoa2V5c1tpKytdKTtcbiAgcHJvdG8uY29uc3RydWN0b3IgPSAkUmVnRXhwO1xuICAkUmVnRXhwLnByb3RvdHlwZSA9IHByb3RvO1xuICByZXF1aXJlKCcuL19yZWRlZmluZScpKGdsb2JhbCwgJ1JlZ0V4cCcsICRSZWdFeHApO1xufVxuXG5yZXF1aXJlKCcuL19zZXQtc3BlY2llcycpKCdSZWdFeHAnKTtcbiIsIid1c2Ugc3RyaWN0JztcbnJlcXVpcmUoJy4vZXM2LnJlZ2V4cC5mbGFncycpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgJGZsYWdzID0gcmVxdWlyZSgnLi9fZmxhZ3MnKTtcbnZhciBERVNDUklQVE9SUyA9IHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJyk7XG52YXIgVE9fU1RSSU5HID0gJ3RvU3RyaW5nJztcbnZhciAkdG9TdHJpbmcgPSAvLi9bVE9fU1RSSU5HXTtcblxudmFyIGRlZmluZSA9IGZ1bmN0aW9uIChmbikge1xuICByZXF1aXJlKCcuL19yZWRlZmluZScpKFJlZ0V4cC5wcm90b3R5cGUsIFRPX1NUUklORywgZm4sIHRydWUpO1xufTtcblxuLy8gMjEuMi41LjE0IFJlZ0V4cC5wcm90b3R5cGUudG9TdHJpbmcoKVxuaWYgKHJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24gKCkgeyByZXR1cm4gJHRvU3RyaW5nLmNhbGwoeyBzb3VyY2U6ICdhJywgZmxhZ3M6ICdiJyB9KSAhPSAnL2EvYic7IH0pKSB7XG4gIGRlZmluZShmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICB2YXIgUiA9IGFuT2JqZWN0KHRoaXMpO1xuICAgIHJldHVybiAnLycuY29uY2F0KFIuc291cmNlLCAnLycsXG4gICAgICAnZmxhZ3MnIGluIFIgPyBSLmZsYWdzIDogIURFU0NSSVBUT1JTICYmIFIgaW5zdGFuY2VvZiBSZWdFeHAgPyAkZmxhZ3MuY2FsbChSKSA6IHVuZGVmaW5lZCk7XG4gIH0pO1xuLy8gRkY0NC0gUmVnRXhwI3RvU3RyaW5nIGhhcyBhIHdyb25nIG5hbWVcbn0gZWxzZSBpZiAoJHRvU3RyaW5nLm5hbWUgIT0gVE9fU1RSSU5HKSB7XG4gIGRlZmluZShmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gJHRvU3RyaW5nLmNhbGwodGhpcyk7XG4gIH0pO1xufVxuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xudmFyIGFkdmFuY2VTdHJpbmdJbmRleCA9IHJlcXVpcmUoJy4vX2FkdmFuY2Utc3RyaW5nLWluZGV4Jyk7XG52YXIgcmVnRXhwRXhlYyA9IHJlcXVpcmUoJy4vX3JlZ2V4cC1leGVjLWFic3RyYWN0Jyk7XG5cbi8vIEBAbWF0Y2ggbG9naWNcbnJlcXVpcmUoJy4vX2ZpeC1yZS13a3MnKSgnbWF0Y2gnLCAxLCBmdW5jdGlvbiAoZGVmaW5lZCwgTUFUQ0gsICRtYXRjaCwgbWF5YmVDYWxsTmF0aXZlKSB7XG4gIHJldHVybiBbXG4gICAgLy8gYFN0cmluZy5wcm90b3R5cGUubWF0Y2hgIG1ldGhvZFxuICAgIC8vIGh0dHBzOi8vdGMzOS5naXRodWIuaW8vZWNtYTI2Mi8jc2VjLXN0cmluZy5wcm90b3R5cGUubWF0Y2hcbiAgICBmdW5jdGlvbiBtYXRjaChyZWdleHApIHtcbiAgICAgIHZhciBPID0gZGVmaW5lZCh0aGlzKTtcbiAgICAgIHZhciBmbiA9IHJlZ2V4cCA9PSB1bmRlZmluZWQgPyB1bmRlZmluZWQgOiByZWdleHBbTUFUQ0hdO1xuICAgICAgcmV0dXJuIGZuICE9PSB1bmRlZmluZWQgPyBmbi5jYWxsKHJlZ2V4cCwgTykgOiBuZXcgUmVnRXhwKHJlZ2V4cClbTUFUQ0hdKFN0cmluZyhPKSk7XG4gICAgfSxcbiAgICAvLyBgUmVnRXhwLnByb3RvdHlwZVtAQG1hdGNoXWAgbWV0aG9kXG4gICAgLy8gaHR0cHM6Ly90YzM5LmdpdGh1Yi5pby9lY21hMjYyLyNzZWMtcmVnZXhwLnByb3RvdHlwZS1AQG1hdGNoXG4gICAgZnVuY3Rpb24gKHJlZ2V4cCkge1xuICAgICAgdmFyIHJlcyA9IG1heWJlQ2FsbE5hdGl2ZSgkbWF0Y2gsIHJlZ2V4cCwgdGhpcyk7XG4gICAgICBpZiAocmVzLmRvbmUpIHJldHVybiByZXMudmFsdWU7XG4gICAgICB2YXIgcnggPSBhbk9iamVjdChyZWdleHApO1xuICAgICAgdmFyIFMgPSBTdHJpbmcodGhpcyk7XG4gICAgICBpZiAoIXJ4Lmdsb2JhbCkgcmV0dXJuIHJlZ0V4cEV4ZWMocngsIFMpO1xuICAgICAgdmFyIGZ1bGxVbmljb2RlID0gcngudW5pY29kZTtcbiAgICAgIHJ4Lmxhc3RJbmRleCA9IDA7XG4gICAgICB2YXIgQSA9IFtdO1xuICAgICAgdmFyIG4gPSAwO1xuICAgICAgdmFyIHJlc3VsdDtcbiAgICAgIHdoaWxlICgocmVzdWx0ID0gcmVnRXhwRXhlYyhyeCwgUykpICE9PSBudWxsKSB7XG4gICAgICAgIHZhciBtYXRjaFN0ciA9IFN0cmluZyhyZXN1bHRbMF0pO1xuICAgICAgICBBW25dID0gbWF0Y2hTdHI7XG4gICAgICAgIGlmIChtYXRjaFN0ciA9PT0gJycpIHJ4Lmxhc3RJbmRleCA9IGFkdmFuY2VTdHJpbmdJbmRleChTLCB0b0xlbmd0aChyeC5sYXN0SW5kZXgpLCBmdWxsVW5pY29kZSk7XG4gICAgICAgIG4rKztcbiAgICAgIH1cbiAgICAgIHJldHVybiBuID09PSAwID8gbnVsbCA6IEE7XG4gICAgfVxuICBdO1xufSk7XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8tb2JqZWN0Jyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcbnZhciB0b0ludGVnZXIgPSByZXF1aXJlKCcuL190by1pbnRlZ2VyJyk7XG52YXIgYWR2YW5jZVN0cmluZ0luZGV4ID0gcmVxdWlyZSgnLi9fYWR2YW5jZS1zdHJpbmctaW5kZXgnKTtcbnZhciByZWdFeHBFeGVjID0gcmVxdWlyZSgnLi9fcmVnZXhwLWV4ZWMtYWJzdHJhY3QnKTtcbnZhciBtYXggPSBNYXRoLm1heDtcbnZhciBtaW4gPSBNYXRoLm1pbjtcbnZhciBmbG9vciA9IE1hdGguZmxvb3I7XG52YXIgU1VCU1RJVFVUSU9OX1NZTUJPTFMgPSAvXFwkKFskJmAnXXxcXGRcXGQ/fDxbXj5dKj4pL2c7XG52YXIgU1VCU1RJVFVUSU9OX1NZTUJPTFNfTk9fTkFNRUQgPSAvXFwkKFskJmAnXXxcXGRcXGQ/KS9nO1xuXG52YXIgbWF5YmVUb1N0cmluZyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gaXQgPT09IHVuZGVmaW5lZCA/IGl0IDogU3RyaW5nKGl0KTtcbn07XG5cbi8vIEBAcmVwbGFjZSBsb2dpY1xucmVxdWlyZSgnLi9fZml4LXJlLXdrcycpKCdyZXBsYWNlJywgMiwgZnVuY3Rpb24gKGRlZmluZWQsIFJFUExBQ0UsICRyZXBsYWNlLCBtYXliZUNhbGxOYXRpdmUpIHtcbiAgcmV0dXJuIFtcbiAgICAvLyBgU3RyaW5nLnByb3RvdHlwZS5yZXBsYWNlYCBtZXRob2RcbiAgICAvLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL2VjbWEyNjIvI3NlYy1zdHJpbmcucHJvdG90eXBlLnJlcGxhY2VcbiAgICBmdW5jdGlvbiByZXBsYWNlKHNlYXJjaFZhbHVlLCByZXBsYWNlVmFsdWUpIHtcbiAgICAgIHZhciBPID0gZGVmaW5lZCh0aGlzKTtcbiAgICAgIHZhciBmbiA9IHNlYXJjaFZhbHVlID09IHVuZGVmaW5lZCA/IHVuZGVmaW5lZCA6IHNlYXJjaFZhbHVlW1JFUExBQ0VdO1xuICAgICAgcmV0dXJuIGZuICE9PSB1bmRlZmluZWRcbiAgICAgICAgPyBmbi5jYWxsKHNlYXJjaFZhbHVlLCBPLCByZXBsYWNlVmFsdWUpXG4gICAgICAgIDogJHJlcGxhY2UuY2FsbChTdHJpbmcoTyksIHNlYXJjaFZhbHVlLCByZXBsYWNlVmFsdWUpO1xuICAgIH0sXG4gICAgLy8gYFJlZ0V4cC5wcm90b3R5cGVbQEByZXBsYWNlXWAgbWV0aG9kXG4gICAgLy8gaHR0cHM6Ly90YzM5LmdpdGh1Yi5pby9lY21hMjYyLyNzZWMtcmVnZXhwLnByb3RvdHlwZS1AQHJlcGxhY2VcbiAgICBmdW5jdGlvbiAocmVnZXhwLCByZXBsYWNlVmFsdWUpIHtcbiAgICAgIHZhciByZXMgPSBtYXliZUNhbGxOYXRpdmUoJHJlcGxhY2UsIHJlZ2V4cCwgdGhpcywgcmVwbGFjZVZhbHVlKTtcbiAgICAgIGlmIChyZXMuZG9uZSkgcmV0dXJuIHJlcy52YWx1ZTtcblxuICAgICAgdmFyIHJ4ID0gYW5PYmplY3QocmVnZXhwKTtcbiAgICAgIHZhciBTID0gU3RyaW5nKHRoaXMpO1xuICAgICAgdmFyIGZ1bmN0aW9uYWxSZXBsYWNlID0gdHlwZW9mIHJlcGxhY2VWYWx1ZSA9PT0gJ2Z1bmN0aW9uJztcbiAgICAgIGlmICghZnVuY3Rpb25hbFJlcGxhY2UpIHJlcGxhY2VWYWx1ZSA9IFN0cmluZyhyZXBsYWNlVmFsdWUpO1xuICAgICAgdmFyIGdsb2JhbCA9IHJ4Lmdsb2JhbDtcbiAgICAgIGlmIChnbG9iYWwpIHtcbiAgICAgICAgdmFyIGZ1bGxVbmljb2RlID0gcngudW5pY29kZTtcbiAgICAgICAgcngubGFzdEluZGV4ID0gMDtcbiAgICAgIH1cbiAgICAgIHZhciByZXN1bHRzID0gW107XG4gICAgICB3aGlsZSAodHJ1ZSkge1xuICAgICAgICB2YXIgcmVzdWx0ID0gcmVnRXhwRXhlYyhyeCwgUyk7XG4gICAgICAgIGlmIChyZXN1bHQgPT09IG51bGwpIGJyZWFrO1xuICAgICAgICByZXN1bHRzLnB1c2gocmVzdWx0KTtcbiAgICAgICAgaWYgKCFnbG9iYWwpIGJyZWFrO1xuICAgICAgICB2YXIgbWF0Y2hTdHIgPSBTdHJpbmcocmVzdWx0WzBdKTtcbiAgICAgICAgaWYgKG1hdGNoU3RyID09PSAnJykgcngubGFzdEluZGV4ID0gYWR2YW5jZVN0cmluZ0luZGV4KFMsIHRvTGVuZ3RoKHJ4Lmxhc3RJbmRleCksIGZ1bGxVbmljb2RlKTtcbiAgICAgIH1cbiAgICAgIHZhciBhY2N1bXVsYXRlZFJlc3VsdCA9ICcnO1xuICAgICAgdmFyIG5leHRTb3VyY2VQb3NpdGlvbiA9IDA7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHJlc3VsdHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgcmVzdWx0ID0gcmVzdWx0c1tpXTtcbiAgICAgICAgdmFyIG1hdGNoZWQgPSBTdHJpbmcocmVzdWx0WzBdKTtcbiAgICAgICAgdmFyIHBvc2l0aW9uID0gbWF4KG1pbih0b0ludGVnZXIocmVzdWx0LmluZGV4KSwgUy5sZW5ndGgpLCAwKTtcbiAgICAgICAgdmFyIGNhcHR1cmVzID0gW107XG4gICAgICAgIC8vIE5PVEU6IFRoaXMgaXMgZXF1aXZhbGVudCB0b1xuICAgICAgICAvLyAgIGNhcHR1cmVzID0gcmVzdWx0LnNsaWNlKDEpLm1hcChtYXliZVRvU3RyaW5nKVxuICAgICAgICAvLyBidXQgZm9yIHNvbWUgcmVhc29uIGBuYXRpdmVTbGljZS5jYWxsKHJlc3VsdCwgMSwgcmVzdWx0Lmxlbmd0aClgIChjYWxsZWQgaW5cbiAgICAgICAgLy8gdGhlIHNsaWNlIHBvbHlmaWxsIHdoZW4gc2xpY2luZyBuYXRpdmUgYXJyYXlzKSBcImRvZXNuJ3Qgd29ya1wiIGluIHNhZmFyaSA5IGFuZFxuICAgICAgICAvLyBjYXVzZXMgYSBjcmFzaCAoaHR0cHM6Ly9wYXN0ZWJpbi5jb20vTjIxUXplUUEpIHdoZW4gdHJ5aW5nIHRvIGRlYnVnIGl0LlxuICAgICAgICBmb3IgKHZhciBqID0gMTsgaiA8IHJlc3VsdC5sZW5ndGg7IGorKykgY2FwdHVyZXMucHVzaChtYXliZVRvU3RyaW5nKHJlc3VsdFtqXSkpO1xuICAgICAgICB2YXIgbmFtZWRDYXB0dXJlcyA9IHJlc3VsdC5ncm91cHM7XG4gICAgICAgIGlmIChmdW5jdGlvbmFsUmVwbGFjZSkge1xuICAgICAgICAgIHZhciByZXBsYWNlckFyZ3MgPSBbbWF0Y2hlZF0uY29uY2F0KGNhcHR1cmVzLCBwb3NpdGlvbiwgUyk7XG4gICAgICAgICAgaWYgKG5hbWVkQ2FwdHVyZXMgIT09IHVuZGVmaW5lZCkgcmVwbGFjZXJBcmdzLnB1c2gobmFtZWRDYXB0dXJlcyk7XG4gICAgICAgICAgdmFyIHJlcGxhY2VtZW50ID0gU3RyaW5nKHJlcGxhY2VWYWx1ZS5hcHBseSh1bmRlZmluZWQsIHJlcGxhY2VyQXJncykpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJlcGxhY2VtZW50ID0gZ2V0U3Vic3RpdHV0aW9uKG1hdGNoZWQsIFMsIHBvc2l0aW9uLCBjYXB0dXJlcywgbmFtZWRDYXB0dXJlcywgcmVwbGFjZVZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAocG9zaXRpb24gPj0gbmV4dFNvdXJjZVBvc2l0aW9uKSB7XG4gICAgICAgICAgYWNjdW11bGF0ZWRSZXN1bHQgKz0gUy5zbGljZShuZXh0U291cmNlUG9zaXRpb24sIHBvc2l0aW9uKSArIHJlcGxhY2VtZW50O1xuICAgICAgICAgIG5leHRTb3VyY2VQb3NpdGlvbiA9IHBvc2l0aW9uICsgbWF0Y2hlZC5sZW5ndGg7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiBhY2N1bXVsYXRlZFJlc3VsdCArIFMuc2xpY2UobmV4dFNvdXJjZVBvc2l0aW9uKTtcbiAgICB9XG4gIF07XG5cbiAgICAvLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL2VjbWEyNjIvI3NlYy1nZXRzdWJzdGl0dXRpb25cbiAgZnVuY3Rpb24gZ2V0U3Vic3RpdHV0aW9uKG1hdGNoZWQsIHN0ciwgcG9zaXRpb24sIGNhcHR1cmVzLCBuYW1lZENhcHR1cmVzLCByZXBsYWNlbWVudCkge1xuICAgIHZhciB0YWlsUG9zID0gcG9zaXRpb24gKyBtYXRjaGVkLmxlbmd0aDtcbiAgICB2YXIgbSA9IGNhcHR1cmVzLmxlbmd0aDtcbiAgICB2YXIgc3ltYm9scyA9IFNVQlNUSVRVVElPTl9TWU1CT0xTX05PX05BTUVEO1xuICAgIGlmIChuYW1lZENhcHR1cmVzICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIG5hbWVkQ2FwdHVyZXMgPSB0b09iamVjdChuYW1lZENhcHR1cmVzKTtcbiAgICAgIHN5bWJvbHMgPSBTVUJTVElUVVRJT05fU1lNQk9MUztcbiAgICB9XG4gICAgcmV0dXJuICRyZXBsYWNlLmNhbGwocmVwbGFjZW1lbnQsIHN5bWJvbHMsIGZ1bmN0aW9uIChtYXRjaCwgY2gpIHtcbiAgICAgIHZhciBjYXB0dXJlO1xuICAgICAgc3dpdGNoIChjaC5jaGFyQXQoMCkpIHtcbiAgICAgICAgY2FzZSAnJCc6IHJldHVybiAnJCc7XG4gICAgICAgIGNhc2UgJyYnOiByZXR1cm4gbWF0Y2hlZDtcbiAgICAgICAgY2FzZSAnYCc6IHJldHVybiBzdHIuc2xpY2UoMCwgcG9zaXRpb24pO1xuICAgICAgICBjYXNlIFwiJ1wiOiByZXR1cm4gc3RyLnNsaWNlKHRhaWxQb3MpO1xuICAgICAgICBjYXNlICc8JzpcbiAgICAgICAgICBjYXB0dXJlID0gbmFtZWRDYXB0dXJlc1tjaC5zbGljZSgxLCAtMSldO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBkZWZhdWx0OiAvLyBcXGRcXGQ/XG4gICAgICAgICAgdmFyIG4gPSArY2g7XG4gICAgICAgICAgaWYgKG4gPT09IDApIHJldHVybiBtYXRjaDtcbiAgICAgICAgICBpZiAobiA+IG0pIHtcbiAgICAgICAgICAgIHZhciBmID0gZmxvb3IobiAvIDEwKTtcbiAgICAgICAgICAgIGlmIChmID09PSAwKSByZXR1cm4gbWF0Y2g7XG4gICAgICAgICAgICBpZiAoZiA8PSBtKSByZXR1cm4gY2FwdHVyZXNbZiAtIDFdID09PSB1bmRlZmluZWQgPyBjaC5jaGFyQXQoMSkgOiBjYXB0dXJlc1tmIC0gMV0gKyBjaC5jaGFyQXQoMSk7XG4gICAgICAgICAgICByZXR1cm4gbWF0Y2g7XG4gICAgICAgICAgfVxuICAgICAgICAgIGNhcHR1cmUgPSBjYXB0dXJlc1tuIC0gMV07XG4gICAgICB9XG4gICAgICByZXR1cm4gY2FwdHVyZSA9PT0gdW5kZWZpbmVkID8gJycgOiBjYXB0dXJlO1xuICAgIH0pO1xuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgc2FtZVZhbHVlID0gcmVxdWlyZSgnLi9fc2FtZS12YWx1ZScpO1xudmFyIHJlZ0V4cEV4ZWMgPSByZXF1aXJlKCcuL19yZWdleHAtZXhlYy1hYnN0cmFjdCcpO1xuXG4vLyBAQHNlYXJjaCBsb2dpY1xucmVxdWlyZSgnLi9fZml4LXJlLXdrcycpKCdzZWFyY2gnLCAxLCBmdW5jdGlvbiAoZGVmaW5lZCwgU0VBUkNILCAkc2VhcmNoLCBtYXliZUNhbGxOYXRpdmUpIHtcbiAgcmV0dXJuIFtcbiAgICAvLyBgU3RyaW5nLnByb3RvdHlwZS5zZWFyY2hgIG1ldGhvZFxuICAgIC8vIGh0dHBzOi8vdGMzOS5naXRodWIuaW8vZWNtYTI2Mi8jc2VjLXN0cmluZy5wcm90b3R5cGUuc2VhcmNoXG4gICAgZnVuY3Rpb24gc2VhcmNoKHJlZ2V4cCkge1xuICAgICAgdmFyIE8gPSBkZWZpbmVkKHRoaXMpO1xuICAgICAgdmFyIGZuID0gcmVnZXhwID09IHVuZGVmaW5lZCA/IHVuZGVmaW5lZCA6IHJlZ2V4cFtTRUFSQ0hdO1xuICAgICAgcmV0dXJuIGZuICE9PSB1bmRlZmluZWQgPyBmbi5jYWxsKHJlZ2V4cCwgTykgOiBuZXcgUmVnRXhwKHJlZ2V4cClbU0VBUkNIXShTdHJpbmcoTykpO1xuICAgIH0sXG4gICAgLy8gYFJlZ0V4cC5wcm90b3R5cGVbQEBzZWFyY2hdYCBtZXRob2RcbiAgICAvLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL2VjbWEyNjIvI3NlYy1yZWdleHAucHJvdG90eXBlLUBAc2VhcmNoXG4gICAgZnVuY3Rpb24gKHJlZ2V4cCkge1xuICAgICAgdmFyIHJlcyA9IG1heWJlQ2FsbE5hdGl2ZSgkc2VhcmNoLCByZWdleHAsIHRoaXMpO1xuICAgICAgaWYgKHJlcy5kb25lKSByZXR1cm4gcmVzLnZhbHVlO1xuICAgICAgdmFyIHJ4ID0gYW5PYmplY3QocmVnZXhwKTtcbiAgICAgIHZhciBTID0gU3RyaW5nKHRoaXMpO1xuICAgICAgdmFyIHByZXZpb3VzTGFzdEluZGV4ID0gcngubGFzdEluZGV4O1xuICAgICAgaWYgKCFzYW1lVmFsdWUocHJldmlvdXNMYXN0SW5kZXgsIDApKSByeC5sYXN0SW5kZXggPSAwO1xuICAgICAgdmFyIHJlc3VsdCA9IHJlZ0V4cEV4ZWMocngsIFMpO1xuICAgICAgaWYgKCFzYW1lVmFsdWUocngubGFzdEluZGV4LCBwcmV2aW91c0xhc3RJbmRleCkpIHJ4Lmxhc3RJbmRleCA9IHByZXZpb3VzTGFzdEluZGV4O1xuICAgICAgcmV0dXJuIHJlc3VsdCA9PT0gbnVsbCA/IC0xIDogcmVzdWx0LmluZGV4O1xuICAgIH1cbiAgXTtcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgaXNSZWdFeHAgPSByZXF1aXJlKCcuL19pcy1yZWdleHAnKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIHNwZWNpZXNDb25zdHJ1Y3RvciA9IHJlcXVpcmUoJy4vX3NwZWNpZXMtY29uc3RydWN0b3InKTtcbnZhciBhZHZhbmNlU3RyaW5nSW5kZXggPSByZXF1aXJlKCcuL19hZHZhbmNlLXN0cmluZy1pbmRleCcpO1xudmFyIHRvTGVuZ3RoID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJyk7XG52YXIgY2FsbFJlZ0V4cEV4ZWMgPSByZXF1aXJlKCcuL19yZWdleHAtZXhlYy1hYnN0cmFjdCcpO1xudmFyIHJlZ2V4cEV4ZWMgPSByZXF1aXJlKCcuL19yZWdleHAtZXhlYycpO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi9fZmFpbHMnKTtcbnZhciAkbWluID0gTWF0aC5taW47XG52YXIgJHB1c2ggPSBbXS5wdXNoO1xudmFyICRTUExJVCA9ICdzcGxpdCc7XG52YXIgTEVOR1RIID0gJ2xlbmd0aCc7XG52YXIgTEFTVF9JTkRFWCA9ICdsYXN0SW5kZXgnO1xudmFyIE1BWF9VSU5UMzIgPSAweGZmZmZmZmZmO1xuXG4vLyBiYWJlbC1taW5pZnkgdHJhbnNwaWxlcyBSZWdFeHAoJ3gnLCAneScpIC0+IC94L3kgYW5kIGl0IGNhdXNlcyBTeW50YXhFcnJvclxudmFyIFNVUFBPUlRTX1kgPSAhZmFpbHMoZnVuY3Rpb24gKCkgeyBSZWdFeHAoTUFYX1VJTlQzMiwgJ3knKTsgfSk7XG5cbi8vIEBAc3BsaXQgbG9naWNcbnJlcXVpcmUoJy4vX2ZpeC1yZS13a3MnKSgnc3BsaXQnLCAyLCBmdW5jdGlvbiAoZGVmaW5lZCwgU1BMSVQsICRzcGxpdCwgbWF5YmVDYWxsTmF0aXZlKSB7XG4gIHZhciBpbnRlcm5hbFNwbGl0O1xuICBpZiAoXG4gICAgJ2FiYmMnWyRTUExJVF0oLyhiKSovKVsxXSA9PSAnYycgfHxcbiAgICAndGVzdCdbJFNQTElUXSgvKD86KS8sIC0xKVtMRU5HVEhdICE9IDQgfHxcbiAgICAnYWInWyRTUExJVF0oLyg/OmFiKSovKVtMRU5HVEhdICE9IDIgfHxcbiAgICAnLidbJFNQTElUXSgvKC4/KSguPykvKVtMRU5HVEhdICE9IDQgfHxcbiAgICAnLidbJFNQTElUXSgvKCkoKS8pW0xFTkdUSF0gPiAxIHx8XG4gICAgJydbJFNQTElUXSgvLj8vKVtMRU5HVEhdXG4gICkge1xuICAgIC8vIGJhc2VkIG9uIGVzNS1zaGltIGltcGxlbWVudGF0aW9uLCBuZWVkIHRvIHJld29yayBpdFxuICAgIGludGVybmFsU3BsaXQgPSBmdW5jdGlvbiAoc2VwYXJhdG9yLCBsaW1pdCkge1xuICAgICAgdmFyIHN0cmluZyA9IFN0cmluZyh0aGlzKTtcbiAgICAgIGlmIChzZXBhcmF0b3IgPT09IHVuZGVmaW5lZCAmJiBsaW1pdCA9PT0gMCkgcmV0dXJuIFtdO1xuICAgICAgLy8gSWYgYHNlcGFyYXRvcmAgaXMgbm90IGEgcmVnZXgsIHVzZSBuYXRpdmUgc3BsaXRcbiAgICAgIGlmICghaXNSZWdFeHAoc2VwYXJhdG9yKSkgcmV0dXJuICRzcGxpdC5jYWxsKHN0cmluZywgc2VwYXJhdG9yLCBsaW1pdCk7XG4gICAgICB2YXIgb3V0cHV0ID0gW107XG4gICAgICB2YXIgZmxhZ3MgPSAoc2VwYXJhdG9yLmlnbm9yZUNhc2UgPyAnaScgOiAnJykgK1xuICAgICAgICAgICAgICAgICAgKHNlcGFyYXRvci5tdWx0aWxpbmUgPyAnbScgOiAnJykgK1xuICAgICAgICAgICAgICAgICAgKHNlcGFyYXRvci51bmljb2RlID8gJ3UnIDogJycpICtcbiAgICAgICAgICAgICAgICAgIChzZXBhcmF0b3Iuc3RpY2t5ID8gJ3knIDogJycpO1xuICAgICAgdmFyIGxhc3RMYXN0SW5kZXggPSAwO1xuICAgICAgdmFyIHNwbGl0TGltaXQgPSBsaW1pdCA9PT0gdW5kZWZpbmVkID8gTUFYX1VJTlQzMiA6IGxpbWl0ID4+PiAwO1xuICAgICAgLy8gTWFrZSBgZ2xvYmFsYCBhbmQgYXZvaWQgYGxhc3RJbmRleGAgaXNzdWVzIGJ5IHdvcmtpbmcgd2l0aCBhIGNvcHlcbiAgICAgIHZhciBzZXBhcmF0b3JDb3B5ID0gbmV3IFJlZ0V4cChzZXBhcmF0b3Iuc291cmNlLCBmbGFncyArICdnJyk7XG4gICAgICB2YXIgbWF0Y2gsIGxhc3RJbmRleCwgbGFzdExlbmd0aDtcbiAgICAgIHdoaWxlIChtYXRjaCA9IHJlZ2V4cEV4ZWMuY2FsbChzZXBhcmF0b3JDb3B5LCBzdHJpbmcpKSB7XG4gICAgICAgIGxhc3RJbmRleCA9IHNlcGFyYXRvckNvcHlbTEFTVF9JTkRFWF07XG4gICAgICAgIGlmIChsYXN0SW5kZXggPiBsYXN0TGFzdEluZGV4KSB7XG4gICAgICAgICAgb3V0cHV0LnB1c2goc3RyaW5nLnNsaWNlKGxhc3RMYXN0SW5kZXgsIG1hdGNoLmluZGV4KSk7XG4gICAgICAgICAgaWYgKG1hdGNoW0xFTkdUSF0gPiAxICYmIG1hdGNoLmluZGV4IDwgc3RyaW5nW0xFTkdUSF0pICRwdXNoLmFwcGx5KG91dHB1dCwgbWF0Y2guc2xpY2UoMSkpO1xuICAgICAgICAgIGxhc3RMZW5ndGggPSBtYXRjaFswXVtMRU5HVEhdO1xuICAgICAgICAgIGxhc3RMYXN0SW5kZXggPSBsYXN0SW5kZXg7XG4gICAgICAgICAgaWYgKG91dHB1dFtMRU5HVEhdID49IHNwbGl0TGltaXQpIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIGlmIChzZXBhcmF0b3JDb3B5W0xBU1RfSU5ERVhdID09PSBtYXRjaC5pbmRleCkgc2VwYXJhdG9yQ29weVtMQVNUX0lOREVYXSsrOyAvLyBBdm9pZCBhbiBpbmZpbml0ZSBsb29wXG4gICAgICB9XG4gICAgICBpZiAobGFzdExhc3RJbmRleCA9PT0gc3RyaW5nW0xFTkdUSF0pIHtcbiAgICAgICAgaWYgKGxhc3RMZW5ndGggfHwgIXNlcGFyYXRvckNvcHkudGVzdCgnJykpIG91dHB1dC5wdXNoKCcnKTtcbiAgICAgIH0gZWxzZSBvdXRwdXQucHVzaChzdHJpbmcuc2xpY2UobGFzdExhc3RJbmRleCkpO1xuICAgICAgcmV0dXJuIG91dHB1dFtMRU5HVEhdID4gc3BsaXRMaW1pdCA/IG91dHB1dC5zbGljZSgwLCBzcGxpdExpbWl0KSA6IG91dHB1dDtcbiAgICB9O1xuICAvLyBDaGFrcmEsIFY4XG4gIH0gZWxzZSBpZiAoJzAnWyRTUExJVF0odW5kZWZpbmVkLCAwKVtMRU5HVEhdKSB7XG4gICAgaW50ZXJuYWxTcGxpdCA9IGZ1bmN0aW9uIChzZXBhcmF0b3IsIGxpbWl0KSB7XG4gICAgICByZXR1cm4gc2VwYXJhdG9yID09PSB1bmRlZmluZWQgJiYgbGltaXQgPT09IDAgPyBbXSA6ICRzcGxpdC5jYWxsKHRoaXMsIHNlcGFyYXRvciwgbGltaXQpO1xuICAgIH07XG4gIH0gZWxzZSB7XG4gICAgaW50ZXJuYWxTcGxpdCA9ICRzcGxpdDtcbiAgfVxuXG4gIHJldHVybiBbXG4gICAgLy8gYFN0cmluZy5wcm90b3R5cGUuc3BsaXRgIG1ldGhvZFxuICAgIC8vIGh0dHBzOi8vdGMzOS5naXRodWIuaW8vZWNtYTI2Mi8jc2VjLXN0cmluZy5wcm90b3R5cGUuc3BsaXRcbiAgICBmdW5jdGlvbiBzcGxpdChzZXBhcmF0b3IsIGxpbWl0KSB7XG4gICAgICB2YXIgTyA9IGRlZmluZWQodGhpcyk7XG4gICAgICB2YXIgc3BsaXR0ZXIgPSBzZXBhcmF0b3IgPT0gdW5kZWZpbmVkID8gdW5kZWZpbmVkIDogc2VwYXJhdG9yW1NQTElUXTtcbiAgICAgIHJldHVybiBzcGxpdHRlciAhPT0gdW5kZWZpbmVkXG4gICAgICAgID8gc3BsaXR0ZXIuY2FsbChzZXBhcmF0b3IsIE8sIGxpbWl0KVxuICAgICAgICA6IGludGVybmFsU3BsaXQuY2FsbChTdHJpbmcoTyksIHNlcGFyYXRvciwgbGltaXQpO1xuICAgIH0sXG4gICAgLy8gYFJlZ0V4cC5wcm90b3R5cGVbQEBzcGxpdF1gIG1ldGhvZFxuICAgIC8vIGh0dHBzOi8vdGMzOS5naXRodWIuaW8vZWNtYTI2Mi8jc2VjLXJlZ2V4cC5wcm90b3R5cGUtQEBzcGxpdFxuICAgIC8vXG4gICAgLy8gTk9URTogVGhpcyBjYW5ub3QgYmUgcHJvcGVybHkgcG9seWZpbGxlZCBpbiBlbmdpbmVzIHRoYXQgZG9uJ3Qgc3VwcG9ydFxuICAgIC8vIHRoZSAneScgZmxhZy5cbiAgICBmdW5jdGlvbiAocmVnZXhwLCBsaW1pdCkge1xuICAgICAgdmFyIHJlcyA9IG1heWJlQ2FsbE5hdGl2ZShpbnRlcm5hbFNwbGl0LCByZWdleHAsIHRoaXMsIGxpbWl0LCBpbnRlcm5hbFNwbGl0ICE9PSAkc3BsaXQpO1xuICAgICAgaWYgKHJlcy5kb25lKSByZXR1cm4gcmVzLnZhbHVlO1xuXG4gICAgICB2YXIgcnggPSBhbk9iamVjdChyZWdleHApO1xuICAgICAgdmFyIFMgPSBTdHJpbmcodGhpcyk7XG4gICAgICB2YXIgQyA9IHNwZWNpZXNDb25zdHJ1Y3RvcihyeCwgUmVnRXhwKTtcblxuICAgICAgdmFyIHVuaWNvZGVNYXRjaGluZyA9IHJ4LnVuaWNvZGU7XG4gICAgICB2YXIgZmxhZ3MgPSAocnguaWdub3JlQ2FzZSA/ICdpJyA6ICcnKSArXG4gICAgICAgICAgICAgICAgICAocngubXVsdGlsaW5lID8gJ20nIDogJycpICtcbiAgICAgICAgICAgICAgICAgIChyeC51bmljb2RlID8gJ3UnIDogJycpICtcbiAgICAgICAgICAgICAgICAgIChTVVBQT1JUU19ZID8gJ3knIDogJ2cnKTtcblxuICAgICAgLy8gXig/ICsgcnggKyApIGlzIG5lZWRlZCwgaW4gY29tYmluYXRpb24gd2l0aCBzb21lIFMgc2xpY2luZywgdG9cbiAgICAgIC8vIHNpbXVsYXRlIHRoZSAneScgZmxhZy5cbiAgICAgIHZhciBzcGxpdHRlciA9IG5ldyBDKFNVUFBPUlRTX1kgPyByeCA6ICdeKD86JyArIHJ4LnNvdXJjZSArICcpJywgZmxhZ3MpO1xuICAgICAgdmFyIGxpbSA9IGxpbWl0ID09PSB1bmRlZmluZWQgPyBNQVhfVUlOVDMyIDogbGltaXQgPj4+IDA7XG4gICAgICBpZiAobGltID09PSAwKSByZXR1cm4gW107XG4gICAgICBpZiAoUy5sZW5ndGggPT09IDApIHJldHVybiBjYWxsUmVnRXhwRXhlYyhzcGxpdHRlciwgUykgPT09IG51bGwgPyBbU10gOiBbXTtcbiAgICAgIHZhciBwID0gMDtcbiAgICAgIHZhciBxID0gMDtcbiAgICAgIHZhciBBID0gW107XG4gICAgICB3aGlsZSAocSA8IFMubGVuZ3RoKSB7XG4gICAgICAgIHNwbGl0dGVyLmxhc3RJbmRleCA9IFNVUFBPUlRTX1kgPyBxIDogMDtcbiAgICAgICAgdmFyIHogPSBjYWxsUmVnRXhwRXhlYyhzcGxpdHRlciwgU1VQUE9SVFNfWSA/IFMgOiBTLnNsaWNlKHEpKTtcbiAgICAgICAgdmFyIGU7XG4gICAgICAgIGlmIChcbiAgICAgICAgICB6ID09PSBudWxsIHx8XG4gICAgICAgICAgKGUgPSAkbWluKHRvTGVuZ3RoKHNwbGl0dGVyLmxhc3RJbmRleCArIChTVVBQT1JUU19ZID8gMCA6IHEpKSwgUy5sZW5ndGgpKSA9PT0gcFxuICAgICAgICApIHtcbiAgICAgICAgICBxID0gYWR2YW5jZVN0cmluZ0luZGV4KFMsIHEsIHVuaWNvZGVNYXRjaGluZyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgQS5wdXNoKFMuc2xpY2UocCwgcSkpO1xuICAgICAgICAgIGlmIChBLmxlbmd0aCA9PT0gbGltKSByZXR1cm4gQTtcbiAgICAgICAgICBmb3IgKHZhciBpID0gMTsgaSA8PSB6Lmxlbmd0aCAtIDE7IGkrKykge1xuICAgICAgICAgICAgQS5wdXNoKHpbaV0pO1xuICAgICAgICAgICAgaWYgKEEubGVuZ3RoID09PSBsaW0pIHJldHVybiBBO1xuICAgICAgICAgIH1cbiAgICAgICAgICBxID0gcCA9IGU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIEEucHVzaChTLnNsaWNlKHApKTtcbiAgICAgIHJldHVybiBBO1xuICAgIH1cbiAgXTtcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIExJQlJBUlkgPSByZXF1aXJlKCcuL19saWJyYXJ5Jyk7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgY3R4ID0gcmVxdWlyZSgnLi9fY3R4Jyk7XG52YXIgY2xhc3NvZiA9IHJlcXVpcmUoJy4vX2NsYXNzb2YnKTtcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciBhRnVuY3Rpb24gPSByZXF1aXJlKCcuL19hLWZ1bmN0aW9uJyk7XG52YXIgYW5JbnN0YW5jZSA9IHJlcXVpcmUoJy4vX2FuLWluc3RhbmNlJyk7XG52YXIgZm9yT2YgPSByZXF1aXJlKCcuL19mb3Itb2YnKTtcbnZhciBzcGVjaWVzQ29uc3RydWN0b3IgPSByZXF1aXJlKCcuL19zcGVjaWVzLWNvbnN0cnVjdG9yJyk7XG52YXIgdGFzayA9IHJlcXVpcmUoJy4vX3Rhc2snKS5zZXQ7XG52YXIgbWljcm90YXNrID0gcmVxdWlyZSgnLi9fbWljcm90YXNrJykoKTtcbnZhciBuZXdQcm9taXNlQ2FwYWJpbGl0eU1vZHVsZSA9IHJlcXVpcmUoJy4vX25ldy1wcm9taXNlLWNhcGFiaWxpdHknKTtcbnZhciBwZXJmb3JtID0gcmVxdWlyZSgnLi9fcGVyZm9ybScpO1xudmFyIHVzZXJBZ2VudCA9IHJlcXVpcmUoJy4vX3VzZXItYWdlbnQnKTtcbnZhciBwcm9taXNlUmVzb2x2ZSA9IHJlcXVpcmUoJy4vX3Byb21pc2UtcmVzb2x2ZScpO1xudmFyIFBST01JU0UgPSAnUHJvbWlzZSc7XG52YXIgVHlwZUVycm9yID0gZ2xvYmFsLlR5cGVFcnJvcjtcbnZhciBwcm9jZXNzID0gZ2xvYmFsLnByb2Nlc3M7XG52YXIgdmVyc2lvbnMgPSBwcm9jZXNzICYmIHByb2Nlc3MudmVyc2lvbnM7XG52YXIgdjggPSB2ZXJzaW9ucyAmJiB2ZXJzaW9ucy52OCB8fCAnJztcbnZhciAkUHJvbWlzZSA9IGdsb2JhbFtQUk9NSVNFXTtcbnZhciBpc05vZGUgPSBjbGFzc29mKHByb2Nlc3MpID09ICdwcm9jZXNzJztcbnZhciBlbXB0eSA9IGZ1bmN0aW9uICgpIHsgLyogZW1wdHkgKi8gfTtcbnZhciBJbnRlcm5hbCwgbmV3R2VuZXJpY1Byb21pc2VDYXBhYmlsaXR5LCBPd25Qcm9taXNlQ2FwYWJpbGl0eSwgV3JhcHBlcjtcbnZhciBuZXdQcm9taXNlQ2FwYWJpbGl0eSA9IG5ld0dlbmVyaWNQcm9taXNlQ2FwYWJpbGl0eSA9IG5ld1Byb21pc2VDYXBhYmlsaXR5TW9kdWxlLmY7XG5cbnZhciBVU0VfTkFUSVZFID0gISFmdW5jdGlvbiAoKSB7XG4gIHRyeSB7XG4gICAgLy8gY29ycmVjdCBzdWJjbGFzc2luZyB3aXRoIEBAc3BlY2llcyBzdXBwb3J0XG4gICAgdmFyIHByb21pc2UgPSAkUHJvbWlzZS5yZXNvbHZlKDEpO1xuICAgIHZhciBGYWtlUHJvbWlzZSA9IChwcm9taXNlLmNvbnN0cnVjdG9yID0ge30pW3JlcXVpcmUoJy4vX3drcycpKCdzcGVjaWVzJyldID0gZnVuY3Rpb24gKGV4ZWMpIHtcbiAgICAgIGV4ZWMoZW1wdHksIGVtcHR5KTtcbiAgICB9O1xuICAgIC8vIHVuaGFuZGxlZCByZWplY3Rpb25zIHRyYWNraW5nIHN1cHBvcnQsIE5vZGVKUyBQcm9taXNlIHdpdGhvdXQgaXQgZmFpbHMgQEBzcGVjaWVzIHRlc3RcbiAgICByZXR1cm4gKGlzTm9kZSB8fCB0eXBlb2YgUHJvbWlzZVJlamVjdGlvbkV2ZW50ID09ICdmdW5jdGlvbicpXG4gICAgICAmJiBwcm9taXNlLnRoZW4oZW1wdHkpIGluc3RhbmNlb2YgRmFrZVByb21pc2VcbiAgICAgIC8vIHY4IDYuNiAoTm9kZSAxMCBhbmQgQ2hyb21lIDY2KSBoYXZlIGEgYnVnIHdpdGggcmVzb2x2aW5nIGN1c3RvbSB0aGVuYWJsZXNcbiAgICAgIC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC9jaHJvbWl1bS9pc3N1ZXMvZGV0YWlsP2lkPTgzMDU2NVxuICAgICAgLy8gd2UgY2FuJ3QgZGV0ZWN0IGl0IHN5bmNocm9ub3VzbHksIHNvIGp1c3QgY2hlY2sgdmVyc2lvbnNcbiAgICAgICYmIHY4LmluZGV4T2YoJzYuNicpICE9PSAwXG4gICAgICAmJiB1c2VyQWdlbnQuaW5kZXhPZignQ2hyb21lLzY2JykgPT09IC0xO1xuICB9IGNhdGNoIChlKSB7IC8qIGVtcHR5ICovIH1cbn0oKTtcblxuLy8gaGVscGVyc1xudmFyIGlzVGhlbmFibGUgPSBmdW5jdGlvbiAoaXQpIHtcbiAgdmFyIHRoZW47XG4gIHJldHVybiBpc09iamVjdChpdCkgJiYgdHlwZW9mICh0aGVuID0gaXQudGhlbikgPT0gJ2Z1bmN0aW9uJyA/IHRoZW4gOiBmYWxzZTtcbn07XG52YXIgbm90aWZ5ID0gZnVuY3Rpb24gKHByb21pc2UsIGlzUmVqZWN0KSB7XG4gIGlmIChwcm9taXNlLl9uKSByZXR1cm47XG4gIHByb21pc2UuX24gPSB0cnVlO1xuICB2YXIgY2hhaW4gPSBwcm9taXNlLl9jO1xuICBtaWNyb3Rhc2soZnVuY3Rpb24gKCkge1xuICAgIHZhciB2YWx1ZSA9IHByb21pc2UuX3Y7XG4gICAgdmFyIG9rID0gcHJvbWlzZS5fcyA9PSAxO1xuICAgIHZhciBpID0gMDtcbiAgICB2YXIgcnVuID0gZnVuY3Rpb24gKHJlYWN0aW9uKSB7XG4gICAgICB2YXIgaGFuZGxlciA9IG9rID8gcmVhY3Rpb24ub2sgOiByZWFjdGlvbi5mYWlsO1xuICAgICAgdmFyIHJlc29sdmUgPSByZWFjdGlvbi5yZXNvbHZlO1xuICAgICAgdmFyIHJlamVjdCA9IHJlYWN0aW9uLnJlamVjdDtcbiAgICAgIHZhciBkb21haW4gPSByZWFjdGlvbi5kb21haW47XG4gICAgICB2YXIgcmVzdWx0LCB0aGVuLCBleGl0ZWQ7XG4gICAgICB0cnkge1xuICAgICAgICBpZiAoaGFuZGxlcikge1xuICAgICAgICAgIGlmICghb2spIHtcbiAgICAgICAgICAgIGlmIChwcm9taXNlLl9oID09IDIpIG9uSGFuZGxlVW5oYW5kbGVkKHByb21pc2UpO1xuICAgICAgICAgICAgcHJvbWlzZS5faCA9IDE7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChoYW5kbGVyID09PSB0cnVlKSByZXN1bHQgPSB2YWx1ZTtcbiAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGlmIChkb21haW4pIGRvbWFpbi5lbnRlcigpO1xuICAgICAgICAgICAgcmVzdWx0ID0gaGFuZGxlcih2YWx1ZSk7IC8vIG1heSB0aHJvd1xuICAgICAgICAgICAgaWYgKGRvbWFpbikge1xuICAgICAgICAgICAgICBkb21haW4uZXhpdCgpO1xuICAgICAgICAgICAgICBleGl0ZWQgPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAocmVzdWx0ID09PSByZWFjdGlvbi5wcm9taXNlKSB7XG4gICAgICAgICAgICByZWplY3QoVHlwZUVycm9yKCdQcm9taXNlLWNoYWluIGN5Y2xlJykpO1xuICAgICAgICAgIH0gZWxzZSBpZiAodGhlbiA9IGlzVGhlbmFibGUocmVzdWx0KSkge1xuICAgICAgICAgICAgdGhlbi5jYWxsKHJlc3VsdCwgcmVzb2x2ZSwgcmVqZWN0KTtcbiAgICAgICAgICB9IGVsc2UgcmVzb2x2ZShyZXN1bHQpO1xuICAgICAgICB9IGVsc2UgcmVqZWN0KHZhbHVlKTtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgaWYgKGRvbWFpbiAmJiAhZXhpdGVkKSBkb21haW4uZXhpdCgpO1xuICAgICAgICByZWplY3QoZSk7XG4gICAgICB9XG4gICAgfTtcbiAgICB3aGlsZSAoY2hhaW4ubGVuZ3RoID4gaSkgcnVuKGNoYWluW2krK10pOyAvLyB2YXJpYWJsZSBsZW5ndGggLSBjYW4ndCB1c2UgZm9yRWFjaFxuICAgIHByb21pc2UuX2MgPSBbXTtcbiAgICBwcm9taXNlLl9uID0gZmFsc2U7XG4gICAgaWYgKGlzUmVqZWN0ICYmICFwcm9taXNlLl9oKSBvblVuaGFuZGxlZChwcm9taXNlKTtcbiAgfSk7XG59O1xudmFyIG9uVW5oYW5kbGVkID0gZnVuY3Rpb24gKHByb21pc2UpIHtcbiAgdGFzay5jYWxsKGdsb2JhbCwgZnVuY3Rpb24gKCkge1xuICAgIHZhciB2YWx1ZSA9IHByb21pc2UuX3Y7XG4gICAgdmFyIHVuaGFuZGxlZCA9IGlzVW5oYW5kbGVkKHByb21pc2UpO1xuICAgIHZhciByZXN1bHQsIGhhbmRsZXIsIGNvbnNvbGU7XG4gICAgaWYgKHVuaGFuZGxlZCkge1xuICAgICAgcmVzdWx0ID0gcGVyZm9ybShmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmIChpc05vZGUpIHtcbiAgICAgICAgICBwcm9jZXNzLmVtaXQoJ3VuaGFuZGxlZFJlamVjdGlvbicsIHZhbHVlLCBwcm9taXNlKTtcbiAgICAgICAgfSBlbHNlIGlmIChoYW5kbGVyID0gZ2xvYmFsLm9udW5oYW5kbGVkcmVqZWN0aW9uKSB7XG4gICAgICAgICAgaGFuZGxlcih7IHByb21pc2U6IHByb21pc2UsIHJlYXNvbjogdmFsdWUgfSk7XG4gICAgICAgIH0gZWxzZSBpZiAoKGNvbnNvbGUgPSBnbG9iYWwuY29uc29sZSkgJiYgY29uc29sZS5lcnJvcikge1xuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ1VuaGFuZGxlZCBwcm9taXNlIHJlamVjdGlvbicsIHZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICAvLyBCcm93c2VycyBzaG91bGQgbm90IHRyaWdnZXIgYHJlamVjdGlvbkhhbmRsZWRgIGV2ZW50IGlmIGl0IHdhcyBoYW5kbGVkIGhlcmUsIE5vZGVKUyAtIHNob3VsZFxuICAgICAgcHJvbWlzZS5faCA9IGlzTm9kZSB8fCBpc1VuaGFuZGxlZChwcm9taXNlKSA/IDIgOiAxO1xuICAgIH0gcHJvbWlzZS5fYSA9IHVuZGVmaW5lZDtcbiAgICBpZiAodW5oYW5kbGVkICYmIHJlc3VsdC5lKSB0aHJvdyByZXN1bHQudjtcbiAgfSk7XG59O1xudmFyIGlzVW5oYW5kbGVkID0gZnVuY3Rpb24gKHByb21pc2UpIHtcbiAgcmV0dXJuIHByb21pc2UuX2ggIT09IDEgJiYgKHByb21pc2UuX2EgfHwgcHJvbWlzZS5fYykubGVuZ3RoID09PSAwO1xufTtcbnZhciBvbkhhbmRsZVVuaGFuZGxlZCA9IGZ1bmN0aW9uIChwcm9taXNlKSB7XG4gIHRhc2suY2FsbChnbG9iYWwsIGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgaGFuZGxlcjtcbiAgICBpZiAoaXNOb2RlKSB7XG4gICAgICBwcm9jZXNzLmVtaXQoJ3JlamVjdGlvbkhhbmRsZWQnLCBwcm9taXNlKTtcbiAgICB9IGVsc2UgaWYgKGhhbmRsZXIgPSBnbG9iYWwub25yZWplY3Rpb25oYW5kbGVkKSB7XG4gICAgICBoYW5kbGVyKHsgcHJvbWlzZTogcHJvbWlzZSwgcmVhc29uOiBwcm9taXNlLl92IH0pO1xuICAgIH1cbiAgfSk7XG59O1xudmFyICRyZWplY3QgPSBmdW5jdGlvbiAodmFsdWUpIHtcbiAgdmFyIHByb21pc2UgPSB0aGlzO1xuICBpZiAocHJvbWlzZS5fZCkgcmV0dXJuO1xuICBwcm9taXNlLl9kID0gdHJ1ZTtcbiAgcHJvbWlzZSA9IHByb21pc2UuX3cgfHwgcHJvbWlzZTsgLy8gdW53cmFwXG4gIHByb21pc2UuX3YgPSB2YWx1ZTtcbiAgcHJvbWlzZS5fcyA9IDI7XG4gIGlmICghcHJvbWlzZS5fYSkgcHJvbWlzZS5fYSA9IHByb21pc2UuX2Muc2xpY2UoKTtcbiAgbm90aWZ5KHByb21pc2UsIHRydWUpO1xufTtcbnZhciAkcmVzb2x2ZSA9IGZ1bmN0aW9uICh2YWx1ZSkge1xuICB2YXIgcHJvbWlzZSA9IHRoaXM7XG4gIHZhciB0aGVuO1xuICBpZiAocHJvbWlzZS5fZCkgcmV0dXJuO1xuICBwcm9taXNlLl9kID0gdHJ1ZTtcbiAgcHJvbWlzZSA9IHByb21pc2UuX3cgfHwgcHJvbWlzZTsgLy8gdW53cmFwXG4gIHRyeSB7XG4gICAgaWYgKHByb21pc2UgPT09IHZhbHVlKSB0aHJvdyBUeXBlRXJyb3IoXCJQcm9taXNlIGNhbid0IGJlIHJlc29sdmVkIGl0c2VsZlwiKTtcbiAgICBpZiAodGhlbiA9IGlzVGhlbmFibGUodmFsdWUpKSB7XG4gICAgICBtaWNyb3Rhc2soZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgd3JhcHBlciA9IHsgX3c6IHByb21pc2UsIF9kOiBmYWxzZSB9OyAvLyB3cmFwXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgdGhlbi5jYWxsKHZhbHVlLCBjdHgoJHJlc29sdmUsIHdyYXBwZXIsIDEpLCBjdHgoJHJlamVjdCwgd3JhcHBlciwgMSkpO1xuICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgJHJlamVjdC5jYWxsKHdyYXBwZXIsIGUpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgcHJvbWlzZS5fdiA9IHZhbHVlO1xuICAgICAgcHJvbWlzZS5fcyA9IDE7XG4gICAgICBub3RpZnkocHJvbWlzZSwgZmFsc2UpO1xuICAgIH1cbiAgfSBjYXRjaCAoZSkge1xuICAgICRyZWplY3QuY2FsbCh7IF93OiBwcm9taXNlLCBfZDogZmFsc2UgfSwgZSk7IC8vIHdyYXBcbiAgfVxufTtcblxuLy8gY29uc3RydWN0b3IgcG9seWZpbGxcbmlmICghVVNFX05BVElWRSkge1xuICAvLyAyNS40LjMuMSBQcm9taXNlKGV4ZWN1dG9yKVxuICAkUHJvbWlzZSA9IGZ1bmN0aW9uIFByb21pc2UoZXhlY3V0b3IpIHtcbiAgICBhbkluc3RhbmNlKHRoaXMsICRQcm9taXNlLCBQUk9NSVNFLCAnX2gnKTtcbiAgICBhRnVuY3Rpb24oZXhlY3V0b3IpO1xuICAgIEludGVybmFsLmNhbGwodGhpcyk7XG4gICAgdHJ5IHtcbiAgICAgIGV4ZWN1dG9yKGN0eCgkcmVzb2x2ZSwgdGhpcywgMSksIGN0eCgkcmVqZWN0LCB0aGlzLCAxKSk7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAkcmVqZWN0LmNhbGwodGhpcywgZXJyKTtcbiAgICB9XG4gIH07XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtdmFyc1xuICBJbnRlcm5hbCA9IGZ1bmN0aW9uIFByb21pc2UoZXhlY3V0b3IpIHtcbiAgICB0aGlzLl9jID0gW107ICAgICAgICAgICAgIC8vIDwtIGF3YWl0aW5nIHJlYWN0aW9uc1xuICAgIHRoaXMuX2EgPSB1bmRlZmluZWQ7ICAgICAgLy8gPC0gY2hlY2tlZCBpbiBpc1VuaGFuZGxlZCByZWFjdGlvbnNcbiAgICB0aGlzLl9zID0gMDsgICAgICAgICAgICAgIC8vIDwtIHN0YXRlXG4gICAgdGhpcy5fZCA9IGZhbHNlOyAgICAgICAgICAvLyA8LSBkb25lXG4gICAgdGhpcy5fdiA9IHVuZGVmaW5lZDsgICAgICAvLyA8LSB2YWx1ZVxuICAgIHRoaXMuX2ggPSAwOyAgICAgICAgICAgICAgLy8gPC0gcmVqZWN0aW9uIHN0YXRlLCAwIC0gZGVmYXVsdCwgMSAtIGhhbmRsZWQsIDIgLSB1bmhhbmRsZWRcbiAgICB0aGlzLl9uID0gZmFsc2U7ICAgICAgICAgIC8vIDwtIG5vdGlmeVxuICB9O1xuICBJbnRlcm5hbC5wcm90b3R5cGUgPSByZXF1aXJlKCcuL19yZWRlZmluZS1hbGwnKSgkUHJvbWlzZS5wcm90b3R5cGUsIHtcbiAgICAvLyAyNS40LjUuMyBQcm9taXNlLnByb3RvdHlwZS50aGVuKG9uRnVsZmlsbGVkLCBvblJlamVjdGVkKVxuICAgIHRoZW46IGZ1bmN0aW9uIHRoZW4ob25GdWxmaWxsZWQsIG9uUmVqZWN0ZWQpIHtcbiAgICAgIHZhciByZWFjdGlvbiA9IG5ld1Byb21pc2VDYXBhYmlsaXR5KHNwZWNpZXNDb25zdHJ1Y3Rvcih0aGlzLCAkUHJvbWlzZSkpO1xuICAgICAgcmVhY3Rpb24ub2sgPSB0eXBlb2Ygb25GdWxmaWxsZWQgPT0gJ2Z1bmN0aW9uJyA/IG9uRnVsZmlsbGVkIDogdHJ1ZTtcbiAgICAgIHJlYWN0aW9uLmZhaWwgPSB0eXBlb2Ygb25SZWplY3RlZCA9PSAnZnVuY3Rpb24nICYmIG9uUmVqZWN0ZWQ7XG4gICAgICByZWFjdGlvbi5kb21haW4gPSBpc05vZGUgPyBwcm9jZXNzLmRvbWFpbiA6IHVuZGVmaW5lZDtcbiAgICAgIHRoaXMuX2MucHVzaChyZWFjdGlvbik7XG4gICAgICBpZiAodGhpcy5fYSkgdGhpcy5fYS5wdXNoKHJlYWN0aW9uKTtcbiAgICAgIGlmICh0aGlzLl9zKSBub3RpZnkodGhpcywgZmFsc2UpO1xuICAgICAgcmV0dXJuIHJlYWN0aW9uLnByb21pc2U7XG4gICAgfSxcbiAgICAvLyAyNS40LjUuMSBQcm9taXNlLnByb3RvdHlwZS5jYXRjaChvblJlamVjdGVkKVxuICAgICdjYXRjaCc6IGZ1bmN0aW9uIChvblJlamVjdGVkKSB7XG4gICAgICByZXR1cm4gdGhpcy50aGVuKHVuZGVmaW5lZCwgb25SZWplY3RlZCk7XG4gICAgfVxuICB9KTtcbiAgT3duUHJvbWlzZUNhcGFiaWxpdHkgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHByb21pc2UgPSBuZXcgSW50ZXJuYWwoKTtcbiAgICB0aGlzLnByb21pc2UgPSBwcm9taXNlO1xuICAgIHRoaXMucmVzb2x2ZSA9IGN0eCgkcmVzb2x2ZSwgcHJvbWlzZSwgMSk7XG4gICAgdGhpcy5yZWplY3QgPSBjdHgoJHJlamVjdCwgcHJvbWlzZSwgMSk7XG4gIH07XG4gIG5ld1Byb21pc2VDYXBhYmlsaXR5TW9kdWxlLmYgPSBuZXdQcm9taXNlQ2FwYWJpbGl0eSA9IGZ1bmN0aW9uIChDKSB7XG4gICAgcmV0dXJuIEMgPT09ICRQcm9taXNlIHx8IEMgPT09IFdyYXBwZXJcbiAgICAgID8gbmV3IE93blByb21pc2VDYXBhYmlsaXR5KEMpXG4gICAgICA6IG5ld0dlbmVyaWNQcm9taXNlQ2FwYWJpbGl0eShDKTtcbiAgfTtcbn1cblxuJGV4cG9ydCgkZXhwb3J0LkcgKyAkZXhwb3J0LlcgKyAkZXhwb3J0LkYgKiAhVVNFX05BVElWRSwgeyBQcm9taXNlOiAkUHJvbWlzZSB9KTtcbnJlcXVpcmUoJy4vX3NldC10by1zdHJpbmctdGFnJykoJFByb21pc2UsIFBST01JU0UpO1xucmVxdWlyZSgnLi9fc2V0LXNwZWNpZXMnKShQUk9NSVNFKTtcbldyYXBwZXIgPSByZXF1aXJlKCcuL19jb3JlJylbUFJPTUlTRV07XG5cbi8vIHN0YXRpY3NcbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogIVVTRV9OQVRJVkUsIFBST01JU0UsIHtcbiAgLy8gMjUuNC40LjUgUHJvbWlzZS5yZWplY3QocilcbiAgcmVqZWN0OiBmdW5jdGlvbiByZWplY3Qocikge1xuICAgIHZhciBjYXBhYmlsaXR5ID0gbmV3UHJvbWlzZUNhcGFiaWxpdHkodGhpcyk7XG4gICAgdmFyICQkcmVqZWN0ID0gY2FwYWJpbGl0eS5yZWplY3Q7XG4gICAgJCRyZWplY3Qocik7XG4gICAgcmV0dXJuIGNhcGFiaWxpdHkucHJvbWlzZTtcbiAgfVxufSk7XG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqIChMSUJSQVJZIHx8ICFVU0VfTkFUSVZFKSwgUFJPTUlTRSwge1xuICAvLyAyNS40LjQuNiBQcm9taXNlLnJlc29sdmUoeClcbiAgcmVzb2x2ZTogZnVuY3Rpb24gcmVzb2x2ZSh4KSB7XG4gICAgcmV0dXJuIHByb21pc2VSZXNvbHZlKExJQlJBUlkgJiYgdGhpcyA9PT0gV3JhcHBlciA/ICRQcm9taXNlIDogdGhpcywgeCk7XG4gIH1cbn0pO1xuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAhKFVTRV9OQVRJVkUgJiYgcmVxdWlyZSgnLi9faXRlci1kZXRlY3QnKShmdW5jdGlvbiAoaXRlcikge1xuICAkUHJvbWlzZS5hbGwoaXRlcilbJ2NhdGNoJ10oZW1wdHkpO1xufSkpLCBQUk9NSVNFLCB7XG4gIC8vIDI1LjQuNC4xIFByb21pc2UuYWxsKGl0ZXJhYmxlKVxuICBhbGw6IGZ1bmN0aW9uIGFsbChpdGVyYWJsZSkge1xuICAgIHZhciBDID0gdGhpcztcbiAgICB2YXIgY2FwYWJpbGl0eSA9IG5ld1Byb21pc2VDYXBhYmlsaXR5KEMpO1xuICAgIHZhciByZXNvbHZlID0gY2FwYWJpbGl0eS5yZXNvbHZlO1xuICAgIHZhciByZWplY3QgPSBjYXBhYmlsaXR5LnJlamVjdDtcbiAgICB2YXIgcmVzdWx0ID0gcGVyZm9ybShmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgdmFsdWVzID0gW107XG4gICAgICB2YXIgaW5kZXggPSAwO1xuICAgICAgdmFyIHJlbWFpbmluZyA9IDE7XG4gICAgICBmb3JPZihpdGVyYWJsZSwgZmFsc2UsIGZ1bmN0aW9uIChwcm9taXNlKSB7XG4gICAgICAgIHZhciAkaW5kZXggPSBpbmRleCsrO1xuICAgICAgICB2YXIgYWxyZWFkeUNhbGxlZCA9IGZhbHNlO1xuICAgICAgICB2YWx1ZXMucHVzaCh1bmRlZmluZWQpO1xuICAgICAgICByZW1haW5pbmcrKztcbiAgICAgICAgQy5yZXNvbHZlKHByb21pc2UpLnRoZW4oZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICAgICAgaWYgKGFscmVhZHlDYWxsZWQpIHJldHVybjtcbiAgICAgICAgICBhbHJlYWR5Q2FsbGVkID0gdHJ1ZTtcbiAgICAgICAgICB2YWx1ZXNbJGluZGV4XSA9IHZhbHVlO1xuICAgICAgICAgIC0tcmVtYWluaW5nIHx8IHJlc29sdmUodmFsdWVzKTtcbiAgICAgICAgfSwgcmVqZWN0KTtcbiAgICAgIH0pO1xuICAgICAgLS1yZW1haW5pbmcgfHwgcmVzb2x2ZSh2YWx1ZXMpO1xuICAgIH0pO1xuICAgIGlmIChyZXN1bHQuZSkgcmVqZWN0KHJlc3VsdC52KTtcbiAgICByZXR1cm4gY2FwYWJpbGl0eS5wcm9taXNlO1xuICB9LFxuICAvLyAyNS40LjQuNCBQcm9taXNlLnJhY2UoaXRlcmFibGUpXG4gIHJhY2U6IGZ1bmN0aW9uIHJhY2UoaXRlcmFibGUpIHtcbiAgICB2YXIgQyA9IHRoaXM7XG4gICAgdmFyIGNhcGFiaWxpdHkgPSBuZXdQcm9taXNlQ2FwYWJpbGl0eShDKTtcbiAgICB2YXIgcmVqZWN0ID0gY2FwYWJpbGl0eS5yZWplY3Q7XG4gICAgdmFyIHJlc3VsdCA9IHBlcmZvcm0oZnVuY3Rpb24gKCkge1xuICAgICAgZm9yT2YoaXRlcmFibGUsIGZhbHNlLCBmdW5jdGlvbiAocHJvbWlzZSkge1xuICAgICAgICBDLnJlc29sdmUocHJvbWlzZSkudGhlbihjYXBhYmlsaXR5LnJlc29sdmUsIHJlamVjdCk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgICBpZiAocmVzdWx0LmUpIHJlamVjdChyZXN1bHQudik7XG4gICAgcmV0dXJuIGNhcGFiaWxpdHkucHJvbWlzZTtcbiAgfVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgd2VhayA9IHJlcXVpcmUoJy4vX2NvbGxlY3Rpb24td2VhaycpO1xudmFyIHZhbGlkYXRlID0gcmVxdWlyZSgnLi9fdmFsaWRhdGUtY29sbGVjdGlvbicpO1xudmFyIFdFQUtfU0VUID0gJ1dlYWtTZXQnO1xuXG4vLyAyMy40IFdlYWtTZXQgT2JqZWN0c1xucmVxdWlyZSgnLi9fY29sbGVjdGlvbicpKFdFQUtfU0VULCBmdW5jdGlvbiAoZ2V0KSB7XG4gIHJldHVybiBmdW5jdGlvbiBXZWFrU2V0KCkgeyByZXR1cm4gZ2V0KHRoaXMsIGFyZ3VtZW50cy5sZW5ndGggPiAwID8gYXJndW1lbnRzWzBdIDogdW5kZWZpbmVkKTsgfTtcbn0sIHtcbiAgLy8gMjMuNC4zLjEgV2Vha1NldC5wcm90b3R5cGUuYWRkKHZhbHVlKVxuICBhZGQ6IGZ1bmN0aW9uIGFkZCh2YWx1ZSkge1xuICAgIHJldHVybiB3ZWFrLmRlZih2YWxpZGF0ZSh0aGlzLCBXRUFLX1NFVCksIHZhbHVlLCB0cnVlKTtcbiAgfVxufSwgd2VhaywgZmFsc2UsIHRydWUpO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkdHlwZWQgPSByZXF1aXJlKCcuL190eXBlZCcpO1xudmFyIGJ1ZmZlciA9IHJlcXVpcmUoJy4vX3R5cGVkLWJ1ZmZlcicpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgdG9BYnNvbHV0ZUluZGV4ID0gcmVxdWlyZSgnLi9fdG8tYWJzb2x1dGUtaW5kZXgnKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgQXJyYXlCdWZmZXIgPSByZXF1aXJlKCcuL19nbG9iYWwnKS5BcnJheUJ1ZmZlcjtcbnZhciBzcGVjaWVzQ29uc3RydWN0b3IgPSByZXF1aXJlKCcuL19zcGVjaWVzLWNvbnN0cnVjdG9yJyk7XG52YXIgJEFycmF5QnVmZmVyID0gYnVmZmVyLkFycmF5QnVmZmVyO1xudmFyICREYXRhVmlldyA9IGJ1ZmZlci5EYXRhVmlldztcbnZhciAkaXNWaWV3ID0gJHR5cGVkLkFCViAmJiBBcnJheUJ1ZmZlci5pc1ZpZXc7XG52YXIgJHNsaWNlID0gJEFycmF5QnVmZmVyLnByb3RvdHlwZS5zbGljZTtcbnZhciBWSUVXID0gJHR5cGVkLlZJRVc7XG52YXIgQVJSQVlfQlVGRkVSID0gJ0FycmF5QnVmZmVyJztcblxuJGV4cG9ydCgkZXhwb3J0LkcgKyAkZXhwb3J0LlcgKyAkZXhwb3J0LkYgKiAoQXJyYXlCdWZmZXIgIT09ICRBcnJheUJ1ZmZlciksIHsgQXJyYXlCdWZmZXI6ICRBcnJheUJ1ZmZlciB9KTtcblxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAhJHR5cGVkLkNPTlNUUiwgQVJSQVlfQlVGRkVSLCB7XG4gIC8vIDI0LjEuMy4xIEFycmF5QnVmZmVyLmlzVmlldyhhcmcpXG4gIGlzVmlldzogZnVuY3Rpb24gaXNWaWV3KGl0KSB7XG4gICAgcmV0dXJuICRpc1ZpZXcgJiYgJGlzVmlldyhpdCkgfHwgaXNPYmplY3QoaXQpICYmIFZJRVcgaW4gaXQ7XG4gIH1cbn0pO1xuXG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuVSArICRleHBvcnQuRiAqIHJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24gKCkge1xuICByZXR1cm4gIW5ldyAkQXJyYXlCdWZmZXIoMikuc2xpY2UoMSwgdW5kZWZpbmVkKS5ieXRlTGVuZ3RoO1xufSksIEFSUkFZX0JVRkZFUiwge1xuICAvLyAyNC4xLjQuMyBBcnJheUJ1ZmZlci5wcm90b3R5cGUuc2xpY2Uoc3RhcnQsIGVuZClcbiAgc2xpY2U6IGZ1bmN0aW9uIHNsaWNlKHN0YXJ0LCBlbmQpIHtcbiAgICBpZiAoJHNsaWNlICE9PSB1bmRlZmluZWQgJiYgZW5kID09PSB1bmRlZmluZWQpIHJldHVybiAkc2xpY2UuY2FsbChhbk9iamVjdCh0aGlzKSwgc3RhcnQpOyAvLyBGRiBmaXhcbiAgICB2YXIgbGVuID0gYW5PYmplY3QodGhpcykuYnl0ZUxlbmd0aDtcbiAgICB2YXIgZmlyc3QgPSB0b0Fic29sdXRlSW5kZXgoc3RhcnQsIGxlbik7XG4gICAgdmFyIGZpbiA9IHRvQWJzb2x1dGVJbmRleChlbmQgPT09IHVuZGVmaW5lZCA/IGxlbiA6IGVuZCwgbGVuKTtcbiAgICB2YXIgcmVzdWx0ID0gbmV3IChzcGVjaWVzQ29uc3RydWN0b3IodGhpcywgJEFycmF5QnVmZmVyKSkodG9MZW5ndGgoZmluIC0gZmlyc3QpKTtcbiAgICB2YXIgdmlld1MgPSBuZXcgJERhdGFWaWV3KHRoaXMpO1xuICAgIHZhciB2aWV3VCA9IG5ldyAkRGF0YVZpZXcocmVzdWx0KTtcbiAgICB2YXIgaW5kZXggPSAwO1xuICAgIHdoaWxlIChmaXJzdCA8IGZpbikge1xuICAgICAgdmlld1Quc2V0VWludDgoaW5kZXgrKywgdmlld1MuZ2V0VWludDgoZmlyc3QrKykpO1xuICAgIH0gcmV0dXJuIHJlc3VsdDtcbiAgfVxufSk7XG5cbnJlcXVpcmUoJy4vX3NldC1zcGVjaWVzJykoQVJSQVlfQlVGRkVSKTtcbiIsInZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG4kZXhwb3J0KCRleHBvcnQuRyArICRleHBvcnQuVyArICRleHBvcnQuRiAqICFyZXF1aXJlKCcuL190eXBlZCcpLkFCViwge1xuICBEYXRhVmlldzogcmVxdWlyZSgnLi9fdHlwZWQtYnVmZmVyJykuRGF0YVZpZXdcbn0pO1xuIiwicmVxdWlyZSgnLi9fdHlwZWQtYXJyYXknKSgnSW50OCcsIDEsIGZ1bmN0aW9uIChpbml0KSB7XG4gIHJldHVybiBmdW5jdGlvbiBJbnQ4QXJyYXkoZGF0YSwgYnl0ZU9mZnNldCwgbGVuZ3RoKSB7XG4gICAgcmV0dXJuIGluaXQodGhpcywgZGF0YSwgYnl0ZU9mZnNldCwgbGVuZ3RoKTtcbiAgfTtcbn0pO1xuIiwicmVxdWlyZSgnLi9fdHlwZWQtYXJyYXknKSgnVWludDgnLCAxLCBmdW5jdGlvbiAoaW5pdCkge1xuICByZXR1cm4gZnVuY3Rpb24gVWludDhBcnJheShkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpIHtcbiAgICByZXR1cm4gaW5pdCh0aGlzLCBkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpO1xuICB9O1xufSk7XG4iLCJyZXF1aXJlKCcuL190eXBlZC1hcnJheScpKCdVaW50OCcsIDEsIGZ1bmN0aW9uIChpbml0KSB7XG4gIHJldHVybiBmdW5jdGlvbiBVaW50OENsYW1wZWRBcnJheShkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpIHtcbiAgICByZXR1cm4gaW5pdCh0aGlzLCBkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpO1xuICB9O1xufSwgdHJ1ZSk7XG4iLCJyZXF1aXJlKCcuL190eXBlZC1hcnJheScpKCdJbnQxNicsIDIsIGZ1bmN0aW9uIChpbml0KSB7XG4gIHJldHVybiBmdW5jdGlvbiBJbnQxNkFycmF5KGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCkge1xuICAgIHJldHVybiBpbml0KHRoaXMsIGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCk7XG4gIH07XG59KTtcbiIsInJlcXVpcmUoJy4vX3R5cGVkLWFycmF5JykoJ1VpbnQxNicsIDIsIGZ1bmN0aW9uIChpbml0KSB7XG4gIHJldHVybiBmdW5jdGlvbiBVaW50MTZBcnJheShkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpIHtcbiAgICByZXR1cm4gaW5pdCh0aGlzLCBkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpO1xuICB9O1xufSk7XG4iLCJyZXF1aXJlKCcuL190eXBlZC1hcnJheScpKCdJbnQzMicsIDQsIGZ1bmN0aW9uIChpbml0KSB7XG4gIHJldHVybiBmdW5jdGlvbiBJbnQzMkFycmF5KGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCkge1xuICAgIHJldHVybiBpbml0KHRoaXMsIGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCk7XG4gIH07XG59KTtcbiIsInJlcXVpcmUoJy4vX3R5cGVkLWFycmF5JykoJ1VpbnQzMicsIDQsIGZ1bmN0aW9uIChpbml0KSB7XG4gIHJldHVybiBmdW5jdGlvbiBVaW50MzJBcnJheShkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpIHtcbiAgICByZXR1cm4gaW5pdCh0aGlzLCBkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpO1xuICB9O1xufSk7XG4iLCJyZXF1aXJlKCcuL190eXBlZC1hcnJheScpKCdGbG9hdDMyJywgNCwgZnVuY3Rpb24gKGluaXQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIEZsb2F0MzJBcnJheShkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpIHtcbiAgICByZXR1cm4gaW5pdCh0aGlzLCBkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpO1xuICB9O1xufSk7XG4iLCJyZXF1aXJlKCcuL190eXBlZC1hcnJheScpKCdGbG9hdDY0JywgOCwgZnVuY3Rpb24gKGluaXQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIEZsb2F0NjRBcnJheShkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpIHtcbiAgICByZXR1cm4gaW5pdCh0aGlzLCBkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpO1xuICB9O1xufSk7XG4iLCIvLyAyNi4xLjEgUmVmbGVjdC5hcHBseSh0YXJnZXQsIHRoaXNBcmd1bWVudCwgYXJndW1lbnRzTGlzdClcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgYUZ1bmN0aW9uID0gcmVxdWlyZSgnLi9fYS1mdW5jdGlvbicpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgckFwcGx5ID0gKHJlcXVpcmUoJy4vX2dsb2JhbCcpLlJlZmxlY3QgfHwge30pLmFwcGx5O1xudmFyIGZBcHBseSA9IEZ1bmN0aW9uLmFwcGx5O1xuLy8gTVMgRWRnZSBhcmd1bWVudHNMaXN0IGFyZ3VtZW50IGlzIG9wdGlvbmFsXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICFyZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uICgpIHtcbiAgckFwcGx5KGZ1bmN0aW9uICgpIHsgLyogZW1wdHkgKi8gfSk7XG59KSwgJ1JlZmxlY3QnLCB7XG4gIGFwcGx5OiBmdW5jdGlvbiBhcHBseSh0YXJnZXQsIHRoaXNBcmd1bWVudCwgYXJndW1lbnRzTGlzdCkge1xuICAgIHZhciBUID0gYUZ1bmN0aW9uKHRhcmdldCk7XG4gICAgdmFyIEwgPSBhbk9iamVjdChhcmd1bWVudHNMaXN0KTtcbiAgICByZXR1cm4gckFwcGx5ID8gckFwcGx5KFQsIHRoaXNBcmd1bWVudCwgTCkgOiBmQXBwbHkuY2FsbChULCB0aGlzQXJndW1lbnQsIEwpO1xuICB9XG59KTtcbiIsIi8vIDI2LjEuMiBSZWZsZWN0LmNvbnN0cnVjdCh0YXJnZXQsIGFyZ3VtZW50c0xpc3QgWywgbmV3VGFyZ2V0XSlcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgY3JlYXRlID0gcmVxdWlyZSgnLi9fb2JqZWN0LWNyZWF0ZScpO1xudmFyIGFGdW5jdGlvbiA9IHJlcXVpcmUoJy4vX2EtZnVuY3Rpb24nKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgZmFpbHMgPSByZXF1aXJlKCcuL19mYWlscycpO1xudmFyIGJpbmQgPSByZXF1aXJlKCcuL19iaW5kJyk7XG52YXIgckNvbnN0cnVjdCA9IChyZXF1aXJlKCcuL19nbG9iYWwnKS5SZWZsZWN0IHx8IHt9KS5jb25zdHJ1Y3Q7XG5cbi8vIE1TIEVkZ2Ugc3VwcG9ydHMgb25seSAyIGFyZ3VtZW50cyBhbmQgYXJndW1lbnRzTGlzdCBhcmd1bWVudCBpcyBvcHRpb25hbFxuLy8gRkYgTmlnaHRseSBzZXRzIHRoaXJkIGFyZ3VtZW50IGFzIGBuZXcudGFyZ2V0YCwgYnV0IGRvZXMgbm90IGNyZWF0ZSBgdGhpc2AgZnJvbSBpdFxudmFyIE5FV19UQVJHRVRfQlVHID0gZmFpbHMoZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBGKCkgeyAvKiBlbXB0eSAqLyB9XG4gIHJldHVybiAhKHJDb25zdHJ1Y3QoZnVuY3Rpb24gKCkgeyAvKiBlbXB0eSAqLyB9LCBbXSwgRikgaW5zdGFuY2VvZiBGKTtcbn0pO1xudmFyIEFSR1NfQlVHID0gIWZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgckNvbnN0cnVjdChmdW5jdGlvbiAoKSB7IC8qIGVtcHR5ICovIH0pO1xufSk7XG5cbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogKE5FV19UQVJHRVRfQlVHIHx8IEFSR1NfQlVHKSwgJ1JlZmxlY3QnLCB7XG4gIGNvbnN0cnVjdDogZnVuY3Rpb24gY29uc3RydWN0KFRhcmdldCwgYXJncyAvKiAsIG5ld1RhcmdldCAqLykge1xuICAgIGFGdW5jdGlvbihUYXJnZXQpO1xuICAgIGFuT2JqZWN0KGFyZ3MpO1xuICAgIHZhciBuZXdUYXJnZXQgPSBhcmd1bWVudHMubGVuZ3RoIDwgMyA/IFRhcmdldCA6IGFGdW5jdGlvbihhcmd1bWVudHNbMl0pO1xuICAgIGlmIChBUkdTX0JVRyAmJiAhTkVXX1RBUkdFVF9CVUcpIHJldHVybiByQ29uc3RydWN0KFRhcmdldCwgYXJncywgbmV3VGFyZ2V0KTtcbiAgICBpZiAoVGFyZ2V0ID09IG5ld1RhcmdldCkge1xuICAgICAgLy8gdy9vIGFsdGVyZWQgbmV3VGFyZ2V0LCBvcHRpbWl6YXRpb24gZm9yIDAtNCBhcmd1bWVudHNcbiAgICAgIHN3aXRjaCAoYXJncy5sZW5ndGgpIHtcbiAgICAgICAgY2FzZSAwOiByZXR1cm4gbmV3IFRhcmdldCgpO1xuICAgICAgICBjYXNlIDE6IHJldHVybiBuZXcgVGFyZ2V0KGFyZ3NbMF0pO1xuICAgICAgICBjYXNlIDI6IHJldHVybiBuZXcgVGFyZ2V0KGFyZ3NbMF0sIGFyZ3NbMV0pO1xuICAgICAgICBjYXNlIDM6IHJldHVybiBuZXcgVGFyZ2V0KGFyZ3NbMF0sIGFyZ3NbMV0sIGFyZ3NbMl0pO1xuICAgICAgICBjYXNlIDQ6IHJldHVybiBuZXcgVGFyZ2V0KGFyZ3NbMF0sIGFyZ3NbMV0sIGFyZ3NbMl0sIGFyZ3NbM10pO1xuICAgICAgfVxuICAgICAgLy8gdy9vIGFsdGVyZWQgbmV3VGFyZ2V0LCBsb3Qgb2YgYXJndW1lbnRzIGNhc2VcbiAgICAgIHZhciAkYXJncyA9IFtudWxsXTtcbiAgICAgICRhcmdzLnB1c2guYXBwbHkoJGFyZ3MsIGFyZ3MpO1xuICAgICAgcmV0dXJuIG5ldyAoYmluZC5hcHBseShUYXJnZXQsICRhcmdzKSkoKTtcbiAgICB9XG4gICAgLy8gd2l0aCBhbHRlcmVkIG5ld1RhcmdldCwgbm90IHN1cHBvcnQgYnVpbHQtaW4gY29uc3RydWN0b3JzXG4gICAgdmFyIHByb3RvID0gbmV3VGFyZ2V0LnByb3RvdHlwZTtcbiAgICB2YXIgaW5zdGFuY2UgPSBjcmVhdGUoaXNPYmplY3QocHJvdG8pID8gcHJvdG8gOiBPYmplY3QucHJvdG90eXBlKTtcbiAgICB2YXIgcmVzdWx0ID0gRnVuY3Rpb24uYXBwbHkuY2FsbChUYXJnZXQsIGluc3RhbmNlLCBhcmdzKTtcbiAgICByZXR1cm4gaXNPYmplY3QocmVzdWx0KSA/IHJlc3VsdCA6IGluc3RhbmNlO1xuICB9XG59KTtcbiIsIi8vIDI2LjEuMyBSZWZsZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgcHJvcGVydHlLZXksIGF0dHJpYnV0ZXMpXG52YXIgZFAgPSByZXF1aXJlKCcuL19vYmplY3QtZHAnKTtcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciB0b1ByaW1pdGl2ZSA9IHJlcXVpcmUoJy4vX3RvLXByaW1pdGl2ZScpO1xuXG4vLyBNUyBFZGdlIGhhcyBicm9rZW4gUmVmbGVjdC5kZWZpbmVQcm9wZXJ0eSAtIHRocm93aW5nIGluc3RlYWQgb2YgcmV0dXJuaW5nIGZhbHNlXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqIHJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24gKCkge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWZcbiAgUmVmbGVjdC5kZWZpbmVQcm9wZXJ0eShkUC5mKHt9LCAxLCB7IHZhbHVlOiAxIH0pLCAxLCB7IHZhbHVlOiAyIH0pO1xufSksICdSZWZsZWN0Jywge1xuICBkZWZpbmVQcm9wZXJ0eTogZnVuY3Rpb24gZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBwcm9wZXJ0eUtleSwgYXR0cmlidXRlcykge1xuICAgIGFuT2JqZWN0KHRhcmdldCk7XG4gICAgcHJvcGVydHlLZXkgPSB0b1ByaW1pdGl2ZShwcm9wZXJ0eUtleSwgdHJ1ZSk7XG4gICAgYW5PYmplY3QoYXR0cmlidXRlcyk7XG4gICAgdHJ5IHtcbiAgICAgIGRQLmYodGFyZ2V0LCBwcm9wZXJ0eUtleSwgYXR0cmlidXRlcyk7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG59KTtcbiIsIi8vIDI2LjEuNCBSZWZsZWN0LmRlbGV0ZVByb3BlcnR5KHRhcmdldCwgcHJvcGVydHlLZXkpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGdPUEQgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wZCcpLmY7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdSZWZsZWN0Jywge1xuICBkZWxldGVQcm9wZXJ0eTogZnVuY3Rpb24gZGVsZXRlUHJvcGVydHkodGFyZ2V0LCBwcm9wZXJ0eUtleSkge1xuICAgIHZhciBkZXNjID0gZ09QRChhbk9iamVjdCh0YXJnZXQpLCBwcm9wZXJ0eUtleSk7XG4gICAgcmV0dXJuIGRlc2MgJiYgIWRlc2MuY29uZmlndXJhYmxlID8gZmFsc2UgOiBkZWxldGUgdGFyZ2V0W3Byb3BlcnR5S2V5XTtcbiAgfVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG4vLyAyNi4xLjUgUmVmbGVjdC5lbnVtZXJhdGUodGFyZ2V0KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIEVudW1lcmF0ZSA9IGZ1bmN0aW9uIChpdGVyYXRlZCkge1xuICB0aGlzLl90ID0gYW5PYmplY3QoaXRlcmF0ZWQpOyAvLyB0YXJnZXRcbiAgdGhpcy5faSA9IDA7ICAgICAgICAgICAgICAgICAgLy8gbmV4dCBpbmRleFxuICB2YXIga2V5cyA9IHRoaXMuX2sgPSBbXTsgICAgICAvLyBrZXlzXG4gIHZhciBrZXk7XG4gIGZvciAoa2V5IGluIGl0ZXJhdGVkKSBrZXlzLnB1c2goa2V5KTtcbn07XG5yZXF1aXJlKCcuL19pdGVyLWNyZWF0ZScpKEVudW1lcmF0ZSwgJ09iamVjdCcsIGZ1bmN0aW9uICgpIHtcbiAgdmFyIHRoYXQgPSB0aGlzO1xuICB2YXIga2V5cyA9IHRoYXQuX2s7XG4gIHZhciBrZXk7XG4gIGRvIHtcbiAgICBpZiAodGhhdC5faSA+PSBrZXlzLmxlbmd0aCkgcmV0dXJuIHsgdmFsdWU6IHVuZGVmaW5lZCwgZG9uZTogdHJ1ZSB9O1xuICB9IHdoaWxlICghKChrZXkgPSBrZXlzW3RoYXQuX2krK10pIGluIHRoYXQuX3QpKTtcbiAgcmV0dXJuIHsgdmFsdWU6IGtleSwgZG9uZTogZmFsc2UgfTtcbn0pO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ1JlZmxlY3QnLCB7XG4gIGVudW1lcmF0ZTogZnVuY3Rpb24gZW51bWVyYXRlKHRhcmdldCkge1xuICAgIHJldHVybiBuZXcgRW51bWVyYXRlKHRhcmdldCk7XG4gIH1cbn0pO1xuIiwiLy8gMjYuMS42IFJlZmxlY3QuZ2V0KHRhcmdldCwgcHJvcGVydHlLZXkgWywgcmVjZWl2ZXJdKVxudmFyIGdPUEQgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wZCcpO1xudmFyIGdldFByb3RvdHlwZU9mID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdwbycpO1xudmFyIGhhcyA9IHJlcXVpcmUoJy4vX2hhcycpO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG5cbmZ1bmN0aW9uIGdldCh0YXJnZXQsIHByb3BlcnR5S2V5IC8qICwgcmVjZWl2ZXIgKi8pIHtcbiAgdmFyIHJlY2VpdmVyID0gYXJndW1lbnRzLmxlbmd0aCA8IDMgPyB0YXJnZXQgOiBhcmd1bWVudHNbMl07XG4gIHZhciBkZXNjLCBwcm90bztcbiAgaWYgKGFuT2JqZWN0KHRhcmdldCkgPT09IHJlY2VpdmVyKSByZXR1cm4gdGFyZ2V0W3Byb3BlcnR5S2V5XTtcbiAgaWYgKGRlc2MgPSBnT1BELmYodGFyZ2V0LCBwcm9wZXJ0eUtleSkpIHJldHVybiBoYXMoZGVzYywgJ3ZhbHVlJylcbiAgICA/IGRlc2MudmFsdWVcbiAgICA6IGRlc2MuZ2V0ICE9PSB1bmRlZmluZWRcbiAgICAgID8gZGVzYy5nZXQuY2FsbChyZWNlaXZlcilcbiAgICAgIDogdW5kZWZpbmVkO1xuICBpZiAoaXNPYmplY3QocHJvdG8gPSBnZXRQcm90b3R5cGVPZih0YXJnZXQpKSkgcmV0dXJuIGdldChwcm90bywgcHJvcGVydHlLZXksIHJlY2VpdmVyKTtcbn1cblxuJGV4cG9ydCgkZXhwb3J0LlMsICdSZWZsZWN0JywgeyBnZXQ6IGdldCB9KTtcbiIsIi8vIDI2LjEuNyBSZWZsZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0YXJnZXQsIHByb3BlcnR5S2V5KVxudmFyIGdPUEQgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wZCcpO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ1JlZmxlY3QnLCB7XG4gIGdldE93blByb3BlcnR5RGVzY3JpcHRvcjogZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHRhcmdldCwgcHJvcGVydHlLZXkpIHtcbiAgICByZXR1cm4gZ09QRC5mKGFuT2JqZWN0KHRhcmdldCksIHByb3BlcnR5S2V5KTtcbiAgfVxufSk7XG4iLCIvLyAyNi4xLjggUmVmbGVjdC5nZXRQcm90b3R5cGVPZih0YXJnZXQpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGdldFByb3RvID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdwbycpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnUmVmbGVjdCcsIHtcbiAgZ2V0UHJvdG90eXBlT2Y6IGZ1bmN0aW9uIGdldFByb3RvdHlwZU9mKHRhcmdldCkge1xuICAgIHJldHVybiBnZXRQcm90byhhbk9iamVjdCh0YXJnZXQpKTtcbiAgfVxufSk7XG4iLCIvLyAyNi4xLjkgUmVmbGVjdC5oYXModGFyZ2V0LCBwcm9wZXJ0eUtleSlcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnUmVmbGVjdCcsIHtcbiAgaGFzOiBmdW5jdGlvbiBoYXModGFyZ2V0LCBwcm9wZXJ0eUtleSkge1xuICAgIHJldHVybiBwcm9wZXJ0eUtleSBpbiB0YXJnZXQ7XG4gIH1cbn0pO1xuIiwiLy8gMjYuMS4xMCBSZWZsZWN0LmlzRXh0ZW5zaWJsZSh0YXJnZXQpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgJGlzRXh0ZW5zaWJsZSA9IE9iamVjdC5pc0V4dGVuc2libGU7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnUmVmbGVjdCcsIHtcbiAgaXNFeHRlbnNpYmxlOiBmdW5jdGlvbiBpc0V4dGVuc2libGUodGFyZ2V0KSB7XG4gICAgYW5PYmplY3QodGFyZ2V0KTtcbiAgICByZXR1cm4gJGlzRXh0ZW5zaWJsZSA/ICRpc0V4dGVuc2libGUodGFyZ2V0KSA6IHRydWU7XG4gIH1cbn0pO1xuIiwiLy8gMjYuMS4xMSBSZWZsZWN0Lm93bktleXModGFyZ2V0KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdSZWZsZWN0JywgeyBvd25LZXlzOiByZXF1aXJlKCcuL19vd24ta2V5cycpIH0pO1xuIiwiLy8gMjYuMS4xMiBSZWZsZWN0LnByZXZlbnRFeHRlbnNpb25zKHRhcmdldClcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciAkcHJldmVudEV4dGVuc2lvbnMgPSBPYmplY3QucHJldmVudEV4dGVuc2lvbnM7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnUmVmbGVjdCcsIHtcbiAgcHJldmVudEV4dGVuc2lvbnM6IGZ1bmN0aW9uIHByZXZlbnRFeHRlbnNpb25zKHRhcmdldCkge1xuICAgIGFuT2JqZWN0KHRhcmdldCk7XG4gICAgdHJ5IHtcbiAgICAgIGlmICgkcHJldmVudEV4dGVuc2lvbnMpICRwcmV2ZW50RXh0ZW5zaW9ucyh0YXJnZXQpO1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxufSk7XG4iLCIvLyAyNi4xLjEzIFJlZmxlY3Quc2V0KHRhcmdldCwgcHJvcGVydHlLZXksIFYgWywgcmVjZWl2ZXJdKVxudmFyIGRQID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJyk7XG52YXIgZ09QRCA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BkJyk7XG52YXIgZ2V0UHJvdG90eXBlT2YgPSByZXF1aXJlKCcuL19vYmplY3QtZ3BvJyk7XG52YXIgaGFzID0gcmVxdWlyZSgnLi9faGFzJyk7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGNyZWF0ZURlc2MgPSByZXF1aXJlKCcuL19wcm9wZXJ0eS1kZXNjJyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xuXG5mdW5jdGlvbiBzZXQodGFyZ2V0LCBwcm9wZXJ0eUtleSwgViAvKiAsIHJlY2VpdmVyICovKSB7XG4gIHZhciByZWNlaXZlciA9IGFyZ3VtZW50cy5sZW5ndGggPCA0ID8gdGFyZ2V0IDogYXJndW1lbnRzWzNdO1xuICB2YXIgb3duRGVzYyA9IGdPUEQuZihhbk9iamVjdCh0YXJnZXQpLCBwcm9wZXJ0eUtleSk7XG4gIHZhciBleGlzdGluZ0Rlc2NyaXB0b3IsIHByb3RvO1xuICBpZiAoIW93bkRlc2MpIHtcbiAgICBpZiAoaXNPYmplY3QocHJvdG8gPSBnZXRQcm90b3R5cGVPZih0YXJnZXQpKSkge1xuICAgICAgcmV0dXJuIHNldChwcm90bywgcHJvcGVydHlLZXksIFYsIHJlY2VpdmVyKTtcbiAgICB9XG4gICAgb3duRGVzYyA9IGNyZWF0ZURlc2MoMCk7XG4gIH1cbiAgaWYgKGhhcyhvd25EZXNjLCAndmFsdWUnKSkge1xuICAgIGlmIChvd25EZXNjLndyaXRhYmxlID09PSBmYWxzZSB8fCAhaXNPYmplY3QocmVjZWl2ZXIpKSByZXR1cm4gZmFsc2U7XG4gICAgaWYgKGV4aXN0aW5nRGVzY3JpcHRvciA9IGdPUEQuZihyZWNlaXZlciwgcHJvcGVydHlLZXkpKSB7XG4gICAgICBpZiAoZXhpc3RpbmdEZXNjcmlwdG9yLmdldCB8fCBleGlzdGluZ0Rlc2NyaXB0b3Iuc2V0IHx8IGV4aXN0aW5nRGVzY3JpcHRvci53cml0YWJsZSA9PT0gZmFsc2UpIHJldHVybiBmYWxzZTtcbiAgICAgIGV4aXN0aW5nRGVzY3JpcHRvci52YWx1ZSA9IFY7XG4gICAgICBkUC5mKHJlY2VpdmVyLCBwcm9wZXJ0eUtleSwgZXhpc3RpbmdEZXNjcmlwdG9yKTtcbiAgICB9IGVsc2UgZFAuZihyZWNlaXZlciwgcHJvcGVydHlLZXksIGNyZWF0ZURlc2MoMCwgVikpO1xuICAgIHJldHVybiB0cnVlO1xuICB9XG4gIHJldHVybiBvd25EZXNjLnNldCA9PT0gdW5kZWZpbmVkID8gZmFsc2UgOiAob3duRGVzYy5zZXQuY2FsbChyZWNlaXZlciwgViksIHRydWUpO1xufVxuXG4kZXhwb3J0KCRleHBvcnQuUywgJ1JlZmxlY3QnLCB7IHNldDogc2V0IH0pO1xuIiwiLy8gMjYuMS4xNCBSZWZsZWN0LnNldFByb3RvdHlwZU9mKHRhcmdldCwgcHJvdG8pXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIHNldFByb3RvID0gcmVxdWlyZSgnLi9fc2V0LXByb3RvJyk7XG5cbmlmIChzZXRQcm90bykgJGV4cG9ydCgkZXhwb3J0LlMsICdSZWZsZWN0Jywge1xuICBzZXRQcm90b3R5cGVPZjogZnVuY3Rpb24gc2V0UHJvdG90eXBlT2YodGFyZ2V0LCBwcm90bykge1xuICAgIHNldFByb3RvLmNoZWNrKHRhcmdldCwgcHJvdG8pO1xuICAgIHRyeSB7XG4gICAgICBzZXRQcm90by5zZXQodGFyZ2V0LCBwcm90byk7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS90YzM5L0FycmF5LnByb3RvdHlwZS5pbmNsdWRlc1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkaW5jbHVkZXMgPSByZXF1aXJlKCcuL19hcnJheS1pbmNsdWRlcycpKHRydWUpO1xuXG4kZXhwb3J0KCRleHBvcnQuUCwgJ0FycmF5Jywge1xuICBpbmNsdWRlczogZnVuY3Rpb24gaW5jbHVkZXMoZWwgLyogLCBmcm9tSW5kZXggPSAwICovKSB7XG4gICAgcmV0dXJuICRpbmNsdWRlcyh0aGlzLCBlbCwgYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQpO1xuICB9XG59KTtcblxucmVxdWlyZSgnLi9fYWRkLXRvLXVuc2NvcGFibGVzJykoJ2luY2x1ZGVzJyk7XG4iLCIndXNlIHN0cmljdCc7XG4vLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL3Byb3Bvc2FsLWZsYXRNYXAvI3NlYy1BcnJheS5wcm90b3R5cGUuZmxhdE1hcFxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBmbGF0dGVuSW50b0FycmF5ID0gcmVxdWlyZSgnLi9fZmxhdHRlbi1pbnRvLWFycmF5Jyk7XG52YXIgdG9PYmplY3QgPSByZXF1aXJlKCcuL190by1vYmplY3QnKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xudmFyIGFGdW5jdGlvbiA9IHJlcXVpcmUoJy4vX2EtZnVuY3Rpb24nKTtcbnZhciBhcnJheVNwZWNpZXNDcmVhdGUgPSByZXF1aXJlKCcuL19hcnJheS1zcGVjaWVzLWNyZWF0ZScpO1xuXG4kZXhwb3J0KCRleHBvcnQuUCwgJ0FycmF5Jywge1xuICBmbGF0TWFwOiBmdW5jdGlvbiBmbGF0TWFwKGNhbGxiYWNrZm4gLyogLCB0aGlzQXJnICovKSB7XG4gICAgdmFyIE8gPSB0b09iamVjdCh0aGlzKTtcbiAgICB2YXIgc291cmNlTGVuLCBBO1xuICAgIGFGdW5jdGlvbihjYWxsYmFja2ZuKTtcbiAgICBzb3VyY2VMZW4gPSB0b0xlbmd0aChPLmxlbmd0aCk7XG4gICAgQSA9IGFycmF5U3BlY2llc0NyZWF0ZShPLCAwKTtcbiAgICBmbGF0dGVuSW50b0FycmF5KEEsIE8sIE8sIHNvdXJjZUxlbiwgMCwgMSwgY2FsbGJhY2tmbiwgYXJndW1lbnRzWzFdKTtcbiAgICByZXR1cm4gQTtcbiAgfVxufSk7XG5cbnJlcXVpcmUoJy4vX2FkZC10by11bnNjb3BhYmxlcycpKCdmbGF0TWFwJyk7XG4iLCIndXNlIHN0cmljdCc7XG4vLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL3Byb3Bvc2FsLWZsYXRNYXAvI3NlYy1BcnJheS5wcm90b3R5cGUuZmxhdHRlblxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBmbGF0dGVuSW50b0FycmF5ID0gcmVxdWlyZSgnLi9fZmxhdHRlbi1pbnRvLWFycmF5Jyk7XG52YXIgdG9PYmplY3QgPSByZXF1aXJlKCcuL190by1vYmplY3QnKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xudmFyIHRvSW50ZWdlciA9IHJlcXVpcmUoJy4vX3RvLWludGVnZXInKTtcbnZhciBhcnJheVNwZWNpZXNDcmVhdGUgPSByZXF1aXJlKCcuL19hcnJheS1zcGVjaWVzLWNyZWF0ZScpO1xuXG4kZXhwb3J0KCRleHBvcnQuUCwgJ0FycmF5Jywge1xuICBmbGF0dGVuOiBmdW5jdGlvbiBmbGF0dGVuKC8qIGRlcHRoQXJnID0gMSAqLykge1xuICAgIHZhciBkZXB0aEFyZyA9IGFyZ3VtZW50c1swXTtcbiAgICB2YXIgTyA9IHRvT2JqZWN0KHRoaXMpO1xuICAgIHZhciBzb3VyY2VMZW4gPSB0b0xlbmd0aChPLmxlbmd0aCk7XG4gICAgdmFyIEEgPSBhcnJheVNwZWNpZXNDcmVhdGUoTywgMCk7XG4gICAgZmxhdHRlbkludG9BcnJheShBLCBPLCBPLCBzb3VyY2VMZW4sIDAsIGRlcHRoQXJnID09PSB1bmRlZmluZWQgPyAxIDogdG9JbnRlZ2VyKGRlcHRoQXJnKSk7XG4gICAgcmV0dXJuIEE7XG4gIH1cbn0pO1xuXG5yZXF1aXJlKCcuL19hZGQtdG8tdW5zY29wYWJsZXMnKSgnZmxhdHRlbicpO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gaHR0cHM6Ly9naXRodWIuY29tL21hdGhpYXNieW5lbnMvU3RyaW5nLnByb3RvdHlwZS5hdFxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkYXQgPSByZXF1aXJlKCcuL19zdHJpbmctYXQnKSh0cnVlKTtcblxuJGV4cG9ydCgkZXhwb3J0LlAsICdTdHJpbmcnLCB7XG4gIGF0OiBmdW5jdGlvbiBhdChwb3MpIHtcbiAgICByZXR1cm4gJGF0KHRoaXMsIHBvcyk7XG4gIH1cbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gaHR0cHM6Ly9naXRodWIuY29tL3RjMzkvcHJvcG9zYWwtc3RyaW5nLXBhZC1zdGFydC1lbmRcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgJHBhZCA9IHJlcXVpcmUoJy4vX3N0cmluZy1wYWQnKTtcbnZhciB1c2VyQWdlbnQgPSByZXF1aXJlKCcuL191c2VyLWFnZW50Jyk7XG5cbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS96bG9pcm9jay9jb3JlLWpzL2lzc3Vlcy8yODBcbnZhciBXRUJLSVRfQlVHID0gL1ZlcnNpb25cXC8xMFxcLlxcZCsoXFwuXFxkKyk/KCBNb2JpbGVcXC9cXHcrKT8gU2FmYXJpXFwvLy50ZXN0KHVzZXJBZ2VudCk7XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogV0VCS0lUX0JVRywgJ1N0cmluZycsIHtcbiAgcGFkU3RhcnQ6IGZ1bmN0aW9uIHBhZFN0YXJ0KG1heExlbmd0aCAvKiAsIGZpbGxTdHJpbmcgPSAnICcgKi8pIHtcbiAgICByZXR1cm4gJHBhZCh0aGlzLCBtYXhMZW5ndGgsIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkLCB0cnVlKTtcbiAgfVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG4vLyBodHRwczovL2dpdGh1Yi5jb20vdGMzOS9wcm9wb3NhbC1zdHJpbmctcGFkLXN0YXJ0LWVuZFxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkcGFkID0gcmVxdWlyZSgnLi9fc3RyaW5nLXBhZCcpO1xudmFyIHVzZXJBZ2VudCA9IHJlcXVpcmUoJy4vX3VzZXItYWdlbnQnKTtcblxuLy8gaHR0cHM6Ly9naXRodWIuY29tL3psb2lyb2NrL2NvcmUtanMvaXNzdWVzLzI4MFxudmFyIFdFQktJVF9CVUcgPSAvVmVyc2lvblxcLzEwXFwuXFxkKyhcXC5cXGQrKT8oIE1vYmlsZVxcL1xcdyspPyBTYWZhcmlcXC8vLnRlc3QodXNlckFnZW50KTtcblxuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiBXRUJLSVRfQlVHLCAnU3RyaW5nJywge1xuICBwYWRFbmQ6IGZ1bmN0aW9uIHBhZEVuZChtYXhMZW5ndGggLyogLCBmaWxsU3RyaW5nID0gJyAnICovKSB7XG4gICAgcmV0dXJuICRwYWQodGhpcywgbWF4TGVuZ3RoLCBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZCwgZmFsc2UpO1xuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9zZWJtYXJrYmFnZS9lY21hc2NyaXB0LXN0cmluZy1sZWZ0LXJpZ2h0LXRyaW1cbnJlcXVpcmUoJy4vX3N0cmluZy10cmltJykoJ3RyaW1MZWZ0JywgZnVuY3Rpb24gKCR0cmltKSB7XG4gIHJldHVybiBmdW5jdGlvbiB0cmltTGVmdCgpIHtcbiAgICByZXR1cm4gJHRyaW0odGhpcywgMSk7XG4gIH07XG59LCAndHJpbVN0YXJ0Jyk7XG4iLCIndXNlIHN0cmljdCc7XG4vLyBodHRwczovL2dpdGh1Yi5jb20vc2VibWFya2JhZ2UvZWNtYXNjcmlwdC1zdHJpbmctbGVmdC1yaWdodC10cmltXG5yZXF1aXJlKCcuL19zdHJpbmctdHJpbScpKCd0cmltUmlnaHQnLCBmdW5jdGlvbiAoJHRyaW0pIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIHRyaW1SaWdodCgpIHtcbiAgICByZXR1cm4gJHRyaW0odGhpcywgMik7XG4gIH07XG59LCAndHJpbUVuZCcpO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gaHR0cHM6Ly90YzM5LmdpdGh1Yi5pby9TdHJpbmcucHJvdG90eXBlLm1hdGNoQWxsL1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBkZWZpbmVkID0gcmVxdWlyZSgnLi9fZGVmaW5lZCcpO1xudmFyIHRvTGVuZ3RoID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJyk7XG52YXIgaXNSZWdFeHAgPSByZXF1aXJlKCcuL19pcy1yZWdleHAnKTtcbnZhciBnZXRGbGFncyA9IHJlcXVpcmUoJy4vX2ZsYWdzJyk7XG52YXIgUmVnRXhwUHJvdG8gPSBSZWdFeHAucHJvdG90eXBlO1xuXG52YXIgJFJlZ0V4cFN0cmluZ0l0ZXJhdG9yID0gZnVuY3Rpb24gKHJlZ2V4cCwgc3RyaW5nKSB7XG4gIHRoaXMuX3IgPSByZWdleHA7XG4gIHRoaXMuX3MgPSBzdHJpbmc7XG59O1xuXG5yZXF1aXJlKCcuL19pdGVyLWNyZWF0ZScpKCRSZWdFeHBTdHJpbmdJdGVyYXRvciwgJ1JlZ0V4cCBTdHJpbmcnLCBmdW5jdGlvbiBuZXh0KCkge1xuICB2YXIgbWF0Y2ggPSB0aGlzLl9yLmV4ZWModGhpcy5fcyk7XG4gIHJldHVybiB7IHZhbHVlOiBtYXRjaCwgZG9uZTogbWF0Y2ggPT09IG51bGwgfTtcbn0pO1xuXG4kZXhwb3J0KCRleHBvcnQuUCwgJ1N0cmluZycsIHtcbiAgbWF0Y2hBbGw6IGZ1bmN0aW9uIG1hdGNoQWxsKHJlZ2V4cCkge1xuICAgIGRlZmluZWQodGhpcyk7XG4gICAgaWYgKCFpc1JlZ0V4cChyZWdleHApKSB0aHJvdyBUeXBlRXJyb3IocmVnZXhwICsgJyBpcyBub3QgYSByZWdleHAhJyk7XG4gICAgdmFyIFMgPSBTdHJpbmcodGhpcyk7XG4gICAgdmFyIGZsYWdzID0gJ2ZsYWdzJyBpbiBSZWdFeHBQcm90byA/IFN0cmluZyhyZWdleHAuZmxhZ3MpIDogZ2V0RmxhZ3MuY2FsbChyZWdleHApO1xuICAgIHZhciByeCA9IG5ldyBSZWdFeHAocmVnZXhwLnNvdXJjZSwgfmZsYWdzLmluZGV4T2YoJ2cnKSA/IGZsYWdzIDogJ2cnICsgZmxhZ3MpO1xuICAgIHJ4Lmxhc3RJbmRleCA9IHRvTGVuZ3RoKHJlZ2V4cC5sYXN0SW5kZXgpO1xuICAgIHJldHVybiBuZXcgJFJlZ0V4cFN0cmluZ0l0ZXJhdG9yKHJ4LCBTKTtcbiAgfVxufSk7XG4iLCJyZXF1aXJlKCcuL193a3MtZGVmaW5lJykoJ2FzeW5jSXRlcmF0b3InKTtcbiIsInJlcXVpcmUoJy4vX3drcy1kZWZpbmUnKSgnb2JzZXJ2YWJsZScpO1xuIiwiLy8gaHR0cHM6Ly9naXRodWIuY29tL3RjMzkvcHJvcG9zYWwtb2JqZWN0LWdldG93bnByb3BlcnR5ZGVzY3JpcHRvcnNcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgb3duS2V5cyA9IHJlcXVpcmUoJy4vX293bi1rZXlzJyk7XG52YXIgdG9JT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8taW9iamVjdCcpO1xudmFyIGdPUEQgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wZCcpO1xudmFyIGNyZWF0ZVByb3BlcnR5ID0gcmVxdWlyZSgnLi9fY3JlYXRlLXByb3BlcnR5Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnT2JqZWN0Jywge1xuICBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzOiBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKG9iamVjdCkge1xuICAgIHZhciBPID0gdG9JT2JqZWN0KG9iamVjdCk7XG4gICAgdmFyIGdldERlc2MgPSBnT1BELmY7XG4gICAgdmFyIGtleXMgPSBvd25LZXlzKE8pO1xuICAgIHZhciByZXN1bHQgPSB7fTtcbiAgICB2YXIgaSA9IDA7XG4gICAgdmFyIGtleSwgZGVzYztcbiAgICB3aGlsZSAoa2V5cy5sZW5ndGggPiBpKSB7XG4gICAgICBkZXNjID0gZ2V0RGVzYyhPLCBrZXkgPSBrZXlzW2krK10pO1xuICAgICAgaWYgKGRlc2MgIT09IHVuZGVmaW5lZCkgY3JlYXRlUHJvcGVydHkocmVzdWx0LCBrZXksIGRlc2MpO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG59KTtcbiIsIi8vIGh0dHBzOi8vZ2l0aHViLmNvbS90YzM5L3Byb3Bvc2FsLW9iamVjdC12YWx1ZXMtZW50cmllc1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkdmFsdWVzID0gcmVxdWlyZSgnLi9fb2JqZWN0LXRvLWFycmF5JykoZmFsc2UpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ09iamVjdCcsIHtcbiAgdmFsdWVzOiBmdW5jdGlvbiB2YWx1ZXMoaXQpIHtcbiAgICByZXR1cm4gJHZhbHVlcyhpdCk7XG4gIH1cbn0pO1xuIiwiLy8gaHR0cHM6Ly9naXRodWIuY29tL3RjMzkvcHJvcG9zYWwtb2JqZWN0LXZhbHVlcy1lbnRyaWVzXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRlbnRyaWVzID0gcmVxdWlyZSgnLi9fb2JqZWN0LXRvLWFycmF5JykodHJ1ZSk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnT2JqZWN0Jywge1xuICBlbnRyaWVzOiBmdW5jdGlvbiBlbnRyaWVzKGl0KSB7XG4gICAgcmV0dXJuICRlbnRyaWVzKGl0KTtcbiAgfVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8tb2JqZWN0Jyk7XG52YXIgYUZ1bmN0aW9uID0gcmVxdWlyZSgnLi9fYS1mdW5jdGlvbicpO1xudmFyICRkZWZpbmVQcm9wZXJ0eSA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpO1xuXG4vLyBCLjIuMi4yIE9iamVjdC5wcm90b3R5cGUuX19kZWZpbmVHZXR0ZXJfXyhQLCBnZXR0ZXIpXG5yZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpICYmICRleHBvcnQoJGV4cG9ydC5QICsgcmVxdWlyZSgnLi9fb2JqZWN0LWZvcmNlZC1wYW0nKSwgJ09iamVjdCcsIHtcbiAgX19kZWZpbmVHZXR0ZXJfXzogZnVuY3Rpb24gX19kZWZpbmVHZXR0ZXJfXyhQLCBnZXR0ZXIpIHtcbiAgICAkZGVmaW5lUHJvcGVydHkuZih0b09iamVjdCh0aGlzKSwgUCwgeyBnZXQ6IGFGdW5jdGlvbihnZXR0ZXIpLCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSk7XG4gIH1cbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpO1xudmFyIGFGdW5jdGlvbiA9IHJlcXVpcmUoJy4vX2EtZnVuY3Rpb24nKTtcbnZhciAkZGVmaW5lUHJvcGVydHkgPSByZXF1aXJlKCcuL19vYmplY3QtZHAnKTtcblxuLy8gQi4yLjIuMyBPYmplY3QucHJvdG90eXBlLl9fZGVmaW5lU2V0dGVyX18oUCwgc2V0dGVyKVxucmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKSAmJiAkZXhwb3J0KCRleHBvcnQuUCArIHJlcXVpcmUoJy4vX29iamVjdC1mb3JjZWQtcGFtJyksICdPYmplY3QnLCB7XG4gIF9fZGVmaW5lU2V0dGVyX186IGZ1bmN0aW9uIF9fZGVmaW5lU2V0dGVyX18oUCwgc2V0dGVyKSB7XG4gICAgJGRlZmluZVByb3BlcnR5LmYodG9PYmplY3QodGhpcyksIFAsIHsgc2V0OiBhRnVuY3Rpb24oc2V0dGVyKSwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0pO1xuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgdG9PYmplY3QgPSByZXF1aXJlKCcuL190by1vYmplY3QnKTtcbnZhciB0b1ByaW1pdGl2ZSA9IHJlcXVpcmUoJy4vX3RvLXByaW1pdGl2ZScpO1xudmFyIGdldFByb3RvdHlwZU9mID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdwbycpO1xudmFyIGdldE93blByb3BlcnR5RGVzY3JpcHRvciA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BkJykuZjtcblxuLy8gQi4yLjIuNCBPYmplY3QucHJvdG90eXBlLl9fbG9va3VwR2V0dGVyX18oUClcbnJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgJiYgJGV4cG9ydCgkZXhwb3J0LlAgKyByZXF1aXJlKCcuL19vYmplY3QtZm9yY2VkLXBhbScpLCAnT2JqZWN0Jywge1xuICBfX2xvb2t1cEdldHRlcl9fOiBmdW5jdGlvbiBfX2xvb2t1cEdldHRlcl9fKFApIHtcbiAgICB2YXIgTyA9IHRvT2JqZWN0KHRoaXMpO1xuICAgIHZhciBLID0gdG9QcmltaXRpdmUoUCwgdHJ1ZSk7XG4gICAgdmFyIEQ7XG4gICAgZG8ge1xuICAgICAgaWYgKEQgPSBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTywgSykpIHJldHVybiBELmdldDtcbiAgICB9IHdoaWxlIChPID0gZ2V0UHJvdG90eXBlT2YoTykpO1xuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgdG9PYmplY3QgPSByZXF1aXJlKCcuL190by1vYmplY3QnKTtcbnZhciB0b1ByaW1pdGl2ZSA9IHJlcXVpcmUoJy4vX3RvLXByaW1pdGl2ZScpO1xudmFyIGdldFByb3RvdHlwZU9mID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdwbycpO1xudmFyIGdldE93blByb3BlcnR5RGVzY3JpcHRvciA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BkJykuZjtcblxuLy8gQi4yLjIuNSBPYmplY3QucHJvdG90eXBlLl9fbG9va3VwU2V0dGVyX18oUClcbnJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgJiYgJGV4cG9ydCgkZXhwb3J0LlAgKyByZXF1aXJlKCcuL19vYmplY3QtZm9yY2VkLXBhbScpLCAnT2JqZWN0Jywge1xuICBfX2xvb2t1cFNldHRlcl9fOiBmdW5jdGlvbiBfX2xvb2t1cFNldHRlcl9fKFApIHtcbiAgICB2YXIgTyA9IHRvT2JqZWN0KHRoaXMpO1xuICAgIHZhciBLID0gdG9QcmltaXRpdmUoUCwgdHJ1ZSk7XG4gICAgdmFyIEQ7XG4gICAgZG8ge1xuICAgICAgaWYgKEQgPSBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTywgSykpIHJldHVybiBELnNldDtcbiAgICB9IHdoaWxlIChPID0gZ2V0UHJvdG90eXBlT2YoTykpO1xuICB9XG59KTtcbiIsIi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9EYXZpZEJydWFudC9NYXAtU2V0LnByb3RvdHlwZS50b0pTT05cbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5SLCAnTWFwJywgeyB0b0pTT046IHJlcXVpcmUoJy4vX2NvbGxlY3Rpb24tdG8tanNvbicpKCdNYXAnKSB9KTtcbiIsIi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9EYXZpZEJydWFudC9NYXAtU2V0LnByb3RvdHlwZS50b0pTT05cbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5SLCAnU2V0JywgeyB0b0pTT046IHJlcXVpcmUoJy4vX2NvbGxlY3Rpb24tdG8tanNvbicpKCdTZXQnKSB9KTtcbiIsIi8vIGh0dHBzOi8vdGMzOS5naXRodWIuaW8vcHJvcG9zYWwtc2V0bWFwLW9mZnJvbS8jc2VjLW1hcC5vZlxucmVxdWlyZSgnLi9fc2V0LWNvbGxlY3Rpb24tb2YnKSgnTWFwJyk7XG4iLCIvLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL3Byb3Bvc2FsLXNldG1hcC1vZmZyb20vI3NlYy1zZXQub2ZcbnJlcXVpcmUoJy4vX3NldC1jb2xsZWN0aW9uLW9mJykoJ1NldCcpO1xuIiwiLy8gaHR0cHM6Ly90YzM5LmdpdGh1Yi5pby9wcm9wb3NhbC1zZXRtYXAtb2Zmcm9tLyNzZWMtd2Vha21hcC5vZlxucmVxdWlyZSgnLi9fc2V0LWNvbGxlY3Rpb24tb2YnKSgnV2Vha01hcCcpO1xuIiwiLy8gaHR0cHM6Ly90YzM5LmdpdGh1Yi5pby9wcm9wb3NhbC1zZXRtYXAtb2Zmcm9tLyNzZWMtd2Vha3NldC5vZlxucmVxdWlyZSgnLi9fc2V0LWNvbGxlY3Rpb24tb2YnKSgnV2Vha1NldCcpO1xuIiwiLy8gaHR0cHM6Ly90YzM5LmdpdGh1Yi5pby9wcm9wb3NhbC1zZXRtYXAtb2Zmcm9tLyNzZWMtbWFwLmZyb21cbnJlcXVpcmUoJy4vX3NldC1jb2xsZWN0aW9uLWZyb20nKSgnTWFwJyk7XG4iLCIvLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL3Byb3Bvc2FsLXNldG1hcC1vZmZyb20vI3NlYy1zZXQuZnJvbVxucmVxdWlyZSgnLi9fc2V0LWNvbGxlY3Rpb24tZnJvbScpKCdTZXQnKTtcbiIsIi8vIGh0dHBzOi8vdGMzOS5naXRodWIuaW8vcHJvcG9zYWwtc2V0bWFwLW9mZnJvbS8jc2VjLXdlYWttYXAuZnJvbVxucmVxdWlyZSgnLi9fc2V0LWNvbGxlY3Rpb24tZnJvbScpKCdXZWFrTWFwJyk7XG4iLCIvLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL3Byb3Bvc2FsLXNldG1hcC1vZmZyb20vI3NlYy13ZWFrc2V0LmZyb21cbnJlcXVpcmUoJy4vX3NldC1jb2xsZWN0aW9uLWZyb20nKSgnV2Vha1NldCcpO1xuIiwiLy8gaHR0cHM6Ly9naXRodWIuY29tL3RjMzkvcHJvcG9zYWwtZ2xvYmFsXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuRywgeyBnbG9iYWw6IHJlcXVpcmUoJy4vX2dsb2JhbCcpIH0pO1xuIiwiLy8gaHR0cHM6Ly9naXRodWIuY29tL3RjMzkvcHJvcG9zYWwtZ2xvYmFsXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ1N5c3RlbScsIHsgZ2xvYmFsOiByZXF1aXJlKCcuL19nbG9iYWwnKSB9KTtcbiIsIi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9samhhcmIvcHJvcG9zYWwtaXMtZXJyb3JcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgY29mID0gcmVxdWlyZSgnLi9fY29mJyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnRXJyb3InLCB7XG4gIGlzRXJyb3I6IGZ1bmN0aW9uIGlzRXJyb3IoaXQpIHtcbiAgICByZXR1cm4gY29mKGl0KSA9PT0gJ0Vycm9yJztcbiAgfVxufSk7XG4iLCIvLyBodHRwczovL3J3YWxkcm9uLmdpdGh1Yi5pby9wcm9wb3NhbC1tYXRoLWV4dGVuc2lvbnMvXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ01hdGgnLCB7XG4gIGNsYW1wOiBmdW5jdGlvbiBjbGFtcCh4LCBsb3dlciwgdXBwZXIpIHtcbiAgICByZXR1cm4gTWF0aC5taW4odXBwZXIsIE1hdGgubWF4KGxvd2VyLCB4KSk7XG4gIH1cbn0pO1xuIiwiLy8gaHR0cHM6Ly9yd2FsZHJvbi5naXRodWIuaW8vcHJvcG9zYWwtbWF0aC1leHRlbnNpb25zL1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdNYXRoJywgeyBERUdfUEVSX1JBRDogTWF0aC5QSSAvIDE4MCB9KTtcbiIsIi8vIGh0dHBzOi8vcndhbGRyb24uZ2l0aHViLmlvL3Byb3Bvc2FsLW1hdGgtZXh0ZW5zaW9ucy9cbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgUkFEX1BFUl9ERUcgPSAxODAgLyBNYXRoLlBJO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ01hdGgnLCB7XG4gIGRlZ3JlZXM6IGZ1bmN0aW9uIGRlZ3JlZXMocmFkaWFucykge1xuICAgIHJldHVybiByYWRpYW5zICogUkFEX1BFUl9ERUc7XG4gIH1cbn0pO1xuIiwiLy8gaHR0cHM6Ly9yd2FsZHJvbi5naXRodWIuaW8vcHJvcG9zYWwtbWF0aC1leHRlbnNpb25zL1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBzY2FsZSA9IHJlcXVpcmUoJy4vX21hdGgtc2NhbGUnKTtcbnZhciBmcm91bmQgPSByZXF1aXJlKCcuL19tYXRoLWZyb3VuZCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ01hdGgnLCB7XG4gIGZzY2FsZTogZnVuY3Rpb24gZnNjYWxlKHgsIGluTG93LCBpbkhpZ2gsIG91dExvdywgb3V0SGlnaCkge1xuICAgIHJldHVybiBmcm91bmQoc2NhbGUoeCwgaW5Mb3csIGluSGlnaCwgb3V0TG93LCBvdXRIaWdoKSk7XG4gIH1cbn0pO1xuIiwiLy8gaHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vQnJlbmRhbkVpY2gvNDI5NGQ1YzIxMmE2ZDIyNTQ3MDNcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnTWF0aCcsIHtcbiAgaWFkZGg6IGZ1bmN0aW9uIGlhZGRoKHgwLCB4MSwgeTAsIHkxKSB7XG4gICAgdmFyICR4MCA9IHgwID4+PiAwO1xuICAgIHZhciAkeDEgPSB4MSA+Pj4gMDtcbiAgICB2YXIgJHkwID0geTAgPj4+IDA7XG4gICAgcmV0dXJuICR4MSArICh5MSA+Pj4gMCkgKyAoKCR4MCAmICR5MCB8ICgkeDAgfCAkeTApICYgfigkeDAgKyAkeTAgPj4+IDApKSA+Pj4gMzEpIHwgMDtcbiAgfVxufSk7XG4iLCIvLyBodHRwczovL2dpc3QuZ2l0aHViLmNvbS9CcmVuZGFuRWljaC80Mjk0ZDVjMjEyYTZkMjI1NDcwM1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdNYXRoJywge1xuICBpc3ViaDogZnVuY3Rpb24gaXN1YmgoeDAsIHgxLCB5MCwgeTEpIHtcbiAgICB2YXIgJHgwID0geDAgPj4+IDA7XG4gICAgdmFyICR4MSA9IHgxID4+PiAwO1xuICAgIHZhciAkeTAgPSB5MCA+Pj4gMDtcbiAgICByZXR1cm4gJHgxIC0gKHkxID4+PiAwKSAtICgofiR4MCAmICR5MCB8IH4oJHgwIF4gJHkwKSAmICR4MCAtICR5MCA+Pj4gMCkgPj4+IDMxKSB8IDA7XG4gIH1cbn0pO1xuIiwiLy8gaHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vQnJlbmRhbkVpY2gvNDI5NGQ1YzIxMmE2ZDIyNTQ3MDNcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnTWF0aCcsIHtcbiAgaW11bGg6IGZ1bmN0aW9uIGltdWxoKHUsIHYpIHtcbiAgICB2YXIgVUlOVDE2ID0gMHhmZmZmO1xuICAgIHZhciAkdSA9ICt1O1xuICAgIHZhciAkdiA9ICt2O1xuICAgIHZhciB1MCA9ICR1ICYgVUlOVDE2O1xuICAgIHZhciB2MCA9ICR2ICYgVUlOVDE2O1xuICAgIHZhciB1MSA9ICR1ID4+IDE2O1xuICAgIHZhciB2MSA9ICR2ID4+IDE2O1xuICAgIHZhciB0ID0gKHUxICogdjAgPj4+IDApICsgKHUwICogdjAgPj4+IDE2KTtcbiAgICByZXR1cm4gdTEgKiB2MSArICh0ID4+IDE2KSArICgodTAgKiB2MSA+Pj4gMCkgKyAodCAmIFVJTlQxNikgPj4gMTYpO1xuICB9XG59KTtcbiIsIi8vIGh0dHBzOi8vcndhbGRyb24uZ2l0aHViLmlvL3Byb3Bvc2FsLW1hdGgtZXh0ZW5zaW9ucy9cbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnTWF0aCcsIHsgUkFEX1BFUl9ERUc6IDE4MCAvIE1hdGguUEkgfSk7XG4iLCIvLyBodHRwczovL3J3YWxkcm9uLmdpdGh1Yi5pby9wcm9wb3NhbC1tYXRoLWV4dGVuc2lvbnMvXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIERFR19QRVJfUkFEID0gTWF0aC5QSSAvIDE4MDtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdNYXRoJywge1xuICByYWRpYW5zOiBmdW5jdGlvbiByYWRpYW5zKGRlZ3JlZXMpIHtcbiAgICByZXR1cm4gZGVncmVlcyAqIERFR19QRVJfUkFEO1xuICB9XG59KTtcbiIsIi8vIGh0dHBzOi8vcndhbGRyb24uZ2l0aHViLmlvL3Byb3Bvc2FsLW1hdGgtZXh0ZW5zaW9ucy9cbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnTWF0aCcsIHsgc2NhbGU6IHJlcXVpcmUoJy4vX21hdGgtc2NhbGUnKSB9KTtcbiIsIi8vIGh0dHBzOi8vZ2lzdC5naXRodWIuY29tL0JyZW5kYW5FaWNoLzQyOTRkNWMyMTJhNmQyMjU0NzAzXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ01hdGgnLCB7XG4gIHVtdWxoOiBmdW5jdGlvbiB1bXVsaCh1LCB2KSB7XG4gICAgdmFyIFVJTlQxNiA9IDB4ZmZmZjtcbiAgICB2YXIgJHUgPSArdTtcbiAgICB2YXIgJHYgPSArdjtcbiAgICB2YXIgdTAgPSAkdSAmIFVJTlQxNjtcbiAgICB2YXIgdjAgPSAkdiAmIFVJTlQxNjtcbiAgICB2YXIgdTEgPSAkdSA+Pj4gMTY7XG4gICAgdmFyIHYxID0gJHYgPj4+IDE2O1xuICAgIHZhciB0ID0gKHUxICogdjAgPj4+IDApICsgKHUwICogdjAgPj4+IDE2KTtcbiAgICByZXR1cm4gdTEgKiB2MSArICh0ID4+PiAxNikgKyAoKHUwICogdjEgPj4+IDApICsgKHQgJiBVSU5UMTYpID4+PiAxNik7XG4gIH1cbn0pO1xuIiwiLy8gaHR0cDovL2pmYmFzdGllbi5naXRodWIuaW8vcGFwZXJzL01hdGguc2lnbmJpdC5odG1sXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ01hdGgnLCB7IHNpZ25iaXQ6IGZ1bmN0aW9uIHNpZ25iaXQoeCkge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tc2VsZi1jb21wYXJlXG4gIHJldHVybiAoeCA9ICt4KSAhPSB4ID8geCA6IHggPT0gMCA/IDEgLyB4ID09IEluZmluaXR5IDogeCA+IDA7XG59IH0pO1xuIiwiLy8gaHR0cHM6Ly9naXRodWIuY29tL3RjMzkvcHJvcG9zYWwtcHJvbWlzZS1maW5hbGx5XG4ndXNlIHN0cmljdCc7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGNvcmUgPSByZXF1aXJlKCcuL19jb3JlJyk7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgc3BlY2llc0NvbnN0cnVjdG9yID0gcmVxdWlyZSgnLi9fc3BlY2llcy1jb25zdHJ1Y3RvcicpO1xudmFyIHByb21pc2VSZXNvbHZlID0gcmVxdWlyZSgnLi9fcHJvbWlzZS1yZXNvbHZlJyk7XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5SLCAnUHJvbWlzZScsIHsgJ2ZpbmFsbHknOiBmdW5jdGlvbiAob25GaW5hbGx5KSB7XG4gIHZhciBDID0gc3BlY2llc0NvbnN0cnVjdG9yKHRoaXMsIGNvcmUuUHJvbWlzZSB8fCBnbG9iYWwuUHJvbWlzZSk7XG4gIHZhciBpc0Z1bmN0aW9uID0gdHlwZW9mIG9uRmluYWxseSA9PSAnZnVuY3Rpb24nO1xuICByZXR1cm4gdGhpcy50aGVuKFxuICAgIGlzRnVuY3Rpb24gPyBmdW5jdGlvbiAoeCkge1xuICAgICAgcmV0dXJuIHByb21pc2VSZXNvbHZlKEMsIG9uRmluYWxseSgpKS50aGVuKGZ1bmN0aW9uICgpIHsgcmV0dXJuIHg7IH0pO1xuICAgIH0gOiBvbkZpbmFsbHksXG4gICAgaXNGdW5jdGlvbiA/IGZ1bmN0aW9uIChlKSB7XG4gICAgICByZXR1cm4gcHJvbWlzZVJlc29sdmUoQywgb25GaW5hbGx5KCkpLnRoZW4oZnVuY3Rpb24gKCkgeyB0aHJvdyBlOyB9KTtcbiAgICB9IDogb25GaW5hbGx5XG4gICk7XG59IH0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gaHR0cHM6Ly9naXRodWIuY29tL3RjMzkvcHJvcG9zYWwtcHJvbWlzZS10cnlcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgbmV3UHJvbWlzZUNhcGFiaWxpdHkgPSByZXF1aXJlKCcuL19uZXctcHJvbWlzZS1jYXBhYmlsaXR5Jyk7XG52YXIgcGVyZm9ybSA9IHJlcXVpcmUoJy4vX3BlcmZvcm0nKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdQcm9taXNlJywgeyAndHJ5JzogZnVuY3Rpb24gKGNhbGxiYWNrZm4pIHtcbiAgdmFyIHByb21pc2VDYXBhYmlsaXR5ID0gbmV3UHJvbWlzZUNhcGFiaWxpdHkuZih0aGlzKTtcbiAgdmFyIHJlc3VsdCA9IHBlcmZvcm0oY2FsbGJhY2tmbik7XG4gIChyZXN1bHQuZSA/IHByb21pc2VDYXBhYmlsaXR5LnJlamVjdCA6IHByb21pc2VDYXBhYmlsaXR5LnJlc29sdmUpKHJlc3VsdC52KTtcbiAgcmV0dXJuIHByb21pc2VDYXBhYmlsaXR5LnByb21pc2U7XG59IH0pO1xuIiwidmFyIG1ldGFkYXRhID0gcmVxdWlyZSgnLi9fbWV0YWRhdGEnKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIHRvTWV0YUtleSA9IG1ldGFkYXRhLmtleTtcbnZhciBvcmRpbmFyeURlZmluZU93bk1ldGFkYXRhID0gbWV0YWRhdGEuc2V0O1xuXG5tZXRhZGF0YS5leHAoeyBkZWZpbmVNZXRhZGF0YTogZnVuY3Rpb24gZGVmaW5lTWV0YWRhdGEobWV0YWRhdGFLZXksIG1ldGFkYXRhVmFsdWUsIHRhcmdldCwgdGFyZ2V0S2V5KSB7XG4gIG9yZGluYXJ5RGVmaW5lT3duTWV0YWRhdGEobWV0YWRhdGFLZXksIG1ldGFkYXRhVmFsdWUsIGFuT2JqZWN0KHRhcmdldCksIHRvTWV0YUtleSh0YXJnZXRLZXkpKTtcbn0gfSk7XG4iLCJ2YXIgbWV0YWRhdGEgPSByZXF1aXJlKCcuL19tZXRhZGF0YScpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgdG9NZXRhS2V5ID0gbWV0YWRhdGEua2V5O1xudmFyIGdldE9yQ3JlYXRlTWV0YWRhdGFNYXAgPSBtZXRhZGF0YS5tYXA7XG52YXIgc3RvcmUgPSBtZXRhZGF0YS5zdG9yZTtcblxubWV0YWRhdGEuZXhwKHsgZGVsZXRlTWV0YWRhdGE6IGZ1bmN0aW9uIGRlbGV0ZU1ldGFkYXRhKG1ldGFkYXRhS2V5LCB0YXJnZXQgLyogLCB0YXJnZXRLZXkgKi8pIHtcbiAgdmFyIHRhcmdldEtleSA9IGFyZ3VtZW50cy5sZW5ndGggPCAzID8gdW5kZWZpbmVkIDogdG9NZXRhS2V5KGFyZ3VtZW50c1syXSk7XG4gIHZhciBtZXRhZGF0YU1hcCA9IGdldE9yQ3JlYXRlTWV0YWRhdGFNYXAoYW5PYmplY3QodGFyZ2V0KSwgdGFyZ2V0S2V5LCBmYWxzZSk7XG4gIGlmIChtZXRhZGF0YU1hcCA9PT0gdW5kZWZpbmVkIHx8ICFtZXRhZGF0YU1hcFsnZGVsZXRlJ10obWV0YWRhdGFLZXkpKSByZXR1cm4gZmFsc2U7XG4gIGlmIChtZXRhZGF0YU1hcC5zaXplKSByZXR1cm4gdHJ1ZTtcbiAgdmFyIHRhcmdldE1ldGFkYXRhID0gc3RvcmUuZ2V0KHRhcmdldCk7XG4gIHRhcmdldE1ldGFkYXRhWydkZWxldGUnXSh0YXJnZXRLZXkpO1xuICByZXR1cm4gISF0YXJnZXRNZXRhZGF0YS5zaXplIHx8IHN0b3JlWydkZWxldGUnXSh0YXJnZXQpO1xufSB9KTtcbiIsInZhciBtZXRhZGF0YSA9IHJlcXVpcmUoJy4vX21ldGFkYXRhJyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBnZXRQcm90b3R5cGVPZiA9IHJlcXVpcmUoJy4vX29iamVjdC1ncG8nKTtcbnZhciBvcmRpbmFyeUhhc093bk1ldGFkYXRhID0gbWV0YWRhdGEuaGFzO1xudmFyIG9yZGluYXJ5R2V0T3duTWV0YWRhdGEgPSBtZXRhZGF0YS5nZXQ7XG52YXIgdG9NZXRhS2V5ID0gbWV0YWRhdGEua2V5O1xuXG52YXIgb3JkaW5hcnlHZXRNZXRhZGF0YSA9IGZ1bmN0aW9uIChNZXRhZGF0YUtleSwgTywgUCkge1xuICB2YXIgaGFzT3duID0gb3JkaW5hcnlIYXNPd25NZXRhZGF0YShNZXRhZGF0YUtleSwgTywgUCk7XG4gIGlmIChoYXNPd24pIHJldHVybiBvcmRpbmFyeUdldE93bk1ldGFkYXRhKE1ldGFkYXRhS2V5LCBPLCBQKTtcbiAgdmFyIHBhcmVudCA9IGdldFByb3RvdHlwZU9mKE8pO1xuICByZXR1cm4gcGFyZW50ICE9PSBudWxsID8gb3JkaW5hcnlHZXRNZXRhZGF0YShNZXRhZGF0YUtleSwgcGFyZW50LCBQKSA6IHVuZGVmaW5lZDtcbn07XG5cbm1ldGFkYXRhLmV4cCh7IGdldE1ldGFkYXRhOiBmdW5jdGlvbiBnZXRNZXRhZGF0YShtZXRhZGF0YUtleSwgdGFyZ2V0IC8qICwgdGFyZ2V0S2V5ICovKSB7XG4gIHJldHVybiBvcmRpbmFyeUdldE1ldGFkYXRhKG1ldGFkYXRhS2V5LCBhbk9iamVjdCh0YXJnZXQpLCBhcmd1bWVudHMubGVuZ3RoIDwgMyA/IHVuZGVmaW5lZCA6IHRvTWV0YUtleShhcmd1bWVudHNbMl0pKTtcbn0gfSk7XG4iLCJ2YXIgU2V0ID0gcmVxdWlyZSgnLi9lczYuc2V0Jyk7XG52YXIgZnJvbSA9IHJlcXVpcmUoJy4vX2FycmF5LWZyb20taXRlcmFibGUnKTtcbnZhciBtZXRhZGF0YSA9IHJlcXVpcmUoJy4vX21ldGFkYXRhJyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBnZXRQcm90b3R5cGVPZiA9IHJlcXVpcmUoJy4vX29iamVjdC1ncG8nKTtcbnZhciBvcmRpbmFyeU93bk1ldGFkYXRhS2V5cyA9IG1ldGFkYXRhLmtleXM7XG52YXIgdG9NZXRhS2V5ID0gbWV0YWRhdGEua2V5O1xuXG52YXIgb3JkaW5hcnlNZXRhZGF0YUtleXMgPSBmdW5jdGlvbiAoTywgUCkge1xuICB2YXIgb0tleXMgPSBvcmRpbmFyeU93bk1ldGFkYXRhS2V5cyhPLCBQKTtcbiAgdmFyIHBhcmVudCA9IGdldFByb3RvdHlwZU9mKE8pO1xuICBpZiAocGFyZW50ID09PSBudWxsKSByZXR1cm4gb0tleXM7XG4gIHZhciBwS2V5cyA9IG9yZGluYXJ5TWV0YWRhdGFLZXlzKHBhcmVudCwgUCk7XG4gIHJldHVybiBwS2V5cy5sZW5ndGggPyBvS2V5cy5sZW5ndGggPyBmcm9tKG5ldyBTZXQob0tleXMuY29uY2F0KHBLZXlzKSkpIDogcEtleXMgOiBvS2V5cztcbn07XG5cbm1ldGFkYXRhLmV4cCh7IGdldE1ldGFkYXRhS2V5czogZnVuY3Rpb24gZ2V0TWV0YWRhdGFLZXlzKHRhcmdldCAvKiAsIHRhcmdldEtleSAqLykge1xuICByZXR1cm4gb3JkaW5hcnlNZXRhZGF0YUtleXMoYW5PYmplY3QodGFyZ2V0KSwgYXJndW1lbnRzLmxlbmd0aCA8IDIgPyB1bmRlZmluZWQgOiB0b01ldGFLZXkoYXJndW1lbnRzWzFdKSk7XG59IH0pO1xuIiwidmFyIG1ldGFkYXRhID0gcmVxdWlyZSgnLi9fbWV0YWRhdGEnKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIG9yZGluYXJ5R2V0T3duTWV0YWRhdGEgPSBtZXRhZGF0YS5nZXQ7XG52YXIgdG9NZXRhS2V5ID0gbWV0YWRhdGEua2V5O1xuXG5tZXRhZGF0YS5leHAoeyBnZXRPd25NZXRhZGF0YTogZnVuY3Rpb24gZ2V0T3duTWV0YWRhdGEobWV0YWRhdGFLZXksIHRhcmdldCAvKiAsIHRhcmdldEtleSAqLykge1xuICByZXR1cm4gb3JkaW5hcnlHZXRPd25NZXRhZGF0YShtZXRhZGF0YUtleSwgYW5PYmplY3QodGFyZ2V0KVxuICAgICwgYXJndW1lbnRzLmxlbmd0aCA8IDMgPyB1bmRlZmluZWQgOiB0b01ldGFLZXkoYXJndW1lbnRzWzJdKSk7XG59IH0pO1xuIiwidmFyIG1ldGFkYXRhID0gcmVxdWlyZSgnLi9fbWV0YWRhdGEnKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIG9yZGluYXJ5T3duTWV0YWRhdGFLZXlzID0gbWV0YWRhdGEua2V5cztcbnZhciB0b01ldGFLZXkgPSBtZXRhZGF0YS5rZXk7XG5cbm1ldGFkYXRhLmV4cCh7IGdldE93bk1ldGFkYXRhS2V5czogZnVuY3Rpb24gZ2V0T3duTWV0YWRhdGFLZXlzKHRhcmdldCAvKiAsIHRhcmdldEtleSAqLykge1xuICByZXR1cm4gb3JkaW5hcnlPd25NZXRhZGF0YUtleXMoYW5PYmplY3QodGFyZ2V0KSwgYXJndW1lbnRzLmxlbmd0aCA8IDIgPyB1bmRlZmluZWQgOiB0b01ldGFLZXkoYXJndW1lbnRzWzFdKSk7XG59IH0pO1xuIiwidmFyIG1ldGFkYXRhID0gcmVxdWlyZSgnLi9fbWV0YWRhdGEnKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIGdldFByb3RvdHlwZU9mID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdwbycpO1xudmFyIG9yZGluYXJ5SGFzT3duTWV0YWRhdGEgPSBtZXRhZGF0YS5oYXM7XG52YXIgdG9NZXRhS2V5ID0gbWV0YWRhdGEua2V5O1xuXG52YXIgb3JkaW5hcnlIYXNNZXRhZGF0YSA9IGZ1bmN0aW9uIChNZXRhZGF0YUtleSwgTywgUCkge1xuICB2YXIgaGFzT3duID0gb3JkaW5hcnlIYXNPd25NZXRhZGF0YShNZXRhZGF0YUtleSwgTywgUCk7XG4gIGlmIChoYXNPd24pIHJldHVybiB0cnVlO1xuICB2YXIgcGFyZW50ID0gZ2V0UHJvdG90eXBlT2YoTyk7XG4gIHJldHVybiBwYXJlbnQgIT09IG51bGwgPyBvcmRpbmFyeUhhc01ldGFkYXRhKE1ldGFkYXRhS2V5LCBwYXJlbnQsIFApIDogZmFsc2U7XG59O1xuXG5tZXRhZGF0YS5leHAoeyBoYXNNZXRhZGF0YTogZnVuY3Rpb24gaGFzTWV0YWRhdGEobWV0YWRhdGFLZXksIHRhcmdldCAvKiAsIHRhcmdldEtleSAqLykge1xuICByZXR1cm4gb3JkaW5hcnlIYXNNZXRhZGF0YShtZXRhZGF0YUtleSwgYW5PYmplY3QodGFyZ2V0KSwgYXJndW1lbnRzLmxlbmd0aCA8IDMgPyB1bmRlZmluZWQgOiB0b01ldGFLZXkoYXJndW1lbnRzWzJdKSk7XG59IH0pO1xuIiwidmFyIG1ldGFkYXRhID0gcmVxdWlyZSgnLi9fbWV0YWRhdGEnKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIG9yZGluYXJ5SGFzT3duTWV0YWRhdGEgPSBtZXRhZGF0YS5oYXM7XG52YXIgdG9NZXRhS2V5ID0gbWV0YWRhdGEua2V5O1xuXG5tZXRhZGF0YS5leHAoeyBoYXNPd25NZXRhZGF0YTogZnVuY3Rpb24gaGFzT3duTWV0YWRhdGEobWV0YWRhdGFLZXksIHRhcmdldCAvKiAsIHRhcmdldEtleSAqLykge1xuICByZXR1cm4gb3JkaW5hcnlIYXNPd25NZXRhZGF0YShtZXRhZGF0YUtleSwgYW5PYmplY3QodGFyZ2V0KVxuICAgICwgYXJndW1lbnRzLmxlbmd0aCA8IDMgPyB1bmRlZmluZWQgOiB0b01ldGFLZXkoYXJndW1lbnRzWzJdKSk7XG59IH0pO1xuIiwidmFyICRtZXRhZGF0YSA9IHJlcXVpcmUoJy4vX21ldGFkYXRhJyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBhRnVuY3Rpb24gPSByZXF1aXJlKCcuL19hLWZ1bmN0aW9uJyk7XG52YXIgdG9NZXRhS2V5ID0gJG1ldGFkYXRhLmtleTtcbnZhciBvcmRpbmFyeURlZmluZU93bk1ldGFkYXRhID0gJG1ldGFkYXRhLnNldDtcblxuJG1ldGFkYXRhLmV4cCh7IG1ldGFkYXRhOiBmdW5jdGlvbiBtZXRhZGF0YShtZXRhZGF0YUtleSwgbWV0YWRhdGFWYWx1ZSkge1xuICByZXR1cm4gZnVuY3Rpb24gZGVjb3JhdG9yKHRhcmdldCwgdGFyZ2V0S2V5KSB7XG4gICAgb3JkaW5hcnlEZWZpbmVPd25NZXRhZGF0YShcbiAgICAgIG1ldGFkYXRhS2V5LCBtZXRhZGF0YVZhbHVlLFxuICAgICAgKHRhcmdldEtleSAhPT0gdW5kZWZpbmVkID8gYW5PYmplY3QgOiBhRnVuY3Rpb24pKHRhcmdldCksXG4gICAgICB0b01ldGFLZXkodGFyZ2V0S2V5KVxuICAgICk7XG4gIH07XG59IH0pO1xuIiwiLy8gaHR0cHM6Ly9naXRodWIuY29tL3J3YWxkcm9uL3RjMzktbm90ZXMvYmxvYi9tYXN0ZXIvZXM2LzIwMTQtMDkvc2VwdC0yNS5tZCM1MTAtZ2xvYmFsYXNhcC1mb3ItZW5xdWV1aW5nLWEtbWljcm90YXNrXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIG1pY3JvdGFzayA9IHJlcXVpcmUoJy4vX21pY3JvdGFzaycpKCk7XG52YXIgcHJvY2VzcyA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpLnByb2Nlc3M7XG52YXIgaXNOb2RlID0gcmVxdWlyZSgnLi9fY29mJykocHJvY2VzcykgPT0gJ3Byb2Nlc3MnO1xuXG4kZXhwb3J0KCRleHBvcnQuRywge1xuICBhc2FwOiBmdW5jdGlvbiBhc2FwKGZuKSB7XG4gICAgdmFyIGRvbWFpbiA9IGlzTm9kZSAmJiBwcm9jZXNzLmRvbWFpbjtcbiAgICBtaWNyb3Rhc2soZG9tYWluID8gZG9tYWluLmJpbmQoZm4pIDogZm4pO1xuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS96ZW5wYXJzaW5nL2VzLW9ic2VydmFibGVcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgY29yZSA9IHJlcXVpcmUoJy4vX2NvcmUnKTtcbnZhciBtaWNyb3Rhc2sgPSByZXF1aXJlKCcuL19taWNyb3Rhc2snKSgpO1xudmFyIE9CU0VSVkFCTEUgPSByZXF1aXJlKCcuL193a3MnKSgnb2JzZXJ2YWJsZScpO1xudmFyIGFGdW5jdGlvbiA9IHJlcXVpcmUoJy4vX2EtZnVuY3Rpb24nKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIGFuSW5zdGFuY2UgPSByZXF1aXJlKCcuL19hbi1pbnN0YW5jZScpO1xudmFyIHJlZGVmaW5lQWxsID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUtYWxsJyk7XG52YXIgaGlkZSA9IHJlcXVpcmUoJy4vX2hpZGUnKTtcbnZhciBmb3JPZiA9IHJlcXVpcmUoJy4vX2Zvci1vZicpO1xudmFyIFJFVFVSTiA9IGZvck9mLlJFVFVSTjtcblxudmFyIGdldE1ldGhvZCA9IGZ1bmN0aW9uIChmbikge1xuICByZXR1cm4gZm4gPT0gbnVsbCA/IHVuZGVmaW5lZCA6IGFGdW5jdGlvbihmbik7XG59O1xuXG52YXIgY2xlYW51cFN1YnNjcmlwdGlvbiA9IGZ1bmN0aW9uIChzdWJzY3JpcHRpb24pIHtcbiAgdmFyIGNsZWFudXAgPSBzdWJzY3JpcHRpb24uX2M7XG4gIGlmIChjbGVhbnVwKSB7XG4gICAgc3Vic2NyaXB0aW9uLl9jID0gdW5kZWZpbmVkO1xuICAgIGNsZWFudXAoKTtcbiAgfVxufTtcblxudmFyIHN1YnNjcmlwdGlvbkNsb3NlZCA9IGZ1bmN0aW9uIChzdWJzY3JpcHRpb24pIHtcbiAgcmV0dXJuIHN1YnNjcmlwdGlvbi5fbyA9PT0gdW5kZWZpbmVkO1xufTtcblxudmFyIGNsb3NlU3Vic2NyaXB0aW9uID0gZnVuY3Rpb24gKHN1YnNjcmlwdGlvbikge1xuICBpZiAoIXN1YnNjcmlwdGlvbkNsb3NlZChzdWJzY3JpcHRpb24pKSB7XG4gICAgc3Vic2NyaXB0aW9uLl9vID0gdW5kZWZpbmVkO1xuICAgIGNsZWFudXBTdWJzY3JpcHRpb24oc3Vic2NyaXB0aW9uKTtcbiAgfVxufTtcblxudmFyIFN1YnNjcmlwdGlvbiA9IGZ1bmN0aW9uIChvYnNlcnZlciwgc3Vic2NyaWJlcikge1xuICBhbk9iamVjdChvYnNlcnZlcik7XG4gIHRoaXMuX2MgPSB1bmRlZmluZWQ7XG4gIHRoaXMuX28gPSBvYnNlcnZlcjtcbiAgb2JzZXJ2ZXIgPSBuZXcgU3Vic2NyaXB0aW9uT2JzZXJ2ZXIodGhpcyk7XG4gIHRyeSB7XG4gICAgdmFyIGNsZWFudXAgPSBzdWJzY3JpYmVyKG9ic2VydmVyKTtcbiAgICB2YXIgc3Vic2NyaXB0aW9uID0gY2xlYW51cDtcbiAgICBpZiAoY2xlYW51cCAhPSBudWxsKSB7XG4gICAgICBpZiAodHlwZW9mIGNsZWFudXAudW5zdWJzY3JpYmUgPT09ICdmdW5jdGlvbicpIGNsZWFudXAgPSBmdW5jdGlvbiAoKSB7IHN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpOyB9O1xuICAgICAgZWxzZSBhRnVuY3Rpb24oY2xlYW51cCk7XG4gICAgICB0aGlzLl9jID0gY2xlYW51cDtcbiAgICB9XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBvYnNlcnZlci5lcnJvcihlKTtcbiAgICByZXR1cm47XG4gIH0gaWYgKHN1YnNjcmlwdGlvbkNsb3NlZCh0aGlzKSkgY2xlYW51cFN1YnNjcmlwdGlvbih0aGlzKTtcbn07XG5cblN1YnNjcmlwdGlvbi5wcm90b3R5cGUgPSByZWRlZmluZUFsbCh7fSwge1xuICB1bnN1YnNjcmliZTogZnVuY3Rpb24gdW5zdWJzY3JpYmUoKSB7IGNsb3NlU3Vic2NyaXB0aW9uKHRoaXMpOyB9XG59KTtcblxudmFyIFN1YnNjcmlwdGlvbk9ic2VydmVyID0gZnVuY3Rpb24gKHN1YnNjcmlwdGlvbikge1xuICB0aGlzLl9zID0gc3Vic2NyaXB0aW9uO1xufTtcblxuU3Vic2NyaXB0aW9uT2JzZXJ2ZXIucHJvdG90eXBlID0gcmVkZWZpbmVBbGwoe30sIHtcbiAgbmV4dDogZnVuY3Rpb24gbmV4dCh2YWx1ZSkge1xuICAgIHZhciBzdWJzY3JpcHRpb24gPSB0aGlzLl9zO1xuICAgIGlmICghc3Vic2NyaXB0aW9uQ2xvc2VkKHN1YnNjcmlwdGlvbikpIHtcbiAgICAgIHZhciBvYnNlcnZlciA9IHN1YnNjcmlwdGlvbi5fbztcbiAgICAgIHRyeSB7XG4gICAgICAgIHZhciBtID0gZ2V0TWV0aG9kKG9ic2VydmVyLm5leHQpO1xuICAgICAgICBpZiAobSkgcmV0dXJuIG0uY2FsbChvYnNlcnZlciwgdmFsdWUpO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIGNsb3NlU3Vic2NyaXB0aW9uKHN1YnNjcmlwdGlvbik7XG4gICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgdGhyb3cgZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfSxcbiAgZXJyb3I6IGZ1bmN0aW9uIGVycm9yKHZhbHVlKSB7XG4gICAgdmFyIHN1YnNjcmlwdGlvbiA9IHRoaXMuX3M7XG4gICAgaWYgKHN1YnNjcmlwdGlvbkNsb3NlZChzdWJzY3JpcHRpb24pKSB0aHJvdyB2YWx1ZTtcbiAgICB2YXIgb2JzZXJ2ZXIgPSBzdWJzY3JpcHRpb24uX287XG4gICAgc3Vic2NyaXB0aW9uLl9vID0gdW5kZWZpbmVkO1xuICAgIHRyeSB7XG4gICAgICB2YXIgbSA9IGdldE1ldGhvZChvYnNlcnZlci5lcnJvcik7XG4gICAgICBpZiAoIW0pIHRocm93IHZhbHVlO1xuICAgICAgdmFsdWUgPSBtLmNhbGwob2JzZXJ2ZXIsIHZhbHVlKTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICB0cnkge1xuICAgICAgICBjbGVhbnVwU3Vic2NyaXB0aW9uKHN1YnNjcmlwdGlvbik7XG4gICAgICB9IGZpbmFsbHkge1xuICAgICAgICB0aHJvdyBlO1xuICAgICAgfVxuICAgIH0gY2xlYW51cFN1YnNjcmlwdGlvbihzdWJzY3JpcHRpb24pO1xuICAgIHJldHVybiB2YWx1ZTtcbiAgfSxcbiAgY29tcGxldGU6IGZ1bmN0aW9uIGNvbXBsZXRlKHZhbHVlKSB7XG4gICAgdmFyIHN1YnNjcmlwdGlvbiA9IHRoaXMuX3M7XG4gICAgaWYgKCFzdWJzY3JpcHRpb25DbG9zZWQoc3Vic2NyaXB0aW9uKSkge1xuICAgICAgdmFyIG9ic2VydmVyID0gc3Vic2NyaXB0aW9uLl9vO1xuICAgICAgc3Vic2NyaXB0aW9uLl9vID0gdW5kZWZpbmVkO1xuICAgICAgdHJ5IHtcbiAgICAgICAgdmFyIG0gPSBnZXRNZXRob2Qob2JzZXJ2ZXIuY29tcGxldGUpO1xuICAgICAgICB2YWx1ZSA9IG0gPyBtLmNhbGwob2JzZXJ2ZXIsIHZhbHVlKSA6IHVuZGVmaW5lZDtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBjbGVhbnVwU3Vic2NyaXB0aW9uKHN1YnNjcmlwdGlvbik7XG4gICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgdGhyb3cgZTtcbiAgICAgICAgfVxuICAgICAgfSBjbGVhbnVwU3Vic2NyaXB0aW9uKHN1YnNjcmlwdGlvbik7XG4gICAgICByZXR1cm4gdmFsdWU7XG4gICAgfVxuICB9XG59KTtcblxudmFyICRPYnNlcnZhYmxlID0gZnVuY3Rpb24gT2JzZXJ2YWJsZShzdWJzY3JpYmVyKSB7XG4gIGFuSW5zdGFuY2UodGhpcywgJE9ic2VydmFibGUsICdPYnNlcnZhYmxlJywgJ19mJykuX2YgPSBhRnVuY3Rpb24oc3Vic2NyaWJlcik7XG59O1xuXG5yZWRlZmluZUFsbCgkT2JzZXJ2YWJsZS5wcm90b3R5cGUsIHtcbiAgc3Vic2NyaWJlOiBmdW5jdGlvbiBzdWJzY3JpYmUob2JzZXJ2ZXIpIHtcbiAgICByZXR1cm4gbmV3IFN1YnNjcmlwdGlvbihvYnNlcnZlciwgdGhpcy5fZik7XG4gIH0sXG4gIGZvckVhY2g6IGZ1bmN0aW9uIGZvckVhY2goZm4pIHtcbiAgICB2YXIgdGhhdCA9IHRoaXM7XG4gICAgcmV0dXJuIG5ldyAoY29yZS5Qcm9taXNlIHx8IGdsb2JhbC5Qcm9taXNlKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICBhRnVuY3Rpb24oZm4pO1xuICAgICAgdmFyIHN1YnNjcmlwdGlvbiA9IHRoYXQuc3Vic2NyaWJlKHtcbiAgICAgICAgbmV4dDogZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJldHVybiBmbih2YWx1ZSk7XG4gICAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgcmVqZWN0KGUpO1xuICAgICAgICAgICAgc3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBlcnJvcjogcmVqZWN0LFxuICAgICAgICBjb21wbGV0ZTogcmVzb2x2ZVxuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cbn0pO1xuXG5yZWRlZmluZUFsbCgkT2JzZXJ2YWJsZSwge1xuICBmcm9tOiBmdW5jdGlvbiBmcm9tKHgpIHtcbiAgICB2YXIgQyA9IHR5cGVvZiB0aGlzID09PSAnZnVuY3Rpb24nID8gdGhpcyA6ICRPYnNlcnZhYmxlO1xuICAgIHZhciBtZXRob2QgPSBnZXRNZXRob2QoYW5PYmplY3QoeClbT0JTRVJWQUJMRV0pO1xuICAgIGlmIChtZXRob2QpIHtcbiAgICAgIHZhciBvYnNlcnZhYmxlID0gYW5PYmplY3QobWV0aG9kLmNhbGwoeCkpO1xuICAgICAgcmV0dXJuIG9ic2VydmFibGUuY29uc3RydWN0b3IgPT09IEMgPyBvYnNlcnZhYmxlIDogbmV3IEMoZnVuY3Rpb24gKG9ic2VydmVyKSB7XG4gICAgICAgIHJldHVybiBvYnNlcnZhYmxlLnN1YnNjcmliZShvYnNlcnZlcik7XG4gICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBDKGZ1bmN0aW9uIChvYnNlcnZlcikge1xuICAgICAgdmFyIGRvbmUgPSBmYWxzZTtcbiAgICAgIG1pY3JvdGFzayhmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICghZG9uZSkge1xuICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICBpZiAoZm9yT2YoeCwgZmFsc2UsIGZ1bmN0aW9uIChpdCkge1xuICAgICAgICAgICAgICBvYnNlcnZlci5uZXh0KGl0KTtcbiAgICAgICAgICAgICAgaWYgKGRvbmUpIHJldHVybiBSRVRVUk47XG4gICAgICAgICAgICB9KSA9PT0gUkVUVVJOKSByZXR1cm47XG4gICAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgaWYgKGRvbmUpIHRocm93IGU7XG4gICAgICAgICAgICBvYnNlcnZlci5lcnJvcihlKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICB9IG9ic2VydmVyLmNvbXBsZXRlKCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHsgZG9uZSA9IHRydWU7IH07XG4gICAgfSk7XG4gIH0sXG4gIG9mOiBmdW5jdGlvbiBvZigpIHtcbiAgICBmb3IgKHZhciBpID0gMCwgbCA9IGFyZ3VtZW50cy5sZW5ndGgsIGl0ZW1zID0gbmV3IEFycmF5KGwpOyBpIDwgbDspIGl0ZW1zW2ldID0gYXJndW1lbnRzW2krK107XG4gICAgcmV0dXJuIG5ldyAodHlwZW9mIHRoaXMgPT09ICdmdW5jdGlvbicgPyB0aGlzIDogJE9ic2VydmFibGUpKGZ1bmN0aW9uIChvYnNlcnZlcikge1xuICAgICAgdmFyIGRvbmUgPSBmYWxzZTtcbiAgICAgIG1pY3JvdGFzayhmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICghZG9uZSkge1xuICAgICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgaXRlbXMubGVuZ3RoOyArK2opIHtcbiAgICAgICAgICAgIG9ic2VydmVyLm5leHQoaXRlbXNbal0pO1xuICAgICAgICAgICAgaWYgKGRvbmUpIHJldHVybjtcbiAgICAgICAgICB9IG9ic2VydmVyLmNvbXBsZXRlKCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHsgZG9uZSA9IHRydWU7IH07XG4gICAgfSk7XG4gIH1cbn0pO1xuXG5oaWRlKCRPYnNlcnZhYmxlLnByb3RvdHlwZSwgT0JTRVJWQUJMRSwgZnVuY3Rpb24gKCkgeyByZXR1cm4gdGhpczsgfSk7XG5cbiRleHBvcnQoJGV4cG9ydC5HLCB7IE9ic2VydmFibGU6ICRPYnNlcnZhYmxlIH0pO1xuXG5yZXF1aXJlKCcuL19zZXQtc3BlY2llcycpKCdPYnNlcnZhYmxlJyk7XG4iLCIvLyBpZTktIHNldFRpbWVvdXQgJiBzZXRJbnRlcnZhbCBhZGRpdGlvbmFsIHBhcmFtZXRlcnMgZml4XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIHVzZXJBZ2VudCA9IHJlcXVpcmUoJy4vX3VzZXItYWdlbnQnKTtcbnZhciBzbGljZSA9IFtdLnNsaWNlO1xudmFyIE1TSUUgPSAvTVNJRSAuXFwuLy50ZXN0KHVzZXJBZ2VudCk7IC8vIDwtIGRpcnR5IGllOS0gY2hlY2tcbnZhciB3cmFwID0gZnVuY3Rpb24gKHNldCkge1xuICByZXR1cm4gZnVuY3Rpb24gKGZuLCB0aW1lIC8qICwgLi4uYXJncyAqLykge1xuICAgIHZhciBib3VuZEFyZ3MgPSBhcmd1bWVudHMubGVuZ3RoID4gMjtcbiAgICB2YXIgYXJncyA9IGJvdW5kQXJncyA/IHNsaWNlLmNhbGwoYXJndW1lbnRzLCAyKSA6IGZhbHNlO1xuICAgIHJldHVybiBzZXQoYm91bmRBcmdzID8gZnVuY3Rpb24gKCkge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLW5ldy1mdW5jXG4gICAgICAodHlwZW9mIGZuID09ICdmdW5jdGlvbicgPyBmbiA6IEZ1bmN0aW9uKGZuKSkuYXBwbHkodGhpcywgYXJncyk7XG4gICAgfSA6IGZuLCB0aW1lKTtcbiAgfTtcbn07XG4kZXhwb3J0KCRleHBvcnQuRyArICRleHBvcnQuQiArICRleHBvcnQuRiAqIE1TSUUsIHtcbiAgc2V0VGltZW91dDogd3JhcChnbG9iYWwuc2V0VGltZW91dCksXG4gIHNldEludGVydmFsOiB3cmFwKGdsb2JhbC5zZXRJbnRlcnZhbClcbn0pO1xuIiwidmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkdGFzayA9IHJlcXVpcmUoJy4vX3Rhc2snKTtcbiRleHBvcnQoJGV4cG9ydC5HICsgJGV4cG9ydC5CLCB7XG4gIHNldEltbWVkaWF0ZTogJHRhc2suc2V0LFxuICBjbGVhckltbWVkaWF0ZTogJHRhc2suY2xlYXJcbn0pO1xuIiwidmFyICRpdGVyYXRvcnMgPSByZXF1aXJlKCcuL2VzNi5hcnJheS5pdGVyYXRvcicpO1xudmFyIGdldEtleXMgPSByZXF1aXJlKCcuL19vYmplY3Qta2V5cycpO1xudmFyIHJlZGVmaW5lID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUnKTtcbnZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBoaWRlID0gcmVxdWlyZSgnLi9faGlkZScpO1xudmFyIEl0ZXJhdG9ycyA9IHJlcXVpcmUoJy4vX2l0ZXJhdG9ycycpO1xudmFyIHdrcyA9IHJlcXVpcmUoJy4vX3drcycpO1xudmFyIElURVJBVE9SID0gd2tzKCdpdGVyYXRvcicpO1xudmFyIFRPX1NUUklOR19UQUcgPSB3a3MoJ3RvU3RyaW5nVGFnJyk7XG52YXIgQXJyYXlWYWx1ZXMgPSBJdGVyYXRvcnMuQXJyYXk7XG5cbnZhciBET01JdGVyYWJsZXMgPSB7XG4gIENTU1J1bGVMaXN0OiB0cnVlLCAvLyBUT0RPOiBOb3Qgc3BlYyBjb21wbGlhbnQsIHNob3VsZCBiZSBmYWxzZS5cbiAgQ1NTU3R5bGVEZWNsYXJhdGlvbjogZmFsc2UsXG4gIENTU1ZhbHVlTGlzdDogZmFsc2UsXG4gIENsaWVudFJlY3RMaXN0OiBmYWxzZSxcbiAgRE9NUmVjdExpc3Q6IGZhbHNlLFxuICBET01TdHJpbmdMaXN0OiBmYWxzZSxcbiAgRE9NVG9rZW5MaXN0OiB0cnVlLFxuICBEYXRhVHJhbnNmZXJJdGVtTGlzdDogZmFsc2UsXG4gIEZpbGVMaXN0OiBmYWxzZSxcbiAgSFRNTEFsbENvbGxlY3Rpb246IGZhbHNlLFxuICBIVE1MQ29sbGVjdGlvbjogZmFsc2UsXG4gIEhUTUxGb3JtRWxlbWVudDogZmFsc2UsXG4gIEhUTUxTZWxlY3RFbGVtZW50OiBmYWxzZSxcbiAgTWVkaWFMaXN0OiB0cnVlLCAvLyBUT0RPOiBOb3Qgc3BlYyBjb21wbGlhbnQsIHNob3VsZCBiZSBmYWxzZS5cbiAgTWltZVR5cGVBcnJheTogZmFsc2UsXG4gIE5hbWVkTm9kZU1hcDogZmFsc2UsXG4gIE5vZGVMaXN0OiB0cnVlLFxuICBQYWludFJlcXVlc3RMaXN0OiBmYWxzZSxcbiAgUGx1Z2luOiBmYWxzZSxcbiAgUGx1Z2luQXJyYXk6IGZhbHNlLFxuICBTVkdMZW5ndGhMaXN0OiBmYWxzZSxcbiAgU1ZHTnVtYmVyTGlzdDogZmFsc2UsXG4gIFNWR1BhdGhTZWdMaXN0OiBmYWxzZSxcbiAgU1ZHUG9pbnRMaXN0OiBmYWxzZSxcbiAgU1ZHU3RyaW5nTGlzdDogZmFsc2UsXG4gIFNWR1RyYW5zZm9ybUxpc3Q6IGZhbHNlLFxuICBTb3VyY2VCdWZmZXJMaXN0OiBmYWxzZSxcbiAgU3R5bGVTaGVldExpc3Q6IHRydWUsIC8vIFRPRE86IE5vdCBzcGVjIGNvbXBsaWFudCwgc2hvdWxkIGJlIGZhbHNlLlxuICBUZXh0VHJhY2tDdWVMaXN0OiBmYWxzZSxcbiAgVGV4dFRyYWNrTGlzdDogZmFsc2UsXG4gIFRvdWNoTGlzdDogZmFsc2Vcbn07XG5cbmZvciAodmFyIGNvbGxlY3Rpb25zID0gZ2V0S2V5cyhET01JdGVyYWJsZXMpLCBpID0gMDsgaSA8IGNvbGxlY3Rpb25zLmxlbmd0aDsgaSsrKSB7XG4gIHZhciBOQU1FID0gY29sbGVjdGlvbnNbaV07XG4gIHZhciBleHBsaWNpdCA9IERPTUl0ZXJhYmxlc1tOQU1FXTtcbiAgdmFyIENvbGxlY3Rpb24gPSBnbG9iYWxbTkFNRV07XG4gIHZhciBwcm90byA9IENvbGxlY3Rpb24gJiYgQ29sbGVjdGlvbi5wcm90b3R5cGU7XG4gIHZhciBrZXk7XG4gIGlmIChwcm90bykge1xuICAgIGlmICghcHJvdG9bSVRFUkFUT1JdKSBoaWRlKHByb3RvLCBJVEVSQVRPUiwgQXJyYXlWYWx1ZXMpO1xuICAgIGlmICghcHJvdG9bVE9fU1RSSU5HX1RBR10pIGhpZGUocHJvdG8sIFRPX1NUUklOR19UQUcsIE5BTUUpO1xuICAgIEl0ZXJhdG9yc1tOQU1FXSA9IEFycmF5VmFsdWVzO1xuICAgIGlmIChleHBsaWNpdCkgZm9yIChrZXkgaW4gJGl0ZXJhdG9ycykgaWYgKCFwcm90b1trZXldKSByZWRlZmluZShwcm90bywga2V5LCAkaXRlcmF0b3JzW2tleV0sIHRydWUpO1xuICB9XG59XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxNCwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBodHRwczovL3Jhdy5naXRodWIuY29tL2ZhY2Vib29rL3JlZ2VuZXJhdG9yL21hc3Rlci9MSUNFTlNFIGZpbGUuIEFuXG4gKiBhZGRpdGlvbmFsIGdyYW50IG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW5cbiAqIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqL1xuXG4hKGZ1bmN0aW9uKGdsb2JhbCkge1xuICBcInVzZSBzdHJpY3RcIjtcblxuICB2YXIgT3AgPSBPYmplY3QucHJvdG90eXBlO1xuICB2YXIgaGFzT3duID0gT3AuaGFzT3duUHJvcGVydHk7XG4gIHZhciB1bmRlZmluZWQ7IC8vIE1vcmUgY29tcHJlc3NpYmxlIHRoYW4gdm9pZCAwLlxuICB2YXIgJFN5bWJvbCA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiA/IFN5bWJvbCA6IHt9O1xuICB2YXIgaXRlcmF0b3JTeW1ib2wgPSAkU3ltYm9sLml0ZXJhdG9yIHx8IFwiQEBpdGVyYXRvclwiO1xuICB2YXIgYXN5bmNJdGVyYXRvclN5bWJvbCA9ICRTeW1ib2wuYXN5bmNJdGVyYXRvciB8fCBcIkBAYXN5bmNJdGVyYXRvclwiO1xuICB2YXIgdG9TdHJpbmdUYWdTeW1ib2wgPSAkU3ltYm9sLnRvU3RyaW5nVGFnIHx8IFwiQEB0b1N0cmluZ1RhZ1wiO1xuXG4gIHZhciBpbk1vZHVsZSA9IHR5cGVvZiBtb2R1bGUgPT09IFwib2JqZWN0XCI7XG4gIHZhciBydW50aW1lID0gZ2xvYmFsLnJlZ2VuZXJhdG9yUnVudGltZTtcbiAgaWYgKHJ1bnRpbWUpIHtcbiAgICBpZiAoaW5Nb2R1bGUpIHtcbiAgICAgIC8vIElmIHJlZ2VuZXJhdG9yUnVudGltZSBpcyBkZWZpbmVkIGdsb2JhbGx5IGFuZCB3ZSdyZSBpbiBhIG1vZHVsZSxcbiAgICAgIC8vIG1ha2UgdGhlIGV4cG9ydHMgb2JqZWN0IGlkZW50aWNhbCB0byByZWdlbmVyYXRvclJ1bnRpbWUuXG4gICAgICBtb2R1bGUuZXhwb3J0cyA9IHJ1bnRpbWU7XG4gICAgfVxuICAgIC8vIERvbid0IGJvdGhlciBldmFsdWF0aW5nIHRoZSByZXN0IG9mIHRoaXMgZmlsZSBpZiB0aGUgcnVudGltZSB3YXNcbiAgICAvLyBhbHJlYWR5IGRlZmluZWQgZ2xvYmFsbHkuXG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLy8gRGVmaW5lIHRoZSBydW50aW1lIGdsb2JhbGx5IChhcyBleHBlY3RlZCBieSBnZW5lcmF0ZWQgY29kZSkgYXMgZWl0aGVyXG4gIC8vIG1vZHVsZS5leHBvcnRzIChpZiB3ZSdyZSBpbiBhIG1vZHVsZSkgb3IgYSBuZXcsIGVtcHR5IG9iamVjdC5cbiAgcnVudGltZSA9IGdsb2JhbC5yZWdlbmVyYXRvclJ1bnRpbWUgPSBpbk1vZHVsZSA/IG1vZHVsZS5leHBvcnRzIDoge307XG5cbiAgZnVuY3Rpb24gd3JhcChpbm5lckZuLCBvdXRlckZuLCBzZWxmLCB0cnlMb2NzTGlzdCkge1xuICAgIC8vIElmIG91dGVyRm4gcHJvdmlkZWQgYW5kIG91dGVyRm4ucHJvdG90eXBlIGlzIGEgR2VuZXJhdG9yLCB0aGVuIG91dGVyRm4ucHJvdG90eXBlIGluc3RhbmNlb2YgR2VuZXJhdG9yLlxuICAgIHZhciBwcm90b0dlbmVyYXRvciA9IG91dGVyRm4gJiYgb3V0ZXJGbi5wcm90b3R5cGUgaW5zdGFuY2VvZiBHZW5lcmF0b3IgPyBvdXRlckZuIDogR2VuZXJhdG9yO1xuICAgIHZhciBnZW5lcmF0b3IgPSBPYmplY3QuY3JlYXRlKHByb3RvR2VuZXJhdG9yLnByb3RvdHlwZSk7XG4gICAgdmFyIGNvbnRleHQgPSBuZXcgQ29udGV4dCh0cnlMb2NzTGlzdCB8fCBbXSk7XG5cbiAgICAvLyBUaGUgLl9pbnZva2UgbWV0aG9kIHVuaWZpZXMgdGhlIGltcGxlbWVudGF0aW9ucyBvZiB0aGUgLm5leHQsXG4gICAgLy8gLnRocm93LCBhbmQgLnJldHVybiBtZXRob2RzLlxuICAgIGdlbmVyYXRvci5faW52b2tlID0gbWFrZUludm9rZU1ldGhvZChpbm5lckZuLCBzZWxmLCBjb250ZXh0KTtcblxuICAgIHJldHVybiBnZW5lcmF0b3I7XG4gIH1cbiAgcnVudGltZS53cmFwID0gd3JhcDtcblxuICAvLyBUcnkvY2F0Y2ggaGVscGVyIHRvIG1pbmltaXplIGRlb3B0aW1pemF0aW9ucy4gUmV0dXJucyBhIGNvbXBsZXRpb25cbiAgLy8gcmVjb3JkIGxpa2UgY29udGV4dC50cnlFbnRyaWVzW2ldLmNvbXBsZXRpb24uIFRoaXMgaW50ZXJmYWNlIGNvdWxkXG4gIC8vIGhhdmUgYmVlbiAoYW5kIHdhcyBwcmV2aW91c2x5KSBkZXNpZ25lZCB0byB0YWtlIGEgY2xvc3VyZSB0byBiZVxuICAvLyBpbnZva2VkIHdpdGhvdXQgYXJndW1lbnRzLCBidXQgaW4gYWxsIHRoZSBjYXNlcyB3ZSBjYXJlIGFib3V0IHdlXG4gIC8vIGFscmVhZHkgaGF2ZSBhbiBleGlzdGluZyBtZXRob2Qgd2Ugd2FudCB0byBjYWxsLCBzbyB0aGVyZSdzIG5vIG5lZWRcbiAgLy8gdG8gY3JlYXRlIGEgbmV3IGZ1bmN0aW9uIG9iamVjdC4gV2UgY2FuIGV2ZW4gZ2V0IGF3YXkgd2l0aCBhc3N1bWluZ1xuICAvLyB0aGUgbWV0aG9kIHRha2VzIGV4YWN0bHkgb25lIGFyZ3VtZW50LCBzaW5jZSB0aGF0IGhhcHBlbnMgdG8gYmUgdHJ1ZVxuICAvLyBpbiBldmVyeSBjYXNlLCBzbyB3ZSBkb24ndCBoYXZlIHRvIHRvdWNoIHRoZSBhcmd1bWVudHMgb2JqZWN0LiBUaGVcbiAgLy8gb25seSBhZGRpdGlvbmFsIGFsbG9jYXRpb24gcmVxdWlyZWQgaXMgdGhlIGNvbXBsZXRpb24gcmVjb3JkLCB3aGljaFxuICAvLyBoYXMgYSBzdGFibGUgc2hhcGUgYW5kIHNvIGhvcGVmdWxseSBzaG91bGQgYmUgY2hlYXAgdG8gYWxsb2NhdGUuXG4gIGZ1bmN0aW9uIHRyeUNhdGNoKGZuLCBvYmosIGFyZykge1xuICAgIHRyeSB7XG4gICAgICByZXR1cm4geyB0eXBlOiBcIm5vcm1hbFwiLCBhcmc6IGZuLmNhbGwob2JqLCBhcmcpIH07XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICByZXR1cm4geyB0eXBlOiBcInRocm93XCIsIGFyZzogZXJyIH07XG4gICAgfVxuICB9XG5cbiAgdmFyIEdlblN0YXRlU3VzcGVuZGVkU3RhcnQgPSBcInN1c3BlbmRlZFN0YXJ0XCI7XG4gIHZhciBHZW5TdGF0ZVN1c3BlbmRlZFlpZWxkID0gXCJzdXNwZW5kZWRZaWVsZFwiO1xuICB2YXIgR2VuU3RhdGVFeGVjdXRpbmcgPSBcImV4ZWN1dGluZ1wiO1xuICB2YXIgR2VuU3RhdGVDb21wbGV0ZWQgPSBcImNvbXBsZXRlZFwiO1xuXG4gIC8vIFJldHVybmluZyB0aGlzIG9iamVjdCBmcm9tIHRoZSBpbm5lckZuIGhhcyB0aGUgc2FtZSBlZmZlY3QgYXNcbiAgLy8gYnJlYWtpbmcgb3V0IG9mIHRoZSBkaXNwYXRjaCBzd2l0Y2ggc3RhdGVtZW50LlxuICB2YXIgQ29udGludWVTZW50aW5lbCA9IHt9O1xuXG4gIC8vIER1bW15IGNvbnN0cnVjdG9yIGZ1bmN0aW9ucyB0aGF0IHdlIHVzZSBhcyB0aGUgLmNvbnN0cnVjdG9yIGFuZFxuICAvLyAuY29uc3RydWN0b3IucHJvdG90eXBlIHByb3BlcnRpZXMgZm9yIGZ1bmN0aW9ucyB0aGF0IHJldHVybiBHZW5lcmF0b3JcbiAgLy8gb2JqZWN0cy4gRm9yIGZ1bGwgc3BlYyBjb21wbGlhbmNlLCB5b3UgbWF5IHdpc2ggdG8gY29uZmlndXJlIHlvdXJcbiAgLy8gbWluaWZpZXIgbm90IHRvIG1hbmdsZSB0aGUgbmFtZXMgb2YgdGhlc2UgdHdvIGZ1bmN0aW9ucy5cbiAgZnVuY3Rpb24gR2VuZXJhdG9yKCkge31cbiAgZnVuY3Rpb24gR2VuZXJhdG9yRnVuY3Rpb24oKSB7fVxuICBmdW5jdGlvbiBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZSgpIHt9XG5cbiAgLy8gVGhpcyBpcyBhIHBvbHlmaWxsIGZvciAlSXRlcmF0b3JQcm90b3R5cGUlIGZvciBlbnZpcm9ubWVudHMgdGhhdFxuICAvLyBkb24ndCBuYXRpdmVseSBzdXBwb3J0IGl0LlxuICB2YXIgSXRlcmF0b3JQcm90b3R5cGUgPSB7fTtcbiAgSXRlcmF0b3JQcm90b3R5cGVbaXRlcmF0b3JTeW1ib2xdID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB0aGlzO1xuICB9O1xuXG4gIHZhciBnZXRQcm90byA9IE9iamVjdC5nZXRQcm90b3R5cGVPZjtcbiAgdmFyIE5hdGl2ZUl0ZXJhdG9yUHJvdG90eXBlID0gZ2V0UHJvdG8gJiYgZ2V0UHJvdG8oZ2V0UHJvdG8odmFsdWVzKFtdKSkpO1xuICBpZiAoTmF0aXZlSXRlcmF0b3JQcm90b3R5cGUgJiZcbiAgICAgIE5hdGl2ZUl0ZXJhdG9yUHJvdG90eXBlICE9PSBPcCAmJlxuICAgICAgaGFzT3duLmNhbGwoTmF0aXZlSXRlcmF0b3JQcm90b3R5cGUsIGl0ZXJhdG9yU3ltYm9sKSkge1xuICAgIC8vIFRoaXMgZW52aXJvbm1lbnQgaGFzIGEgbmF0aXZlICVJdGVyYXRvclByb3RvdHlwZSU7IHVzZSBpdCBpbnN0ZWFkXG4gICAgLy8gb2YgdGhlIHBvbHlmaWxsLlxuICAgIEl0ZXJhdG9yUHJvdG90eXBlID0gTmF0aXZlSXRlcmF0b3JQcm90b3R5cGU7XG4gIH1cblxuICB2YXIgR3AgPSBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZS5wcm90b3R5cGUgPVxuICAgIEdlbmVyYXRvci5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKEl0ZXJhdG9yUHJvdG90eXBlKTtcbiAgR2VuZXJhdG9yRnVuY3Rpb24ucHJvdG90eXBlID0gR3AuY29uc3RydWN0b3IgPSBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZTtcbiAgR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUuY29uc3RydWN0b3IgPSBHZW5lcmF0b3JGdW5jdGlvbjtcbiAgR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGVbdG9TdHJpbmdUYWdTeW1ib2xdID1cbiAgICBHZW5lcmF0b3JGdW5jdGlvbi5kaXNwbGF5TmFtZSA9IFwiR2VuZXJhdG9yRnVuY3Rpb25cIjtcblxuICAvLyBIZWxwZXIgZm9yIGRlZmluaW5nIHRoZSAubmV4dCwgLnRocm93LCBhbmQgLnJldHVybiBtZXRob2RzIG9mIHRoZVxuICAvLyBJdGVyYXRvciBpbnRlcmZhY2UgaW4gdGVybXMgb2YgYSBzaW5nbGUgLl9pbnZva2UgbWV0aG9kLlxuICBmdW5jdGlvbiBkZWZpbmVJdGVyYXRvck1ldGhvZHMocHJvdG90eXBlKSB7XG4gICAgW1wibmV4dFwiLCBcInRocm93XCIsIFwicmV0dXJuXCJdLmZvckVhY2goZnVuY3Rpb24obWV0aG9kKSB7XG4gICAgICBwcm90b3R5cGVbbWV0aG9kXSA9IGZ1bmN0aW9uKGFyZykge1xuICAgICAgICByZXR1cm4gdGhpcy5faW52b2tlKG1ldGhvZCwgYXJnKTtcbiAgICAgIH07XG4gICAgfSk7XG4gIH1cblxuICBydW50aW1lLmlzR2VuZXJhdG9yRnVuY3Rpb24gPSBmdW5jdGlvbihnZW5GdW4pIHtcbiAgICB2YXIgY3RvciA9IHR5cGVvZiBnZW5GdW4gPT09IFwiZnVuY3Rpb25cIiAmJiBnZW5GdW4uY29uc3RydWN0b3I7XG4gICAgcmV0dXJuIGN0b3JcbiAgICAgID8gY3RvciA9PT0gR2VuZXJhdG9yRnVuY3Rpb24gfHxcbiAgICAgICAgLy8gRm9yIHRoZSBuYXRpdmUgR2VuZXJhdG9yRnVuY3Rpb24gY29uc3RydWN0b3IsIHRoZSBiZXN0IHdlIGNhblxuICAgICAgICAvLyBkbyBpcyB0byBjaGVjayBpdHMgLm5hbWUgcHJvcGVydHkuXG4gICAgICAgIChjdG9yLmRpc3BsYXlOYW1lIHx8IGN0b3IubmFtZSkgPT09IFwiR2VuZXJhdG9yRnVuY3Rpb25cIlxuICAgICAgOiBmYWxzZTtcbiAgfTtcblxuICBydW50aW1lLm1hcmsgPSBmdW5jdGlvbihnZW5GdW4pIHtcbiAgICBpZiAoT2JqZWN0LnNldFByb3RvdHlwZU9mKSB7XG4gICAgICBPYmplY3Quc2V0UHJvdG90eXBlT2YoZ2VuRnVuLCBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGdlbkZ1bi5fX3Byb3RvX18gPSBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZTtcbiAgICAgIGlmICghKHRvU3RyaW5nVGFnU3ltYm9sIGluIGdlbkZ1bikpIHtcbiAgICAgICAgZ2VuRnVuW3RvU3RyaW5nVGFnU3ltYm9sXSA9IFwiR2VuZXJhdG9yRnVuY3Rpb25cIjtcbiAgICAgIH1cbiAgICB9XG4gICAgZ2VuRnVuLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoR3ApO1xuICAgIHJldHVybiBnZW5GdW47XG4gIH07XG5cbiAgLy8gV2l0aGluIHRoZSBib2R5IG9mIGFueSBhc3luYyBmdW5jdGlvbiwgYGF3YWl0IHhgIGlzIHRyYW5zZm9ybWVkIHRvXG4gIC8vIGB5aWVsZCByZWdlbmVyYXRvclJ1bnRpbWUuYXdyYXAoeClgLCBzbyB0aGF0IHRoZSBydW50aW1lIGNhbiB0ZXN0XG4gIC8vIGBoYXNPd24uY2FsbCh2YWx1ZSwgXCJfX2F3YWl0XCIpYCB0byBkZXRlcm1pbmUgaWYgdGhlIHlpZWxkZWQgdmFsdWUgaXNcbiAgLy8gbWVhbnQgdG8gYmUgYXdhaXRlZC5cbiAgcnVudGltZS5hd3JhcCA9IGZ1bmN0aW9uKGFyZykge1xuICAgIHJldHVybiB7IF9fYXdhaXQ6IGFyZyB9O1xuICB9O1xuXG4gIGZ1bmN0aW9uIEFzeW5jSXRlcmF0b3IoZ2VuZXJhdG9yKSB7XG4gICAgZnVuY3Rpb24gaW52b2tlKG1ldGhvZCwgYXJnLCByZXNvbHZlLCByZWplY3QpIHtcbiAgICAgIHZhciByZWNvcmQgPSB0cnlDYXRjaChnZW5lcmF0b3JbbWV0aG9kXSwgZ2VuZXJhdG9yLCBhcmcpO1xuICAgICAgaWYgKHJlY29yZC50eXBlID09PSBcInRocm93XCIpIHtcbiAgICAgICAgcmVqZWN0KHJlY29yZC5hcmcpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdmFyIHJlc3VsdCA9IHJlY29yZC5hcmc7XG4gICAgICAgIHZhciB2YWx1ZSA9IHJlc3VsdC52YWx1ZTtcbiAgICAgICAgaWYgKHZhbHVlICYmXG4gICAgICAgICAgICB0eXBlb2YgdmFsdWUgPT09IFwib2JqZWN0XCIgJiZcbiAgICAgICAgICAgIGhhc093bi5jYWxsKHZhbHVlLCBcIl9fYXdhaXRcIikpIHtcbiAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHZhbHVlLl9fYXdhaXQpLnRoZW4oZnVuY3Rpb24odmFsdWUpIHtcbiAgICAgICAgICAgIGludm9rZShcIm5leHRcIiwgdmFsdWUsIHJlc29sdmUsIHJlamVjdCk7XG4gICAgICAgICAgfSwgZnVuY3Rpb24oZXJyKSB7XG4gICAgICAgICAgICBpbnZva2UoXCJ0aHJvd1wiLCBlcnIsIHJlc29sdmUsIHJlamVjdCk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHZhbHVlKS50aGVuKGZ1bmN0aW9uKHVud3JhcHBlZCkge1xuICAgICAgICAgIC8vIFdoZW4gYSB5aWVsZGVkIFByb21pc2UgaXMgcmVzb2x2ZWQsIGl0cyBmaW5hbCB2YWx1ZSBiZWNvbWVzXG4gICAgICAgICAgLy8gdGhlIC52YWx1ZSBvZiB0aGUgUHJvbWlzZTx7dmFsdWUsZG9uZX0+IHJlc3VsdCBmb3IgdGhlXG4gICAgICAgICAgLy8gY3VycmVudCBpdGVyYXRpb24uIElmIHRoZSBQcm9taXNlIGlzIHJlamVjdGVkLCBob3dldmVyLCB0aGVcbiAgICAgICAgICAvLyByZXN1bHQgZm9yIHRoaXMgaXRlcmF0aW9uIHdpbGwgYmUgcmVqZWN0ZWQgd2l0aCB0aGUgc2FtZVxuICAgICAgICAgIC8vIHJlYXNvbi4gTm90ZSB0aGF0IHJlamVjdGlvbnMgb2YgeWllbGRlZCBQcm9taXNlcyBhcmUgbm90XG4gICAgICAgICAgLy8gdGhyb3duIGJhY2sgaW50byB0aGUgZ2VuZXJhdG9yIGZ1bmN0aW9uLCBhcyBpcyB0aGUgY2FzZVxuICAgICAgICAgIC8vIHdoZW4gYW4gYXdhaXRlZCBQcm9taXNlIGlzIHJlamVjdGVkLiBUaGlzIGRpZmZlcmVuY2UgaW5cbiAgICAgICAgICAvLyBiZWhhdmlvciBiZXR3ZWVuIHlpZWxkIGFuZCBhd2FpdCBpcyBpbXBvcnRhbnQsIGJlY2F1c2UgaXRcbiAgICAgICAgICAvLyBhbGxvd3MgdGhlIGNvbnN1bWVyIHRvIGRlY2lkZSB3aGF0IHRvIGRvIHdpdGggdGhlIHlpZWxkZWRcbiAgICAgICAgICAvLyByZWplY3Rpb24gKHN3YWxsb3cgaXQgYW5kIGNvbnRpbnVlLCBtYW51YWxseSAudGhyb3cgaXQgYmFja1xuICAgICAgICAgIC8vIGludG8gdGhlIGdlbmVyYXRvciwgYWJhbmRvbiBpdGVyYXRpb24sIHdoYXRldmVyKS4gV2l0aFxuICAgICAgICAgIC8vIGF3YWl0LCBieSBjb250cmFzdCwgdGhlcmUgaXMgbm8gb3Bwb3J0dW5pdHkgdG8gZXhhbWluZSB0aGVcbiAgICAgICAgICAvLyByZWplY3Rpb24gcmVhc29uIG91dHNpZGUgdGhlIGdlbmVyYXRvciBmdW5jdGlvbiwgc28gdGhlXG4gICAgICAgICAgLy8gb25seSBvcHRpb24gaXMgdG8gdGhyb3cgaXQgZnJvbSB0aGUgYXdhaXQgZXhwcmVzc2lvbiwgYW5kXG4gICAgICAgICAgLy8gbGV0IHRoZSBnZW5lcmF0b3IgZnVuY3Rpb24gaGFuZGxlIHRoZSBleGNlcHRpb24uXG4gICAgICAgICAgcmVzdWx0LnZhbHVlID0gdW53cmFwcGVkO1xuICAgICAgICAgIHJlc29sdmUocmVzdWx0KTtcbiAgICAgICAgfSwgcmVqZWN0KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIGdsb2JhbC5wcm9jZXNzID09PSBcIm9iamVjdFwiICYmIGdsb2JhbC5wcm9jZXNzLmRvbWFpbikge1xuICAgICAgaW52b2tlID0gZ2xvYmFsLnByb2Nlc3MuZG9tYWluLmJpbmQoaW52b2tlKTtcbiAgICB9XG5cbiAgICB2YXIgcHJldmlvdXNQcm9taXNlO1xuXG4gICAgZnVuY3Rpb24gZW5xdWV1ZShtZXRob2QsIGFyZykge1xuICAgICAgZnVuY3Rpb24gY2FsbEludm9rZVdpdGhNZXRob2RBbmRBcmcoKSB7XG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbihyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgICBpbnZva2UobWV0aG9kLCBhcmcsIHJlc29sdmUsIHJlamVjdCk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gcHJldmlvdXNQcm9taXNlID1cbiAgICAgICAgLy8gSWYgZW5xdWV1ZSBoYXMgYmVlbiBjYWxsZWQgYmVmb3JlLCB0aGVuIHdlIHdhbnQgdG8gd2FpdCB1bnRpbFxuICAgICAgICAvLyBhbGwgcHJldmlvdXMgUHJvbWlzZXMgaGF2ZSBiZWVuIHJlc29sdmVkIGJlZm9yZSBjYWxsaW5nIGludm9rZSxcbiAgICAgICAgLy8gc28gdGhhdCByZXN1bHRzIGFyZSBhbHdheXMgZGVsaXZlcmVkIGluIHRoZSBjb3JyZWN0IG9yZGVyLiBJZlxuICAgICAgICAvLyBlbnF1ZXVlIGhhcyBub3QgYmVlbiBjYWxsZWQgYmVmb3JlLCB0aGVuIGl0IGlzIGltcG9ydGFudCB0b1xuICAgICAgICAvLyBjYWxsIGludm9rZSBpbW1lZGlhdGVseSwgd2l0aG91dCB3YWl0aW5nIG9uIGEgY2FsbGJhY2sgdG8gZmlyZSxcbiAgICAgICAgLy8gc28gdGhhdCB0aGUgYXN5bmMgZ2VuZXJhdG9yIGZ1bmN0aW9uIGhhcyB0aGUgb3Bwb3J0dW5pdHkgdG8gZG9cbiAgICAgICAgLy8gYW55IG5lY2Vzc2FyeSBzZXR1cCBpbiBhIHByZWRpY3RhYmxlIHdheS4gVGhpcyBwcmVkaWN0YWJpbGl0eVxuICAgICAgICAvLyBpcyB3aHkgdGhlIFByb21pc2UgY29uc3RydWN0b3Igc3luY2hyb25vdXNseSBpbnZva2VzIGl0c1xuICAgICAgICAvLyBleGVjdXRvciBjYWxsYmFjaywgYW5kIHdoeSBhc3luYyBmdW5jdGlvbnMgc3luY2hyb25vdXNseVxuICAgICAgICAvLyBleGVjdXRlIGNvZGUgYmVmb3JlIHRoZSBmaXJzdCBhd2FpdC4gU2luY2Ugd2UgaW1wbGVtZW50IHNpbXBsZVxuICAgICAgICAvLyBhc3luYyBmdW5jdGlvbnMgaW4gdGVybXMgb2YgYXN5bmMgZ2VuZXJhdG9ycywgaXQgaXMgZXNwZWNpYWxseVxuICAgICAgICAvLyBpbXBvcnRhbnQgdG8gZ2V0IHRoaXMgcmlnaHQsIGV2ZW4gdGhvdWdoIGl0IHJlcXVpcmVzIGNhcmUuXG4gICAgICAgIHByZXZpb3VzUHJvbWlzZSA/IHByZXZpb3VzUHJvbWlzZS50aGVuKFxuICAgICAgICAgIGNhbGxJbnZva2VXaXRoTWV0aG9kQW5kQXJnLFxuICAgICAgICAgIC8vIEF2b2lkIHByb3BhZ2F0aW5nIGZhaWx1cmVzIHRvIFByb21pc2VzIHJldHVybmVkIGJ5IGxhdGVyXG4gICAgICAgICAgLy8gaW52b2NhdGlvbnMgb2YgdGhlIGl0ZXJhdG9yLlxuICAgICAgICAgIGNhbGxJbnZva2VXaXRoTWV0aG9kQW5kQXJnXG4gICAgICAgICkgOiBjYWxsSW52b2tlV2l0aE1ldGhvZEFuZEFyZygpO1xuICAgIH1cblxuICAgIC8vIERlZmluZSB0aGUgdW5pZmllZCBoZWxwZXIgbWV0aG9kIHRoYXQgaXMgdXNlZCB0byBpbXBsZW1lbnQgLm5leHQsXG4gICAgLy8gLnRocm93LCBhbmQgLnJldHVybiAoc2VlIGRlZmluZUl0ZXJhdG9yTWV0aG9kcykuXG4gICAgdGhpcy5faW52b2tlID0gZW5xdWV1ZTtcbiAgfVxuXG4gIGRlZmluZUl0ZXJhdG9yTWV0aG9kcyhBc3luY0l0ZXJhdG9yLnByb3RvdHlwZSk7XG4gIEFzeW5jSXRlcmF0b3IucHJvdG90eXBlW2FzeW5jSXRlcmF0b3JTeW1ib2xdID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB0aGlzO1xuICB9O1xuICBydW50aW1lLkFzeW5jSXRlcmF0b3IgPSBBc3luY0l0ZXJhdG9yO1xuXG4gIC8vIE5vdGUgdGhhdCBzaW1wbGUgYXN5bmMgZnVuY3Rpb25zIGFyZSBpbXBsZW1lbnRlZCBvbiB0b3Agb2ZcbiAgLy8gQXN5bmNJdGVyYXRvciBvYmplY3RzOyB0aGV5IGp1c3QgcmV0dXJuIGEgUHJvbWlzZSBmb3IgdGhlIHZhbHVlIG9mXG4gIC8vIHRoZSBmaW5hbCByZXN1bHQgcHJvZHVjZWQgYnkgdGhlIGl0ZXJhdG9yLlxuICBydW50aW1lLmFzeW5jID0gZnVuY3Rpb24oaW5uZXJGbiwgb3V0ZXJGbiwgc2VsZiwgdHJ5TG9jc0xpc3QpIHtcbiAgICB2YXIgaXRlciA9IG5ldyBBc3luY0l0ZXJhdG9yKFxuICAgICAgd3JhcChpbm5lckZuLCBvdXRlckZuLCBzZWxmLCB0cnlMb2NzTGlzdClcbiAgICApO1xuXG4gICAgcmV0dXJuIHJ1bnRpbWUuaXNHZW5lcmF0b3JGdW5jdGlvbihvdXRlckZuKVxuICAgICAgPyBpdGVyIC8vIElmIG91dGVyRm4gaXMgYSBnZW5lcmF0b3IsIHJldHVybiB0aGUgZnVsbCBpdGVyYXRvci5cbiAgICAgIDogaXRlci5uZXh0KCkudGhlbihmdW5jdGlvbihyZXN1bHQpIHtcbiAgICAgICAgICByZXR1cm4gcmVzdWx0LmRvbmUgPyByZXN1bHQudmFsdWUgOiBpdGVyLm5leHQoKTtcbiAgICAgICAgfSk7XG4gIH07XG5cbiAgZnVuY3Rpb24gbWFrZUludm9rZU1ldGhvZChpbm5lckZuLCBzZWxmLCBjb250ZXh0KSB7XG4gICAgdmFyIHN0YXRlID0gR2VuU3RhdGVTdXNwZW5kZWRTdGFydDtcblxuICAgIHJldHVybiBmdW5jdGlvbiBpbnZva2UobWV0aG9kLCBhcmcpIHtcbiAgICAgIGlmIChzdGF0ZSA9PT0gR2VuU3RhdGVFeGVjdXRpbmcpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiR2VuZXJhdG9yIGlzIGFscmVhZHkgcnVubmluZ1wiKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHN0YXRlID09PSBHZW5TdGF0ZUNvbXBsZXRlZCkge1xuICAgICAgICBpZiAobWV0aG9kID09PSBcInRocm93XCIpIHtcbiAgICAgICAgICB0aHJvdyBhcmc7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBCZSBmb3JnaXZpbmcsIHBlciAyNS4zLjMuMy4zIG9mIHRoZSBzcGVjOlxuICAgICAgICAvLyBodHRwczovL3Blb3BsZS5tb3ppbGxhLm9yZy9+am9yZW5kb3JmZi9lczYtZHJhZnQuaHRtbCNzZWMtZ2VuZXJhdG9ycmVzdW1lXG4gICAgICAgIHJldHVybiBkb25lUmVzdWx0KCk7XG4gICAgICB9XG5cbiAgICAgIGNvbnRleHQubWV0aG9kID0gbWV0aG9kO1xuICAgICAgY29udGV4dC5hcmcgPSBhcmc7XG5cbiAgICAgIHdoaWxlICh0cnVlKSB7XG4gICAgICAgIHZhciBkZWxlZ2F0ZSA9IGNvbnRleHQuZGVsZWdhdGU7XG4gICAgICAgIGlmIChkZWxlZ2F0ZSkge1xuICAgICAgICAgIHZhciBkZWxlZ2F0ZVJlc3VsdCA9IG1heWJlSW52b2tlRGVsZWdhdGUoZGVsZWdhdGUsIGNvbnRleHQpO1xuICAgICAgICAgIGlmIChkZWxlZ2F0ZVJlc3VsdCkge1xuICAgICAgICAgICAgaWYgKGRlbGVnYXRlUmVzdWx0ID09PSBDb250aW51ZVNlbnRpbmVsKSBjb250aW51ZTtcbiAgICAgICAgICAgIHJldHVybiBkZWxlZ2F0ZVJlc3VsdDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoY29udGV4dC5tZXRob2QgPT09IFwibmV4dFwiKSB7XG4gICAgICAgICAgLy8gU2V0dGluZyBjb250ZXh0Ll9zZW50IGZvciBsZWdhY3kgc3VwcG9ydCBvZiBCYWJlbCdzXG4gICAgICAgICAgLy8gZnVuY3Rpb24uc2VudCBpbXBsZW1lbnRhdGlvbi5cbiAgICAgICAgICBjb250ZXh0LnNlbnQgPSBjb250ZXh0Ll9zZW50ID0gY29udGV4dC5hcmc7XG5cbiAgICAgICAgfSBlbHNlIGlmIChjb250ZXh0Lm1ldGhvZCA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICAgICAgaWYgKHN0YXRlID09PSBHZW5TdGF0ZVN1c3BlbmRlZFN0YXJ0KSB7XG4gICAgICAgICAgICBzdGF0ZSA9IEdlblN0YXRlQ29tcGxldGVkO1xuICAgICAgICAgICAgdGhyb3cgY29udGV4dC5hcmc7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgY29udGV4dC5kaXNwYXRjaEV4Y2VwdGlvbihjb250ZXh0LmFyZyk7XG5cbiAgICAgICAgfSBlbHNlIGlmIChjb250ZXh0Lm1ldGhvZCA9PT0gXCJyZXR1cm5cIikge1xuICAgICAgICAgIGNvbnRleHQuYWJydXB0KFwicmV0dXJuXCIsIGNvbnRleHQuYXJnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHN0YXRlID0gR2VuU3RhdGVFeGVjdXRpbmc7XG5cbiAgICAgICAgdmFyIHJlY29yZCA9IHRyeUNhdGNoKGlubmVyRm4sIHNlbGYsIGNvbnRleHQpO1xuICAgICAgICBpZiAocmVjb3JkLnR5cGUgPT09IFwibm9ybWFsXCIpIHtcbiAgICAgICAgICAvLyBJZiBhbiBleGNlcHRpb24gaXMgdGhyb3duIGZyb20gaW5uZXJGbiwgd2UgbGVhdmUgc3RhdGUgPT09XG4gICAgICAgICAgLy8gR2VuU3RhdGVFeGVjdXRpbmcgYW5kIGxvb3AgYmFjayBmb3IgYW5vdGhlciBpbnZvY2F0aW9uLlxuICAgICAgICAgIHN0YXRlID0gY29udGV4dC5kb25lXG4gICAgICAgICAgICA/IEdlblN0YXRlQ29tcGxldGVkXG4gICAgICAgICAgICA6IEdlblN0YXRlU3VzcGVuZGVkWWllbGQ7XG5cbiAgICAgICAgICBpZiAocmVjb3JkLmFyZyA9PT0gQ29udGludWVTZW50aW5lbCkge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHZhbHVlOiByZWNvcmQuYXJnLFxuICAgICAgICAgICAgZG9uZTogY29udGV4dC5kb25lXG4gICAgICAgICAgfTtcblxuICAgICAgICB9IGVsc2UgaWYgKHJlY29yZC50eXBlID09PSBcInRocm93XCIpIHtcbiAgICAgICAgICBzdGF0ZSA9IEdlblN0YXRlQ29tcGxldGVkO1xuICAgICAgICAgIC8vIERpc3BhdGNoIHRoZSBleGNlcHRpb24gYnkgbG9vcGluZyBiYWNrIGFyb3VuZCB0byB0aGVcbiAgICAgICAgICAvLyBjb250ZXh0LmRpc3BhdGNoRXhjZXB0aW9uKGNvbnRleHQuYXJnKSBjYWxsIGFib3ZlLlxuICAgICAgICAgIGNvbnRleHQubWV0aG9kID0gXCJ0aHJvd1wiO1xuICAgICAgICAgIGNvbnRleHQuYXJnID0gcmVjb3JkLmFyZztcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH07XG4gIH1cblxuICAvLyBDYWxsIGRlbGVnYXRlLml0ZXJhdG9yW2NvbnRleHQubWV0aG9kXShjb250ZXh0LmFyZykgYW5kIGhhbmRsZSB0aGVcbiAgLy8gcmVzdWx0LCBlaXRoZXIgYnkgcmV0dXJuaW5nIGEgeyB2YWx1ZSwgZG9uZSB9IHJlc3VsdCBmcm9tIHRoZVxuICAvLyBkZWxlZ2F0ZSBpdGVyYXRvciwgb3IgYnkgbW9kaWZ5aW5nIGNvbnRleHQubWV0aG9kIGFuZCBjb250ZXh0LmFyZyxcbiAgLy8gc2V0dGluZyBjb250ZXh0LmRlbGVnYXRlIHRvIG51bGwsIGFuZCByZXR1cm5pbmcgdGhlIENvbnRpbnVlU2VudGluZWwuXG4gIGZ1bmN0aW9uIG1heWJlSW52b2tlRGVsZWdhdGUoZGVsZWdhdGUsIGNvbnRleHQpIHtcbiAgICB2YXIgbWV0aG9kID0gZGVsZWdhdGUuaXRlcmF0b3JbY29udGV4dC5tZXRob2RdO1xuICAgIGlmIChtZXRob2QgPT09IHVuZGVmaW5lZCkge1xuICAgICAgLy8gQSAudGhyb3cgb3IgLnJldHVybiB3aGVuIHRoZSBkZWxlZ2F0ZSBpdGVyYXRvciBoYXMgbm8gLnRocm93XG4gICAgICAvLyBtZXRob2QgYWx3YXlzIHRlcm1pbmF0ZXMgdGhlIHlpZWxkKiBsb29wLlxuICAgICAgY29udGV4dC5kZWxlZ2F0ZSA9IG51bGw7XG5cbiAgICAgIGlmIChjb250ZXh0Lm1ldGhvZCA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICAgIGlmIChkZWxlZ2F0ZS5pdGVyYXRvci5yZXR1cm4pIHtcbiAgICAgICAgICAvLyBJZiB0aGUgZGVsZWdhdGUgaXRlcmF0b3IgaGFzIGEgcmV0dXJuIG1ldGhvZCwgZ2l2ZSBpdCBhXG4gICAgICAgICAgLy8gY2hhbmNlIHRvIGNsZWFuIHVwLlxuICAgICAgICAgIGNvbnRleHQubWV0aG9kID0gXCJyZXR1cm5cIjtcbiAgICAgICAgICBjb250ZXh0LmFyZyA9IHVuZGVmaW5lZDtcbiAgICAgICAgICBtYXliZUludm9rZURlbGVnYXRlKGRlbGVnYXRlLCBjb250ZXh0KTtcblxuICAgICAgICAgIGlmIChjb250ZXh0Lm1ldGhvZCA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICAgICAgICAvLyBJZiBtYXliZUludm9rZURlbGVnYXRlKGNvbnRleHQpIGNoYW5nZWQgY29udGV4dC5tZXRob2QgZnJvbVxuICAgICAgICAgICAgLy8gXCJyZXR1cm5cIiB0byBcInRocm93XCIsIGxldCB0aGF0IG92ZXJyaWRlIHRoZSBUeXBlRXJyb3IgYmVsb3cuXG4gICAgICAgICAgICByZXR1cm4gQ29udGludWVTZW50aW5lbDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBjb250ZXh0Lm1ldGhvZCA9IFwidGhyb3dcIjtcbiAgICAgICAgY29udGV4dC5hcmcgPSBuZXcgVHlwZUVycm9yKFxuICAgICAgICAgIFwiVGhlIGl0ZXJhdG9yIGRvZXMgbm90IHByb3ZpZGUgYSAndGhyb3cnIG1ldGhvZFwiKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIENvbnRpbnVlU2VudGluZWw7XG4gICAgfVxuXG4gICAgdmFyIHJlY29yZCA9IHRyeUNhdGNoKG1ldGhvZCwgZGVsZWdhdGUuaXRlcmF0b3IsIGNvbnRleHQuYXJnKTtcblxuICAgIGlmIChyZWNvcmQudHlwZSA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICBjb250ZXh0Lm1ldGhvZCA9IFwidGhyb3dcIjtcbiAgICAgIGNvbnRleHQuYXJnID0gcmVjb3JkLmFyZztcbiAgICAgIGNvbnRleHQuZGVsZWdhdGUgPSBudWxsO1xuICAgICAgcmV0dXJuIENvbnRpbnVlU2VudGluZWw7XG4gICAgfVxuXG4gICAgdmFyIGluZm8gPSByZWNvcmQuYXJnO1xuXG4gICAgaWYgKCEgaW5mbykge1xuICAgICAgY29udGV4dC5tZXRob2QgPSBcInRocm93XCI7XG4gICAgICBjb250ZXh0LmFyZyA9IG5ldyBUeXBlRXJyb3IoXCJpdGVyYXRvciByZXN1bHQgaXMgbm90IGFuIG9iamVjdFwiKTtcbiAgICAgIGNvbnRleHQuZGVsZWdhdGUgPSBudWxsO1xuICAgICAgcmV0dXJuIENvbnRpbnVlU2VudGluZWw7XG4gICAgfVxuXG4gICAgaWYgKGluZm8uZG9uZSkge1xuICAgICAgLy8gQXNzaWduIHRoZSByZXN1bHQgb2YgdGhlIGZpbmlzaGVkIGRlbGVnYXRlIHRvIHRoZSB0ZW1wb3JhcnlcbiAgICAgIC8vIHZhcmlhYmxlIHNwZWNpZmllZCBieSBkZWxlZ2F0ZS5yZXN1bHROYW1lIChzZWUgZGVsZWdhdGVZaWVsZCkuXG4gICAgICBjb250ZXh0W2RlbGVnYXRlLnJlc3VsdE5hbWVdID0gaW5mby52YWx1ZTtcblxuICAgICAgLy8gUmVzdW1lIGV4ZWN1dGlvbiBhdCB0aGUgZGVzaXJlZCBsb2NhdGlvbiAoc2VlIGRlbGVnYXRlWWllbGQpLlxuICAgICAgY29udGV4dC5uZXh0ID0gZGVsZWdhdGUubmV4dExvYztcblxuICAgICAgLy8gSWYgY29udGV4dC5tZXRob2Qgd2FzIFwidGhyb3dcIiBidXQgdGhlIGRlbGVnYXRlIGhhbmRsZWQgdGhlXG4gICAgICAvLyBleGNlcHRpb24sIGxldCB0aGUgb3V0ZXIgZ2VuZXJhdG9yIHByb2NlZWQgbm9ybWFsbHkuIElmXG4gICAgICAvLyBjb250ZXh0Lm1ldGhvZCB3YXMgXCJuZXh0XCIsIGZvcmdldCBjb250ZXh0LmFyZyBzaW5jZSBpdCBoYXMgYmVlblxuICAgICAgLy8gXCJjb25zdW1lZFwiIGJ5IHRoZSBkZWxlZ2F0ZSBpdGVyYXRvci4gSWYgY29udGV4dC5tZXRob2Qgd2FzXG4gICAgICAvLyBcInJldHVyblwiLCBhbGxvdyB0aGUgb3JpZ2luYWwgLnJldHVybiBjYWxsIHRvIGNvbnRpbnVlIGluIHRoZVxuICAgICAgLy8gb3V0ZXIgZ2VuZXJhdG9yLlxuICAgICAgaWYgKGNvbnRleHQubWV0aG9kICE9PSBcInJldHVyblwiKSB7XG4gICAgICAgIGNvbnRleHQubWV0aG9kID0gXCJuZXh0XCI7XG4gICAgICAgIGNvbnRleHQuYXJnID0gdW5kZWZpbmVkO1xuICAgICAgfVxuXG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIFJlLXlpZWxkIHRoZSByZXN1bHQgcmV0dXJuZWQgYnkgdGhlIGRlbGVnYXRlIG1ldGhvZC5cbiAgICAgIHJldHVybiBpbmZvO1xuICAgIH1cblxuICAgIC8vIFRoZSBkZWxlZ2F0ZSBpdGVyYXRvciBpcyBmaW5pc2hlZCwgc28gZm9yZ2V0IGl0IGFuZCBjb250aW51ZSB3aXRoXG4gICAgLy8gdGhlIG91dGVyIGdlbmVyYXRvci5cbiAgICBjb250ZXh0LmRlbGVnYXRlID0gbnVsbDtcbiAgICByZXR1cm4gQ29udGludWVTZW50aW5lbDtcbiAgfVxuXG4gIC8vIERlZmluZSBHZW5lcmF0b3IucHJvdG90eXBlLntuZXh0LHRocm93LHJldHVybn0gaW4gdGVybXMgb2YgdGhlXG4gIC8vIHVuaWZpZWQgLl9pbnZva2UgaGVscGVyIG1ldGhvZC5cbiAgZGVmaW5lSXRlcmF0b3JNZXRob2RzKEdwKTtcblxuICBHcFt0b1N0cmluZ1RhZ1N5bWJvbF0gPSBcIkdlbmVyYXRvclwiO1xuXG4gIC8vIEEgR2VuZXJhdG9yIHNob3VsZCBhbHdheXMgcmV0dXJuIGl0c2VsZiBhcyB0aGUgaXRlcmF0b3Igb2JqZWN0IHdoZW4gdGhlXG4gIC8vIEBAaXRlcmF0b3IgZnVuY3Rpb24gaXMgY2FsbGVkIG9uIGl0LiBTb21lIGJyb3dzZXJzJyBpbXBsZW1lbnRhdGlvbnMgb2YgdGhlXG4gIC8vIGl0ZXJhdG9yIHByb3RvdHlwZSBjaGFpbiBpbmNvcnJlY3RseSBpbXBsZW1lbnQgdGhpcywgY2F1c2luZyB0aGUgR2VuZXJhdG9yXG4gIC8vIG9iamVjdCB0byBub3QgYmUgcmV0dXJuZWQgZnJvbSB0aGlzIGNhbGwuIFRoaXMgZW5zdXJlcyB0aGF0IGRvZXNuJ3QgaGFwcGVuLlxuICAvLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL3JlZ2VuZXJhdG9yL2lzc3Vlcy8yNzQgZm9yIG1vcmUgZGV0YWlscy5cbiAgR3BbaXRlcmF0b3JTeW1ib2xdID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH07XG5cbiAgR3AudG9TdHJpbmcgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gXCJbb2JqZWN0IEdlbmVyYXRvcl1cIjtcbiAgfTtcblxuICBmdW5jdGlvbiBwdXNoVHJ5RW50cnkobG9jcykge1xuICAgIHZhciBlbnRyeSA9IHsgdHJ5TG9jOiBsb2NzWzBdIH07XG5cbiAgICBpZiAoMSBpbiBsb2NzKSB7XG4gICAgICBlbnRyeS5jYXRjaExvYyA9IGxvY3NbMV07XG4gICAgfVxuXG4gICAgaWYgKDIgaW4gbG9jcykge1xuICAgICAgZW50cnkuZmluYWxseUxvYyA9IGxvY3NbMl07XG4gICAgICBlbnRyeS5hZnRlckxvYyA9IGxvY3NbM107XG4gICAgfVxuXG4gICAgdGhpcy50cnlFbnRyaWVzLnB1c2goZW50cnkpO1xuICB9XG5cbiAgZnVuY3Rpb24gcmVzZXRUcnlFbnRyeShlbnRyeSkge1xuICAgIHZhciByZWNvcmQgPSBlbnRyeS5jb21wbGV0aW9uIHx8IHt9O1xuICAgIHJlY29yZC50eXBlID0gXCJub3JtYWxcIjtcbiAgICBkZWxldGUgcmVjb3JkLmFyZztcbiAgICBlbnRyeS5jb21wbGV0aW9uID0gcmVjb3JkO1xuICB9XG5cbiAgZnVuY3Rpb24gQ29udGV4dCh0cnlMb2NzTGlzdCkge1xuICAgIC8vIFRoZSByb290IGVudHJ5IG9iamVjdCAoZWZmZWN0aXZlbHkgYSB0cnkgc3RhdGVtZW50IHdpdGhvdXQgYSBjYXRjaFxuICAgIC8vIG9yIGEgZmluYWxseSBibG9jaykgZ2l2ZXMgdXMgYSBwbGFjZSB0byBzdG9yZSB2YWx1ZXMgdGhyb3duIGZyb21cbiAgICAvLyBsb2NhdGlvbnMgd2hlcmUgdGhlcmUgaXMgbm8gZW5jbG9zaW5nIHRyeSBzdGF0ZW1lbnQuXG4gICAgdGhpcy50cnlFbnRyaWVzID0gW3sgdHJ5TG9jOiBcInJvb3RcIiB9XTtcbiAgICB0cnlMb2NzTGlzdC5mb3JFYWNoKHB1c2hUcnlFbnRyeSwgdGhpcyk7XG4gICAgdGhpcy5yZXNldCh0cnVlKTtcbiAgfVxuXG4gIHJ1bnRpbWUua2V5cyA9IGZ1bmN0aW9uKG9iamVjdCkge1xuICAgIHZhciBrZXlzID0gW107XG4gICAgZm9yICh2YXIga2V5IGluIG9iamVjdCkge1xuICAgICAga2V5cy5wdXNoKGtleSk7XG4gICAgfVxuICAgIGtleXMucmV2ZXJzZSgpO1xuXG4gICAgLy8gUmF0aGVyIHRoYW4gcmV0dXJuaW5nIGFuIG9iamVjdCB3aXRoIGEgbmV4dCBtZXRob2QsIHdlIGtlZXBcbiAgICAvLyB0aGluZ3Mgc2ltcGxlIGFuZCByZXR1cm4gdGhlIG5leHQgZnVuY3Rpb24gaXRzZWxmLlxuICAgIHJldHVybiBmdW5jdGlvbiBuZXh0KCkge1xuICAgICAgd2hpbGUgKGtleXMubGVuZ3RoKSB7XG4gICAgICAgIHZhciBrZXkgPSBrZXlzLnBvcCgpO1xuICAgICAgICBpZiAoa2V5IGluIG9iamVjdCkge1xuICAgICAgICAgIG5leHQudmFsdWUgPSBrZXk7XG4gICAgICAgICAgbmV4dC5kb25lID0gZmFsc2U7XG4gICAgICAgICAgcmV0dXJuIG5leHQ7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLy8gVG8gYXZvaWQgY3JlYXRpbmcgYW4gYWRkaXRpb25hbCBvYmplY3QsIHdlIGp1c3QgaGFuZyB0aGUgLnZhbHVlXG4gICAgICAvLyBhbmQgLmRvbmUgcHJvcGVydGllcyBvZmYgdGhlIG5leHQgZnVuY3Rpb24gb2JqZWN0IGl0c2VsZi4gVGhpc1xuICAgICAgLy8gYWxzbyBlbnN1cmVzIHRoYXQgdGhlIG1pbmlmaWVyIHdpbGwgbm90IGFub255bWl6ZSB0aGUgZnVuY3Rpb24uXG4gICAgICBuZXh0LmRvbmUgPSB0cnVlO1xuICAgICAgcmV0dXJuIG5leHQ7XG4gICAgfTtcbiAgfTtcblxuICBmdW5jdGlvbiB2YWx1ZXMoaXRlcmFibGUpIHtcbiAgICBpZiAoaXRlcmFibGUpIHtcbiAgICAgIHZhciBpdGVyYXRvck1ldGhvZCA9IGl0ZXJhYmxlW2l0ZXJhdG9yU3ltYm9sXTtcbiAgICAgIGlmIChpdGVyYXRvck1ldGhvZCkge1xuICAgICAgICByZXR1cm4gaXRlcmF0b3JNZXRob2QuY2FsbChpdGVyYWJsZSk7XG4gICAgICB9XG5cbiAgICAgIGlmICh0eXBlb2YgaXRlcmFibGUubmV4dCA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIHJldHVybiBpdGVyYWJsZTtcbiAgICAgIH1cblxuICAgICAgaWYgKCFpc05hTihpdGVyYWJsZS5sZW5ndGgpKSB7XG4gICAgICAgIHZhciBpID0gLTEsIG5leHQgPSBmdW5jdGlvbiBuZXh0KCkge1xuICAgICAgICAgIHdoaWxlICgrK2kgPCBpdGVyYWJsZS5sZW5ndGgpIHtcbiAgICAgICAgICAgIGlmIChoYXNPd24uY2FsbChpdGVyYWJsZSwgaSkpIHtcbiAgICAgICAgICAgICAgbmV4dC52YWx1ZSA9IGl0ZXJhYmxlW2ldO1xuICAgICAgICAgICAgICBuZXh0LmRvbmUgPSBmYWxzZTtcbiAgICAgICAgICAgICAgcmV0dXJuIG5leHQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgbmV4dC52YWx1ZSA9IHVuZGVmaW5lZDtcbiAgICAgICAgICBuZXh0LmRvbmUgPSB0cnVlO1xuXG4gICAgICAgICAgcmV0dXJuIG5leHQ7XG4gICAgICAgIH07XG5cbiAgICAgICAgcmV0dXJuIG5leHQubmV4dCA9IG5leHQ7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gUmV0dXJuIGFuIGl0ZXJhdG9yIHdpdGggbm8gdmFsdWVzLlxuICAgIHJldHVybiB7IG5leHQ6IGRvbmVSZXN1bHQgfTtcbiAgfVxuICBydW50aW1lLnZhbHVlcyA9IHZhbHVlcztcblxuICBmdW5jdGlvbiBkb25lUmVzdWx0KCkge1xuICAgIHJldHVybiB7IHZhbHVlOiB1bmRlZmluZWQsIGRvbmU6IHRydWUgfTtcbiAgfVxuXG4gIENvbnRleHQucHJvdG90eXBlID0ge1xuICAgIGNvbnN0cnVjdG9yOiBDb250ZXh0LFxuXG4gICAgcmVzZXQ6IGZ1bmN0aW9uKHNraXBUZW1wUmVzZXQpIHtcbiAgICAgIHRoaXMucHJldiA9IDA7XG4gICAgICB0aGlzLm5leHQgPSAwO1xuICAgICAgLy8gUmVzZXR0aW5nIGNvbnRleHQuX3NlbnQgZm9yIGxlZ2FjeSBzdXBwb3J0IG9mIEJhYmVsJ3NcbiAgICAgIC8vIGZ1bmN0aW9uLnNlbnQgaW1wbGVtZW50YXRpb24uXG4gICAgICB0aGlzLnNlbnQgPSB0aGlzLl9zZW50ID0gdW5kZWZpbmVkO1xuICAgICAgdGhpcy5kb25lID0gZmFsc2U7XG4gICAgICB0aGlzLmRlbGVnYXRlID0gbnVsbDtcblxuICAgICAgdGhpcy5tZXRob2QgPSBcIm5leHRcIjtcbiAgICAgIHRoaXMuYXJnID0gdW5kZWZpbmVkO1xuXG4gICAgICB0aGlzLnRyeUVudHJpZXMuZm9yRWFjaChyZXNldFRyeUVudHJ5KTtcblxuICAgICAgaWYgKCFza2lwVGVtcFJlc2V0KSB7XG4gICAgICAgIGZvciAodmFyIG5hbWUgaW4gdGhpcykge1xuICAgICAgICAgIC8vIE5vdCBzdXJlIGFib3V0IHRoZSBvcHRpbWFsIG9yZGVyIG9mIHRoZXNlIGNvbmRpdGlvbnM6XG4gICAgICAgICAgaWYgKG5hbWUuY2hhckF0KDApID09PSBcInRcIiAmJlxuICAgICAgICAgICAgICBoYXNPd24uY2FsbCh0aGlzLCBuYW1lKSAmJlxuICAgICAgICAgICAgICAhaXNOYU4oK25hbWUuc2xpY2UoMSkpKSB7XG4gICAgICAgICAgICB0aGlzW25hbWVdID0gdW5kZWZpbmVkO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG5cbiAgICBzdG9wOiBmdW5jdGlvbigpIHtcbiAgICAgIHRoaXMuZG9uZSA9IHRydWU7XG5cbiAgICAgIHZhciByb290RW50cnkgPSB0aGlzLnRyeUVudHJpZXNbMF07XG4gICAgICB2YXIgcm9vdFJlY29yZCA9IHJvb3RFbnRyeS5jb21wbGV0aW9uO1xuICAgICAgaWYgKHJvb3RSZWNvcmQudHlwZSA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICAgIHRocm93IHJvb3RSZWNvcmQuYXJnO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhpcy5ydmFsO1xuICAgIH0sXG5cbiAgICBkaXNwYXRjaEV4Y2VwdGlvbjogZnVuY3Rpb24oZXhjZXB0aW9uKSB7XG4gICAgICBpZiAodGhpcy5kb25lKSB7XG4gICAgICAgIHRocm93IGV4Y2VwdGlvbjtcbiAgICAgIH1cblxuICAgICAgdmFyIGNvbnRleHQgPSB0aGlzO1xuICAgICAgZnVuY3Rpb24gaGFuZGxlKGxvYywgY2F1Z2h0KSB7XG4gICAgICAgIHJlY29yZC50eXBlID0gXCJ0aHJvd1wiO1xuICAgICAgICByZWNvcmQuYXJnID0gZXhjZXB0aW9uO1xuICAgICAgICBjb250ZXh0Lm5leHQgPSBsb2M7XG5cbiAgICAgICAgaWYgKGNhdWdodCkge1xuICAgICAgICAgIC8vIElmIHRoZSBkaXNwYXRjaGVkIGV4Y2VwdGlvbiB3YXMgY2F1Z2h0IGJ5IGEgY2F0Y2ggYmxvY2ssXG4gICAgICAgICAgLy8gdGhlbiBsZXQgdGhhdCBjYXRjaCBibG9jayBoYW5kbGUgdGhlIGV4Y2VwdGlvbiBub3JtYWxseS5cbiAgICAgICAgICBjb250ZXh0Lm1ldGhvZCA9IFwibmV4dFwiO1xuICAgICAgICAgIGNvbnRleHQuYXJnID0gdW5kZWZpbmVkO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuICEhIGNhdWdodDtcbiAgICAgIH1cblxuICAgICAgZm9yICh2YXIgaSA9IHRoaXMudHJ5RW50cmllcy5sZW5ndGggLSAxOyBpID49IDA7IC0taSkge1xuICAgICAgICB2YXIgZW50cnkgPSB0aGlzLnRyeUVudHJpZXNbaV07XG4gICAgICAgIHZhciByZWNvcmQgPSBlbnRyeS5jb21wbGV0aW9uO1xuXG4gICAgICAgIGlmIChlbnRyeS50cnlMb2MgPT09IFwicm9vdFwiKSB7XG4gICAgICAgICAgLy8gRXhjZXB0aW9uIHRocm93biBvdXRzaWRlIG9mIGFueSB0cnkgYmxvY2sgdGhhdCBjb3VsZCBoYW5kbGVcbiAgICAgICAgICAvLyBpdCwgc28gc2V0IHRoZSBjb21wbGV0aW9uIHZhbHVlIG9mIHRoZSBlbnRpcmUgZnVuY3Rpb24gdG9cbiAgICAgICAgICAvLyB0aHJvdyB0aGUgZXhjZXB0aW9uLlxuICAgICAgICAgIHJldHVybiBoYW5kbGUoXCJlbmRcIik7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoZW50cnkudHJ5TG9jIDw9IHRoaXMucHJldikge1xuICAgICAgICAgIHZhciBoYXNDYXRjaCA9IGhhc093bi5jYWxsKGVudHJ5LCBcImNhdGNoTG9jXCIpO1xuICAgICAgICAgIHZhciBoYXNGaW5hbGx5ID0gaGFzT3duLmNhbGwoZW50cnksIFwiZmluYWxseUxvY1wiKTtcblxuICAgICAgICAgIGlmIChoYXNDYXRjaCAmJiBoYXNGaW5hbGx5KSB7XG4gICAgICAgICAgICBpZiAodGhpcy5wcmV2IDwgZW50cnkuY2F0Y2hMb2MpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGhhbmRsZShlbnRyeS5jYXRjaExvYywgdHJ1ZSk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMucHJldiA8IGVudHJ5LmZpbmFsbHlMb2MpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGhhbmRsZShlbnRyeS5maW5hbGx5TG9jKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgIH0gZWxzZSBpZiAoaGFzQ2F0Y2gpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLnByZXYgPCBlbnRyeS5jYXRjaExvYykge1xuICAgICAgICAgICAgICByZXR1cm4gaGFuZGxlKGVudHJ5LmNhdGNoTG9jLCB0cnVlKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgIH0gZWxzZSBpZiAoaGFzRmluYWxseSkge1xuICAgICAgICAgICAgaWYgKHRoaXMucHJldiA8IGVudHJ5LmZpbmFsbHlMb2MpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGhhbmRsZShlbnRyeS5maW5hbGx5TG9jKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJ0cnkgc3RhdGVtZW50IHdpdGhvdXQgY2F0Y2ggb3IgZmluYWxseVwiKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuXG4gICAgYWJydXB0OiBmdW5jdGlvbih0eXBlLCBhcmcpIHtcbiAgICAgIGZvciAodmFyIGkgPSB0aGlzLnRyeUVudHJpZXMubGVuZ3RoIC0gMTsgaSA+PSAwOyAtLWkpIHtcbiAgICAgICAgdmFyIGVudHJ5ID0gdGhpcy50cnlFbnRyaWVzW2ldO1xuICAgICAgICBpZiAoZW50cnkudHJ5TG9jIDw9IHRoaXMucHJldiAmJlxuICAgICAgICAgICAgaGFzT3duLmNhbGwoZW50cnksIFwiZmluYWxseUxvY1wiKSAmJlxuICAgICAgICAgICAgdGhpcy5wcmV2IDwgZW50cnkuZmluYWxseUxvYykge1xuICAgICAgICAgIHZhciBmaW5hbGx5RW50cnkgPSBlbnRyeTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoZmluYWxseUVudHJ5ICYmXG4gICAgICAgICAgKHR5cGUgPT09IFwiYnJlYWtcIiB8fFxuICAgICAgICAgICB0eXBlID09PSBcImNvbnRpbnVlXCIpICYmXG4gICAgICAgICAgZmluYWxseUVudHJ5LnRyeUxvYyA8PSBhcmcgJiZcbiAgICAgICAgICBhcmcgPD0gZmluYWxseUVudHJ5LmZpbmFsbHlMb2MpIHtcbiAgICAgICAgLy8gSWdub3JlIHRoZSBmaW5hbGx5IGVudHJ5IGlmIGNvbnRyb2wgaXMgbm90IGp1bXBpbmcgdG8gYVxuICAgICAgICAvLyBsb2NhdGlvbiBvdXRzaWRlIHRoZSB0cnkvY2F0Y2ggYmxvY2suXG4gICAgICAgIGZpbmFsbHlFbnRyeSA9IG51bGw7XG4gICAgICB9XG5cbiAgICAgIHZhciByZWNvcmQgPSBmaW5hbGx5RW50cnkgPyBmaW5hbGx5RW50cnkuY29tcGxldGlvbiA6IHt9O1xuICAgICAgcmVjb3JkLnR5cGUgPSB0eXBlO1xuICAgICAgcmVjb3JkLmFyZyA9IGFyZztcblxuICAgICAgaWYgKGZpbmFsbHlFbnRyeSkge1xuICAgICAgICB0aGlzLm1ldGhvZCA9IFwibmV4dFwiO1xuICAgICAgICB0aGlzLm5leHQgPSBmaW5hbGx5RW50cnkuZmluYWxseUxvYztcbiAgICAgICAgcmV0dXJuIENvbnRpbnVlU2VudGluZWw7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0aGlzLmNvbXBsZXRlKHJlY29yZCk7XG4gICAgfSxcblxuICAgIGNvbXBsZXRlOiBmdW5jdGlvbihyZWNvcmQsIGFmdGVyTG9jKSB7XG4gICAgICBpZiAocmVjb3JkLnR5cGUgPT09IFwidGhyb3dcIikge1xuICAgICAgICB0aHJvdyByZWNvcmQuYXJnO1xuICAgICAgfVxuXG4gICAgICBpZiAocmVjb3JkLnR5cGUgPT09IFwiYnJlYWtcIiB8fFxuICAgICAgICAgIHJlY29yZC50eXBlID09PSBcImNvbnRpbnVlXCIpIHtcbiAgICAgICAgdGhpcy5uZXh0ID0gcmVjb3JkLmFyZztcbiAgICAgIH0gZWxzZSBpZiAocmVjb3JkLnR5cGUgPT09IFwicmV0dXJuXCIpIHtcbiAgICAgICAgdGhpcy5ydmFsID0gdGhpcy5hcmcgPSByZWNvcmQuYXJnO1xuICAgICAgICB0aGlzLm1ldGhvZCA9IFwicmV0dXJuXCI7XG4gICAgICAgIHRoaXMubmV4dCA9IFwiZW5kXCI7XG4gICAgICB9IGVsc2UgaWYgKHJlY29yZC50eXBlID09PSBcIm5vcm1hbFwiICYmIGFmdGVyTG9jKSB7XG4gICAgICAgIHRoaXMubmV4dCA9IGFmdGVyTG9jO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gQ29udGludWVTZW50aW5lbDtcbiAgICB9LFxuXG4gICAgZmluaXNoOiBmdW5jdGlvbihmaW5hbGx5TG9jKSB7XG4gICAgICBmb3IgKHZhciBpID0gdGhpcy50cnlFbnRyaWVzLmxlbmd0aCAtIDE7IGkgPj0gMDsgLS1pKSB7XG4gICAgICAgIHZhciBlbnRyeSA9IHRoaXMudHJ5RW50cmllc1tpXTtcbiAgICAgICAgaWYgKGVudHJ5LmZpbmFsbHlMb2MgPT09IGZpbmFsbHlMb2MpIHtcbiAgICAgICAgICB0aGlzLmNvbXBsZXRlKGVudHJ5LmNvbXBsZXRpb24sIGVudHJ5LmFmdGVyTG9jKTtcbiAgICAgICAgICByZXNldFRyeUVudHJ5KGVudHJ5KTtcbiAgICAgICAgICByZXR1cm4gQ29udGludWVTZW50aW5lbDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG5cbiAgICBcImNhdGNoXCI6IGZ1bmN0aW9uKHRyeUxvYykge1xuICAgICAgZm9yICh2YXIgaSA9IHRoaXMudHJ5RW50cmllcy5sZW5ndGggLSAxOyBpID49IDA7IC0taSkge1xuICAgICAgICB2YXIgZW50cnkgPSB0aGlzLnRyeUVudHJpZXNbaV07XG4gICAgICAgIGlmIChlbnRyeS50cnlMb2MgPT09IHRyeUxvYykge1xuICAgICAgICAgIHZhciByZWNvcmQgPSBlbnRyeS5jb21wbGV0aW9uO1xuICAgICAgICAgIGlmIChyZWNvcmQudHlwZSA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICAgICAgICB2YXIgdGhyb3duID0gcmVjb3JkLmFyZztcbiAgICAgICAgICAgIHJlc2V0VHJ5RW50cnkoZW50cnkpO1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gdGhyb3duO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8vIFRoZSBjb250ZXh0LmNhdGNoIG1ldGhvZCBtdXN0IG9ubHkgYmUgY2FsbGVkIHdpdGggYSBsb2NhdGlvblxuICAgICAgLy8gYXJndW1lbnQgdGhhdCBjb3JyZXNwb25kcyB0byBhIGtub3duIGNhdGNoIGJsb2NrLlxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiaWxsZWdhbCBjYXRjaCBhdHRlbXB0XCIpO1xuICAgIH0sXG5cbiAgICBkZWxlZ2F0ZVlpZWxkOiBmdW5jdGlvbihpdGVyYWJsZSwgcmVzdWx0TmFtZSwgbmV4dExvYykge1xuICAgICAgdGhpcy5kZWxlZ2F0ZSA9IHtcbiAgICAgICAgaXRlcmF0b3I6IHZhbHVlcyhpdGVyYWJsZSksXG4gICAgICAgIHJlc3VsdE5hbWU6IHJlc3VsdE5hbWUsXG4gICAgICAgIG5leHRMb2M6IG5leHRMb2NcbiAgICAgIH07XG5cbiAgICAgIGlmICh0aGlzLm1ldGhvZCA9PT0gXCJuZXh0XCIpIHtcbiAgICAgICAgLy8gRGVsaWJlcmF0ZWx5IGZvcmdldCB0aGUgbGFzdCBzZW50IHZhbHVlIHNvIHRoYXQgd2UgZG9uJ3RcbiAgICAgICAgLy8gYWNjaWRlbnRhbGx5IHBhc3MgaXQgb24gdG8gdGhlIGRlbGVnYXRlLlxuICAgICAgICB0aGlzLmFyZyA9IHVuZGVmaW5lZDtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIENvbnRpbnVlU2VudGluZWw7XG4gICAgfVxuICB9O1xufSkoXG4gIC8vIEFtb25nIHRoZSB2YXJpb3VzIHRyaWNrcyBmb3Igb2J0YWluaW5nIGEgcmVmZXJlbmNlIHRvIHRoZSBnbG9iYWxcbiAgLy8gb2JqZWN0LCB0aGlzIHNlZW1zIHRvIGJlIHRoZSBtb3N0IHJlbGlhYmxlIHRlY2huaXF1ZSB0aGF0IGRvZXMgbm90XG4gIC8vIHVzZSBpbmRpcmVjdCBldmFsICh3aGljaCB2aW9sYXRlcyBDb250ZW50IFNlY3VyaXR5IFBvbGljeSkuXG4gIHR5cGVvZiBnbG9iYWwgPT09IFwib2JqZWN0XCIgPyBnbG9iYWwgOlxuICB0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiID8gd2luZG93IDpcbiAgdHlwZW9mIHNlbGYgPT09IFwib2JqZWN0XCIgPyBzZWxmIDogdGhpc1xuKTtcbiIsInJlcXVpcmUoJy4uLy4uL21vZHVsZXMvY29yZS5yZWdleHAuZXNjYXBlJyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uLy4uL21vZHVsZXMvX2NvcmUnKS5SZWdFeHAuZXNjYXBlO1xuIiwiLy8gaHR0cHM6Ly9naXRodWIuY29tL2JlbmphbWluZ3IvUmV4RXhwLmVzY2FwZVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkcmUgPSByZXF1aXJlKCcuL19yZXBsYWNlcicpKC9bXFxcXF4kKis/LigpfFtcXF17fV0vZywgJ1xcXFwkJicpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ1JlZ0V4cCcsIHsgZXNjYXBlOiBmdW5jdGlvbiBlc2NhcGUoaXQpIHsgcmV0dXJuICRyZShpdCk7IH0gfSk7XG4iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChyZWdFeHAsIHJlcGxhY2UpIHtcbiAgdmFyIHJlcGxhY2VyID0gcmVwbGFjZSA9PT0gT2JqZWN0KHJlcGxhY2UpID8gZnVuY3Rpb24gKHBhcnQpIHtcbiAgICByZXR1cm4gcmVwbGFjZVtwYXJ0XTtcbiAgfSA6IHJlcGxhY2U7XG4gIHJldHVybiBmdW5jdGlvbiAoaXQpIHtcbiAgICByZXR1cm4gU3RyaW5nKGl0KS5yZXBsYWNlKHJlZ0V4cCwgcmVwbGFjZXIpO1xuICB9O1xufTtcbiIsImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCBSZWFjdERPTSBmcm9tICdyZWFjdC1kb20nO1xuXG5pbXBvcnQgeyBhZGRvblJvb3QsIGFkZG9uUHJlZml4RGFzaGJvYXJkIH0gZnJvbSAnLi4vQXBwRmlsZXMvRnVuY3Rpb25zL2FkZG9uUHJlZml4JztcblxuaW1wb3J0IGdldFRyYW5zbGF0aW9ucyBmcm9tICcuLi8uLi9UcmFuc2xhdGlvbnMvaW5kZXgnO1xuXG5pbXBvcnQgJy4uL1Nhc3MvZGFzaGJvYXJkL2Jsb2NrZWRjb3VudC5zY3NzJztcblxuY2xhc3MgQXBwIGV4dGVuZHMgQ29tcG9uZW50IHtcblxuICBwdWJsaWMgc3RhdGU6IHtcbiAgICBba2V5OiBzdHJpbmddOiBhbnk7XG4gIH07XG5cbiAgcHVibGljIHRyYW5zbGF0aW9uczoge1xuICAgIFtrZXk6IHN0cmluZ106IGFueTtcbiAgfTtcblxuICBjb25zdHJ1Y3Rvcihwcm9wcyl7XG4gICAgc3VwZXIocHJvcHMpO1xuXG4gICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgIGRhdGE6ICcuLi4nXG4gICAgfTtcblxuICAgIHRoaXMudHJhbnNsYXRpb25zID0gZ2V0VHJhbnNsYXRpb25zKCk7XG4gIH1cblxuICBjb21wb25lbnREaWRNb3VudCgpe1xuICAgIC8vQHRzLWlnbm9yZVxuICAgIGJyb3dzZXIucnVudGltZS5zZW5kTWVzc2FnZSh7XG4gICAgICBhY3Rpb246ICdnZXQtbWF4LWRhbmdlci1jb3VudCdcbiAgICB9KVxuICAgIC50aGVuKCBkYW5nZXJDb3VudCA9PiB7XG4gICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgZGFuZ2VyQ291bnRcbiAgICAgIH0pXG4gICAgfSlcbiAgICAuY2F0Y2goICgpID0+IHt9KTtcblxuICAgIGNvbnN0IHF1ZXJ5U3RyaW5nID0gd2luZG93LmxvY2F0aW9uLnNlYXJjaDtcbiAgICBjb25zdCB1cmxQYXJhbXMgPSBuZXcgVVJMU2VhcmNoUGFyYW1zKHF1ZXJ5U3RyaW5nKTtcbiAgICBjb25zdCBkYXRhID0gdXJsUGFyYW1zLmdldCgnZGF0YScpO1xuXG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICBkYXRhXG4gICAgfSk7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyBkYXRhIH0gPSB0aGlzLnN0YXRlO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXZcbiAgICAgICAgY2xhc3NOYW1lPVwiQmxvY2tlZFwiXG4gICAgICAgIHN0eWxlPXtcbiAgICAgICAgICB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kSW1hZ2U6IGB1cmwoJHthZGRvblJvb3QoKX0vbG9nby9nZXJhbi1kZS1rbGVyay0ycS1JVmpiZG05SS11bnNwbGFzaC5qcGdgXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICA+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaGVhZGVyXCI+XG4gICAgICAgICAgPGgyPlxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBgJHt0aGlzLnRyYW5zbGF0aW9ucy5kYW5nZXJVcmxQcmVmaXh9OiAke2RhdGF9YFxuICAgICAgICAgICAgfVxuICAgICAgICAgIDwvaDI+XG4gICAgICAgICAgPGgxPlxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBgJHt0aGlzLnRyYW5zbGF0aW9ucy5kYW5nZXJDb3VudH1gXG4gICAgICAgICAgICB9XG4gICAgICAgICAgPC9oMT5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZm9vdGVyXCI+XG4gICAgICAgICAgICA8YSBocmVmPXtgJHthZGRvblByZWZpeERhc2hib2FyZCgpfSMvc2VjdXJpdHktc2V0dGluZ3NgfT5cbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHRoaXMudHJhbnNsYXRpb25zLnBvcHVwX3RpdGxlX2Rhc2hib2FyZFxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICA8L2E+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufVxuXG5SZWFjdERPTS5yZW5kZXIoPEFwcCAvPiwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2FwcCcpKTtcbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MTYuMTMuMVxuICogcmVhY3QucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7dmFyIGw9cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIiksbj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yLHA9bj9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMyxxPW4/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixyPW4/U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LHQ9bj9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsdT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCx2PW4/U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpOjYwMTA5LHc9bj9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCx4PW4/U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpOjYwMTEyLHk9bj9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIik6NjAxMTMsej1uP1N5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpOjYwMTE1LEE9bj9TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKTpcbjYwMTE2LEI9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yO2Z1bmN0aW9uIEMoYSl7Zm9yKHZhciBiPVwiaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2Vycm9yLWRlY29kZXIuaHRtbD9pbnZhcmlhbnQ9XCIrYSxjPTE7Yzxhcmd1bWVudHMubGVuZ3RoO2MrKyliKz1cIiZhcmdzW109XCIrZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tjXSk7cmV0dXJuXCJNaW5pZmllZCBSZWFjdCBlcnJvciAjXCIrYStcIjsgdmlzaXQgXCIrYitcIiBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuXCJ9XG52YXIgRD17aXNNb3VudGVkOmZ1bmN0aW9uKCl7cmV0dXJuITF9LGVucXVldWVGb3JjZVVwZGF0ZTpmdW5jdGlvbigpe30sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbigpe30sZW5xdWV1ZVNldFN0YXRlOmZ1bmN0aW9uKCl7fX0sRT17fTtmdW5jdGlvbiBGKGEsYixjKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPUU7dGhpcy51cGRhdGVyPWN8fER9Ri5wcm90b3R5cGUuaXNSZWFjdENvbXBvbmVudD17fTtGLnByb3RvdHlwZS5zZXRTdGF0ZT1mdW5jdGlvbihhLGIpe2lmKFwib2JqZWN0XCIhPT10eXBlb2YgYSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJm51bGwhPWEpdGhyb3cgRXJyb3IoQyg4NSkpO3RoaXMudXBkYXRlci5lbnF1ZXVlU2V0U3RhdGUodGhpcyxhLGIsXCJzZXRTdGF0ZVwiKX07Ri5wcm90b3R5cGUuZm9yY2VVcGRhdGU9ZnVuY3Rpb24oYSl7dGhpcy51cGRhdGVyLmVucXVldWVGb3JjZVVwZGF0ZSh0aGlzLGEsXCJmb3JjZVVwZGF0ZVwiKX07XG5mdW5jdGlvbiBHKCl7fUcucHJvdG90eXBlPUYucHJvdG90eXBlO2Z1bmN0aW9uIEgoYSxiLGMpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9RTt0aGlzLnVwZGF0ZXI9Y3x8RH12YXIgST1ILnByb3RvdHlwZT1uZXcgRztJLmNvbnN0cnVjdG9yPUg7bChJLEYucHJvdG90eXBlKTtJLmlzUHVyZVJlYWN0Q29tcG9uZW50PSEwO3ZhciBKPXtjdXJyZW50Om51bGx9LEs9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxMPXtrZXk6ITAscmVmOiEwLF9fc2VsZjohMCxfX3NvdXJjZTohMH07XG5mdW5jdGlvbiBNKGEsYixjKXt2YXIgZSxkPXt9LGc9bnVsbCxrPW51bGw7aWYobnVsbCE9Yilmb3IoZSBpbiB2b2lkIDAhPT1iLnJlZiYmKGs9Yi5yZWYpLHZvaWQgMCE9PWIua2V5JiYoZz1cIlwiK2Iua2V5KSxiKUsuY2FsbChiLGUpJiYhTC5oYXNPd25Qcm9wZXJ0eShlKSYmKGRbZV09YltlXSk7dmFyIGY9YXJndW1lbnRzLmxlbmd0aC0yO2lmKDE9PT1mKWQuY2hpbGRyZW49YztlbHNlIGlmKDE8Zil7Zm9yKHZhciBoPUFycmF5KGYpLG09MDttPGY7bSsrKWhbbV09YXJndW1lbnRzW20rMl07ZC5jaGlsZHJlbj1ofWlmKGEmJmEuZGVmYXVsdFByb3BzKWZvcihlIGluIGY9YS5kZWZhdWx0UHJvcHMsZil2b2lkIDA9PT1kW2VdJiYoZFtlXT1mW2VdKTtyZXR1cm57JCR0eXBlb2Y6cCx0eXBlOmEsa2V5OmcscmVmOmsscHJvcHM6ZCxfb3duZXI6Si5jdXJyZW50fX1cbmZ1bmN0aW9uIE4oYSxiKXtyZXR1cm57JCR0eXBlb2Y6cCx0eXBlOmEudHlwZSxrZXk6YixyZWY6YS5yZWYscHJvcHM6YS5wcm9wcyxfb3duZXI6YS5fb3duZXJ9fWZ1bmN0aW9uIE8oYSl7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmYS4kJHR5cGVvZj09PXB9ZnVuY3Rpb24gZXNjYXBlKGEpe3ZhciBiPXtcIj1cIjpcIj0wXCIsXCI6XCI6XCI9MlwifTtyZXR1cm5cIiRcIisoXCJcIithKS5yZXBsYWNlKC9bPTpdL2csZnVuY3Rpb24oYSl7cmV0dXJuIGJbYV19KX12YXIgUD0vXFwvKy9nLFE9W107ZnVuY3Rpb24gUihhLGIsYyxlKXtpZihRLmxlbmd0aCl7dmFyIGQ9US5wb3AoKTtkLnJlc3VsdD1hO2Qua2V5UHJlZml4PWI7ZC5mdW5jPWM7ZC5jb250ZXh0PWU7ZC5jb3VudD0wO3JldHVybiBkfXJldHVybntyZXN1bHQ6YSxrZXlQcmVmaXg6YixmdW5jOmMsY29udGV4dDplLGNvdW50OjB9fVxuZnVuY3Rpb24gUyhhKXthLnJlc3VsdD1udWxsO2Eua2V5UHJlZml4PW51bGw7YS5mdW5jPW51bGw7YS5jb250ZXh0PW51bGw7YS5jb3VudD0wOzEwPlEubGVuZ3RoJiZRLnB1c2goYSl9XG5mdW5jdGlvbiBUKGEsYixjLGUpe3ZhciBkPXR5cGVvZiBhO2lmKFwidW5kZWZpbmVkXCI9PT1kfHxcImJvb2xlYW5cIj09PWQpYT1udWxsO3ZhciBnPSExO2lmKG51bGw9PT1hKWc9ITA7ZWxzZSBzd2l0Y2goZCl7Y2FzZSBcInN0cmluZ1wiOmNhc2UgXCJudW1iZXJcIjpnPSEwO2JyZWFrO2Nhc2UgXCJvYmplY3RcIjpzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSBwOmNhc2UgcTpnPSEwfX1pZihnKXJldHVybiBjKGUsYSxcIlwiPT09Yj9cIi5cIitVKGEsMCk6YiksMTtnPTA7Yj1cIlwiPT09Yj9cIi5cIjpiK1wiOlwiO2lmKEFycmF5LmlzQXJyYXkoYSkpZm9yKHZhciBrPTA7azxhLmxlbmd0aDtrKyspe2Q9YVtrXTt2YXIgZj1iK1UoZCxrKTtnKz1UKGQsZixjLGUpfWVsc2UgaWYobnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYT9mPW51bGw6KGY9QiYmYVtCXXx8YVtcIkBAaXRlcmF0b3JcIl0sZj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgZj9mOm51bGwpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBmKWZvcihhPWYuY2FsbChhKSxrPVxuMDshKGQ9YS5uZXh0KCkpLmRvbmU7KWQ9ZC52YWx1ZSxmPWIrVShkLGsrKyksZys9VChkLGYsYyxlKTtlbHNlIGlmKFwib2JqZWN0XCI9PT1kKXRocm93IGM9XCJcIithLEVycm9yKEMoMzEsXCJbb2JqZWN0IE9iamVjdF1cIj09PWM/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhhKS5qb2luKFwiLCBcIikrXCJ9XCI6YyxcIlwiKSk7cmV0dXJuIGd9ZnVuY3Rpb24gVihhLGIsYyl7cmV0dXJuIG51bGw9PWE/MDpUKGEsXCJcIixiLGMpfWZ1bmN0aW9uIFUoYSxiKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZudWxsIT1hLmtleT9lc2NhcGUoYS5rZXkpOmIudG9TdHJpbmcoMzYpfWZ1bmN0aW9uIFcoYSxiKXthLmZ1bmMuY2FsbChhLmNvbnRleHQsYixhLmNvdW50KyspfVxuZnVuY3Rpb24gYWEoYSxiLGMpe3ZhciBlPWEucmVzdWx0LGQ9YS5rZXlQcmVmaXg7YT1hLmZ1bmMuY2FsbChhLmNvbnRleHQsYixhLmNvdW50KyspO0FycmF5LmlzQXJyYXkoYSk/WChhLGUsYyxmdW5jdGlvbihhKXtyZXR1cm4gYX0pOm51bGwhPWEmJihPKGEpJiYoYT1OKGEsZCsoIWEua2V5fHxiJiZiLmtleT09PWEua2V5P1wiXCI6KFwiXCIrYS5rZXkpLnJlcGxhY2UoUCxcIiQmL1wiKStcIi9cIikrYykpLGUucHVzaChhKSl9ZnVuY3Rpb24gWChhLGIsYyxlLGQpe3ZhciBnPVwiXCI7bnVsbCE9YyYmKGc9KFwiXCIrYykucmVwbGFjZShQLFwiJCYvXCIpK1wiL1wiKTtiPVIoYixnLGUsZCk7VihhLGFhLGIpO1MoYil9dmFyIFk9e2N1cnJlbnQ6bnVsbH07ZnVuY3Rpb24gWigpe3ZhciBhPVkuY3VycmVudDtpZihudWxsPT09YSl0aHJvdyBFcnJvcihDKDMyMSkpO3JldHVybiBhfVxudmFyIGJhPXtSZWFjdEN1cnJlbnREaXNwYXRjaGVyOlksUmVhY3RDdXJyZW50QmF0Y2hDb25maWc6e3N1c3BlbnNlOm51bGx9LFJlYWN0Q3VycmVudE93bmVyOkosSXNTb21lUmVuZGVyZXJBY3Rpbmc6e2N1cnJlbnQ6ITF9LGFzc2lnbjpsfTtleHBvcnRzLkNoaWxkcmVuPXttYXA6ZnVuY3Rpb24oYSxiLGMpe2lmKG51bGw9PWEpcmV0dXJuIGE7dmFyIGU9W107WChhLGUsbnVsbCxiLGMpO3JldHVybiBlfSxmb3JFYWNoOmZ1bmN0aW9uKGEsYixjKXtpZihudWxsPT1hKXJldHVybiBhO2I9UihudWxsLG51bGwsYixjKTtWKGEsVyxiKTtTKGIpfSxjb3VudDpmdW5jdGlvbihhKXtyZXR1cm4gVihhLGZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9LG51bGwpfSx0b0FycmF5OmZ1bmN0aW9uKGEpe3ZhciBiPVtdO1goYSxiLG51bGwsZnVuY3Rpb24oYSl7cmV0dXJuIGF9KTtyZXR1cm4gYn0sb25seTpmdW5jdGlvbihhKXtpZighTyhhKSl0aHJvdyBFcnJvcihDKDE0MykpO3JldHVybiBhfX07XG5leHBvcnRzLkNvbXBvbmVudD1GO2V4cG9ydHMuRnJhZ21lbnQ9cjtleHBvcnRzLlByb2ZpbGVyPXU7ZXhwb3J0cy5QdXJlQ29tcG9uZW50PUg7ZXhwb3J0cy5TdHJpY3RNb2RlPXQ7ZXhwb3J0cy5TdXNwZW5zZT15O2V4cG9ydHMuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ9YmE7XG5leHBvcnRzLmNsb25lRWxlbWVudD1mdW5jdGlvbihhLGIsYyl7aWYobnVsbD09PWF8fHZvaWQgMD09PWEpdGhyb3cgRXJyb3IoQygyNjcsYSkpO3ZhciBlPWwoe30sYS5wcm9wcyksZD1hLmtleSxnPWEucmVmLGs9YS5fb3duZXI7aWYobnVsbCE9Yil7dm9pZCAwIT09Yi5yZWYmJihnPWIucmVmLGs9Si5jdXJyZW50KTt2b2lkIDAhPT1iLmtleSYmKGQ9XCJcIitiLmtleSk7aWYoYS50eXBlJiZhLnR5cGUuZGVmYXVsdFByb3BzKXZhciBmPWEudHlwZS5kZWZhdWx0UHJvcHM7Zm9yKGggaW4gYilLLmNhbGwoYixoKSYmIUwuaGFzT3duUHJvcGVydHkoaCkmJihlW2hdPXZvaWQgMD09PWJbaF0mJnZvaWQgMCE9PWY/ZltoXTpiW2hdKX12YXIgaD1hcmd1bWVudHMubGVuZ3RoLTI7aWYoMT09PWgpZS5jaGlsZHJlbj1jO2Vsc2UgaWYoMTxoKXtmPUFycmF5KGgpO2Zvcih2YXIgbT0wO208aDttKyspZlttXT1hcmd1bWVudHNbbSsyXTtlLmNoaWxkcmVuPWZ9cmV0dXJueyQkdHlwZW9mOnAsdHlwZTphLnR5cGUsXG5rZXk6ZCxyZWY6Zyxwcm9wczplLF9vd25lcjprfX07ZXhwb3J0cy5jcmVhdGVDb250ZXh0PWZ1bmN0aW9uKGEsYil7dm9pZCAwPT09YiYmKGI9bnVsbCk7YT17JCR0eXBlb2Y6dyxfY2FsY3VsYXRlQ2hhbmdlZEJpdHM6YixfY3VycmVudFZhbHVlOmEsX2N1cnJlbnRWYWx1ZTI6YSxfdGhyZWFkQ291bnQ6MCxQcm92aWRlcjpudWxsLENvbnN1bWVyOm51bGx9O2EuUHJvdmlkZXI9eyQkdHlwZW9mOnYsX2NvbnRleHQ6YX07cmV0dXJuIGEuQ29uc3VtZXI9YX07ZXhwb3J0cy5jcmVhdGVFbGVtZW50PU07ZXhwb3J0cy5jcmVhdGVGYWN0b3J5PWZ1bmN0aW9uKGEpe3ZhciBiPU0uYmluZChudWxsLGEpO2IudHlwZT1hO3JldHVybiBifTtleHBvcnRzLmNyZWF0ZVJlZj1mdW5jdGlvbigpe3JldHVybntjdXJyZW50Om51bGx9fTtleHBvcnRzLmZvcndhcmRSZWY9ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOngscmVuZGVyOmF9fTtleHBvcnRzLmlzVmFsaWRFbGVtZW50PU87XG5leHBvcnRzLmxhenk9ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOkEsX2N0b3I6YSxfc3RhdHVzOi0xLF9yZXN1bHQ6bnVsbH19O2V4cG9ydHMubWVtbz1mdW5jdGlvbihhLGIpe3JldHVybnskJHR5cGVvZjp6LHR5cGU6YSxjb21wYXJlOnZvaWQgMD09PWI/bnVsbDpifX07ZXhwb3J0cy51c2VDYWxsYmFjaz1mdW5jdGlvbihhLGIpe3JldHVybiBaKCkudXNlQ2FsbGJhY2soYSxiKX07ZXhwb3J0cy51c2VDb250ZXh0PWZ1bmN0aW9uKGEsYil7cmV0dXJuIFooKS51c2VDb250ZXh0KGEsYil9O2V4cG9ydHMudXNlRGVidWdWYWx1ZT1mdW5jdGlvbigpe307ZXhwb3J0cy51c2VFZmZlY3Q9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gWigpLnVzZUVmZmVjdChhLGIpfTtleHBvcnRzLnVzZUltcGVyYXRpdmVIYW5kbGU9ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBaKCkudXNlSW1wZXJhdGl2ZUhhbmRsZShhLGIsYyl9O1xuZXhwb3J0cy51c2VMYXlvdXRFZmZlY3Q9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gWigpLnVzZUxheW91dEVmZmVjdChhLGIpfTtleHBvcnRzLnVzZU1lbW89ZnVuY3Rpb24oYSxiKXtyZXR1cm4gWigpLnVzZU1lbW8oYSxiKX07ZXhwb3J0cy51c2VSZWR1Y2VyPWZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gWigpLnVzZVJlZHVjZXIoYSxiLGMpfTtleHBvcnRzLnVzZVJlZj1mdW5jdGlvbihhKXtyZXR1cm4gWigpLnVzZVJlZihhKX07ZXhwb3J0cy51c2VTdGF0ZT1mdW5jdGlvbihhKXtyZXR1cm4gWigpLnVzZVN0YXRlKGEpfTtleHBvcnRzLnZlcnNpb249XCIxNi4xMy4xXCI7XG4iLCIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIGNoZWNrRENFKCkge1xuICAvKiBnbG9iYWwgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fICovXG4gIGlmIChcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fID09PSAndW5kZWZpbmVkJyB8fFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UgIT09ICdmdW5jdGlvbidcbiAgKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgLy8gVGhpcyBicmFuY2ggaXMgdW5yZWFjaGFibGUgYmVjYXVzZSB0aGlzIGZ1bmN0aW9uIGlzIG9ubHkgY2FsbGVkXG4gICAgLy8gaW4gcHJvZHVjdGlvbiwgYnV0IHRoZSBjb25kaXRpb24gaXMgdHJ1ZSBvbmx5IGluIGRldmVsb3BtZW50LlxuICAgIC8vIFRoZXJlZm9yZSBpZiB0aGUgYnJhbmNoIGlzIHN0aWxsIGhlcmUsIGRlYWQgY29kZSBlbGltaW5hdGlvbiB3YXNuJ3RcbiAgICAvLyBwcm9wZXJseSBhcHBsaWVkLlxuICAgIC8vIERvbid0IGNoYW5nZSB0aGUgbWVzc2FnZS4gUmVhY3QgRGV2VG9vbHMgcmVsaWVzIG9uIGl0LiBBbHNvIG1ha2Ugc3VyZVxuICAgIC8vIHRoaXMgbWVzc2FnZSBkb2Vzbid0IG9jY3VyIGVsc2V3aGVyZSBpbiB0aGlzIGZ1bmN0aW9uLCBvciBpdCB3aWxsIGNhdXNlXG4gICAgLy8gYSBmYWxzZSBwb3NpdGl2ZS5cbiAgICB0aHJvdyBuZXcgRXJyb3IoJ15fXicpO1xuICB9XG4gIHRyeSB7XG4gICAgLy8gVmVyaWZ5IHRoYXQgdGhlIGNvZGUgYWJvdmUgaGFzIGJlZW4gZGVhZCBjb2RlIGVsaW1pbmF0ZWQgKERDRSdkKS5cbiAgICBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UoY2hlY2tEQ0UpO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICAvLyBEZXZUb29scyBzaG91bGRuJ3QgY3Jhc2ggUmVhY3QsIG5vIG1hdHRlciB3aGF0LlxuICAgIC8vIFdlIHNob3VsZCBzdGlsbCByZXBvcnQgaW4gY2FzZSB3ZSBicmVhayB0aGlzIGNvZGUuXG4gICAgY29uc29sZS5lcnJvcihlcnIpO1xuICB9XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIC8vIERDRSBjaGVjayBzaG91bGQgaGFwcGVuIGJlZm9yZSBSZWFjdERPTSBidW5kbGUgZXhlY3V0ZXMgc28gdGhhdFxuICAvLyBEZXZUb29scyBjYW4gcmVwb3J0IGJhZCBtaW5pZmljYXRpb24gZHVyaW5nIGluamVjdGlvbi5cbiAgY2hlY2tEQ0UoKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjEzLjFcbiAqIHJlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbi8qXG4gTW9kZXJuaXpyIDMuMC4wcHJlIChDdXN0b20gQnVpbGQpIHwgTUlUXG4qL1xuJ3VzZSBzdHJpY3QnO3ZhciBhYT1yZXF1aXJlKFwicmVhY3RcIiksbj1yZXF1aXJlKFwib2JqZWN0LWFzc2lnblwiKSxyPXJlcXVpcmUoXCJzY2hlZHVsZXJcIik7ZnVuY3Rpb24gdShhKXtmb3IodmFyIGI9XCJodHRwczovL3JlYWN0anMub3JnL2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudD1cIithLGM9MTtjPGFyZ3VtZW50cy5sZW5ndGg7YysrKWIrPVwiJmFyZ3NbXT1cIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2NdKTtyZXR1cm5cIk1pbmlmaWVkIFJlYWN0IGVycm9yICNcIithK1wiOyB2aXNpdCBcIitiK1wiIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy5cIn1pZighYWEpdGhyb3cgRXJyb3IodSgyMjcpKTtcbmZ1bmN0aW9uIGJhKGEsYixjLGQsZSxmLGcsaCxrKXt2YXIgbD1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMyk7dHJ5e2IuYXBwbHkoYyxsKX1jYXRjaChtKXt0aGlzLm9uRXJyb3IobSl9fXZhciBkYT0hMSxlYT1udWxsLGZhPSExLGhhPW51bGwsaWE9e29uRXJyb3I6ZnVuY3Rpb24oYSl7ZGE9ITA7ZWE9YX19O2Z1bmN0aW9uIGphKGEsYixjLGQsZSxmLGcsaCxrKXtkYT0hMTtlYT1udWxsO2JhLmFwcGx5KGlhLGFyZ3VtZW50cyl9ZnVuY3Rpb24ga2EoYSxiLGMsZCxlLGYsZyxoLGspe2phLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtpZihkYSl7aWYoZGEpe3ZhciBsPWVhO2RhPSExO2VhPW51bGx9ZWxzZSB0aHJvdyBFcnJvcih1KDE5OCkpO2ZhfHwoZmE9ITAsaGE9bCl9fXZhciBsYT1udWxsLG1hPW51bGwsbmE9bnVsbDtcbmZ1bmN0aW9uIG9hKGEsYixjKXt2YXIgZD1hLnR5cGV8fFwidW5rbm93bi1ldmVudFwiO2EuY3VycmVudFRhcmdldD1uYShjKTtrYShkLGIsdm9pZCAwLGEpO2EuY3VycmVudFRhcmdldD1udWxsfXZhciBwYT1udWxsLHFhPXt9O1xuZnVuY3Rpb24gcmEoKXtpZihwYSlmb3IodmFyIGEgaW4gcWEpe3ZhciBiPXFhW2FdLGM9cGEuaW5kZXhPZihhKTtpZighKC0xPGMpKXRocm93IEVycm9yKHUoOTYsYSkpO2lmKCFzYVtjXSl7aWYoIWIuZXh0cmFjdEV2ZW50cyl0aHJvdyBFcnJvcih1KDk3LGEpKTtzYVtjXT1iO2M9Yi5ldmVudFR5cGVzO2Zvcih2YXIgZCBpbiBjKXt2YXIgZT12b2lkIDA7dmFyIGY9Y1tkXSxnPWIsaD1kO2lmKHRhLmhhc093blByb3BlcnR5KGgpKXRocm93IEVycm9yKHUoOTksaCkpO3RhW2hdPWY7dmFyIGs9Zi5waGFzZWRSZWdpc3RyYXRpb25OYW1lcztpZihrKXtmb3IoZSBpbiBrKWsuaGFzT3duUHJvcGVydHkoZSkmJnVhKGtbZV0sZyxoKTtlPSEwfWVsc2UgZi5yZWdpc3RyYXRpb25OYW1lPyh1YShmLnJlZ2lzdHJhdGlvbk5hbWUsZyxoKSxlPSEwKTplPSExO2lmKCFlKXRocm93IEVycm9yKHUoOTgsZCxhKSk7fX19fVxuZnVuY3Rpb24gdWEoYSxiLGMpe2lmKHZhW2FdKXRocm93IEVycm9yKHUoMTAwLGEpKTt2YVthXT1iO3dhW2FdPWIuZXZlbnRUeXBlc1tjXS5kZXBlbmRlbmNpZXN9dmFyIHNhPVtdLHRhPXt9LHZhPXt9LHdhPXt9O2Z1bmN0aW9uIHhhKGEpe3ZhciBiPSExLGM7Zm9yKGMgaW4gYSlpZihhLmhhc093blByb3BlcnR5KGMpKXt2YXIgZD1hW2NdO2lmKCFxYS5oYXNPd25Qcm9wZXJ0eShjKXx8cWFbY10hPT1kKXtpZihxYVtjXSl0aHJvdyBFcnJvcih1KDEwMixjKSk7cWFbY109ZDtiPSEwfX1iJiZyYSgpfXZhciB5YT0hKFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93fHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvdy5kb2N1bWVudHx8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCksemE9bnVsbCxBYT1udWxsLEJhPW51bGw7XG5mdW5jdGlvbiBDYShhKXtpZihhPW1hKGEpKXtpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgemEpdGhyb3cgRXJyb3IodSgyODApKTt2YXIgYj1hLnN0YXRlTm9kZTtiJiYoYj1sYShiKSx6YShhLnN0YXRlTm9kZSxhLnR5cGUsYikpfX1mdW5jdGlvbiBEYShhKXtBYT9CYT9CYS5wdXNoKGEpOkJhPVthXTpBYT1hfWZ1bmN0aW9uIEVhKCl7aWYoQWEpe3ZhciBhPUFhLGI9QmE7QmE9QWE9bnVsbDtDYShhKTtpZihiKWZvcihhPTA7YTxiLmxlbmd0aDthKyspQ2EoYlthXSl9fWZ1bmN0aW9uIEZhKGEsYil7cmV0dXJuIGEoYil9ZnVuY3Rpb24gR2EoYSxiLGMsZCxlKXtyZXR1cm4gYShiLGMsZCxlKX1mdW5jdGlvbiBIYSgpe312YXIgSWE9RmEsSmE9ITEsS2E9ITE7ZnVuY3Rpb24gTGEoKXtpZihudWxsIT09QWF8fG51bGwhPT1CYSlIYSgpLEVhKCl9XG5mdW5jdGlvbiBNYShhLGIsYyl7aWYoS2EpcmV0dXJuIGEoYixjKTtLYT0hMDt0cnl7cmV0dXJuIElhKGEsYixjKX1maW5hbGx5e0thPSExLExhKCl9fXZhciBOYT0vXls6QS1aX2EtelxcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDJGRlxcdTAzNzAtXFx1MDM3RFxcdTAzN0YtXFx1MUZGRlxcdTIwMEMtXFx1MjAwRFxcdTIwNzAtXFx1MjE4RlxcdTJDMDAtXFx1MkZFRlxcdTMwMDEtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZGRF1bOkEtWl9hLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRcXC0uMC05XFx1MDBCN1xcdTAzMDAtXFx1MDM2RlxcdTIwM0YtXFx1MjA0MF0qJC8sT2E9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxQYT17fSxRYT17fTtcbmZ1bmN0aW9uIFJhKGEpe2lmKE9hLmNhbGwoUWEsYSkpcmV0dXJuITA7aWYoT2EuY2FsbChQYSxhKSlyZXR1cm4hMTtpZihOYS50ZXN0KGEpKXJldHVybiBRYVthXT0hMDtQYVthXT0hMDtyZXR1cm4hMX1mdW5jdGlvbiBTYShhLGIsYyxkKXtpZihudWxsIT09YyYmMD09PWMudHlwZSlyZXR1cm4hMTtzd2l0Y2godHlwZW9mIGIpe2Nhc2UgXCJmdW5jdGlvblwiOmNhc2UgXCJzeW1ib2xcIjpyZXR1cm4hMDtjYXNlIFwiYm9vbGVhblwiOmlmKGQpcmV0dXJuITE7aWYobnVsbCE9PWMpcmV0dXJuIWMuYWNjZXB0c0Jvb2xlYW5zO2E9YS50b0xvd2VyQ2FzZSgpLnNsaWNlKDAsNSk7cmV0dXJuXCJkYXRhLVwiIT09YSYmXCJhcmlhLVwiIT09YTtkZWZhdWx0OnJldHVybiExfX1cbmZ1bmN0aW9uIFRhKGEsYixjLGQpe2lmKG51bGw9PT1ifHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIGJ8fFNhKGEsYixjLGQpKXJldHVybiEwO2lmKGQpcmV0dXJuITE7aWYobnVsbCE9PWMpc3dpdGNoKGMudHlwZSl7Y2FzZSAzOnJldHVybiFiO2Nhc2UgNDpyZXR1cm4hMT09PWI7Y2FzZSA1OnJldHVybiBpc05hTihiKTtjYXNlIDY6cmV0dXJuIGlzTmFOKGIpfHwxPmJ9cmV0dXJuITF9ZnVuY3Rpb24gdihhLGIsYyxkLGUsZil7dGhpcy5hY2NlcHRzQm9vbGVhbnM9Mj09PWJ8fDM9PT1ifHw0PT09Yjt0aGlzLmF0dHJpYnV0ZU5hbWU9ZDt0aGlzLmF0dHJpYnV0ZU5hbWVzcGFjZT1lO3RoaXMubXVzdFVzZVByb3BlcnR5PWM7dGhpcy5wcm9wZXJ0eU5hbWU9YTt0aGlzLnR5cGU9Yjt0aGlzLnNhbml0aXplVVJMPWZ9dmFyIEM9e307XG5cImNoaWxkcmVuIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIGRlZmF1bHRWYWx1ZSBkZWZhdWx0Q2hlY2tlZCBpbm5lckhUTUwgc3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nIHN1cHByZXNzSHlkcmF0aW9uV2FybmluZyBzdHlsZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NbYV09bmV3IHYoYSwwLCExLGEsbnVsbCwhMSl9KTtbW1wiYWNjZXB0Q2hhcnNldFwiLFwiYWNjZXB0LWNoYXJzZXRcIl0sW1wiY2xhc3NOYW1lXCIsXCJjbGFzc1wiXSxbXCJodG1sRm9yXCIsXCJmb3JcIl0sW1wiaHR0cEVxdWl2XCIsXCJodHRwLWVxdWl2XCJdXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWFbMF07Q1tiXT1uZXcgdihiLDEsITEsYVsxXSxudWxsLCExKX0pO1tcImNvbnRlbnRFZGl0YWJsZVwiLFwiZHJhZ2dhYmxlXCIsXCJzcGVsbENoZWNrXCIsXCJ2YWx1ZVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NbYV09bmV3IHYoYSwyLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExKX0pO1xuW1wiYXV0b1JldmVyc2VcIixcImV4dGVybmFsUmVzb3VyY2VzUmVxdWlyZWRcIixcImZvY3VzYWJsZVwiLFwicHJlc2VydmVBbHBoYVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NbYV09bmV3IHYoYSwyLCExLGEsbnVsbCwhMSl9KTtcImFsbG93RnVsbFNjcmVlbiBhc3luYyBhdXRvRm9jdXMgYXV0b1BsYXkgY29udHJvbHMgZGVmYXVsdCBkZWZlciBkaXNhYmxlZCBkaXNhYmxlUGljdHVyZUluUGljdHVyZSBmb3JtTm9WYWxpZGF0ZSBoaWRkZW4gbG9vcCBub01vZHVsZSBub1ZhbGlkYXRlIG9wZW4gcGxheXNJbmxpbmUgcmVhZE9ubHkgcmVxdWlyZWQgcmV2ZXJzZWQgc2NvcGVkIHNlYW1sZXNzIGl0ZW1TY29wZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NbYV09bmV3IHYoYSwzLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExKX0pO1xuW1wiY2hlY2tlZFwiLFwibXVsdGlwbGVcIixcIm11dGVkXCIsXCJzZWxlY3RlZFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NbYV09bmV3IHYoYSwzLCEwLGEsbnVsbCwhMSl9KTtbXCJjYXB0dXJlXCIsXCJkb3dubG9hZFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NbYV09bmV3IHYoYSw0LCExLGEsbnVsbCwhMSl9KTtbXCJjb2xzXCIsXCJyb3dzXCIsXCJzaXplXCIsXCJzcGFuXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7Q1thXT1uZXcgdihhLDYsITEsYSxudWxsLCExKX0pO1tcInJvd1NwYW5cIixcInN0YXJ0XCJdLmZvckVhY2goZnVuY3Rpb24oYSl7Q1thXT1uZXcgdihhLDUsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEpfSk7dmFyIFVhPS9bXFwtOl0oW2Etel0pL2c7ZnVuY3Rpb24gVmEoYSl7cmV0dXJuIGFbMV0udG9VcHBlckNhc2UoKX1cblwiYWNjZW50LWhlaWdodCBhbGlnbm1lbnQtYmFzZWxpbmUgYXJhYmljLWZvcm0gYmFzZWxpbmUtc2hpZnQgY2FwLWhlaWdodCBjbGlwLXBhdGggY2xpcC1ydWxlIGNvbG9yLWludGVycG9sYXRpb24gY29sb3ItaW50ZXJwb2xhdGlvbi1maWx0ZXJzIGNvbG9yLXByb2ZpbGUgY29sb3ItcmVuZGVyaW5nIGRvbWluYW50LWJhc2VsaW5lIGVuYWJsZS1iYWNrZ3JvdW5kIGZpbGwtb3BhY2l0eSBmaWxsLXJ1bGUgZmxvb2QtY29sb3IgZmxvb2Qtb3BhY2l0eSBmb250LWZhbWlseSBmb250LXNpemUgZm9udC1zaXplLWFkanVzdCBmb250LXN0cmV0Y2ggZm9udC1zdHlsZSBmb250LXZhcmlhbnQgZm9udC13ZWlnaHQgZ2x5cGgtbmFtZSBnbHlwaC1vcmllbnRhdGlvbi1ob3Jpem9udGFsIGdseXBoLW9yaWVudGF0aW9uLXZlcnRpY2FsIGhvcml6LWFkdi14IGhvcml6LW9yaWdpbi14IGltYWdlLXJlbmRlcmluZyBsZXR0ZXItc3BhY2luZyBsaWdodGluZy1jb2xvciBtYXJrZXItZW5kIG1hcmtlci1taWQgbWFya2VyLXN0YXJ0IG92ZXJsaW5lLXBvc2l0aW9uIG92ZXJsaW5lLXRoaWNrbmVzcyBwYWludC1vcmRlciBwYW5vc2UtMSBwb2ludGVyLWV2ZW50cyByZW5kZXJpbmctaW50ZW50IHNoYXBlLXJlbmRlcmluZyBzdG9wLWNvbG9yIHN0b3Atb3BhY2l0eSBzdHJpa2V0aHJvdWdoLXBvc2l0aW9uIHN0cmlrZXRocm91Z2gtdGhpY2tuZXNzIHN0cm9rZS1kYXNoYXJyYXkgc3Ryb2tlLWRhc2hvZmZzZXQgc3Ryb2tlLWxpbmVjYXAgc3Ryb2tlLWxpbmVqb2luIHN0cm9rZS1taXRlcmxpbWl0IHN0cm9rZS1vcGFjaXR5IHN0cm9rZS13aWR0aCB0ZXh0LWFuY2hvciB0ZXh0LWRlY29yYXRpb24gdGV4dC1yZW5kZXJpbmcgdW5kZXJsaW5lLXBvc2l0aW9uIHVuZGVybGluZS10aGlja25lc3MgdW5pY29kZS1iaWRpIHVuaWNvZGUtcmFuZ2UgdW5pdHMtcGVyLWVtIHYtYWxwaGFiZXRpYyB2LWhhbmdpbmcgdi1pZGVvZ3JhcGhpYyB2LW1hdGhlbWF0aWNhbCB2ZWN0b3ItZWZmZWN0IHZlcnQtYWR2LXkgdmVydC1vcmlnaW4teCB2ZXJ0LW9yaWdpbi15IHdvcmQtc3BhY2luZyB3cml0aW5nLW1vZGUgeG1sbnM6eGxpbmsgeC1oZWlnaHRcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2UoVWEsXG5WYSk7Q1tiXT1uZXcgdihiLDEsITEsYSxudWxsLCExKX0pO1wieGxpbms6YWN0dWF0ZSB4bGluazphcmNyb2xlIHhsaW5rOnJvbGUgeGxpbms6c2hvdyB4bGluazp0aXRsZSB4bGluazp0eXBlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKFVhLFZhKTtDW2JdPW5ldyB2KGIsMSwhMSxhLFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiLCExKX0pO1tcInhtbDpiYXNlXCIsXCJ4bWw6bGFuZ1wiLFwieG1sOnNwYWNlXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKFVhLFZhKTtDW2JdPW5ldyB2KGIsMSwhMSxhLFwiaHR0cDovL3d3dy53My5vcmcvWE1MLzE5OTgvbmFtZXNwYWNlXCIsITEpfSk7W1widGFiSW5kZXhcIixcImNyb3NzT3JpZ2luXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7Q1thXT1uZXcgdihhLDEsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEpfSk7XG5DLnhsaW5rSHJlZj1uZXcgdihcInhsaW5rSHJlZlwiLDEsITEsXCJ4bGluazpocmVmXCIsXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIsITApO1tcInNyY1wiLFwiaHJlZlwiLFwiYWN0aW9uXCIsXCJmb3JtQWN0aW9uXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7Q1thXT1uZXcgdihhLDEsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITApfSk7dmFyIFdhPWFhLl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEO1dhLmhhc093blByb3BlcnR5KFwiUmVhY3RDdXJyZW50RGlzcGF0Y2hlclwiKXx8KFdhLlJlYWN0Q3VycmVudERpc3BhdGNoZXI9e2N1cnJlbnQ6bnVsbH0pO1dhLmhhc093blByb3BlcnR5KFwiUmVhY3RDdXJyZW50QmF0Y2hDb25maWdcIil8fChXYS5SZWFjdEN1cnJlbnRCYXRjaENvbmZpZz17c3VzcGVuc2U6bnVsbH0pO1xuZnVuY3Rpb24gWGEoYSxiLGMsZCl7dmFyIGU9Qy5oYXNPd25Qcm9wZXJ0eShiKT9DW2JdOm51bGw7dmFyIGY9bnVsbCE9PWU/MD09PWUudHlwZTpkPyExOiEoMjxiLmxlbmd0aCl8fFwib1wiIT09YlswXSYmXCJPXCIhPT1iWzBdfHxcIm5cIiE9PWJbMV0mJlwiTlwiIT09YlsxXT8hMTohMDtmfHwoVGEoYixjLGUsZCkmJihjPW51bGwpLGR8fG51bGw9PT1lP1JhKGIpJiYobnVsbD09PWM/YS5yZW1vdmVBdHRyaWJ1dGUoYik6YS5zZXRBdHRyaWJ1dGUoYixcIlwiK2MpKTplLm11c3RVc2VQcm9wZXJ0eT9hW2UucHJvcGVydHlOYW1lXT1udWxsPT09Yz8zPT09ZS50eXBlPyExOlwiXCI6YzooYj1lLmF0dHJpYnV0ZU5hbWUsZD1lLmF0dHJpYnV0ZU5hbWVzcGFjZSxudWxsPT09Yz9hLnJlbW92ZUF0dHJpYnV0ZShiKTooZT1lLnR5cGUsYz0zPT09ZXx8ND09PWUmJiEwPT09Yz9cIlwiOlwiXCIrYyxkP2Euc2V0QXR0cmlidXRlTlMoZCxiLGMpOmEuc2V0QXR0cmlidXRlKGIsYykpKSl9XG52YXIgWWE9L14oLiopW1xcXFxcXC9dLyxFPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5mb3IsWmE9RT9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMywkYT1FP1N5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIik6NjAxMDYsYWI9RT9TeW1ib2wuZm9yKFwicmVhY3QuZnJhZ21lbnRcIik6NjAxMDcsYmI9RT9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsY2I9RT9TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIik6NjAxMTQsZGI9RT9TeW1ib2wuZm9yKFwicmVhY3QucHJvdmlkZXJcIik6NjAxMDksZWI9RT9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCxmYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5jb25jdXJyZW50X21vZGVcIik6NjAxMTEsZ2I9RT9TeW1ib2wuZm9yKFwicmVhY3QuZm9yd2FyZF9yZWZcIik6NjAxMTIsaGI9RT9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIik6NjAxMTMsaWI9RT9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VfbGlzdFwiKTpcbjYwMTIwLGpiPUU/U3ltYm9sLmZvcihcInJlYWN0Lm1lbW9cIik6NjAxMTUsa2I9RT9TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKTo2MDExNixsYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5ibG9ja1wiKTo2MDEyMSxtYj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuaXRlcmF0b3I7ZnVuY3Rpb24gbmIoYSl7aWYobnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYSlyZXR1cm4gbnVsbDthPW1iJiZhW21iXXx8YVtcIkBAaXRlcmF0b3JcIl07cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YTpudWxsfWZ1bmN0aW9uIG9iKGEpe2lmKC0xPT09YS5fc3RhdHVzKXthLl9zdGF0dXM9MDt2YXIgYj1hLl9jdG9yO2I9YigpO2EuX3Jlc3VsdD1iO2IudGhlbihmdW5jdGlvbihiKXswPT09YS5fc3RhdHVzJiYoYj1iLmRlZmF1bHQsYS5fc3RhdHVzPTEsYS5fcmVzdWx0PWIpfSxmdW5jdGlvbihiKXswPT09YS5fc3RhdHVzJiYoYS5fc3RhdHVzPTIsYS5fcmVzdWx0PWIpfSl9fVxuZnVuY3Rpb24gcGIoYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gYS5kaXNwbGF5TmFtZXx8YS5uYW1lfHxudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYSlyZXR1cm4gYTtzd2l0Y2goYSl7Y2FzZSBhYjpyZXR1cm5cIkZyYWdtZW50XCI7Y2FzZSAkYTpyZXR1cm5cIlBvcnRhbFwiO2Nhc2UgY2I6cmV0dXJuXCJQcm9maWxlclwiO2Nhc2UgYmI6cmV0dXJuXCJTdHJpY3RNb2RlXCI7Y2FzZSBoYjpyZXR1cm5cIlN1c3BlbnNlXCI7Y2FzZSBpYjpyZXR1cm5cIlN1c3BlbnNlTGlzdFwifWlmKFwib2JqZWN0XCI9PT10eXBlb2YgYSlzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSBlYjpyZXR1cm5cIkNvbnRleHQuQ29uc3VtZXJcIjtjYXNlIGRiOnJldHVyblwiQ29udGV4dC5Qcm92aWRlclwiO2Nhc2UgZ2I6dmFyIGI9YS5yZW5kZXI7Yj1iLmRpc3BsYXlOYW1lfHxiLm5hbWV8fFwiXCI7cmV0dXJuIGEuZGlzcGxheU5hbWV8fChcIlwiIT09Yj9cIkZvcndhcmRSZWYoXCIrYitcIilcIjpcblwiRm9yd2FyZFJlZlwiKTtjYXNlIGpiOnJldHVybiBwYihhLnR5cGUpO2Nhc2UgbGI6cmV0dXJuIHBiKGEucmVuZGVyKTtjYXNlIGtiOmlmKGE9MT09PWEuX3N0YXR1cz9hLl9yZXN1bHQ6bnVsbClyZXR1cm4gcGIoYSl9cmV0dXJuIG51bGx9ZnVuY3Rpb24gcWIoYSl7dmFyIGI9XCJcIjtkb3thOnN3aXRjaChhLnRhZyl7Y2FzZSAzOmNhc2UgNDpjYXNlIDY6Y2FzZSA3OmNhc2UgMTA6Y2FzZSA5OnZhciBjPVwiXCI7YnJlYWsgYTtkZWZhdWx0OnZhciBkPWEuX2RlYnVnT3duZXIsZT1hLl9kZWJ1Z1NvdXJjZSxmPXBiKGEudHlwZSk7Yz1udWxsO2QmJihjPXBiKGQudHlwZSkpO2Q9ZjtmPVwiXCI7ZT9mPVwiIChhdCBcIitlLmZpbGVOYW1lLnJlcGxhY2UoWWEsXCJcIikrXCI6XCIrZS5saW5lTnVtYmVyK1wiKVwiOmMmJihmPVwiIChjcmVhdGVkIGJ5IFwiK2MrXCIpXCIpO2M9XCJcXG4gICAgaW4gXCIrKGR8fFwiVW5rbm93blwiKStmfWIrPWM7YT1hLnJldHVybn13aGlsZShhKTtyZXR1cm4gYn1cbmZ1bmN0aW9uIHJiKGEpe3N3aXRjaCh0eXBlb2YgYSl7Y2FzZSBcImJvb2xlYW5cIjpjYXNlIFwibnVtYmVyXCI6Y2FzZSBcIm9iamVjdFwiOmNhc2UgXCJzdHJpbmdcIjpjYXNlIFwidW5kZWZpbmVkXCI6cmV0dXJuIGE7ZGVmYXVsdDpyZXR1cm5cIlwifX1mdW5jdGlvbiBzYihhKXt2YXIgYj1hLnR5cGU7cmV0dXJuKGE9YS5ub2RlTmFtZSkmJlwiaW5wdXRcIj09PWEudG9Mb3dlckNhc2UoKSYmKFwiY2hlY2tib3hcIj09PWJ8fFwicmFkaW9cIj09PWIpfVxuZnVuY3Rpb24gdGIoYSl7dmFyIGI9c2IoYSk/XCJjaGVja2VkXCI6XCJ2YWx1ZVwiLGM9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihhLmNvbnN0cnVjdG9yLnByb3RvdHlwZSxiKSxkPVwiXCIrYVtiXTtpZighYS5oYXNPd25Qcm9wZXJ0eShiKSYmXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBjJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5nZXQmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLnNldCl7dmFyIGU9Yy5nZXQsZj1jLnNldDtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxiLHtjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGUuY2FsbCh0aGlzKX0sc2V0OmZ1bmN0aW9uKGEpe2Q9XCJcIithO2YuY2FsbCh0aGlzLGEpfX0pO09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse2VudW1lcmFibGU6Yy5lbnVtZXJhYmxlfSk7cmV0dXJue2dldFZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIGR9LHNldFZhbHVlOmZ1bmN0aW9uKGEpe2Q9XCJcIithfSxzdG9wVHJhY2tpbmc6ZnVuY3Rpb24oKXthLl92YWx1ZVRyYWNrZXI9XG5udWxsO2RlbGV0ZSBhW2JdfX19fWZ1bmN0aW9uIHhiKGEpe2EuX3ZhbHVlVHJhY2tlcnx8KGEuX3ZhbHVlVHJhY2tlcj10YihhKSl9ZnVuY3Rpb24geWIoYSl7aWYoIWEpcmV0dXJuITE7dmFyIGI9YS5fdmFsdWVUcmFja2VyO2lmKCFiKXJldHVybiEwO3ZhciBjPWIuZ2V0VmFsdWUoKTt2YXIgZD1cIlwiO2EmJihkPXNiKGEpP2EuY2hlY2tlZD9cInRydWVcIjpcImZhbHNlXCI6YS52YWx1ZSk7YT1kO3JldHVybiBhIT09Yz8oYi5zZXRWYWx1ZShhKSwhMCk6ITF9ZnVuY3Rpb24gemIoYSxiKXt2YXIgYz1iLmNoZWNrZWQ7cmV0dXJuIG4oe30sYix7ZGVmYXVsdENoZWNrZWQ6dm9pZCAwLGRlZmF1bHRWYWx1ZTp2b2lkIDAsdmFsdWU6dm9pZCAwLGNoZWNrZWQ6bnVsbCE9Yz9jOmEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsQ2hlY2tlZH0pfVxuZnVuY3Rpb24gQWIoYSxiKXt2YXIgYz1udWxsPT1iLmRlZmF1bHRWYWx1ZT9cIlwiOmIuZGVmYXVsdFZhbHVlLGQ9bnVsbCE9Yi5jaGVja2VkP2IuY2hlY2tlZDpiLmRlZmF1bHRDaGVja2VkO2M9cmIobnVsbCE9Yi52YWx1ZT9iLnZhbHVlOmMpO2EuX3dyYXBwZXJTdGF0ZT17aW5pdGlhbENoZWNrZWQ6ZCxpbml0aWFsVmFsdWU6Yyxjb250cm9sbGVkOlwiY2hlY2tib3hcIj09PWIudHlwZXx8XCJyYWRpb1wiPT09Yi50eXBlP251bGwhPWIuY2hlY2tlZDpudWxsIT1iLnZhbHVlfX1mdW5jdGlvbiBCYihhLGIpe2I9Yi5jaGVja2VkO251bGwhPWImJlhhKGEsXCJjaGVja2VkXCIsYiwhMSl9XG5mdW5jdGlvbiBDYihhLGIpe0JiKGEsYik7dmFyIGM9cmIoYi52YWx1ZSksZD1iLnR5cGU7aWYobnVsbCE9YylpZihcIm51bWJlclwiPT09ZCl7aWYoMD09PWMmJlwiXCI9PT1hLnZhbHVlfHxhLnZhbHVlIT1jKWEudmFsdWU9XCJcIitjfWVsc2UgYS52YWx1ZSE9PVwiXCIrYyYmKGEudmFsdWU9XCJcIitjKTtlbHNlIGlmKFwic3VibWl0XCI9PT1kfHxcInJlc2V0XCI9PT1kKXthLnJlbW92ZUF0dHJpYnV0ZShcInZhbHVlXCIpO3JldHVybn1iLmhhc093blByb3BlcnR5KFwidmFsdWVcIik/RGIoYSxiLnR5cGUsYyk6Yi5oYXNPd25Qcm9wZXJ0eShcImRlZmF1bHRWYWx1ZVwiKSYmRGIoYSxiLnR5cGUscmIoYi5kZWZhdWx0VmFsdWUpKTtudWxsPT1iLmNoZWNrZWQmJm51bGwhPWIuZGVmYXVsdENoZWNrZWQmJihhLmRlZmF1bHRDaGVja2VkPSEhYi5kZWZhdWx0Q2hlY2tlZCl9XG5mdW5jdGlvbiBFYihhLGIsYyl7aWYoYi5oYXNPd25Qcm9wZXJ0eShcInZhbHVlXCIpfHxiLmhhc093blByb3BlcnR5KFwiZGVmYXVsdFZhbHVlXCIpKXt2YXIgZD1iLnR5cGU7aWYoIShcInN1Ym1pdFwiIT09ZCYmXCJyZXNldFwiIT09ZHx8dm9pZCAwIT09Yi52YWx1ZSYmbnVsbCE9PWIudmFsdWUpKXJldHVybjtiPVwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZTtjfHxiPT09YS52YWx1ZXx8KGEudmFsdWU9Yik7YS5kZWZhdWx0VmFsdWU9Yn1jPWEubmFtZTtcIlwiIT09YyYmKGEubmFtZT1cIlwiKTthLmRlZmF1bHRDaGVja2VkPSEhYS5fd3JhcHBlclN0YXRlLmluaXRpYWxDaGVja2VkO1wiXCIhPT1jJiYoYS5uYW1lPWMpfVxuZnVuY3Rpb24gRGIoYSxiLGMpe2lmKFwibnVtYmVyXCIhPT1ifHxhLm93bmVyRG9jdW1lbnQuYWN0aXZlRWxlbWVudCE9PWEpbnVsbD09Yz9hLmRlZmF1bHRWYWx1ZT1cIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWU6YS5kZWZhdWx0VmFsdWUhPT1cIlwiK2MmJihhLmRlZmF1bHRWYWx1ZT1cIlwiK2MpfWZ1bmN0aW9uIEZiKGEpe3ZhciBiPVwiXCI7YWEuQ2hpbGRyZW4uZm9yRWFjaChhLGZ1bmN0aW9uKGEpe251bGwhPWEmJihiKz1hKX0pO3JldHVybiBifWZ1bmN0aW9uIEdiKGEsYil7YT1uKHtjaGlsZHJlbjp2b2lkIDB9LGIpO2lmKGI9RmIoYi5jaGlsZHJlbikpYS5jaGlsZHJlbj1iO3JldHVybiBhfVxuZnVuY3Rpb24gSGIoYSxiLGMsZCl7YT1hLm9wdGlvbnM7aWYoYil7Yj17fTtmb3IodmFyIGU9MDtlPGMubGVuZ3RoO2UrKyliW1wiJFwiK2NbZV1dPSEwO2ZvcihjPTA7YzxhLmxlbmd0aDtjKyspZT1iLmhhc093blByb3BlcnR5KFwiJFwiK2FbY10udmFsdWUpLGFbY10uc2VsZWN0ZWQhPT1lJiYoYVtjXS5zZWxlY3RlZD1lKSxlJiZkJiYoYVtjXS5kZWZhdWx0U2VsZWN0ZWQ9ITApfWVsc2V7Yz1cIlwiK3JiKGMpO2I9bnVsbDtmb3IoZT0wO2U8YS5sZW5ndGg7ZSsrKXtpZihhW2VdLnZhbHVlPT09Yyl7YVtlXS5zZWxlY3RlZD0hMDtkJiYoYVtlXS5kZWZhdWx0U2VsZWN0ZWQ9ITApO3JldHVybn1udWxsIT09Ynx8YVtlXS5kaXNhYmxlZHx8KGI9YVtlXSl9bnVsbCE9PWImJihiLnNlbGVjdGVkPSEwKX19XG5mdW5jdGlvbiBJYihhLGIpe2lmKG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpdGhyb3cgRXJyb3IodSg5MSkpO3JldHVybiBuKHt9LGIse3ZhbHVlOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLGNoaWxkcmVuOlwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZX0pfWZ1bmN0aW9uIEpiKGEsYil7dmFyIGM9Yi52YWx1ZTtpZihudWxsPT1jKXtjPWIuY2hpbGRyZW47Yj1iLmRlZmF1bHRWYWx1ZTtpZihudWxsIT1jKXtpZihudWxsIT1iKXRocm93IEVycm9yKHUoOTIpKTtpZihBcnJheS5pc0FycmF5KGMpKXtpZighKDE+PWMubGVuZ3RoKSl0aHJvdyBFcnJvcih1KDkzKSk7Yz1jWzBdfWI9Y31udWxsPT1iJiYoYj1cIlwiKTtjPWJ9YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsVmFsdWU6cmIoYyl9fVxuZnVuY3Rpb24gS2IoYSxiKXt2YXIgYz1yYihiLnZhbHVlKSxkPXJiKGIuZGVmYXVsdFZhbHVlKTtudWxsIT1jJiYoYz1cIlwiK2MsYyE9PWEudmFsdWUmJihhLnZhbHVlPWMpLG51bGw9PWIuZGVmYXVsdFZhbHVlJiZhLmRlZmF1bHRWYWx1ZSE9PWMmJihhLmRlZmF1bHRWYWx1ZT1jKSk7bnVsbCE9ZCYmKGEuZGVmYXVsdFZhbHVlPVwiXCIrZCl9ZnVuY3Rpb24gTGIoYSl7dmFyIGI9YS50ZXh0Q29udGVudDtiPT09YS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZSYmXCJcIiE9PWImJm51bGwhPT1iJiYoYS52YWx1ZT1iKX12YXIgTWI9e2h0bWw6XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCIsbWF0aG1sOlwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiLHN2ZzpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCJ9O1xuZnVuY3Rpb24gTmIoYSl7c3dpdGNoKGEpe2Nhc2UgXCJzdmdcIjpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI7Y2FzZSBcIm1hdGhcIjpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzE5OTgvTWF0aC9NYXRoTUxcIjtkZWZhdWx0OnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwifX1mdW5jdGlvbiBPYihhLGIpe3JldHVybiBudWxsPT1hfHxcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIj09PWE/TmIoYik6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPT09YSYmXCJmb3JlaWduT2JqZWN0XCI9PT1iP1wiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiOmF9XG52YXIgUGIsUWI9ZnVuY3Rpb24oYSl7cmV0dXJuXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBNU0FwcCYmTVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24/ZnVuY3Rpb24oYixjLGQsZSl7TVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24oZnVuY3Rpb24oKXtyZXR1cm4gYShiLGMsZCxlKX0pfTphfShmdW5jdGlvbihhLGIpe2lmKGEubmFtZXNwYWNlVVJJIT09TWIuc3ZnfHxcImlubmVySFRNTFwiaW4gYSlhLmlubmVySFRNTD1iO2Vsc2V7UGI9UGJ8fGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7UGIuaW5uZXJIVE1MPVwiPHN2Zz5cIitiLnZhbHVlT2YoKS50b1N0cmluZygpK1wiPC9zdmc+XCI7Zm9yKGI9UGIuZmlyc3RDaGlsZDthLmZpcnN0Q2hpbGQ7KWEucmVtb3ZlQ2hpbGQoYS5maXJzdENoaWxkKTtmb3IoO2IuZmlyc3RDaGlsZDspYS5hcHBlbmRDaGlsZChiLmZpcnN0Q2hpbGQpfX0pO1xuZnVuY3Rpb24gUmIoYSxiKXtpZihiKXt2YXIgYz1hLmZpcnN0Q2hpbGQ7aWYoYyYmYz09PWEubGFzdENoaWxkJiYzPT09Yy5ub2RlVHlwZSl7Yy5ub2RlVmFsdWU9YjtyZXR1cm59fWEudGV4dENvbnRlbnQ9Yn1mdW5jdGlvbiBTYihhLGIpe3ZhciBjPXt9O2NbYS50b0xvd2VyQ2FzZSgpXT1iLnRvTG93ZXJDYXNlKCk7Y1tcIldlYmtpdFwiK2FdPVwid2Via2l0XCIrYjtjW1wiTW96XCIrYV09XCJtb3pcIitiO3JldHVybiBjfXZhciBUYj17YW5pbWF0aW9uZW5kOlNiKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25FbmRcIiksYW5pbWF0aW9uaXRlcmF0aW9uOlNiKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25JdGVyYXRpb25cIiksYW5pbWF0aW9uc3RhcnQ6U2IoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvblN0YXJ0XCIpLHRyYW5zaXRpb25lbmQ6U2IoXCJUcmFuc2l0aW9uXCIsXCJUcmFuc2l0aW9uRW5kXCIpfSxVYj17fSxWYj17fTtcbnlhJiYoVmI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKS5zdHlsZSxcIkFuaW1hdGlvbkV2ZW50XCJpbiB3aW5kb3d8fChkZWxldGUgVGIuYW5pbWF0aW9uZW5kLmFuaW1hdGlvbixkZWxldGUgVGIuYW5pbWF0aW9uaXRlcmF0aW9uLmFuaW1hdGlvbixkZWxldGUgVGIuYW5pbWF0aW9uc3RhcnQuYW5pbWF0aW9uKSxcIlRyYW5zaXRpb25FdmVudFwiaW4gd2luZG93fHxkZWxldGUgVGIudHJhbnNpdGlvbmVuZC50cmFuc2l0aW9uKTtmdW5jdGlvbiBXYihhKXtpZihVYlthXSlyZXR1cm4gVWJbYV07aWYoIVRiW2FdKXJldHVybiBhO3ZhciBiPVRiW2FdLGM7Zm9yKGMgaW4gYilpZihiLmhhc093blByb3BlcnR5KGMpJiZjIGluIFZiKXJldHVybiBVYlthXT1iW2NdO3JldHVybiBhfVxudmFyIFhiPVdiKFwiYW5pbWF0aW9uZW5kXCIpLFliPVdiKFwiYW5pbWF0aW9uaXRlcmF0aW9uXCIpLFpiPVdiKFwiYW5pbWF0aW9uc3RhcnRcIiksJGI9V2IoXCJ0cmFuc2l0aW9uZW5kXCIpLGFjPVwiYWJvcnQgY2FucGxheSBjYW5wbGF5dGhyb3VnaCBkdXJhdGlvbmNoYW5nZSBlbXB0aWVkIGVuY3J5cHRlZCBlbmRlZCBlcnJvciBsb2FkZWRkYXRhIGxvYWRlZG1ldGFkYXRhIGxvYWRzdGFydCBwYXVzZSBwbGF5IHBsYXlpbmcgcHJvZ3Jlc3MgcmF0ZWNoYW5nZSBzZWVrZWQgc2Vla2luZyBzdGFsbGVkIHN1c3BlbmQgdGltZXVwZGF0ZSB2b2x1bWVjaGFuZ2Ugd2FpdGluZ1wiLnNwbGl0KFwiIFwiKSxiYz1uZXcgKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBXZWFrTWFwP1dlYWtNYXA6TWFwKTtmdW5jdGlvbiBjYyhhKXt2YXIgYj1iYy5nZXQoYSk7dm9pZCAwPT09YiYmKGI9bmV3IE1hcCxiYy5zZXQoYSxiKSk7cmV0dXJuIGJ9XG5mdW5jdGlvbiBkYyhhKXt2YXIgYj1hLGM9YTtpZihhLmFsdGVybmF0ZSlmb3IoO2IucmV0dXJuOyliPWIucmV0dXJuO2Vsc2V7YT1iO2RvIGI9YSwwIT09KGIuZWZmZWN0VGFnJjEwMjYpJiYoYz1iLnJldHVybiksYT1iLnJldHVybjt3aGlsZShhKX1yZXR1cm4gMz09PWIudGFnP2M6bnVsbH1mdW5jdGlvbiBlYyhhKXtpZigxMz09PWEudGFnKXt2YXIgYj1hLm1lbW9pemVkU3RhdGU7bnVsbD09PWImJihhPWEuYWx0ZXJuYXRlLG51bGwhPT1hJiYoYj1hLm1lbW9pemVkU3RhdGUpKTtpZihudWxsIT09YilyZXR1cm4gYi5kZWh5ZHJhdGVkfXJldHVybiBudWxsfWZ1bmN0aW9uIGZjKGEpe2lmKGRjKGEpIT09YSl0aHJvdyBFcnJvcih1KDE4OCkpO31cbmZ1bmN0aW9uIGdjKGEpe3ZhciBiPWEuYWx0ZXJuYXRlO2lmKCFiKXtiPWRjKGEpO2lmKG51bGw9PT1iKXRocm93IEVycm9yKHUoMTg4KSk7cmV0dXJuIGIhPT1hP251bGw6YX1mb3IodmFyIGM9YSxkPWI7Oyl7dmFyIGU9Yy5yZXR1cm47aWYobnVsbD09PWUpYnJlYWs7dmFyIGY9ZS5hbHRlcm5hdGU7aWYobnVsbD09PWYpe2Q9ZS5yZXR1cm47aWYobnVsbCE9PWQpe2M9ZDtjb250aW51ZX1icmVha31pZihlLmNoaWxkPT09Zi5jaGlsZCl7Zm9yKGY9ZS5jaGlsZDtmOyl7aWYoZj09PWMpcmV0dXJuIGZjKGUpLGE7aWYoZj09PWQpcmV0dXJuIGZjKGUpLGI7Zj1mLnNpYmxpbmd9dGhyb3cgRXJyb3IodSgxODgpKTt9aWYoYy5yZXR1cm4hPT1kLnJldHVybiljPWUsZD1mO2Vsc2V7Zm9yKHZhciBnPSExLGg9ZS5jaGlsZDtoOyl7aWYoaD09PWMpe2c9ITA7Yz1lO2Q9ZjticmVha31pZihoPT09ZCl7Zz0hMDtkPWU7Yz1mO2JyZWFrfWg9aC5zaWJsaW5nfWlmKCFnKXtmb3IoaD1mLmNoaWxkO2g7KXtpZihoPT09XG5jKXtnPSEwO2M9ZjtkPWU7YnJlYWt9aWYoaD09PWQpe2c9ITA7ZD1mO2M9ZTticmVha31oPWguc2libGluZ31pZighZyl0aHJvdyBFcnJvcih1KDE4OSkpO319aWYoYy5hbHRlcm5hdGUhPT1kKXRocm93IEVycm9yKHUoMTkwKSk7fWlmKDMhPT1jLnRhZyl0aHJvdyBFcnJvcih1KDE4OCkpO3JldHVybiBjLnN0YXRlTm9kZS5jdXJyZW50PT09Yz9hOmJ9ZnVuY3Rpb24gaGMoYSl7YT1nYyhhKTtpZighYSlyZXR1cm4gbnVsbDtmb3IodmFyIGI9YTs7KXtpZig1PT09Yi50YWd8fDY9PT1iLnRhZylyZXR1cm4gYjtpZihiLmNoaWxkKWIuY2hpbGQucmV0dXJuPWIsYj1iLmNoaWxkO2Vsc2V7aWYoYj09PWEpYnJlYWs7Zm9yKDshYi5zaWJsaW5nOyl7aWYoIWIucmV0dXJufHxiLnJldHVybj09PWEpcmV0dXJuIG51bGw7Yj1iLnJldHVybn1iLnNpYmxpbmcucmV0dXJuPWIucmV0dXJuO2I9Yi5zaWJsaW5nfX1yZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIGljKGEsYil7aWYobnVsbD09Yil0aHJvdyBFcnJvcih1KDMwKSk7aWYobnVsbD09YSlyZXR1cm4gYjtpZihBcnJheS5pc0FycmF5KGEpKXtpZihBcnJheS5pc0FycmF5KGIpKXJldHVybiBhLnB1c2guYXBwbHkoYSxiKSxhO2EucHVzaChiKTtyZXR1cm4gYX1yZXR1cm4gQXJyYXkuaXNBcnJheShiKT9bYV0uY29uY2F0KGIpOlthLGJdfWZ1bmN0aW9uIGpjKGEsYixjKXtBcnJheS5pc0FycmF5KGEpP2EuZm9yRWFjaChiLGMpOmEmJmIuY2FsbChjLGEpfXZhciBrYz1udWxsO1xuZnVuY3Rpb24gbGMoYSl7aWYoYSl7dmFyIGI9YS5fZGlzcGF0Y2hMaXN0ZW5lcnMsYz1hLl9kaXNwYXRjaEluc3RhbmNlcztpZihBcnJheS5pc0FycmF5KGIpKWZvcih2YXIgZD0wO2Q8Yi5sZW5ndGgmJiFhLmlzUHJvcGFnYXRpb25TdG9wcGVkKCk7ZCsrKW9hKGEsYltkXSxjW2RdKTtlbHNlIGImJm9hKGEsYixjKTthLl9kaXNwYXRjaExpc3RlbmVycz1udWxsO2EuX2Rpc3BhdGNoSW5zdGFuY2VzPW51bGw7YS5pc1BlcnNpc3RlbnQoKXx8YS5jb25zdHJ1Y3Rvci5yZWxlYXNlKGEpfX1mdW5jdGlvbiBtYyhhKXtudWxsIT09YSYmKGtjPWljKGtjLGEpKTthPWtjO2tjPW51bGw7aWYoYSl7amMoYSxsYyk7aWYoa2MpdGhyb3cgRXJyb3IodSg5NSkpO2lmKGZhKXRocm93IGE9aGEsZmE9ITEsaGE9bnVsbCxhO319XG5mdW5jdGlvbiBuYyhhKXthPWEudGFyZ2V0fHxhLnNyY0VsZW1lbnR8fHdpbmRvdzthLmNvcnJlc3BvbmRpbmdVc2VFbGVtZW50JiYoYT1hLmNvcnJlc3BvbmRpbmdVc2VFbGVtZW50KTtyZXR1cm4gMz09PWEubm9kZVR5cGU/YS5wYXJlbnROb2RlOmF9ZnVuY3Rpb24gb2MoYSl7aWYoIXlhKXJldHVybiExO2E9XCJvblwiK2E7dmFyIGI9YSBpbiBkb2N1bWVudDtifHwoYj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLGIuc2V0QXR0cmlidXRlKGEsXCJyZXR1cm47XCIpLGI9XCJmdW5jdGlvblwiPT09dHlwZW9mIGJbYV0pO3JldHVybiBifXZhciBwYz1bXTtmdW5jdGlvbiBxYyhhKXthLnRvcExldmVsVHlwZT1udWxsO2EubmF0aXZlRXZlbnQ9bnVsbDthLnRhcmdldEluc3Q9bnVsbDthLmFuY2VzdG9ycy5sZW5ndGg9MDsxMD5wYy5sZW5ndGgmJnBjLnB1c2goYSl9XG5mdW5jdGlvbiByYyhhLGIsYyxkKXtpZihwYy5sZW5ndGgpe3ZhciBlPXBjLnBvcCgpO2UudG9wTGV2ZWxUeXBlPWE7ZS5ldmVudFN5c3RlbUZsYWdzPWQ7ZS5uYXRpdmVFdmVudD1iO2UudGFyZ2V0SW5zdD1jO3JldHVybiBlfXJldHVybnt0b3BMZXZlbFR5cGU6YSxldmVudFN5c3RlbUZsYWdzOmQsbmF0aXZlRXZlbnQ6Yix0YXJnZXRJbnN0OmMsYW5jZXN0b3JzOltdfX1cbmZ1bmN0aW9uIHNjKGEpe3ZhciBiPWEudGFyZ2V0SW5zdCxjPWI7ZG97aWYoIWMpe2EuYW5jZXN0b3JzLnB1c2goYyk7YnJlYWt9dmFyIGQ9YztpZigzPT09ZC50YWcpZD1kLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2Vsc2V7Zm9yKDtkLnJldHVybjspZD1kLnJldHVybjtkPTMhPT1kLnRhZz9udWxsOmQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm99aWYoIWQpYnJlYWs7Yj1jLnRhZzs1IT09YiYmNiE9PWJ8fGEuYW5jZXN0b3JzLnB1c2goYyk7Yz10YyhkKX13aGlsZShjKTtmb3IoYz0wO2M8YS5hbmNlc3RvcnMubGVuZ3RoO2MrKyl7Yj1hLmFuY2VzdG9yc1tjXTt2YXIgZT1uYyhhLm5hdGl2ZUV2ZW50KTtkPWEudG9wTGV2ZWxUeXBlO3ZhciBmPWEubmF0aXZlRXZlbnQsZz1hLmV2ZW50U3lzdGVtRmxhZ3M7MD09PWMmJihnfD02NCk7Zm9yKHZhciBoPW51bGwsaz0wO2s8c2EubGVuZ3RoO2srKyl7dmFyIGw9c2Fba107bCYmKGw9bC5leHRyYWN0RXZlbnRzKGQsYixmLGUsZykpJiYoaD1cbmljKGgsbCkpfW1jKGgpfX1mdW5jdGlvbiB1YyhhLGIsYyl7aWYoIWMuaGFzKGEpKXtzd2l0Y2goYSl7Y2FzZSBcInNjcm9sbFwiOnZjKGIsXCJzY3JvbGxcIiwhMCk7YnJlYWs7Y2FzZSBcImZvY3VzXCI6Y2FzZSBcImJsdXJcIjp2YyhiLFwiZm9jdXNcIiwhMCk7dmMoYixcImJsdXJcIiwhMCk7Yy5zZXQoXCJibHVyXCIsbnVsbCk7Yy5zZXQoXCJmb2N1c1wiLG51bGwpO2JyZWFrO2Nhc2UgXCJjYW5jZWxcIjpjYXNlIFwiY2xvc2VcIjpvYyhhKSYmdmMoYixhLCEwKTticmVhaztjYXNlIFwiaW52YWxpZFwiOmNhc2UgXCJzdWJtaXRcIjpjYXNlIFwicmVzZXRcIjpicmVhaztkZWZhdWx0Oi0xPT09YWMuaW5kZXhPZihhKSYmRihhLGIpfWMuc2V0KGEsbnVsbCl9fVxudmFyIHdjLHhjLHljLHpjPSExLEFjPVtdLEJjPW51bGwsQ2M9bnVsbCxEYz1udWxsLEVjPW5ldyBNYXAsRmM9bmV3IE1hcCxHYz1bXSxIYz1cIm1vdXNlZG93biBtb3VzZXVwIHRvdWNoY2FuY2VsIHRvdWNoZW5kIHRvdWNoc3RhcnQgYXV4Y2xpY2sgZGJsY2xpY2sgcG9pbnRlcmNhbmNlbCBwb2ludGVyZG93biBwb2ludGVydXAgZHJhZ2VuZCBkcmFnc3RhcnQgZHJvcCBjb21wb3NpdGlvbmVuZCBjb21wb3NpdGlvbnN0YXJ0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgaW5wdXQgdGV4dElucHV0IGNsb3NlIGNhbmNlbCBjb3B5IGN1dCBwYXN0ZSBjbGljayBjaGFuZ2UgY29udGV4dG1lbnUgcmVzZXQgc3VibWl0XCIuc3BsaXQoXCIgXCIpLEljPVwiZm9jdXMgYmx1ciBkcmFnZW50ZXIgZHJhZ2xlYXZlIG1vdXNlb3ZlciBtb3VzZW91dCBwb2ludGVyb3ZlciBwb2ludGVyb3V0IGdvdHBvaW50ZXJjYXB0dXJlIGxvc3Rwb2ludGVyY2FwdHVyZVwiLnNwbGl0KFwiIFwiKTtcbmZ1bmN0aW9uIEpjKGEsYil7dmFyIGM9Y2MoYik7SGMuZm9yRWFjaChmdW5jdGlvbihhKXt1YyhhLGIsYyl9KTtJYy5mb3JFYWNoKGZ1bmN0aW9uKGEpe3VjKGEsYixjKX0pfWZ1bmN0aW9uIEtjKGEsYixjLGQsZSl7cmV0dXJue2Jsb2NrZWRPbjphLHRvcExldmVsVHlwZTpiLGV2ZW50U3lzdGVtRmxhZ3M6Y3wzMixuYXRpdmVFdmVudDplLGNvbnRhaW5lcjpkfX1cbmZ1bmN0aW9uIExjKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJmb2N1c1wiOmNhc2UgXCJibHVyXCI6QmM9bnVsbDticmVhaztjYXNlIFwiZHJhZ2VudGVyXCI6Y2FzZSBcImRyYWdsZWF2ZVwiOkNjPW51bGw7YnJlYWs7Y2FzZSBcIm1vdXNlb3ZlclwiOmNhc2UgXCJtb3VzZW91dFwiOkRjPW51bGw7YnJlYWs7Y2FzZSBcInBvaW50ZXJvdmVyXCI6Y2FzZSBcInBvaW50ZXJvdXRcIjpFYy5kZWxldGUoYi5wb2ludGVySWQpO2JyZWFrO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJsb3N0cG9pbnRlcmNhcHR1cmVcIjpGYy5kZWxldGUoYi5wb2ludGVySWQpfX1mdW5jdGlvbiBNYyhhLGIsYyxkLGUsZil7aWYobnVsbD09PWF8fGEubmF0aXZlRXZlbnQhPT1mKXJldHVybiBhPUtjKGIsYyxkLGUsZiksbnVsbCE9PWImJihiPU5jKGIpLG51bGwhPT1iJiZ4YyhiKSksYTthLmV2ZW50U3lzdGVtRmxhZ3N8PWQ7cmV0dXJuIGF9XG5mdW5jdGlvbiBPYyhhLGIsYyxkLGUpe3N3aXRjaChiKXtjYXNlIFwiZm9jdXNcIjpyZXR1cm4gQmM9TWMoQmMsYSxiLGMsZCxlKSwhMDtjYXNlIFwiZHJhZ2VudGVyXCI6cmV0dXJuIENjPU1jKENjLGEsYixjLGQsZSksITA7Y2FzZSBcIm1vdXNlb3ZlclwiOnJldHVybiBEYz1NYyhEYyxhLGIsYyxkLGUpLCEwO2Nhc2UgXCJwb2ludGVyb3ZlclwiOnZhciBmPWUucG9pbnRlcklkO0VjLnNldChmLE1jKEVjLmdldChmKXx8bnVsbCxhLGIsYyxkLGUpKTtyZXR1cm4hMDtjYXNlIFwiZ290cG9pbnRlcmNhcHR1cmVcIjpyZXR1cm4gZj1lLnBvaW50ZXJJZCxGYy5zZXQoZixNYyhGYy5nZXQoZil8fG51bGwsYSxiLGMsZCxlKSksITB9cmV0dXJuITF9XG5mdW5jdGlvbiBQYyhhKXt2YXIgYj10YyhhLnRhcmdldCk7aWYobnVsbCE9PWIpe3ZhciBjPWRjKGIpO2lmKG51bGwhPT1jKWlmKGI9Yy50YWcsMTM9PT1iKXtpZihiPWVjKGMpLG51bGwhPT1iKXthLmJsb2NrZWRPbj1iO3IudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5KGEucHJpb3JpdHksZnVuY3Rpb24oKXt5YyhjKX0pO3JldHVybn19ZWxzZSBpZigzPT09YiYmYy5zdGF0ZU5vZGUuaHlkcmF0ZSl7YS5ibG9ja2VkT249Mz09PWMudGFnP2Muc3RhdGVOb2RlLmNvbnRhaW5lckluZm86bnVsbDtyZXR1cm59fWEuYmxvY2tlZE9uPW51bGx9ZnVuY3Rpb24gUWMoYSl7aWYobnVsbCE9PWEuYmxvY2tlZE9uKXJldHVybiExO3ZhciBiPVJjKGEudG9wTGV2ZWxUeXBlLGEuZXZlbnRTeXN0ZW1GbGFncyxhLmNvbnRhaW5lcixhLm5hdGl2ZUV2ZW50KTtpZihudWxsIT09Yil7dmFyIGM9TmMoYik7bnVsbCE9PWMmJnhjKGMpO2EuYmxvY2tlZE9uPWI7cmV0dXJuITF9cmV0dXJuITB9XG5mdW5jdGlvbiBTYyhhLGIsYyl7UWMoYSkmJmMuZGVsZXRlKGIpfWZ1bmN0aW9uIFRjKCl7Zm9yKHpjPSExOzA8QWMubGVuZ3RoOyl7dmFyIGE9QWNbMF07aWYobnVsbCE9PWEuYmxvY2tlZE9uKXthPU5jKGEuYmxvY2tlZE9uKTtudWxsIT09YSYmd2MoYSk7YnJlYWt9dmFyIGI9UmMoYS50b3BMZXZlbFR5cGUsYS5ldmVudFN5c3RlbUZsYWdzLGEuY29udGFpbmVyLGEubmF0aXZlRXZlbnQpO251bGwhPT1iP2EuYmxvY2tlZE9uPWI6QWMuc2hpZnQoKX1udWxsIT09QmMmJlFjKEJjKSYmKEJjPW51bGwpO251bGwhPT1DYyYmUWMoQ2MpJiYoQ2M9bnVsbCk7bnVsbCE9PURjJiZRYyhEYykmJihEYz1udWxsKTtFYy5mb3JFYWNoKFNjKTtGYy5mb3JFYWNoKFNjKX1mdW5jdGlvbiBVYyhhLGIpe2EuYmxvY2tlZE9uPT09YiYmKGEuYmxvY2tlZE9uPW51bGwsemN8fCh6Yz0hMCxyLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2soci51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSxUYykpKX1cbmZ1bmN0aW9uIFZjKGEpe2Z1bmN0aW9uIGIoYil7cmV0dXJuIFVjKGIsYSl9aWYoMDxBYy5sZW5ndGgpe1VjKEFjWzBdLGEpO2Zvcih2YXIgYz0xO2M8QWMubGVuZ3RoO2MrKyl7dmFyIGQ9QWNbY107ZC5ibG9ja2VkT249PT1hJiYoZC5ibG9ja2VkT249bnVsbCl9fW51bGwhPT1CYyYmVWMoQmMsYSk7bnVsbCE9PUNjJiZVYyhDYyxhKTtudWxsIT09RGMmJlVjKERjLGEpO0VjLmZvckVhY2goYik7RmMuZm9yRWFjaChiKTtmb3IoYz0wO2M8R2MubGVuZ3RoO2MrKylkPUdjW2NdLGQuYmxvY2tlZE9uPT09YSYmKGQuYmxvY2tlZE9uPW51bGwpO2Zvcig7MDxHYy5sZW5ndGgmJihjPUdjWzBdLG51bGw9PT1jLmJsb2NrZWRPbik7KVBjKGMpLG51bGw9PT1jLmJsb2NrZWRPbiYmR2Muc2hpZnQoKX1cbnZhciBXYz17fSxZYz1uZXcgTWFwLFpjPW5ldyBNYXAsJGM9W1wiYWJvcnRcIixcImFib3J0XCIsWGIsXCJhbmltYXRpb25FbmRcIixZYixcImFuaW1hdGlvbkl0ZXJhdGlvblwiLFpiLFwiYW5pbWF0aW9uU3RhcnRcIixcImNhbnBsYXlcIixcImNhblBsYXlcIixcImNhbnBsYXl0aHJvdWdoXCIsXCJjYW5QbGF5VGhyb3VnaFwiLFwiZHVyYXRpb25jaGFuZ2VcIixcImR1cmF0aW9uQ2hhbmdlXCIsXCJlbXB0aWVkXCIsXCJlbXB0aWVkXCIsXCJlbmNyeXB0ZWRcIixcImVuY3J5cHRlZFwiLFwiZW5kZWRcIixcImVuZGVkXCIsXCJlcnJvclwiLFwiZXJyb3JcIixcImdvdHBvaW50ZXJjYXB0dXJlXCIsXCJnb3RQb2ludGVyQ2FwdHVyZVwiLFwibG9hZFwiLFwibG9hZFwiLFwibG9hZGVkZGF0YVwiLFwibG9hZGVkRGF0YVwiLFwibG9hZGVkbWV0YWRhdGFcIixcImxvYWRlZE1ldGFkYXRhXCIsXCJsb2Fkc3RhcnRcIixcImxvYWRTdGFydFwiLFwibG9zdHBvaW50ZXJjYXB0dXJlXCIsXCJsb3N0UG9pbnRlckNhcHR1cmVcIixcInBsYXlpbmdcIixcInBsYXlpbmdcIixcInByb2dyZXNzXCIsXCJwcm9ncmVzc1wiLFwic2Vla2luZ1wiLFxuXCJzZWVraW5nXCIsXCJzdGFsbGVkXCIsXCJzdGFsbGVkXCIsXCJzdXNwZW5kXCIsXCJzdXNwZW5kXCIsXCJ0aW1ldXBkYXRlXCIsXCJ0aW1lVXBkYXRlXCIsJGIsXCJ0cmFuc2l0aW9uRW5kXCIsXCJ3YWl0aW5nXCIsXCJ3YWl0aW5nXCJdO2Z1bmN0aW9uIGFkKGEsYil7Zm9yKHZhciBjPTA7YzxhLmxlbmd0aDtjKz0yKXt2YXIgZD1hW2NdLGU9YVtjKzFdLGY9XCJvblwiKyhlWzBdLnRvVXBwZXJDYXNlKCkrZS5zbGljZSgxKSk7Zj17cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6ZixjYXB0dXJlZDpmK1wiQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6W2RdLGV2ZW50UHJpb3JpdHk6Yn07WmMuc2V0KGQsYik7WWMuc2V0KGQsZik7V2NbZV09Zn19XG5hZChcImJsdXIgYmx1ciBjYW5jZWwgY2FuY2VsIGNsaWNrIGNsaWNrIGNsb3NlIGNsb3NlIGNvbnRleHRtZW51IGNvbnRleHRNZW51IGNvcHkgY29weSBjdXQgY3V0IGF1eGNsaWNrIGF1eENsaWNrIGRibGNsaWNrIGRvdWJsZUNsaWNrIGRyYWdlbmQgZHJhZ0VuZCBkcmFnc3RhcnQgZHJhZ1N0YXJ0IGRyb3AgZHJvcCBmb2N1cyBmb2N1cyBpbnB1dCBpbnB1dCBpbnZhbGlkIGludmFsaWQga2V5ZG93biBrZXlEb3duIGtleXByZXNzIGtleVByZXNzIGtleXVwIGtleVVwIG1vdXNlZG93biBtb3VzZURvd24gbW91c2V1cCBtb3VzZVVwIHBhc3RlIHBhc3RlIHBhdXNlIHBhdXNlIHBsYXkgcGxheSBwb2ludGVyY2FuY2VsIHBvaW50ZXJDYW5jZWwgcG9pbnRlcmRvd24gcG9pbnRlckRvd24gcG9pbnRlcnVwIHBvaW50ZXJVcCByYXRlY2hhbmdlIHJhdGVDaGFuZ2UgcmVzZXQgcmVzZXQgc2Vla2VkIHNlZWtlZCBzdWJtaXQgc3VibWl0IHRvdWNoY2FuY2VsIHRvdWNoQ2FuY2VsIHRvdWNoZW5kIHRvdWNoRW5kIHRvdWNoc3RhcnQgdG91Y2hTdGFydCB2b2x1bWVjaGFuZ2Ugdm9sdW1lQ2hhbmdlXCIuc3BsaXQoXCIgXCIpLDApO1xuYWQoXCJkcmFnIGRyYWcgZHJhZ2VudGVyIGRyYWdFbnRlciBkcmFnZXhpdCBkcmFnRXhpdCBkcmFnbGVhdmUgZHJhZ0xlYXZlIGRyYWdvdmVyIGRyYWdPdmVyIG1vdXNlbW92ZSBtb3VzZU1vdmUgbW91c2VvdXQgbW91c2VPdXQgbW91c2VvdmVyIG1vdXNlT3ZlciBwb2ludGVybW92ZSBwb2ludGVyTW92ZSBwb2ludGVyb3V0IHBvaW50ZXJPdXQgcG9pbnRlcm92ZXIgcG9pbnRlck92ZXIgc2Nyb2xsIHNjcm9sbCB0b2dnbGUgdG9nZ2xlIHRvdWNobW92ZSB0b3VjaE1vdmUgd2hlZWwgd2hlZWxcIi5zcGxpdChcIiBcIiksMSk7YWQoJGMsMik7Zm9yKHZhciBiZD1cImNoYW5nZSBzZWxlY3Rpb25jaGFuZ2UgdGV4dElucHV0IGNvbXBvc2l0aW9uc3RhcnQgY29tcG9zaXRpb25lbmQgY29tcG9zaXRpb251cGRhdGVcIi5zcGxpdChcIiBcIiksY2Q9MDtjZDxiZC5sZW5ndGg7Y2QrKylaYy5zZXQoYmRbY2RdLDApO1xudmFyIGRkPXIudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHksZWQ9ci51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHksZmQ9ITA7ZnVuY3Rpb24gRihhLGIpe3ZjKGIsYSwhMSl9ZnVuY3Rpb24gdmMoYSxiLGMpe3ZhciBkPVpjLmdldChiKTtzd2l0Y2godm9pZCAwPT09ZD8yOmQpe2Nhc2UgMDpkPWdkLmJpbmQobnVsbCxiLDEsYSk7YnJlYWs7Y2FzZSAxOmQ9aGQuYmluZChudWxsLGIsMSxhKTticmVhaztkZWZhdWx0OmQ9aWQuYmluZChudWxsLGIsMSxhKX1jP2EuYWRkRXZlbnRMaXN0ZW5lcihiLGQsITApOmEuYWRkRXZlbnRMaXN0ZW5lcihiLGQsITEpfWZ1bmN0aW9uIGdkKGEsYixjLGQpe0phfHxIYSgpO3ZhciBlPWlkLGY9SmE7SmE9ITA7dHJ5e0dhKGUsYSxiLGMsZCl9ZmluYWxseXsoSmE9Zil8fExhKCl9fWZ1bmN0aW9uIGhkKGEsYixjLGQpe2VkKGRkLGlkLmJpbmQobnVsbCxhLGIsYyxkKSl9XG5mdW5jdGlvbiBpZChhLGIsYyxkKXtpZihmZClpZigwPEFjLmxlbmd0aCYmLTE8SGMuaW5kZXhPZihhKSlhPUtjKG51bGwsYSxiLGMsZCksQWMucHVzaChhKTtlbHNle3ZhciBlPVJjKGEsYixjLGQpO2lmKG51bGw9PT1lKUxjKGEsZCk7ZWxzZSBpZigtMTxIYy5pbmRleE9mKGEpKWE9S2MoZSxhLGIsYyxkKSxBYy5wdXNoKGEpO2Vsc2UgaWYoIU9jKGUsYSxiLGMsZCkpe0xjKGEsZCk7YT1yYyhhLGQsbnVsbCxiKTt0cnl7TWEoc2MsYSl9ZmluYWxseXtxYyhhKX19fX1cbmZ1bmN0aW9uIFJjKGEsYixjLGQpe2M9bmMoZCk7Yz10YyhjKTtpZihudWxsIT09Yyl7dmFyIGU9ZGMoYyk7aWYobnVsbD09PWUpYz1udWxsO2Vsc2V7dmFyIGY9ZS50YWc7aWYoMTM9PT1mKXtjPWVjKGUpO2lmKG51bGwhPT1jKXJldHVybiBjO2M9bnVsbH1lbHNlIGlmKDM9PT1mKXtpZihlLnN0YXRlTm9kZS5oeWRyYXRlKXJldHVybiAzPT09ZS50YWc/ZS5zdGF0ZU5vZGUuY29udGFpbmVySW5mbzpudWxsO2M9bnVsbH1lbHNlIGUhPT1jJiYoYz1udWxsKX19YT1yYyhhLGQsYyxiKTt0cnl7TWEoc2MsYSl9ZmluYWxseXtxYyhhKX1yZXR1cm4gbnVsbH1cbnZhciBqZD17YW5pbWF0aW9uSXRlcmF0aW9uQ291bnQ6ITAsYm9yZGVySW1hZ2VPdXRzZXQ6ITAsYm9yZGVySW1hZ2VTbGljZTohMCxib3JkZXJJbWFnZVdpZHRoOiEwLGJveEZsZXg6ITAsYm94RmxleEdyb3VwOiEwLGJveE9yZGluYWxHcm91cDohMCxjb2x1bW5Db3VudDohMCxjb2x1bW5zOiEwLGZsZXg6ITAsZmxleEdyb3c6ITAsZmxleFBvc2l0aXZlOiEwLGZsZXhTaHJpbms6ITAsZmxleE5lZ2F0aXZlOiEwLGZsZXhPcmRlcjohMCxncmlkQXJlYTohMCxncmlkUm93OiEwLGdyaWRSb3dFbmQ6ITAsZ3JpZFJvd1NwYW46ITAsZ3JpZFJvd1N0YXJ0OiEwLGdyaWRDb2x1bW46ITAsZ3JpZENvbHVtbkVuZDohMCxncmlkQ29sdW1uU3BhbjohMCxncmlkQ29sdW1uU3RhcnQ6ITAsZm9udFdlaWdodDohMCxsaW5lQ2xhbXA6ITAsbGluZUhlaWdodDohMCxvcGFjaXR5OiEwLG9yZGVyOiEwLG9ycGhhbnM6ITAsdGFiU2l6ZTohMCx3aWRvd3M6ITAsekluZGV4OiEwLHpvb206ITAsZmlsbE9wYWNpdHk6ITAsXG5mbG9vZE9wYWNpdHk6ITAsc3RvcE9wYWNpdHk6ITAsc3Ryb2tlRGFzaGFycmF5OiEwLHN0cm9rZURhc2hvZmZzZXQ6ITAsc3Ryb2tlTWl0ZXJsaW1pdDohMCxzdHJva2VPcGFjaXR5OiEwLHN0cm9rZVdpZHRoOiEwfSxrZD1bXCJXZWJraXRcIixcIm1zXCIsXCJNb3pcIixcIk9cIl07T2JqZWN0LmtleXMoamQpLmZvckVhY2goZnVuY3Rpb24oYSl7a2QuZm9yRWFjaChmdW5jdGlvbihiKXtiPWIrYS5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSthLnN1YnN0cmluZygxKTtqZFtiXT1qZFthXX0pfSk7ZnVuY3Rpb24gbGQoYSxiLGMpe3JldHVybiBudWxsPT1ifHxcImJvb2xlYW5cIj09PXR5cGVvZiBifHxcIlwiPT09Yj9cIlwiOmN8fFwibnVtYmVyXCIhPT10eXBlb2YgYnx8MD09PWJ8fGpkLmhhc093blByb3BlcnR5KGEpJiZqZFthXT8oXCJcIitiKS50cmltKCk6YitcInB4XCJ9XG5mdW5jdGlvbiBtZChhLGIpe2E9YS5zdHlsZTtmb3IodmFyIGMgaW4gYilpZihiLmhhc093blByb3BlcnR5KGMpKXt2YXIgZD0wPT09Yy5pbmRleE9mKFwiLS1cIiksZT1sZChjLGJbY10sZCk7XCJmbG9hdFwiPT09YyYmKGM9XCJjc3NGbG9hdFwiKTtkP2Euc2V0UHJvcGVydHkoYyxlKTphW2NdPWV9fXZhciBuZD1uKHttZW51aXRlbTohMH0se2FyZWE6ITAsYmFzZTohMCxicjohMCxjb2w6ITAsZW1iZWQ6ITAsaHI6ITAsaW1nOiEwLGlucHV0OiEwLGtleWdlbjohMCxsaW5rOiEwLG1ldGE6ITAscGFyYW06ITAsc291cmNlOiEwLHRyYWNrOiEwLHdicjohMH0pO1xuZnVuY3Rpb24gb2QoYSxiKXtpZihiKXtpZihuZFthXSYmKG51bGwhPWIuY2hpbGRyZW58fG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpKXRocm93IEVycm9yKHUoMTM3LGEsXCJcIikpO2lmKG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpe2lmKG51bGwhPWIuY2hpbGRyZW4pdGhyb3cgRXJyb3IodSg2MCkpO2lmKCEoXCJvYmplY3RcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZcIl9faHRtbFwiaW4gYi5kYW5nZXJvdXNseVNldElubmVySFRNTCkpdGhyb3cgRXJyb3IodSg2MSkpO31pZihudWxsIT1iLnN0eWxlJiZcIm9iamVjdFwiIT09dHlwZW9mIGIuc3R5bGUpdGhyb3cgRXJyb3IodSg2MixcIlwiKSk7fX1cbmZ1bmN0aW9uIHBkKGEsYil7aWYoLTE9PT1hLmluZGV4T2YoXCItXCIpKXJldHVyblwic3RyaW5nXCI9PT10eXBlb2YgYi5pcztzd2l0Y2goYSl7Y2FzZSBcImFubm90YXRpb24teG1sXCI6Y2FzZSBcImNvbG9yLXByb2ZpbGVcIjpjYXNlIFwiZm9udC1mYWNlXCI6Y2FzZSBcImZvbnQtZmFjZS1zcmNcIjpjYXNlIFwiZm9udC1mYWNlLXVyaVwiOmNhc2UgXCJmb250LWZhY2UtZm9ybWF0XCI6Y2FzZSBcImZvbnQtZmFjZS1uYW1lXCI6Y2FzZSBcIm1pc3NpbmctZ2x5cGhcIjpyZXR1cm4hMTtkZWZhdWx0OnJldHVybiEwfX12YXIgcWQ9TWIuaHRtbDtmdW5jdGlvbiByZChhLGIpe2E9OT09PWEubm9kZVR5cGV8fDExPT09YS5ub2RlVHlwZT9hOmEub3duZXJEb2N1bWVudDt2YXIgYz1jYyhhKTtiPXdhW2JdO2Zvcih2YXIgZD0wO2Q8Yi5sZW5ndGg7ZCsrKXVjKGJbZF0sYSxjKX1mdW5jdGlvbiBzZCgpe31cbmZ1bmN0aW9uIHRkKGEpe2E9YXx8KFwidW5kZWZpbmVkXCIhPT10eXBlb2YgZG9jdW1lbnQ/ZG9jdW1lbnQ6dm9pZCAwKTtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIGEpcmV0dXJuIG51bGw7dHJ5e3JldHVybiBhLmFjdGl2ZUVsZW1lbnR8fGEuYm9keX1jYXRjaChiKXtyZXR1cm4gYS5ib2R5fX1mdW5jdGlvbiB1ZChhKXtmb3IoO2EmJmEuZmlyc3RDaGlsZDspYT1hLmZpcnN0Q2hpbGQ7cmV0dXJuIGF9ZnVuY3Rpb24gdmQoYSxiKXt2YXIgYz11ZChhKTthPTA7Zm9yKHZhciBkO2M7KXtpZigzPT09Yy5ub2RlVHlwZSl7ZD1hK2MudGV4dENvbnRlbnQubGVuZ3RoO2lmKGE8PWImJmQ+PWIpcmV0dXJue25vZGU6YyxvZmZzZXQ6Yi1hfTthPWR9YTp7Zm9yKDtjOyl7aWYoYy5uZXh0U2libGluZyl7Yz1jLm5leHRTaWJsaW5nO2JyZWFrIGF9Yz1jLnBhcmVudE5vZGV9Yz12b2lkIDB9Yz11ZChjKX19XG5mdW5jdGlvbiB3ZChhLGIpe3JldHVybiBhJiZiP2E9PT1iPyEwOmEmJjM9PT1hLm5vZGVUeXBlPyExOmImJjM9PT1iLm5vZGVUeXBlP3dkKGEsYi5wYXJlbnROb2RlKTpcImNvbnRhaW5zXCJpbiBhP2EuY29udGFpbnMoYik6YS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbj8hIShhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKGIpJjE2KTohMTohMX1mdW5jdGlvbiB4ZCgpe2Zvcih2YXIgYT13aW5kb3csYj10ZCgpO2IgaW5zdGFuY2VvZiBhLkhUTUxJRnJhbWVFbGVtZW50Oyl7dHJ5e3ZhciBjPVwic3RyaW5nXCI9PT10eXBlb2YgYi5jb250ZW50V2luZG93LmxvY2F0aW9uLmhyZWZ9Y2F0Y2goZCl7Yz0hMX1pZihjKWE9Yi5jb250ZW50V2luZG93O2Vsc2UgYnJlYWs7Yj10ZChhLmRvY3VtZW50KX1yZXR1cm4gYn1cbmZ1bmN0aW9uIHlkKGEpe3ZhciBiPWEmJmEubm9kZU5hbWUmJmEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm4gYiYmKFwiaW5wdXRcIj09PWImJihcInRleHRcIj09PWEudHlwZXx8XCJzZWFyY2hcIj09PWEudHlwZXx8XCJ0ZWxcIj09PWEudHlwZXx8XCJ1cmxcIj09PWEudHlwZXx8XCJwYXNzd29yZFwiPT09YS50eXBlKXx8XCJ0ZXh0YXJlYVwiPT09Ynx8XCJ0cnVlXCI9PT1hLmNvbnRlbnRFZGl0YWJsZSl9dmFyIHpkPVwiJFwiLEFkPVwiLyRcIixCZD1cIiQ/XCIsQ2Q9XCIkIVwiLERkPW51bGwsRWQ9bnVsbDtmdW5jdGlvbiBGZChhLGIpe3N3aXRjaChhKXtjYXNlIFwiYnV0dG9uXCI6Y2FzZSBcImlucHV0XCI6Y2FzZSBcInNlbGVjdFwiOmNhc2UgXCJ0ZXh0YXJlYVwiOnJldHVybiEhYi5hdXRvRm9jdXN9cmV0dXJuITF9XG5mdW5jdGlvbiBHZChhLGIpe3JldHVyblwidGV4dGFyZWFcIj09PWF8fFwib3B0aW9uXCI9PT1hfHxcIm5vc2NyaXB0XCI9PT1hfHxcInN0cmluZ1wiPT09dHlwZW9mIGIuY2hpbGRyZW58fFwibnVtYmVyXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJvYmplY3RcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZudWxsIT09Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmbnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTC5fX2h0bWx9dmFyIEhkPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBzZXRUaW1lb3V0P3NldFRpbWVvdXQ6dm9pZCAwLElkPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBjbGVhclRpbWVvdXQ/Y2xlYXJUaW1lb3V0OnZvaWQgMDtmdW5jdGlvbiBKZChhKXtmb3IoO251bGwhPWE7YT1hLm5leHRTaWJsaW5nKXt2YXIgYj1hLm5vZGVUeXBlO2lmKDE9PT1ifHwzPT09YilicmVha31yZXR1cm4gYX1cbmZ1bmN0aW9uIEtkKGEpe2E9YS5wcmV2aW91c1NpYmxpbmc7Zm9yKHZhciBiPTA7YTspe2lmKDg9PT1hLm5vZGVUeXBlKXt2YXIgYz1hLmRhdGE7aWYoYz09PXpkfHxjPT09Q2R8fGM9PT1CZCl7aWYoMD09PWIpcmV0dXJuIGE7Yi0tfWVsc2UgYz09PUFkJiZiKyt9YT1hLnByZXZpb3VzU2libGluZ31yZXR1cm4gbnVsbH12YXIgTGQ9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc2xpY2UoMiksTWQ9XCJfX3JlYWN0SW50ZXJuYWxJbnN0YW5jZSRcIitMZCxOZD1cIl9fcmVhY3RFdmVudEhhbmRsZXJzJFwiK0xkLE9kPVwiX19yZWFjdENvbnRhaW5lcmUkXCIrTGQ7XG5mdW5jdGlvbiB0YyhhKXt2YXIgYj1hW01kXTtpZihiKXJldHVybiBiO2Zvcih2YXIgYz1hLnBhcmVudE5vZGU7Yzspe2lmKGI9Y1tPZF18fGNbTWRdKXtjPWIuYWx0ZXJuYXRlO2lmKG51bGwhPT1iLmNoaWxkfHxudWxsIT09YyYmbnVsbCE9PWMuY2hpbGQpZm9yKGE9S2QoYSk7bnVsbCE9PWE7KXtpZihjPWFbTWRdKXJldHVybiBjO2E9S2QoYSl9cmV0dXJuIGJ9YT1jO2M9YS5wYXJlbnROb2RlfXJldHVybiBudWxsfWZ1bmN0aW9uIE5jKGEpe2E9YVtNZF18fGFbT2RdO3JldHVybiFhfHw1IT09YS50YWcmJjYhPT1hLnRhZyYmMTMhPT1hLnRhZyYmMyE9PWEudGFnP251bGw6YX1mdW5jdGlvbiBQZChhKXtpZig1PT09YS50YWd8fDY9PT1hLnRhZylyZXR1cm4gYS5zdGF0ZU5vZGU7dGhyb3cgRXJyb3IodSgzMykpO31mdW5jdGlvbiBRZChhKXtyZXR1cm4gYVtOZF18fG51bGx9XG5mdW5jdGlvbiBSZChhKXtkbyBhPWEucmV0dXJuO3doaWxlKGEmJjUhPT1hLnRhZyk7cmV0dXJuIGE/YTpudWxsfVxuZnVuY3Rpb24gU2QoYSxiKXt2YXIgYz1hLnN0YXRlTm9kZTtpZighYylyZXR1cm4gbnVsbDt2YXIgZD1sYShjKTtpZighZClyZXR1cm4gbnVsbDtjPWRbYl07YTpzd2l0Y2goYil7Y2FzZSBcIm9uQ2xpY2tcIjpjYXNlIFwib25DbGlja0NhcHR1cmVcIjpjYXNlIFwib25Eb3VibGVDbGlja1wiOmNhc2UgXCJvbkRvdWJsZUNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlRG93blwiOmNhc2UgXCJvbk1vdXNlRG93bkNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZU1vdmVcIjpjYXNlIFwib25Nb3VzZU1vdmVDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VVcFwiOmNhc2UgXCJvbk1vdXNlVXBDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VFbnRlclwiOihkPSFkLmRpc2FibGVkKXx8KGE9YS50eXBlLGQ9IShcImJ1dHRvblwiPT09YXx8XCJpbnB1dFwiPT09YXx8XCJzZWxlY3RcIj09PWF8fFwidGV4dGFyZWFcIj09PWEpKTthPSFkO2JyZWFrIGE7ZGVmYXVsdDphPSExfWlmKGEpcmV0dXJuIG51bGw7aWYoYyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGMpdGhyb3cgRXJyb3IodSgyMzEsXG5iLHR5cGVvZiBjKSk7cmV0dXJuIGN9ZnVuY3Rpb24gVGQoYSxiLGMpe2lmKGI9U2QoYSxjLmRpc3BhdGNoQ29uZmlnLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzW2JdKSljLl9kaXNwYXRjaExpc3RlbmVycz1pYyhjLl9kaXNwYXRjaExpc3RlbmVycyxiKSxjLl9kaXNwYXRjaEluc3RhbmNlcz1pYyhjLl9kaXNwYXRjaEluc3RhbmNlcyxhKX1mdW5jdGlvbiBVZChhKXtpZihhJiZhLmRpc3BhdGNoQ29uZmlnLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzKXtmb3IodmFyIGI9YS5fdGFyZ2V0SW5zdCxjPVtdO2I7KWMucHVzaChiKSxiPVJkKGIpO2ZvcihiPWMubGVuZ3RoOzA8Yi0tOylUZChjW2JdLFwiY2FwdHVyZWRcIixhKTtmb3IoYj0wO2I8Yy5sZW5ndGg7YisrKVRkKGNbYl0sXCJidWJibGVkXCIsYSl9fVxuZnVuY3Rpb24gVmQoYSxiLGMpe2EmJmMmJmMuZGlzcGF0Y2hDb25maWcucmVnaXN0cmF0aW9uTmFtZSYmKGI9U2QoYSxjLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUpKSYmKGMuX2Rpc3BhdGNoTGlzdGVuZXJzPWljKGMuX2Rpc3BhdGNoTGlzdGVuZXJzLGIpLGMuX2Rpc3BhdGNoSW5zdGFuY2VzPWljKGMuX2Rpc3BhdGNoSW5zdGFuY2VzLGEpKX1mdW5jdGlvbiBXZChhKXthJiZhLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUmJlZkKGEuX3RhcmdldEluc3QsbnVsbCxhKX1mdW5jdGlvbiBYZChhKXtqYyhhLFVkKX12YXIgWWQ9bnVsbCxaZD1udWxsLCRkPW51bGw7XG5mdW5jdGlvbiBhZSgpe2lmKCRkKXJldHVybiAkZDt2YXIgYSxiPVpkLGM9Yi5sZW5ndGgsZCxlPVwidmFsdWVcImluIFlkP1lkLnZhbHVlOllkLnRleHRDb250ZW50LGY9ZS5sZW5ndGg7Zm9yKGE9MDthPGMmJmJbYV09PT1lW2FdO2ErKyk7dmFyIGc9Yy1hO2ZvcihkPTE7ZDw9ZyYmYltjLWRdPT09ZVtmLWRdO2QrKyk7cmV0dXJuICRkPWUuc2xpY2UoYSwxPGQ/MS1kOnZvaWQgMCl9ZnVuY3Rpb24gYmUoKXtyZXR1cm4hMH1mdW5jdGlvbiBjZSgpe3JldHVybiExfVxuZnVuY3Rpb24gRyhhLGIsYyxkKXt0aGlzLmRpc3BhdGNoQ29uZmlnPWE7dGhpcy5fdGFyZ2V0SW5zdD1iO3RoaXMubmF0aXZlRXZlbnQ9YzthPXRoaXMuY29uc3RydWN0b3IuSW50ZXJmYWNlO2Zvcih2YXIgZSBpbiBhKWEuaGFzT3duUHJvcGVydHkoZSkmJigoYj1hW2VdKT90aGlzW2VdPWIoYyk6XCJ0YXJnZXRcIj09PWU/dGhpcy50YXJnZXQ9ZDp0aGlzW2VdPWNbZV0pO3RoaXMuaXNEZWZhdWx0UHJldmVudGVkPShudWxsIT1jLmRlZmF1bHRQcmV2ZW50ZWQ/Yy5kZWZhdWx0UHJldmVudGVkOiExPT09Yy5yZXR1cm5WYWx1ZSk/YmU6Y2U7dGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1jZTtyZXR1cm4gdGhpc31cbm4oRy5wcm90b3R5cGUse3ByZXZlbnREZWZhdWx0OmZ1bmN0aW9uKCl7dGhpcy5kZWZhdWx0UHJldmVudGVkPSEwO3ZhciBhPXRoaXMubmF0aXZlRXZlbnQ7YSYmKGEucHJldmVudERlZmF1bHQ/YS5wcmV2ZW50RGVmYXVsdCgpOlwidW5rbm93blwiIT09dHlwZW9mIGEucmV0dXJuVmFsdWUmJihhLnJldHVyblZhbHVlPSExKSx0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD1iZSl9LHN0b3BQcm9wYWdhdGlvbjpmdW5jdGlvbigpe3ZhciBhPXRoaXMubmF0aXZlRXZlbnQ7YSYmKGEuc3RvcFByb3BhZ2F0aW9uP2Euc3RvcFByb3BhZ2F0aW9uKCk6XCJ1bmtub3duXCIhPT10eXBlb2YgYS5jYW5jZWxCdWJibGUmJihhLmNhbmNlbEJ1YmJsZT0hMCksdGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1iZSl9LHBlcnNpc3Q6ZnVuY3Rpb24oKXt0aGlzLmlzUGVyc2lzdGVudD1iZX0saXNQZXJzaXN0ZW50OmNlLGRlc3RydWN0b3I6ZnVuY3Rpb24oKXt2YXIgYT10aGlzLmNvbnN0cnVjdG9yLkludGVyZmFjZSxcbmI7Zm9yKGIgaW4gYSl0aGlzW2JdPW51bGw7dGhpcy5uYXRpdmVFdmVudD10aGlzLl90YXJnZXRJbnN0PXRoaXMuZGlzcGF0Y2hDb25maWc9bnVsbDt0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPXRoaXMuaXNEZWZhdWx0UHJldmVudGVkPWNlO3RoaXMuX2Rpc3BhdGNoSW5zdGFuY2VzPXRoaXMuX2Rpc3BhdGNoTGlzdGVuZXJzPW51bGx9fSk7Ry5JbnRlcmZhY2U9e3R5cGU6bnVsbCx0YXJnZXQ6bnVsbCxjdXJyZW50VGFyZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9LGV2ZW50UGhhc2U6bnVsbCxidWJibGVzOm51bGwsY2FuY2VsYWJsZTpudWxsLHRpbWVTdGFtcDpmdW5jdGlvbihhKXtyZXR1cm4gYS50aW1lU3RhbXB8fERhdGUubm93KCl9LGRlZmF1bHRQcmV2ZW50ZWQ6bnVsbCxpc1RydXN0ZWQ6bnVsbH07XG5HLmV4dGVuZD1mdW5jdGlvbihhKXtmdW5jdGlvbiBiKCl7fWZ1bmN0aW9uIGMoKXtyZXR1cm4gZC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9dmFyIGQ9dGhpcztiLnByb3RvdHlwZT1kLnByb3RvdHlwZTt2YXIgZT1uZXcgYjtuKGUsYy5wcm90b3R5cGUpO2MucHJvdG90eXBlPWU7Yy5wcm90b3R5cGUuY29uc3RydWN0b3I9YztjLkludGVyZmFjZT1uKHt9LGQuSW50ZXJmYWNlLGEpO2MuZXh0ZW5kPWQuZXh0ZW5kO2RlKGMpO3JldHVybiBjfTtkZShHKTtmdW5jdGlvbiBlZShhLGIsYyxkKXtpZih0aGlzLmV2ZW50UG9vbC5sZW5ndGgpe3ZhciBlPXRoaXMuZXZlbnRQb29sLnBvcCgpO3RoaXMuY2FsbChlLGEsYixjLGQpO3JldHVybiBlfXJldHVybiBuZXcgdGhpcyhhLGIsYyxkKX1cbmZ1bmN0aW9uIGZlKGEpe2lmKCEoYSBpbnN0YW5jZW9mIHRoaXMpKXRocm93IEVycm9yKHUoMjc5KSk7YS5kZXN0cnVjdG9yKCk7MTA+dGhpcy5ldmVudFBvb2wubGVuZ3RoJiZ0aGlzLmV2ZW50UG9vbC5wdXNoKGEpfWZ1bmN0aW9uIGRlKGEpe2EuZXZlbnRQb29sPVtdO2EuZ2V0UG9vbGVkPWVlO2EucmVsZWFzZT1mZX12YXIgZ2U9Ry5leHRlbmQoe2RhdGE6bnVsbH0pLGhlPUcuZXh0ZW5kKHtkYXRhOm51bGx9KSxpZT1bOSwxMywyNywzMl0samU9eWEmJlwiQ29tcG9zaXRpb25FdmVudFwiaW4gd2luZG93LGtlPW51bGw7eWEmJlwiZG9jdW1lbnRNb2RlXCJpbiBkb2N1bWVudCYmKGtlPWRvY3VtZW50LmRvY3VtZW50TW9kZSk7XG52YXIgbGU9eWEmJlwiVGV4dEV2ZW50XCJpbiB3aW5kb3cmJiFrZSxtZT15YSYmKCFqZXx8a2UmJjg8a2UmJjExPj1rZSksbmU9U3RyaW5nLmZyb21DaGFyQ29kZSgzMiksb2U9e2JlZm9yZUlucHV0OntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQmVmb3JlSW5wdXRcIixjYXB0dXJlZDpcIm9uQmVmb3JlSW5wdXRDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpbXCJjb21wb3NpdGlvbmVuZFwiLFwia2V5cHJlc3NcIixcInRleHRJbnB1dFwiLFwicGFzdGVcIl19LGNvbXBvc2l0aW9uRW5kOntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ29tcG9zaXRpb25FbmRcIixjYXB0dXJlZDpcIm9uQ29tcG9zaXRpb25FbmRDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29tcG9zaXRpb25lbmQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIil9LGNvbXBvc2l0aW9uU3RhcnQ6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25Db21wb3NpdGlvblN0YXJ0XCIsXG5jYXB0dXJlZDpcIm9uQ29tcG9zaXRpb25TdGFydENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb21wb3NpdGlvbnN0YXJ0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpfSxjb21wb3NpdGlvblVwZGF0ZTp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNvbXBvc2l0aW9uVXBkYXRlXCIsY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uVXBkYXRlQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbXBvc2l0aW9udXBkYXRlIGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpfX0scGU9ITE7XG5mdW5jdGlvbiBxZShhLGIpe3N3aXRjaChhKXtjYXNlIFwia2V5dXBcIjpyZXR1cm4tMSE9PWllLmluZGV4T2YoYi5rZXlDb2RlKTtjYXNlIFwia2V5ZG93blwiOnJldHVybiAyMjkhPT1iLmtleUNvZGU7Y2FzZSBcImtleXByZXNzXCI6Y2FzZSBcIm1vdXNlZG93blwiOmNhc2UgXCJibHVyXCI6cmV0dXJuITA7ZGVmYXVsdDpyZXR1cm4hMX19ZnVuY3Rpb24gcmUoYSl7YT1hLmRldGFpbDtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJlwiZGF0YVwiaW4gYT9hLmRhdGE6bnVsbH12YXIgc2U9ITE7ZnVuY3Rpb24gdGUoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6cmV0dXJuIHJlKGIpO2Nhc2UgXCJrZXlwcmVzc1wiOmlmKDMyIT09Yi53aGljaClyZXR1cm4gbnVsbDtwZT0hMDtyZXR1cm4gbmU7Y2FzZSBcInRleHRJbnB1dFwiOnJldHVybiBhPWIuZGF0YSxhPT09bmUmJnBlP251bGw6YTtkZWZhdWx0OnJldHVybiBudWxsfX1cbmZ1bmN0aW9uIHVlKGEsYil7aWYoc2UpcmV0dXJuXCJjb21wb3NpdGlvbmVuZFwiPT09YXx8IWplJiZxZShhLGIpPyhhPWFlKCksJGQ9WmQ9WWQ9bnVsbCxzZT0hMSxhKTpudWxsO3N3aXRjaChhKXtjYXNlIFwicGFzdGVcIjpyZXR1cm4gbnVsbDtjYXNlIFwia2V5cHJlc3NcIjppZighKGIuY3RybEtleXx8Yi5hbHRLZXl8fGIubWV0YUtleSl8fGIuY3RybEtleSYmYi5hbHRLZXkpe2lmKGIuY2hhciYmMTxiLmNoYXIubGVuZ3RoKXJldHVybiBiLmNoYXI7aWYoYi53aGljaClyZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZShiLndoaWNoKX1yZXR1cm4gbnVsbDtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpyZXR1cm4gbWUmJlwia29cIiE9PWIubG9jYWxlP251bGw6Yi5kYXRhO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxudmFyIHZlPXtldmVudFR5cGVzOm9lLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU7aWYoamUpYjp7c3dpdGNoKGEpe2Nhc2UgXCJjb21wb3NpdGlvbnN0YXJ0XCI6dmFyIGY9b2UuY29tcG9zaXRpb25TdGFydDticmVhayBiO2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOmY9b2UuY29tcG9zaXRpb25FbmQ7YnJlYWsgYjtjYXNlIFwiY29tcG9zaXRpb251cGRhdGVcIjpmPW9lLmNvbXBvc2l0aW9uVXBkYXRlO2JyZWFrIGJ9Zj12b2lkIDB9ZWxzZSBzZT9xZShhLGMpJiYoZj1vZS5jb21wb3NpdGlvbkVuZCk6XCJrZXlkb3duXCI9PT1hJiYyMjk9PT1jLmtleUNvZGUmJihmPW9lLmNvbXBvc2l0aW9uU3RhcnQpO2Y/KG1lJiZcImtvXCIhPT1jLmxvY2FsZSYmKHNlfHxmIT09b2UuY29tcG9zaXRpb25TdGFydD9mPT09b2UuY29tcG9zaXRpb25FbmQmJnNlJiYoZT1hZSgpKTooWWQ9ZCxaZD1cInZhbHVlXCJpbiBZZD9ZZC52YWx1ZTpZZC50ZXh0Q29udGVudCxzZT0hMCkpLGY9Z2UuZ2V0UG9vbGVkKGYsXG5iLGMsZCksZT9mLmRhdGE9ZTooZT1yZShjKSxudWxsIT09ZSYmKGYuZGF0YT1lKSksWGQoZiksZT1mKTplPW51bGw7KGE9bGU/dGUoYSxjKTp1ZShhLGMpKT8oYj1oZS5nZXRQb29sZWQob2UuYmVmb3JlSW5wdXQsYixjLGQpLGIuZGF0YT1hLFhkKGIpKTpiPW51bGw7cmV0dXJuIG51bGw9PT1lP2I6bnVsbD09PWI/ZTpbZSxiXX19LHdlPXtjb2xvcjohMCxkYXRlOiEwLGRhdGV0aW1lOiEwLFwiZGF0ZXRpbWUtbG9jYWxcIjohMCxlbWFpbDohMCxtb250aDohMCxudW1iZXI6ITAscGFzc3dvcmQ6ITAscmFuZ2U6ITAsc2VhcmNoOiEwLHRlbDohMCx0ZXh0OiEwLHRpbWU6ITAsdXJsOiEwLHdlZWs6ITB9O2Z1bmN0aW9uIHhlKGEpe3ZhciBiPWEmJmEubm9kZU5hbWUmJmEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm5cImlucHV0XCI9PT1iPyEhd2VbYS50eXBlXTpcInRleHRhcmVhXCI9PT1iPyEwOiExfVxudmFyIHllPXtjaGFuZ2U6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25DaGFuZ2VcIixjYXB0dXJlZDpcIm9uQ2hhbmdlQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNoYW5nZSBjbGljayBmb2N1cyBpbnB1dCBrZXlkb3duIGtleXVwIHNlbGVjdGlvbmNoYW5nZVwiLnNwbGl0KFwiIFwiKX19O2Z1bmN0aW9uIHplKGEsYixjKXthPUcuZ2V0UG9vbGVkKHllLmNoYW5nZSxhLGIsYyk7YS50eXBlPVwiY2hhbmdlXCI7RGEoYyk7WGQoYSk7cmV0dXJuIGF9dmFyIEFlPW51bGwsQmU9bnVsbDtmdW5jdGlvbiBDZShhKXttYyhhKX1mdW5jdGlvbiBEZShhKXt2YXIgYj1QZChhKTtpZih5YihiKSlyZXR1cm4gYX1mdW5jdGlvbiBFZShhLGIpe2lmKFwiY2hhbmdlXCI9PT1hKXJldHVybiBifXZhciBGZT0hMTt5YSYmKEZlPW9jKFwiaW5wdXRcIikmJighZG9jdW1lbnQuZG9jdW1lbnRNb2RlfHw5PGRvY3VtZW50LmRvY3VtZW50TW9kZSkpO1xuZnVuY3Rpb24gR2UoKXtBZSYmKEFlLmRldGFjaEV2ZW50KFwib25wcm9wZXJ0eWNoYW5nZVwiLEhlKSxCZT1BZT1udWxsKX1mdW5jdGlvbiBIZShhKXtpZihcInZhbHVlXCI9PT1hLnByb3BlcnR5TmFtZSYmRGUoQmUpKWlmKGE9emUoQmUsYSxuYyhhKSksSmEpbWMoYSk7ZWxzZXtKYT0hMDt0cnl7RmEoQ2UsYSl9ZmluYWxseXtKYT0hMSxMYSgpfX19ZnVuY3Rpb24gSWUoYSxiLGMpe1wiZm9jdXNcIj09PWE/KEdlKCksQWU9YixCZT1jLEFlLmF0dGFjaEV2ZW50KFwib25wcm9wZXJ0eWNoYW5nZVwiLEhlKSk6XCJibHVyXCI9PT1hJiZHZSgpfWZ1bmN0aW9uIEplKGEpe2lmKFwic2VsZWN0aW9uY2hhbmdlXCI9PT1hfHxcImtleXVwXCI9PT1hfHxcImtleWRvd25cIj09PWEpcmV0dXJuIERlKEJlKX1mdW5jdGlvbiBLZShhLGIpe2lmKFwiY2xpY2tcIj09PWEpcmV0dXJuIERlKGIpfWZ1bmN0aW9uIExlKGEsYil7aWYoXCJpbnB1dFwiPT09YXx8XCJjaGFuZ2VcIj09PWEpcmV0dXJuIERlKGIpfVxudmFyIE1lPXtldmVudFR5cGVzOnllLF9pc0lucHV0RXZlbnRTdXBwb3J0ZWQ6RmUsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1iP1BkKGIpOndpbmRvdyxmPWUubm9kZU5hbWUmJmUubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtpZihcInNlbGVjdFwiPT09Znx8XCJpbnB1dFwiPT09ZiYmXCJmaWxlXCI9PT1lLnR5cGUpdmFyIGc9RWU7ZWxzZSBpZih4ZShlKSlpZihGZSlnPUxlO2Vsc2V7Zz1KZTt2YXIgaD1JZX1lbHNlKGY9ZS5ub2RlTmFtZSkmJlwiaW5wdXRcIj09PWYudG9Mb3dlckNhc2UoKSYmKFwiY2hlY2tib3hcIj09PWUudHlwZXx8XCJyYWRpb1wiPT09ZS50eXBlKSYmKGc9S2UpO2lmKGcmJihnPWcoYSxiKSkpcmV0dXJuIHplKGcsYyxkKTtoJiZoKGEsZSxiKTtcImJsdXJcIj09PWEmJihhPWUuX3dyYXBwZXJTdGF0ZSkmJmEuY29udHJvbGxlZCYmXCJudW1iZXJcIj09PWUudHlwZSYmRGIoZSxcIm51bWJlclwiLGUudmFsdWUpfX0sTmU9Ry5leHRlbmQoe3ZpZXc6bnVsbCxkZXRhaWw6bnVsbH0pLFxuT2U9e0FsdDpcImFsdEtleVwiLENvbnRyb2w6XCJjdHJsS2V5XCIsTWV0YTpcIm1ldGFLZXlcIixTaGlmdDpcInNoaWZ0S2V5XCJ9O2Z1bmN0aW9uIFBlKGEpe3ZhciBiPXRoaXMubmF0aXZlRXZlbnQ7cmV0dXJuIGIuZ2V0TW9kaWZpZXJTdGF0ZT9iLmdldE1vZGlmaWVyU3RhdGUoYSk6KGE9T2VbYV0pPyEhYlthXTohMX1mdW5jdGlvbiBRZSgpe3JldHVybiBQZX1cbnZhciBSZT0wLFNlPTAsVGU9ITEsVWU9ITEsVmU9TmUuZXh0ZW5kKHtzY3JlZW5YOm51bGwsc2NyZWVuWTpudWxsLGNsaWVudFg6bnVsbCxjbGllbnRZOm51bGwscGFnZVg6bnVsbCxwYWdlWTpudWxsLGN0cmxLZXk6bnVsbCxzaGlmdEtleTpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxnZXRNb2RpZmllclN0YXRlOlFlLGJ1dHRvbjpudWxsLGJ1dHRvbnM6bnVsbCxyZWxhdGVkVGFyZ2V0OmZ1bmN0aW9uKGEpe3JldHVybiBhLnJlbGF0ZWRUYXJnZXR8fChhLmZyb21FbGVtZW50PT09YS5zcmNFbGVtZW50P2EudG9FbGVtZW50OmEuZnJvbUVsZW1lbnQpfSxtb3ZlbWVudFg6ZnVuY3Rpb24oYSl7aWYoXCJtb3ZlbWVudFhcImluIGEpcmV0dXJuIGEubW92ZW1lbnRYO3ZhciBiPVJlO1JlPWEuc2NyZWVuWDtyZXR1cm4gVGU/XCJtb3VzZW1vdmVcIj09PWEudHlwZT9hLnNjcmVlblgtYjowOihUZT0hMCwwKX0sbW92ZW1lbnRZOmZ1bmN0aW9uKGEpe2lmKFwibW92ZW1lbnRZXCJpbiBhKXJldHVybiBhLm1vdmVtZW50WTtcbnZhciBiPVNlO1NlPWEuc2NyZWVuWTtyZXR1cm4gVWU/XCJtb3VzZW1vdmVcIj09PWEudHlwZT9hLnNjcmVlblktYjowOihVZT0hMCwwKX19KSxXZT1WZS5leHRlbmQoe3BvaW50ZXJJZDpudWxsLHdpZHRoOm51bGwsaGVpZ2h0Om51bGwscHJlc3N1cmU6bnVsbCx0YW5nZW50aWFsUHJlc3N1cmU6bnVsbCx0aWx0WDpudWxsLHRpbHRZOm51bGwsdHdpc3Q6bnVsbCxwb2ludGVyVHlwZTpudWxsLGlzUHJpbWFyeTpudWxsfSksWGU9e21vdXNlRW50ZXI6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvbk1vdXNlRW50ZXJcIixkZXBlbmRlbmNpZXM6W1wibW91c2VvdXRcIixcIm1vdXNlb3ZlclwiXX0sbW91c2VMZWF2ZTp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uTW91c2VMZWF2ZVwiLGRlcGVuZGVuY2llczpbXCJtb3VzZW91dFwiLFwibW91c2VvdmVyXCJdfSxwb2ludGVyRW50ZXI6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvblBvaW50ZXJFbnRlclwiLGRlcGVuZGVuY2llczpbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyb3ZlclwiXX0scG9pbnRlckxlYXZlOntyZWdpc3RyYXRpb25OYW1lOlwib25Qb2ludGVyTGVhdmVcIixcbmRlcGVuZGVuY2llczpbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyb3ZlclwiXX19LFllPXtldmVudFR5cGVzOlhlLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCxlKXt2YXIgZj1cIm1vdXNlb3ZlclwiPT09YXx8XCJwb2ludGVyb3ZlclwiPT09YSxnPVwibW91c2VvdXRcIj09PWF8fFwicG9pbnRlcm91dFwiPT09YTtpZihmJiYwPT09KGUmMzIpJiYoYy5yZWxhdGVkVGFyZ2V0fHxjLmZyb21FbGVtZW50KXx8IWcmJiFmKXJldHVybiBudWxsO2Y9ZC53aW5kb3c9PT1kP2Q6KGY9ZC5vd25lckRvY3VtZW50KT9mLmRlZmF1bHRWaWV3fHxmLnBhcmVudFdpbmRvdzp3aW5kb3c7aWYoZyl7aWYoZz1iLGI9KGI9Yy5yZWxhdGVkVGFyZ2V0fHxjLnRvRWxlbWVudCk/dGMoYik6bnVsbCxudWxsIT09Yil7dmFyIGg9ZGMoYik7aWYoYiE9PWh8fDUhPT1iLnRhZyYmNiE9PWIudGFnKWI9bnVsbH19ZWxzZSBnPW51bGw7aWYoZz09PWIpcmV0dXJuIG51bGw7aWYoXCJtb3VzZW91dFwiPT09YXx8XCJtb3VzZW92ZXJcIj09PVxuYSl7dmFyIGs9VmU7dmFyIGw9WGUubW91c2VMZWF2ZTt2YXIgbT1YZS5tb3VzZUVudGVyO3ZhciBwPVwibW91c2VcIn1lbHNlIGlmKFwicG9pbnRlcm91dFwiPT09YXx8XCJwb2ludGVyb3ZlclwiPT09YSlrPVdlLGw9WGUucG9pbnRlckxlYXZlLG09WGUucG9pbnRlckVudGVyLHA9XCJwb2ludGVyXCI7YT1udWxsPT1nP2Y6UGQoZyk7Zj1udWxsPT1iP2Y6UGQoYik7bD1rLmdldFBvb2xlZChsLGcsYyxkKTtsLnR5cGU9cCtcImxlYXZlXCI7bC50YXJnZXQ9YTtsLnJlbGF0ZWRUYXJnZXQ9ZjtjPWsuZ2V0UG9vbGVkKG0sYixjLGQpO2MudHlwZT1wK1wiZW50ZXJcIjtjLnRhcmdldD1mO2MucmVsYXRlZFRhcmdldD1hO2Q9ZztwPWI7aWYoZCYmcClhOntrPWQ7bT1wO2c9MDtmb3IoYT1rO2E7YT1SZChhKSlnKys7YT0wO2ZvcihiPW07YjtiPVJkKGIpKWErKztmb3IoOzA8Zy1hOylrPVJkKGspLGctLTtmb3IoOzA8YS1nOyltPVJkKG0pLGEtLTtmb3IoO2ctLTspe2lmKGs9PT1tfHxrPT09bS5hbHRlcm5hdGUpYnJlYWsgYTtcbms9UmQoayk7bT1SZChtKX1rPW51bGx9ZWxzZSBrPW51bGw7bT1rO2ZvcihrPVtdO2QmJmQhPT1tOyl7Zz1kLmFsdGVybmF0ZTtpZihudWxsIT09ZyYmZz09PW0pYnJlYWs7ay5wdXNoKGQpO2Q9UmQoZCl9Zm9yKGQ9W107cCYmcCE9PW07KXtnPXAuYWx0ZXJuYXRlO2lmKG51bGwhPT1nJiZnPT09bSlicmVhaztkLnB1c2gocCk7cD1SZChwKX1mb3IocD0wO3A8ay5sZW5ndGg7cCsrKVZkKGtbcF0sXCJidWJibGVkXCIsbCk7Zm9yKHA9ZC5sZW5ndGg7MDxwLS07KVZkKGRbcF0sXCJjYXB0dXJlZFwiLGMpO3JldHVybiAwPT09KGUmNjQpP1tsXTpbbCxjXX19O2Z1bmN0aW9uIFplKGEsYil7cmV0dXJuIGE9PT1iJiYoMCE9PWF8fDEvYT09PTEvYil8fGEhPT1hJiZiIT09Yn12YXIgJGU9XCJmdW5jdGlvblwiPT09dHlwZW9mIE9iamVjdC5pcz9PYmplY3QuaXM6WmUsYWY9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcbmZ1bmN0aW9uIGJmKGEsYil7aWYoJGUoYSxiKSlyZXR1cm4hMDtpZihcIm9iamVjdFwiIT09dHlwZW9mIGF8fG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGJ8fG51bGw9PT1iKXJldHVybiExO3ZhciBjPU9iamVjdC5rZXlzKGEpLGQ9T2JqZWN0LmtleXMoYik7aWYoYy5sZW5ndGghPT1kLmxlbmd0aClyZXR1cm4hMTtmb3IoZD0wO2Q8Yy5sZW5ndGg7ZCsrKWlmKCFhZi5jYWxsKGIsY1tkXSl8fCEkZShhW2NbZF1dLGJbY1tkXV0pKXJldHVybiExO3JldHVybiEwfVxudmFyIGNmPXlhJiZcImRvY3VtZW50TW9kZVwiaW4gZG9jdW1lbnQmJjExPj1kb2N1bWVudC5kb2N1bWVudE1vZGUsZGY9e3NlbGVjdDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvblNlbGVjdFwiLGNhcHR1cmVkOlwib25TZWxlY3RDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29udGV4dG1lbnUgZHJhZ2VuZCBmb2N1cyBrZXlkb3duIGtleXVwIG1vdXNlZG93biBtb3VzZXVwIHNlbGVjdGlvbmNoYW5nZVwiLnNwbGl0KFwiIFwiKX19LGVmPW51bGwsZmY9bnVsbCxnZj1udWxsLGhmPSExO1xuZnVuY3Rpb24gamYoYSxiKXt2YXIgYz1iLndpbmRvdz09PWI/Yi5kb2N1bWVudDo5PT09Yi5ub2RlVHlwZT9iOmIub3duZXJEb2N1bWVudDtpZihoZnx8bnVsbD09ZWZ8fGVmIT09dGQoYykpcmV0dXJuIG51bGw7Yz1lZjtcInNlbGVjdGlvblN0YXJ0XCJpbiBjJiZ5ZChjKT9jPXtzdGFydDpjLnNlbGVjdGlvblN0YXJ0LGVuZDpjLnNlbGVjdGlvbkVuZH06KGM9KGMub3duZXJEb2N1bWVudCYmYy5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3fHx3aW5kb3cpLmdldFNlbGVjdGlvbigpLGM9e2FuY2hvck5vZGU6Yy5hbmNob3JOb2RlLGFuY2hvck9mZnNldDpjLmFuY2hvck9mZnNldCxmb2N1c05vZGU6Yy5mb2N1c05vZGUsZm9jdXNPZmZzZXQ6Yy5mb2N1c09mZnNldH0pO3JldHVybiBnZiYmYmYoZ2YsYyk/bnVsbDooZ2Y9YyxhPUcuZ2V0UG9vbGVkKGRmLnNlbGVjdCxmZixhLGIpLGEudHlwZT1cInNlbGVjdFwiLGEudGFyZ2V0PWVmLFhkKGEpLGEpfVxudmFyIGtmPXtldmVudFR5cGVzOmRmLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCxlLGYpe2U9Znx8KGQud2luZG93PT09ZD9kLmRvY3VtZW50Ojk9PT1kLm5vZGVUeXBlP2Q6ZC5vd25lckRvY3VtZW50KTtpZighKGY9IWUpKXthOntlPWNjKGUpO2Y9d2Eub25TZWxlY3Q7Zm9yKHZhciBnPTA7ZzxmLmxlbmd0aDtnKyspaWYoIWUuaGFzKGZbZ10pKXtlPSExO2JyZWFrIGF9ZT0hMH1mPSFlfWlmKGYpcmV0dXJuIG51bGw7ZT1iP1BkKGIpOndpbmRvdztzd2l0Y2goYSl7Y2FzZSBcImZvY3VzXCI6aWYoeGUoZSl8fFwidHJ1ZVwiPT09ZS5jb250ZW50RWRpdGFibGUpZWY9ZSxmZj1iLGdmPW51bGw7YnJlYWs7Y2FzZSBcImJsdXJcIjpnZj1mZj1lZj1udWxsO2JyZWFrO2Nhc2UgXCJtb3VzZWRvd25cIjpoZj0hMDticmVhaztjYXNlIFwiY29udGV4dG1lbnVcIjpjYXNlIFwibW91c2V1cFwiOmNhc2UgXCJkcmFnZW5kXCI6cmV0dXJuIGhmPSExLGpmKGMsZCk7Y2FzZSBcInNlbGVjdGlvbmNoYW5nZVwiOmlmKGNmKWJyZWFrO1xuY2FzZSBcImtleWRvd25cIjpjYXNlIFwia2V5dXBcIjpyZXR1cm4gamYoYyxkKX1yZXR1cm4gbnVsbH19LGxmPUcuZXh0ZW5kKHthbmltYXRpb25OYW1lOm51bGwsZWxhcHNlZFRpbWU6bnVsbCxwc2V1ZG9FbGVtZW50Om51bGx9KSxtZj1HLmV4dGVuZCh7Y2xpcGJvYXJkRGF0YTpmdW5jdGlvbihhKXtyZXR1cm5cImNsaXBib2FyZERhdGFcImluIGE/YS5jbGlwYm9hcmREYXRhOndpbmRvdy5jbGlwYm9hcmREYXRhfX0pLG5mPU5lLmV4dGVuZCh7cmVsYXRlZFRhcmdldDpudWxsfSk7ZnVuY3Rpb24gb2YoYSl7dmFyIGI9YS5rZXlDb2RlO1wiY2hhckNvZGVcImluIGE/KGE9YS5jaGFyQ29kZSwwPT09YSYmMTM9PT1iJiYoYT0xMykpOmE9YjsxMD09PWEmJihhPTEzKTtyZXR1cm4gMzI8PWF8fDEzPT09YT9hOjB9XG52YXIgcGY9e0VzYzpcIkVzY2FwZVwiLFNwYWNlYmFyOlwiIFwiLExlZnQ6XCJBcnJvd0xlZnRcIixVcDpcIkFycm93VXBcIixSaWdodDpcIkFycm93UmlnaHRcIixEb3duOlwiQXJyb3dEb3duXCIsRGVsOlwiRGVsZXRlXCIsV2luOlwiT1NcIixNZW51OlwiQ29udGV4dE1lbnVcIixBcHBzOlwiQ29udGV4dE1lbnVcIixTY3JvbGw6XCJTY3JvbGxMb2NrXCIsTW96UHJpbnRhYmxlS2V5OlwiVW5pZGVudGlmaWVkXCJ9LHFmPXs4OlwiQmFja3NwYWNlXCIsOTpcIlRhYlwiLDEyOlwiQ2xlYXJcIiwxMzpcIkVudGVyXCIsMTY6XCJTaGlmdFwiLDE3OlwiQ29udHJvbFwiLDE4OlwiQWx0XCIsMTk6XCJQYXVzZVwiLDIwOlwiQ2Fwc0xvY2tcIiwyNzpcIkVzY2FwZVwiLDMyOlwiIFwiLDMzOlwiUGFnZVVwXCIsMzQ6XCJQYWdlRG93blwiLDM1OlwiRW5kXCIsMzY6XCJIb21lXCIsMzc6XCJBcnJvd0xlZnRcIiwzODpcIkFycm93VXBcIiwzOTpcIkFycm93UmlnaHRcIiw0MDpcIkFycm93RG93blwiLDQ1OlwiSW5zZXJ0XCIsNDY6XCJEZWxldGVcIiwxMTI6XCJGMVwiLDExMzpcIkYyXCIsMTE0OlwiRjNcIiwxMTU6XCJGNFwiLFxuMTE2OlwiRjVcIiwxMTc6XCJGNlwiLDExODpcIkY3XCIsMTE5OlwiRjhcIiwxMjA6XCJGOVwiLDEyMTpcIkYxMFwiLDEyMjpcIkYxMVwiLDEyMzpcIkYxMlwiLDE0NDpcIk51bUxvY2tcIiwxNDU6XCJTY3JvbGxMb2NrXCIsMjI0OlwiTWV0YVwifSxyZj1OZS5leHRlbmQoe2tleTpmdW5jdGlvbihhKXtpZihhLmtleSl7dmFyIGI9cGZbYS5rZXldfHxhLmtleTtpZihcIlVuaWRlbnRpZmllZFwiIT09YilyZXR1cm4gYn1yZXR1cm5cImtleXByZXNzXCI9PT1hLnR5cGU/KGE9b2YoYSksMTM9PT1hP1wiRW50ZXJcIjpTdHJpbmcuZnJvbUNoYXJDb2RlKGEpKTpcImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP3FmW2Eua2V5Q29kZV18fFwiVW5pZGVudGlmaWVkXCI6XCJcIn0sbG9jYXRpb246bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxhbHRLZXk6bnVsbCxtZXRhS2V5Om51bGwscmVwZWF0Om51bGwsbG9jYWxlOm51bGwsZ2V0TW9kaWZpZXJTdGF0ZTpRZSxjaGFyQ29kZTpmdW5jdGlvbihhKXtyZXR1cm5cImtleXByZXNzXCI9PT1cbmEudHlwZT9vZihhKTowfSxrZXlDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9LHdoaWNoOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PWEudHlwZT9vZihhKTpcImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP2Eua2V5Q29kZTowfX0pLHNmPVZlLmV4dGVuZCh7ZGF0YVRyYW5zZmVyOm51bGx9KSx0Zj1OZS5leHRlbmQoe3RvdWNoZXM6bnVsbCx0YXJnZXRUb3VjaGVzOm51bGwsY2hhbmdlZFRvdWNoZXM6bnVsbCxhbHRLZXk6bnVsbCxtZXRhS2V5Om51bGwsY3RybEtleTpudWxsLHNoaWZ0S2V5Om51bGwsZ2V0TW9kaWZpZXJTdGF0ZTpRZX0pLHVmPUcuZXh0ZW5kKHtwcm9wZXJ0eU5hbWU6bnVsbCxlbGFwc2VkVGltZTpudWxsLHBzZXVkb0VsZW1lbnQ6bnVsbH0pLHZmPVZlLmV4dGVuZCh7ZGVsdGFYOmZ1bmN0aW9uKGEpe3JldHVyblwiZGVsdGFYXCJpbiBhP2EuZGVsdGFYOlwid2hlZWxEZWx0YVhcImluXG5hPy1hLndoZWVsRGVsdGFYOjB9LGRlbHRhWTpmdW5jdGlvbihhKXtyZXR1cm5cImRlbHRhWVwiaW4gYT9hLmRlbHRhWTpcIndoZWVsRGVsdGFZXCJpbiBhPy1hLndoZWVsRGVsdGFZOlwid2hlZWxEZWx0YVwiaW4gYT8tYS53aGVlbERlbHRhOjB9LGRlbHRhWjpudWxsLGRlbHRhTW9kZTpudWxsfSksd2Y9e2V2ZW50VHlwZXM6V2MsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1ZYy5nZXQoYSk7aWYoIWUpcmV0dXJuIG51bGw7c3dpdGNoKGEpe2Nhc2UgXCJrZXlwcmVzc1wiOmlmKDA9PT1vZihjKSlyZXR1cm4gbnVsbDtjYXNlIFwia2V5ZG93blwiOmNhc2UgXCJrZXl1cFwiOmE9cmY7YnJlYWs7Y2FzZSBcImJsdXJcIjpjYXNlIFwiZm9jdXNcIjphPW5mO2JyZWFrO2Nhc2UgXCJjbGlja1wiOmlmKDI9PT1jLmJ1dHRvbilyZXR1cm4gbnVsbDtjYXNlIFwiYXV4Y2xpY2tcIjpjYXNlIFwiZGJsY2xpY2tcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcIm1vdXNlbW92ZVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcIm1vdXNlb3V0XCI6Y2FzZSBcIm1vdXNlb3ZlclwiOmNhc2UgXCJjb250ZXh0bWVudVwiOmE9XG5WZTticmVhaztjYXNlIFwiZHJhZ1wiOmNhc2UgXCJkcmFnZW5kXCI6Y2FzZSBcImRyYWdlbnRlclwiOmNhc2UgXCJkcmFnZXhpdFwiOmNhc2UgXCJkcmFnbGVhdmVcIjpjYXNlIFwiZHJhZ292ZXJcIjpjYXNlIFwiZHJhZ3N0YXJ0XCI6Y2FzZSBcImRyb3BcIjphPXNmO2JyZWFrO2Nhc2UgXCJ0b3VjaGNhbmNlbFwiOmNhc2UgXCJ0b3VjaGVuZFwiOmNhc2UgXCJ0b3VjaG1vdmVcIjpjYXNlIFwidG91Y2hzdGFydFwiOmE9dGY7YnJlYWs7Y2FzZSBYYjpjYXNlIFliOmNhc2UgWmI6YT1sZjticmVhaztjYXNlICRiOmE9dWY7YnJlYWs7Y2FzZSBcInNjcm9sbFwiOmE9TmU7YnJlYWs7Y2FzZSBcIndoZWVsXCI6YT12ZjticmVhaztjYXNlIFwiY29weVwiOmNhc2UgXCJjdXRcIjpjYXNlIFwicGFzdGVcIjphPW1mO2JyZWFrO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJsb3N0cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwicG9pbnRlcmNhbmNlbFwiOmNhc2UgXCJwb2ludGVyZG93blwiOmNhc2UgXCJwb2ludGVybW92ZVwiOmNhc2UgXCJwb2ludGVyb3V0XCI6Y2FzZSBcInBvaW50ZXJvdmVyXCI6Y2FzZSBcInBvaW50ZXJ1cFwiOmE9XG5XZTticmVhaztkZWZhdWx0OmE9R31iPWEuZ2V0UG9vbGVkKGUsYixjLGQpO1hkKGIpO3JldHVybiBifX07aWYocGEpdGhyb3cgRXJyb3IodSgxMDEpKTtwYT1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChcIlJlc3BvbmRlckV2ZW50UGx1Z2luIFNpbXBsZUV2ZW50UGx1Z2luIEVudGVyTGVhdmVFdmVudFBsdWdpbiBDaGFuZ2VFdmVudFBsdWdpbiBTZWxlY3RFdmVudFBsdWdpbiBCZWZvcmVJbnB1dEV2ZW50UGx1Z2luXCIuc3BsaXQoXCIgXCIpKTtyYSgpO3ZhciB4Zj1OYztsYT1RZDttYT14ZjtuYT1QZDt4YSh7U2ltcGxlRXZlbnRQbHVnaW46d2YsRW50ZXJMZWF2ZUV2ZW50UGx1Z2luOlllLENoYW5nZUV2ZW50UGx1Z2luOk1lLFNlbGVjdEV2ZW50UGx1Z2luOmtmLEJlZm9yZUlucHV0RXZlbnRQbHVnaW46dmV9KTt2YXIgeWY9W10semY9LTE7ZnVuY3Rpb24gSChhKXswPnpmfHwoYS5jdXJyZW50PXlmW3pmXSx5Zlt6Zl09bnVsbCx6Zi0tKX1cbmZ1bmN0aW9uIEkoYSxiKXt6ZisrO3lmW3pmXT1hLmN1cnJlbnQ7YS5jdXJyZW50PWJ9dmFyIEFmPXt9LEo9e2N1cnJlbnQ6QWZ9LEs9e2N1cnJlbnQ6ITF9LEJmPUFmO2Z1bmN0aW9uIENmKGEsYil7dmFyIGM9YS50eXBlLmNvbnRleHRUeXBlcztpZighYylyZXR1cm4gQWY7dmFyIGQ9YS5zdGF0ZU5vZGU7aWYoZCYmZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PT09YilyZXR1cm4gZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dDt2YXIgZT17fSxmO2ZvcihmIGluIGMpZVtmXT1iW2ZdO2QmJihhPWEuc3RhdGVOb2RlLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1iLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9ZSk7cmV0dXJuIGV9ZnVuY3Rpb24gTChhKXthPWEuY2hpbGRDb250ZXh0VHlwZXM7cmV0dXJuIG51bGwhPT1hJiZ2b2lkIDAhPT1hfVxuZnVuY3Rpb24gRGYoKXtIKEspO0goSil9ZnVuY3Rpb24gRWYoYSxiLGMpe2lmKEouY3VycmVudCE9PUFmKXRocm93IEVycm9yKHUoMTY4KSk7SShKLGIpO0koSyxjKX1mdW5jdGlvbiBGZihhLGIsYyl7dmFyIGQ9YS5zdGF0ZU5vZGU7YT1iLmNoaWxkQ29udGV4dFR5cGVzO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBkLmdldENoaWxkQ29udGV4dClyZXR1cm4gYztkPWQuZ2V0Q2hpbGRDb250ZXh0KCk7Zm9yKHZhciBlIGluIGQpaWYoIShlIGluIGEpKXRocm93IEVycm9yKHUoMTA4LHBiKGIpfHxcIlVua25vd25cIixlKSk7cmV0dXJuIG4oe30sYyx7fSxkKX1mdW5jdGlvbiBHZihhKXthPShhPWEuc3RhdGVOb2RlKSYmYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dHx8QWY7QmY9Si5jdXJyZW50O0koSixhKTtJKEssSy5jdXJyZW50KTtyZXR1cm4hMH1cbmZ1bmN0aW9uIEhmKGEsYixjKXt2YXIgZD1hLnN0YXRlTm9kZTtpZighZCl0aHJvdyBFcnJvcih1KDE2OSkpO2M/KGE9RmYoYSxiLEJmKSxkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0PWEsSChLKSxIKEopLEkoSixhKSk6SChLKTtJKEssYyl9XG52YXIgSWY9ci51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHksSmY9ci51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrLEtmPXIudW5zdGFibGVfY2FuY2VsQ2FsbGJhY2ssTGY9ci51bnN0YWJsZV9yZXF1ZXN0UGFpbnQsTWY9ci51bnN0YWJsZV9ub3csTmY9ci51bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbCxPZj1yLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5LFBmPXIudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHksUWY9ci51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSxSZj1yLnVuc3RhYmxlX0xvd1ByaW9yaXR5LFNmPXIudW5zdGFibGVfSWRsZVByaW9yaXR5LFRmPXt9LFVmPXIudW5zdGFibGVfc2hvdWxkWWllbGQsVmY9dm9pZCAwIT09TGY/TGY6ZnVuY3Rpb24oKXt9LFdmPW51bGwsWGY9bnVsbCxZZj0hMSxaZj1NZigpLCRmPTFFND5aZj9NZjpmdW5jdGlvbigpe3JldHVybiBNZigpLVpmfTtcbmZ1bmN0aW9uIGFnKCl7c3dpdGNoKE5mKCkpe2Nhc2UgT2Y6cmV0dXJuIDk5O2Nhc2UgUGY6cmV0dXJuIDk4O2Nhc2UgUWY6cmV0dXJuIDk3O2Nhc2UgUmY6cmV0dXJuIDk2O2Nhc2UgU2Y6cmV0dXJuIDk1O2RlZmF1bHQ6dGhyb3cgRXJyb3IodSgzMzIpKTt9fWZ1bmN0aW9uIGJnKGEpe3N3aXRjaChhKXtjYXNlIDk5OnJldHVybiBPZjtjYXNlIDk4OnJldHVybiBQZjtjYXNlIDk3OnJldHVybiBRZjtjYXNlIDk2OnJldHVybiBSZjtjYXNlIDk1OnJldHVybiBTZjtkZWZhdWx0OnRocm93IEVycm9yKHUoMzMyKSk7fX1mdW5jdGlvbiBjZyhhLGIpe2E9YmcoYSk7cmV0dXJuIElmKGEsYil9ZnVuY3Rpb24gZGcoYSxiLGMpe2E9YmcoYSk7cmV0dXJuIEpmKGEsYixjKX1mdW5jdGlvbiBlZyhhKXtudWxsPT09V2Y/KFdmPVthXSxYZj1KZihPZixmZykpOldmLnB1c2goYSk7cmV0dXJuIFRmfWZ1bmN0aW9uIGdnKCl7aWYobnVsbCE9PVhmKXt2YXIgYT1YZjtYZj1udWxsO0tmKGEpfWZnKCl9XG5mdW5jdGlvbiBmZygpe2lmKCFZZiYmbnVsbCE9PVdmKXtZZj0hMDt2YXIgYT0wO3RyeXt2YXIgYj1XZjtjZyg5OSxmdW5jdGlvbigpe2Zvcig7YTxiLmxlbmd0aDthKyspe3ZhciBjPWJbYV07ZG8gYz1jKCEwKTt3aGlsZShudWxsIT09Yyl9fSk7V2Y9bnVsbH1jYXRjaChjKXt0aHJvdyBudWxsIT09V2YmJihXZj1XZi5zbGljZShhKzEpKSxKZihPZixnZyksYzt9ZmluYWxseXtZZj0hMX19fWZ1bmN0aW9uIGhnKGEsYixjKXtjLz0xMDtyZXR1cm4gMTA3Mzc0MTgyMS0oKCgxMDczNzQxODIxLWErYi8xMCkvY3wwKSsxKSpjfWZ1bmN0aW9uIGlnKGEsYil7aWYoYSYmYS5kZWZhdWx0UHJvcHMpe2I9bih7fSxiKTthPWEuZGVmYXVsdFByb3BzO2Zvcih2YXIgYyBpbiBhKXZvaWQgMD09PWJbY10mJihiW2NdPWFbY10pfXJldHVybiBifXZhciBqZz17Y3VycmVudDpudWxsfSxrZz1udWxsLGxnPW51bGwsbWc9bnVsbDtmdW5jdGlvbiBuZygpe21nPWxnPWtnPW51bGx9XG5mdW5jdGlvbiBvZyhhKXt2YXIgYj1qZy5jdXJyZW50O0goamcpO2EudHlwZS5fY29udGV4dC5fY3VycmVudFZhbHVlPWJ9ZnVuY3Rpb24gcGcoYSxiKXtmb3IoO251bGwhPT1hOyl7dmFyIGM9YS5hbHRlcm5hdGU7aWYoYS5jaGlsZEV4cGlyYXRpb25UaW1lPGIpYS5jaGlsZEV4cGlyYXRpb25UaW1lPWIsbnVsbCE9PWMmJmMuY2hpbGRFeHBpcmF0aW9uVGltZTxiJiYoYy5jaGlsZEV4cGlyYXRpb25UaW1lPWIpO2Vsc2UgaWYobnVsbCE9PWMmJmMuY2hpbGRFeHBpcmF0aW9uVGltZTxiKWMuY2hpbGRFeHBpcmF0aW9uVGltZT1iO2Vsc2UgYnJlYWs7YT1hLnJldHVybn19ZnVuY3Rpb24gcWcoYSxiKXtrZz1hO21nPWxnPW51bGw7YT1hLmRlcGVuZGVuY2llcztudWxsIT09YSYmbnVsbCE9PWEuZmlyc3RDb250ZXh0JiYoYS5leHBpcmF0aW9uVGltZT49YiYmKHJnPSEwKSxhLmZpcnN0Q29udGV4dD1udWxsKX1cbmZ1bmN0aW9uIHNnKGEsYil7aWYobWchPT1hJiYhMSE9PWImJjAhPT1iKXtpZihcIm51bWJlclwiIT09dHlwZW9mIGJ8fDEwNzM3NDE4MjM9PT1iKW1nPWEsYj0xMDczNzQxODIzO2I9e2NvbnRleHQ6YSxvYnNlcnZlZEJpdHM6YixuZXh0Om51bGx9O2lmKG51bGw9PT1sZyl7aWYobnVsbD09PWtnKXRocm93IEVycm9yKHUoMzA4KSk7bGc9YjtrZy5kZXBlbmRlbmNpZXM9e2V4cGlyYXRpb25UaW1lOjAsZmlyc3RDb250ZXh0OmIscmVzcG9uZGVyczpudWxsfX1lbHNlIGxnPWxnLm5leHQ9Yn1yZXR1cm4gYS5fY3VycmVudFZhbHVlfXZhciB0Zz0hMTtmdW5jdGlvbiB1ZyhhKXthLnVwZGF0ZVF1ZXVlPXtiYXNlU3RhdGU6YS5tZW1vaXplZFN0YXRlLGJhc2VRdWV1ZTpudWxsLHNoYXJlZDp7cGVuZGluZzpudWxsfSxlZmZlY3RzOm51bGx9fVxuZnVuY3Rpb24gdmcoYSxiKXthPWEudXBkYXRlUXVldWU7Yi51cGRhdGVRdWV1ZT09PWEmJihiLnVwZGF0ZVF1ZXVlPXtiYXNlU3RhdGU6YS5iYXNlU3RhdGUsYmFzZVF1ZXVlOmEuYmFzZVF1ZXVlLHNoYXJlZDphLnNoYXJlZCxlZmZlY3RzOmEuZWZmZWN0c30pfWZ1bmN0aW9uIHdnKGEsYil7YT17ZXhwaXJhdGlvblRpbWU6YSxzdXNwZW5zZUNvbmZpZzpiLHRhZzowLHBheWxvYWQ6bnVsbCxjYWxsYmFjazpudWxsLG5leHQ6bnVsbH07cmV0dXJuIGEubmV4dD1hfWZ1bmN0aW9uIHhnKGEsYil7YT1hLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1hKXthPWEuc2hhcmVkO3ZhciBjPWEucGVuZGluZztudWxsPT09Yz9iLm5leHQ9YjooYi5uZXh0PWMubmV4dCxjLm5leHQ9Yik7YS5wZW5kaW5nPWJ9fVxuZnVuY3Rpb24geWcoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09YyYmdmcoYyxhKTthPWEudXBkYXRlUXVldWU7Yz1hLmJhc2VRdWV1ZTtudWxsPT09Yz8oYS5iYXNlUXVldWU9Yi5uZXh0PWIsYi5uZXh0PWIpOihiLm5leHQ9Yy5uZXh0LGMubmV4dD1iKX1cbmZ1bmN0aW9uIHpnKGEsYixjLGQpe3ZhciBlPWEudXBkYXRlUXVldWU7dGc9ITE7dmFyIGY9ZS5iYXNlUXVldWUsZz1lLnNoYXJlZC5wZW5kaW5nO2lmKG51bGwhPT1nKXtpZihudWxsIT09Zil7dmFyIGg9Zi5uZXh0O2YubmV4dD1nLm5leHQ7Zy5uZXh0PWh9Zj1nO2Uuc2hhcmVkLnBlbmRpbmc9bnVsbDtoPWEuYWx0ZXJuYXRlO251bGwhPT1oJiYoaD1oLnVwZGF0ZVF1ZXVlLG51bGwhPT1oJiYoaC5iYXNlUXVldWU9ZykpfWlmKG51bGwhPT1mKXtoPWYubmV4dDt2YXIgaz1lLmJhc2VTdGF0ZSxsPTAsbT1udWxsLHA9bnVsbCx4PW51bGw7aWYobnVsbCE9PWgpe3ZhciB6PWg7ZG97Zz16LmV4cGlyYXRpb25UaW1lO2lmKGc8ZCl7dmFyIGNhPXtleHBpcmF0aW9uVGltZTp6LmV4cGlyYXRpb25UaW1lLHN1c3BlbnNlQ29uZmlnOnouc3VzcGVuc2VDb25maWcsdGFnOnoudGFnLHBheWxvYWQ6ei5wYXlsb2FkLGNhbGxiYWNrOnouY2FsbGJhY2ssbmV4dDpudWxsfTtudWxsPT09eD8ocD14PVxuY2EsbT1rKTp4PXgubmV4dD1jYTtnPmwmJihsPWcpfWVsc2V7bnVsbCE9PXgmJih4PXgubmV4dD17ZXhwaXJhdGlvblRpbWU6MTA3Mzc0MTgyMyxzdXNwZW5zZUNvbmZpZzp6LnN1c3BlbnNlQ29uZmlnLHRhZzp6LnRhZyxwYXlsb2FkOnoucGF5bG9hZCxjYWxsYmFjazp6LmNhbGxiYWNrLG5leHQ6bnVsbH0pO0FnKGcsei5zdXNwZW5zZUNvbmZpZyk7YTp7dmFyIEQ9YSx0PXo7Zz1iO2NhPWM7c3dpdGNoKHQudGFnKXtjYXNlIDE6RD10LnBheWxvYWQ7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIEQpe2s9RC5jYWxsKGNhLGssZyk7YnJlYWsgYX1rPUQ7YnJlYWsgYTtjYXNlIDM6RC5lZmZlY3RUYWc9RC5lZmZlY3RUYWcmLTQwOTd8NjQ7Y2FzZSAwOkQ9dC5wYXlsb2FkO2c9XCJmdW5jdGlvblwiPT09dHlwZW9mIEQ/RC5jYWxsKGNhLGssZyk6RDtpZihudWxsPT09Z3x8dm9pZCAwPT09ZylicmVhayBhO2s9bih7fSxrLGcpO2JyZWFrIGE7Y2FzZSAyOnRnPSEwfX1udWxsIT09ei5jYWxsYmFjayYmXG4oYS5lZmZlY3RUYWd8PTMyLGc9ZS5lZmZlY3RzLG51bGw9PT1nP2UuZWZmZWN0cz1bel06Zy5wdXNoKHopKX16PXoubmV4dDtpZihudWxsPT09enx8ej09PWgpaWYoZz1lLnNoYXJlZC5wZW5kaW5nLG51bGw9PT1nKWJyZWFrO2Vsc2Ugej1mLm5leHQ9Zy5uZXh0LGcubmV4dD1oLGUuYmFzZVF1ZXVlPWY9ZyxlLnNoYXJlZC5wZW5kaW5nPW51bGx9d2hpbGUoMSl9bnVsbD09PXg/bT1rOngubmV4dD1wO2UuYmFzZVN0YXRlPW07ZS5iYXNlUXVldWU9eDtCZyhsKTthLmV4cGlyYXRpb25UaW1lPWw7YS5tZW1vaXplZFN0YXRlPWt9fVxuZnVuY3Rpb24gQ2coYSxiLGMpe2E9Yi5lZmZlY3RzO2IuZWZmZWN0cz1udWxsO2lmKG51bGwhPT1hKWZvcihiPTA7YjxhLmxlbmd0aDtiKyspe3ZhciBkPWFbYl0sZT1kLmNhbGxiYWNrO2lmKG51bGwhPT1lKXtkLmNhbGxiYWNrPW51bGw7ZD1lO2U9YztpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZCl0aHJvdyBFcnJvcih1KDE5MSxkKSk7ZC5jYWxsKGUpfX19dmFyIERnPVdhLlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnLEVnPShuZXcgYWEuQ29tcG9uZW50KS5yZWZzO2Z1bmN0aW9uIEZnKGEsYixjLGQpe2I9YS5tZW1vaXplZFN0YXRlO2M9YyhkLGIpO2M9bnVsbD09PWN8fHZvaWQgMD09PWM/YjpuKHt9LGIsYyk7YS5tZW1vaXplZFN0YXRlPWM7MD09PWEuZXhwaXJhdGlvblRpbWUmJihhLnVwZGF0ZVF1ZXVlLmJhc2VTdGF0ZT1jKX1cbnZhciBKZz17aXNNb3VudGVkOmZ1bmN0aW9uKGEpe3JldHVybihhPWEuX3JlYWN0SW50ZXJuYWxGaWJlcik/ZGMoYSk9PT1hOiExfSxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oYSxiLGMpe2E9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZhciBkPUdnKCksZT1EZy5zdXNwZW5zZTtkPUhnKGQsYSxlKTtlPXdnKGQsZSk7ZS5wYXlsb2FkPWI7dm9pZCAwIT09YyYmbnVsbCE9PWMmJihlLmNhbGxiYWNrPWMpO3hnKGEsZSk7SWcoYSxkKX0sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbihhLGIsYyl7YT1hLl9yZWFjdEludGVybmFsRmliZXI7dmFyIGQ9R2coKSxlPURnLnN1c3BlbnNlO2Q9SGcoZCxhLGUpO2U9d2coZCxlKTtlLnRhZz0xO2UucGF5bG9hZD1iO3ZvaWQgMCE9PWMmJm51bGwhPT1jJiYoZS5jYWxsYmFjaz1jKTt4ZyhhLGUpO0lnKGEsZCl9LGVucXVldWVGb3JjZVVwZGF0ZTpmdW5jdGlvbihhLGIpe2E9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZhciBjPUdnKCksZD1EZy5zdXNwZW5zZTtcbmM9SGcoYyxhLGQpO2Q9d2coYyxkKTtkLnRhZz0yO3ZvaWQgMCE9PWImJm51bGwhPT1iJiYoZC5jYWxsYmFjaz1iKTt4ZyhhLGQpO0lnKGEsYyl9fTtmdW5jdGlvbiBLZyhhLGIsYyxkLGUsZixnKXthPWEuc3RhdGVOb2RlO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnNob3VsZENvbXBvbmVudFVwZGF0ZT9hLnNob3VsZENvbXBvbmVudFVwZGF0ZShkLGYsZyk6Yi5wcm90b3R5cGUmJmIucHJvdG90eXBlLmlzUHVyZVJlYWN0Q29tcG9uZW50PyFiZihjLGQpfHwhYmYoZSxmKTohMH1cbmZ1bmN0aW9uIExnKGEsYixjKXt2YXIgZD0hMSxlPUFmO3ZhciBmPWIuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09Zj9mPXNnKGYpOihlPUwoYik/QmY6Si5jdXJyZW50LGQ9Yi5jb250ZXh0VHlwZXMsZj0oZD1udWxsIT09ZCYmdm9pZCAwIT09ZCk/Q2YoYSxlKTpBZik7Yj1uZXcgYihjLGYpO2EubWVtb2l6ZWRTdGF0ZT1udWxsIT09Yi5zdGF0ZSYmdm9pZCAwIT09Yi5zdGF0ZT9iLnN0YXRlOm51bGw7Yi51cGRhdGVyPUpnO2Euc3RhdGVOb2RlPWI7Yi5fcmVhY3RJbnRlcm5hbEZpYmVyPWE7ZCYmKGE9YS5zdGF0ZU5vZGUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PWUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1mKTtyZXR1cm4gYn1cbmZ1bmN0aW9uIE1nKGEsYixjLGQpe2E9Yi5zdGF0ZTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZiLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoYyxkKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmYi5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhjLGQpO2Iuc3RhdGUhPT1hJiZKZy5lbnF1ZXVlUmVwbGFjZVN0YXRlKGIsYi5zdGF0ZSxudWxsKX1cbmZ1bmN0aW9uIE5nKGEsYixjLGQpe3ZhciBlPWEuc3RhdGVOb2RlO2UucHJvcHM9YztlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtlLnJlZnM9RWc7dWcoYSk7dmFyIGY9Yi5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mP2UuY29udGV4dD1zZyhmKTooZj1MKGIpP0JmOkouY3VycmVudCxlLmNvbnRleHQ9Q2YoYSxmKSk7emcoYSxjLGUsZCk7ZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGU7Zj1iLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcztcImZ1bmN0aW9uXCI9PT10eXBlb2YgZiYmKEZnKGEsYixmLGMpLGUuc3RhdGU9YS5tZW1vaXplZFN0YXRlKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHN8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZS5jb21wb25lbnRXaWxsTW91bnR8fFxuKGI9ZS5zdGF0ZSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5jb21wb25lbnRXaWxsTW91bnQmJmUuY29tcG9uZW50V2lsbE1vdW50KCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCksYiE9PWUuc3RhdGUmJkpnLmVucXVldWVSZXBsYWNlU3RhdGUoZSxlLnN0YXRlLG51bGwpLHpnKGEsYyxlLGQpLGUuc3RhdGU9YS5tZW1vaXplZFN0YXRlKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5jb21wb25lbnREaWRNb3VudCYmKGEuZWZmZWN0VGFnfD00KX12YXIgT2c9QXJyYXkuaXNBcnJheTtcbmZ1bmN0aW9uIFBnKGEsYixjKXthPWMucmVmO2lmKG51bGwhPT1hJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmXCJvYmplY3RcIiE9PXR5cGVvZiBhKXtpZihjLl9vd25lcil7Yz1jLl9vd25lcjtpZihjKXtpZigxIT09Yy50YWcpdGhyb3cgRXJyb3IodSgzMDkpKTt2YXIgZD1jLnN0YXRlTm9kZX1pZighZCl0aHJvdyBFcnJvcih1KDE0NyxhKSk7dmFyIGU9XCJcIithO2lmKG51bGwhPT1iJiZudWxsIT09Yi5yZWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBiLnJlZiYmYi5yZWYuX3N0cmluZ1JlZj09PWUpcmV0dXJuIGIucmVmO2I9ZnVuY3Rpb24oYSl7dmFyIGI9ZC5yZWZzO2I9PT1FZyYmKGI9ZC5yZWZzPXt9KTtudWxsPT09YT9kZWxldGUgYltlXTpiW2VdPWF9O2IuX3N0cmluZ1JlZj1lO3JldHVybiBifWlmKFwic3RyaW5nXCIhPT10eXBlb2YgYSl0aHJvdyBFcnJvcih1KDI4NCkpO2lmKCFjLl9vd25lcil0aHJvdyBFcnJvcih1KDI5MCxhKSk7fXJldHVybiBhfVxuZnVuY3Rpb24gUWcoYSxiKXtpZihcInRleHRhcmVhXCIhPT1hLnR5cGUpdGhyb3cgRXJyb3IodSgzMSxcIltvYmplY3QgT2JqZWN0XVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGIpP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYikuam9pbihcIiwgXCIpK1wifVwiOmIsXCJcIikpO31cbmZ1bmN0aW9uIFJnKGEpe2Z1bmN0aW9uIGIoYixjKXtpZihhKXt2YXIgZD1iLmxhc3RFZmZlY3Q7bnVsbCE9PWQ/KGQubmV4dEVmZmVjdD1jLGIubGFzdEVmZmVjdD1jKTpiLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1jO2MubmV4dEVmZmVjdD1udWxsO2MuZWZmZWN0VGFnPTh9fWZ1bmN0aW9uIGMoYyxkKXtpZighYSlyZXR1cm4gbnVsbDtmb3IoO251bGwhPT1kOyliKGMsZCksZD1kLnNpYmxpbmc7cmV0dXJuIG51bGx9ZnVuY3Rpb24gZChhLGIpe2ZvcihhPW5ldyBNYXA7bnVsbCE9PWI7KW51bGwhPT1iLmtleT9hLnNldChiLmtleSxiKTphLnNldChiLmluZGV4LGIpLGI9Yi5zaWJsaW5nO3JldHVybiBhfWZ1bmN0aW9uIGUoYSxiKXthPVNnKGEsYik7YS5pbmRleD0wO2Euc2libGluZz1udWxsO3JldHVybiBhfWZ1bmN0aW9uIGYoYixjLGQpe2IuaW5kZXg9ZDtpZighYSlyZXR1cm4gYztkPWIuYWx0ZXJuYXRlO2lmKG51bGwhPT1kKXJldHVybiBkPWQuaW5kZXgsZDxjPyhiLmVmZmVjdFRhZz1cbjIsYyk6ZDtiLmVmZmVjdFRhZz0yO3JldHVybiBjfWZ1bmN0aW9uIGcoYil7YSYmbnVsbD09PWIuYWx0ZXJuYXRlJiYoYi5lZmZlY3RUYWc9Mik7cmV0dXJuIGJ9ZnVuY3Rpb24gaChhLGIsYyxkKXtpZihudWxsPT09Ynx8NiE9PWIudGFnKXJldHVybiBiPVRnKGMsYS5tb2RlLGQpLGIucmV0dXJuPWEsYjtiPWUoYixjKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIGsoYSxiLGMsZCl7aWYobnVsbCE9PWImJmIuZWxlbWVudFR5cGU9PT1jLnR5cGUpcmV0dXJuIGQ9ZShiLGMucHJvcHMpLGQucmVmPVBnKGEsYixjKSxkLnJldHVybj1hLGQ7ZD1VZyhjLnR5cGUsYy5rZXksYy5wcm9wcyxudWxsLGEubW9kZSxkKTtkLnJlZj1QZyhhLGIsYyk7ZC5yZXR1cm49YTtyZXR1cm4gZH1mdW5jdGlvbiBsKGEsYixjLGQpe2lmKG51bGw9PT1ifHw0IT09Yi50YWd8fGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8hPT1jLmNvbnRhaW5lckluZm98fGIuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uIT09XG5jLmltcGxlbWVudGF0aW9uKXJldHVybiBiPVZnKGMsYS5tb2RlLGQpLGIucmV0dXJuPWEsYjtiPWUoYixjLmNoaWxkcmVufHxbXSk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBtKGEsYixjLGQsZil7aWYobnVsbD09PWJ8fDchPT1iLnRhZylyZXR1cm4gYj1XZyhjLGEubW9kZSxkLGYpLGIucmV0dXJuPWEsYjtiPWUoYixjKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIHAoYSxiLGMpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYnx8XCJudW1iZXJcIj09PXR5cGVvZiBiKXJldHVybiBiPVRnKFwiXCIrYixhLm1vZGUsYyksYi5yZXR1cm49YSxiO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYiYmbnVsbCE9PWIpe3N3aXRjaChiLiQkdHlwZW9mKXtjYXNlIFphOnJldHVybiBjPVVnKGIudHlwZSxiLmtleSxiLnByb3BzLG51bGwsYS5tb2RlLGMpLGMucmVmPVBnKGEsbnVsbCxiKSxjLnJldHVybj1hLGM7Y2FzZSAkYTpyZXR1cm4gYj1WZyhiLGEubW9kZSxjKSxiLnJldHVybj1hLGJ9aWYoT2coYil8fFxubmIoYikpcmV0dXJuIGI9V2coYixhLm1vZGUsYyxudWxsKSxiLnJldHVybj1hLGI7UWcoYSxiKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiB4KGEsYixjLGQpe3ZhciBlPW51bGwhPT1iP2Iua2V5Om51bGw7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBjfHxcIm51bWJlclwiPT09dHlwZW9mIGMpcmV0dXJuIG51bGwhPT1lP251bGw6aChhLGIsXCJcIitjLGQpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYyYmbnVsbCE9PWMpe3N3aXRjaChjLiQkdHlwZW9mKXtjYXNlIFphOnJldHVybiBjLmtleT09PWU/Yy50eXBlPT09YWI/bShhLGIsYy5wcm9wcy5jaGlsZHJlbixkLGUpOmsoYSxiLGMsZCk6bnVsbDtjYXNlICRhOnJldHVybiBjLmtleT09PWU/bChhLGIsYyxkKTpudWxsfWlmKE9nKGMpfHxuYihjKSlyZXR1cm4gbnVsbCE9PWU/bnVsbDptKGEsYixjLGQsbnVsbCk7UWcoYSxjKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiB6KGEsYixjLGQsZSl7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBkfHxcIm51bWJlclwiPT09dHlwZW9mIGQpcmV0dXJuIGE9XG5hLmdldChjKXx8bnVsbCxoKGIsYSxcIlwiK2QsZSk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBkJiZudWxsIT09ZCl7c3dpdGNoKGQuJCR0eXBlb2Ype2Nhc2UgWmE6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLGQudHlwZT09PWFiP20oYixhLGQucHJvcHMuY2hpbGRyZW4sZSxkLmtleSk6ayhiLGEsZCxlKTtjYXNlICRhOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxsKGIsYSxkLGUpfWlmKE9nKGQpfHxuYihkKSlyZXR1cm4gYT1hLmdldChjKXx8bnVsbCxtKGIsYSxkLGUsbnVsbCk7UWcoYixkKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBjYShlLGcsaCxrKXtmb3IodmFyIGw9bnVsbCx0PW51bGwsbT1nLHk9Zz0wLEE9bnVsbDtudWxsIT09bSYmeTxoLmxlbmd0aDt5Kyspe20uaW5kZXg+eT8oQT1tLG09bnVsbCk6QT1tLnNpYmxpbmc7dmFyIHE9eChlLG0saFt5XSxrKTtpZihudWxsPT09cSl7bnVsbD09PW0mJihtPUEpO2JyZWFrfWEmJlxubSYmbnVsbD09PXEuYWx0ZXJuYXRlJiZiKGUsbSk7Zz1mKHEsZyx5KTtudWxsPT09dD9sPXE6dC5zaWJsaW5nPXE7dD1xO209QX1pZih5PT09aC5sZW5ndGgpcmV0dXJuIGMoZSxtKSxsO2lmKG51bGw9PT1tKXtmb3IoO3k8aC5sZW5ndGg7eSsrKW09cChlLGhbeV0sayksbnVsbCE9PW0mJihnPWYobSxnLHkpLG51bGw9PT10P2w9bTp0LnNpYmxpbmc9bSx0PW0pO3JldHVybiBsfWZvcihtPWQoZSxtKTt5PGgubGVuZ3RoO3krKylBPXoobSxlLHksaFt5XSxrKSxudWxsIT09QSYmKGEmJm51bGwhPT1BLmFsdGVybmF0ZSYmbS5kZWxldGUobnVsbD09PUEua2V5P3k6QS5rZXkpLGc9ZihBLGcseSksbnVsbD09PXQ/bD1BOnQuc2libGluZz1BLHQ9QSk7YSYmbS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtyZXR1cm4gbH1mdW5jdGlvbiBEKGUsZyxoLGwpe3ZhciBrPW5iKGgpO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBrKXRocm93IEVycm9yKHUoMTUwKSk7aD1rLmNhbGwoaCk7XG5pZihudWxsPT1oKXRocm93IEVycm9yKHUoMTUxKSk7Zm9yKHZhciBtPWs9bnVsbCx0PWcseT1nPTAsQT1udWxsLHE9aC5uZXh0KCk7bnVsbCE9PXQmJiFxLmRvbmU7eSsrLHE9aC5uZXh0KCkpe3QuaW5kZXg+eT8oQT10LHQ9bnVsbCk6QT10LnNpYmxpbmc7dmFyIEQ9eChlLHQscS52YWx1ZSxsKTtpZihudWxsPT09RCl7bnVsbD09PXQmJih0PUEpO2JyZWFrfWEmJnQmJm51bGw9PT1ELmFsdGVybmF0ZSYmYihlLHQpO2c9ZihELGcseSk7bnVsbD09PW0/az1EOm0uc2libGluZz1EO209RDt0PUF9aWYocS5kb25lKXJldHVybiBjKGUsdCksaztpZihudWxsPT09dCl7Zm9yKDshcS5kb25lO3krKyxxPWgubmV4dCgpKXE9cChlLHEudmFsdWUsbCksbnVsbCE9PXEmJihnPWYocSxnLHkpLG51bGw9PT1tP2s9cTptLnNpYmxpbmc9cSxtPXEpO3JldHVybiBrfWZvcih0PWQoZSx0KTshcS5kb25lO3krKyxxPWgubmV4dCgpKXE9eih0LGUseSxxLnZhbHVlLGwpLG51bGwhPT1xJiYoYSYmbnVsbCE9PVxucS5hbHRlcm5hdGUmJnQuZGVsZXRlKG51bGw9PT1xLmtleT95OnEua2V5KSxnPWYocSxnLHkpLG51bGw9PT1tP2s9cTptLnNpYmxpbmc9cSxtPXEpO2EmJnQuZm9yRWFjaChmdW5jdGlvbihhKXtyZXR1cm4gYihlLGEpfSk7cmV0dXJuIGt9cmV0dXJuIGZ1bmN0aW9uKGEsZCxmLGgpe3ZhciBrPVwib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWYmJmYudHlwZT09PWFiJiZudWxsPT09Zi5rZXk7ayYmKGY9Zi5wcm9wcy5jaGlsZHJlbik7dmFyIGw9XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZjtpZihsKXN3aXRjaChmLiQkdHlwZW9mKXtjYXNlIFphOmE6e2w9Zi5rZXk7Zm9yKGs9ZDtudWxsIT09azspe2lmKGsua2V5PT09bCl7c3dpdGNoKGsudGFnKXtjYXNlIDc6aWYoZi50eXBlPT09YWIpe2MoYSxrLnNpYmxpbmcpO2Q9ZShrLGYucHJvcHMuY2hpbGRyZW4pO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9YnJlYWs7ZGVmYXVsdDppZihrLmVsZW1lbnRUeXBlPT09Zi50eXBlKXtjKGEsXG5rLnNpYmxpbmcpO2Q9ZShrLGYucHJvcHMpO2QucmVmPVBnKGEsayxmKTtkLnJldHVybj1hO2E9ZDticmVhayBhfX1jKGEsayk7YnJlYWt9ZWxzZSBiKGEsayk7az1rLnNpYmxpbmd9Zi50eXBlPT09YWI/KGQ9V2coZi5wcm9wcy5jaGlsZHJlbixhLm1vZGUsaCxmLmtleSksZC5yZXR1cm49YSxhPWQpOihoPVVnKGYudHlwZSxmLmtleSxmLnByb3BzLG51bGwsYS5tb2RlLGgpLGgucmVmPVBnKGEsZCxmKSxoLnJldHVybj1hLGE9aCl9cmV0dXJuIGcoYSk7Y2FzZSAkYTphOntmb3Ioaz1mLmtleTtudWxsIT09ZDspe2lmKGQua2V5PT09aylpZig0PT09ZC50YWcmJmQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm89PT1mLmNvbnRhaW5lckluZm8mJmQuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uPT09Zi5pbXBsZW1lbnRhdGlvbil7YyhhLGQuc2libGluZyk7ZD1lKGQsZi5jaGlsZHJlbnx8W10pO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9ZWxzZXtjKGEsZCk7YnJlYWt9ZWxzZSBiKGEsZCk7ZD1cbmQuc2libGluZ31kPVZnKGYsYS5tb2RlLGgpO2QucmV0dXJuPWE7YT1kfXJldHVybiBnKGEpfWlmKFwic3RyaW5nXCI9PT10eXBlb2YgZnx8XCJudW1iZXJcIj09PXR5cGVvZiBmKXJldHVybiBmPVwiXCIrZixudWxsIT09ZCYmNj09PWQudGFnPyhjKGEsZC5zaWJsaW5nKSxkPWUoZCxmKSxkLnJldHVybj1hLGE9ZCk6KGMoYSxkKSxkPVRnKGYsYS5tb2RlLGgpLGQucmV0dXJuPWEsYT1kKSxnKGEpO2lmKE9nKGYpKXJldHVybiBjYShhLGQsZixoKTtpZihuYihmKSlyZXR1cm4gRChhLGQsZixoKTtsJiZRZyhhLGYpO2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgZiYmIWspc3dpdGNoKGEudGFnKXtjYXNlIDE6Y2FzZSAwOnRocm93IGE9YS50eXBlLEVycm9yKHUoMTUyLGEuZGlzcGxheU5hbWV8fGEubmFtZXx8XCJDb21wb25lbnRcIikpO31yZXR1cm4gYyhhLGQpfX12YXIgWGc9UmcoITApLFlnPVJnKCExKSxaZz17fSwkZz17Y3VycmVudDpaZ30sYWg9e2N1cnJlbnQ6Wmd9LGJoPXtjdXJyZW50OlpnfTtcbmZ1bmN0aW9uIGNoKGEpe2lmKGE9PT1aZyl0aHJvdyBFcnJvcih1KDE3NCkpO3JldHVybiBhfWZ1bmN0aW9uIGRoKGEsYil7SShiaCxiKTtJKGFoLGEpO0koJGcsWmcpO2E9Yi5ub2RlVHlwZTtzd2l0Y2goYSl7Y2FzZSA5OmNhc2UgMTE6Yj0oYj1iLmRvY3VtZW50RWxlbWVudCk/Yi5uYW1lc3BhY2VVUkk6T2IobnVsbCxcIlwiKTticmVhaztkZWZhdWx0OmE9OD09PWE/Yi5wYXJlbnROb2RlOmIsYj1hLm5hbWVzcGFjZVVSSXx8bnVsbCxhPWEudGFnTmFtZSxiPU9iKGIsYSl9SCgkZyk7SSgkZyxiKX1mdW5jdGlvbiBlaCgpe0goJGcpO0goYWgpO0goYmgpfWZ1bmN0aW9uIGZoKGEpe2NoKGJoLmN1cnJlbnQpO3ZhciBiPWNoKCRnLmN1cnJlbnQpO3ZhciBjPU9iKGIsYS50eXBlKTtiIT09YyYmKEkoYWgsYSksSSgkZyxjKSl9ZnVuY3Rpb24gZ2goYSl7YWguY3VycmVudD09PWEmJihIKCRnKSxIKGFoKSl9dmFyIE09e2N1cnJlbnQ6MH07XG5mdW5jdGlvbiBoaChhKXtmb3IodmFyIGI9YTtudWxsIT09Yjspe2lmKDEzPT09Yi50YWcpe3ZhciBjPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09YyYmKGM9Yy5kZWh5ZHJhdGVkLG51bGw9PT1jfHxjLmRhdGE9PT1CZHx8Yy5kYXRhPT09Q2QpKXJldHVybiBifWVsc2UgaWYoMTk9PT1iLnRhZyYmdm9pZCAwIT09Yi5tZW1vaXplZFByb3BzLnJldmVhbE9yZGVyKXtpZigwIT09KGIuZWZmZWN0VGFnJjY0KSlyZXR1cm4gYn1lbHNlIGlmKG51bGwhPT1iLmNoaWxkKXtiLmNoaWxkLnJldHVybj1iO2I9Yi5jaGlsZDtjb250aW51ZX1pZihiPT09YSlicmVhaztmb3IoO251bGw9PT1iLnNpYmxpbmc7KXtpZihudWxsPT09Yi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm4gbnVsbDtiPWIucmV0dXJufWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9cmV0dXJuIG51bGx9ZnVuY3Rpb24gaWgoYSxiKXtyZXR1cm57cmVzcG9uZGVyOmEscHJvcHM6Yn19XG52YXIgamg9V2EuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcixraD1XYS5SZWFjdEN1cnJlbnRCYXRjaENvbmZpZyxsaD0wLE49bnVsbCxPPW51bGwsUD1udWxsLG1oPSExO2Z1bmN0aW9uIFEoKXt0aHJvdyBFcnJvcih1KDMyMSkpO31mdW5jdGlvbiBuaChhLGIpe2lmKG51bGw9PT1iKXJldHVybiExO2Zvcih2YXIgYz0wO2M8Yi5sZW5ndGgmJmM8YS5sZW5ndGg7YysrKWlmKCEkZShhW2NdLGJbY10pKXJldHVybiExO3JldHVybiEwfVxuZnVuY3Rpb24gb2goYSxiLGMsZCxlLGYpe2xoPWY7Tj1iO2IubWVtb2l6ZWRTdGF0ZT1udWxsO2IudXBkYXRlUXVldWU9bnVsbDtiLmV4cGlyYXRpb25UaW1lPTA7amguY3VycmVudD1udWxsPT09YXx8bnVsbD09PWEubWVtb2l6ZWRTdGF0ZT9waDpxaDthPWMoZCxlKTtpZihiLmV4cGlyYXRpb25UaW1lPT09bGgpe2Y9MDtkb3tiLmV4cGlyYXRpb25UaW1lPTA7aWYoISgyNT5mKSl0aHJvdyBFcnJvcih1KDMwMSkpO2YrPTE7UD1PPW51bGw7Yi51cGRhdGVRdWV1ZT1udWxsO2poLmN1cnJlbnQ9cmg7YT1jKGQsZSl9d2hpbGUoYi5leHBpcmF0aW9uVGltZT09PWxoKX1qaC5jdXJyZW50PXNoO2I9bnVsbCE9PU8mJm51bGwhPT1PLm5leHQ7bGg9MDtQPU89Tj1udWxsO21oPSExO2lmKGIpdGhyb3cgRXJyb3IodSgzMDApKTtyZXR1cm4gYX1cbmZ1bmN0aW9uIHRoKCl7dmFyIGE9e21lbW9pemVkU3RhdGU6bnVsbCxiYXNlU3RhdGU6bnVsbCxiYXNlUXVldWU6bnVsbCxxdWV1ZTpudWxsLG5leHQ6bnVsbH07bnVsbD09PVA/Ti5tZW1vaXplZFN0YXRlPVA9YTpQPVAubmV4dD1hO3JldHVybiBQfWZ1bmN0aW9uIHVoKCl7aWYobnVsbD09PU8pe3ZhciBhPU4uYWx0ZXJuYXRlO2E9bnVsbCE9PWE/YS5tZW1vaXplZFN0YXRlOm51bGx9ZWxzZSBhPU8ubmV4dDt2YXIgYj1udWxsPT09UD9OLm1lbW9pemVkU3RhdGU6UC5uZXh0O2lmKG51bGwhPT1iKVA9YixPPWE7ZWxzZXtpZihudWxsPT09YSl0aHJvdyBFcnJvcih1KDMxMCkpO089YTthPXttZW1vaXplZFN0YXRlOk8ubWVtb2l6ZWRTdGF0ZSxiYXNlU3RhdGU6Ty5iYXNlU3RhdGUsYmFzZVF1ZXVlOk8uYmFzZVF1ZXVlLHF1ZXVlOk8ucXVldWUsbmV4dDpudWxsfTtudWxsPT09UD9OLm1lbW9pemVkU3RhdGU9UD1hOlA9UC5uZXh0PWF9cmV0dXJuIFB9XG5mdW5jdGlvbiB2aChhLGIpe3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBiP2IoYSk6Yn1cbmZ1bmN0aW9uIHdoKGEpe3ZhciBiPXVoKCksYz1iLnF1ZXVlO2lmKG51bGw9PT1jKXRocm93IEVycm9yKHUoMzExKSk7Yy5sYXN0UmVuZGVyZWRSZWR1Y2VyPWE7dmFyIGQ9TyxlPWQuYmFzZVF1ZXVlLGY9Yy5wZW5kaW5nO2lmKG51bGwhPT1mKXtpZihudWxsIT09ZSl7dmFyIGc9ZS5uZXh0O2UubmV4dD1mLm5leHQ7Zi5uZXh0PWd9ZC5iYXNlUXVldWU9ZT1mO2MucGVuZGluZz1udWxsfWlmKG51bGwhPT1lKXtlPWUubmV4dDtkPWQuYmFzZVN0YXRlO3ZhciBoPWc9Zj1udWxsLGs9ZTtkb3t2YXIgbD1rLmV4cGlyYXRpb25UaW1lO2lmKGw8bGgpe3ZhciBtPXtleHBpcmF0aW9uVGltZTprLmV4cGlyYXRpb25UaW1lLHN1c3BlbnNlQ29uZmlnOmsuc3VzcGVuc2VDb25maWcsYWN0aW9uOmsuYWN0aW9uLGVhZ2VyUmVkdWNlcjprLmVhZ2VyUmVkdWNlcixlYWdlclN0YXRlOmsuZWFnZXJTdGF0ZSxuZXh0Om51bGx9O251bGw9PT1oPyhnPWg9bSxmPWQpOmg9aC5uZXh0PW07bD5OLmV4cGlyYXRpb25UaW1lJiZcbihOLmV4cGlyYXRpb25UaW1lPWwsQmcobCkpfWVsc2UgbnVsbCE9PWgmJihoPWgubmV4dD17ZXhwaXJhdGlvblRpbWU6MTA3Mzc0MTgyMyxzdXNwZW5zZUNvbmZpZzprLnN1c3BlbnNlQ29uZmlnLGFjdGlvbjprLmFjdGlvbixlYWdlclJlZHVjZXI6ay5lYWdlclJlZHVjZXIsZWFnZXJTdGF0ZTprLmVhZ2VyU3RhdGUsbmV4dDpudWxsfSksQWcobCxrLnN1c3BlbnNlQ29uZmlnKSxkPWsuZWFnZXJSZWR1Y2VyPT09YT9rLmVhZ2VyU3RhdGU6YShkLGsuYWN0aW9uKTtrPWsubmV4dH13aGlsZShudWxsIT09ayYmayE9PWUpO251bGw9PT1oP2Y9ZDpoLm5leHQ9ZzskZShkLGIubWVtb2l6ZWRTdGF0ZSl8fChyZz0hMCk7Yi5tZW1vaXplZFN0YXRlPWQ7Yi5iYXNlU3RhdGU9ZjtiLmJhc2VRdWV1ZT1oO2MubGFzdFJlbmRlcmVkU3RhdGU9ZH1yZXR1cm5bYi5tZW1vaXplZFN0YXRlLGMuZGlzcGF0Y2hdfVxuZnVuY3Rpb24geGgoYSl7dmFyIGI9dWgoKSxjPWIucXVldWU7aWYobnVsbD09PWMpdGhyb3cgRXJyb3IodSgzMTEpKTtjLmxhc3RSZW5kZXJlZFJlZHVjZXI9YTt2YXIgZD1jLmRpc3BhdGNoLGU9Yy5wZW5kaW5nLGY9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1lKXtjLnBlbmRpbmc9bnVsbDt2YXIgZz1lPWUubmV4dDtkbyBmPWEoZixnLmFjdGlvbiksZz1nLm5leHQ7d2hpbGUoZyE9PWUpOyRlKGYsYi5tZW1vaXplZFN0YXRlKXx8KHJnPSEwKTtiLm1lbW9pemVkU3RhdGU9ZjtudWxsPT09Yi5iYXNlUXVldWUmJihiLmJhc2VTdGF0ZT1mKTtjLmxhc3RSZW5kZXJlZFN0YXRlPWZ9cmV0dXJuW2YsZF19XG5mdW5jdGlvbiB5aChhKXt2YXIgYj10aCgpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBhJiYoYT1hKCkpO2IubWVtb2l6ZWRTdGF0ZT1iLmJhc2VTdGF0ZT1hO2E9Yi5xdWV1ZT17cGVuZGluZzpudWxsLGRpc3BhdGNoOm51bGwsbGFzdFJlbmRlcmVkUmVkdWNlcjp2aCxsYXN0UmVuZGVyZWRTdGF0ZTphfTthPWEuZGlzcGF0Y2g9emguYmluZChudWxsLE4sYSk7cmV0dXJuW2IubWVtb2l6ZWRTdGF0ZSxhXX1mdW5jdGlvbiBBaChhLGIsYyxkKXthPXt0YWc6YSxjcmVhdGU6YixkZXN0cm95OmMsZGVwczpkLG5leHQ6bnVsbH07Yj1OLnVwZGF0ZVF1ZXVlO251bGw9PT1iPyhiPXtsYXN0RWZmZWN0Om51bGx9LE4udXBkYXRlUXVldWU9YixiLmxhc3RFZmZlY3Q9YS5uZXh0PWEpOihjPWIubGFzdEVmZmVjdCxudWxsPT09Yz9iLmxhc3RFZmZlY3Q9YS5uZXh0PWE6KGQ9Yy5uZXh0LGMubmV4dD1hLGEubmV4dD1kLGIubGFzdEVmZmVjdD1hKSk7cmV0dXJuIGF9XG5mdW5jdGlvbiBCaCgpe3JldHVybiB1aCgpLm1lbW9pemVkU3RhdGV9ZnVuY3Rpb24gQ2goYSxiLGMsZCl7dmFyIGU9dGgoKTtOLmVmZmVjdFRhZ3w9YTtlLm1lbW9pemVkU3RhdGU9QWgoMXxiLGMsdm9pZCAwLHZvaWQgMD09PWQ/bnVsbDpkKX1mdW5jdGlvbiBEaChhLGIsYyxkKXt2YXIgZT11aCgpO2Q9dm9pZCAwPT09ZD9udWxsOmQ7dmFyIGY9dm9pZCAwO2lmKG51bGwhPT1PKXt2YXIgZz1PLm1lbW9pemVkU3RhdGU7Zj1nLmRlc3Ryb3k7aWYobnVsbCE9PWQmJm5oKGQsZy5kZXBzKSl7QWgoYixjLGYsZCk7cmV0dXJufX1OLmVmZmVjdFRhZ3w9YTtlLm1lbW9pemVkU3RhdGU9QWgoMXxiLGMsZixkKX1mdW5jdGlvbiBFaChhLGIpe3JldHVybiBDaCg1MTYsNCxhLGIpfWZ1bmN0aW9uIEZoKGEsYil7cmV0dXJuIERoKDUxNiw0LGEsYil9ZnVuY3Rpb24gR2goYSxiKXtyZXR1cm4gRGgoNCwyLGEsYil9XG5mdW5jdGlvbiBIaChhLGIpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiKXJldHVybiBhPWEoKSxiKGEpLGZ1bmN0aW9uKCl7YihudWxsKX07aWYobnVsbCE9PWImJnZvaWQgMCE9PWIpcmV0dXJuIGE9YSgpLGIuY3VycmVudD1hLGZ1bmN0aW9uKCl7Yi5jdXJyZW50PW51bGx9fWZ1bmN0aW9uIEloKGEsYixjKXtjPW51bGwhPT1jJiZ2b2lkIDAhPT1jP2MuY29uY2F0KFthXSk6bnVsbDtyZXR1cm4gRGgoNCwyLEhoLmJpbmQobnVsbCxiLGEpLGMpfWZ1bmN0aW9uIEpoKCl7fWZ1bmN0aW9uIEtoKGEsYil7dGgoKS5tZW1vaXplZFN0YXRlPVthLHZvaWQgMD09PWI/bnVsbDpiXTtyZXR1cm4gYX1mdW5jdGlvbiBMaChhLGIpe3ZhciBjPXVoKCk7Yj12b2lkIDA9PT1iP251bGw6Yjt2YXIgZD1jLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWQmJm51bGwhPT1iJiZuaChiLGRbMV0pKXJldHVybiBkWzBdO2MubWVtb2l6ZWRTdGF0ZT1bYSxiXTtyZXR1cm4gYX1cbmZ1bmN0aW9uIE1oKGEsYil7dmFyIGM9dWgoKTtiPXZvaWQgMD09PWI/bnVsbDpiO3ZhciBkPWMubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZCYmbnVsbCE9PWImJm5oKGIsZFsxXSkpcmV0dXJuIGRbMF07YT1hKCk7Yy5tZW1vaXplZFN0YXRlPVthLGJdO3JldHVybiBhfWZ1bmN0aW9uIE5oKGEsYixjKXt2YXIgZD1hZygpO2NnKDk4PmQ/OTg6ZCxmdW5jdGlvbigpe2EoITApfSk7Y2coOTc8ZD85NzpkLGZ1bmN0aW9uKCl7dmFyIGQ9a2guc3VzcGVuc2U7a2guc3VzcGVuc2U9dm9pZCAwPT09Yj9udWxsOmI7dHJ5e2EoITEpLGMoKX1maW5hbGx5e2toLnN1c3BlbnNlPWR9fSl9XG5mdW5jdGlvbiB6aChhLGIsYyl7dmFyIGQ9R2coKSxlPURnLnN1c3BlbnNlO2Q9SGcoZCxhLGUpO2U9e2V4cGlyYXRpb25UaW1lOmQsc3VzcGVuc2VDb25maWc6ZSxhY3Rpb246YyxlYWdlclJlZHVjZXI6bnVsbCxlYWdlclN0YXRlOm51bGwsbmV4dDpudWxsfTt2YXIgZj1iLnBlbmRpbmc7bnVsbD09PWY/ZS5uZXh0PWU6KGUubmV4dD1mLm5leHQsZi5uZXh0PWUpO2IucGVuZGluZz1lO2Y9YS5hbHRlcm5hdGU7aWYoYT09PU58fG51bGwhPT1mJiZmPT09TiltaD0hMCxlLmV4cGlyYXRpb25UaW1lPWxoLE4uZXhwaXJhdGlvblRpbWU9bGg7ZWxzZXtpZigwPT09YS5leHBpcmF0aW9uVGltZSYmKG51bGw9PT1mfHwwPT09Zi5leHBpcmF0aW9uVGltZSkmJihmPWIubGFzdFJlbmRlcmVkUmVkdWNlcixudWxsIT09ZikpdHJ5e3ZhciBnPWIubGFzdFJlbmRlcmVkU3RhdGUsaD1mKGcsYyk7ZS5lYWdlclJlZHVjZXI9ZjtlLmVhZ2VyU3RhdGU9aDtpZigkZShoLGcpKXJldHVybn1jYXRjaChrKXt9ZmluYWxseXt9SWcoYSxcbmQpfX1cbnZhciBzaD17cmVhZENvbnRleHQ6c2csdXNlQ2FsbGJhY2s6USx1c2VDb250ZXh0OlEsdXNlRWZmZWN0OlEsdXNlSW1wZXJhdGl2ZUhhbmRsZTpRLHVzZUxheW91dEVmZmVjdDpRLHVzZU1lbW86USx1c2VSZWR1Y2VyOlEsdXNlUmVmOlEsdXNlU3RhdGU6USx1c2VEZWJ1Z1ZhbHVlOlEsdXNlUmVzcG9uZGVyOlEsdXNlRGVmZXJyZWRWYWx1ZTpRLHVzZVRyYW5zaXRpb246UX0scGg9e3JlYWRDb250ZXh0OnNnLHVzZUNhbGxiYWNrOktoLHVzZUNvbnRleHQ6c2csdXNlRWZmZWN0OkVoLHVzZUltcGVyYXRpdmVIYW5kbGU6ZnVuY3Rpb24oYSxiLGMpe2M9bnVsbCE9PWMmJnZvaWQgMCE9PWM/Yy5jb25jYXQoW2FdKTpudWxsO3JldHVybiBDaCg0LDIsSGguYmluZChudWxsLGIsYSksYyl9LHVzZUxheW91dEVmZmVjdDpmdW5jdGlvbihhLGIpe3JldHVybiBDaCg0LDIsYSxiKX0sdXNlTWVtbzpmdW5jdGlvbihhLGIpe3ZhciBjPXRoKCk7Yj12b2lkIDA9PT1iP251bGw6YjthPWEoKTtjLm1lbW9pemVkU3RhdGU9W2EsXG5iXTtyZXR1cm4gYX0sdXNlUmVkdWNlcjpmdW5jdGlvbihhLGIsYyl7dmFyIGQ9dGgoKTtiPXZvaWQgMCE9PWM/YyhiKTpiO2QubWVtb2l6ZWRTdGF0ZT1kLmJhc2VTdGF0ZT1iO2E9ZC5xdWV1ZT17cGVuZGluZzpudWxsLGRpc3BhdGNoOm51bGwsbGFzdFJlbmRlcmVkUmVkdWNlcjphLGxhc3RSZW5kZXJlZFN0YXRlOmJ9O2E9YS5kaXNwYXRjaD16aC5iaW5kKG51bGwsTixhKTtyZXR1cm5bZC5tZW1vaXplZFN0YXRlLGFdfSx1c2VSZWY6ZnVuY3Rpb24oYSl7dmFyIGI9dGgoKTthPXtjdXJyZW50OmF9O3JldHVybiBiLm1lbW9pemVkU3RhdGU9YX0sdXNlU3RhdGU6eWgsdXNlRGVidWdWYWx1ZTpKaCx1c2VSZXNwb25kZXI6aWgsdXNlRGVmZXJyZWRWYWx1ZTpmdW5jdGlvbihhLGIpe3ZhciBjPXloKGEpLGQ9Y1swXSxlPWNbMV07RWgoZnVuY3Rpb24oKXt2YXIgYz1raC5zdXNwZW5zZTtraC5zdXNwZW5zZT12b2lkIDA9PT1iP251bGw6Yjt0cnl7ZShhKX1maW5hbGx5e2toLnN1c3BlbnNlPVxuY319LFthLGJdKTtyZXR1cm4gZH0sdXNlVHJhbnNpdGlvbjpmdW5jdGlvbihhKXt2YXIgYj15aCghMSksYz1iWzBdO2I9YlsxXTtyZXR1cm5bS2goTmguYmluZChudWxsLGIsYSksW2IsYV0pLGNdfX0scWg9e3JlYWRDb250ZXh0OnNnLHVzZUNhbGxiYWNrOkxoLHVzZUNvbnRleHQ6c2csdXNlRWZmZWN0OkZoLHVzZUltcGVyYXRpdmVIYW5kbGU6SWgsdXNlTGF5b3V0RWZmZWN0OkdoLHVzZU1lbW86TWgsdXNlUmVkdWNlcjp3aCx1c2VSZWY6QmgsdXNlU3RhdGU6ZnVuY3Rpb24oKXtyZXR1cm4gd2godmgpfSx1c2VEZWJ1Z1ZhbHVlOkpoLHVzZVJlc3BvbmRlcjppaCx1c2VEZWZlcnJlZFZhbHVlOmZ1bmN0aW9uKGEsYil7dmFyIGM9d2godmgpLGQ9Y1swXSxlPWNbMV07RmgoZnVuY3Rpb24oKXt2YXIgYz1raC5zdXNwZW5zZTtraC5zdXNwZW5zZT12b2lkIDA9PT1iP251bGw6Yjt0cnl7ZShhKX1maW5hbGx5e2toLnN1c3BlbnNlPWN9fSxbYSxiXSk7cmV0dXJuIGR9LHVzZVRyYW5zaXRpb246ZnVuY3Rpb24oYSl7dmFyIGI9XG53aCh2aCksYz1iWzBdO2I9YlsxXTtyZXR1cm5bTGgoTmguYmluZChudWxsLGIsYSksW2IsYV0pLGNdfX0scmg9e3JlYWRDb250ZXh0OnNnLHVzZUNhbGxiYWNrOkxoLHVzZUNvbnRleHQ6c2csdXNlRWZmZWN0OkZoLHVzZUltcGVyYXRpdmVIYW5kbGU6SWgsdXNlTGF5b3V0RWZmZWN0OkdoLHVzZU1lbW86TWgsdXNlUmVkdWNlcjp4aCx1c2VSZWY6QmgsdXNlU3RhdGU6ZnVuY3Rpb24oKXtyZXR1cm4geGgodmgpfSx1c2VEZWJ1Z1ZhbHVlOkpoLHVzZVJlc3BvbmRlcjppaCx1c2VEZWZlcnJlZFZhbHVlOmZ1bmN0aW9uKGEsYil7dmFyIGM9eGgodmgpLGQ9Y1swXSxlPWNbMV07RmgoZnVuY3Rpb24oKXt2YXIgYz1raC5zdXNwZW5zZTtraC5zdXNwZW5zZT12b2lkIDA9PT1iP251bGw6Yjt0cnl7ZShhKX1maW5hbGx5e2toLnN1c3BlbnNlPWN9fSxbYSxiXSk7cmV0dXJuIGR9LHVzZVRyYW5zaXRpb246ZnVuY3Rpb24oYSl7dmFyIGI9eGgodmgpLGM9YlswXTtiPWJbMV07cmV0dXJuW0xoKE5oLmJpbmQobnVsbCxcbmIsYSksW2IsYV0pLGNdfX0sT2g9bnVsbCxQaD1udWxsLFFoPSExO2Z1bmN0aW9uIFJoKGEsYil7dmFyIGM9U2goNSxudWxsLG51bGwsMCk7Yy5lbGVtZW50VHlwZT1cIkRFTEVURURcIjtjLnR5cGU9XCJERUxFVEVEXCI7Yy5zdGF0ZU5vZGU9YjtjLnJldHVybj1hO2MuZWZmZWN0VGFnPTg7bnVsbCE9PWEubGFzdEVmZmVjdD8oYS5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YyxhLmxhc3RFZmZlY3Q9Yyk6YS5maXJzdEVmZmVjdD1hLmxhc3RFZmZlY3Q9Y31cbmZ1bmN0aW9uIFRoKGEsYil7c3dpdGNoKGEudGFnKXtjYXNlIDU6dmFyIGM9YS50eXBlO2I9MSE9PWIubm9kZVR5cGV8fGMudG9Mb3dlckNhc2UoKSE9PWIubm9kZU5hbWUudG9Mb3dlckNhc2UoKT9udWxsOmI7cmV0dXJuIG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLCEwKTohMTtjYXNlIDY6cmV0dXJuIGI9XCJcIj09PWEucGVuZGluZ1Byb3BzfHwzIT09Yi5ub2RlVHlwZT9udWxsOmIsbnVsbCE9PWI/KGEuc3RhdGVOb2RlPWIsITApOiExO2Nhc2UgMTM6cmV0dXJuITE7ZGVmYXVsdDpyZXR1cm4hMX19XG5mdW5jdGlvbiBVaChhKXtpZihRaCl7dmFyIGI9UGg7aWYoYil7dmFyIGM9YjtpZighVGgoYSxiKSl7Yj1KZChjLm5leHRTaWJsaW5nKTtpZighYnx8IVRoKGEsYikpe2EuZWZmZWN0VGFnPWEuZWZmZWN0VGFnJi0xMDI1fDI7UWg9ITE7T2g9YTtyZXR1cm59UmgoT2gsYyl9T2g9YTtQaD1KZChiLmZpcnN0Q2hpbGQpfWVsc2UgYS5lZmZlY3RUYWc9YS5lZmZlY3RUYWcmLTEwMjV8MixRaD0hMSxPaD1hfX1mdW5jdGlvbiBWaChhKXtmb3IoYT1hLnJldHVybjtudWxsIT09YSYmNSE9PWEudGFnJiYzIT09YS50YWcmJjEzIT09YS50YWc7KWE9YS5yZXR1cm47T2g9YX1cbmZ1bmN0aW9uIFdoKGEpe2lmKGEhPT1PaClyZXR1cm4hMTtpZighUWgpcmV0dXJuIFZoKGEpLFFoPSEwLCExO3ZhciBiPWEudHlwZTtpZig1IT09YS50YWd8fFwiaGVhZFwiIT09YiYmXCJib2R5XCIhPT1iJiYhR2QoYixhLm1lbW9pemVkUHJvcHMpKWZvcihiPVBoO2I7KVJoKGEsYiksYj1KZChiLm5leHRTaWJsaW5nKTtWaChhKTtpZigxMz09PWEudGFnKXthPWEubWVtb2l6ZWRTdGF0ZTthPW51bGwhPT1hP2EuZGVoeWRyYXRlZDpudWxsO2lmKCFhKXRocm93IEVycm9yKHUoMzE3KSk7YTp7YT1hLm5leHRTaWJsaW5nO2ZvcihiPTA7YTspe2lmKDg9PT1hLm5vZGVUeXBlKXt2YXIgYz1hLmRhdGE7aWYoYz09PUFkKXtpZigwPT09Yil7UGg9SmQoYS5uZXh0U2libGluZyk7YnJlYWsgYX1iLS19ZWxzZSBjIT09emQmJmMhPT1DZCYmYyE9PUJkfHxiKyt9YT1hLm5leHRTaWJsaW5nfVBoPW51bGx9fWVsc2UgUGg9T2g/SmQoYS5zdGF0ZU5vZGUubmV4dFNpYmxpbmcpOm51bGw7cmV0dXJuITB9XG5mdW5jdGlvbiBYaCgpe1BoPU9oPW51bGw7UWg9ITF9dmFyIFloPVdhLlJlYWN0Q3VycmVudE93bmVyLHJnPSExO2Z1bmN0aW9uIFIoYSxiLGMsZCl7Yi5jaGlsZD1udWxsPT09YT9ZZyhiLG51bGwsYyxkKTpYZyhiLGEuY2hpbGQsYyxkKX1mdW5jdGlvbiBaaChhLGIsYyxkLGUpe2M9Yy5yZW5kZXI7dmFyIGY9Yi5yZWY7cWcoYixlKTtkPW9oKGEsYixjLGQsZixlKTtpZihudWxsIT09YSYmIXJnKXJldHVybiBiLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWUsYi5lZmZlY3RUYWcmPS01MTcsYS5leHBpcmF0aW9uVGltZTw9ZSYmKGEuZXhwaXJhdGlvblRpbWU9MCksJGgoYSxiLGUpO2IuZWZmZWN0VGFnfD0xO1IoYSxiLGQsZSk7cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBhaShhLGIsYyxkLGUsZil7aWYobnVsbD09PWEpe3ZhciBnPWMudHlwZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZyYmIWJpKGcpJiZ2b2lkIDA9PT1nLmRlZmF1bHRQcm9wcyYmbnVsbD09PWMuY29tcGFyZSYmdm9pZCAwPT09Yy5kZWZhdWx0UHJvcHMpcmV0dXJuIGIudGFnPTE1LGIudHlwZT1nLGNpKGEsYixnLGQsZSxmKTthPVVnKGMudHlwZSxudWxsLGQsbnVsbCxiLm1vZGUsZik7YS5yZWY9Yi5yZWY7YS5yZXR1cm49YjtyZXR1cm4gYi5jaGlsZD1hfWc9YS5jaGlsZDtpZihlPGYmJihlPWcubWVtb2l6ZWRQcm9wcyxjPWMuY29tcGFyZSxjPW51bGwhPT1jP2M6YmYsYyhlLGQpJiZhLnJlZj09PWIucmVmKSlyZXR1cm4gJGgoYSxiLGYpO2IuZWZmZWN0VGFnfD0xO2E9U2coZyxkKTthLnJlZj1iLnJlZjthLnJldHVybj1iO3JldHVybiBiLmNoaWxkPWF9XG5mdW5jdGlvbiBjaShhLGIsYyxkLGUsZil7cmV0dXJuIG51bGwhPT1hJiZiZihhLm1lbW9pemVkUHJvcHMsZCkmJmEucmVmPT09Yi5yZWYmJihyZz0hMSxlPGYpPyhiLmV4cGlyYXRpb25UaW1lPWEuZXhwaXJhdGlvblRpbWUsJGgoYSxiLGYpKTpkaShhLGIsYyxkLGYpfWZ1bmN0aW9uIGVpKGEsYil7dmFyIGM9Yi5yZWY7aWYobnVsbD09PWEmJm51bGwhPT1jfHxudWxsIT09YSYmYS5yZWYhPT1jKWIuZWZmZWN0VGFnfD0xMjh9ZnVuY3Rpb24gZGkoYSxiLGMsZCxlKXt2YXIgZj1MKGMpP0JmOkouY3VycmVudDtmPUNmKGIsZik7cWcoYixlKTtjPW9oKGEsYixjLGQsZixlKTtpZihudWxsIT09YSYmIXJnKXJldHVybiBiLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWUsYi5lZmZlY3RUYWcmPS01MTcsYS5leHBpcmF0aW9uVGltZTw9ZSYmKGEuZXhwaXJhdGlvblRpbWU9MCksJGgoYSxiLGUpO2IuZWZmZWN0VGFnfD0xO1IoYSxiLGMsZSk7cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBmaShhLGIsYyxkLGUpe2lmKEwoYykpe3ZhciBmPSEwO0dmKGIpfWVsc2UgZj0hMTtxZyhiLGUpO2lmKG51bGw9PT1iLnN0YXRlTm9kZSludWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9MiksTGcoYixjLGQpLE5nKGIsYyxkLGUpLGQ9ITA7ZWxzZSBpZihudWxsPT09YSl7dmFyIGc9Yi5zdGF0ZU5vZGUsaD1iLm1lbW9pemVkUHJvcHM7Zy5wcm9wcz1oO3ZhciBrPWcuY29udGV4dCxsPWMuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBsJiZudWxsIT09bD9sPXNnKGwpOihsPUwoYyk/QmY6Si5jdXJyZW50LGw9Q2YoYixsKSk7dmFyIG09Yy5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMscD1cImZ1bmN0aW9uXCI9PT10eXBlb2YgbXx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGU7cHx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJlxuXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wc3x8KGghPT1kfHxrIT09bCkmJk1nKGIsZyxkLGwpO3RnPSExO3ZhciB4PWIubWVtb2l6ZWRTdGF0ZTtnLnN0YXRlPXg7emcoYixkLGcsZSk7az1iLm1lbW9pemVkU3RhdGU7aCE9PWR8fHghPT1rfHxLLmN1cnJlbnR8fHRnPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgbSYmKEZnKGIsYyxtLGQpLGs9Yi5tZW1vaXplZFN0YXRlKSwoaD10Z3x8S2coYixjLGgsZCx4LGssbCkpPyhwfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsTW91bnR8fChcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnRXaWxsTW91bnQmJmcuY29tcG9uZW50V2lsbE1vdW50KCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCkpLFwiZnVuY3Rpb25cIj09PVxudHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmVmZmVjdFRhZ3w9NCkpOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZWZmZWN0VGFnfD00KSxiLm1lbW9pemVkUHJvcHM9ZCxiLm1lbW9pemVkU3RhdGU9ayksZy5wcm9wcz1kLGcuc3RhdGU9ayxnLmNvbnRleHQ9bCxkPWgpOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZWZmZWN0VGFnfD00KSxkPSExKX1lbHNlIGc9Yi5zdGF0ZU5vZGUsdmcoYSxiKSxoPWIubWVtb2l6ZWRQcm9wcyxnLnByb3BzPWIudHlwZT09PWIuZWxlbWVudFR5cGU/aDppZyhiLnR5cGUsaCksaz1nLmNvbnRleHQsbD1jLmNvbnRleHRUeXBlLFwib2JqZWN0XCI9PT10eXBlb2YgbCYmbnVsbCE9PWw/bD1zZyhsKToobD1MKGMpP0JmOkouY3VycmVudCxsPUNmKGIsbCkpLG09Yy5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMsKHA9XCJmdW5jdGlvblwiPT09dHlwZW9mIG18fFwiZnVuY3Rpb25cIj09PVxudHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUpfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wc3x8KGghPT1kfHxrIT09bCkmJk1nKGIsZyxkLGwpLHRnPSExLGs9Yi5tZW1vaXplZFN0YXRlLGcuc3RhdGU9ayx6ZyhiLGQsZyxlKSx4PWIubWVtb2l6ZWRTdGF0ZSxoIT09ZHx8ayE9PXh8fEsuY3VycmVudHx8dGc/KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBtJiYoRmcoYixjLG0sZCkseD1iLm1lbW9pemVkU3RhdGUpLChtPXRnfHxLZyhiLGMsaCxkLGsseCxsKSk/KHB8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsVXBkYXRlfHwoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFVwZGF0ZSYmZy5jb21wb25lbnRXaWxsVXBkYXRlKGQsXG54LGwpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlJiZnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlKGQseCxsKSksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlJiYoYi5lZmZlY3RUYWd8PTQpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlJiYoYi5lZmZlY3RUYWd8PTI1NikpOihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJms9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJms9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9MjU2KSxiLm1lbW9pemVkUHJvcHM9ZCxiLm1lbW9pemVkU3RhdGU9eCksZy5wcm9wcz1kLGcuc3RhdGU9eCxnLmNvbnRleHQ9bCxkPW0pOlxuKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmaz09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD00KSxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmaz09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD0yNTYpLGQ9ITEpO3JldHVybiBnaShhLGIsYyxkLGYsZSl9XG5mdW5jdGlvbiBnaShhLGIsYyxkLGUsZil7ZWkoYSxiKTt2YXIgZz0wIT09KGIuZWZmZWN0VGFnJjY0KTtpZighZCYmIWcpcmV0dXJuIGUmJkhmKGIsYywhMSksJGgoYSxiLGYpO2Q9Yi5zdGF0ZU5vZGU7WWguY3VycmVudD1iO3ZhciBoPWcmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBjLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcj9udWxsOmQucmVuZGVyKCk7Yi5lZmZlY3RUYWd8PTE7bnVsbCE9PWEmJmc/KGIuY2hpbGQ9WGcoYixhLmNoaWxkLG51bGwsZiksYi5jaGlsZD1YZyhiLG51bGwsaCxmKSk6UihhLGIsaCxmKTtiLm1lbW9pemVkU3RhdGU9ZC5zdGF0ZTtlJiZIZihiLGMsITApO3JldHVybiBiLmNoaWxkfWZ1bmN0aW9uIGhpKGEpe3ZhciBiPWEuc3RhdGVOb2RlO2IucGVuZGluZ0NvbnRleHQ/RWYoYSxiLnBlbmRpbmdDb250ZXh0LGIucGVuZGluZ0NvbnRleHQhPT1iLmNvbnRleHQpOmIuY29udGV4dCYmRWYoYSxiLmNvbnRleHQsITEpO2RoKGEsYi5jb250YWluZXJJbmZvKX1cbnZhciBpaT17ZGVoeWRyYXRlZDpudWxsLHJldHJ5VGltZTowfTtcbmZ1bmN0aW9uIGppKGEsYixjKXt2YXIgZD1iLm1vZGUsZT1iLnBlbmRpbmdQcm9wcyxmPU0uY3VycmVudCxnPSExLGg7KGg9MCE9PShiLmVmZmVjdFRhZyY2NCkpfHwoaD0wIT09KGYmMikmJihudWxsPT09YXx8bnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSkpO2g/KGc9ITAsYi5lZmZlY3RUYWcmPS02NSk6bnVsbCE9PWEmJm51bGw9PT1hLm1lbW9pemVkU3RhdGV8fHZvaWQgMD09PWUuZmFsbGJhY2t8fCEwPT09ZS51bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFja3x8KGZ8PTEpO0koTSxmJjEpO2lmKG51bGw9PT1hKXt2b2lkIDAhPT1lLmZhbGxiYWNrJiZVaChiKTtpZihnKXtnPWUuZmFsbGJhY2s7ZT1XZyhudWxsLGQsMCxudWxsKTtlLnJldHVybj1iO2lmKDA9PT0oYi5tb2RlJjIpKWZvcihhPW51bGwhPT1iLm1lbW9pemVkU3RhdGU/Yi5jaGlsZC5jaGlsZDpiLmNoaWxkLGUuY2hpbGQ9YTtudWxsIT09YTspYS5yZXR1cm49ZSxhPWEuc2libGluZztjPVdnKGcsZCxjLG51bGwpO2MucmV0dXJuPVxuYjtlLnNpYmxpbmc9YztiLm1lbW9pemVkU3RhdGU9aWk7Yi5jaGlsZD1lO3JldHVybiBjfWQ9ZS5jaGlsZHJlbjtiLm1lbW9pemVkU3RhdGU9bnVsbDtyZXR1cm4gYi5jaGlsZD1ZZyhiLG51bGwsZCxjKX1pZihudWxsIT09YS5tZW1vaXplZFN0YXRlKXthPWEuY2hpbGQ7ZD1hLnNpYmxpbmc7aWYoZyl7ZT1lLmZhbGxiYWNrO2M9U2coYSxhLnBlbmRpbmdQcm9wcyk7Yy5yZXR1cm49YjtpZigwPT09KGIubW9kZSYyKSYmKGc9bnVsbCE9PWIubWVtb2l6ZWRTdGF0ZT9iLmNoaWxkLmNoaWxkOmIuY2hpbGQsZyE9PWEuY2hpbGQpKWZvcihjLmNoaWxkPWc7bnVsbCE9PWc7KWcucmV0dXJuPWMsZz1nLnNpYmxpbmc7ZD1TZyhkLGUpO2QucmV0dXJuPWI7Yy5zaWJsaW5nPWQ7Yy5jaGlsZEV4cGlyYXRpb25UaW1lPTA7Yi5tZW1vaXplZFN0YXRlPWlpO2IuY2hpbGQ9YztyZXR1cm4gZH1jPVhnKGIsYS5jaGlsZCxlLmNoaWxkcmVuLGMpO2IubWVtb2l6ZWRTdGF0ZT1udWxsO3JldHVybiBiLmNoaWxkPVxuY31hPWEuY2hpbGQ7aWYoZyl7Zz1lLmZhbGxiYWNrO2U9V2cobnVsbCxkLDAsbnVsbCk7ZS5yZXR1cm49YjtlLmNoaWxkPWE7bnVsbCE9PWEmJihhLnJldHVybj1lKTtpZigwPT09KGIubW9kZSYyKSlmb3IoYT1udWxsIT09Yi5tZW1vaXplZFN0YXRlP2IuY2hpbGQuY2hpbGQ6Yi5jaGlsZCxlLmNoaWxkPWE7bnVsbCE9PWE7KWEucmV0dXJuPWUsYT1hLnNpYmxpbmc7Yz1XZyhnLGQsYyxudWxsKTtjLnJldHVybj1iO2Uuc2libGluZz1jO2MuZWZmZWN0VGFnfD0yO2UuY2hpbGRFeHBpcmF0aW9uVGltZT0wO2IubWVtb2l6ZWRTdGF0ZT1paTtiLmNoaWxkPWU7cmV0dXJuIGN9Yi5tZW1vaXplZFN0YXRlPW51bGw7cmV0dXJuIGIuY2hpbGQ9WGcoYixhLGUuY2hpbGRyZW4sYyl9XG5mdW5jdGlvbiBraShhLGIpe2EuZXhwaXJhdGlvblRpbWU8YiYmKGEuZXhwaXJhdGlvblRpbWU9Yik7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWMmJmMuZXhwaXJhdGlvblRpbWU8YiYmKGMuZXhwaXJhdGlvblRpbWU9Yik7cGcoYS5yZXR1cm4sYil9ZnVuY3Rpb24gbGkoYSxiLGMsZCxlLGYpe3ZhciBnPWEubWVtb2l6ZWRTdGF0ZTtudWxsPT09Zz9hLm1lbW9pemVkU3RhdGU9e2lzQmFja3dhcmRzOmIscmVuZGVyaW5nOm51bGwscmVuZGVyaW5nU3RhcnRUaW1lOjAsbGFzdDpkLHRhaWw6Yyx0YWlsRXhwaXJhdGlvbjowLHRhaWxNb2RlOmUsbGFzdEVmZmVjdDpmfTooZy5pc0JhY2t3YXJkcz1iLGcucmVuZGVyaW5nPW51bGwsZy5yZW5kZXJpbmdTdGFydFRpbWU9MCxnLmxhc3Q9ZCxnLnRhaWw9YyxnLnRhaWxFeHBpcmF0aW9uPTAsZy50YWlsTW9kZT1lLGcubGFzdEVmZmVjdD1mKX1cbmZ1bmN0aW9uIG1pKGEsYixjKXt2YXIgZD1iLnBlbmRpbmdQcm9wcyxlPWQucmV2ZWFsT3JkZXIsZj1kLnRhaWw7UihhLGIsZC5jaGlsZHJlbixjKTtkPU0uY3VycmVudDtpZigwIT09KGQmMikpZD1kJjF8MixiLmVmZmVjdFRhZ3w9NjQ7ZWxzZXtpZihudWxsIT09YSYmMCE9PShhLmVmZmVjdFRhZyY2NCkpYTpmb3IoYT1iLmNoaWxkO251bGwhPT1hOyl7aWYoMTM9PT1hLnRhZyludWxsIT09YS5tZW1vaXplZFN0YXRlJiZraShhLGMpO2Vsc2UgaWYoMTk9PT1hLnRhZylraShhLGMpO2Vsc2UgaWYobnVsbCE9PWEuY2hpbGQpe2EuY2hpbGQucmV0dXJuPWE7YT1hLmNoaWxkO2NvbnRpbnVlfWlmKGE9PT1iKWJyZWFrIGE7Zm9yKDtudWxsPT09YS5zaWJsaW5nOyl7aWYobnVsbD09PWEucmV0dXJufHxhLnJldHVybj09PWIpYnJlYWsgYTthPWEucmV0dXJufWEuc2libGluZy5yZXR1cm49YS5yZXR1cm47YT1hLnNpYmxpbmd9ZCY9MX1JKE0sZCk7aWYoMD09PShiLm1vZGUmMikpYi5tZW1vaXplZFN0YXRlPVxubnVsbDtlbHNlIHN3aXRjaChlKXtjYXNlIFwiZm9yd2FyZHNcIjpjPWIuY2hpbGQ7Zm9yKGU9bnVsbDtudWxsIT09YzspYT1jLmFsdGVybmF0ZSxudWxsIT09YSYmbnVsbD09PWhoKGEpJiYoZT1jKSxjPWMuc2libGluZztjPWU7bnVsbD09PWM/KGU9Yi5jaGlsZCxiLmNoaWxkPW51bGwpOihlPWMuc2libGluZyxjLnNpYmxpbmc9bnVsbCk7bGkoYiwhMSxlLGMsZixiLmxhc3RFZmZlY3QpO2JyZWFrO2Nhc2UgXCJiYWNrd2FyZHNcIjpjPW51bGw7ZT1iLmNoaWxkO2ZvcihiLmNoaWxkPW51bGw7bnVsbCE9PWU7KXthPWUuYWx0ZXJuYXRlO2lmKG51bGwhPT1hJiZudWxsPT09aGgoYSkpe2IuY2hpbGQ9ZTticmVha31hPWUuc2libGluZztlLnNpYmxpbmc9YztjPWU7ZT1hfWxpKGIsITAsYyxudWxsLGYsYi5sYXN0RWZmZWN0KTticmVhaztjYXNlIFwidG9nZXRoZXJcIjpsaShiLCExLG51bGwsbnVsbCx2b2lkIDAsYi5sYXN0RWZmZWN0KTticmVhaztkZWZhdWx0OmIubWVtb2l6ZWRTdGF0ZT1udWxsfXJldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gJGgoYSxiLGMpe251bGwhPT1hJiYoYi5kZXBlbmRlbmNpZXM9YS5kZXBlbmRlbmNpZXMpO3ZhciBkPWIuZXhwaXJhdGlvblRpbWU7MCE9PWQmJkJnKGQpO2lmKGIuY2hpbGRFeHBpcmF0aW9uVGltZTxjKXJldHVybiBudWxsO2lmKG51bGwhPT1hJiZiLmNoaWxkIT09YS5jaGlsZCl0aHJvdyBFcnJvcih1KDE1MykpO2lmKG51bGwhPT1iLmNoaWxkKXthPWIuY2hpbGQ7Yz1TZyhhLGEucGVuZGluZ1Byb3BzKTtiLmNoaWxkPWM7Zm9yKGMucmV0dXJuPWI7bnVsbCE9PWEuc2libGluZzspYT1hLnNpYmxpbmcsYz1jLnNpYmxpbmc9U2coYSxhLnBlbmRpbmdQcm9wcyksYy5yZXR1cm49YjtjLnNpYmxpbmc9bnVsbH1yZXR1cm4gYi5jaGlsZH12YXIgbmksb2kscGkscWk7XG5uaT1mdW5jdGlvbihhLGIpe2Zvcih2YXIgYz1iLmNoaWxkO251bGwhPT1jOyl7aWYoNT09PWMudGFnfHw2PT09Yy50YWcpYS5hcHBlbmRDaGlsZChjLnN0YXRlTm9kZSk7ZWxzZSBpZig0IT09Yy50YWcmJm51bGwhPT1jLmNoaWxkKXtjLmNoaWxkLnJldHVybj1jO2M9Yy5jaGlsZDtjb250aW51ZX1pZihjPT09YilicmVhaztmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fGMucmV0dXJuPT09YilyZXR1cm47Yz1jLnJldHVybn1jLnNpYmxpbmcucmV0dXJuPWMucmV0dXJuO2M9Yy5zaWJsaW5nfX07b2k9ZnVuY3Rpb24oKXt9O1xucGk9ZnVuY3Rpb24oYSxiLGMsZCxlKXt2YXIgZj1hLm1lbW9pemVkUHJvcHM7aWYoZiE9PWQpe3ZhciBnPWIuc3RhdGVOb2RlO2NoKCRnLmN1cnJlbnQpO2E9bnVsbDtzd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6Zj16YihnLGYpO2Q9emIoZyxkKTthPVtdO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpmPUdiKGcsZik7ZD1HYihnLGQpO2E9W107YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmY9bih7fSxmLHt2YWx1ZTp2b2lkIDB9KTtkPW4oe30sZCx7dmFsdWU6dm9pZCAwfSk7YT1bXTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpmPUliKGcsZik7ZD1JYihnLGQpO2E9W107YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCIhPT10eXBlb2YgZi5vbkNsaWNrJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5vbkNsaWNrJiYoZy5vbmNsaWNrPXNkKX1vZChjLGQpO3ZhciBoLGs7Yz1udWxsO2ZvcihoIGluIGYpaWYoIWQuaGFzT3duUHJvcGVydHkoaCkmJmYuaGFzT3duUHJvcGVydHkoaCkmJm51bGwhPWZbaF0paWYoXCJzdHlsZVwiPT09XG5oKWZvcihrIGluIGc9ZltoXSxnKWcuaGFzT3duUHJvcGVydHkoaykmJihjfHwoYz17fSksY1trXT1cIlwiKTtlbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiIT09aCYmXCJjaGlsZHJlblwiIT09aCYmXCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWgmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1oJiZcImF1dG9Gb2N1c1wiIT09aCYmKHZhLmhhc093blByb3BlcnR5KGgpP2F8fChhPVtdKTooYT1hfHxbXSkucHVzaChoLG51bGwpKTtmb3IoaCBpbiBkKXt2YXIgbD1kW2hdO2c9bnVsbCE9Zj9mW2hdOnZvaWQgMDtpZihkLmhhc093blByb3BlcnR5KGgpJiZsIT09ZyYmKG51bGwhPWx8fG51bGwhPWcpKWlmKFwic3R5bGVcIj09PWgpaWYoZyl7Zm9yKGsgaW4gZykhZy5oYXNPd25Qcm9wZXJ0eShrKXx8bCYmbC5oYXNPd25Qcm9wZXJ0eShrKXx8KGN8fChjPXt9KSxjW2tdPVwiXCIpO2ZvcihrIGluIGwpbC5oYXNPd25Qcm9wZXJ0eShrKSYmZ1trXSE9PWxba10mJihjfHwoYz17fSksXG5jW2tdPWxba10pfWVsc2UgY3x8KGF8fChhPVtdKSxhLnB1c2goaCxjKSksYz1sO2Vsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1oPyhsPWw/bC5fX2h0bWw6dm9pZCAwLGc9Zz9nLl9faHRtbDp2b2lkIDAsbnVsbCE9bCYmZyE9PWwmJihhPWF8fFtdKS5wdXNoKGgsbCkpOlwiY2hpbGRyZW5cIj09PWg/Zz09PWx8fFwic3RyaW5nXCIhPT10eXBlb2YgbCYmXCJudW1iZXJcIiE9PXR5cGVvZiBsfHwoYT1hfHxbXSkucHVzaChoLFwiXCIrbCk6XCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWgmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1oJiYodmEuaGFzT3duUHJvcGVydHkoaCk/KG51bGwhPWwmJnJkKGUsaCksYXx8Zz09PWx8fChhPVtdKSk6KGE9YXx8W10pLnB1c2goaCxsKSl9YyYmKGE9YXx8W10pLnB1c2goXCJzdHlsZVwiLGMpO2U9YTtpZihiLnVwZGF0ZVF1ZXVlPWUpYi5lZmZlY3RUYWd8PTR9fTtcbnFpPWZ1bmN0aW9uKGEsYixjLGQpe2MhPT1kJiYoYi5lZmZlY3RUYWd8PTQpfTtmdW5jdGlvbiByaShhLGIpe3N3aXRjaChhLnRhaWxNb2RlKXtjYXNlIFwiaGlkZGVuXCI6Yj1hLnRhaWw7Zm9yKHZhciBjPW51bGw7bnVsbCE9PWI7KW51bGwhPT1iLmFsdGVybmF0ZSYmKGM9YiksYj1iLnNpYmxpbmc7bnVsbD09PWM/YS50YWlsPW51bGw6Yy5zaWJsaW5nPW51bGw7YnJlYWs7Y2FzZSBcImNvbGxhcHNlZFwiOmM9YS50YWlsO2Zvcih2YXIgZD1udWxsO251bGwhPT1jOyludWxsIT09Yy5hbHRlcm5hdGUmJihkPWMpLGM9Yy5zaWJsaW5nO251bGw9PT1kP2J8fG51bGw9PT1hLnRhaWw/YS50YWlsPW51bGw6YS50YWlsLnNpYmxpbmc9bnVsbDpkLnNpYmxpbmc9bnVsbH19XG5mdW5jdGlvbiBzaShhLGIsYyl7dmFyIGQ9Yi5wZW5kaW5nUHJvcHM7c3dpdGNoKGIudGFnKXtjYXNlIDI6Y2FzZSAxNjpjYXNlIDE1OmNhc2UgMDpjYXNlIDExOmNhc2UgNzpjYXNlIDg6Y2FzZSAxMjpjYXNlIDk6Y2FzZSAxNDpyZXR1cm4gbnVsbDtjYXNlIDE6cmV0dXJuIEwoYi50eXBlKSYmRGYoKSxudWxsO2Nhc2UgMzpyZXR1cm4gZWgoKSxIKEspLEgoSiksYz1iLnN0YXRlTm9kZSxjLnBlbmRpbmdDb250ZXh0JiYoYy5jb250ZXh0PWMucGVuZGluZ0NvbnRleHQsYy5wZW5kaW5nQ29udGV4dD1udWxsKSxudWxsIT09YSYmbnVsbCE9PWEuY2hpbGR8fCFXaChiKXx8KGIuZWZmZWN0VGFnfD00KSxvaShiKSxudWxsO2Nhc2UgNTpnaChiKTtjPWNoKGJoLmN1cnJlbnQpO3ZhciBlPWIudHlwZTtpZihudWxsIT09YSYmbnVsbCE9Yi5zdGF0ZU5vZGUpcGkoYSxiLGUsZCxjKSxhLnJlZiE9PWIucmVmJiYoYi5lZmZlY3RUYWd8PTEyOCk7ZWxzZXtpZighZCl7aWYobnVsbD09PWIuc3RhdGVOb2RlKXRocm93IEVycm9yKHUoMTY2KSk7XG5yZXR1cm4gbnVsbH1hPWNoKCRnLmN1cnJlbnQpO2lmKFdoKGIpKXtkPWIuc3RhdGVOb2RlO2U9Yi50eXBlO3ZhciBmPWIubWVtb2l6ZWRQcm9wcztkW01kXT1iO2RbTmRdPWY7c3dpdGNoKGUpe2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcImVtYmVkXCI6RihcImxvYWRcIixkKTticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IoYT0wO2E8YWMubGVuZ3RoO2ErKylGKGFjW2FdLGQpO2JyZWFrO2Nhc2UgXCJzb3VyY2VcIjpGKFwiZXJyb3JcIixkKTticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpGKFwiZXJyb3JcIixkKTtGKFwibG9hZFwiLGQpO2JyZWFrO2Nhc2UgXCJmb3JtXCI6RihcInJlc2V0XCIsZCk7RihcInN1Ym1pdFwiLGQpO2JyZWFrO2Nhc2UgXCJkZXRhaWxzXCI6RihcInRvZ2dsZVwiLGQpO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOkFiKGQsZik7RihcImludmFsaWRcIixkKTtyZChjLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmQuX3dyYXBwZXJTdGF0ZT1cbnt3YXNNdWx0aXBsZTohIWYubXVsdGlwbGV9O0YoXCJpbnZhbGlkXCIsZCk7cmQoYyxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOkpiKGQsZiksRihcImludmFsaWRcIixkKSxyZChjLFwib25DaGFuZ2VcIil9b2QoZSxmKTthPW51bGw7Zm9yKHZhciBnIGluIGYpaWYoZi5oYXNPd25Qcm9wZXJ0eShnKSl7dmFyIGg9ZltnXTtcImNoaWxkcmVuXCI9PT1nP1wic3RyaW5nXCI9PT10eXBlb2YgaD9kLnRleHRDb250ZW50IT09aCYmKGE9W1wiY2hpbGRyZW5cIixoXSk6XCJudW1iZXJcIj09PXR5cGVvZiBoJiZkLnRleHRDb250ZW50IT09XCJcIitoJiYoYT1bXCJjaGlsZHJlblwiLFwiXCIraF0pOnZhLmhhc093blByb3BlcnR5KGcpJiZudWxsIT1oJiZyZChjLGcpfXN3aXRjaChlKXtjYXNlIFwiaW5wdXRcIjp4YihkKTtFYihkLGYsITApO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOnhiKGQpO0xiKGQpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpjYXNlIFwib3B0aW9uXCI6YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5vbkNsaWNrJiZcbihkLm9uY2xpY2s9c2QpfWM9YTtiLnVwZGF0ZVF1ZXVlPWM7bnVsbCE9PWMmJihiLmVmZmVjdFRhZ3w9NCl9ZWxzZXtnPTk9PT1jLm5vZGVUeXBlP2M6Yy5vd25lckRvY3VtZW50O2E9PT1xZCYmKGE9TmIoZSkpO2E9PT1xZD9cInNjcmlwdFwiPT09ZT8oYT1nLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksYS5pbm5lckhUTUw9XCI8c2NyaXB0PlxceDNjL3NjcmlwdD5cIixhPWEucmVtb3ZlQ2hpbGQoYS5maXJzdENoaWxkKSk6XCJzdHJpbmdcIj09PXR5cGVvZiBkLmlzP2E9Zy5jcmVhdGVFbGVtZW50KGUse2lzOmQuaXN9KTooYT1nLmNyZWF0ZUVsZW1lbnQoZSksXCJzZWxlY3RcIj09PWUmJihnPWEsZC5tdWx0aXBsZT9nLm11bHRpcGxlPSEwOmQuc2l6ZSYmKGcuc2l6ZT1kLnNpemUpKSk6YT1nLmNyZWF0ZUVsZW1lbnROUyhhLGUpO2FbTWRdPWI7YVtOZF09ZDtuaShhLGIsITEsITEpO2Iuc3RhdGVOb2RlPWE7Zz1wZChlLGQpO3N3aXRjaChlKXtjYXNlIFwiaWZyYW1lXCI6Y2FzZSBcIm9iamVjdFwiOmNhc2UgXCJlbWJlZFwiOkYoXCJsb2FkXCIsXG5hKTtoPWQ7YnJlYWs7Y2FzZSBcInZpZGVvXCI6Y2FzZSBcImF1ZGlvXCI6Zm9yKGg9MDtoPGFjLmxlbmd0aDtoKyspRihhY1toXSxhKTtoPWQ7YnJlYWs7Y2FzZSBcInNvdXJjZVwiOkYoXCJlcnJvclwiLGEpO2g9ZDticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpGKFwiZXJyb3JcIixhKTtGKFwibG9hZFwiLGEpO2g9ZDticmVhaztjYXNlIFwiZm9ybVwiOkYoXCJyZXNldFwiLGEpO0YoXCJzdWJtaXRcIixhKTtoPWQ7YnJlYWs7Y2FzZSBcImRldGFpbHNcIjpGKFwidG9nZ2xlXCIsYSk7aD1kO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOkFiKGEsZCk7aD16YihhLGQpO0YoXCJpbnZhbGlkXCIsYSk7cmQoYyxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpoPUdiKGEsZCk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmEuX3dyYXBwZXJTdGF0ZT17d2FzTXVsdGlwbGU6ISFkLm11bHRpcGxlfTtoPW4oe30sZCx7dmFsdWU6dm9pZCAwfSk7RihcImludmFsaWRcIixhKTtyZChjLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6SmIoYSxcbmQpO2g9SWIoYSxkKTtGKFwiaW52YWxpZFwiLGEpO3JkKGMsXCJvbkNoYW5nZVwiKTticmVhaztkZWZhdWx0Omg9ZH1vZChlLGgpO3ZhciBrPWg7Zm9yKGYgaW4gaylpZihrLmhhc093blByb3BlcnR5KGYpKXt2YXIgbD1rW2ZdO1wic3R5bGVcIj09PWY/bWQoYSxsKTpcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1mPyhsPWw/bC5fX2h0bWw6dm9pZCAwLG51bGwhPWwmJlFiKGEsbCkpOlwiY2hpbGRyZW5cIj09PWY/XCJzdHJpbmdcIj09PXR5cGVvZiBsPyhcInRleHRhcmVhXCIhPT1lfHxcIlwiIT09bCkmJlJiKGEsbCk6XCJudW1iZXJcIj09PXR5cGVvZiBsJiZSYihhLFwiXCIrbCk6XCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWYmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1mJiZcImF1dG9Gb2N1c1wiIT09ZiYmKHZhLmhhc093blByb3BlcnR5KGYpP251bGwhPWwmJnJkKGMsZik6bnVsbCE9bCYmWGEoYSxmLGwsZykpfXN3aXRjaChlKXtjYXNlIFwiaW5wdXRcIjp4YihhKTtFYihhLGQsITEpO1xuYnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6eGIoYSk7TGIoYSk7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOm51bGwhPWQudmFsdWUmJmEuc2V0QXR0cmlidXRlKFwidmFsdWVcIixcIlwiK3JiKGQudmFsdWUpKTticmVhaztjYXNlIFwic2VsZWN0XCI6YS5tdWx0aXBsZT0hIWQubXVsdGlwbGU7Yz1kLnZhbHVlO251bGwhPWM/SGIoYSwhIWQubXVsdGlwbGUsYywhMSk6bnVsbCE9ZC5kZWZhdWx0VmFsdWUmJkhiKGEsISFkLm11bHRpcGxlLGQuZGVmYXVsdFZhbHVlLCEwKTticmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIj09PXR5cGVvZiBoLm9uQ2xpY2smJihhLm9uY2xpY2s9c2QpfUZkKGUsZCkmJihiLmVmZmVjdFRhZ3w9NCl9bnVsbCE9PWIucmVmJiYoYi5lZmZlY3RUYWd8PTEyOCl9cmV0dXJuIG51bGw7Y2FzZSA2OmlmKGEmJm51bGwhPWIuc3RhdGVOb2RlKXFpKGEsYixhLm1lbW9pemVkUHJvcHMsZCk7ZWxzZXtpZihcInN0cmluZ1wiIT09dHlwZW9mIGQmJm51bGw9PT1iLnN0YXRlTm9kZSl0aHJvdyBFcnJvcih1KDE2NikpO1xuYz1jaChiaC5jdXJyZW50KTtjaCgkZy5jdXJyZW50KTtXaChiKT8oYz1iLnN0YXRlTm9kZSxkPWIubWVtb2l6ZWRQcm9wcyxjW01kXT1iLGMubm9kZVZhbHVlIT09ZCYmKGIuZWZmZWN0VGFnfD00KSk6KGM9KDk9PT1jLm5vZGVUeXBlP2M6Yy5vd25lckRvY3VtZW50KS5jcmVhdGVUZXh0Tm9kZShkKSxjW01kXT1iLGIuc3RhdGVOb2RlPWMpfXJldHVybiBudWxsO2Nhc2UgMTM6SChNKTtkPWIubWVtb2l6ZWRTdGF0ZTtpZigwIT09KGIuZWZmZWN0VGFnJjY0KSlyZXR1cm4gYi5leHBpcmF0aW9uVGltZT1jLGI7Yz1udWxsIT09ZDtkPSExO251bGw9PT1hP3ZvaWQgMCE9PWIubWVtb2l6ZWRQcm9wcy5mYWxsYmFjayYmV2goYik6KGU9YS5tZW1vaXplZFN0YXRlLGQ9bnVsbCE9PWUsY3x8bnVsbD09PWV8fChlPWEuY2hpbGQuc2libGluZyxudWxsIT09ZSYmKGY9Yi5maXJzdEVmZmVjdCxudWxsIT09Zj8oYi5maXJzdEVmZmVjdD1lLGUubmV4dEVmZmVjdD1mKTooYi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9XG5lLGUubmV4dEVmZmVjdD1udWxsKSxlLmVmZmVjdFRhZz04KSkpO2lmKGMmJiFkJiYwIT09KGIubW9kZSYyKSlpZihudWxsPT09YSYmITAhPT1iLm1lbW9pemVkUHJvcHMudW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2t8fDAhPT0oTS5jdXJyZW50JjEpKVM9PT10aSYmKFM9dWkpO2Vsc2V7aWYoUz09PXRpfHxTPT09dWkpUz12aTswIT09d2kmJm51bGwhPT1UJiYoeGkoVCxVKSx5aShULHdpKSl9aWYoY3x8ZCliLmVmZmVjdFRhZ3w9NDtyZXR1cm4gbnVsbDtjYXNlIDQ6cmV0dXJuIGVoKCksb2koYiksbnVsbDtjYXNlIDEwOnJldHVybiBvZyhiKSxudWxsO2Nhc2UgMTc6cmV0dXJuIEwoYi50eXBlKSYmRGYoKSxudWxsO2Nhc2UgMTk6SChNKTtkPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsPT09ZClyZXR1cm4gbnVsbDtlPTAhPT0oYi5lZmZlY3RUYWcmNjQpO2Y9ZC5yZW5kZXJpbmc7aWYobnVsbD09PWYpaWYoZSlyaShkLCExKTtlbHNle2lmKFMhPT10aXx8bnVsbCE9PWEmJjAhPT0oYS5lZmZlY3RUYWcmXG42NCkpZm9yKGY9Yi5jaGlsZDtudWxsIT09Zjspe2E9aGgoZik7aWYobnVsbCE9PWEpe2IuZWZmZWN0VGFnfD02NDtyaShkLCExKTtlPWEudXBkYXRlUXVldWU7bnVsbCE9PWUmJihiLnVwZGF0ZVF1ZXVlPWUsYi5lZmZlY3RUYWd8PTQpO251bGw9PT1kLmxhc3RFZmZlY3QmJihiLmZpcnN0RWZmZWN0PW51bGwpO2IubGFzdEVmZmVjdD1kLmxhc3RFZmZlY3Q7Zm9yKGQ9Yi5jaGlsZDtudWxsIT09ZDspZT1kLGY9YyxlLmVmZmVjdFRhZyY9MixlLm5leHRFZmZlY3Q9bnVsbCxlLmZpcnN0RWZmZWN0PW51bGwsZS5sYXN0RWZmZWN0PW51bGwsYT1lLmFsdGVybmF0ZSxudWxsPT09YT8oZS5jaGlsZEV4cGlyYXRpb25UaW1lPTAsZS5leHBpcmF0aW9uVGltZT1mLGUuY2hpbGQ9bnVsbCxlLm1lbW9pemVkUHJvcHM9bnVsbCxlLm1lbW9pemVkU3RhdGU9bnVsbCxlLnVwZGF0ZVF1ZXVlPW51bGwsZS5kZXBlbmRlbmNpZXM9bnVsbCk6KGUuY2hpbGRFeHBpcmF0aW9uVGltZT1hLmNoaWxkRXhwaXJhdGlvblRpbWUsXG5lLmV4cGlyYXRpb25UaW1lPWEuZXhwaXJhdGlvblRpbWUsZS5jaGlsZD1hLmNoaWxkLGUubWVtb2l6ZWRQcm9wcz1hLm1lbW9pemVkUHJvcHMsZS5tZW1vaXplZFN0YXRlPWEubWVtb2l6ZWRTdGF0ZSxlLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWUsZj1hLmRlcGVuZGVuY2llcyxlLmRlcGVuZGVuY2llcz1udWxsPT09Zj9udWxsOntleHBpcmF0aW9uVGltZTpmLmV4cGlyYXRpb25UaW1lLGZpcnN0Q29udGV4dDpmLmZpcnN0Q29udGV4dCxyZXNwb25kZXJzOmYucmVzcG9uZGVyc30pLGQ9ZC5zaWJsaW5nO0koTSxNLmN1cnJlbnQmMXwyKTtyZXR1cm4gYi5jaGlsZH1mPWYuc2libGluZ319ZWxzZXtpZighZSlpZihhPWhoKGYpLG51bGwhPT1hKXtpZihiLmVmZmVjdFRhZ3w9NjQsZT0hMCxjPWEudXBkYXRlUXVldWUsbnVsbCE9PWMmJihiLnVwZGF0ZVF1ZXVlPWMsYi5lZmZlY3RUYWd8PTQpLHJpKGQsITApLG51bGw9PT1kLnRhaWwmJlwiaGlkZGVuXCI9PT1kLnRhaWxNb2RlJiYhZi5hbHRlcm5hdGUpcmV0dXJuIGI9XG5iLmxhc3RFZmZlY3Q9ZC5sYXN0RWZmZWN0LG51bGwhPT1iJiYoYi5uZXh0RWZmZWN0PW51bGwpLG51bGx9ZWxzZSAyKiRmKCktZC5yZW5kZXJpbmdTdGFydFRpbWU+ZC50YWlsRXhwaXJhdGlvbiYmMTxjJiYoYi5lZmZlY3RUYWd8PTY0LGU9ITAscmkoZCwhMSksYi5leHBpcmF0aW9uVGltZT1iLmNoaWxkRXhwaXJhdGlvblRpbWU9Yy0xKTtkLmlzQmFja3dhcmRzPyhmLnNpYmxpbmc9Yi5jaGlsZCxiLmNoaWxkPWYpOihjPWQubGFzdCxudWxsIT09Yz9jLnNpYmxpbmc9ZjpiLmNoaWxkPWYsZC5sYXN0PWYpfXJldHVybiBudWxsIT09ZC50YWlsPygwPT09ZC50YWlsRXhwaXJhdGlvbiYmKGQudGFpbEV4cGlyYXRpb249JGYoKSs1MDApLGM9ZC50YWlsLGQucmVuZGVyaW5nPWMsZC50YWlsPWMuc2libGluZyxkLmxhc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0LGQucmVuZGVyaW5nU3RhcnRUaW1lPSRmKCksYy5zaWJsaW5nPW51bGwsYj1NLmN1cnJlbnQsSShNLGU/YiYxfDI6YiYxKSxjKTpudWxsfXRocm93IEVycm9yKHUoMTU2LFxuYi50YWcpKTt9ZnVuY3Rpb24gemkoYSl7c3dpdGNoKGEudGFnKXtjYXNlIDE6TChhLnR5cGUpJiZEZigpO3ZhciBiPWEuZWZmZWN0VGFnO3JldHVybiBiJjQwOTY/KGEuZWZmZWN0VGFnPWImLTQwOTd8NjQsYSk6bnVsbDtjYXNlIDM6ZWgoKTtIKEspO0goSik7Yj1hLmVmZmVjdFRhZztpZigwIT09KGImNjQpKXRocm93IEVycm9yKHUoMjg1KSk7YS5lZmZlY3RUYWc9YiYtNDA5N3w2NDtyZXR1cm4gYTtjYXNlIDU6cmV0dXJuIGdoKGEpLG51bGw7Y2FzZSAxMzpyZXR1cm4gSChNKSxiPWEuZWZmZWN0VGFnLGImNDA5Nj8oYS5lZmZlY3RUYWc9YiYtNDA5N3w2NCxhKTpudWxsO2Nhc2UgMTk6cmV0dXJuIEgoTSksbnVsbDtjYXNlIDQ6cmV0dXJuIGVoKCksbnVsbDtjYXNlIDEwOnJldHVybiBvZyhhKSxudWxsO2RlZmF1bHQ6cmV0dXJuIG51bGx9fWZ1bmN0aW9uIEFpKGEsYil7cmV0dXJue3ZhbHVlOmEsc291cmNlOmIsc3RhY2s6cWIoYil9fVxudmFyIEJpPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBXZWFrU2V0P1dlYWtTZXQ6U2V0O2Z1bmN0aW9uIENpKGEsYil7dmFyIGM9Yi5zb3VyY2UsZD1iLnN0YWNrO251bGw9PT1kJiZudWxsIT09YyYmKGQ9cWIoYykpO251bGwhPT1jJiZwYihjLnR5cGUpO2I9Yi52YWx1ZTtudWxsIT09YSYmMT09PWEudGFnJiZwYihhLnR5cGUpO3RyeXtjb25zb2xlLmVycm9yKGIpfWNhdGNoKGUpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXt0aHJvdyBlO30pfX1mdW5jdGlvbiBEaShhLGIpe3RyeXtiLnByb3BzPWEubWVtb2l6ZWRQcm9wcyxiLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSxiLmNvbXBvbmVudFdpbGxVbm1vdW50KCl9Y2F0Y2goYyl7RWkoYSxjKX19ZnVuY3Rpb24gRmkoYSl7dmFyIGI9YS5yZWY7aWYobnVsbCE9PWIpaWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIpdHJ5e2IobnVsbCl9Y2F0Y2goYyl7RWkoYSxjKX1lbHNlIGIuY3VycmVudD1udWxsfVxuZnVuY3Rpb24gR2koYSxiKXtzd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6Y2FzZSAyMjpyZXR1cm47Y2FzZSAxOmlmKGIuZWZmZWN0VGFnJjI1NiYmbnVsbCE9PWEpe3ZhciBjPWEubWVtb2l6ZWRQcm9wcyxkPWEubWVtb2l6ZWRTdGF0ZTthPWIuc3RhdGVOb2RlO2I9YS5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZShiLmVsZW1lbnRUeXBlPT09Yi50eXBlP2M6aWcoYi50eXBlLGMpLGQpO2EuX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGU9Yn1yZXR1cm47Y2FzZSAzOmNhc2UgNTpjYXNlIDY6Y2FzZSA0OmNhc2UgMTc6cmV0dXJufXRocm93IEVycm9yKHUoMTYzKSk7fVxuZnVuY3Rpb24gSGkoYSxiKXtiPWIudXBkYXRlUXVldWU7Yj1udWxsIT09Yj9iLmxhc3RFZmZlY3Q6bnVsbDtpZihudWxsIT09Yil7dmFyIGM9Yj1iLm5leHQ7ZG97aWYoKGMudGFnJmEpPT09YSl7dmFyIGQ9Yy5kZXN0cm95O2MuZGVzdHJveT12b2lkIDA7dm9pZCAwIT09ZCYmZCgpfWM9Yy5uZXh0fXdoaWxlKGMhPT1iKX19ZnVuY3Rpb24gSWkoYSxiKXtiPWIudXBkYXRlUXVldWU7Yj1udWxsIT09Yj9iLmxhc3RFZmZlY3Q6bnVsbDtpZihudWxsIT09Yil7dmFyIGM9Yj1iLm5leHQ7ZG97aWYoKGMudGFnJmEpPT09YSl7dmFyIGQ9Yy5jcmVhdGU7Yy5kZXN0cm95PWQoKX1jPWMubmV4dH13aGlsZShjIT09Yil9fVxuZnVuY3Rpb24gSmkoYSxiLGMpe3N3aXRjaChjLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTpjYXNlIDIyOklpKDMsYyk7cmV0dXJuO2Nhc2UgMTphPWMuc3RhdGVOb2RlO2lmKGMuZWZmZWN0VGFnJjQpaWYobnVsbD09PWIpYS5jb21wb25lbnREaWRNb3VudCgpO2Vsc2V7dmFyIGQ9Yy5lbGVtZW50VHlwZT09PWMudHlwZT9iLm1lbW9pemVkUHJvcHM6aWcoYy50eXBlLGIubWVtb2l6ZWRQcm9wcyk7YS5jb21wb25lbnREaWRVcGRhdGUoZCxiLm1lbW9pemVkU3RhdGUsYS5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZSl9Yj1jLnVwZGF0ZVF1ZXVlO251bGwhPT1iJiZDZyhjLGIsYSk7cmV0dXJuO2Nhc2UgMzpiPWMudXBkYXRlUXVldWU7aWYobnVsbCE9PWIpe2E9bnVsbDtpZihudWxsIT09Yy5jaGlsZClzd2l0Y2goYy5jaGlsZC50YWcpe2Nhc2UgNTphPWMuY2hpbGQuc3RhdGVOb2RlO2JyZWFrO2Nhc2UgMTphPWMuY2hpbGQuc3RhdGVOb2RlfUNnKGMsYixhKX1yZXR1cm47XG5jYXNlIDU6YT1jLnN0YXRlTm9kZTtudWxsPT09YiYmYy5lZmZlY3RUYWcmNCYmRmQoYy50eXBlLGMubWVtb2l6ZWRQcm9wcykmJmEuZm9jdXMoKTtyZXR1cm47Y2FzZSA2OnJldHVybjtjYXNlIDQ6cmV0dXJuO2Nhc2UgMTI6cmV0dXJuO2Nhc2UgMTM6bnVsbD09PWMubWVtb2l6ZWRTdGF0ZSYmKGM9Yy5hbHRlcm5hdGUsbnVsbCE9PWMmJihjPWMubWVtb2l6ZWRTdGF0ZSxudWxsIT09YyYmKGM9Yy5kZWh5ZHJhdGVkLG51bGwhPT1jJiZWYyhjKSkpKTtyZXR1cm47Y2FzZSAxOTpjYXNlIDE3OmNhc2UgMjA6Y2FzZSAyMTpyZXR1cm59dGhyb3cgRXJyb3IodSgxNjMpKTt9XG5mdW5jdGlvbiBLaShhLGIsYyl7XCJmdW5jdGlvblwiPT09dHlwZW9mIExpJiZMaShiKTtzd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTpjYXNlIDIyOmE9Yi51cGRhdGVRdWV1ZTtpZihudWxsIT09YSYmKGE9YS5sYXN0RWZmZWN0LG51bGwhPT1hKSl7dmFyIGQ9YS5uZXh0O2NnKDk3PGM/OTc6YyxmdW5jdGlvbigpe3ZhciBhPWQ7ZG97dmFyIGM9YS5kZXN0cm95O2lmKHZvaWQgMCE9PWMpe3ZhciBnPWI7dHJ5e2MoKX1jYXRjaChoKXtFaShnLGgpfX1hPWEubmV4dH13aGlsZShhIT09ZCl9KX1icmVhaztjYXNlIDE6RmkoYik7Yz1iLnN0YXRlTm9kZTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5jb21wb25lbnRXaWxsVW5tb3VudCYmRGkoYixjKTticmVhaztjYXNlIDU6RmkoYik7YnJlYWs7Y2FzZSA0Ok1pKGEsYixjKX19XG5mdW5jdGlvbiBOaShhKXt2YXIgYj1hLmFsdGVybmF0ZTthLnJldHVybj1udWxsO2EuY2hpbGQ9bnVsbDthLm1lbW9pemVkU3RhdGU9bnVsbDthLnVwZGF0ZVF1ZXVlPW51bGw7YS5kZXBlbmRlbmNpZXM9bnVsbDthLmFsdGVybmF0ZT1udWxsO2EuZmlyc3RFZmZlY3Q9bnVsbDthLmxhc3RFZmZlY3Q9bnVsbDthLnBlbmRpbmdQcm9wcz1udWxsO2EubWVtb2l6ZWRQcm9wcz1udWxsO2Euc3RhdGVOb2RlPW51bGw7bnVsbCE9PWImJk5pKGIpfWZ1bmN0aW9uIE9pKGEpe3JldHVybiA1PT09YS50YWd8fDM9PT1hLnRhZ3x8ND09PWEudGFnfVxuZnVuY3Rpb24gUGkoYSl7YTp7Zm9yKHZhciBiPWEucmV0dXJuO251bGwhPT1iOyl7aWYoT2koYikpe3ZhciBjPWI7YnJlYWsgYX1iPWIucmV0dXJufXRocm93IEVycm9yKHUoMTYwKSk7fWI9Yy5zdGF0ZU5vZGU7c3dpdGNoKGMudGFnKXtjYXNlIDU6dmFyIGQ9ITE7YnJlYWs7Y2FzZSAzOmI9Yi5jb250YWluZXJJbmZvO2Q9ITA7YnJlYWs7Y2FzZSA0OmI9Yi5jb250YWluZXJJbmZvO2Q9ITA7YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcih1KDE2MSkpO31jLmVmZmVjdFRhZyYxNiYmKFJiKGIsXCJcIiksYy5lZmZlY3RUYWcmPS0xNyk7YTpiOmZvcihjPWE7Oyl7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxPaShjLnJldHVybikpe2M9bnVsbDticmVhayBhfWM9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtmb3IoYz1jLnNpYmxpbmc7NSE9PWMudGFnJiY2IT09Yy50YWcmJjE4IT09Yy50YWc7KXtpZihjLmVmZmVjdFRhZyYyKWNvbnRpbnVlIGI7XG5pZihudWxsPT09Yy5jaGlsZHx8ND09PWMudGFnKWNvbnRpbnVlIGI7ZWxzZSBjLmNoaWxkLnJldHVybj1jLGM9Yy5jaGlsZH1pZighKGMuZWZmZWN0VGFnJjIpKXtjPWMuc3RhdGVOb2RlO2JyZWFrIGF9fWQ/UWkoYSxjLGIpOlJpKGEsYyxiKX1cbmZ1bmN0aW9uIFFpKGEsYixjKXt2YXIgZD1hLnRhZyxlPTU9PT1kfHw2PT09ZDtpZihlKWE9ZT9hLnN0YXRlTm9kZTphLnN0YXRlTm9kZS5pbnN0YW5jZSxiPzg9PT1jLm5vZGVUeXBlP2MucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoYSxiKTpjLmluc2VydEJlZm9yZShhLGIpOig4PT09Yy5ub2RlVHlwZT8oYj1jLnBhcmVudE5vZGUsYi5pbnNlcnRCZWZvcmUoYSxjKSk6KGI9YyxiLmFwcGVuZENoaWxkKGEpKSxjPWMuX3JlYWN0Um9vdENvbnRhaW5lcixudWxsIT09YyYmdm9pZCAwIT09Y3x8bnVsbCE9PWIub25jbGlja3x8KGIub25jbGljaz1zZCkpO2Vsc2UgaWYoNCE9PWQmJihhPWEuY2hpbGQsbnVsbCE9PWEpKWZvcihRaShhLGIsYyksYT1hLnNpYmxpbmc7bnVsbCE9PWE7KVFpKGEsYixjKSxhPWEuc2libGluZ31cbmZ1bmN0aW9uIFJpKGEsYixjKXt2YXIgZD1hLnRhZyxlPTU9PT1kfHw2PT09ZDtpZihlKWE9ZT9hLnN0YXRlTm9kZTphLnN0YXRlTm9kZS5pbnN0YW5jZSxiP2MuaW5zZXJ0QmVmb3JlKGEsYik6Yy5hcHBlbmRDaGlsZChhKTtlbHNlIGlmKDQhPT1kJiYoYT1hLmNoaWxkLG51bGwhPT1hKSlmb3IoUmkoYSxiLGMpLGE9YS5zaWJsaW5nO251bGwhPT1hOylSaShhLGIsYyksYT1hLnNpYmxpbmd9XG5mdW5jdGlvbiBNaShhLGIsYyl7Zm9yKHZhciBkPWIsZT0hMSxmLGc7Oyl7aWYoIWUpe2U9ZC5yZXR1cm47YTpmb3IoOzspe2lmKG51bGw9PT1lKXRocm93IEVycm9yKHUoMTYwKSk7Zj1lLnN0YXRlTm9kZTtzd2l0Y2goZS50YWcpe2Nhc2UgNTpnPSExO2JyZWFrIGE7Y2FzZSAzOmY9Zi5jb250YWluZXJJbmZvO2c9ITA7YnJlYWsgYTtjYXNlIDQ6Zj1mLmNvbnRhaW5lckluZm87Zz0hMDticmVhayBhfWU9ZS5yZXR1cm59ZT0hMH1pZig1PT09ZC50YWd8fDY9PT1kLnRhZyl7YTpmb3IodmFyIGg9YSxrPWQsbD1jLG09azs7KWlmKEtpKGgsbSxsKSxudWxsIT09bS5jaGlsZCYmNCE9PW0udGFnKW0uY2hpbGQucmV0dXJuPW0sbT1tLmNoaWxkO2Vsc2V7aWYobT09PWspYnJlYWsgYTtmb3IoO251bGw9PT1tLnNpYmxpbmc7KXtpZihudWxsPT09bS5yZXR1cm58fG0ucmV0dXJuPT09aylicmVhayBhO209bS5yZXR1cm59bS5zaWJsaW5nLnJldHVybj1tLnJldHVybjttPW0uc2libGluZ31nPyhoPVxuZixrPWQuc3RhdGVOb2RlLDg9PT1oLm5vZGVUeXBlP2gucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChrKTpoLnJlbW92ZUNoaWxkKGspKTpmLnJlbW92ZUNoaWxkKGQuc3RhdGVOb2RlKX1lbHNlIGlmKDQ9PT1kLnRhZyl7aWYobnVsbCE9PWQuY2hpbGQpe2Y9ZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztnPSEwO2QuY2hpbGQucmV0dXJuPWQ7ZD1kLmNoaWxkO2NvbnRpbnVlfX1lbHNlIGlmKEtpKGEsZCxjKSxudWxsIT09ZC5jaGlsZCl7ZC5jaGlsZC5yZXR1cm49ZDtkPWQuY2hpbGQ7Y29udGludWV9aWYoZD09PWIpYnJlYWs7Zm9yKDtudWxsPT09ZC5zaWJsaW5nOyl7aWYobnVsbD09PWQucmV0dXJufHxkLnJldHVybj09PWIpcmV0dXJuO2Q9ZC5yZXR1cm47ND09PWQudGFnJiYoZT0hMSl9ZC5zaWJsaW5nLnJldHVybj1kLnJldHVybjtkPWQuc2libGluZ319XG5mdW5jdGlvbiBTaShhLGIpe3N3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNDpjYXNlIDE1OmNhc2UgMjI6SGkoMyxiKTtyZXR1cm47Y2FzZSAxOnJldHVybjtjYXNlIDU6dmFyIGM9Yi5zdGF0ZU5vZGU7aWYobnVsbCE9Yyl7dmFyIGQ9Yi5tZW1vaXplZFByb3BzLGU9bnVsbCE9PWE/YS5tZW1vaXplZFByb3BzOmQ7YT1iLnR5cGU7dmFyIGY9Yi51cGRhdGVRdWV1ZTtiLnVwZGF0ZVF1ZXVlPW51bGw7aWYobnVsbCE9PWYpe2NbTmRdPWQ7XCJpbnB1dFwiPT09YSYmXCJyYWRpb1wiPT09ZC50eXBlJiZudWxsIT1kLm5hbWUmJkJiKGMsZCk7cGQoYSxlKTtiPXBkKGEsZCk7Zm9yKGU9MDtlPGYubGVuZ3RoO2UrPTIpe3ZhciBnPWZbZV0saD1mW2UrMV07XCJzdHlsZVwiPT09Zz9tZChjLGgpOlwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWc/UWIoYyxoKTpcImNoaWxkcmVuXCI9PT1nP1JiKGMsaCk6WGEoYyxnLGgsYil9c3dpdGNoKGEpe2Nhc2UgXCJpbnB1dFwiOkNiKGMsZCk7YnJlYWs7XG5jYXNlIFwidGV4dGFyZWFcIjpLYihjLGQpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpiPWMuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZSxjLl93cmFwcGVyU3RhdGUud2FzTXVsdGlwbGU9ISFkLm11bHRpcGxlLGE9ZC52YWx1ZSxudWxsIT1hP0hiKGMsISFkLm11bHRpcGxlLGEsITEpOmIhPT0hIWQubXVsdGlwbGUmJihudWxsIT1kLmRlZmF1bHRWYWx1ZT9IYihjLCEhZC5tdWx0aXBsZSxkLmRlZmF1bHRWYWx1ZSwhMCk6SGIoYywhIWQubXVsdGlwbGUsZC5tdWx0aXBsZT9bXTpcIlwiLCExKSl9fX1yZXR1cm47Y2FzZSA2OmlmKG51bGw9PT1iLnN0YXRlTm9kZSl0aHJvdyBFcnJvcih1KDE2MikpO2Iuc3RhdGVOb2RlLm5vZGVWYWx1ZT1iLm1lbW9pemVkUHJvcHM7cmV0dXJuO2Nhc2UgMzpiPWIuc3RhdGVOb2RlO2IuaHlkcmF0ZSYmKGIuaHlkcmF0ZT0hMSxWYyhiLmNvbnRhaW5lckluZm8pKTtyZXR1cm47Y2FzZSAxMjpyZXR1cm47Y2FzZSAxMzpjPWI7bnVsbD09PWIubWVtb2l6ZWRTdGF0ZT9cbmQ9ITE6KGQ9ITAsYz1iLmNoaWxkLFRpPSRmKCkpO2lmKG51bGwhPT1jKWE6Zm9yKGE9Yzs7KXtpZig1PT09YS50YWcpZj1hLnN0YXRlTm9kZSxkPyhmPWYuc3R5bGUsXCJmdW5jdGlvblwiPT09dHlwZW9mIGYuc2V0UHJvcGVydHk/Zi5zZXRQcm9wZXJ0eShcImRpc3BsYXlcIixcIm5vbmVcIixcImltcG9ydGFudFwiKTpmLmRpc3BsYXk9XCJub25lXCIpOihmPWEuc3RhdGVOb2RlLGU9YS5tZW1vaXplZFByb3BzLnN0eWxlLGU9dm9pZCAwIT09ZSYmbnVsbCE9PWUmJmUuaGFzT3duUHJvcGVydHkoXCJkaXNwbGF5XCIpP2UuZGlzcGxheTpudWxsLGYuc3R5bGUuZGlzcGxheT1sZChcImRpc3BsYXlcIixlKSk7ZWxzZSBpZig2PT09YS50YWcpYS5zdGF0ZU5vZGUubm9kZVZhbHVlPWQ/XCJcIjphLm1lbW9pemVkUHJvcHM7ZWxzZSBpZigxMz09PWEudGFnJiZudWxsIT09YS5tZW1vaXplZFN0YXRlJiZudWxsPT09YS5tZW1vaXplZFN0YXRlLmRlaHlkcmF0ZWQpe2Y9YS5jaGlsZC5zaWJsaW5nO2YucmV0dXJuPWE7YT1cbmY7Y29udGludWV9ZWxzZSBpZihudWxsIT09YS5jaGlsZCl7YS5jaGlsZC5yZXR1cm49YTthPWEuY2hpbGQ7Y29udGludWV9aWYoYT09PWMpYnJlYWs7Zm9yKDtudWxsPT09YS5zaWJsaW5nOyl7aWYobnVsbD09PWEucmV0dXJufHxhLnJldHVybj09PWMpYnJlYWsgYTthPWEucmV0dXJufWEuc2libGluZy5yZXR1cm49YS5yZXR1cm47YT1hLnNpYmxpbmd9VWkoYik7cmV0dXJuO2Nhc2UgMTk6VWkoYik7cmV0dXJuO2Nhc2UgMTc6cmV0dXJufXRocm93IEVycm9yKHUoMTYzKSk7fWZ1bmN0aW9uIFVpKGEpe3ZhciBiPWEudXBkYXRlUXVldWU7aWYobnVsbCE9PWIpe2EudXBkYXRlUXVldWU9bnVsbDt2YXIgYz1hLnN0YXRlTm9kZTtudWxsPT09YyYmKGM9YS5zdGF0ZU5vZGU9bmV3IEJpKTtiLmZvckVhY2goZnVuY3Rpb24oYil7dmFyIGQ9VmkuYmluZChudWxsLGEsYik7Yy5oYXMoYil8fChjLmFkZChiKSxiLnRoZW4oZCxkKSl9KX19XG52YXIgV2k9XCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtNYXA/V2Vha01hcDpNYXA7ZnVuY3Rpb24gWGkoYSxiLGMpe2M9d2coYyxudWxsKTtjLnRhZz0zO2MucGF5bG9hZD17ZWxlbWVudDpudWxsfTt2YXIgZD1iLnZhbHVlO2MuY2FsbGJhY2s9ZnVuY3Rpb24oKXtZaXx8KFlpPSEwLFppPWQpO0NpKGEsYil9O3JldHVybiBjfVxuZnVuY3Rpb24gJGkoYSxiLGMpe2M9d2coYyxudWxsKTtjLnRhZz0zO3ZhciBkPWEudHlwZS5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQpe3ZhciBlPWIudmFsdWU7Yy5wYXlsb2FkPWZ1bmN0aW9uKCl7Q2koYSxiKTtyZXR1cm4gZChlKX19dmFyIGY9YS5zdGF0ZU5vZGU7bnVsbCE9PWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBmLmNvbXBvbmVudERpZENhdGNoJiYoYy5jYWxsYmFjaz1mdW5jdGlvbigpe1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBkJiYobnVsbD09PWFqP2FqPW5ldyBTZXQoW3RoaXNdKTphai5hZGQodGhpcyksQ2koYSxiKSk7dmFyIGM9Yi5zdGFjazt0aGlzLmNvbXBvbmVudERpZENhdGNoKGIudmFsdWUse2NvbXBvbmVudFN0YWNrOm51bGwhPT1jP2M6XCJcIn0pfSk7cmV0dXJuIGN9XG52YXIgYmo9TWF0aC5jZWlsLGNqPVdhLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsZGo9V2EuUmVhY3RDdXJyZW50T3duZXIsVj0wLGVqPTgsZmo9MTYsZ2o9MzIsdGk9MCxoaj0xLGlqPTIsdWk9Myx2aT00LGpqPTUsVz1WLFQ9bnVsbCxYPW51bGwsVT0wLFM9dGksa2o9bnVsbCxsaj0xMDczNzQxODIzLG1qPTEwNzM3NDE4MjMsbmo9bnVsbCx3aT0wLG9qPSExLFRpPTAscGo9NTAwLFk9bnVsbCxZaT0hMSxaaT1udWxsLGFqPW51bGwscWo9ITEscmo9bnVsbCxzaj05MCx0aj1udWxsLHVqPTAsdmo9bnVsbCx3aj0wO2Z1bmN0aW9uIEdnKCl7cmV0dXJuKFcmKGZqfGdqKSkhPT1WPzEwNzM3NDE4MjEtKCRmKCkvMTB8MCk6MCE9PXdqP3dqOndqPTEwNzM3NDE4MjEtKCRmKCkvMTB8MCl9XG5mdW5jdGlvbiBIZyhhLGIsYyl7Yj1iLm1vZGU7aWYoMD09PShiJjIpKXJldHVybiAxMDczNzQxODIzO3ZhciBkPWFnKCk7aWYoMD09PShiJjQpKXJldHVybiA5OT09PWQ/MTA3Mzc0MTgyMzoxMDczNzQxODIyO2lmKChXJmZqKSE9PVYpcmV0dXJuIFU7aWYobnVsbCE9PWMpYT1oZyhhLGMudGltZW91dE1zfDB8fDVFMywyNTApO2Vsc2Ugc3dpdGNoKGQpe2Nhc2UgOTk6YT0xMDczNzQxODIzO2JyZWFrO2Nhc2UgOTg6YT1oZyhhLDE1MCwxMDApO2JyZWFrO2Nhc2UgOTc6Y2FzZSA5NjphPWhnKGEsNUUzLDI1MCk7YnJlYWs7Y2FzZSA5NTphPTI7YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcih1KDMyNikpO31udWxsIT09VCYmYT09PVUmJi0tYTtyZXR1cm4gYX1cbmZ1bmN0aW9uIElnKGEsYil7aWYoNTA8dWopdGhyb3cgdWo9MCx2aj1udWxsLEVycm9yKHUoMTg1KSk7YT14aihhLGIpO2lmKG51bGwhPT1hKXt2YXIgYz1hZygpOzEwNzM3NDE4MjM9PT1iPyhXJmVqKSE9PVYmJihXJihmanxnaikpPT09Vj95aihhKTooWihhKSxXPT09ViYmZ2coKSk6WihhKTsoVyY0KT09PVZ8fDk4IT09YyYmOTkhPT1jfHwobnVsbD09PXRqP3RqPW5ldyBNYXAoW1thLGJdXSk6KGM9dGouZ2V0KGEpLCh2b2lkIDA9PT1jfHxjPmIpJiZ0ai5zZXQoYSxiKSkpfX1cbmZ1bmN0aW9uIHhqKGEsYil7YS5leHBpcmF0aW9uVGltZTxiJiYoYS5leHBpcmF0aW9uVGltZT1iKTt2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09YyYmYy5leHBpcmF0aW9uVGltZTxiJiYoYy5leHBpcmF0aW9uVGltZT1iKTt2YXIgZD1hLnJldHVybixlPW51bGw7aWYobnVsbD09PWQmJjM9PT1hLnRhZyllPWEuc3RhdGVOb2RlO2Vsc2UgZm9yKDtudWxsIT09ZDspe2M9ZC5hbHRlcm5hdGU7ZC5jaGlsZEV4cGlyYXRpb25UaW1lPGImJihkLmNoaWxkRXhwaXJhdGlvblRpbWU9Yik7bnVsbCE9PWMmJmMuY2hpbGRFeHBpcmF0aW9uVGltZTxiJiYoYy5jaGlsZEV4cGlyYXRpb25UaW1lPWIpO2lmKG51bGw9PT1kLnJldHVybiYmMz09PWQudGFnKXtlPWQuc3RhdGVOb2RlO2JyZWFrfWQ9ZC5yZXR1cm59bnVsbCE9PWUmJihUPT09ZSYmKEJnKGIpLFM9PT12aSYmeGkoZSxVKSkseWkoZSxiKSk7cmV0dXJuIGV9XG5mdW5jdGlvbiB6aihhKXt2YXIgYj1hLmxhc3RFeHBpcmVkVGltZTtpZigwIT09YilyZXR1cm4gYjtiPWEuZmlyc3RQZW5kaW5nVGltZTtpZighQWooYSxiKSlyZXR1cm4gYjt2YXIgYz1hLmxhc3RQaW5nZWRUaW1lO2E9YS5uZXh0S25vd25QZW5kaW5nTGV2ZWw7YT1jPmE/YzphO3JldHVybiAyPj1hJiZiIT09YT8wOmF9XG5mdW5jdGlvbiBaKGEpe2lmKDAhPT1hLmxhc3RFeHBpcmVkVGltZSlhLmNhbGxiYWNrRXhwaXJhdGlvblRpbWU9MTA3Mzc0MTgyMyxhLmNhbGxiYWNrUHJpb3JpdHk9OTksYS5jYWxsYmFja05vZGU9ZWcoeWouYmluZChudWxsLGEpKTtlbHNle3ZhciBiPXpqKGEpLGM9YS5jYWxsYmFja05vZGU7aWYoMD09PWIpbnVsbCE9PWMmJihhLmNhbGxiYWNrTm9kZT1udWxsLGEuY2FsbGJhY2tFeHBpcmF0aW9uVGltZT0wLGEuY2FsbGJhY2tQcmlvcml0eT05MCk7ZWxzZXt2YXIgZD1HZygpOzEwNzM3NDE4MjM9PT1iP2Q9OTk6MT09PWJ8fDI9PT1iP2Q9OTU6KGQ9MTAqKDEwNzM3NDE4MjEtYiktMTAqKDEwNzM3NDE4MjEtZCksZD0wPj1kPzk5OjI1MD49ZD85ODo1MjUwPj1kPzk3Ojk1KTtpZihudWxsIT09Yyl7dmFyIGU9YS5jYWxsYmFja1ByaW9yaXR5O2lmKGEuY2FsbGJhY2tFeHBpcmF0aW9uVGltZT09PWImJmU+PWQpcmV0dXJuO2MhPT1UZiYmS2YoYyl9YS5jYWxsYmFja0V4cGlyYXRpb25UaW1lPVxuYjthLmNhbGxiYWNrUHJpb3JpdHk9ZDtiPTEwNzM3NDE4MjM9PT1iP2VnKHlqLmJpbmQobnVsbCxhKSk6ZGcoZCxCai5iaW5kKG51bGwsYSkse3RpbWVvdXQ6MTAqKDEwNzM3NDE4MjEtYiktJGYoKX0pO2EuY2FsbGJhY2tOb2RlPWJ9fX1cbmZ1bmN0aW9uIEJqKGEsYil7d2o9MDtpZihiKXJldHVybiBiPUdnKCksQ2ooYSxiKSxaKGEpLG51bGw7dmFyIGM9emooYSk7aWYoMCE9PWMpe2I9YS5jYWxsYmFja05vZGU7aWYoKFcmKGZqfGdqKSkhPT1WKXRocm93IEVycm9yKHUoMzI3KSk7RGooKTthPT09VCYmYz09PVV8fEVqKGEsYyk7aWYobnVsbCE9PVgpe3ZhciBkPVc7V3w9Zmo7dmFyIGU9RmooKTtkbyB0cnl7R2ooKTticmVha31jYXRjaChoKXtIaihhLGgpfXdoaWxlKDEpO25nKCk7Vz1kO2NqLmN1cnJlbnQ9ZTtpZihTPT09aGopdGhyb3cgYj1raixFaihhLGMpLHhpKGEsYyksWihhKSxiO2lmKG51bGw9PT1YKXN3aXRjaChlPWEuZmluaXNoZWRXb3JrPWEuY3VycmVudC5hbHRlcm5hdGUsYS5maW5pc2hlZEV4cGlyYXRpb25UaW1lPWMsZD1TLFQ9bnVsbCxkKXtjYXNlIHRpOmNhc2UgaGo6dGhyb3cgRXJyb3IodSgzNDUpKTtjYXNlIGlqOkNqKGEsMjxjPzI6Yyk7YnJlYWs7Y2FzZSB1aTp4aShhLGMpO2Q9YS5sYXN0U3VzcGVuZGVkVGltZTtcbmM9PT1kJiYoYS5uZXh0S25vd25QZW5kaW5nTGV2ZWw9SWooZSkpO2lmKDEwNzM3NDE4MjM9PT1saiYmKGU9VGkrcGotJGYoKSwxMDxlKSl7aWYob2ope3ZhciBmPWEubGFzdFBpbmdlZFRpbWU7aWYoMD09PWZ8fGY+PWMpe2EubGFzdFBpbmdlZFRpbWU9YztFaihhLGMpO2JyZWFrfX1mPXpqKGEpO2lmKDAhPT1mJiZmIT09YylicmVhaztpZigwIT09ZCYmZCE9PWMpe2EubGFzdFBpbmdlZFRpbWU9ZDticmVha31hLnRpbWVvdXRIYW5kbGU9SGQoSmouYmluZChudWxsLGEpLGUpO2JyZWFrfUpqKGEpO2JyZWFrO2Nhc2Ugdmk6eGkoYSxjKTtkPWEubGFzdFN1c3BlbmRlZFRpbWU7Yz09PWQmJihhLm5leHRLbm93blBlbmRpbmdMZXZlbD1JaihlKSk7aWYob2omJihlPWEubGFzdFBpbmdlZFRpbWUsMD09PWV8fGU+PWMpKXthLmxhc3RQaW5nZWRUaW1lPWM7RWooYSxjKTticmVha31lPXpqKGEpO2lmKDAhPT1lJiZlIT09YylicmVhaztpZigwIT09ZCYmZCE9PWMpe2EubGFzdFBpbmdlZFRpbWU9XG5kO2JyZWFrfTEwNzM3NDE4MjMhPT1taj9kPTEwKigxMDczNzQxODIxLW1qKS0kZigpOjEwNzM3NDE4MjM9PT1saj9kPTA6KGQ9MTAqKDEwNzM3NDE4MjEtbGopLTVFMyxlPSRmKCksYz0xMCooMTA3Mzc0MTgyMS1jKS1lLGQ9ZS1kLDA+ZCYmKGQ9MCksZD0oMTIwPmQ/MTIwOjQ4MD5kPzQ4MDoxMDgwPmQ/MTA4MDoxOTIwPmQ/MTkyMDozRTM+ZD8zRTM6NDMyMD5kPzQzMjA6MTk2MCpiaihkLzE5NjApKS1kLGM8ZCYmKGQ9YykpO2lmKDEwPGQpe2EudGltZW91dEhhbmRsZT1IZChKai5iaW5kKG51bGwsYSksZCk7YnJlYWt9SmooYSk7YnJlYWs7Y2FzZSBqajppZigxMDczNzQxODIzIT09bGomJm51bGwhPT1uail7Zj1sajt2YXIgZz1uajtkPWcuYnVzeU1pbkR1cmF0aW9uTXN8MDswPj1kP2Q9MDooZT1nLmJ1c3lEZWxheU1zfDAsZj0kZigpLSgxMCooMTA3Mzc0MTgyMS1mKS0oZy50aW1lb3V0TXN8MHx8NUUzKSksZD1mPD1lPzA6ZStkLWYpO2lmKDEwPGQpe3hpKGEsYyk7YS50aW1lb3V0SGFuZGxlPVxuSGQoSmouYmluZChudWxsLGEpLGQpO2JyZWFrfX1KaihhKTticmVhaztkZWZhdWx0OnRocm93IEVycm9yKHUoMzI5KSk7fVooYSk7aWYoYS5jYWxsYmFja05vZGU9PT1iKXJldHVybiBCai5iaW5kKG51bGwsYSl9fXJldHVybiBudWxsfVxuZnVuY3Rpb24geWooYSl7dmFyIGI9YS5sYXN0RXhwaXJlZFRpbWU7Yj0wIT09Yj9iOjEwNzM3NDE4MjM7aWYoKFcmKGZqfGdqKSkhPT1WKXRocm93IEVycm9yKHUoMzI3KSk7RGooKTthPT09VCYmYj09PVV8fEVqKGEsYik7aWYobnVsbCE9PVgpe3ZhciBjPVc7V3w9Zmo7dmFyIGQ9RmooKTtkbyB0cnl7S2ooKTticmVha31jYXRjaChlKXtIaihhLGUpfXdoaWxlKDEpO25nKCk7Vz1jO2NqLmN1cnJlbnQ9ZDtpZihTPT09aGopdGhyb3cgYz1raixFaihhLGIpLHhpKGEsYiksWihhKSxjO2lmKG51bGwhPT1YKXRocm93IEVycm9yKHUoMjYxKSk7YS5maW5pc2hlZFdvcms9YS5jdXJyZW50LmFsdGVybmF0ZTthLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU9YjtUPW51bGw7SmooYSk7WihhKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBMaigpe2lmKG51bGwhPT10ail7dmFyIGE9dGo7dGo9bnVsbDthLmZvckVhY2goZnVuY3Rpb24oYSxjKXtDaihjLGEpO1ooYyl9KTtnZygpfX1cbmZ1bmN0aW9uIE1qKGEsYil7dmFyIGM9VztXfD0xO3RyeXtyZXR1cm4gYShiKX1maW5hbGx5e1c9YyxXPT09ViYmZ2coKX19ZnVuY3Rpb24gTmooYSxiKXt2YXIgYz1XO1cmPS0yO1d8PWVqO3RyeXtyZXR1cm4gYShiKX1maW5hbGx5e1c9YyxXPT09ViYmZ2coKX19XG5mdW5jdGlvbiBFaihhLGIpe2EuZmluaXNoZWRXb3JrPW51bGw7YS5maW5pc2hlZEV4cGlyYXRpb25UaW1lPTA7dmFyIGM9YS50aW1lb3V0SGFuZGxlOy0xIT09YyYmKGEudGltZW91dEhhbmRsZT0tMSxJZChjKSk7aWYobnVsbCE9PVgpZm9yKGM9WC5yZXR1cm47bnVsbCE9PWM7KXt2YXIgZD1jO3N3aXRjaChkLnRhZyl7Y2FzZSAxOmQ9ZC50eXBlLmNoaWxkQ29udGV4dFR5cGVzO251bGwhPT1kJiZ2b2lkIDAhPT1kJiZEZigpO2JyZWFrO2Nhc2UgMzplaCgpO0goSyk7SChKKTticmVhaztjYXNlIDU6Z2goZCk7YnJlYWs7Y2FzZSA0OmVoKCk7YnJlYWs7Y2FzZSAxMzpIKE0pO2JyZWFrO2Nhc2UgMTk6SChNKTticmVhaztjYXNlIDEwOm9nKGQpfWM9Yy5yZXR1cm59VD1hO1g9U2coYS5jdXJyZW50LG51bGwpO1U9YjtTPXRpO2tqPW51bGw7bWo9bGo9MTA3Mzc0MTgyMztuaj1udWxsO3dpPTA7b2o9ITF9XG5mdW5jdGlvbiBIaihhLGIpe2Rve3RyeXtuZygpO2poLmN1cnJlbnQ9c2g7aWYobWgpZm9yKHZhciBjPU4ubWVtb2l6ZWRTdGF0ZTtudWxsIT09Yzspe3ZhciBkPWMucXVldWU7bnVsbCE9PWQmJihkLnBlbmRpbmc9bnVsbCk7Yz1jLm5leHR9bGg9MDtQPU89Tj1udWxsO21oPSExO2lmKG51bGw9PT1YfHxudWxsPT09WC5yZXR1cm4pcmV0dXJuIFM9aGosa2o9YixYPW51bGw7YTp7dmFyIGU9YSxmPVgucmV0dXJuLGc9WCxoPWI7Yj1VO2cuZWZmZWN0VGFnfD0yMDQ4O2cuZmlyc3RFZmZlY3Q9Zy5sYXN0RWZmZWN0PW51bGw7aWYobnVsbCE9PWgmJlwib2JqZWN0XCI9PT10eXBlb2YgaCYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGgudGhlbil7dmFyIGs9aDtpZigwPT09KGcubW9kZSYyKSl7dmFyIGw9Zy5hbHRlcm5hdGU7bD8oZy51cGRhdGVRdWV1ZT1sLnVwZGF0ZVF1ZXVlLGcubWVtb2l6ZWRTdGF0ZT1sLm1lbW9pemVkU3RhdGUsZy5leHBpcmF0aW9uVGltZT1sLmV4cGlyYXRpb25UaW1lKTooZy51cGRhdGVRdWV1ZT1cbm51bGwsZy5tZW1vaXplZFN0YXRlPW51bGwpfXZhciBtPTAhPT0oTS5jdXJyZW50JjEpLHA9Zjtkb3t2YXIgeDtpZih4PTEzPT09cC50YWcpe3ZhciB6PXAubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09eil4PW51bGwhPT16LmRlaHlkcmF0ZWQ/ITA6ITE7ZWxzZXt2YXIgY2E9cC5tZW1vaXplZFByb3BzO3g9dm9pZCAwPT09Y2EuZmFsbGJhY2s/ITE6ITAhPT1jYS51bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFjaz8hMDptPyExOiEwfX1pZih4KXt2YXIgRD1wLnVwZGF0ZVF1ZXVlO2lmKG51bGw9PT1EKXt2YXIgdD1uZXcgU2V0O3QuYWRkKGspO3AudXBkYXRlUXVldWU9dH1lbHNlIEQuYWRkKGspO2lmKDA9PT0ocC5tb2RlJjIpKXtwLmVmZmVjdFRhZ3w9NjQ7Zy5lZmZlY3RUYWcmPS0yOTgxO2lmKDE9PT1nLnRhZylpZihudWxsPT09Zy5hbHRlcm5hdGUpZy50YWc9MTc7ZWxzZXt2YXIgeT13ZygxMDczNzQxODIzLG51bGwpO3kudGFnPTI7eGcoZyx5KX1nLmV4cGlyYXRpb25UaW1lPTEwNzM3NDE4MjM7XG5icmVhayBhfWg9dm9pZCAwO2c9Yjt2YXIgQT1lLnBpbmdDYWNoZTtudWxsPT09QT8oQT1lLnBpbmdDYWNoZT1uZXcgV2ksaD1uZXcgU2V0LEEuc2V0KGssaCkpOihoPUEuZ2V0KGspLHZvaWQgMD09PWgmJihoPW5ldyBTZXQsQS5zZXQoayxoKSkpO2lmKCFoLmhhcyhnKSl7aC5hZGQoZyk7dmFyIHE9T2ouYmluZChudWxsLGUsayxnKTtrLnRoZW4ocSxxKX1wLmVmZmVjdFRhZ3w9NDA5NjtwLmV4cGlyYXRpb25UaW1lPWI7YnJlYWsgYX1wPXAucmV0dXJufXdoaWxlKG51bGwhPT1wKTtoPUVycm9yKChwYihnLnR5cGUpfHxcIkEgUmVhY3QgY29tcG9uZW50XCIpK1wiIHN1c3BlbmRlZCB3aGlsZSByZW5kZXJpbmcsIGJ1dCBubyBmYWxsYmFjayBVSSB3YXMgc3BlY2lmaWVkLlxcblxcbkFkZCBhIDxTdXNwZW5zZSBmYWxsYmFjaz0uLi4+IGNvbXBvbmVudCBoaWdoZXIgaW4gdGhlIHRyZWUgdG8gcHJvdmlkZSBhIGxvYWRpbmcgaW5kaWNhdG9yIG9yIHBsYWNlaG9sZGVyIHRvIGRpc3BsYXkuXCIrcWIoZykpfVMhPT1cbmpqJiYoUz1paik7aD1BaShoLGcpO3A9Zjtkb3tzd2l0Y2gocC50YWcpe2Nhc2UgMzprPWg7cC5lZmZlY3RUYWd8PTQwOTY7cC5leHBpcmF0aW9uVGltZT1iO3ZhciBCPVhpKHAsayxiKTt5ZyhwLEIpO2JyZWFrIGE7Y2FzZSAxOms9aDt2YXIgdz1wLnR5cGUsdWI9cC5zdGF0ZU5vZGU7aWYoMD09PShwLmVmZmVjdFRhZyY2NCkmJihcImZ1bmN0aW9uXCI9PT10eXBlb2Ygdy5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3J8fG51bGwhPT11YiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIHViLmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PWFqfHwhYWouaGFzKHViKSkpKXtwLmVmZmVjdFRhZ3w9NDA5NjtwLmV4cGlyYXRpb25UaW1lPWI7dmFyIHZiPSRpKHAsayxiKTt5ZyhwLHZiKTticmVhayBhfX1wPXAucmV0dXJufXdoaWxlKG51bGwhPT1wKX1YPVBqKFgpfWNhdGNoKFhjKXtiPVhjO2NvbnRpbnVlfWJyZWFrfXdoaWxlKDEpfVxuZnVuY3Rpb24gRmooKXt2YXIgYT1jai5jdXJyZW50O2NqLmN1cnJlbnQ9c2g7cmV0dXJuIG51bGw9PT1hP3NoOmF9ZnVuY3Rpb24gQWcoYSxiKXthPGxqJiYyPGEmJihsaj1hKTtudWxsIT09YiYmYTxtaiYmMjxhJiYobWo9YSxuaj1iKX1mdW5jdGlvbiBCZyhhKXthPndpJiYod2k9YSl9ZnVuY3Rpb24gS2ooKXtmb3IoO251bGwhPT1YOylYPVFqKFgpfWZ1bmN0aW9uIEdqKCl7Zm9yKDtudWxsIT09WCYmIVVmKCk7KVg9UWooWCl9ZnVuY3Rpb24gUWooYSl7dmFyIGI9UmooYS5hbHRlcm5hdGUsYSxVKTthLm1lbW9pemVkUHJvcHM9YS5wZW5kaW5nUHJvcHM7bnVsbD09PWImJihiPVBqKGEpKTtkai5jdXJyZW50PW51bGw7cmV0dXJuIGJ9XG5mdW5jdGlvbiBQaihhKXtYPWE7ZG97dmFyIGI9WC5hbHRlcm5hdGU7YT1YLnJldHVybjtpZigwPT09KFguZWZmZWN0VGFnJjIwNDgpKXtiPXNpKGIsWCxVKTtpZigxPT09VXx8MSE9PVguY2hpbGRFeHBpcmF0aW9uVGltZSl7Zm9yKHZhciBjPTAsZD1YLmNoaWxkO251bGwhPT1kOyl7dmFyIGU9ZC5leHBpcmF0aW9uVGltZSxmPWQuY2hpbGRFeHBpcmF0aW9uVGltZTtlPmMmJihjPWUpO2Y+YyYmKGM9Zik7ZD1kLnNpYmxpbmd9WC5jaGlsZEV4cGlyYXRpb25UaW1lPWN9aWYobnVsbCE9PWIpcmV0dXJuIGI7bnVsbCE9PWEmJjA9PT0oYS5lZmZlY3RUYWcmMjA0OCkmJihudWxsPT09YS5maXJzdEVmZmVjdCYmKGEuZmlyc3RFZmZlY3Q9WC5maXJzdEVmZmVjdCksbnVsbCE9PVgubGFzdEVmZmVjdCYmKG51bGwhPT1hLmxhc3RFZmZlY3QmJihhLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1YLmZpcnN0RWZmZWN0KSxhLmxhc3RFZmZlY3Q9WC5sYXN0RWZmZWN0KSwxPFguZWZmZWN0VGFnJiYobnVsbCE9PVxuYS5sYXN0RWZmZWN0P2EubGFzdEVmZmVjdC5uZXh0RWZmZWN0PVg6YS5maXJzdEVmZmVjdD1YLGEubGFzdEVmZmVjdD1YKSl9ZWxzZXtiPXppKFgpO2lmKG51bGwhPT1iKXJldHVybiBiLmVmZmVjdFRhZyY9MjA0NyxiO251bGwhPT1hJiYoYS5maXJzdEVmZmVjdD1hLmxhc3RFZmZlY3Q9bnVsbCxhLmVmZmVjdFRhZ3w9MjA0OCl9Yj1YLnNpYmxpbmc7aWYobnVsbCE9PWIpcmV0dXJuIGI7WD1hfXdoaWxlKG51bGwhPT1YKTtTPT09dGkmJihTPWpqKTtyZXR1cm4gbnVsbH1mdW5jdGlvbiBJaihhKXt2YXIgYj1hLmV4cGlyYXRpb25UaW1lO2E9YS5jaGlsZEV4cGlyYXRpb25UaW1lO3JldHVybiBiPmE/YjphfWZ1bmN0aW9uIEpqKGEpe3ZhciBiPWFnKCk7Y2coOTksU2ouYmluZChudWxsLGEsYikpO3JldHVybiBudWxsfVxuZnVuY3Rpb24gU2ooYSxiKXtkbyBEaigpO3doaWxlKG51bGwhPT1yaik7aWYoKFcmKGZqfGdqKSkhPT1WKXRocm93IEVycm9yKHUoMzI3KSk7dmFyIGM9YS5maW5pc2hlZFdvcmssZD1hLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU7aWYobnVsbD09PWMpcmV0dXJuIG51bGw7YS5maW5pc2hlZFdvcms9bnVsbDthLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU9MDtpZihjPT09YS5jdXJyZW50KXRocm93IEVycm9yKHUoMTc3KSk7YS5jYWxsYmFja05vZGU9bnVsbDthLmNhbGxiYWNrRXhwaXJhdGlvblRpbWU9MDthLmNhbGxiYWNrUHJpb3JpdHk9OTA7YS5uZXh0S25vd25QZW5kaW5nTGV2ZWw9MDt2YXIgZT1JaihjKTthLmZpcnN0UGVuZGluZ1RpbWU9ZTtkPD1hLmxhc3RTdXNwZW5kZWRUaW1lP2EuZmlyc3RTdXNwZW5kZWRUaW1lPWEubGFzdFN1c3BlbmRlZFRpbWU9YS5uZXh0S25vd25QZW5kaW5nTGV2ZWw9MDpkPD1hLmZpcnN0U3VzcGVuZGVkVGltZSYmKGEuZmlyc3RTdXNwZW5kZWRUaW1lPVxuZC0xKTtkPD1hLmxhc3RQaW5nZWRUaW1lJiYoYS5sYXN0UGluZ2VkVGltZT0wKTtkPD1hLmxhc3RFeHBpcmVkVGltZSYmKGEubGFzdEV4cGlyZWRUaW1lPTApO2E9PT1UJiYoWD1UPW51bGwsVT0wKTsxPGMuZWZmZWN0VGFnP251bGwhPT1jLmxhc3RFZmZlY3Q/KGMubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWMsZT1jLmZpcnN0RWZmZWN0KTplPWM6ZT1jLmZpcnN0RWZmZWN0O2lmKG51bGwhPT1lKXt2YXIgZj1XO1d8PWdqO2RqLmN1cnJlbnQ9bnVsbDtEZD1mZDt2YXIgZz14ZCgpO2lmKHlkKGcpKXtpZihcInNlbGVjdGlvblN0YXJ0XCJpbiBnKXZhciBoPXtzdGFydDpnLnNlbGVjdGlvblN0YXJ0LGVuZDpnLnNlbGVjdGlvbkVuZH07ZWxzZSBhOntoPShoPWcub3duZXJEb2N1bWVudCkmJmguZGVmYXVsdFZpZXd8fHdpbmRvdzt2YXIgaz1oLmdldFNlbGVjdGlvbiYmaC5nZXRTZWxlY3Rpb24oKTtpZihrJiYwIT09ay5yYW5nZUNvdW50KXtoPWsuYW5jaG9yTm9kZTt2YXIgbD1rLmFuY2hvck9mZnNldCxcbm09ay5mb2N1c05vZGU7az1rLmZvY3VzT2Zmc2V0O3RyeXtoLm5vZGVUeXBlLG0ubm9kZVR5cGV9Y2F0Y2god2Ipe2g9bnVsbDticmVhayBhfXZhciBwPTAseD0tMSx6PS0xLGNhPTAsRD0wLHQ9Zyx5PW51bGw7Yjpmb3IoOzspe2Zvcih2YXIgQTs7KXt0IT09aHx8MCE9PWwmJjMhPT10Lm5vZGVUeXBlfHwoeD1wK2wpO3QhPT1tfHwwIT09ayYmMyE9PXQubm9kZVR5cGV8fCh6PXArayk7Mz09PXQubm9kZVR5cGUmJihwKz10Lm5vZGVWYWx1ZS5sZW5ndGgpO2lmKG51bGw9PT0oQT10LmZpcnN0Q2hpbGQpKWJyZWFrO3k9dDt0PUF9Zm9yKDs7KXtpZih0PT09ZylicmVhayBiO3k9PT1oJiYrK2NhPT09bCYmKHg9cCk7eT09PW0mJisrRD09PWsmJih6PXApO2lmKG51bGwhPT0oQT10Lm5leHRTaWJsaW5nKSlicmVhazt0PXk7eT10LnBhcmVudE5vZGV9dD1BfWg9LTE9PT14fHwtMT09PXo/bnVsbDp7c3RhcnQ6eCxlbmQ6en19ZWxzZSBoPW51bGx9aD1ofHx7c3RhcnQ6MCxlbmQ6MH19ZWxzZSBoPVxubnVsbDtFZD17YWN0aXZlRWxlbWVudERldGFjaGVkOm51bGwsZm9jdXNlZEVsZW06ZyxzZWxlY3Rpb25SYW5nZTpofTtmZD0hMTtZPWU7ZG8gdHJ5e1RqKCl9Y2F0Y2god2Ipe2lmKG51bGw9PT1ZKXRocm93IEVycm9yKHUoMzMwKSk7RWkoWSx3Yik7WT1ZLm5leHRFZmZlY3R9d2hpbGUobnVsbCE9PVkpO1k9ZTtkbyB0cnl7Zm9yKGc9YSxoPWI7bnVsbCE9PVk7KXt2YXIgcT1ZLmVmZmVjdFRhZztxJjE2JiZSYihZLnN0YXRlTm9kZSxcIlwiKTtpZihxJjEyOCl7dmFyIEI9WS5hbHRlcm5hdGU7aWYobnVsbCE9PUIpe3ZhciB3PUIucmVmO251bGwhPT13JiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIHc/dyhudWxsKTp3LmN1cnJlbnQ9bnVsbCl9fXN3aXRjaChxJjEwMzgpe2Nhc2UgMjpQaShZKTtZLmVmZmVjdFRhZyY9LTM7YnJlYWs7Y2FzZSA2OlBpKFkpO1kuZWZmZWN0VGFnJj0tMztTaShZLmFsdGVybmF0ZSxZKTticmVhaztjYXNlIDEwMjQ6WS5lZmZlY3RUYWcmPS0xMDI1O2JyZWFrO2Nhc2UgMTAyODpZLmVmZmVjdFRhZyY9XG4tMTAyNTtTaShZLmFsdGVybmF0ZSxZKTticmVhaztjYXNlIDQ6U2koWS5hbHRlcm5hdGUsWSk7YnJlYWs7Y2FzZSA4Omw9WSxNaShnLGwsaCksTmkobCl9WT1ZLm5leHRFZmZlY3R9fWNhdGNoKHdiKXtpZihudWxsPT09WSl0aHJvdyBFcnJvcih1KDMzMCkpO0VpKFksd2IpO1k9WS5uZXh0RWZmZWN0fXdoaWxlKG51bGwhPT1ZKTt3PUVkO0I9eGQoKTtxPXcuZm9jdXNlZEVsZW07aD13LnNlbGVjdGlvblJhbmdlO2lmKEIhPT1xJiZxJiZxLm93bmVyRG9jdW1lbnQmJndkKHEub3duZXJEb2N1bWVudC5kb2N1bWVudEVsZW1lbnQscSkpe251bGwhPT1oJiZ5ZChxKSYmKEI9aC5zdGFydCx3PWguZW5kLHZvaWQgMD09PXcmJih3PUIpLFwic2VsZWN0aW9uU3RhcnRcImluIHE/KHEuc2VsZWN0aW9uU3RhcnQ9QixxLnNlbGVjdGlvbkVuZD1NYXRoLm1pbih3LHEudmFsdWUubGVuZ3RoKSk6KHc9KEI9cS5vd25lckRvY3VtZW50fHxkb2N1bWVudCkmJkIuZGVmYXVsdFZpZXd8fHdpbmRvdyx3LmdldFNlbGVjdGlvbiYmXG4odz13LmdldFNlbGVjdGlvbigpLGw9cS50ZXh0Q29udGVudC5sZW5ndGgsZz1NYXRoLm1pbihoLnN0YXJ0LGwpLGg9dm9pZCAwPT09aC5lbmQ/ZzpNYXRoLm1pbihoLmVuZCxsKSwhdy5leHRlbmQmJmc+aCYmKGw9aCxoPWcsZz1sKSxsPXZkKHEsZyksbT12ZChxLGgpLGwmJm0mJigxIT09dy5yYW5nZUNvdW50fHx3LmFuY2hvck5vZGUhPT1sLm5vZGV8fHcuYW5jaG9yT2Zmc2V0IT09bC5vZmZzZXR8fHcuZm9jdXNOb2RlIT09bS5ub2RlfHx3LmZvY3VzT2Zmc2V0IT09bS5vZmZzZXQpJiYoQj1CLmNyZWF0ZVJhbmdlKCksQi5zZXRTdGFydChsLm5vZGUsbC5vZmZzZXQpLHcucmVtb3ZlQWxsUmFuZ2VzKCksZz5oPyh3LmFkZFJhbmdlKEIpLHcuZXh0ZW5kKG0ubm9kZSxtLm9mZnNldCkpOihCLnNldEVuZChtLm5vZGUsbS5vZmZzZXQpLHcuYWRkUmFuZ2UoQikpKSkpKTtCPVtdO2Zvcih3PXE7dz13LnBhcmVudE5vZGU7KTE9PT13Lm5vZGVUeXBlJiZCLnB1c2goe2VsZW1lbnQ6dyxsZWZ0Oncuc2Nyb2xsTGVmdCxcbnRvcDp3LnNjcm9sbFRvcH0pO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBxLmZvY3VzJiZxLmZvY3VzKCk7Zm9yKHE9MDtxPEIubGVuZ3RoO3ErKyl3PUJbcV0sdy5lbGVtZW50LnNjcm9sbExlZnQ9dy5sZWZ0LHcuZWxlbWVudC5zY3JvbGxUb3A9dy50b3B9ZmQ9ISFEZDtFZD1EZD1udWxsO2EuY3VycmVudD1jO1k9ZTtkbyB0cnl7Zm9yKHE9YTtudWxsIT09WTspe3ZhciB1Yj1ZLmVmZmVjdFRhZzt1YiYzNiYmSmkocSxZLmFsdGVybmF0ZSxZKTtpZih1YiYxMjgpe0I9dm9pZCAwO3ZhciB2Yj1ZLnJlZjtpZihudWxsIT09dmIpe3ZhciBYYz1ZLnN0YXRlTm9kZTtzd2l0Y2goWS50YWcpe2Nhc2UgNTpCPVhjO2JyZWFrO2RlZmF1bHQ6Qj1YY31cImZ1bmN0aW9uXCI9PT10eXBlb2YgdmI/dmIoQik6dmIuY3VycmVudD1CfX1ZPVkubmV4dEVmZmVjdH19Y2F0Y2god2Ipe2lmKG51bGw9PT1ZKXRocm93IEVycm9yKHUoMzMwKSk7RWkoWSx3Yik7WT1ZLm5leHRFZmZlY3R9d2hpbGUobnVsbCE9PVkpO1k9XG5udWxsO1ZmKCk7Vz1mfWVsc2UgYS5jdXJyZW50PWM7aWYocWopcWo9ITEscmo9YSxzaj1iO2Vsc2UgZm9yKFk9ZTtudWxsIT09WTspYj1ZLm5leHRFZmZlY3QsWS5uZXh0RWZmZWN0PW51bGwsWT1iO2I9YS5maXJzdFBlbmRpbmdUaW1lOzA9PT1iJiYoYWo9bnVsbCk7MTA3Mzc0MTgyMz09PWI/YT09PXZqP3VqKys6KHVqPTAsdmo9YSk6dWo9MDtcImZ1bmN0aW9uXCI9PT10eXBlb2YgVWomJlVqKGMuc3RhdGVOb2RlLGQpO1ooYSk7aWYoWWkpdGhyb3cgWWk9ITEsYT1aaSxaaT1udWxsLGE7aWYoKFcmZWopIT09VilyZXR1cm4gbnVsbDtnZygpO3JldHVybiBudWxsfWZ1bmN0aW9uIFRqKCl7Zm9yKDtudWxsIT09WTspe3ZhciBhPVkuZWZmZWN0VGFnOzAhPT0oYSYyNTYpJiZHaShZLmFsdGVybmF0ZSxZKTswPT09KGEmNTEyKXx8cWp8fChxaj0hMCxkZyg5NyxmdW5jdGlvbigpe0RqKCk7cmV0dXJuIG51bGx9KSk7WT1ZLm5leHRFZmZlY3R9fVxuZnVuY3Rpb24gRGooKXtpZig5MCE9PXNqKXt2YXIgYT05Nzxzaj85Nzpzajtzaj05MDtyZXR1cm4gY2coYSxWail9fWZ1bmN0aW9uIFZqKCl7aWYobnVsbD09PXJqKXJldHVybiExO3ZhciBhPXJqO3JqPW51bGw7aWYoKFcmKGZqfGdqKSkhPT1WKXRocm93IEVycm9yKHUoMzMxKSk7dmFyIGI9VztXfD1najtmb3IoYT1hLmN1cnJlbnQuZmlyc3RFZmZlY3Q7bnVsbCE9PWE7KXt0cnl7dmFyIGM9YTtpZigwIT09KGMuZWZmZWN0VGFnJjUxMikpc3dpdGNoKGMudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OmNhc2UgMjI6SGkoNSxjKSxJaSg1LGMpfX1jYXRjaChkKXtpZihudWxsPT09YSl0aHJvdyBFcnJvcih1KDMzMCkpO0VpKGEsZCl9Yz1hLm5leHRFZmZlY3Q7YS5uZXh0RWZmZWN0PW51bGw7YT1jfVc9YjtnZygpO3JldHVybiEwfVxuZnVuY3Rpb24gV2ooYSxiLGMpe2I9QWkoYyxiKTtiPVhpKGEsYiwxMDczNzQxODIzKTt4ZyhhLGIpO2E9eGooYSwxMDczNzQxODIzKTtudWxsIT09YSYmWihhKX1mdW5jdGlvbiBFaShhLGIpe2lmKDM9PT1hLnRhZylXaihhLGEsYik7ZWxzZSBmb3IodmFyIGM9YS5yZXR1cm47bnVsbCE9PWM7KXtpZigzPT09Yy50YWcpe1dqKGMsYSxiKTticmVha31lbHNlIGlmKDE9PT1jLnRhZyl7dmFyIGQ9Yy5zdGF0ZU5vZGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGMudHlwZS5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3J8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PWFqfHwhYWouaGFzKGQpKSl7YT1BaShiLGEpO2E9JGkoYyxhLDEwNzM3NDE4MjMpO3hnKGMsYSk7Yz14aihjLDEwNzM3NDE4MjMpO251bGwhPT1jJiZaKGMpO2JyZWFrfX1jPWMucmV0dXJufX1cbmZ1bmN0aW9uIE9qKGEsYixjKXt2YXIgZD1hLnBpbmdDYWNoZTtudWxsIT09ZCYmZC5kZWxldGUoYik7VD09PWEmJlU9PT1jP1M9PT12aXx8Uz09PXVpJiYxMDczNzQxODIzPT09bGomJiRmKCktVGk8cGo/RWooYSxVKTpvaj0hMDpBaihhLGMpJiYoYj1hLmxhc3RQaW5nZWRUaW1lLDAhPT1iJiZiPGN8fChhLmxhc3RQaW5nZWRUaW1lPWMsWihhKSkpfWZ1bmN0aW9uIFZpKGEsYil7dmFyIGM9YS5zdGF0ZU5vZGU7bnVsbCE9PWMmJmMuZGVsZXRlKGIpO2I9MDswPT09YiYmKGI9R2coKSxiPUhnKGIsYSxudWxsKSk7YT14aihhLGIpO251bGwhPT1hJiZaKGEpfXZhciBSajtcblJqPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD1iLmV4cGlyYXRpb25UaW1lO2lmKG51bGwhPT1hKXt2YXIgZT1iLnBlbmRpbmdQcm9wcztpZihhLm1lbW9pemVkUHJvcHMhPT1lfHxLLmN1cnJlbnQpcmc9ITA7ZWxzZXtpZihkPGMpe3JnPSExO3N3aXRjaChiLnRhZyl7Y2FzZSAzOmhpKGIpO1hoKCk7YnJlYWs7Y2FzZSA1OmZoKGIpO2lmKGIubW9kZSY0JiYxIT09YyYmZS5oaWRkZW4pcmV0dXJuIGIuZXhwaXJhdGlvblRpbWU9Yi5jaGlsZEV4cGlyYXRpb25UaW1lPTEsbnVsbDticmVhaztjYXNlIDE6TChiLnR5cGUpJiZHZihiKTticmVhaztjYXNlIDQ6ZGgoYixiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKTticmVhaztjYXNlIDEwOmQ9Yi5tZW1vaXplZFByb3BzLnZhbHVlO2U9Yi50eXBlLl9jb250ZXh0O0koamcsZS5fY3VycmVudFZhbHVlKTtlLl9jdXJyZW50VmFsdWU9ZDticmVhaztjYXNlIDEzOmlmKG51bGwhPT1iLm1lbW9pemVkU3RhdGUpe2Q9Yi5jaGlsZC5jaGlsZEV4cGlyYXRpb25UaW1lO1xuaWYoMCE9PWQmJmQ+PWMpcmV0dXJuIGppKGEsYixjKTtJKE0sTS5jdXJyZW50JjEpO2I9JGgoYSxiLGMpO3JldHVybiBudWxsIT09Yj9iLnNpYmxpbmc6bnVsbH1JKE0sTS5jdXJyZW50JjEpO2JyZWFrO2Nhc2UgMTk6ZD1iLmNoaWxkRXhwaXJhdGlvblRpbWU+PWM7aWYoMCE9PShhLmVmZmVjdFRhZyY2NCkpe2lmKGQpcmV0dXJuIG1pKGEsYixjKTtiLmVmZmVjdFRhZ3w9NjR9ZT1iLm1lbW9pemVkU3RhdGU7bnVsbCE9PWUmJihlLnJlbmRlcmluZz1udWxsLGUudGFpbD1udWxsKTtJKE0sTS5jdXJyZW50KTtpZighZClyZXR1cm4gbnVsbH1yZXR1cm4gJGgoYSxiLGMpfXJnPSExfX1lbHNlIHJnPSExO2IuZXhwaXJhdGlvblRpbWU9MDtzd2l0Y2goYi50YWcpe2Nhc2UgMjpkPWIudHlwZTtudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9Mik7YT1iLnBlbmRpbmdQcm9wcztlPUNmKGIsSi5jdXJyZW50KTtxZyhiLGMpO2U9b2gobnVsbCxcbmIsZCxhLGUsYyk7Yi5lZmZlY3RUYWd8PTE7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBlJiZudWxsIT09ZSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGUucmVuZGVyJiZ2b2lkIDA9PT1lLiQkdHlwZW9mKXtiLnRhZz0xO2IubWVtb2l6ZWRTdGF0ZT1udWxsO2IudXBkYXRlUXVldWU9bnVsbDtpZihMKGQpKXt2YXIgZj0hMDtHZihiKX1lbHNlIGY9ITE7Yi5tZW1vaXplZFN0YXRlPW51bGwhPT1lLnN0YXRlJiZ2b2lkIDAhPT1lLnN0YXRlP2Uuc3RhdGU6bnVsbDt1ZyhiKTt2YXIgZz1kLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcztcImZ1bmN0aW9uXCI9PT10eXBlb2YgZyYmRmcoYixkLGcsYSk7ZS51cGRhdGVyPUpnO2Iuc3RhdGVOb2RlPWU7ZS5fcmVhY3RJbnRlcm5hbEZpYmVyPWI7TmcoYixkLGEsYyk7Yj1naShudWxsLGIsZCwhMCxmLGMpfWVsc2UgYi50YWc9MCxSKG51bGwsYixlLGMpLGI9Yi5jaGlsZDtyZXR1cm4gYjtjYXNlIDE2OmE6e2U9Yi5lbGVtZW50VHlwZTtudWxsIT09YSYmKGEuYWx0ZXJuYXRlPVxubnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKTthPWIucGVuZGluZ1Byb3BzO29iKGUpO2lmKDEhPT1lLl9zdGF0dXMpdGhyb3cgZS5fcmVzdWx0O2U9ZS5fcmVzdWx0O2IudHlwZT1lO2Y9Yi50YWc9WGooZSk7YT1pZyhlLGEpO3N3aXRjaChmKXtjYXNlIDA6Yj1kaShudWxsLGIsZSxhLGMpO2JyZWFrIGE7Y2FzZSAxOmI9ZmkobnVsbCxiLGUsYSxjKTticmVhayBhO2Nhc2UgMTE6Yj1aaChudWxsLGIsZSxhLGMpO2JyZWFrIGE7Y2FzZSAxNDpiPWFpKG51bGwsYixlLGlnKGUudHlwZSxhKSxkLGMpO2JyZWFrIGF9dGhyb3cgRXJyb3IodSgzMDYsZSxcIlwiKSk7fXJldHVybiBiO2Nhc2UgMDpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6aWcoZCxlKSxkaShhLGIsZCxlLGMpO2Nhc2UgMTpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6aWcoZCxlKSxmaShhLGIsZCxlLGMpO1xuY2FzZSAzOmhpKGIpO2Q9Yi51cGRhdGVRdWV1ZTtpZihudWxsPT09YXx8bnVsbD09PWQpdGhyb3cgRXJyb3IodSgyODIpKTtkPWIucGVuZGluZ1Byb3BzO2U9Yi5tZW1vaXplZFN0YXRlO2U9bnVsbCE9PWU/ZS5lbGVtZW50Om51bGw7dmcoYSxiKTt6ZyhiLGQsbnVsbCxjKTtkPWIubWVtb2l6ZWRTdGF0ZS5lbGVtZW50O2lmKGQ9PT1lKVhoKCksYj0kaChhLGIsYyk7ZWxzZXtpZihlPWIuc3RhdGVOb2RlLmh5ZHJhdGUpUGg9SmQoYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mby5maXJzdENoaWxkKSxPaD1iLGU9UWg9ITA7aWYoZSlmb3IoYz1ZZyhiLG51bGwsZCxjKSxiLmNoaWxkPWM7YzspYy5lZmZlY3RUYWc9Yy5lZmZlY3RUYWcmLTN8MTAyNCxjPWMuc2libGluZztlbHNlIFIoYSxiLGQsYyksWGgoKTtiPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSA1OnJldHVybiBmaChiKSxudWxsPT09YSYmVWgoYiksZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxmPW51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpcbm51bGwsZz1lLmNoaWxkcmVuLEdkKGQsZSk/Zz1udWxsOm51bGwhPT1mJiZHZChkLGYpJiYoYi5lZmZlY3RUYWd8PTE2KSxlaShhLGIpLGIubW9kZSY0JiYxIT09YyYmZS5oaWRkZW4/KGIuZXhwaXJhdGlvblRpbWU9Yi5jaGlsZEV4cGlyYXRpb25UaW1lPTEsYj1udWxsKTooUihhLGIsZyxjKSxiPWIuY2hpbGQpLGI7Y2FzZSA2OnJldHVybiBudWxsPT09YSYmVWgoYiksbnVsbDtjYXNlIDEzOnJldHVybiBqaShhLGIsYyk7Y2FzZSA0OnJldHVybiBkaChiLGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pLGQ9Yi5wZW5kaW5nUHJvcHMsbnVsbD09PWE/Yi5jaGlsZD1YZyhiLG51bGwsZCxjKTpSKGEsYixkLGMpLGIuY2hpbGQ7Y2FzZSAxMTpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6aWcoZCxlKSxaaChhLGIsZCxlLGMpO2Nhc2UgNzpyZXR1cm4gUihhLGIsYi5wZW5kaW5nUHJvcHMsYyksYi5jaGlsZDtjYXNlIDg6cmV0dXJuIFIoYSxcbmIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sYyksYi5jaGlsZDtjYXNlIDEyOnJldHVybiBSKGEsYixiLnBlbmRpbmdQcm9wcy5jaGlsZHJlbixjKSxiLmNoaWxkO2Nhc2UgMTA6YTp7ZD1iLnR5cGUuX2NvbnRleHQ7ZT1iLnBlbmRpbmdQcm9wcztnPWIubWVtb2l6ZWRQcm9wcztmPWUudmFsdWU7dmFyIGg9Yi50eXBlLl9jb250ZXh0O0koamcsaC5fY3VycmVudFZhbHVlKTtoLl9jdXJyZW50VmFsdWU9ZjtpZihudWxsIT09ZylpZihoPWcudmFsdWUsZj0kZShoLGYpPzA6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLl9jYWxjdWxhdGVDaGFuZ2VkQml0cz9kLl9jYWxjdWxhdGVDaGFuZ2VkQml0cyhoLGYpOjEwNzM3NDE4MjMpfDAsMD09PWYpe2lmKGcuY2hpbGRyZW49PT1lLmNoaWxkcmVuJiYhSy5jdXJyZW50KXtiPSRoKGEsYixjKTticmVhayBhfX1lbHNlIGZvcihoPWIuY2hpbGQsbnVsbCE9PWgmJihoLnJldHVybj1iKTtudWxsIT09aDspe3ZhciBrPWguZGVwZW5kZW5jaWVzO2lmKG51bGwhPT1cbmspe2c9aC5jaGlsZDtmb3IodmFyIGw9ay5maXJzdENvbnRleHQ7bnVsbCE9PWw7KXtpZihsLmNvbnRleHQ9PT1kJiYwIT09KGwub2JzZXJ2ZWRCaXRzJmYpKXsxPT09aC50YWcmJihsPXdnKGMsbnVsbCksbC50YWc9Mix4ZyhoLGwpKTtoLmV4cGlyYXRpb25UaW1lPGMmJihoLmV4cGlyYXRpb25UaW1lPWMpO2w9aC5hbHRlcm5hdGU7bnVsbCE9PWwmJmwuZXhwaXJhdGlvblRpbWU8YyYmKGwuZXhwaXJhdGlvblRpbWU9Yyk7cGcoaC5yZXR1cm4sYyk7ay5leHBpcmF0aW9uVGltZTxjJiYoay5leHBpcmF0aW9uVGltZT1jKTticmVha31sPWwubmV4dH19ZWxzZSBnPTEwPT09aC50YWc/aC50eXBlPT09Yi50eXBlP251bGw6aC5jaGlsZDpoLmNoaWxkO2lmKG51bGwhPT1nKWcucmV0dXJuPWg7ZWxzZSBmb3IoZz1oO251bGwhPT1nOyl7aWYoZz09PWIpe2c9bnVsbDticmVha31oPWcuc2libGluZztpZihudWxsIT09aCl7aC5yZXR1cm49Zy5yZXR1cm47Zz1oO2JyZWFrfWc9Zy5yZXR1cm59aD1cbmd9UihhLGIsZS5jaGlsZHJlbixjKTtiPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSA5OnJldHVybiBlPWIudHlwZSxmPWIucGVuZGluZ1Byb3BzLGQ9Zi5jaGlsZHJlbixxZyhiLGMpLGU9c2coZSxmLnVuc3RhYmxlX29ic2VydmVkQml0cyksZD1kKGUpLGIuZWZmZWN0VGFnfD0xLFIoYSxiLGQsYyksYi5jaGlsZDtjYXNlIDE0OnJldHVybiBlPWIudHlwZSxmPWlnKGUsYi5wZW5kaW5nUHJvcHMpLGY9aWcoZS50eXBlLGYpLGFpKGEsYixlLGYsZCxjKTtjYXNlIDE1OnJldHVybiBjaShhLGIsYi50eXBlLGIucGVuZGluZ1Byb3BzLGQsYyk7Y2FzZSAxNzpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6aWcoZCxlKSxudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9MiksYi50YWc9MSxMKGQpPyhhPSEwLEdmKGIpKTphPSExLHFnKGIsYyksTGcoYixkLGUpLE5nKGIsZCxlLGMpLGdpKG51bGwsXG5iLGQsITAsYSxjKTtjYXNlIDE5OnJldHVybiBtaShhLGIsYyl9dGhyb3cgRXJyb3IodSgxNTYsYi50YWcpKTt9O3ZhciBVaj1udWxsLExpPW51bGw7ZnVuY3Rpb24gWWooYSl7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18pcmV0dXJuITE7dmFyIGI9X19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fO2lmKGIuaXNEaXNhYmxlZHx8IWIuc3VwcG9ydHNGaWJlcilyZXR1cm4hMDt0cnl7dmFyIGM9Yi5pbmplY3QoYSk7VWo9ZnVuY3Rpb24oYSl7dHJ5e2Iub25Db21taXRGaWJlclJvb3QoYyxhLHZvaWQgMCw2ND09PShhLmN1cnJlbnQuZWZmZWN0VGFnJjY0KSl9Y2F0Y2goZSl7fX07TGk9ZnVuY3Rpb24oYSl7dHJ5e2Iub25Db21taXRGaWJlclVubW91bnQoYyxhKX1jYXRjaChlKXt9fX1jYXRjaChkKXt9cmV0dXJuITB9XG5mdW5jdGlvbiBaaihhLGIsYyxkKXt0aGlzLnRhZz1hO3RoaXMua2V5PWM7dGhpcy5zaWJsaW5nPXRoaXMuY2hpbGQ9dGhpcy5yZXR1cm49dGhpcy5zdGF0ZU5vZGU9dGhpcy50eXBlPXRoaXMuZWxlbWVudFR5cGU9bnVsbDt0aGlzLmluZGV4PTA7dGhpcy5yZWY9bnVsbDt0aGlzLnBlbmRpbmdQcm9wcz1iO3RoaXMuZGVwZW5kZW5jaWVzPXRoaXMubWVtb2l6ZWRTdGF0ZT10aGlzLnVwZGF0ZVF1ZXVlPXRoaXMubWVtb2l6ZWRQcm9wcz1udWxsO3RoaXMubW9kZT1kO3RoaXMuZWZmZWN0VGFnPTA7dGhpcy5sYXN0RWZmZWN0PXRoaXMuZmlyc3RFZmZlY3Q9dGhpcy5uZXh0RWZmZWN0PW51bGw7dGhpcy5jaGlsZEV4cGlyYXRpb25UaW1lPXRoaXMuZXhwaXJhdGlvblRpbWU9MDt0aGlzLmFsdGVybmF0ZT1udWxsfWZ1bmN0aW9uIFNoKGEsYixjLGQpe3JldHVybiBuZXcgWmooYSxiLGMsZCl9XG5mdW5jdGlvbiBiaShhKXthPWEucHJvdG90eXBlO3JldHVybiEoIWF8fCFhLmlzUmVhY3RDb21wb25lbnQpfWZ1bmN0aW9uIFhqKGEpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKXJldHVybiBiaShhKT8xOjA7aWYodm9pZCAwIT09YSYmbnVsbCE9PWEpe2E9YS4kJHR5cGVvZjtpZihhPT09Z2IpcmV0dXJuIDExO2lmKGE9PT1qYilyZXR1cm4gMTR9cmV0dXJuIDJ9XG5mdW5jdGlvbiBTZyhhLGIpe3ZhciBjPWEuYWx0ZXJuYXRlO251bGw9PT1jPyhjPVNoKGEudGFnLGIsYS5rZXksYS5tb2RlKSxjLmVsZW1lbnRUeXBlPWEuZWxlbWVudFR5cGUsYy50eXBlPWEudHlwZSxjLnN0YXRlTm9kZT1hLnN0YXRlTm9kZSxjLmFsdGVybmF0ZT1hLGEuYWx0ZXJuYXRlPWMpOihjLnBlbmRpbmdQcm9wcz1iLGMuZWZmZWN0VGFnPTAsYy5uZXh0RWZmZWN0PW51bGwsYy5maXJzdEVmZmVjdD1udWxsLGMubGFzdEVmZmVjdD1udWxsKTtjLmNoaWxkRXhwaXJhdGlvblRpbWU9YS5jaGlsZEV4cGlyYXRpb25UaW1lO2MuZXhwaXJhdGlvblRpbWU9YS5leHBpcmF0aW9uVGltZTtjLmNoaWxkPWEuY2hpbGQ7Yy5tZW1vaXplZFByb3BzPWEubWVtb2l6ZWRQcm9wcztjLm1lbW9pemVkU3RhdGU9YS5tZW1vaXplZFN0YXRlO2MudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZTtiPWEuZGVwZW5kZW5jaWVzO2MuZGVwZW5kZW5jaWVzPW51bGw9PT1iP251bGw6e2V4cGlyYXRpb25UaW1lOmIuZXhwaXJhdGlvblRpbWUsXG5maXJzdENvbnRleHQ6Yi5maXJzdENvbnRleHQscmVzcG9uZGVyczpiLnJlc3BvbmRlcnN9O2Muc2libGluZz1hLnNpYmxpbmc7Yy5pbmRleD1hLmluZGV4O2MucmVmPWEucmVmO3JldHVybiBjfVxuZnVuY3Rpb24gVWcoYSxiLGMsZCxlLGYpe3ZhciBnPTI7ZD1hO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKWJpKGEpJiYoZz0xKTtlbHNlIGlmKFwic3RyaW5nXCI9PT10eXBlb2YgYSlnPTU7ZWxzZSBhOnN3aXRjaChhKXtjYXNlIGFiOnJldHVybiBXZyhjLmNoaWxkcmVuLGUsZixiKTtjYXNlIGZiOmc9ODtlfD03O2JyZWFrO2Nhc2UgYmI6Zz04O2V8PTE7YnJlYWs7Y2FzZSBjYjpyZXR1cm4gYT1TaCgxMixjLGIsZXw4KSxhLmVsZW1lbnRUeXBlPWNiLGEudHlwZT1jYixhLmV4cGlyYXRpb25UaW1lPWYsYTtjYXNlIGhiOnJldHVybiBhPVNoKDEzLGMsYixlKSxhLnR5cGU9aGIsYS5lbGVtZW50VHlwZT1oYixhLmV4cGlyYXRpb25UaW1lPWYsYTtjYXNlIGliOnJldHVybiBhPVNoKDE5LGMsYixlKSxhLmVsZW1lbnRUeXBlPWliLGEuZXhwaXJhdGlvblRpbWU9ZixhO2RlZmF1bHQ6aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSlzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSBkYjpnPVxuMTA7YnJlYWsgYTtjYXNlIGViOmc9OTticmVhayBhO2Nhc2UgZ2I6Zz0xMTticmVhayBhO2Nhc2UgamI6Zz0xNDticmVhayBhO2Nhc2Uga2I6Zz0xNjtkPW51bGw7YnJlYWsgYTtjYXNlIGxiOmc9MjI7YnJlYWsgYX10aHJvdyBFcnJvcih1KDEzMCxudWxsPT1hP2E6dHlwZW9mIGEsXCJcIikpO31iPVNoKGcsYyxiLGUpO2IuZWxlbWVudFR5cGU9YTtiLnR5cGU9ZDtiLmV4cGlyYXRpb25UaW1lPWY7cmV0dXJuIGJ9ZnVuY3Rpb24gV2coYSxiLGMsZCl7YT1TaCg3LGEsZCxiKTthLmV4cGlyYXRpb25UaW1lPWM7cmV0dXJuIGF9ZnVuY3Rpb24gVGcoYSxiLGMpe2E9U2goNixhLG51bGwsYik7YS5leHBpcmF0aW9uVGltZT1jO3JldHVybiBhfVxuZnVuY3Rpb24gVmcoYSxiLGMpe2I9U2goNCxudWxsIT09YS5jaGlsZHJlbj9hLmNoaWxkcmVuOltdLGEua2V5LGIpO2IuZXhwaXJhdGlvblRpbWU9YztiLnN0YXRlTm9kZT17Y29udGFpbmVySW5mbzphLmNvbnRhaW5lckluZm8scGVuZGluZ0NoaWxkcmVuOm51bGwsaW1wbGVtZW50YXRpb246YS5pbXBsZW1lbnRhdGlvbn07cmV0dXJuIGJ9XG5mdW5jdGlvbiBhayhhLGIsYyl7dGhpcy50YWc9Yjt0aGlzLmN1cnJlbnQ9bnVsbDt0aGlzLmNvbnRhaW5lckluZm89YTt0aGlzLnBpbmdDYWNoZT10aGlzLnBlbmRpbmdDaGlsZHJlbj1udWxsO3RoaXMuZmluaXNoZWRFeHBpcmF0aW9uVGltZT0wO3RoaXMuZmluaXNoZWRXb3JrPW51bGw7dGhpcy50aW1lb3V0SGFuZGxlPS0xO3RoaXMucGVuZGluZ0NvbnRleHQ9dGhpcy5jb250ZXh0PW51bGw7dGhpcy5oeWRyYXRlPWM7dGhpcy5jYWxsYmFja05vZGU9bnVsbDt0aGlzLmNhbGxiYWNrUHJpb3JpdHk9OTA7dGhpcy5sYXN0RXhwaXJlZFRpbWU9dGhpcy5sYXN0UGluZ2VkVGltZT10aGlzLm5leHRLbm93blBlbmRpbmdMZXZlbD10aGlzLmxhc3RTdXNwZW5kZWRUaW1lPXRoaXMuZmlyc3RTdXNwZW5kZWRUaW1lPXRoaXMuZmlyc3RQZW5kaW5nVGltZT0wfVxuZnVuY3Rpb24gQWooYSxiKXt2YXIgYz1hLmZpcnN0U3VzcGVuZGVkVGltZTthPWEubGFzdFN1c3BlbmRlZFRpbWU7cmV0dXJuIDAhPT1jJiZjPj1iJiZhPD1ifWZ1bmN0aW9uIHhpKGEsYil7dmFyIGM9YS5maXJzdFN1c3BlbmRlZFRpbWUsZD1hLmxhc3RTdXNwZW5kZWRUaW1lO2M8YiYmKGEuZmlyc3RTdXNwZW5kZWRUaW1lPWIpO2lmKGQ+Ynx8MD09PWMpYS5sYXN0U3VzcGVuZGVkVGltZT1iO2I8PWEubGFzdFBpbmdlZFRpbWUmJihhLmxhc3RQaW5nZWRUaW1lPTApO2I8PWEubGFzdEV4cGlyZWRUaW1lJiYoYS5sYXN0RXhwaXJlZFRpbWU9MCl9XG5mdW5jdGlvbiB5aShhLGIpe2I+YS5maXJzdFBlbmRpbmdUaW1lJiYoYS5maXJzdFBlbmRpbmdUaW1lPWIpO3ZhciBjPWEuZmlyc3RTdXNwZW5kZWRUaW1lOzAhPT1jJiYoYj49Yz9hLmZpcnN0U3VzcGVuZGVkVGltZT1hLmxhc3RTdXNwZW5kZWRUaW1lPWEubmV4dEtub3duUGVuZGluZ0xldmVsPTA6Yj49YS5sYXN0U3VzcGVuZGVkVGltZSYmKGEubGFzdFN1c3BlbmRlZFRpbWU9YisxKSxiPmEubmV4dEtub3duUGVuZGluZ0xldmVsJiYoYS5uZXh0S25vd25QZW5kaW5nTGV2ZWw9YikpfWZ1bmN0aW9uIENqKGEsYil7dmFyIGM9YS5sYXN0RXhwaXJlZFRpbWU7aWYoMD09PWN8fGM+YilhLmxhc3RFeHBpcmVkVGltZT1ifVxuZnVuY3Rpb24gYmsoYSxiLGMsZCl7dmFyIGU9Yi5jdXJyZW50LGY9R2coKSxnPURnLnN1c3BlbnNlO2Y9SGcoZixlLGcpO2E6aWYoYyl7Yz1jLl9yZWFjdEludGVybmFsRmliZXI7Yjp7aWYoZGMoYykhPT1jfHwxIT09Yy50YWcpdGhyb3cgRXJyb3IodSgxNzApKTt2YXIgaD1jO2Rve3N3aXRjaChoLnRhZyl7Y2FzZSAzOmg9aC5zdGF0ZU5vZGUuY29udGV4dDticmVhayBiO2Nhc2UgMTppZihMKGgudHlwZSkpe2g9aC5zdGF0ZU5vZGUuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQ7YnJlYWsgYn19aD1oLnJldHVybn13aGlsZShudWxsIT09aCk7dGhyb3cgRXJyb3IodSgxNzEpKTt9aWYoMT09PWMudGFnKXt2YXIgaz1jLnR5cGU7aWYoTChrKSl7Yz1GZihjLGssaCk7YnJlYWsgYX19Yz1ofWVsc2UgYz1BZjtudWxsPT09Yi5jb250ZXh0P2IuY29udGV4dD1jOmIucGVuZGluZ0NvbnRleHQ9YztiPXdnKGYsZyk7Yi5wYXlsb2FkPXtlbGVtZW50OmF9O2Q9dm9pZCAwPT09XG5kP251bGw6ZDtudWxsIT09ZCYmKGIuY2FsbGJhY2s9ZCk7eGcoZSxiKTtJZyhlLGYpO3JldHVybiBmfWZ1bmN0aW9uIGNrKGEpe2E9YS5jdXJyZW50O2lmKCFhLmNoaWxkKXJldHVybiBudWxsO3N3aXRjaChhLmNoaWxkLnRhZyl7Y2FzZSA1OnJldHVybiBhLmNoaWxkLnN0YXRlTm9kZTtkZWZhdWx0OnJldHVybiBhLmNoaWxkLnN0YXRlTm9kZX19ZnVuY3Rpb24gZGsoYSxiKXthPWEubWVtb2l6ZWRTdGF0ZTtudWxsIT09YSYmbnVsbCE9PWEuZGVoeWRyYXRlZCYmYS5yZXRyeVRpbWU8YiYmKGEucmV0cnlUaW1lPWIpfWZ1bmN0aW9uIGVrKGEsYil7ZGsoYSxiKTsoYT1hLmFsdGVybmF0ZSkmJmRrKGEsYil9XG5mdW5jdGlvbiBmayhhLGIsYyl7Yz1udWxsIT1jJiYhMD09PWMuaHlkcmF0ZTt2YXIgZD1uZXcgYWsoYSxiLGMpLGU9U2goMyxudWxsLG51bGwsMj09PWI/NzoxPT09Yj8zOjApO2QuY3VycmVudD1lO2Uuc3RhdGVOb2RlPWQ7dWcoZSk7YVtPZF09ZC5jdXJyZW50O2MmJjAhPT1iJiZKYyhhLDk9PT1hLm5vZGVUeXBlP2E6YS5vd25lckRvY3VtZW50KTt0aGlzLl9pbnRlcm5hbFJvb3Q9ZH1may5wcm90b3R5cGUucmVuZGVyPWZ1bmN0aW9uKGEpe2JrKGEsdGhpcy5faW50ZXJuYWxSb290LG51bGwsbnVsbCl9O2ZrLnByb3RvdHlwZS51bm1vdW50PWZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5faW50ZXJuYWxSb290LGI9YS5jb250YWluZXJJbmZvO2JrKG51bGwsYSxudWxsLGZ1bmN0aW9uKCl7YltPZF09bnVsbH0pfTtcbmZ1bmN0aW9uIGdrKGEpe3JldHVybiEoIWF8fDEhPT1hLm5vZGVUeXBlJiY5IT09YS5ub2RlVHlwZSYmMTEhPT1hLm5vZGVUeXBlJiYoOCE9PWEubm9kZVR5cGV8fFwiIHJlYWN0LW1vdW50LXBvaW50LXVuc3RhYmxlIFwiIT09YS5ub2RlVmFsdWUpKX1mdW5jdGlvbiBoayhhLGIpe2J8fChiPWE/OT09PWEubm9kZVR5cGU/YS5kb2N1bWVudEVsZW1lbnQ6YS5maXJzdENoaWxkOm51bGwsYj0hKCFifHwxIT09Yi5ub2RlVHlwZXx8IWIuaGFzQXR0cmlidXRlKFwiZGF0YS1yZWFjdHJvb3RcIikpKTtpZighYilmb3IodmFyIGM7Yz1hLmxhc3RDaGlsZDspYS5yZW1vdmVDaGlsZChjKTtyZXR1cm4gbmV3IGZrKGEsMCxiP3toeWRyYXRlOiEwfTp2b2lkIDApfVxuZnVuY3Rpb24gaWsoYSxiLGMsZCxlKXt2YXIgZj1jLl9yZWFjdFJvb3RDb250YWluZXI7aWYoZil7dmFyIGc9Zi5faW50ZXJuYWxSb290O2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlKXt2YXIgaD1lO2U9ZnVuY3Rpb24oKXt2YXIgYT1jayhnKTtoLmNhbGwoYSl9fWJrKGIsZyxhLGUpfWVsc2V7Zj1jLl9yZWFjdFJvb3RDb250YWluZXI9aGsoYyxkKTtnPWYuX2ludGVybmFsUm9vdDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZSl7dmFyIGs9ZTtlPWZ1bmN0aW9uKCl7dmFyIGE9Y2soZyk7ay5jYWxsKGEpfX1OaihmdW5jdGlvbigpe2JrKGIsZyxhLGUpfSl9cmV0dXJuIGNrKGcpfWZ1bmN0aW9uIGprKGEsYixjKXt2YXIgZD0zPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1szXT9hcmd1bWVudHNbM106bnVsbDtyZXR1cm57JCR0eXBlb2Y6JGEsa2V5Om51bGw9PWQ/bnVsbDpcIlwiK2QsY2hpbGRyZW46YSxjb250YWluZXJJbmZvOmIsaW1wbGVtZW50YXRpb246Y319XG53Yz1mdW5jdGlvbihhKXtpZigxMz09PWEudGFnKXt2YXIgYj1oZyhHZygpLDE1MCwxMDApO0lnKGEsYik7ZWsoYSxiKX19O3hjPWZ1bmN0aW9uKGEpezEzPT09YS50YWcmJihJZyhhLDMpLGVrKGEsMykpfTt5Yz1mdW5jdGlvbihhKXtpZigxMz09PWEudGFnKXt2YXIgYj1HZygpO2I9SGcoYixhLG51bGwpO0lnKGEsYik7ZWsoYSxiKX19O1xuemE9ZnVuY3Rpb24oYSxiLGMpe3N3aXRjaChiKXtjYXNlIFwiaW5wdXRcIjpDYihhLGMpO2I9Yy5uYW1lO2lmKFwicmFkaW9cIj09PWMudHlwZSYmbnVsbCE9Yil7Zm9yKGM9YTtjLnBhcmVudE5vZGU7KWM9Yy5wYXJlbnROb2RlO2M9Yy5xdWVyeVNlbGVjdG9yQWxsKFwiaW5wdXRbbmFtZT1cIitKU09OLnN0cmluZ2lmeShcIlwiK2IpKyddW3R5cGU9XCJyYWRpb1wiXScpO2ZvcihiPTA7YjxjLmxlbmd0aDtiKyspe3ZhciBkPWNbYl07aWYoZCE9PWEmJmQuZm9ybT09PWEuZm9ybSl7dmFyIGU9UWQoZCk7aWYoIWUpdGhyb3cgRXJyb3IodSg5MCkpO3liKGQpO0NiKGQsZSl9fX1icmVhaztjYXNlIFwidGV4dGFyZWFcIjpLYihhLGMpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpiPWMudmFsdWUsbnVsbCE9YiYmSGIoYSwhIWMubXVsdGlwbGUsYiwhMSl9fTtGYT1NajtcbkdhPWZ1bmN0aW9uKGEsYixjLGQsZSl7dmFyIGY9VztXfD00O3RyeXtyZXR1cm4gY2coOTgsYS5iaW5kKG51bGwsYixjLGQsZSkpfWZpbmFsbHl7Vz1mLFc9PT1WJiZnZygpfX07SGE9ZnVuY3Rpb24oKXsoVyYoMXxmanxnaikpPT09ViYmKExqKCksRGooKSl9O0lhPWZ1bmN0aW9uKGEsYil7dmFyIGM9VztXfD0yO3RyeXtyZXR1cm4gYShiKX1maW5hbGx5e1c9YyxXPT09ViYmZ2coKX19O2Z1bmN0aW9uIGtrKGEsYil7dmFyIGM9Mjxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOm51bGw7aWYoIWdrKGIpKXRocm93IEVycm9yKHUoMjAwKSk7cmV0dXJuIGprKGEsYixudWxsLGMpfXZhciBsaz17RXZlbnRzOltOYyxQZCxRZCx4YSx0YSxYZCxmdW5jdGlvbihhKXtqYyhhLFdkKX0sRGEsRWEsaWQsbWMsRGose2N1cnJlbnQ6ITF9XX07XG4oZnVuY3Rpb24oYSl7dmFyIGI9YS5maW5kRmliZXJCeUhvc3RJbnN0YW5jZTtyZXR1cm4gWWoobih7fSxhLHtvdmVycmlkZUhvb2tTdGF0ZTpudWxsLG92ZXJyaWRlUHJvcHM6bnVsbCxzZXRTdXNwZW5zZUhhbmRsZXI6bnVsbCxzY2hlZHVsZVVwZGF0ZTpudWxsLGN1cnJlbnREaXNwYXRjaGVyUmVmOldhLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsZmluZEhvc3RJbnN0YW5jZUJ5RmliZXI6ZnVuY3Rpb24oYSl7YT1oYyhhKTtyZXR1cm4gbnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZX0sZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6ZnVuY3Rpb24oYSl7cmV0dXJuIGI/YihhKTpudWxsfSxmaW5kSG9zdEluc3RhbmNlc0ZvclJlZnJlc2g6bnVsbCxzY2hlZHVsZVJlZnJlc2g6bnVsbCxzY2hlZHVsZVJvb3Q6bnVsbCxzZXRSZWZyZXNoSGFuZGxlcjpudWxsLGdldEN1cnJlbnRGaWJlcjpudWxsfSkpfSkoe2ZpbmRGaWJlckJ5SG9zdEluc3RhbmNlOnRjLGJ1bmRsZVR5cGU6MCx2ZXJzaW9uOlwiMTYuMTMuMVwiLFxucmVuZGVyZXJQYWNrYWdlTmFtZTpcInJlYWN0LWRvbVwifSk7ZXhwb3J0cy5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRD1saztleHBvcnRzLmNyZWF0ZVBvcnRhbD1raztleHBvcnRzLmZpbmRET01Ob2RlPWZ1bmN0aW9uKGEpe2lmKG51bGw9PWEpcmV0dXJuIG51bGw7aWYoMT09PWEubm9kZVR5cGUpcmV0dXJuIGE7dmFyIGI9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO2lmKHZvaWQgMD09PWIpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnJlbmRlcil0aHJvdyBFcnJvcih1KDE4OCkpO3Rocm93IEVycm9yKHUoMjY4LE9iamVjdC5rZXlzKGEpKSk7fWE9aGMoYik7YT1udWxsPT09YT9udWxsOmEuc3RhdGVOb2RlO3JldHVybiBhfTtcbmV4cG9ydHMuZmx1c2hTeW5jPWZ1bmN0aW9uKGEsYil7aWYoKFcmKGZqfGdqKSkhPT1WKXRocm93IEVycm9yKHUoMTg3KSk7dmFyIGM9VztXfD0xO3RyeXtyZXR1cm4gY2coOTksYS5iaW5kKG51bGwsYikpfWZpbmFsbHl7Vz1jLGdnKCl9fTtleHBvcnRzLmh5ZHJhdGU9ZnVuY3Rpb24oYSxiLGMpe2lmKCFnayhiKSl0aHJvdyBFcnJvcih1KDIwMCkpO3JldHVybiBpayhudWxsLGEsYiwhMCxjKX07ZXhwb3J0cy5yZW5kZXI9ZnVuY3Rpb24oYSxiLGMpe2lmKCFnayhiKSl0aHJvdyBFcnJvcih1KDIwMCkpO3JldHVybiBpayhudWxsLGEsYiwhMSxjKX07XG5leHBvcnRzLnVubW91bnRDb21wb25lbnRBdE5vZGU9ZnVuY3Rpb24oYSl7aWYoIWdrKGEpKXRocm93IEVycm9yKHUoNDApKTtyZXR1cm4gYS5fcmVhY3RSb290Q29udGFpbmVyPyhOaihmdW5jdGlvbigpe2lrKG51bGwsbnVsbCxhLCExLGZ1bmN0aW9uKCl7YS5fcmVhY3RSb290Q29udGFpbmVyPW51bGw7YVtPZF09bnVsbH0pfSksITApOiExfTtleHBvcnRzLnVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzPU1qO2V4cG9ydHMudW5zdGFibGVfY3JlYXRlUG9ydGFsPWZ1bmN0aW9uKGEsYil7cmV0dXJuIGtrKGEsYiwyPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06bnVsbCl9O1xuZXhwb3J0cy51bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcj1mdW5jdGlvbihhLGIsYyxkKXtpZighZ2soYykpdGhyb3cgRXJyb3IodSgyMDApKTtpZihudWxsPT1hfHx2b2lkIDA9PT1hLl9yZWFjdEludGVybmFsRmliZXIpdGhyb3cgRXJyb3IodSgzOCkpO3JldHVybiBpayhhLGIsYywhMSxkKX07ZXhwb3J0cy52ZXJzaW9uPVwiMTYuMTMuMVwiO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3NjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9zY2hlZHVsZXIuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MC4xOS4xXG4gKiBzY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7dmFyIGYsZyxoLGssbDtcbmlmKFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93fHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgTWVzc2FnZUNoYW5uZWwpe3ZhciBwPW51bGwscT1udWxsLHQ9ZnVuY3Rpb24oKXtpZihudWxsIT09cCl0cnl7dmFyIGE9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtwKCEwLGEpO3A9bnVsbH1jYXRjaChiKXt0aHJvdyBzZXRUaW1lb3V0KHQsMCksYjt9fSx1PURhdGUubm93KCk7ZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4gRGF0ZS5ub3coKS11fTtmPWZ1bmN0aW9uKGEpe251bGwhPT1wP3NldFRpbWVvdXQoZiwwLGEpOihwPWEsc2V0VGltZW91dCh0LDApKX07Zz1mdW5jdGlvbihhLGIpe3E9c2V0VGltZW91dChhLGIpfTtoPWZ1bmN0aW9uKCl7Y2xlYXJUaW1lb3V0KHEpfTtrPWZ1bmN0aW9uKCl7cmV0dXJuITF9O2w9ZXhwb3J0cy51bnN0YWJsZV9mb3JjZUZyYW1lUmF0ZT1mdW5jdGlvbigpe319ZWxzZXt2YXIgdz13aW5kb3cucGVyZm9ybWFuY2UseD13aW5kb3cuRGF0ZSxcbnk9d2luZG93LnNldFRpbWVvdXQsej13aW5kb3cuY2xlYXJUaW1lb3V0O2lmKFwidW5kZWZpbmVkXCIhPT10eXBlb2YgY29uc29sZSl7dmFyIEE9d2luZG93LmNhbmNlbEFuaW1hdGlvbkZyYW1lO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lJiZjb25zb2xlLmVycm9yKFwiVGhpcyBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCByZXF1ZXN0QW5pbWF0aW9uRnJhbWUuIE1ha2Ugc3VyZSB0aGF0IHlvdSBsb2FkIGEgcG9seWZpbGwgaW4gb2xkZXIgYnJvd3NlcnMuIGh0dHBzOi8vZmIubWUvcmVhY3QtcG9seWZpbGxzXCIpO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBBJiZjb25zb2xlLmVycm9yKFwiVGhpcyBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCBjYW5jZWxBbmltYXRpb25GcmFtZS4gTWFrZSBzdXJlIHRoYXQgeW91IGxvYWQgYSBwb2x5ZmlsbCBpbiBvbGRlciBicm93c2Vycy4gaHR0cHM6Ly9mYi5tZS9yZWFjdC1wb2x5ZmlsbHNcIil9aWYoXCJvYmplY3RcIj09PVxudHlwZW9mIHcmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiB3Lm5vdylleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiB3Lm5vdygpfTtlbHNle3ZhciBCPXgubm93KCk7ZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4geC5ub3coKS1CfX12YXIgQz0hMSxEPW51bGwsRT0tMSxGPTUsRz0wO2s9ZnVuY3Rpb24oKXtyZXR1cm4gZXhwb3J0cy51bnN0YWJsZV9ub3coKT49R307bD1mdW5jdGlvbigpe307ZXhwb3J0cy51bnN0YWJsZV9mb3JjZUZyYW1lUmF0ZT1mdW5jdGlvbihhKXswPmF8fDEyNTxhP2NvbnNvbGUuZXJyb3IoXCJmb3JjZUZyYW1lUmF0ZSB0YWtlcyBhIHBvc2l0aXZlIGludCBiZXR3ZWVuIDAgYW5kIDEyNSwgZm9yY2luZyBmcmFtZXJhdGVzIGhpZ2hlciB0aGFuIDEyNSBmcHMgaXMgbm90IHVuc3VwcG9ydGVkXCIpOkY9MDxhP01hdGguZmxvb3IoMUUzL2EpOjV9O3ZhciBIPW5ldyBNZXNzYWdlQ2hhbm5lbCxJPUgucG9ydDI7SC5wb3J0MS5vbm1lc3NhZ2U9XG5mdW5jdGlvbigpe2lmKG51bGwhPT1EKXt2YXIgYT1leHBvcnRzLnVuc3RhYmxlX25vdygpO0c9YStGO3RyeXtEKCEwLGEpP0kucG9zdE1lc3NhZ2UobnVsbCk6KEM9ITEsRD1udWxsKX1jYXRjaChiKXt0aHJvdyBJLnBvc3RNZXNzYWdlKG51bGwpLGI7fX1lbHNlIEM9ITF9O2Y9ZnVuY3Rpb24oYSl7RD1hO0N8fChDPSEwLEkucG9zdE1lc3NhZ2UobnVsbCkpfTtnPWZ1bmN0aW9uKGEsYil7RT15KGZ1bmN0aW9uKCl7YShleHBvcnRzLnVuc3RhYmxlX25vdygpKX0sYil9O2g9ZnVuY3Rpb24oKXt6KEUpO0U9LTF9fWZ1bmN0aW9uIEooYSxiKXt2YXIgYz1hLmxlbmd0aDthLnB1c2goYik7YTpmb3IoOzspe3ZhciBkPWMtMT4+PjEsZT1hW2RdO2lmKHZvaWQgMCE9PWUmJjA8SyhlLGIpKWFbZF09YixhW2NdPWUsYz1kO2Vsc2UgYnJlYWsgYX19ZnVuY3Rpb24gTChhKXthPWFbMF07cmV0dXJuIHZvaWQgMD09PWE/bnVsbDphfVxuZnVuY3Rpb24gTShhKXt2YXIgYj1hWzBdO2lmKHZvaWQgMCE9PWIpe3ZhciBjPWEucG9wKCk7aWYoYyE9PWIpe2FbMF09YzthOmZvcih2YXIgZD0wLGU9YS5sZW5ndGg7ZDxlOyl7dmFyIG09MiooZCsxKS0xLG49YVttXSx2PW0rMSxyPWFbdl07aWYodm9pZCAwIT09biYmMD5LKG4sYykpdm9pZCAwIT09ciYmMD5LKHIsbik/KGFbZF09cixhW3ZdPWMsZD12KTooYVtkXT1uLGFbbV09YyxkPW0pO2Vsc2UgaWYodm9pZCAwIT09ciYmMD5LKHIsYykpYVtkXT1yLGFbdl09YyxkPXY7ZWxzZSBicmVhayBhfX1yZXR1cm4gYn1yZXR1cm4gbnVsbH1mdW5jdGlvbiBLKGEsYil7dmFyIGM9YS5zb3J0SW5kZXgtYi5zb3J0SW5kZXg7cmV0dXJuIDAhPT1jP2M6YS5pZC1iLmlkfXZhciBOPVtdLE89W10sUD0xLFE9bnVsbCxSPTMsUz0hMSxUPSExLFU9ITE7XG5mdW5jdGlvbiBWKGEpe2Zvcih2YXIgYj1MKE8pO251bGwhPT1iOyl7aWYobnVsbD09PWIuY2FsbGJhY2spTShPKTtlbHNlIGlmKGIuc3RhcnRUaW1lPD1hKU0oTyksYi5zb3J0SW5kZXg9Yi5leHBpcmF0aW9uVGltZSxKKE4sYik7ZWxzZSBicmVhaztiPUwoTyl9fWZ1bmN0aW9uIFcoYSl7VT0hMTtWKGEpO2lmKCFUKWlmKG51bGwhPT1MKE4pKVQ9ITAsZihYKTtlbHNle3ZhciBiPUwoTyk7bnVsbCE9PWImJmcoVyxiLnN0YXJ0VGltZS1hKX19XG5mdW5jdGlvbiBYKGEsYil7VD0hMTtVJiYoVT0hMSxoKCkpO1M9ITA7dmFyIGM9Ujt0cnl7VihiKTtmb3IoUT1MKE4pO251bGwhPT1RJiYoIShRLmV4cGlyYXRpb25UaW1lPmIpfHxhJiYhaygpKTspe3ZhciBkPVEuY2FsbGJhY2s7aWYobnVsbCE9PWQpe1EuY2FsbGJhY2s9bnVsbDtSPVEucHJpb3JpdHlMZXZlbDt2YXIgZT1kKFEuZXhwaXJhdGlvblRpbWU8PWIpO2I9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZT9RLmNhbGxiYWNrPWU6UT09PUwoTikmJk0oTik7VihiKX1lbHNlIE0oTik7UT1MKE4pfWlmKG51bGwhPT1RKXZhciBtPSEwO2Vsc2V7dmFyIG49TChPKTtudWxsIT09biYmZyhXLG4uc3RhcnRUaW1lLWIpO209ITF9cmV0dXJuIG19ZmluYWxseXtRPW51bGwsUj1jLFM9ITF9fVxuZnVuY3Rpb24gWShhKXtzd2l0Y2goYSl7Y2FzZSAxOnJldHVybi0xO2Nhc2UgMjpyZXR1cm4gMjUwO2Nhc2UgNTpyZXR1cm4gMTA3Mzc0MTgyMztjYXNlIDQ6cmV0dXJuIDFFNDtkZWZhdWx0OnJldHVybiA1RTN9fXZhciBaPWw7ZXhwb3J0cy51bnN0YWJsZV9JZGxlUHJpb3JpdHk9NTtleHBvcnRzLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5PTE7ZXhwb3J0cy51bnN0YWJsZV9Mb3dQcmlvcml0eT00O2V4cG9ydHMudW5zdGFibGVfTm9ybWFsUHJpb3JpdHk9MztleHBvcnRzLnVuc3RhYmxlX1Byb2ZpbGluZz1udWxsO2V4cG9ydHMudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHk9MjtleHBvcnRzLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrPWZ1bmN0aW9uKGEpe2EuY2FsbGJhY2s9bnVsbH07ZXhwb3J0cy51bnN0YWJsZV9jb250aW51ZUV4ZWN1dGlvbj1mdW5jdGlvbigpe1R8fFN8fChUPSEwLGYoWCkpfTtcbmV4cG9ydHMudW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWw9ZnVuY3Rpb24oKXtyZXR1cm4gUn07ZXhwb3J0cy51bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZT1mdW5jdGlvbigpe3JldHVybiBMKE4pfTtleHBvcnRzLnVuc3RhYmxlX25leHQ9ZnVuY3Rpb24oYSl7c3dpdGNoKFIpe2Nhc2UgMTpjYXNlIDI6Y2FzZSAzOnZhciBiPTM7YnJlYWs7ZGVmYXVsdDpiPVJ9dmFyIGM9UjtSPWI7dHJ5e3JldHVybiBhKCl9ZmluYWxseXtSPWN9fTtleHBvcnRzLnVuc3RhYmxlX3BhdXNlRXhlY3V0aW9uPWZ1bmN0aW9uKCl7fTtleHBvcnRzLnVuc3RhYmxlX3JlcXVlc3RQYWludD1aO2V4cG9ydHMudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5PWZ1bmN0aW9uKGEsYil7c3dpdGNoKGEpe2Nhc2UgMTpjYXNlIDI6Y2FzZSAzOmNhc2UgNDpjYXNlIDU6YnJlYWs7ZGVmYXVsdDphPTN9dmFyIGM9UjtSPWE7dHJ5e3JldHVybiBiKCl9ZmluYWxseXtSPWN9fTtcbmV4cG9ydHMudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjaz1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGMmJm51bGwhPT1jKXt2YXIgZT1jLmRlbGF5O2U9XCJudW1iZXJcIj09PXR5cGVvZiBlJiYwPGU/ZCtlOmQ7Yz1cIm51bWJlclwiPT09dHlwZW9mIGMudGltZW91dD9jLnRpbWVvdXQ6WShhKX1lbHNlIGM9WShhKSxlPWQ7Yz1lK2M7YT17aWQ6UCsrLGNhbGxiYWNrOmIscHJpb3JpdHlMZXZlbDphLHN0YXJ0VGltZTplLGV4cGlyYXRpb25UaW1lOmMsc29ydEluZGV4Oi0xfTtlPmQ/KGEuc29ydEluZGV4PWUsSihPLGEpLG51bGw9PT1MKE4pJiZhPT09TChPKSYmKFU/aCgpOlU9ITAsZyhXLGUtZCkpKTooYS5zb3J0SW5kZXg9YyxKKE4sYSksVHx8U3x8KFQ9ITAsZihYKSkpO3JldHVybiBhfTtcbmV4cG9ydHMudW5zdGFibGVfc2hvdWxkWWllbGQ9ZnVuY3Rpb24oKXt2YXIgYT1leHBvcnRzLnVuc3RhYmxlX25vdygpO1YoYSk7dmFyIGI9TChOKTtyZXR1cm4gYiE9PVEmJm51bGwhPT1RJiZudWxsIT09YiYmbnVsbCE9PWIuY2FsbGJhY2smJmIuc3RhcnRUaW1lPD1hJiZiLmV4cGlyYXRpb25UaW1lPFEuZXhwaXJhdGlvblRpbWV8fGsoKX07ZXhwb3J0cy51bnN0YWJsZV93cmFwQ2FsbGJhY2s9ZnVuY3Rpb24oYSl7dmFyIGI9UjtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgYz1SO1I9Yjt0cnl7cmV0dXJuIGEuYXBwbHkodGhpcyxhcmd1bWVudHMpfWZpbmFsbHl7Uj1jfX19O1xuIiwiaW1wb3J0IERFIGZyb20gJy4vcG9wdXBfREUnO1xuXG5pbXBvcnQgRU4gZnJvbSAnLi9wb3B1cF9FTic7XG5cbmltcG9ydCBQTCBmcm9tICcuL3BvcHVwX1BMJztcblxuaW1wb3J0IGdldExhbmd1YWdlIGZyb20gJy4uL1NvdXJjZS9BcHBGaWxlcy9GdW5jdGlvbnMvbGFuZ3VhZ2UvZ2V0TGFuZ3VhZ2UnO1xuXG5jb25zdCBnZXRUcmFuc2xhdGlvbnMgPSAoKSA9PiB7XG4gIGxldCBjdXJyZW50TGFuZ3VhZ2UgPSBnZXRMYW5ndWFnZSgpO1xuXG4gIHN3aXRjaCAoY3VycmVudExhbmd1YWdlKSB7XG4gICAgY2FzZSAnZGUnOiB7XG4gICAgICByZXR1cm4gREU7XG4gICAgfVxuXG4gICAgY2FzZSAnZW4nOiB7XG4gICAgICByZXR1cm4gRU47XG4gICAgfVxuXG4gICAgY2FzZSAncGwnOiB7XG4gICAgICByZXR1cm4gUEw7XG4gICAgfVxuXG4gICAgZGVmYXVsdDoge1xuICAgICAgcmV0dXJuIEVOO1xuICAgIH1cbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgZ2V0VHJhbnNsYXRpb25zO1xuIiwiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgeyBhZGRvblByZWZpeCB9IGZyb20gJy4uL1NvdXJjZS9BcHBGaWxlcy9GdW5jdGlvbnMvYWRkb25QcmVmaXgnO1xuXG5jb25zdCBERSA9IHtcbiAgaXRlbVJlbW92ZWRGcm9tTGlzdDogJ0VpbnRyYWcgd3VyZGUgYXVzIGRlciBMaXN0ZSBlbnRmZXJudCcsXG4gIGN1cnJudGx5SXM6ICdLbGlja2VuIFNpZSBkaWUgQm94IHVudGVuIHVtIGRlbiBCbG9ja2VyIHp1JyxcbiAgY3Vycm50bHlJc09mZjogJ2FrdGl2aWVyZW4nLFxuICBjdXJybnRseUlzT246ICdkZWFrdGl2aWVyZW4nLFxuICB0aXRsZV9odG1sX2Jsb2NrZXI6ICdCbG9ja2VyJyxcbiAgYmxvY2tlcl9tc2dfNzogXCJDb250ZW50IEJsb2NrZXIga2FubiBET00gRWxlbWVudGUgZGVyIGdlbnV0enRlbiBXZWJzaXRlIGJsb2NraWVyZW4uIFVtIGRpZXNlcyBGZWF0dXJlIHp1IG51dHplbiBha3RpdmllcmUgZGVuIENvbnRlbnQgQmxvY2tlciB1bmQga2xpY2tlIGF1ZiBlaW4gRWxlbWVudCBkYXMgYmxvY2tpZXJ0IHdlcmRlbiBzb2xsLiBBbGxlIGdlYmxvY2t0ZW4gSFRNTCBFbGVtZW50ZSBrw7ZubmVuIHdpZWRlciBoZXJnZXN0ZWxsdCB3ZXJkZW4gaW0gRGFzaGJvYXJkIGF1ZiBkZXIgU2VpdGUgJ0Jsb2NraWVydGVzIEhUTUwnLlwiLFxuICB0aXRsZV9yZXNldDogJ1Jlc2V0JyxcbiAgcmVzZXRfZG9uZTogJ0RpZSBBcHBsaWthdGlvbiB3dXJkZSBhdWYgSWhyZSBXZXJrZWluc3RlbGx1bmdlbiB6dXLDvGNrc2V0enRlbi4nLFxuICByZXNldDonS2xpY2tlbiBTaWUgZGFzIEljb24gYW4gdW0gZGllc2UgRXJ3ZWl0ZXJ1bmcgYXVmIGRpZSBXZXJrZWluc3RlbGx1bmdlbiB6dXLDvGNrc2V0enRlbi4gQWxsZSBkZWluZSBnZXNwZWljaGVydGVuIERhdGVuIHVuZCBFaW5zdGVsbHVuZ2VuIHdlcmRlbiBnZWzDtnNjaHQuIEJpdHRlIGV4cG9yaWVyZSB2b3IgZGllc2VtIFByb3plc3MgZGVpbmUgRGF0ZW4gdW5kIEVpbnN0ZWxsdW5nZW4gdW0gZGllc2Ugc3DDpHRlciAow7xiZXIgZGFzIERhc2hib2FyZCkgd2llZGVyIHp1IGltcG9ydGllcmVuLicsXG4gIG1lbnVfdGl0bGVfbmluamE6ICdOaW5qYSBJY29uJyxcbiAgbmluamFJY29uOiAnRGFzIE5pbmphIEljb24gZGllc2VyIEVyd2VpdGVydW5nIHd1cmRlIGVudG5vbW1lbiB2b24nLFxuICB0dXJuT246ICdOaW5qYVByb3RlY3QgYW5zY2hhbHRlbicsXG4gIHR1cm5PZmY6ICdOaW5qYVByb3RlY3QgYXVzc2NoYWx0ZW4nLFxuICBsaW5rczogJ0xpbmtzJyxcbiAgZGVsZXRlQWxsSWZyYW1lczogJ0lmcmFtZXMgYXVzIGRpZXNlciBXZWJzZWl0ZSBlbmZlcm5lbicsXG4gIGRlbGV0ZUFsbENvb2tpZXM6ICdDb29raWVzIHZlcndhbHRlbicsXG4gIG5vdExvZ2dlZEluU3RhdGlzdGljTWVzc2FnZTogJ1NpZSBhcmJlaXRlbiBsb2thbC4gQml0dGUgbG9nZ2VuIFNpZSBzaWNoIGVpbiBkYW1pdCBkaWUgU3RhdGlzdGlrIHLDvGNrd8OkcnRzIGZlc3RnZWhhbHRlbiB3ZXJkZW4ga2Fubi4nLFxuICB0b2RheV9ibG9ja2VkOiAnSGV1dGlnZSBTdGF0aXN0aWsgZGVyIGJsb2NraWVydGVuIEVsZW1lbnRlJyxcbiAgbWVudV90ZXh0X3N0YXRpc3RpYzogJ1N0YXRpc3RpayBhbGxlciBibG9ja2llcnRlbiBFbGVtZW50ZSAnLFxuICBtZW51X3RleHRfc3RhdGlzdGljX3NtYWxsOiAnU3RhdGlzdGlrJyxcbiAgbWVudV90ZXh0X3JlcXVlc3RzOiAnQW5mcmFnZW4nLFxuICBhZGRvbl9ub3RfYXZhaWxhYmxlOiAnRGllc2UgV2Vic2VpdGUgdW50ZXJzdMO8dHp0IGtlaW5lIEFkZG9ucycsXG4gIE5vRGF0YUJsb2NrZWRJdGVtc1RvZGF5OiAnS2VpbmUgYmxvY2tpZXJ0ZW4gRWxlbWVudGUgdm9uIGhldXRlIHZlcmbDvGdiYXInLFxuICBOb0RhdGFCbG9ja2VkSXRlbXM6ICdLZWluZSBibG9ja2llcnRlbiBEYXRlbicsXG4gIGhvbWVfY2hhdDogJ01pdCBGcmV1bmRlbiBjaGF0dGVuIC0gb2huZSBUcmFja2luZycsXG4gIGhvbWVfbWVzc2FnZXM6ICdOYWNocmljaHRlbiBzZW5kZW4gLSBvaG5lIFRyYWNraW5nJyxcbiAgaG9tZV9zZWN1cml0eTogJ1NpY2hlcmhlaXQgaW0gSW50ZXJuZXQgLSBCbG9ja2llcnVuZyB2b24gVHJhY2tlcm4nLFxuICBob21lX2ltYWdlczogJ0ZvdG9zIGhlcnVudGVybGFkZW4gLSBrZWluIFRyYWNraW5nJyxcbiAgLyoqIFxuICAgKiBMZWZ0IG1lbnVcbiAgICovXG4gIG1lbnVfdGV4dF9leHBvcnQ6ICdFeHBvcnQnLFxuICBtZW51X3RpdGxlX2V4cG9ydDogJ05hdmlnaWVyZSB6dSBkZW0gRXhwb3J0JyxcbiAgbWVudV90ZXh0X2ltcG9ydDogJ0ltcG9ydCcsXG4gIG1lbnVfdGl0bGVfaW1wb3J0OiAnTmF2aWdpZXJlIHp1IGRlbSBJbXBvcnQnLFxuICBtZXNzYWdlc19tYWluOiAnTmFjaHJpY2h0ZW4nLFxuICBtZW51X3RleHRfbWVzc2FnZXM6ICdOYWNocmljaHRlbicsXG4gIG1lbnVfdGl0bGVfbWVzc2FnZXM6ICdOYXZpZ2llcmUgenUgZGVuIE5hY2hyaWNodGVuJyxcbiAgbWVudV90ZXh0X25vdGlmaWNhdGlvbnM6ICdCZW5hY2hyaWNodGlndW5nZW4nLFxuICBtZW51X3RpdGxlX25vdGlmaWNhdGlvbnM6ICdOYXZpZ2llcmUgenUgZGVuIEJlbmFjaHJpY2h0aWd1bmdlbicsXG4gIG1lbnVfdGV4dF9mYXZvdXJpdGVzOiAnRnJldW5kZScsXG4gIG1lbnVfdGl0bGVfZmF2b3VyaXRlczogJ05hdmlnaWVyZSB6dSBkZW4gRnJldW5kZScsXG4gIG1lbnVfdGV4dF9hZGRfZmF2b3VyaXRlczogJ1N1Y2hlJyxcbiAgbWVudV90aXRsZV9hZGRfZmF2b3VyaXRlczogJ05hdmlnaWVyZSB6dSBkZXIgRnJldW5kZW4gU3VjaGUnLFxuICBjaGF0X21haW46ICdDaGF0JyxcbiAgbWVudV90ZXh0X2NoYXQ6ICdDaGF0JyxcbiAgbWVudV90aXRsZV9jaGF0OiAnTmF2aWdpZXJlIHp1IGRlbSBDaGF0JyxcbiAgbWVudV90ZXh0X3NlY3VyaXR5OiAnRG9tw6RuZScsXG4gIG1lbnVfdGV4dF9zZWN1cml0eV9tYWluOiAnTGlzdGUnLFxuICBtZW51X3RpdGxlX3NlY3VyaXR5OiAnTmF2aWdpZXJlIHp1IGRlbSBCZXJlaWNoIERvbcOkbmVuIFZlcndhbHR1bmcnLFxuICBtZW51X3RleHRfc2VjdXJpdHlfc2V0dGluZ3M6ICdFaW5zdGVsbHVuZ2VuJyxcbiAgbWVudV90aXRsZV9zZWN1cml0eV9zZXR0aW5nczogJ05hdmlnaWVyZSB6dSBkZW0gQmVyZWljaCBTaWNoZXJoZWl0cyBFaW5zdGVsbHVuZ2VuJyxcbiAgbWVudV90ZXh0X2Nvb2tpZXM6ICdDb29raWVzJyxcbiAgbWVudV90aXRsZV9jb29raWVzOiAnTmF2aWdpZXJlIHp1IGRlbSBCZXJlaWNoIENvb2tpZXMnLFxuICBtZW51X3RleHRfaG9tZTogJ1N0YXJ0c2VpdGUnLFxuICBtZW51X3RpdGxlX2hvbWU6ICdOYXZpZ2llcmUgenVyIFN0YXJ0c2VpdGUnLFxuICBtZW51X3RleHRfaWZyYW1lczogJ0lmcmFtZXMnLFxuICBtZW51X3RpdGxlX2lmcmFtZXM6ICdOYXZpZ2llcmUgenUgZGVtIEJlcmVpY2ggSWZyYW1lcycsXG4gIG1lbnVfdGV4dF9zZWN1cml0eV9leGFtcGxlczogJ0JlaXNwaWVsZScsXG4gIG1lbnVfdGl0bGVfc2VjdXJpdHlfZXhhbXBsZXM6ICdOYXZpZ2llcmUgenUgZGVtIEJlcmVpY2ggU2ljaGVyZWljaCBCZWlzcGllbGUnLFxuICBtZW51X3RleHRfZG93bmxvYWRfaW1hZ2VzOiAnRm90b3MgZG93bmxvYWQnLFxuICBtZW51X3RpdGxlX2Rvd25sb2FkX2ltYWdlczogJ05hdmlnaWVyZSB6dSBkZW0gQmVyZWljaCBGb3RvcyBoZXJ1bnRlcmxhZGVuJyxcbiAgbWVudV90ZXh0X2ltYWdlczogJ0ZvdG9zJyxcbiAgbWVudV90ZXh0X2ltYWdlc19mYXZvdXJpdGVzOiAnR2VzcGVpY2hlcnRlIEZvdG9zJyxcbiAgbWVudV90aXRsZV9pbWFnZXNfZmF2b3VyaXRlczogJ05hdmlnaWVyZSB6dSBkZW0gQmVyZWljaCBnZXNwaWVjaGVydGUgRm90b3MnLFxuICBhY2NvdW50UHJpdmFjeVRlcm1zOiAnTnV0enVuZ3NiZWRpbmd1bmdlbicsXG4gIC8qKiBcbiAgICogR0xPQkFMIEVSUk9SIE1FU1NFQUdFU1xuICAgKi9cbiAgZ2xvYmFsTmV0d29ya0Vycm9yOiAnTmV0endlcmsgRmVobGVyLicsXG4gIGdsb2JhbFByb2Nlc3NFcnJvcjogJ0ludGVybmVyIEZlaGxlci4nLFxuICBnbG9iYWxVc2VyRG9lc05vdEV4c2lzdHM6ICdCZW51dHplcmtvbnRvIGV4aXN0aWVydCBuaWNodCcsXG4gIGdsb2JhbEludmFsaWRFbWFpbHNBZHJlc3M6ICdVbmfDvGx0aWdlcyBFLU1haWwtQWRyZXNzZm9ybWF0JyxcbiAgZ2xvYmFsRXJyb3JtZXNzYWdlUHJlZml4OiAnRXMgd3VyZGUgZWluIEZlaGxlciBnZWZ1bmRlbiwgZGVyIGRhenUgZsO8aHJ0LCBkYXNzIGRpZSBBbndlbmR1bmcgbmljaHQgb3JkbnVuZ3NnZW3DpMOfIGZ1bmt0aW9uaWVydC4nLFxuICBnbG9iYWxFcnJvcm1lc3NhZ2VDbG9zZUJ1dHRvbjogJ0lnbm9yaWVyZW4nLFxuICBnbG9iYWxFcnJvcm1lc3NhZ2VMZWFybk1vcmVCdXR0b246ICdNZWhyIGxlc2VuJyxcbiAgZ2xvYmFsSW52YWxpZENvdW50cnk6ICdGZWhsZXJoYWZ0ZXMgTGFuZCcsXG4gIGdsb2JhbEludmFsaWRMYW5ndWFnZTogJ0ZlaGxlcmhhZnRlIFNwcmFjaGUnLFxuICBnbG9iYWxFcnJvckNvZGVUaXRsZTogJ0ZlaGxlcmNvZGUnLFxuICBnbG9iYWxFcnJvckNvZGVfMTogJ05ldHp3ZXJrZmVobGVyLiBXZW5uIGVpbiBOZXR6d2Vya2ZlaGxlciBhdWZnZXRyZXRlbiBpc3QsIGlzdCBlaW5lIFwiQWpheFwiIC1BbmZvcmRlcnVuZyBmZWhsZ2VzY2hsYWdlbi4gw5xiZXJwcsO8ZmVuIFNpZSBJaHJlIE5ldHp3ZXJrdmVyYmluZHVuZyBvZGVyIGRhcywgZGEgZGVyIFJlbW90ZS1EaWVuc3QgZGVyemVpdCBuaWNodCB2ZXJmw7xnYmFyIGlzdC4nLFxuICBnbG9iYWxFcnJvckNvZGVfMjogJ0FwcC1Qcm96ZXNzZmVobGVyLiBEaWVzIGJlZGV1dGV0LCBkYXNzIGRpZSBBbnR3b3J0IGF1ZiBBamF4LUFuZm9yZGVydW5nZW4gZWluZSB1bmfDvGx0aWdlIFN0cnVrdHVyIGbDvHIgZGllIEFud2VuZHVuZyBiZXJlaXRnZXN0ZWxsdCBoYXQuJyxcbiAgZ2xvYmFsRXJyb3JDb2RlXzM6ICdBbnR3b3J0IGFuZGVycyBhbHMgZXJ3YXJ0ZXQuIERlciBNaXR0ZWx3ZXJ0IGRlcyBhbmdlZm9yZGVydGVuIFdlcnRzIGRlcyBha3R1ZWxsZW4gQW53ZW5kdW5nc2tvbnRleHRzIGlzdCB1bmfDvGx0aWcuJyxcbiAgY29kZTogJ0NvZGUnLFxuICBsaXN0Tm90U3luY2hyb25pemVkVXNlck5vdExvZ2dlZEluOiAnRHUgYXJiZWl0ZXN0IGxva2FsLiBMb2dnZSBkaWNoIGVpbiB1bSBkaWUgTGlzdGUgenUgc3luY2hyb25pc2llcmVuLicsXG4gIG5vdExvZ2dlZEluOiAnTmljaHQgZWluZ2Vsb2dndCBJbmZvcm1hdGlvbicsXG4gIGxpc3RTeW5jaHJvbml6ZWRfb25lOiAnU3luY2hyb25pc2llcnQnLFxuICAvKipcbiAgICogUG9wdXAgLSBDb29raWVzIHBvcHVwIHBhZ2VcbiAgICovXG4gIHRpdGxlRGVsZXRlQ29va2llOiAnRWluemVsbmVzIENvb2tpZSBFbGVtZW50IGzDtnNjaGVuJyxcbiAgdGl0bGVDb3B5Q29va2llVmFsdWU6ICdXZXJ0IHZvbiBkZW0gQ29va2llIGluIGRlbiB6d2lzY2hlbiBzcGVpY2hlcm4nLFxuICBjb29raWVfbXNnXzE6ICdEb23DpG5lOicsXG4gIGNvb2tpZV9tc2dfMjogJ05hbWU6JyxcbiAgY29va2llX21zZ18zOiAnV2VydDonLFxuICBjb29raWVfbXNnXzQ6ICdBbGxlIENvb2tpZXMgbMO2c2NoZW4uIEVzIGlzdCBndXQgbcO2Z2xpY2ggZGFzIGR1IGRhbmFjaCBhdXMgZGVyIFNlaXRlIGF1c2dlbG9nZ3N0IHdpcnN0LicsXG4gIGNvb2tpZXNOb0RhdGE6ICdLZWluZSBDb29raWVzIHZvcmhhbmRlbicsXG4gIC8qKlxuICAgKiBCbGFja2xpc3Qgb3ZlcnZpZXdcbiAgICovXG4gIGJsYWNrbGlzdDogJ1NjaHdhcnplIExpc3RlbicsXG4gIHdoaXRlbGlzdDogJ1dlacOfZSBMaXN0ZW4nLFxuICBibGFja2xpc3RlZEVsZW1lbnRzV29yZHM6ICdCbGFja2xpc3QgV8O2cnRlcicsXG4gIGJsYWNrbGlzdGVkRWxlbWVudHNEb21pYW5zOiAnQmxhY2tsaXN0IERvbcOkbmVuJyxcbiAgYmxhY2tsaXN0ZWRFbGVtZW50c1VybHNJbmNsdWRlczogJ0JsYWNrbGlzdCBVcmwgQWRyZXNzZW4nLFxuICBibGFja2xpc3RlZEVsZW1lbnRzVHJhY2tlcnM6ICdCbGFja2xpc3QgVHJhY2tlcnMnLFxuICBibGFja2xpc3RlZEVsZW1lbnRzQ29va2llczogJ0JsYWNrbGlzdCBDb29raWVzJyxcbiAgYmxhY2tsaXN0ZWRFbGVtZW50c0NsYXNzOiAnQmxvY2tpZXJ1bmcgdm9uIEhUTUwgZsO8ciBjbGFzcycsXG4gIGJsYWNrbGlzdGVkRWxlbWVudHNJZDogJ0Jsb2NraWVydW5nIHZvbiBIVE1MIGbDvHIgaWQnLFxuICBibGFja2xpc3RlZEVsZW1lbnRzSHJlZjogJ0Jsb2NraWVydW5nIHZvbiBIVE1MIGbDvHIgaHJlZicsXG4gIG1lbnVCbGFja2xpc3RlZEVsZW1lbnRzQ2xhc3M6ICdCbG9ja2llcnVuZyBmw7xyIGNsYXNzJyxcbiAgbWVudUJsYWNrbGlzdGVkRWxlbWVudHNJZDogJ0Jsb2NraWVydW5nIGbDvHIgaWQnLFxuICBtZW51QmxhY2tsaXN0ZWRFbGVtZW50c0hyZWY6ICdCbG9ja2llcnVuZyBmw7xyIGhyZWYnLFxuICBibGFja2xpc3RlZEVsZW1lbnRzSWZyYW1lczogJ0JsYWNrbGlzdCBJZnJhbWVzJyxcbiAgYmxhY2tsaXN0ZWRFbGVtZW50c0lmcmFtZXNTb3VyY2VzOiAnQmxhY2tsaXN0IElmcmFtZSBRdWVsbGVuJyxcbiAgYmxhY2tsaXN0ZWRFbGVtZW50c0lmcmFtZXNOYW1lczogJ0JsYWNrbGlzdCBJZnJhbWUgTmFtZW4nLFxuICBjb3BpZWRUb0NsaXBCb2FyZDogJ0luIGRpZSBad2lzY2hlbmFibGFnZSBrb3BpZXJ0JyxcbiAgYWN0aW9uX3RpdGxlX2NvcHlUb0NsaXBib2FyZDogJ0xpc3RlIGluIFp3aXNjaGVuYWJsYWdlIGtvcGllcmVuJyxcbiAgYWN0aW9uX3RpdGxlX2V4cG9ydFRvRmlsZTogJ0xpc3RlIGluIEpTT04tRmVsZCBleHBvcnRpZXJlbicsXG4gIGFjdGlvbl90aXRsZV9kZWxldGVMaXN0OiAnTGlzdGUgZ2xvYmFsIGxlZXJlbicsXG4gIGFjdGlvbl90aXRsZV9jb3B5VG9DbGlwYm9hcmRfc2luZ2xlOiAnV2VydCBpbiBad2lzY2hlbmFibGFnZSBrb3BpZXJlbicsXG4gIGFjdGlvbl90aXRsZV9kZWxldGVfc2luZ2xlOiAnRWludHJhZyBsw7ZzY2hlbicsXG4gIGZvclRoaXNGdW5jdGlvbkxvZ2luOiAnVW0gZGllc2UgQWt0aW9uIGF1c3p1ZsO8aHJlbiwgbWVsZGVuIFNpZSBzaWNoIGJpdHRlIGFuJyxcbiAgZW1wdHlMaXN0RG9uZTogJ0xpc3RlIHd1cmRlIGdlbGVlcnQnLFxuICByZXN0b3JlRGVmYXVsdFZhbHVlOiAnU3RlbGxlbiBTaWUgZGllIExpc3RlIGF1ZiBkZW4gU3RhbmRhcmR3ZXJ0IHp1csO8Y2snLFxuICB3aGl0ZWxpc3RlZEVsZW1lbnRzRG9tYWluczogJ1doaXRlbGlzdCBEb23DpG5lbicsXG4gIGJsb2NrZWRFbGVtZW50czogJ0NvbnRlbnQgQmxvY2tlcicsXG4gIC8qKlxuICAgKiBTZWN1cml0eSBzZXR0aW5nc1xuICAgKi9cbiAgc2VjdXJpdHlJc09uOiAnRGllc2UgRXJ3ZWl0ZXJ1bmcgaXN0IEFOIG9kZXIgQVVTLicsXG4gIHNjYW5UZXh0T25XZWJzaXRlOiAnV2VubiBTaWUgZGllc2UgT3B0aW9uIGF1c3NjaGFsdGVuLCB3ZXJkZW4gYWxsZSBXw7ZydGUgYXVmIGRlbiBXZWJzaXRlbiBOSUNIVCBnZXNjYW5udC4gU2Nod2FyemUgTGlzdGU6IFfDtnJ0ZS8gQXR0cmlidXRlLyBBdHRyaWJ1dGUgV8O2cnRlciAtIHdlcmRlbiBpZ25vcmllcnQuJyxcbiAgYWxsb3dPbmx5SHR0cHNQcm90b2NvbDogJ0VybGF1YmUgbnVyIGRlbiBCZXN1Y2ggdm9uIEhUVFBTIFdlYnNpdGVzIC0gYWxzbyBkZXIgWnVncmlmZiBhdWYgYWxsZSBIVFRQIFdlYnNlaXRlbiB3aXJkIGJsb2NraWVydC4nLFxuICBhbGxvd09ubHlIdHRwUHJvdG9jb2w6ICdFcmxhdWJlIG51ciBkZW4gQmVzdWNoIHZvbiBIVFRQIFdlYnNpdGVzIC0gYWxzbyBkZXIgWnVncmlmZiBhdWYgYWxsZSBIVFRQUyBXZWJzZWl0ZW4gd2lyZCBibG9ja2llcnQuJyxcbiAgbWFrZVNlYXJjaEluU291cmNlQ29kZTogJ1NjYW5uZW4gU2llIFfDtnJ0ZXIgaW0gUXVlbGxjb2RlIGVpbmVzIGJlc3RpbW10ZW4gSFRNTC1FbGVtZW50cyAoaW5uZXJIVE1MKSBvZGVyIG51ciBpbSBUZXh0IHZvbiBIVE1MLUVsZW1lbnRlbiAoaW5uZXJUZXh0KS4nLFxuICBtdXRhdGlvbkNoZWNrOiAnw5xiZXJwcsO8ZmVuIGRlciBIVE1MLUVsZW1lbnRlIHZvbiBXZWJzaXRlcyBuYWNoIGRlbSBMYWRlbiBkZXIgU2VpdGUgKERPTSBNdXRhdGlvbmVuIHZvbiBIVE1MIEVsZW1lbnRlbiBpbiBkZXIgUmVnZWwgZHVyY2hnZWbDvGhydCB2b24gSmF2YXNjcmlwdCBCaWJsaW90aGVrZW4pLicsXG4gIGlnbm9yZVRhZ1N0eWxlOiAnRGVuIEtvZCBpbm5lcmhhbGIgdm9uIGRlbiBcIlNUWUxFXCIgVGFncyAoPHN0eWxlPiBUYWcpIGJlaW0gU2NhbiBQcm96ZXNzIGlnbm9yaWVyZW4gYW5oYW5kIGRlciBTY2h3YXJ6ZW4gTGlzdGUgV8O2cnRlci4nLFxuICBpZ25vcmVUYWdTY3JpcHQ6ICdEZW4gS29kIGlubmVyaGFsYiB2b24gZGVuIFwiU2NyaXB0XCIgVGFncyAoPHNjcmlwdD4gVGFnKSBiZWltIFNjYW4gUHJvemVzcyBpZ25vcmllcmVuIGFuaGFuZCBkZXIgU2Nod2FyemVuIExpc3RlIFfDtnJ0ZXIuJyxcbiAgaWdub3JlVGFnTGluazogJ0RlbiBLb2QgaW5uZXJoYWxiIHZvbiBkZW4gXCJMaW5rXCIgVGFncyAoPGxpbms+IFRhZykgYmVpbSBTY2FuIFByb3plc3MgaWdub3JpZXJlbiBhbmhhbmQgZGVyIFNjaHdhcnplbiBMaXN0ZSBXw7ZydGVyLicsXG4gIGlnbm9yZVRhZ01ldGE6ICdEZW4gS29kIGlubmVyaGFsYiB2b24gZGVuIFwiTWV0YVwiIFRhZ3MgKDxtZXRhPiBUYWcpIGJlaW0gU2NhbiBQcm96ZXNzIGlnbm9yaWVyZW4gYW5oYW5kIGRlciBTY2h3YXJ6ZW4gTGlzdGUgV8O2cnRlci4nLFxuICByZXBsYWNlcjogJ0Vyc2V0emUgamVkZXMgZWluemVsbmUgR2VmYWhyZW53b3J0emVpY2hlbiBkdXJjaCBkaWVzZW4gRWludHJhZy4gRGllIEdlZmFocmVud8O2cnRlciBzaW5kIFfDtnJ0ZSBhdXMgSWhyZXIgZWlnZW4gZGVmaW5pZXJ0ZW4gU2Nod2FyemVuIExpc3RlIFfDtnJ0ZXIuJyxcbiAgbWF4aW11bU9mRGFuZ2VyV29yZHM6ICdOYWNoIEVycmVpY2hlbiBkaWVzZXMgV2VydGVzIC0gYW5oYW5kIGRlciBzY2h3YXJ6ZW4gTGlzdGVuOiBCbGFja2xpc3QgV8O2cnRlLCBCbG9ja2llcnVuZyB2b24gSFRNTCBmw7xyIGNsYXNzLCBCbG9ja2llcnVuZyB2b24gSFRNTCBmw7xyIGhyZWYgb2RlciBCbG9ja2llcnVuZyB2b24gSFRNTCBmw7xyIGlkLCBkYW5uIHdpcmQgZGllIFdlYnNpdGUgZ2VzcGVycnQuIERlciBNaW5pbWFsd2VydCBpc3QgMSwgZGVyIE1heGltYWx3ZXJ0IGlzdCAzMDAuJyxcbiAgbGltaXRsZXNzU2NhbjogJ0lnbm9yaWVyZW4gU2llIGRpZSBtYXhpbWFsZSBBbnphaGwgdm9uIGJsb2NraWVydGVuIEdlZmFocmVuIGFuaGFuZCBkZW4gU2Nod2FyemVuIExpc3RlbjogQmxhY2tsaXN0IFfDtnJ0ZSwgQmxvY2tpZXJ1bmcgdm9uIEhUTUwgZsO8ciBjbGFzcywgQmxvY2tpZXJ1bmcgdm9uIEhUTUwgZsO8ciBocmVmIG9kZXIgQmxvY2tpZXJ1bmcgdm9uIEhUTUwgZsO8ciBpZC4gRGllIFdlYnNpdGUgd2lyZCBuaWNodCBibG9ja2llcnQgKGlnbm9yaWVyZW4gU2llIGRlbiBvYmlnZW4gV2VydCkuIFdlbm4gU2llIGRpZXNlIEZ1bmt0aW9uIGFrdGl2aWVyZW4sIGthbm4gUHJvdGVjdGlvbiBkaWUgTGVpc3R1bmcgSWhyZXMgQnJvd3NlcnMgYmVlaW50csOkY2h0aWdlbi4nLFxuICBkZWxldGVDb29raWVzOiAnTMO2c2NoZSBhbGxlIENvb2tpZXMgYW5oYW5kIGRlciBTY2h3YXJ6ZW4gTGlzdGUgQ29va2llcyBhdWYgamVkZXIgV2Vic2VpdGUgPyBDb29raWUgd2VyZGVuIGdlbMO2c2NodCBiZWltIMOWZmZuZW4gb2RlciBTY2hsaWXDn2VuIGVpbmVzIFRhYnMgdW5kIHfDpHJlbmQgZGVzIEJyb3dzaW5ncyBhbGxlIDUgU2VrdW5kZW4uJyxcblxuICAvKipcbiAgICogUG9wdXAgLSBob21lXG4gICAqL1xuICBwb3B1cE1haW5UaXRsZTogJ1NjaHdhcnplIE5pbmphIFN0YXRpc3RpaycsXG4gIHBvcHVwX2Jsb2NrZWRfdHJhY2tlcnM6ICdCbG9ja2llcnRlIFRyYWNrZXInLFxuICBwb3B1cF9ibG9ja2VkX2Nvb2tpZXM6ICdCbG9ja2llcnRlIENvb2tpZXMnLFxuICBwb3B1cF9ibG9ja2VkX3dvcmRzOiAnQmxvY2tpZXJ0ZSBXw7ZydGVyJyxcbiAgcG9wdXBfYmxvY2tlZF9yZXF1ZXN0czogJ0Jsb2NraWVydGUgQW5mcmFnZW4nLFxuICBwb3B1cF9ibG9ja2VkX2lmcmFtZXM6ICdCbG9ja2llcnRlIElmcmFtZXMnLFxuICBwb3B1cF9ibG9ja2VkX2RvbTogJ0Jsb2NraWVydGVzIEhUTUwnLFxuICBwb3B1cF9ibG9ja2VkX3dlYnNpdGVzOiAnQmxvY2tpZXJ0ZSBXZWJzZWl0ZW4nLFxuICBwb3B1cF90aXRsZV9kYXNoYm9hcmQ6ICdEYXNoYm9hcmQnLFxuICBwb3B1cF90aXRsZV9nbG9iYWxfY2hhcnQ6ICdHbG9iYWxlIFN0YXRpc3RpaycsXG4gIC8qKlxuICAgKiBQb3B1cCAtIElmcmFtZXMgcGFnZVxuICAgKi9cbiAgdGl0bGVEZWxldGVJZnJhbWU6ICdMw7ZzY2hlbiBTaWUgZWluZW4gZWluemVsbmVuIElmcmFtZScsXG4gIGlmcmFtZV9tc2dfMTogJ1F1ZWxsZTonLFxuICBpZnJhbWVfbXNnXzI6ICdJZDonLFxuICBpZnJhbWVfbXNnXzM6ICdjbGFzc05hbWU6JyxcbiAgaWZyYW1lc05vRGF0YTogJ0tlaW5lIElmcmFtZXMgdm9yaGFuZGVuJyxcblxuICAvKipcbiAgICogUG9wdXAgLSBzZWN1cml0eVxuICAgKi9cbiAgcG9wdXBfYWRkX2JsYWNrbGlzdGVkRWxlbWVudHNUcmFja2VyczogJ0bDvGdlbiBTaWUgZGVuIEJsYWNrbGlzdC1UcmFja2VybiBkaWUgYWt0dWVsbGUgRG9tYWluIGhpbnp1LiBBbGxlIFZlcnN1Y2hlLCBhdWYgZGllc2UgRG9tYWluIHp1enVncmVpZmVuLCB3ZXJkZW4gYmxvY2tpZXJ0LicsXG4gIHBvcHVwX3JlbW92ZV9ibGFja2xpc3RlZEVsZW1lbnRzVHJhY2tlcnM6ICdFbnRmZXJuZW4gU2llIGRpZSBha3R1ZWxsZSBEb21haW4gYXVzIGRlciBCbGFja2xpc3QgVHJhY2tlcm4uJyxcbiAgcG9wdXBfYWRkX2JsYWNrbGlzdGVkRWxlbWVudHNEb21pYW5zOiAnRsO8Z2VuIFNpZSBkZXIgQmxhY2tsaXN0LURvbWFpbiBkaWUgYWt0dWVsbGUgRG9tYWluIGhpbnp1LiBBbGxlIFZlcnN1Y2hlLCB2b24gZGllc2VyIERvbWFpbiBhdXMgYXVmIGRpZXNlIERvbWFpbiBvZGVyIERpZW5zdGUgenV6dWdyZWlmZW4sIHdlcmRlbiBibG9ja2llcnQuJyxcbiAgcG9wdXBfcmVtb3ZlX2JsYWNrbGlzdGVkRWxlbWVudHNEb21pYW5zOiAnRW50ZmVybmVuIFNpZSBkaWUgYWt0dWVsbGUgRG9tYWluIGF1cyBkZXIgQmxhY2tsaXN0IERvbcOkbmVuLicsXG4gIHBvcHVwX2FkZF9ibGFja2xpc3RlZEVsZW1lbnRzQ29va2llczogJ0bDvGdlbiBTaWUgZGVuIEJsYWNrbGlzdC1Db29raWVzIGRpZSBha3R1ZWxsZSBEb21haW4gaGluenUuIEFsbGUgQ29va2llcyB3ZXJkZW4gYmVpbSBMYWRlbiBkZXIgV2Vic2l0ZSBlbnRmZXJudCwgZGFubiBhbGxlIDUgU2VrdW5kZW4gdW5kIHdlbm4gZGllIFdlYnNpdGUgdmVybGFzc2VuIHdpcmQuJyxcbiAgcG9wdXBfcmVtb3ZlX2JsYWNrbGlzdGVkRWxlbWVudHNDb29raWVzOiAnRW50ZmVybmVuIFNpZSBkaWUgYWt0dWVsbGUgRG9tYWluIGF1cyBkZXIgQmxhY2tsaXN0IENvb2tpZXMuJyxcbiAgcG9wdXBfYWRkX2JsYWNrbGlzdGVkRWxlbWVudHNJZnJhbWVzOiAnQWt0dWVsbGUgRG9tYWluIHp1ciBCbGFja2xpc3QgaGluenVmw7xnZW4gaWZyYW1lcy4nLFxuICBwb3B1cF9yZW1vdmVfYmxhY2tsaXN0ZWRFbGVtZW50c0lmcmFtZXM6ICdFbnRmZXJuZW4gU2llIGRpZSBha3R1ZWxsZSBEb21haW4gYXVzIGRlciBCbGFja2xpc3QgSWZyYW1lcy4gQWxsZSBJZnJhbWVzIHdlcmRlbiBnZWzDtnNjaHQgc29iYWxkIGRpZXNlIFdlYnNpdGUgdmVyc3VjaHQgZXh0ZXJuZW4gQ29udGVudCB6dSBsYWRlbi4nLFxuICBwb3B1cF9hZGRfYmxhY2tsaXN0ZWRFbGVtZW50c0lmcmFtZXNTb3VyY2VzOiAnQWt0dWVsbGUgVXJsIHp1ciBCbGFja2xpc3QgSWZyYW1lcyBTb3VyY2VzIGhpbnp1ZsO8Z2VuLicsXG4gIHBvcHVwX3JlbW92ZV9ibGFja2xpc3RlZEVsZW1lbnRzSWZyYW1lc1NvdXJjZXM6ICdFbnRmZXJuZW4gU2llIGRpZSBha3R1ZWxsZSBVcmwgYXVzIGRlciBCbGFja2xpc3QgSWZyYW1lcyBTb3VyY2VzLiBBbGxlIElmcmFtZXMgd2VyZGVuIGdlbMO2c2NodCBzb2JhbGQgZGllc2UgV2Vic2l0ZSB2ZXJzdWNodCBleHRlcm5lbiBDb250ZW50IHp1IGxhZGVuLicsXG4gIHBvcHVwX2FkZF93aGl0ZWxpc3RlZEVsZW1lbnRzRG9tYWluczogJ0bDvGdlbiBTaWUgZGVyIFdoaXRlbGlzdC1Eb21haW4gZGllIGFrdHVlbGxlIERvbWFpbiBoaW56dSB1bmQgbGFzc2VuIFNpZSBhbGxlcyB6dSAoa2VpbmUgQW5mcmFnZSB3aXJkIGJsb2NraWVydCwga2VpbmUgQmxhY2tsaXN0LVdvcnRwcsO8ZnVuZywga2VpbmUgQ29va2llLUzDtnNjaHVuZyB1bmQga2VpbmUgYXV0b21hdGlzY2hlIElmcmFtZS1Mw7ZzY2h1bmcpLicsXG4gIHBvcHVwX3JlbW92ZV93aGl0ZWxpc3RlZEVsZW1lbnRzRG9tYWluczogJ0VudGZlcm5lbiBTaWUgZGllIGFrdHVlbGxlIERvbWFpbiBhdXMgZGVyIFdoaXRlbGlzdCBEb23DpG5lbi4nLFxuXG4gIHBvcHVwX2FkZF9ibGFja2xpc3RlZEVsZW1lbnRzVHJhY2tlcnNfcG9wdXA6ICdGw7xnZW4gU2llIGRlbiBha3R1ZWxsZW4gRWludHJhZyB6dSBkZXIgTGlzdCAgQmxhY2tsaXN0IFRyYWNrZXJuIGhpbnp1LiBBbGxlIFZlcnN1Y2hlLCBhdWYgZGllc2UgRG9tYWluIHp1enVncmVpZmVuLCB3ZXJkZW4gYmxvY2tpZXJ0LicsXG4gIHBvcHVwX3JlbW92ZV9ibGFja2xpc3RlZEVsZW1lbnRzVHJhY2tlcnNfcG9wdXA6ICdFbnRmZXJuZW4gU2llIGRlbiBFaW50cmFnIGF1cyBkZXIgQmxhY2tsaXN0IFRyYWNrZXIuJyxcbiAgcG9wdXBfYWRkX2JsYWNrbGlzdGVkRWxlbWVudHNEb21pYW5zX3BvcHVwOiAnRsO8Z2VuIFNpZSBkZW4gYWt0dWVsbGVuIEVpbnRyYWcgenUgZGVyIExpc3QgIEJsYWNrbGlzdCBEb21haW5zIGhpbnp1LiBBbGxlIFZlcnN1Y2hlLCB2b24gZGllc2VyIERvbWFpbiBhdXMgYXVmIGRpZXNlIERvbWFpbiBvZGVyIERpZW5zdGUgenV6dWdyZWlmZW4sIHdlcmRlbiBibG9ja2llcnQuJyxcbiAgcG9wdXBfcmVtb3ZlX2JsYWNrbGlzdGVkRWxlbWVudHNEb21pYW5zX3BvcHVwOiAnRW50ZmVybmVuIFNpZSBkZW4gRWludHJhZyBhdXMgZGVyIEJsYWNrbGlzdCBEb23DpG5lbi4nLFxuICBwb3B1cF9hZGRfYmxhY2tsaXN0ZWRFbGVtZW50c0Nvb2tpZXNfcG9wdXA6ICdGw7xnZW4gU2llIGRlbiBha3R1ZWxsZW4gRWludHJhZyB6dSBkZXIgTGlzdCAgQmxhY2tsaXN0IENvb2tpZXMgaGluenUuIEFsbGUgQ29va2llcyB3ZXJkZW4gYmVpbSBMYWRlbiBkZXIgV2Vic2l0ZSBlbnRmZXJudCwgZGFubiBhbGxlIDUgU2VrdW5kZW4gdW5kIHdlbm4gZGllIFdlYnNpdGUgdmVybGFzc2VuIHdpcmQuJyxcbiAgcG9wdXBfcmVtb3ZlX2JsYWNrbGlzdGVkRWxlbWVudHNDb29raWVzX3BvcHVwOiAnRW50ZmVybmVuIFNpZSBkZW4gRWludHJhZyBhdXMgZGVyIEJsYWNrbGlzdCBDb29raWUuJyxcbiAgcG9wdXBfYWRkX2JsYWNrbGlzdGVkRWxlbWVudHNJZnJhbWVzX3BvcHVwOiAnRsO8Z2VuIFNpZSBkZW4gYWt0dWVsbGVuIEVpbnRyYWcgenUgZGVyIExpc3QgIEJsYWNrbGlzdCBJZnJhbWVzIGhpbnp1LiBBbGxlIElmcmFtZXMgd2VyZGVuIGdlbMO2c2NodCBzb2JhbGQgZGllc2UgV2Vic2l0ZSB2ZXJzdWNodCBleHRlcm5lbiBDb250ZW50IHp1IGxhZGVuLicsXG4gIHBvcHVwX3JlbW92ZV9ibGFja2xpc3RlZEVsZW1lbnRzSWZyYW1lc19wb3B1cDogJ0VudGZlcm5lbiBTaWUgZGVuIEVpbnRyYWcgYXVzIGRlciBCbGFja2xpc3QgSWZyYW1lcy4nLFxuICBwb3B1cF9hZGRfYmxhY2tsaXN0ZWRFbGVtZW50c0lmcmFtZXNTb3VyY2VzX3BvcHVwOiAnRsO8Z2VuIFNpZSBkZW4gYWt0dWVsbGVuIEVpbnRyYWcgenUgZGVyIExpc3QgIEJsYWNrbGlzdCBJZnJhbWVzIFNvdXJjZXMgaGluenUuJyxcbiAgcG9wdXBfcmVtb3ZlX2JsYWNrbGlzdGVkRWxlbWVudHNJZnJhbWVzU291cmNlc19wb3B1cDogJ0VudGZlcm5lbiBTaWUgZGVuIEVpbnRyYWcgYXVzIGRlciBCbGFja2xpc3QgSWZyYW1lcyBTb3VyY2VzLiBBbGxlIElmcmFtZXMgd2VyZGVuIGdlbMO2c2NodCBzb2JhbGQgZGllc2UgV2Vic2l0ZSB2ZXJzdWNodCBleHRlcm5lbiBDb250ZW50IHp1IGxhZGVuLicsXG4gIHBvcHVwX2FkZF93aGl0ZWxpc3RlZEVsZW1lbnRzRG9tYWluc19wb3B1cDogJ0bDvGdlbiBTaWUgZGVyIFdoaXRlbGlzdC1Eb21haW4gZGllIGFrdHVlbGxlIERvbWFpbiBoaW56dSB1bmQgbGFzc2VuIFNpZSBhbGxlcyB6dSAoa2VpbmUgQW5mcmFnZSB3aXJkIGJsb2NraWVydCwga2VpbmUgQmxhY2tsaXN0LVdvcnRwcsO8ZnVuZywga2VpbmUgQ29va2llLUzDtnNjaHVuZyB1bmQga2VpbmUgYXV0b21hdGlzY2hlIElmcmFtZS1Mw7ZzY2h1bmcpLicsXG4gIHBvcHVwX3JlbW92ZV93aGl0ZWxpc3RlZEVsZW1lbnRzRG9tYWluc19wb3B1cDogJ0VudGZlcm5lbiBTaWUgZGllIGFrdHVlbGxlIERvbWFpbiBhdXMgZGVyIFdoaXRlbGlzdCBEb23DpG5lbi4nLFxuXG4gIHBvcHVwX3JlbG9hZF90YXJnZXQ6ICdSZWxvYWQgd2Vic2l0ZScsXG4gIGV4dGVuZHNibGFja2xpc3Q6IChcbiAgICA8c3Bhbj5cbiAgICAgIFfDpHJlbmQgZGVzIExhZGVuIGVpbmVyIFdlYnNlaXRlLCB3aXJkIGRpZSBEb23DpG5lIMO8YmVyIGVpbiBCbGFja2xpc3QgRmlsdGVyIGR1cmNoZ2Vmw7xyZmVsdC4gV2VubiBkaWUgRG9tw6RuZSBhdWYgZGVyIFNjaHdhcnplbiBMaXN0ZSBzdGVodCwgd2lyZCBkaWVzZSBibG9ja2llcnQuIFVtIGRpZSBtYXhpbWFsZSBTaWNoZXJoZWl0IHp1IGdld8OkcmxlaXN0ZW4ga2FubiBlaW5lIEVyd2VpdGVydGUgQmxhY2tsaXN0IGhpbnp1Z2Vmw7xndCB3ZXJkZW4gaXQgd2VpdGVyZW4gMjA4MjIgRWludHLDpGdlbi4gRGVyIEluaGFsdCBkZXIgTGlzdGUgc3RlaHQgaGllcjpcbiAgICAgIDxhIHRhcmdldD0nX2JsYW5rJyBocmVmPXtgJHthZGRvblByZWZpeCgpfS9leHRlbmRlZGJsYWNrbGlzdC50eHRgfT5cbiAgICAgICAgZXh0ZW5kZWRibGFja2xpc3QudHh0XG4gICAgICAgIDwvYT5cbiAgICA8L3NwYW4+XG4gICksXG4gIGV4dGVuZHNwb3JubGlzdDogKFxuICAgIDxzcGFuPlxuICAgICAgV8OkcmVuZCBkZXMgTGFkZW4gZWluZXIgV2Vic2VpdGUsIHdpcmQgZGllIERvbcOkbmUgw7xiZXIgZWluIEJsYWNrbGlzdCBGaWx0ZXIgZHVyY2hnZWbDvHJmZWx0LiBXZW5uIGRpZSBEb23DpG5lIGF1ZiBkZXIgU2Nod2FyemVuIExpc3RlIHN0ZWh0LCB3aXJkIGRpZXNlIGJsb2NraWVydC4gVW0gZGllIG1heGltYWxlIFNpY2hlcmhlaXQgenUgZ2V3w6RybGVpc3RlbiBrYW5uIGVpbmUgRXJ3ZWl0ZXJ0ZSBQb3JubGlzdCBoaW56dWdlZsO8Z3Qgd2VyZGVuIGl0IHdlaXRlcmVuIDY2NjggRWludHLDpGdlbi4gRGVyIEluaGFsdCBkZXIgTGlzdGUgc3RlaHQgaGllcjpcbiAgICAgIDxhIHRhcmdldD0nX2JsYW5rJyBocmVmPXtgJHthZGRvblByZWZpeCgpfS9leHRlbmRlZHBvcm5saXN0LnR4dGB9PlxuICAgICAgICBleHRlbmRlZHBvcm5saXN0LnR4dFxuICAgICAgPC9hPlxuICAgIDwvc3Bhbj5cbiAgKSxcbiAgLyoqXG4gICAqIFNlY3VyaXR5IGV4YW1wbGVzXG4gICAqL1xuICBibGFja2xpc3RlZEVsZW1lbnRzQ29va2llc19odG1sOiAoXG4gICAgPHNwYW4gY2xhc3NOYW1lPVwiYm94LWNvbnRlbnRcIj5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYm94LWNvbnRlbnQtLWRpdlwiPlxuICAgICAgICA8cCBjbGFzc05hbWU9XCJlbGVtZW50LXBcIj5cbiAgICAgICAgICBTaWUga8O2bm5lbiBoaWVyIGVpbmVuIENvb2tpZS1OYW1lbiBvZGVyIGVpbmVuIERvbWFpbi1OYW1lbiBoaW56dWbDvGdlbiwgZGVyIGF1ZiBqZWRlciBXZWJzaXRlIGdlbMO2c2NodCB3ZXJkZW4gc29sbC5cbiAgICAgICAgICBTdGFuZGFyZG3DpMOfaWcgZW50aMOkbHQgZGllc2UgTGlzdGUgNjQwIEVpbnRyw6RnZSBtaXQgdm9yZGVmaW5pZXJ0ZW4gQ29va2llLU5hbWVuIG9kZXIgRG9tYWluLU5hbWVuXG4gICAgICAgICAgZGFzcyBkaWUgVmVyd2VuZHVuZyB2b24gQ29va2llcyBmw7xyIFRyYWNraW5nLVp3ZWNrZSB1bmQgZG9ydCBhdXRvbWF0aXNjaCBkdXJjaCBkZW4gU2ljaGVyaGVpdHNpbmhhbHQgZ2Vsw7ZzY2h0IHdlcmRlbi5cbiAgICAgICAgPC9wPlxuICAgICAgICA8dWw+XG4gICAgICAgICAgPGxpPlxuICAgICAgICAgICAgQmVpc3BpZWwgRWludHJhZyBpbiBkZXIgTGlzdGU6IDxzcGFuIGNsYXNzTmFtZT1cImNvbG9yZWQtZXhhbXBsZS1lbGVtZW50XCI+R1BTPC9zcGFuPi4gV2VubiBTaWUgZGFuYWNoIGRpZSBXZWJzZWl0ZSBiZXN1Y2hlbjogaHR0cHM6Ly93d3cueW91dHViZS5jb20sIGRhbm4gd2lyZCBkZXIgQ29va2llIG1pdCBkZW0gTmFtZSA8c3BhbiBjbGFzc05hbWU9XCJjb2xvcmVkLWV4YW1wbGUtZWxlbWVudFwiPkdQUzwvc3Bhbj4gZ2Vsw7ZzY2h0XG4gICAgICAgICAgPC9saT5cbiAgICAgICAgICA8bGk+XG4gICAgICAgICAgICBCZWlzcGllbCBFaW50cmFnIGluIGRlciBMaXN0ZTogPHNwYW4gY2xhc3NOYW1lPVwiY29sb3JlZC1leGFtcGxlLWVsZW1lbnRcIj53d3cuN3NlYXJjaC5jb208L3NwYW4+LiBXZW5uIFNpZSBkYW5hY2ggZGllIFdlYnNlaXRlIGJlc3VjaGVuOiBodHRwczovL3d3dy43c2VhcmNoLmNvbSwgZGFubiB3ZXJkZW4gPHNwYW4gY2xhc3NOYW1lPVwiY29sb3JlZC1leGFtcGxlLWVsZW1lbnRcIj5hbGxlIENvb2tpZXM8L3NwYW4+ICB2b24gZGVyIFNlaXRlIGdlbMO2c2NodC5cbiAgICAgICAgICA8L2xpPlxuICAgICAgICA8L3VsPlxuICAgICAgPC9kaXY+XG4gICAgPC9zcGFuPlxuICApLFxuICBibGFja2xpc3RlZEVsZW1lbnRzRG9taWFuc19odG1sOiAoXG4gICAgPHNwYW4gY2xhc3NOYW1lPVwiYm94LWNvbnRlbnRcIj5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYm94LWNvbnRlbnQtLWRpdlwiPlxuICAgICAgICA8cCBjbGFzc05hbWU9XCJlbGVtZW50LXBcIj5cbiAgICAgICAgICBEaWVzIGlzdCBlaW5lIGF1ZiBEb21haW5uYW1lbiBiYXNpZXJlbmRlIEJsYWNrbGlzdC5cbiAgICAgICAgICBBbGxlIERvbWFpbnMgYXVzIGRpZXNlciBMaXN0ZSB3ZXJkZW4gYmVpbSBCZXN1Y2ggaWhyZXIgV2Vic2l0ZXMgYmxvY2tpZXJ0LlxuICAgICAgICA8L3A+XG4gICAgICAgIDx1bD5cbiAgICAgICAgICA8bGk+XG4gICAgICAgICAgICBCZWlzcGllbCBFaW50cmFnIGluIGRlciBMaXN0ZTogPHNwYW4gY2xhc3NOYW1lPVwiY29sb3JlZC1leGFtcGxlLWVsZW1lbnRcIj55dGltZy5jb208L3NwYW4+IHdlbm4gU2llIGRhbm4gZGllIFdlYnNlaXRlIGJlc3VjaGVuIDxzcGFuIGNsYXNzTmFtZT1cImNvbG9yZWQtZXhhbXBsZS1lbGVtZW50XCI+aHR0cHM6Ly95dGltZy5jb208L3NwYW4+IHdpcmQgZGVyIFp1Z3J1ZmYgdmVyd2VpZ2VydC5cbiAgICAgICAgICA8L2xpPlxuICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgIEJlaXNwaWVsIEVpbnRyYWcgaW4gZGVyIExpc3RlOiA8c3BhbiBjbGFzc05hbWU9XCJjb2xvcmVkLWV4YW1wbGUtZWxlbWVudFwiPmdpdGh1Yi5jb208L3NwYW4+IHdlbm4gU2llIGRhbm4gZGllIFdlYnNlaXRlIGJlc3VjaGVuIDxzcGFuIGNsYXNzTmFtZT1cImNvbG9yZWQtZXhhbXBsZS1lbGVtZW50XCI+aHR0cHM6Ly9naXRodWIuY29tPC9zcGFuPiB3aXJkIGRlciBadWdydWZmIHZlcndlaWdlcnQuXG4gICAgICAgICAgPC9saT5cbiAgICAgICAgPC91bD5cbiAgICAgIDwvZGl2PlxuICAgIDwvc3Bhbj5cbiAgKSxcbiAgYmxhY2tsaXN0ZWRFbGVtZW50c1VybHNJbmNsdWRlc19odG1sOiAoXG4gICAgPHNwYW4gY2xhc3NOYW1lPVwiYm94LWNvbnRlbnRcIj5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYm94LWNvbnRlbnQtLWRpdlwiPlxuICAgICAgICA8cCBjbGFzc05hbWU9XCJlbGVtZW50LXBcIj5cbiAgICAgICAgICBEaWVzIGlzdCBlaW4gRG9tYWlubmFtZSB1bmQgVGVpbCBkZXIgVVJMLWJhc2llcnRlbiBCbGFja2xpc3QuXG4gICAgICAgICAgQWxsZSBEb21haW5zIGF1cyBkaWVzZXIgTGlzdGUgdW5kIGFsbGUgw7xiZXJlaW5zdGltbWVuZGVuIEVpbnRyw6RnZSBhdXMgZGVyIFdlYnNpdGUtVVJMIHdlcmRlbiBibG9ja2llcnQsIHdlbm4gZWluZSDDnGJlcmVpbnN0aW1tdW5nIGdlZnVuZGVuIHd1cmRlLlxuICAgICAgICA8L3A+XG4gICAgICAgIDx1bD5cbiAgICAgICAgICA8bGk+XG4gICAgICAgICAgICBCZWlzcGllbCBFaW50cmFnIGluIGRlciBMaXN0ZTogPHNwYW4gY2xhc3NOYW1lPVwiY29sb3JlZC1leGFtcGxlLWVsZW1lbnRcIj5wYWNrYWdlPC9zcGFuPi4gV2VubiBTaWUgZGFuYWNoIGRpZSBXZWJzZWl0ZSBiZXN1Y2hlbjogaHR0cHM6Ly93d3cubnBtanMuY29tLzxzcGFuIGNsYXNzTmFtZT1cImNvbG9yZWQtZXhhbXBsZS1lbGVtZW50XCI+cGFja2FnZTwvc3Bhbj4vZ3VscC1iYWJlbCAgd2lyZCBkZXIgWnVncnVmZiB2ZXJ3ZWlnZXJ0LlxuICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgPGxpPlxuICAgICAgICAgICAgQmVpc3BpZWwgRWludHJhZyBpbiBkZXIgTGlzdGU6IDxzcGFuIGNsYXNzTmFtZT1cImNvbG9yZWQtZXhhbXBsZS1lbGVtZW50XCI+dGVzdDwvc3Bhbj4uIFdlbm4gU2llIGRhbmFjaCBkaWUgV2Vic2VpdGUgYmVzdWNoZW46IGh0dHBzOi8vd3d3Lmdvb2dsZS5jb20vc2VhcmNoP3E9PHNwYW4gY2xhc3NOYW1lPVwiY29sb3JlZC1leGFtcGxlLWVsZW1lbnRcIj50ZXN0PC9zcGFuPiwgIHdpcmQgZGVyIFp1Z3J1ZmYgdmVyd2VpZ2VydC5cbiAgICAgICAgICA8L2xpPlxuICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgIEJlaXNwaWVsIEVpbnRyYWcgaW4gZGVyIExpc3RlOiA8c3BhbiBjbGFzc05hbWU9XCJjb2xvcmVkLWV4YW1wbGUtZWxlbWVudFwiPnE8L3NwYW4+LiBXZW5uIFNpZSBkYW5hY2ggZGllIFdlYnNlaXRlIGJlc3VjaGVuOiBodHRwczovL3d3dy5nb29nbGUuY29tL3NlYXJjaD88c3BhbiBjbGFzc05hbWU9XCJjb2xvcmVkLWV4YW1wbGUtZWxlbWVudFwiPnE8L3NwYW4+PXRlc3QsICB3aXJkIGRlciBadWdydWZmIHZlcndlaWdlcnQuXG4gICAgICAgICAgPC9saT5cbiAgICAgICAgICA8bGk+XG4gICAgICAgICAgICBCZWlzcGllbCBFaW50cmFnIGluIGRlciBMaXN0ZTogPHNwYW4gY2xhc3NOYW1lPVwiY29sb3JlZC1leGFtcGxlLWVsZW1lbnRcIj5odWIuY29tPC9zcGFuPi4gV2VubiBTaWUgZGFuYWNoIGRpZSBXZWJzZWl0ZSBiZXN1Y2hlbjogaHR0cHM6Ly93d3cuZ2l0PHNwYW4gY2xhc3NOYW1lPVwiY29sb3JlZC1leGFtcGxlLWVsZW1lbnRcIj5odWIuY29tPC9zcGFuPiwgIHdpcmQgZGVyIFp1Z3J1ZmYgdmVyd2VpZ2VydC5cbiAgICAgICAgICA8L2xpPlxuICAgICAgICA8L3VsPlxuICAgICAgPC9kaXY+XG4gICAgPC9zcGFuPlxuICApLFxuICBibGFja2xpc3RlZEVsZW1lbnRzSWZyYW1lc19odG1sOiAoXG4gICAgPHNwYW4gY2xhc3NOYW1lPVwiYm94LWNvbnRlbnRcIj5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYm94LWNvbnRlbnQtLWRpdlwiPlxuICAgICAgICA8cCBjbGFzc05hbWU9XCJlbGVtZW50LXBcIj5cbiAgICAgICAgICBXZW5uIFNpZSBlaW5lIFdlYnNpdGUgYmVzdWNoZW4gdW5kIHNpY2ggZGVyIERvbWFpbm5hbWUgZGVyIFdlYnNpdGUgaW4gZGllc2VyIExpc3RlIGJlZmluZGV0LCB3ZXJkZW4gYWxsZSBJZnJhbWVzIGVudGZlcm50LlxuICAgICAgICA8L3A+XG4gICAgICAgIDx1bD5cbiAgICAgICAgICA8bGk+XG4gICAgICAgICAgICBCZWlzcGllbCBFaW50cmFnIGluIGRlciBMaXN0ZTogPHNwYW4gY2xhc3NOYW1lPVwiY29sb3JlZC1leGFtcGxlLWVsZW1lbnRcIj5nYXpldGEucGw8L3NwYW4+LiBXZW5uIFNpZSBkYW5hY2ggZGllIFdlYnNlaXRlIGJlc3VjaGVuOiBodHRwczovL3d3dy5nYXpldGEucGwgd2VyZGVuIGFsbGUgSWZyYW1lcyB2b24gZGVyIFNlaXRlIGh0dHBzOi8vPHNwYW4gY2xhc3NOYW1lPVwiY29sb3JlZC1leGFtcGxlLWVsZW1lbnRcIj5nYXpldGEucGw8L3NwYW4+IGVudGZlcm50XG4gICAgICAgICAgPC9saT5cbiAgICAgICAgPC91bD5cbiAgICAgIDwvZGl2PlxuICAgIDwvc3Bhbj5cbiAgKSxcbiAgYmxhY2tsaXN0ZWRFbGVtZW50c0lmcmFtZXNTb3VyY2VzX2h0bWw6IChcbiAgICA8c3BhbiBjbGFzc05hbWU9XCJib3gtY29udGVudFwiPlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJib3gtY29udGVudC0tZGl2XCI+XG4gICAgICAgIDxwIGNsYXNzTmFtZT1cImVsZW1lbnQtcFwiPlxuICAgICAgICAgIFdlbm4gU2llIGVpbmUgV2Vic2l0ZSBiZXN1Y2hlbiB1bmQgZGVyIEF0dHJpYnV0IFwic3JjXCIgYWxzbyBTb3VyY2UgKFF1ZWxsZSBkZXMgU2VydmVycykgZWluZXMgSWZyYW1lcyBlaW5lbiBFaW50cmFnIGF1cyBkaWVzZXIgTGlzdGUgYmVpbmhhbHRldCwgd2lyZCBkYXMgSWZyYW1lIGF1cyBkZXIgV2Vic2l0ZSBlbnRmZXJudC5cbiAgICAgICAgPC9wPlxuICAgICAgICA8dWw+XG4gICAgICAgICAgPGxpPlxuICAgICAgICAgICAgQmVpc3BpZWwgRWludHJhZyBpbiBkZXIgTGlzdGU6IDxzcGFuIGNsYXNzTmFtZT1cImNvbG9yZWQtZXhhbXBsZS1lbGVtZW50XCI+aHR0cHM6Ly9kbXAudGhlYWRleC5jb20vci88L3NwYW4+LiBXZW5uIFNpZSBkYW5hY2ggZGllIFdlYnNlaXRlIGJlc3VjaGVuOiBodHRwczovL3d3dy5nYXpldGEucGwgdW5kIGlyZ2VuZGVpbiBJZnJhbWUgRWxlbWVudCBkYXMgQXR0cmlidXQgc3JjIChzb3VyY2UpLCBkZW4gU291cmNlIGJlaW5oYWx0ZXQgPHNwYW4gY2xhc3NOYW1lPVwiY29sb3JlZC1leGFtcGxlLWVsZW1lbnRcIj5odHRwczovL2RtcC50aGVhZGV4LmNvbS9yLzwvc3Bhbj4yMzAvMTEyMS8/Yz00MjI1MjIyOTU1NzU4MDY2NzA5LCB3aXJkIGRhcyBJZnJhbWUgYXVzIGRlciBTZWl0ZSBrb21wbGV0dCBlbnRmZXJudFxuICAgICAgICAgIDwvbGk+XG4gICAgICAgIDwvdWw+XG4gICAgICA8L2Rpdj5cbiAgICA8L3NwYW4+XG4gICksXG4gIGJsYWNrbGlzdGVkRWxlbWVudHNJZnJhbWVzTmFtZXNfaHRtbDogKFxuICAgIDxzcGFuIGNsYXNzTmFtZT1cImJveC1jb250ZW50XCI+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImJveC1jb250ZW50LS1kaXZcIj5cbiAgICAgICAgPHAgY2xhc3NOYW1lPVwiZWxlbWVudC1wXCI+XG4gICAgICAgICAgV2VubiBTaWUgZWluZSBXZWJzaXRlIGJlc3VjaGVuIHVuZCBkZXIgQXR0cmlidXQgXCJuYW1lXCIgZWluZXMgSWZyYW1lcyBlaW5lbiBFaW50cmFnIGF1cyBkaWVzZXIgTGlzdGUgYmVpbmhhbHRldCwgd2lyZCBkYXMgSWZyYW1lIGF1cyBkZXIgV2Vic2l0ZSBlbnRmZXJudC5cbiAgICAgICAgPC9wPlxuICAgICAgICA8dWw+XG4gICAgICAgICAgPGxpPlxuICAgICAgICAgICAgQmVpc3BpZWwgRWludHJhZyBpbiBkZXIgTGlzdGU6IDxzcGFuIGNsYXNzTmFtZT1cImNvbG9yZWQtZXhhbXBsZS1lbGVtZW50XCI+Z29vZ2xlYWRzPC9zcGFuPi4gV2VubiBTaWUgZGFuYWNoIGRpZSBXZWJzZWl0ZSBiZXN1Y2hlbjogaHR0cHM6Ly93d3cuZ2F6ZXRhLnBsIHVuZCBpcmdlbmRlaW4gSWZyYW1lIEVsZW1lbnQgZGFzIEF0dHJpYnV0IG5hbWUsIGRpZSBaZWljaGVua2V0dGUgYmVpbmhhbHRldCA8c3BhbiBjbGFzc05hbWU9XCJjb2xvcmVkLWV4YW1wbGUtZWxlbWVudFwiPmdvb2dsZWFkczwvc3Bhbj5fc3luYywgd2lyZCBkYXMgSWZyYW1lIGF1cyBkZXIgU2VpdGUga29tcGxldHQgZW50ZmVybnRcbiAgICAgICAgICA8L2xpPlxuICAgICAgICA8L3VsPlxuICAgICAgPC9kaXY+XG4gICAgPC9zcGFuPlxuICApLFxuICBibGFja2xpc3RlZEVsZW1lbnRzVHJhY2tlcnNfaHRtbDogKFxuICAgIDxzcGFuIGNsYXNzTmFtZT1cImJveC1jb250ZW50XCI+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImJveC1jb250ZW50LS1kaXZcIj5cbiAgICAgICAgPHAgY2xhc3NOYW1lPVwiZWxlbWVudC1wXCI+XG4gICAgICAgICAgV2VubiBTaWUgZWluZSBXZWJzaXRlIGJlc3VjaGVuIHVuZCBkaWUgV2Vic2l0ZSBhbmRlcmUgaW1wbGVtZW50aWVydCBoYXQgKERyaXR0ZSlcbiAgICAgICAgICBEaWVuc3RlIG9kZXIgVHJhY2tpbmctRGllbnN0ZSB1bmQgZGVyIERvbWFpbm5hbWUgc3RpbW1lbiBtaXQgZWluZW0gRG9tYWlubmFtZW4gYXVzIGRpZXNlciBMaXN0ZSDDvGJlcmVpblxuICAgICAgICAgIG9kZXIgZGVyIGdlc2FtdGUgVVJMLVBmYWQgc3RpbW10IGRhbm4gbWl0IGVpbmVtIEVpbnRyYWcgYXVzIGRpZXNlciBMaXN0ZSDDvGJlcmVpblxuICAgICAgICAgIERpZSBBbmZyYWdlIHdpcmQgYmxvY2tpZXJ0LlxuICAgICAgICA8L3A+XG4gICAgICAgIDx1bD5cbiAgICAgICAgICA8bGk+XG4gICAgICAgICAgICBCZWlzcGllbCBFaW50cmFnIGluIGRlciBMaXN0ZTogPHNwYW4gY2xhc3NOYW1lPVwiY29sb3JlZC1leGFtcGxlLWVsZW1lbnRcIj5jZG4ubW91c2VmbG93LmNvbTwvc3Bhbj4uIEVnYWwgd2VsY2hlIFdlYnNlaXRlIFNpZSBiZXN1Y2hlbiwgZmFsbHMgZWluZSBXZWJzZWl0ZSB2ZXJzdWNoZSBlaW5lbiBTZXJ2aWNlIHZvbiBodHRwczovLzxzcGFuIGNsYXNzTmFtZT1cImNvbG9yZWQtZXhhbXBsZS1lbGVtZW50XCI+Y2RuLm1vdXNlZmxvdy5jb208L3NwYW4+L2xpYi90cmFjay5qcyBhYnp1cnVmZW4sIHdpcmQgZGllc2UgQWJmcmFnZSBibG9ja2llcnRcbiAgICAgICAgICA8L2xpPlxuICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgIEJlaXNwaWVsIEVpbnRyYWcgaW4gZGVyIExpc3RlOiA8c3BhbiBjbGFzc05hbWU9XCJjb2xvcmVkLWV4YW1wbGUtZWxlbWVudFwiPnJzcmMucGhwL3YzL3k0L3IvLVBBWFAtZGVpakUuZ2lmPC9zcGFuPi4gRWdhbCB3ZWxjaGUgV2Vic2VpdGUgU2llIGJlc3VjaGVuLCBmYWxscyBlaW5lIFdlYnNlaXRlIHZlcnN1Y2hlIGVpbmVuIFNlcnZpY2Ugdm9uOiBodHRwczovL3N0YXRpYy54eC5mYmNkbi5uZXQvPHNwYW4gY2xhc3NOYW1lPVwiY29sb3JlZC1leGFtcGxlLWVsZW1lbnRcIj5yc3JjLnBocC92My95NC9yLy1QQVhQLWRlaWpFLmdpZjwvc3Bhbj4gIGFienVydWZlbiwgd2lyZCBkaWVzZSBBYmZyYWdlIGJsb2NraWVydFxuICAgICAgICAgIDwvbGk+XG4gICAgICAgIDwvdWw+XG4gICAgICA8L2Rpdj5cbiAgICA8L3NwYW4+XG4gICksXG4gIGJsYWNrbGlzdGVkRWxlbWVudHNXb3Jkc19odG1sOiAoXG4gICAgPHNwYW4gY2xhc3NOYW1lPVwiYm94LWNvbnRlbnRcIj5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYm94LWNvbnRlbnQtLWRpdlwiPlxuICAgICAgICA8cCBjbGFzc05hbWU9XCJlbGVtZW50LXBcIj5cbiAgICAgICAgICBEZXIgU2ljaGVyaGVpdHNpbmhhbHQgZmluZGV0IGplZGVzIFdvcnQgYXVzIGRpZXNlciBzY2h3YXJ6ZW4gTGlzdGUgdW5kIGplZGVzIFdvcnQgd2lyZCBkdXJjaCBkZW4gaW0gQWJzY2huaXR0IFwiRWluc3RlbGx1bmdlblwiIGRlZmluaWVydGVuIFwiRXJzZXR6ZXJcIiBlcnNldHp0LlxuICAgICAgICAgIFdlbm4gZGVyIFNpY2hlcmhlaXRzaW5oYWx0IGVpbiBHZWZhaHJlbndvcnQgYXVzIGRlciBcIkJsYWNrbGlzdDogV29yZHNcIiBpbiBlaW5lbSBIVE1MLVRhZyBnZWZ1bmRlbiBoYXQsXG4gICAgICAgICAgQW5zY2hsaWXDn2VuZCB3ZXJkZW4gZGllIEhUTUwtVGFnLUF0dHJpYnV0ZSBnZXNjYW5udC4gV2VubiBlaW4gQXR0cmlidXRuYW1lIGF1cyBkaWVzZXIgTGlzdGUgbmljaHQgbWl0IEVpbnRyw6RnZW4gYXVzIGRlciBcIkJsYWNrbGlzdDogQXR0cmlidXRlXCIgw7xiZXJlaW5zdGltbXQsIGRhbm5cbiAgICAgICAgICBEZXIgU2ljaGVyaGVpdHNpbmhhbHQgZmluZGV0IGplZGVzIFdvcnQgaW5uZXJoYWxiIGRlcyBBdHRyaWJ1dHdlcnRzIGF1cyBkaWVzZXIgTGlzdGUgdW5kIGVyc2V0enQgamVkZXMgWmVpY2hlbiBkdXJjaCBkYXMgRXJzZXR6ZXJ6ZWljaGVuXG4gICAgICAgICAgZGVmaW5pZXJ0IGltIEFic2Nobml0dCBcIkVpbnN0ZWxsdW5nZW5cIi5cbiAgICAgICAgPC9wPlxuICAgICAgICA8dWw+XG4gICAgICAgICAgPGxpPlxuICAgICAgICAgICAgWnVtIEJlaXNwaWVsLCB3ZW5uIGRhcyBXb3J0IFwiZ3Vuc1wiIGluIGRpZXNlciBzY2h3YXJ6ZW4gTGlzdGUgdm9yaGFuZGVuIGlzdCB1bmQgU2llIGVpbmUgV2Vic2l0ZSBiZXN1Y2hlbiwgZGFubiB3aXJkIGRhcyBXb3J0IFwiZ3Vuc1wiIGVyc2V0enQgd2VyZGVuLlxuICAgICAgICAgICAgPGJyIC8+XG4gICAgICAgICAgICBCZWlzcGllbCBFaW5nYWJlOiBcIndlIGhhdmUgPHNwYW4gY2xhc3NOYW1lPVwiY29sb3JlZC1leGFtcGxlLWVsZW1lbnRcIj5ndW5zPC9zcGFuPiBpbiAuLi5cIi5cbiAgICAgICAgICAgIDxiciAvPlxuICAgICAgICAgICAgQmVpc3BpZWxhdXNnYWJlOiBcIndlIGhhdmUgPHNwYW4gY2xhc3NOYW1lPVwiY29sb3JlZC1leGFtcGxlLWVsZW1lbnRcIj4jIyMjPC9zcGFuPiBpbiAuLi5cIlxuICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgPGxpPlxuICAgICAgICAgICAgWnVtIEJlaXNwaWVsLCB3ZW5uIGRhcyBXb3J0IFwic2V2ZW5cIiBpbiBkaWVzZXIgc2Nod2FyemVuIExpc3RlIHZvcmhhbmRlbiBpc3QgdW5kIFNpZSBlaW5lIFdlYnNpdGUgYmVzdWNoZW4sIGRhbm4gd2lyZCBkYXMgV29ydCBcInNldmVuXCIgZXJzZXR6dCB3ZXJkZW4uXG4gICAgICAgICAgICA8YnIgLz5cbiAgICAgICAgICAgIEJlaXNwaWVsIEVpbmdhYmU6IFwiPHNwYW4gY2xhc3NOYW1lPVwiY29sb3JlZC1leGFtcGxlLWVsZW1lbnRcIj5zZXZlbjwvc3Bhbj4geWVhcnMgb2xkIC4uLlwiLlxuICAgICAgICAgICAgPGJyIC8+XG4gICAgICAgICAgICBCZWlzcGllbGF1c2dhYmU6IFwiPHNwYW4gY2xhc3NOYW1lPVwiY29sb3JlZC1leGFtcGxlLWVsZW1lbnRcIj4jIyMjIzwvc3Bhbj4geWVhcnMgb2xkIC4uLlwiLlxuICAgICAgICAgIDwvbGk+XG4gICAgICAgIDwvdWw+XG4gICAgICA8L2Rpdj5cbiAgICA8L3NwYW4+XG4gICksXG4gIGJsYWNrbGlzdGVkRWxlbWVudHNDbGFzc19odG1sOiAoXG4gICAgPHNwYW4gY2xhc3NOYW1lPVwiYm94LWNvbnRlbnRcIj5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYm94LWNvbnRlbnQtLWRpdlwiPlxuICAgICAgICA8cCBjbGFzc05hbWU9XCJlbGVtZW50LXBcIj5cbiAgICAgICAgICBCbG9ja2llcmVuIHZvbiBET00tRWxlbWVudGVuIChUYWdzKSBiYXNpZXJlbmQgYXVmIGRlbSBBdHRyaWJ1dDogY2xhc3MuXG4gICAgICAgIDwvcD5cbiAgICAgICAgPHVsPlxuICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgIEJlaXNwaWVsIEVpbnRyYWc6IFwiZm9udC1ib2xkXCIuIFdlbm4gZHUgZWluZSBXZWJzZWl0ZSBiZXN1Y2h0c3QgdW5kIGlyZ2VuZGVpbiBET00gRWxlbWVudCBkYXMgQXR0cmlidXQgY2xhc3MgbWl0IGRlbSBXZXJ0ICdmb250LWJvbGQnIGJlZsO8bGx0IGlzdCAoei5CLjogeyc8c3BhbiBjbGFzcz1cImZvbnQtYm9sZFwiPiBUZXh0IDwvc3Bhbj4nfSkgZGFubiB3aXJkIGRhcyBFbGVtZW50IGF1cyBkZXIgV2Vic2VpdGUgZW5mZXJudC5cbiAgICAgICAgICA8L2xpPlxuICAgICAgICA8L3VsPlxuICAgICAgPC9kaXY+XG4gICAgPC9zcGFuPlxuICApLFxuICBibGFja2xpc3RlZEVsZW1lbnRzSHJlZl9odG1sOiAoXG4gICAgPHNwYW4gY2xhc3NOYW1lPVwiYm94LWNvbnRlbnRcIj5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYm94LWNvbnRlbnQtLWRpdlwiPlxuICAgICAgICA8cCBjbGFzc05hbWU9XCJlbGVtZW50LXBcIj5cbiAgICAgICAgICBCbG9ja2llcmVuIHZvbiBcIkFcIiAtVGFnLUVsZW1lbnRlbiBiYXNpZXJlbmQgYXVmIGlocmVtIEF0dHJpYnV0OiBocmVmLlxuICAgICAgICA8L3A+XG4gICAgICAgIDx1bD5cbiAgICAgICAgICA8bGk+XG4gICAgICAgICAgICBCZWlzcGllbCBFaW50cmFnOiBcInJlZGlyZWN0P1wiLiBXZW5uIGR1IGVpbiBXZWJzZWl0ZSBiZXN1Y2h0c3QgdW5kIGRhcyBET00gRWxlbWVudCB7JzxhPid9IGRhcyBBdHRyaWJ1dCBocmVmIG1pdCBkZW0gV2VydCAncmVkaXJlY3Q/JyBiZWbDvGxsdCBoYXQgKHouQi46IHsnPGEgaHJlZj1cImh0dHBzOi8veHYzNDViaEZELmNvbS9yZWRpcmVjdD9jbGllbnQ9aHR0cDovL2V4YW1wbGUuY29tXCI+bGluazwvYT4nfSksIGRhbm4gd2lyZCBkYXMgRWxlbWVudCBhdXMgZGVyIFdlYnNlaXRlIGVuZmVybnQuXG4gICAgICAgICAgPC9saT5cbiAgICAgICAgPC91bD5cbiAgICAgIDwvZGl2PlxuICAgIDwvc3Bhbj5cbiAgKSxcbiAgYmxhY2tsaXN0ZWRFbGVtZW50c0lkX2h0bWw6IChcbiAgICA8c3BhbiBjbGFzc05hbWU9XCJib3gtY29udGVudFwiPlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJib3gtY29udGVudC0tZGl2XCI+XG4gICAgICAgIDxwIGNsYXNzTmFtZT1cImVsZW1lbnQtcFwiPlxuICAgICAgICAgIEJsb2NraWVyZW4gdm9uIERPTS1FbGVtZW50ZW4gKFRhZ3MpIGJhc2llcmVuZCBhdWYgZGVtIEF0dHJpYnV0OiB6ZC5cbiAgICAgICAgPC9wPlxuICAgICAgICA8dWw+XG4gICAgICAgICAgPGxpPlxuICAgICAgICAgICAgQmVpc3BpZWwgRWludHJhZzogXCJleHRlcm4tbG9nb1wiLiBXZW5uIGR1IGVpbmUgV2Vic2VpdGUgYmVzdWNodHN0IHVuZCBpcmdlbmRlaW4gRE9NIEVsZW1lbnQgZGFzIEF0dHJpYnV0IGlkIG1pdCBkZW0gV2VydCAnZXh0ZXJuLWxvZ28nIGJlZsO8bGx0IGlzdCAoei5CLjogeyc8aW1nIGlkPVwiZXh0ZXJuLWxvZ29cIi8+J30pLCBkYW5uIHdpcmQgZGFzIEVsZW1lbnQgYXVzIGRlciBXZWJzZWl0ZSBlbmZlcm50LlxuICAgICAgICAgIDwvbGk+XG4gICAgICAgIDwvdWw+XG4gICAgICA8L2Rpdj5cbiAgICA8L3NwYW4+XG4gICksXG4gIHdoaXRlbGlzdGVkRWxlbWVudHNEb21haW5zX2h0bWw6IChcbiAgICA8c3BhbiBjbGFzc05hbWU9XCJib3gtY29udGVudFwiPlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJib3gtY29udGVudC0tZGl2XCI+XG4gICAgICAgIDxwIGNsYXNzTmFtZT1cImVsZW1lbnQtcFwiPlxuICAgICAgICAgIE1hY2hlbiBTaWUgbmljaHRzIGbDvHIgYXVzZ2V3w6RobHRlIERvbWFpbm5hbWVuLlxuICAgICAgICA8L3A+XG4gICAgICAgIDx1bD5cbiAgICAgICAgICA8bGk+XG4gICAgICAgICAgICBCZWlzcGllbCBFaW50cmFnIGluIGRlciBMaXN0ZTogPHNwYW4gY2xhc3NOYW1lPVwiY29sb3JlZC1leGFtcGxlLWVsZW1lbnRcIj5nb29nbGUuY29tPC9zcGFuPiB3ZW5uIFNpZSBkYW5uIGRpZSBXZWJzZWl0ZSBiZXN1Y2hlbiBodHRwczovL3d3dy48c3BhbiBjbGFzc05hbWU9XCJjb2xvcmVkLWV4YW1wbGUtZWxlbWVudFwiPmdvb2dsZS5jb208L3NwYW4+IGZpbmRldCBrZWluZSDDnGJlcnByw7xmdW5nIGplZ2xpY2hlciBBcnQgc3RhdHRcbiAgICAgICAgICA8L2xpPlxuICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgIEJlaXNwaWVsIEVpbnRyYWcgaW4gZGVyIExpc3RlOiA8c3BhbiBjbGFzc05hbWU9XCJjb2xvcmVkLWV4YW1wbGUtZWxlbWVudFwiPm5wbWpzLmNvbTwvc3Bhbj4gd2VubiBTaWUgZGFubiBkaWUgV2Vic2VpdGUgYmVzdWNoZW4gaHR0cHM6Ly93d3cuPHNwYW4gY2xhc3NOYW1lPVwiY29sb3JlZC1leGFtcGxlLWVsZW1lbnRcIj5ucG1qcy5jb208L3NwYW4+L3BhY2thZ2UvZ3VscC1iYWJlbCBmaW5kZXQga2VpbmUgw5xiZXJwcsO8ZnVuZyBqZWdsaWNoZXIgQXJ0IHN0YXR0XG4gICAgICAgICAgPC9saT5cbiAgICAgICAgPC91bD5cbiAgICAgIDwvZGl2PlxuICAgIDwvc3Bhbj5cbiAgKSxcbiAgZXhhbXBsZTogJ0JlaXNwaWVsZScsXG4gIC8qKlxuICAgKiBJbWFnZXMgZG93bmxvYWQgXG4gICAqL1xuICBpbWFnZXNQb3B1cFRpdGxlOiAnRm90b3Mgd3VyZGVuIGdlZnVuZGVuJyxcbiAgaW1hZ2VzTm9EYXRhOiAnS2VpbmUgdmFsaWRlbiBGb3RvcyB2b3JoYW5kZW4nLFxuICBpbWFnZXNOb0RhdGFGYXZvdXJpdGVzOiAnS2VpbmUgZ2VzcGVpY2hlcnRlbiBGb3RvcyB2b3JoYW5kZW4nLFxuICBpbWFnZXNMb2FkaW5nVGFiczogJ0FrdGl2ZSB0YWJzIHdlcmRlbiBnZWxhZGVuLi4uJyxcbiAgY3VycmVudF90YWJzX3RpdGxlOiAnT2ZmZW5lIFRhYnMnLFxuICBmaWx0ZXI6ICdGaWx0ZXJuJyxcbiAgZmlsdGVyX2FsbDogJ0FsbGUnLFxuICBpdGVtc1BlclNpdGU6ICdKZSBTZWl0ZScsXG4gIGl0ZW1zUGVyU2l0ZVN1ZmZpeDogJ0ZvdG9zJyxcbiAgcGFnZTogJ1NlaXRlJyxcbiAgb2Y6ICd2b24nLFxuICBpbWFnZXM6ICdGb3RvcycsXG4gIGN1cnJlbnRfZmF2b3VyaXRlc19pbWFnZXM6ICdEZXJ6ZWl0IGdlc3BlaWNoZXJ0ZSBGb3RvcycsXG4gIG9wZW5faW5fbmV3X3RhYjogJ0ltIG5ldWVuIFRhYiDDtmZmbmVuJyxcbiAgZG93bmxvYWQ6ICdIZXJ1bnRlcmxhZGVuJyxcbiAgZG93bmxvYWRTbWFsbDogJ2Rvd25sb2FkJyxcbiAgZGVsZXRlX2FsbDogJ0FsbGUgbMO2c2NoZW4nLFxuICBub3RMb2dnZWRJbkltYWdlc0Zhdm91cml0ZXNBZGQ6ICdOdXIgYW5nZW1lbGRldGUgQmVudXR6ZXIga8O2bm5lbiBCaWxkZXIgenVyIEZhdm9yaXRlbmxpc3RlIGhpbnp1ZsO8Z2VuJyxcbiAgbm90TG9nZ2VkSW5JbWFnZXNGYXZvdXJpdGVzTWFuYWdlOiAnTnVyIGFuZ2VtZWxkZXRlIEJlbnV0emVyIGvDtm5uZW4gZGllIEZhdm9yaXRlbmxpc3RlIHZlcndhbHRlbicsXG4gIHRhYnNOb0RhdGE6ICdLZWluZSB2YWxpZGVuIFRhYnMgdm9yaGFuZGVuJyxcbiAgaW1hZ2VzTG9hZGluZ0RhdGE6ICdGb3RvcyB3ZXJkZW4gZ2VsYWRlbi4uLicsXG4gIC8qXG4gICAqIExpc3QgYWN0aW9ucyBcbiAgICovXG4gIGluZm9JdGVtQWRkZWQ6ICdFaW50cmFnIHd1cmRlIGluIGRpZSBMaXN0ZSBoaW56dWdlZsO8Z3QnLFxuICBpbmZvSXRlbVJlbW92ZWQ6ICdFaW50cmFnIHd1cmRlIGF1cyBkZXIgTGlzdGUgZW50ZmVybnQnLFxuICBpbmZvQXJyYXlJczA6ICdMaXN0ZSBpc3QgbGVlciwgZGFoZXIga2FubiBrZWluIEVsZW1lbnQgZW50ZmVybnQgd2VyZGVuJyxcbiAgaW5mb0luY29ycmVjdFZhbHVlOiAnV2VydCBpc3QgbmljaHQgdmFsaWRlJyxcbiAgaW5mb0l0ZW1Jbkxpc3Q6ICdFaW50cmFnIGJlcmVpdHMgaW4gZGVyIExpc3RlIHZvcmhhbmRlbicsXG5cbiAgY291bnRyeTogJ0xhbmQnLFxuICBjb3VudHJpZXNOb3RGb3VuZFRleHQ6ICdTb3JyeSwgZGllc2VzIExhbmQgaGFiZSBpY2ggbmljaHQgZ2VmdW5kZW4nLFxuICBkcm9wVGV4dDogJ0hpZXIgbG9zbGFzc2VuJyxcbiAgZXJyb3I6ICdGZWhsZXInLFxuICBzZWFyY2hQbGFjZWhvbGRlcjogJ1N1Y2hlbi4uLicsXG4gIHNlYXJjaDogJ1N1Y2hlJyxcbiAgbGlzdDogJ0xpc3RlJyxcbiAgYWRkUGxhY2Vob2xkZXI6ICdXZXJ0Li4uJyxcbiAgYWRkTmV3RW50cnlUaXRsZTogJ05ldWVuIEVpbnRyYWcgaGluenVmw7xnZW4nLFxuICBub19kYXRhX2xpc3Q6ICdLZWluZSBFaW50csOkZ2Ugdm9yaGFuZGVuJyxcbiAgbm9fZGF0YV9saXN0X3NlYXJjaDogJ0tlaW5lIFN1Y2hlcmdlYm5pc3NlIHZvcmhhbmRlbicsXG4gIGxvYWRpbmc6ICdMYWRlbi4uLicsXG4gIGhvbWVfc2VjdXJpdHlfMzogJ0Jsb2NraWVydW5nIHZvbiBBbmZyYWdlbicsXG4gIGhvbWVfc2VjdXJpdHlfMjogJ0Jsb2NraWVydW5nIHZvbiBDb29raWVzJyxcbiAgaG9tZV9zZWN1cml0eV8xOiAnQmxvY2tpZXJ1bmcgdm9uIFRyYWNrZXJuJyxcbiAgaG9tZV9zZWN1cml0eV80OiAnQmxvY2tpZXJ1bmcgdm9uIFBvcm5vZ3JhcGhpc2NoZW4gU2VpdGVuJyxcbiAgaG9tZV9zZWN1cml0eV81OiAnQmxvY2tpZXJ1bmcgdm9uIFfDtnJ0ZXJuJyxcbiAgaG9tZV9zZWN1cml0eV82OiAnQmxvY2tpZXJ1bmcgdm9uIFdlYnNlaXRlbiBDb250ZW50JyxcbiAgdXBsb2FkOiAnRHJhZyAmIERyb3AgZGllIE5pbmphUHJvdGVjdHMganNvbiBEYXRlaSBoaWVyLi4uJyxcbiAgZXhwb3J0OiAnRXhwb3J0JyxcbiAgZXhwb3J0QWxsOiAnZGVyIGdsb2JhbGVuIExpc3RlbiB1bmQgRWluc3RlbGx1bmdlbicsXG4gIGRhbmdlckNvdW50OiAnSWNoIGJlc2Now7x0emUgZGljaCEnLFxuICBkYW5nZXJDb3VudFByZWZpeDogJ0RpZSBtYXhpbWFsZSBBbnphaGwgZGVyIEdlZmFocmVuIEVsZW1lbnRlIHd1cmRlIGVycmVpY2h0IHVuZCBiZXRyw6RndCBha3R1ZWxsJyxcbiAgZGFuZ2VyVXJsUHJlZml4OiAnRGllIFVSTCBvZGVyIGVpbiBUZWlsIGRlciBVUkwgaXN0IGdlZsOkaHJsaWNoIHVuZCBiZWZpbmRldCBzaWNoIGluIGVpbmVyIGRlciBzY2h3YXJ6ZW4gTGlzdGVuJyxcbiAgZG9tYWluOiAnRG9tw6RuZW4gTmFtZSBvaG5lIHd3dy4gQmVpc3BpZWw6IHJlYWN0LWRpdmNyZWF0b3IuY2JhLnBsJyxcbiAgdGFnOiAnVGFnIE5hbWUuIEJlaXNwaWVsOiBkaXYnLFxuICBsYW5ndWFnZXM6ICdTcHJhY2hlbidcbn07XG5cbmV4cG9ydCBkZWZhdWx0IERFO1xuIiwiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgeyBhZGRvblByZWZpeCB9IGZyb20gJy4uL1NvdXJjZS9BcHBGaWxlcy9GdW5jdGlvbnMvYWRkb25QcmVmaXgnO1xuXG5jb25zdCBFTiA9IHtcbiAgaXRlbVJlbW92ZWRGcm9tTGlzdDogJ0VudHJ5IGhhcyBiZWVuIHJlbW92ZWQgZnJvbSBjdXJyZW50IGxpc3QnLFxuICBjdXJybnRseUlzOiAnS2xpY2sgdGhlIGJveCBiZWxvdyB0bycsXG4gIGN1cnJudGx5SXNPZmY6ICdhY3RpdmF0ZScsXG4gIGN1cnJudGx5SXNPbjogJ2RlYWN0aXZhdGUnLFxuICB0aXRsZV9odG1sX2Jsb2NrZXI6ICdCbG9ja2VyJyxcbiAgYmxvY2tlcl9tc2dfNzogXCJDb250ZW50IGJsb2NrZXIgYmxvY2sncyBIVE1MIGNvbnRlbnQgdGhhdCdzIGJlbG9uZyB0byB0aGUgY3VycmVudCB2aXNpdGVkIHdlYnNpdGUuICBFeHRlcm5hbCBjb250ZW50IGNhbm5vdCBiZSBibG9ja2VkLCBsaWtlOiBpZnJhbWVzLiBUbyBibG9jayBhbiBlbGVtZW50LCBhY3RpdmF0ZSB0aGUgYmxvY2tlciB0aGVuIGNsaWNrIG9uIGFuIEhUTUwgZWxlbWVudCBvbiB0aGUgd2Vic2l0ZS4gQWxsIGJsb2NrZWQgZWxlbWVudHMgY2FuIGJlIGRlbGV0ZWQgb24gdGhlIGRhc2hib2FyZCBpbiB0aGUgJ0Jsb2NrZWQgZWxlbWVudHMnIHNlY3Rpb24uXCIsXG4gIHRpdGxlX3Jlc2V0OiAnRmFjdG9yeSByZXNldCcsXG4gIHJlc2V0X2RvbmU6ICdSZXNldCBvZiB0aGlzIGFwcGxpY2F0aW9uIGFyZSBkb25lIGFuZCBmYWN0b3J5IGNvbmZpZ3VyYXRpb24gYXJlIHJlc3RvcmVkLicsXG4gIHJlc2V0OidLbGljayB0aGlzIHRleHQgdG8gbWFrZSBhbiBmYWN0b3J5IHJlc2V0IG9mIHRoaXMgZXh0ZW5zaW9uLiBBbGwgeW91ciBjdXN0b20gbGlzdHMgZW50cmllcywgY29uZmlndXJhdGlvbiBhbmQgdGhlIGdsb2JhbCBzdGF0aXN0aWMgd2lsbCBiZSBkZWxldGVkLCBzbyBwbGVhc2UgbWFrZSBhbiBleHBvcnQgb2YgeW91ciBsaXN0cywgc2V0dGluZ3MgYW5kIHN0YXRpc3RpYy4gQWZ0ZXIgdGhpcyBwcm9jZXNzIG1ha2UgYW4gaW1wb3J0IGZyb20gdGhlIGRhc2hib2FyZCBwYWdlLicsXG4gIG1lbnVfdGl0bGVfbmluamE6ICdOaW5qYSBJY29uJyxcbiAgbmluamFJY29uOiAnTmluamEgSWNvbiBvZiB0aGlzIGV4dGVuc2lvbnMgYXJlIHRva2VuIGZyb20nLFxuICB0dXJuT246ICdUdXJuIE5pbmphUHJvdGVjdCBvbicsXG4gIHR1cm5PZmY6ICdUdXJuIE5pbmphUHJvdGVjdCBvZmYnLFxuICBsaW5rczogJ0xpbmtzJyxcbiAgZGVsZXRlQWxsSWZyYW1lczogJ0RlbGV0ZSBpZnJhbWVzIGZyb20gY3VycmVudCB3ZWJzaXRlJyxcbiAgZGVsZXRlQWxsQ29va2llczogJ0RlbGV0ZSBDb29raWVzIGZyb20gY3VycmVudCB3ZWJzaXRlJyxcbiAgbm90TG9nZ2VkSW5TdGF0aXN0aWNNZXNzYWdlOiAnWW91IGFyZSB3b3JraW5nIGxvY2FsbHkuIExvZ2luIHRvIHBlcnNpc3QgdGhlIHN0YXRpc3RpYyBvdGhlcndpc2UgdGhlIHN0YXRpc3RpYyBjYW5ub3QgYmUgZG9uZSBiYWNrd2FyZHMuJyxcbiAgdG9kYXlfYmxvY2tlZDogJ0N1cnJlbnQgZGF5IHN0YXRpc3RpYyBvZiBibG9ja2VkIGVsZW1lbnRzJyxcbiAgbWVudV90ZXh0X3N0YXRpc3RpYzogJ1N0YXRpc3RpYyBvZiBibG9ja2VkIGl0ZW1zJyxcbiAgbWVudV90ZXh0X3N0YXRpc3RpY19zbWFsbDogJ1N0YXRpc3RpYycsXG4gIG1lbnVfdGV4dF9yZXF1ZXN0czogJ1JlcXVlc3RzJyxcbiAgYWRkb25fbm90X2F2YWlsYWJsZTogJ1RoaXMgd2Vic2l0ZSBhcmUgbm90IHN1cHBvcnRpbmcgZXh0ZW5zaW9ucycsXG4gIE5vRGF0YUJsb2NrZWRJdGVtczogJ05vIGJsb2NrZWQgZGF0YScsXG4gIE5vRGF0YUJsb2NrZWRJdGVtc1RvZGF5OiAnTm8gYmxvY2tlZCBkYXRhIGZyb20gdG9kYXkgYXZhaWxhYmxlJyxcbiAgaG9tZV9jaGF0OiAnQ2hhdCB3aXRoIGZyaWVuZHMgLSB3aXRob3V0IHRyYWNraW5nJyxcbiAgaG9tZV9tZXNzYWdlczogJ1NlbmQgbWVzc2FnZXMgLSB3aXRob3V0IHRyYWNraW5nJyxcbiAgaG9tZV9zZWN1cml0eTogJ0tlZXAgeW91cnNlbGYgc2VjdXJlIGluIHRoZSBpbnRlcm5ldCAtIGJsb2NrIHRyYWNrZXJzJyxcbiAgaG9tZV9pbWFnZXM6ICdJbWFnZXMgZG93bmxvYWQgLSB3aXRob3V0IHRyYWNraW5nJyxcbiAgLyoqIFxuICAgKiBMZWZ0IG1lbnVcbiAgICovXG4gIG1lbnVfdGV4dF9leHBvcnQ6ICdFeHBvcnQnLFxuICBtZW51X3RpdGxlX2V4cG9ydDogJ05hdmlnYXRlIHRvIHRoZSBleHBvcnQgYXJlYScsXG4gIG1lbnVfdGV4dF9pbXBvcnQ6ICdJbXBvcnQnLFxuICBtZW51X3RpdGxlX2ltcG9ydDogJ05hdmlnYXRlIHRvIHRoZSBpbXBvcnQgYXJlYScsXG4gIG1lc3NhZ2VzX21haW46ICdNZXNzYWdlcycsXG4gIG1lbnVfdGV4dF9tZXNzYWdlczogJ01lc3NhZ2VzJyxcbiAgbWVudV90aXRsZV9tZXNzYWdlczogJ05hdmlnYXRlIHRvIHRoZSBtZXNzYWdlcyBhcmVhJyxcbiAgbWVudV90ZXh0X25vdGlmaWNhdGlvbnM6ICdOb3RpZmljYXRpb25zJyxcbiAgbWVudV90aXRsZV9ub3RpZmljYXRpb25zOiAnTmF2aWdhdGUgdG8gdGhlIG5vdGlmaWNhdGlvbnMgYXJlYScsXG4gIG1lbnVfdGV4dF9mYXZvdXJpdGVzOiAnRnJpZW5kcycsXG4gIG1lbnVfdGl0bGVfZmF2b3VyaXRlczogJ05hdmlnYXRlIHRvIHRoZSBmcmllbmRzIGFyZWEnLFxuICBtZW51X3RleHRfYWRkX2Zhdm91cml0ZXM6ICdTZWFyY2gnLFxuICBtZW51X3RpdGxlX2FkZF9mYXZvdXJpdGVzOiAnTmF2aWdhdGUgdG8gdGhlIGZyaWVuZHMgc2VhcmNoIGFyZWEnLFxuICBjaGF0X21haW46ICdDaGF0JyxcbiAgbWVudV90ZXh0X2NoYXQ6ICdDaGF0JyxcbiAgbWVudV90aXRsZV9jaGF0OiAnTmF2aWdhdGUgdG8gdGhlIGNoYXQgYXJlYScsXG4gIG1lbnVfdGV4dF9zZWN1cml0eTogJ0RvbWFpbicsXG4gIG1lbnVfdGV4dF9zZWN1cml0eV9tYWluOiAnTGlzdCcsXG4gIG1lbnVfdGl0bGVfc2VjdXJpdHk6ICdOYXZpZ2F0ZSB0byB0aGUgZG9tYWluIG1hbmFnZW1lbnQgYXJlYScsXG4gIG1lbnVfdGV4dF9zZWN1cml0eV9zZXR0aW5nczogJ1NldHRpbmdzJyxcbiAgbWVudV90aXRsZV9zZWN1cml0eV9zZXR0aW5nczogJ05hdmlnYXRlIHRvIHRoZSBzZWN1cml0eSBzZXR0aW5ncyBhcmVhJyxcbiAgbWVudV90ZXh0X2Nvb2tpZXM6ICdDb29raWVzJyxcbiAgbWVudV90aXRsZV9jb29raWVzOiAnTmF2aWdhdGUgdG8gdGhlIGNvb2tpZXMgYXJlYScsXG4gIG1lbnVfdGV4dF9ob21lOiAnSG9tZScsXG4gIG1lbnVfdGl0bGVfaG9tZTogJ05hdmlnYXRlIHRvIHRoZSBob21lcGFnZSBhcmVhJyxcbiAgbWVudV90ZXh0X2lmcmFtZXM6ICdJZnJhbWVzJyxcbiAgbWVudV90aXRsZV9pZnJhbWVzOiAnTmF2aWdhdGUgdG8gdGhlIGlmcmFtZXMgYXJlYScsXG4gIG1lbnVfdGV4dF9zZWN1cml0eV9leGFtcGxlczogJ0V4YW1wbGVzJyxcbiAgbWVudV90aXRsZV9zZWN1cml0eV9leGFtcGxlczogJ05hdmlnYXRlIHRvIHRoZSBzZWN1cml0eSBleGFtcGxlcyBhcmVhJyxcbiAgbWVudV90ZXh0X2Rvd25sb2FkX2ltYWdlczogJ0Rvd25sb2FkIGltYWdlcycsXG4gIG1lbnVfdGl0bGVfZG93bmxvYWRfaW1hZ2VzOiAnTmF2aWdhdGUgdG8gdGhlIGltYWdlcyBkb3dubG9hZCBhcmVhJyxcbiAgbWVudV90ZXh0X2ltYWdlczogJ0ltYWdlcycsXG4gIG1lbnVfdGV4dF9pbWFnZXNfZmF2b3VyaXRlczogJ1NhdmVkIGltYWdlcycsXG4gIG1lbnVfdGl0bGVfaW1hZ2VzX2Zhdm91cml0ZXM6ICdOYXZpZ2F0ZSB0byB0aGUgc2F2ZWQgaW1hZ2VzIGFyZWEnLFxuICBhY2NvdW50UHJpdmFjeVRlcm1zOiAnUHJpdmFjeSBwb2xpY3knLFxuICAvKiogXG4gICAqIEdMT0JBTCBFUlJPUiBNRVNTRUFHRVNcbiAgICovXG4gIGdsb2JhbE5ldHdvcmtFcnJvcjogJ05ldHdvcmsgZXJyb3IuJyxcbiAgZ2xvYmFsUHJvY2Vzc0Vycm9yOiAnUHJvY2VzcyBlcnJvci4nLFxuICBnbG9iYWxVc2VyRG9lc05vdEV4c2lzdHM6ICdVc2VyIEFjY291bnQgZG9lcyBub3QgZXhzaXN0cycsXG4gIGdsb2JhbEludmFsaWRFbWFpbHNBZHJlc3M6ICdJbnZhbGlkIGVtYWlsIGFkZHJlc3MgZm9ybWF0JyxcbiAgZ2xvYmFsRXJyb3JtZXNzYWdlUHJlZml4OiAnQW4gZXJyb3Igb2NjdXJlZCB3aGljaCBjYXVzZXMgdGhlIGFwcGxpY2F0aW9uIHRvIG5vdCB3b3JrIHByb3Blcmx5LicsXG4gIGdsb2JhbEVycm9ybWVzc2FnZUNsb3NlQnV0dG9uOiAnRGlzbWlzcycsXG4gIGdsb2JhbEVycm9ybWVzc2FnZUxlYXJuTW9yZUJ1dHRvbjogJ0xlYXJuIG1vcmUnLFxuICBnbG9iYWxJbnZhbGlkQ291bnRyeTogJ0ludmFsaWQgY291bnRyeScsXG4gIGdsb2JhbEludmFsaWRMYW5ndWFnZTogJ0ludmFsaWQgbGFuZ3VhZ2UnLFxuICBnbG9iYWxFcnJvckNvZGVUaXRsZTogJ0Vycm9yIGNvZGUnLFxuICBnbG9iYWxFcnJvckNvZGVfMTogJ05ldHdvcmsgZXJyb3IuIFdoZW4gYSBuZXR3b3JrIGVycm9yIG9jY3VyZWQgdGhpcyBtZWFuIGFuIFwiYWpheFwiIHJlcXVlc3QgZmFpbGVkLiBDaGVjayB5b3VyIG5ldHdvcmsgY29ubmVjdGlvbiBvciB0aGF0IGJlY2F1c2UgdGhlIHJlbW90ZSBzZXJ2aWNlIGN1cnJlbnRseSBub3QgYXZhaWxhYmxlLicsXG4gIGdsb2JhbEVycm9yQ29kZV8yOiAnQXBwIHByb2Nlc3MgZXJyb3IuIEl0IG1lYW5zIHRoYXQgdGhlIGFqYXggcmVxdWVzdHMgcmVzcG9uc2UgcHJvdmlkZWQgYW4gaW52YWxpZCBzdHJ1Y3R1cmUgZm9yIHRoZSBhcHBsaWNhdGlvbi4nLFxuICBnbG9iYWxFcnJvckNvZGVfMzogJ1Jlc3BvbnNlIG90aGVyIHRoZW4gZXhwZWN0ZWQuIEl0cyBtZWFuIHRoZSByZXF1ZXN0ZWQgdmFsdWUgb2YgdGhlIGN1cnJlbnQgYXBwbGljYXRpb25zIGNvbnRleHQgYXJlIGludmFsaWQuJyxcbiAgY29kZTogJ0NvZGUnLFxuICBsaXN0Tm90U3luY2hyb25pemVkVXNlck5vdExvZ2dlZEluOiAnWW91IGFyZSB3b3JraW5nIGxvY2FsbHkuIExvZ2luIHRvIHN5bmNocm9uaXplIHlvdXIgbGlzdC4nLFxuICBub3RMb2dnZWRJbjogJ05vdCBsb2dnZWQgaW4gaW5mb3JtYXRpb24nLFxuICBsaXN0U3luY2hyb25pemVkX29uZTogJ1N5bmNocm9uaXplZCcsXG4gIC8qKlxuICAgKiBQb3B1cCAtIENvb2tpZXMgcG9wdXAgcGFnZVxuICAgKi9cbiAgdGl0bGVEZWxldGVDb29raWU6ICdEZWxldGUgc2luZ2xlIGNvb2tpZScsXG4gIGNvb2tpZV9tc2dfMTogJ0RvbWFpbjonLFxuICBjb29raWVfbXNnXzI6ICdOYW1lOicsXG4gIGNvb2tpZV9tc2dfMzogJ1ZhbHVlOicsXG4gIGNvb2tpZV9tc2dfNDogJ0RlbGV0ZSBhbGwgY29va2llcy4gSXQgaXMgcG9zc2libGUgdGhhdCB5b3Ugd2lsbCBiZSBsb2dnZWQgb3V0IGZyb20gdGhlIGN1cnJlbnQgd2Vic2l0ZS4nLFxuICBjb29raWVzTm9EYXRhOiAnTm8gY29va2llcyBhdmFpbGFibGUnLFxuICAvLyB1c2VyIGFjY291bnRcbiAgYXZhdGFyRXJyb3JGaWxlVHlwZTogJ1VucmVjb2duaXplZCBmaWxlIHR5cGUnLFxuICBhdmF0YXJFcnJvckZpbGVTaXplOiAnRmlsZSBzaXplIGV4Y2VlZHMgbGltaXQgb2YgNU1CIGZvciBhdmF0YXInLFxuICBhdmF0YXJFcnJvckZpbGVUeXBlU3VwcG9ydDogJ09ubHkganBnLCBwbmcgYW5kIGdpZiBmaWxlIHR5cGVzIGFyZSBhbGxvd2VkJyxcbiAgLyoqXG4gICAqIEJsYWNrbGlzdCBvdmVydmlld1xuICAgKi9cbiAgYmxhY2tsaXN0OiAnQmxhY2tsaXN0cycsXG4gIHdoaXRlbGlzdDogJ1doaXRlbGlzdHMnLFxuICBibGFja2xpc3RlZEVsZW1lbnRzV29yZHM6ICdCbGFja2xpc3QgV29yZHMnLFxuICBibGFja2xpc3RlZEVsZW1lbnRzRG9taWFuczogJ0JsYWNrbGlzdCBEb21haW5zJyxcbiAgYmxhY2tsaXN0ZWRFbGVtZW50c1VybHNJbmNsdWRlczogJ0JsYWNrbGlzdCBVcmxzIGluY2x1ZGVzJyxcbiAgYmxhY2tsaXN0ZWRFbGVtZW50c1RyYWNrZXJzOiAnQmxhY2tsaXN0IFRyYWNrZXJzJyxcbiAgYmxhY2tsaXN0ZWRFbGVtZW50c0Nvb2tpZXM6ICdCbGFja2xpc3QgQ29va2llcycsXG4gIGJsYWNrbGlzdGVkRWxlbWVudHNDbGFzczogJ0Jsb2NrIEhUTUwgYnkgY2xhc3MnLFxuICBibGFja2xpc3RlZEVsZW1lbnRzSWQ6ICdCbG9jayBIVE1MIGJ5IGlkJyxcbiAgYmxhY2tsaXN0ZWRFbGVtZW50c0hyZWY6ICdCbG9jayBIVE1MIGJ5IGhyZWYnLFxuICBtZW51QmxhY2tsaXN0ZWRFbGVtZW50c0NsYXNzOiAnQmxvY2sgYnkgY2xhc3MnLFxuICBtZW51QmxhY2tsaXN0ZWRFbGVtZW50c0lkOiAnQmxvY2sgYnkgaWQnLFxuICBtZW51QmxhY2tsaXN0ZWRFbGVtZW50c0hyZWY6ICdCbG9jayBieSBocmVmJyxcbiAgYmxhY2tsaXN0ZWRFbGVtZW50c0lmcmFtZXM6ICdCbGFja2xpc3QgSWZyYW1lcycsXG4gIGJsYWNrbGlzdGVkRWxlbWVudHNJZnJhbWVzU291cmNlczogJ0JsYWNrbGlzdCBJZnJhbWUgU291cmNlcycsXG4gIGJsYWNrbGlzdGVkRWxlbWVudHNJZnJhbWVzTmFtZXM6ICdCbGFja2xpc3QgSWZyYW1lIE5hbWVzJyxcbiAgY29waWVkVG9DbGlwQm9hcmQ6ICdDb3BpZWQgdG8gY2xpcGJvYXJkJyxcbiAgYWN0aW9uX3RpdGxlX2NvcHlUb0NsaXBib2FyZDogJ0NvcHkgbGlzdCB0byBjbGlwYm9hcmQnLFxuICBhY3Rpb25fdGl0bGVfZXhwb3J0VG9GaWxlOiAnRXhwb3J0IGxpc3QgdG8gSlNPTiBmaWVsZCcsXG4gIGFjdGlvbl90aXRsZV9kZWxldGVMaXN0OiAnRW1wdHkgbGlzdCBnbG9iYWxseScsXG4gIGFjdGlvbl90aXRsZV9jb3B5VG9DbGlwYm9hcmRfc2luZ2xlOiAnQ29weSB2YWx1ZSB0byBjbGlwYm9hcmQnLFxuICBhY3Rpb25fdGl0bGVfZGVsZXRlX3NpbmdsZTogJ1JlbW92ZSBlbnRyeScsXG4gIGZvclRoaXNGdW5jdGlvbkxvZ2luOiAnVG8gcGVyZm9ybSB0aGlzIGFjdGlvbiwgcGxlYXNlIGxvZ2luJyxcbiAgZW1wdHlMaXN0RG9uZTogJ0xpc3QgaGFzIGJlZW4gZW1wdGllZCcsXG4gIHJlc3RvcmVEZWZhdWx0VmFsdWU6ICdSZXN0b3JlIGxpc3QgdG8gaXRzIGRlZmF1bHQgdmFsdWUnLFxuICB3aGl0ZWxpc3RlZEVsZW1lbnRzRG9tYWluczogJ1doaXRlbGlzdCBEb21haW5zJyxcbiAgYmxvY2tlZEVsZW1lbnRzOiAnQ29udGVudCBCbG9ja2VyJyxcbiAgLyoqXG4gICAqIFNlY3VyaXR5IHNldHRpbmdzXG4gICAqL1xuICBzZWN1cml0eUlzT246ICdUaGlzIGV4dGVuc2lvbiBpcyBPTiBvciBPRkYuJyxcbiAgc2NhblRleHRPbldlYnNpdGU6ICdJZiB5b3UgdHVybiB0aGlzIG9wdGlvbiBPRkYsIHRoZW4gYWxsIHdvcmRzIGFyZSBOT1Qgc2Nhbm5lZC4gVGhlIEJsYWNrbGlzdDogV29yZHMsIEF0dHJpYnV0ZXMsIEF0dHJpYnV0ZXMgV29yZHMgYXJlIGlnbm9yZWQuJyxcbiAgbWFrZVNlYXJjaEluU291cmNlQ29kZTogJ1NjYW4gd29yZHMgaW4gdGhlIHNvdXJjZSBjb2RlIG9mIGEgZ2l2ZW4gSFRNTCBlbGVtZW50IChpbm5lckhUTUwpIG9yIG9ubHkgaW4gdGhlIHRleHQgb2YgSFRNTCBlbGVtZW50cyAoaW5uZXJUZXh0KS4nLFxuICBtdXRhdGlvbkNoZWNrOiAnQ2hlY2sgd2Vic2l0ZXMgSFRNTCBlbGVtZW50cyBhZnRlciB0aGUgcGFnZSB3YXMgbG9hZGVkIChET00gTXV0YXRpb25zIGxpc3RlbmVyIC0gZ3JhYmJpbmcgYWxsIGVsZW1lbnRzIGNoYW5nZWQgYnkgSmF2YXNjcmlwdCBsaWJyYXJpZXMpLicsXG4gIGlnbm9yZVRhZ1N0eWxlOiAnSWdub3JlIHRoZSBjb2RlIGluc2lkZSB0aGUgXCJTdHlsZVwiIHRhZ3MgKDxzdHlsZT4gdGFnKSB3aGlsZSBzY2FubmluZyBwcm9jZXNzIGJhc2VkIG9uIGJsYWNrbGlzdCB3b3Jkcy4nLFxuICBpZ25vcmVUYWdTY3JpcHQ6ICdJZ25vcmUgdGhlIGNvZGUgaW5zaWRlIHRoZSBcIlNDUklQVFwiIHRhZ3MgKDxzY3JpcHQ+IHRhZykgd2hpbGUgc2Nhbm5pbmcgcHJvY2VzcyBiYXNlZCBvbiBibGFja2xpc3Qgd29yZHMuJyxcbiAgaWdub3JlVGFnTGluazogJ0lnbm9yZSB0aGUgY29kZSBpbnNpZGUgdGhlIFwiTGlua1wiIHRhZ3MgKDxsaW5rPiB0YWcpIHdoaWxlIHNjYW5uaW5nIHByb2Nlc3MgYmFzZWQgb24gYmxhY2tsaXN0IHdvcmRzLicsXG4gIGlnbm9yZVRhZ01ldGE6ICdJZ25vcmUgdGhlIGNvZGUgaW5zaWRlIHRoZSBcIk1ldGFcIiB0YWdzICg8bWV0YT4gdGFnKSB3aGlsZSBzY2FubmluZyBwcm9jZXNzIGJhc2VkIG9uIGJsYWNrbGlzdCB3b3Jkcy4nLFxuICByZXBsYWNlcjogJ1JlcGxhY2UgZWFjaCBzaW5nbGUgZGFuZ2VyIHdvcmRzIGNoYXJhY3RlciB3aXRoIHRoaXMgZW50cnkuIFRoZSBkYW5nZXIgd29yZHMgY29tZXMgZnJvbSB5b3VyIGN1c3RvbWl6ZWQgXCJCbGFja2xpc3QgV29yZHNcIi4nLFxuICBtYXhpbXVtT2ZEYW5nZXJXb3JkczogJ0FmdGVyIHRoaXMgdmFsdWUgaXMgcmVhY2hlZCAtIGNvdW50IGJhc2VkIG9uIGJsYWNrbGlzdHM6IHdvcmRzLCBCbG9jayBIVE1MIGJ5IGNsYXNzLCBCbG9jayBIVE1MIGJ5IGlkIGFuZCBCbG9jayBIVE1MIGJ5IGhyZWYgKGVhY2ggYmxvY2tlZCBlbGVtZW50IGNhdXNlcyB0aGUgY291bnQgdG8gcmlzZSArMSksIHRoZSB3ZWJzaXRlIHdpbGwgYmUgYmxvY2tlZC4gTWluaW11bSB2YWx1ZSBpcyAxLCBtYXhpbXVtIHZhbHVlIGlzIDMwMC4nLFxuICBsaW1pdGxlc3NTY2FuOiAnSWdub3JlIHRoZSBtYXhpbXVtIGNvdW50IG9mIGFsbCBibG9ja2VkIGVsZW1lbnRzLiBCbG9ja2VkIGVsZW1lbnRzIGFyZSBjb3VudGVkIGJhc2VkIG9uIHRoaXMgYmxhY2tsaXN0czogXCJCbG9ja2VkIENvbnRlbnRcIiwgXCJCbGFja2xpc3QgV29yZHNcIiwgXCJCbG9jayBieSBjbGFzc1wiLCBcIkJsb2NrIGJ5IGlkXCIgYW5kIFwiQmxvY2sgYnkgaHJlZlwiLiBUaGUgd2Vic2l0ZSB3aWxsIG5vdCBiZSBibG9ja2VkIChpZ25vcmUgdGhlIHZhbHVlIGFib3ZlKS4gSWYgeW91IGFjdGl2YXRlIHRoaXMgZnVuY3Rpb24sIHRoZSBzZWN1cml0eSBjb250ZW50IGNhbiBzbG93IGRvd24gdGhlIHBlcmZvcm1hbmNlIG9mIHlvdXIgYnJvd3Nlci4nLFxuICBkZWxldGVDb29raWVzOiAnQXV0b2RlbGV0ZSBhbGwgY29va2llcyBiYXNlZCBvbiB0aGUgYmxhY2tsaXN0IENvb2tpZXMgb24gZWFjaCB3ZWJzaXRlID8gQ29va2llcyBhcmUgZGVsZXRlIGlmIHlvdSBvcGVuIG9yIGNsb3NlIGFuIHRhYiBhbiB3aGlsZSBicm93c2luZyBlYWNoIDUgc2Vjb25kcy4nLFxuICAvKipcbiAgICogUG9wdXAgLSBob21lXG4gICAqL1xuICBwb3B1cE1haW5UaXRsZTogJ0JsYWNrIG5pbmphIHN0YXRpc3RpYycsXG4gIHBvcHVwX2Jsb2NrZWRfdHJhY2tlcnM6ICdCbG9ja2VkIHRyYWNrZXJzJyxcbiAgcG9wdXBfYmxvY2tlZF9jb29raWVzOiAnQmxvY2tlZCBjb29raWVzJyxcbiAgcG9wdXBfYmxvY2tlZF93b3JkczogJ0Jsb2NrZWQgd29yZHMnLFxuICBwb3B1cF9ibG9ja2VkX3JlcXVlc3RzOiAnQmxvY2tlZCByZXF1ZXN0cycsXG4gIHBvcHVwX2Jsb2NrZWRfaWZyYW1lczogJ0Jsb2NrZWQgaWZyYW1lcycsXG4gIHBvcHVwX2Jsb2NrZWRfZG9tOiAnQmxvY2tlZCBIVE1MJyxcbiAgcG9wdXBfYmxvY2tlZF93ZWJzaXRlczogJ0Jsb2NrZWQgd2Vic2l0ZXMnLFxuICBwb3B1cF90aXRsZV9kYXNoYm9hcmQ6ICdEYXNoYm9hcmQnLFxuICBwb3B1cF90aXRsZV9nbG9iYWxfY2hhcnQ6ICdHbG9iYWwgc3RhdGlzdGljJyxcbiAgLyoqXG4gICAqIFBvcHVwIC0gSWZyYW1lcyBwYWdlXG4gICAqL1xuICB0aXRsZURlbGV0ZUlmcmFtZTogJ0RlbGV0ZSBzaW5nbGUgaWZyYW1lJyxcbiAgaWZyYW1lX21zZ18xOiAnU291cmNlOicsXG4gIGlmcmFtZV9tc2dfMjogJ0lkOicsXG4gIGlmcmFtZV9tc2dfMzogJ2NsYXNzTmFtZTonLFxuICBpZnJhbWVzTm9EYXRhOiAnTm8gaWZyYW1lcyBhdmFpbGFibGUnLFxuXG4gIC8qKlxuICAgKiBQb3B1cCAtIHNlY3VyaXR5XG4gICAqL1xuICBwb3B1cF9hZGRfYmxhY2tsaXN0ZWRFbGVtZW50c1RyYWNrZXJzOiAnQWRkIGN1cnJlbnQgZG9tYWluIHRvIHRoZSBibGFja2xpc3QgdHJhY2tlcnMuIEFsbCB0cmllcyB0byBhY2Nlc3MgdGhpcyBkb21haW4gd2lsbCBiZSBibG9ja2VkLicsXG4gIHBvcHVwX3JlbW92ZV9ibGFja2xpc3RlZEVsZW1lbnRzVHJhY2tlcnM6ICdSZW1vdmUgY3VycmVudCBkb21haW4gZnJvbSB0aGUgYmxhY2tsaXN0IHRyYWNrZXJzLicsXG4gIHBvcHVwX2FkZF9ibGFja2xpc3RlZEVsZW1lbnRzRG9taWFuczogJ0FkZCBjdXJyZW50IGRvbWFpbiB0byB0aGUgYmxhY2tsaXN0IGRvbWFpbnMuIEFsbCB0cmllcyB0byBhY2Nlc3MgdGhpcyBkb21haW4gb3Igc2VydmljZXMgZnJvbSB0aGlzIGRvbWFpbiB3aWxsIGJlIGJsb2NrZWQuJyxcbiAgcG9wdXBfcmVtb3ZlX2JsYWNrbGlzdGVkRWxlbWVudHNEb21pYW5zOiAnUmVtb3ZlIGN1cnJlbnQgZG9tYWluIGZyb20gdGhlIGJsYWNrbGlzdCBkb21haW5zLicsXG4gIHBvcHVwX2FkZF9ibGFja2xpc3RlZEVsZW1lbnRzQ29va2llczogJ0FkZCBjdXJyZW50IGRvbWFpbiB0byB0aGUgYmxhY2tsaXN0IGNvb2tpZXMuIEFsbCBjb29raWVzIHdpbGwgYmUgcmVtb3ZlZCwgaWYgdGhlIHdlYnNpdGUgaGFzIGJlZW4gbG9hZGVkLCB0aGVuIGZvciBlYWNoIDUgc2Vjb25kcyBhbmQgZmluYWxseSBpZiB5b3UgYXJlIGxlYXZpbmcgdGhlIGN1cnJlbnQgd2Vic2l0ZSBhbGwgY29va2llcyBkZWxldGVkLicsXG4gIHBvcHVwX3JlbW92ZV9ibGFja2xpc3RlZEVsZW1lbnRzQ29va2llczogJ1JlbW92ZSBjdXJyZW50IGRvbWFpbiBmcm9tIHRoZSBibGFja2xpc3QgY29va2llcy4nLFxuICBwb3B1cF9hZGRfYmxhY2tsaXN0ZWRFbGVtZW50c0lmcmFtZXM6ICdBZGQgY3VycmVudCBkb21haW4gdG8gYmxhY2tsaXN0IGlmcmFtZXMgYW5kIHJlbW92ZSBhbGwgaWZyYW1lcyBpZiB0aGUgd2Vic2l0ZSB0cmllcyB0byBhdHRhY2gvIGluY2x1ZGUgYW4gZXh0ZXJuYWwgaWZyYW1lLicsXG4gIHBvcHVwX3JlbW92ZV9ibGFja2xpc3RlZEVsZW1lbnRzSWZyYW1lczogJ1JlbW92ZSBjdXJyZW50IGRvbWFpbiBmcm9tIHRoZSBibGFja2xpc3QgaWZyYW1lcy4nLFxuICBwb3B1cF9hZGRfYmxhY2tsaXN0ZWRFbGVtZW50c0lmcmFtZXNTb3VyY2VzOiAnQWRkIGN1cnJlbnQgbGlzdGVkIHVybCB0byBibGFja2xpc3QgSWZyYW1lcyBTb3VyY2VzIGFuZCByZW1vdmUgYWxsIGlmcmFtZXMgaWYgdGhlIHdlYnNpdGUgdHJpZXMgdG8gYXR0YWNoLyBpbmNsdWRlIGFuIGV4dGVybmFsIGlmcmFtZS4nLFxuICBwb3B1cF9yZW1vdmVfYmxhY2tsaXN0ZWRFbGVtZW50c0lmcmFtZXNTb3VyY2VzOiAnUmVtb3ZlIGN1cnJlbnQgbGlzdGVkIHVybCBmcm9tIHRoZSBibGFja2xpc3QgSWZyYW1lcyBTb3VyY2VzLicsXG4gIHBvcHVwX2FkZF93aGl0ZWxpc3RlZEVsZW1lbnRzRG9tYWluczogJ0FkZCBjdXJyZW50IGRvbWFpbiB0byB0aGUgd2hpdGVsaXN0IGRvbWFpbnMgYW5kIGFsbG93IGV2ZXJ5dGhpbmcgKG5vIHJlcXVlc3QgYXJlIGJsb2NrZWQsIG5vIGJsYWNrbGlzdCB3b3JkcyBjaGVjaywgbm8gY29va2llIGRlbGV0aW9uIGFuZCBubyBhdXRvIGlmcmFtZSBkZWxldGlvbikuJyxcbiAgcG9wdXBfcmVtb3ZlX3doaXRlbGlzdGVkRWxlbWVudHNEb21haW5zOiAnUmVtb3ZlIGN1cnJlbnQgZG9tYWluIGZyb20gdGhlIHdoaXRlbGlzdCBkb21haW5zLicsXG5cbiAgcG9wdXBfYWRkX2JsYWNrbGlzdGVkRWxlbWVudHNUcmFja2Vyc19wb3B1cDogJ0FkZCBjdXJyZW50IGVudHJ5IHRvIHRoZSBibGFja2xpc3QgdHJhY2tlcnMuIEFsbCB0cmllcyB0byBhY2Nlc3MgdGhpcyBkb21haW4gd2lsbCBiZSBibG9ja2VkLicsXG4gIHBvcHVwX3JlbW92ZV9ibGFja2xpc3RlZEVsZW1lbnRzVHJhY2tlcnNfcG9wdXA6ICdSZW1vdmUgY3VycmVudCBlbnRyeSBmcm9tIHRoZSBibGFja2xpc3QgdHJhY2tlcnMuJyxcbiAgcG9wdXBfYWRkX2JsYWNrbGlzdGVkRWxlbWVudHNEb21pYW5zX3BvcHVwOiAnQWRkIGN1cnJlbnQgZW50cnkgdG8gdGhlIGJsYWNrbGlzdCBkb21haW5zLiBBbGwgdHJpZXMgdG8gYWNjZXNzIHRoaXMgZG9tYWluIG9yIHNlcnZpY2VzIGZyb20gdGhpcyBkb21haW4gd2lsbCBiZSBibG9ja2VkLicsXG4gIHBvcHVwX3JlbW92ZV9ibGFja2xpc3RlZEVsZW1lbnRzRG9taWFuc19wb3B1cDogJ1JlbW92ZSBjdXJyZW50IGVudHJ5IGZyb20gdGhlIGJsYWNrbGlzdCBkb21haW5zLicsXG4gIHBvcHVwX2FkZF9ibGFja2xpc3RlZEVsZW1lbnRzQ29va2llc19wb3B1cDogJ0FkZCBjdXJyZW50IGVudHJ5IHRvIHRoZSBibGFja2xpc3QgY29va2llcy4gQWxsIGNvb2tpZXMgd2lsbCBiZSByZW1vdmVkLCBpZiB0aGUgd2Vic2l0ZSBoYXMgYmVlbiBsb2FkZWQsIHRoZW4gZm9yIGVhY2ggNSBzZWNvbmRzIGFuZCBmaW5hbGx5IGlmIHlvdSBhcmUgbGVhdmluZyB0aGUgY3VycmVudCB3ZWJzaXRlIGFsbCBjb29raWVzIGRlbGV0ZWQuJyxcbiAgcG9wdXBfcmVtb3ZlX2JsYWNrbGlzdGVkRWxlbWVudHNDb29raWVzX3BvcHVwOiAnUmVtb3ZlIGN1cnJlbnQgZW50cnkgZnJvbSB0aGUgYmxhY2tsaXN0IGNvb2tpZXMuJyxcbiAgcG9wdXBfYWRkX2JsYWNrbGlzdGVkRWxlbWVudHNJZnJhbWVzX3BvcHVwOiAnQWRkIGN1cnJlbnQgZW50cnkgdG8gYmxhY2tsaXN0IGlmcmFtZXMgYW5kIHJlbW92ZSBhbGwgaWZyYW1lcyBpZiB0aGUgd2Vic2l0ZSB0cmllcyB0byBhdHRhY2gvIGluY2x1ZGUgYW4gZXh0ZXJuYWwgaWZyYW1lLi4nLFxuICBwb3B1cF9yZW1vdmVfYmxhY2tsaXN0ZWRFbGVtZW50c0lmcmFtZXNfcG9wdXA6ICdSZW1vdmUgY3VycmVudCBlbnRyeSBmcm9tIHRoZSBibGFja2xpc3QgaWZyYW1lcy4nLFxuICBwb3B1cF9hZGRfYmxhY2tsaXN0ZWRFbGVtZW50c0lmcmFtZXNTb3VyY2VzX3BvcHVwOiAnQWRkIGN1cnJlbnQgZW50cnkgdG8gYmxhY2tsaXN0IElmcmFtZXMgU291cmNlcyAgYW5kIHJlbW92ZSBhbGwgaWZyYW1lcyBpZiB0aGUgd2Vic2l0ZSB0cmllcyB0byBhdHRhY2gvIGluY2x1ZGUgYW4gZXh0ZXJuYWwgaWZyYW1lLi4nLFxuICBwb3B1cF9yZW1vdmVfYmxhY2tsaXN0ZWRFbGVtZW50c0lmcmFtZXNTb3VyY2VzX3BvcHVwOiAnUmVtb3ZlIGN1cnJlbnQgZW50cnkgZnJvbSB0aGUgYmxhY2tsaXN0IElmcmFtZXMgU291cmNlcy4nLFxuICBwb3B1cF9hZGRfd2hpdGVsaXN0ZWRFbGVtZW50c0RvbWFpbnNfcG9wdXA6ICdBZGQgY3VycmVudCBlbnRyeSB0byB0aGUgd2hpdGVsaXN0IGRvbWFpbnMgYW5kIGFsbG93IGV2ZXJ5dGhpbmcgKG5vIHJlcXVlc3QgYXJlIGJsb2NrZWQsIG5vIGJsYWNrbGlzdCB3b3JkcyBjaGVjaywgbm8gY29va2llIGRlbGV0aW9uIGFuZCBubyBhdXRvIGlmcmFtZSBkZWxldGlvbikuJyxcbiAgcG9wdXBfcmVtb3ZlX3doaXRlbGlzdGVkRWxlbWVudHNEb21haW5zX3BvcHVwOiAnUmVtb3ZlIGN1cnJlbnQgZW50cnkgZnJvbSB0aGUgd2hpdGVsaXN0IGRvbWFpbnMuJyxcblxuICBwb3B1cF9yZWxvYWRfdGFyZ2V0OiAnUmVsb2FkIHdlYnNpdGUnLFxuICBleHRlbmRzYmxhY2tsaXN0OiAoXG4gICAgPHNwYW4+XG4gICAgICBXaGlsZSBsb2FkaW5nIGEgd2Vic2l0ZSwgdGhlIGRvbWFpbiBpcyBzY2FubmVkIHRocm91Z2ggYSBibGFja2xpc3QgZmlsdGVyLiBJZiB0aGUgZG9tYWluIGlzIGJsYWNrbGlzdGVkLCBpdCB3aWxsIGJlIGJsb2NrZWQuIFRvIGVuc3VyZSBtYXhpbXVtIHNlY3VyaXR5LCBhbiBleHRlbmRlZCBibGFja2xpc3QgY2FuIGJlIGFkZGVkIHdpdGggYW5vdGhlciAyMCw4MjIgZW50cmllcy4gVGhlIGNvbnRlbnQgb2YgdGhlIGxpc3QgaXMgaGVyZTpcbiAgICAgIDxhIHRhcmdldD0nX2JsYW5rJyBocmVmPXtgJHthZGRvblByZWZpeCgpfS9leHRlbmRlZGJsYWNrbGlzdC50eHRgfT5cbiAgICAgICAgZXh0ZW5kZWRibGFja2xpc3QudHh0XG4gICAgICAgIDwvYT5cbiAgICA8L3NwYW4+XG4gICksXG4gIGV4dGVuZHNwb3JubGlzdDogKFxuICAgIDxzcGFuPlxuICAgICAgV2hpbGUgbG9hZGluZyBhIHdlYnNpdGUsIHRoZSBkb21haW4gaXMgc2Nhbm5lZCB0aHJvdWdoIGEgYmxhY2tsaXN0IGZpbHRlci4gSWYgdGhlIGRvbWFpbiBpcyBibGFja2xpc3RlZCwgaXQgd2lsbCBiZSBibG9ja2VkLiBUbyBlbnN1cmUgbWF4aW11bSBzZWN1cml0eSwgYW4gZXh0ZW5kZWQgcG9ybmxpc3QgY2FuIGJlIGFkZGVkIHdpdGggYW5vdGhlciA2LDY2OCBlbnRyaWVzLiBUaGUgY29udGVudCBvZiB0aGUgbGlzdCBpcyBoZXJlOlxuICAgICAgPGEgdGFyZ2V0PSdfYmxhbmsnIGhyZWY9e2Ake2FkZG9uUHJlZml4KCl9L2V4dGVuZGVkcG9ybmxpc3QudHh0YH0+XG4gICAgICAgIGV4dGVuZGVkcG9ybmxpc3QudHh0XG4gICAgICA8L2E+XG4gICAgPC9zcGFuPlxuICApLFxuICAvKipcbiAgICogU2VjdXJpdHkgZXhhbXBsZXNcbiAgICovXG4gIGJsYWNrbGlzdGVkRWxlbWVudHNDb29raWVzX2h0bWw6IChcbiAgICA8c3BhbiBjbGFzc05hbWU9XCJib3gtY29udGVudFwiPlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJib3gtY29udGVudC0tZGl2XCI+XG4gICAgICAgIDxwIGNsYXNzTmFtZT1cImVsZW1lbnQtcFwiPlxuICAgICAgICAgIFlvdSBjYW4gYWRkIGhlcmUgYW4gY29va2llIG5hbWUgb3IgYW4gZG9tYWluIG5hbWUgd2hpY2ggc2hvdWxkIGJlIGRlbGV0ZWQgb24gZWFjaCB3ZWJzaXRlLlxuICAgICAgICAgIERlZmF1bHQgdGhpcyBsaXN0IGhhcyA2NDAgZW50cmllcyB3aXRoIHByZWRlZmluZWQgY29va2llIG5hbWVzIG9yIGRvbWFpbiBuYW1lc1xuICAgICAgICAgIHRoYXQgdXNpbmcgY29va2llcyBmb3IgdHJhY2tpbmcgcHVycG9zZXMgYW5kIHRoZXJlIGFyZSBhdXRvbWF0aWNhbGx5IGRlbGV0ZWQgYnkgdGhlIHNlY3VyaXR5IGNvbnRlbnQuXG4gICAgICAgIDwvcD5cbiAgICAgICAgPHVsPlxuICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgIEV4YW1wbGUgb2YgbGlzdCBlbnRyeTogPHNwYW4gY2xhc3NOYW1lPVwiY29sb3JlZC1leGFtcGxlLWVsZW1lbnRcIj5HUFM8L3NwYW4+LiBJZiB5b3UgdmlzaXQgdGhlIHdlYnNpdGU6IGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tLCB0aGVuIHRoZSBjb29raWUgd2l0aCB0aGUgbmFtZSA8c3BhbiBjbGFzc05hbWU9XCJjb2xvcmVkLWV4YW1wbGUtZWxlbWVudFwiPkdQUzwvc3Bhbj4gYXJlIGRlbGV0ZWRcbiAgICAgICAgICA8L2xpPlxuICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgIEV4YW1wbGUgb2YgbGlzdCBlbnRyeTogPHNwYW4gY2xhc3NOYW1lPVwiY29sb3JlZC1leGFtcGxlLWVsZW1lbnRcIj53d3cuN3NlYXJjaC5jb208L3NwYW4+LiBJZiB5b3UgdmlzaXQgdGhlIHdlYnNpdGU6IGh0dHBzOi8vd3d3LjdzZWFyY2guY29tLCB0aGVuIDxzcGFuIGNsYXNzTmFtZT1cImNvbG9yZWQtZXhhbXBsZS1lbGVtZW50XCI+YWxsIGNvb2tpZXM8L3NwYW4+IGZyb20gdGhpcyB3ZWJzaXRlIGFyZSBkZWxldGVkXG4gICAgICAgICAgPC9saT5cbiAgICAgICAgPC91bD5cbiAgICAgIDwvZGl2PlxuICAgIDwvc3Bhbj5cbiAgKSxcbiAgYmxhY2tsaXN0ZWRFbGVtZW50c0RvbWlhbnNfaHRtbDogKFxuICAgIDxzcGFuIGNsYXNzTmFtZT1cImJveC1jb250ZW50XCI+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImJveC1jb250ZW50LS1kaXZcIj5cbiAgICAgICAgPHAgY2xhc3NOYW1lPVwiZWxlbWVudC1wXCI+XG4gICAgICAgICAgVGhpcyBpcyBhbiBkb21haW4gbmFtZSBiYXNlZCBibGFja2xpc3QuXG4gICAgICAgICAgQWxsIGRvbWFpbnMgZnJvbSB0aGlzIGxpc3QgYXJlIGJsb2NrZWQgd2hpbGUgdmlzaXRpbmcgdGhlcmUgd2Vic2l0ZXMuXG4gICAgICAgIDwvcD5cbiAgICAgICAgPHVsPlxuICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgIEV4YW1wbGUgb2YgbGlzdCBlbnRyeTogPHNwYW4gY2xhc3NOYW1lPVwiY29sb3JlZC1leGFtcGxlLWVsZW1lbnRcIj55dGltZy5jb208L3NwYW4+IGFuZCBpZiB5b3V0IHRyeSB0byBhY2Nlc3MgdGhlIHdlYnNpdGUgPHNwYW4gY2xhc3NOYW1lPVwiY29sb3JlZC1leGFtcGxlLWVsZW1lbnRcIj5odHRwczovL3l0aW1nLmNvbTwvc3Bhbj4gdGhlbiB0aGUgd2Vic2l0ZSBhcmUgYmxvY2tlZFxuICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgPGxpPlxuICAgICAgICAgICAgRXhhbXBsZSBvZiBsaXN0IGVudHJ5OiA8c3BhbiBjbGFzc05hbWU9XCJjb2xvcmVkLWV4YW1wbGUtZWxlbWVudFwiPmdpdGh1Yi5jb208L3NwYW4+IGFuZCBpZiB5b3V0IHRyeSB0byBhY2Nlc3MgdGhlIHdlYnNpdGUgPHNwYW4gY2xhc3NOYW1lPVwiY29sb3JlZC1leGFtcGxlLWVsZW1lbnRcIj5odHRwczovL2dpdGh1Yi5jb208L3NwYW4+IHRoZW4gdGhlIHdlYnNpdGUgYXJlIGJsb2NrZWRcbiAgICAgICAgICA8L2xpPlxuICAgICAgICA8L3VsPlxuICAgICAgPC9kaXY+XG4gICAgPC9zcGFuPlxuICApLFxuICBibGFja2xpc3RlZEVsZW1lbnRzVXJsc0luY2x1ZGVzX2h0bWw6IChcbiAgICA8c3BhbiBjbGFzc05hbWU9XCJib3gtY29udGVudFwiPlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJib3gtY29udGVudC0tZGl2XCI+XG4gICAgICAgIDxwIGNsYXNzTmFtZT1cImVsZW1lbnQtcFwiPlxuICAgICAgICAgIFRoaXMgaXMgYW4gZG9tYWluIG5hbWUgYW5kIHBhcnQgb2YgdXJsIGJhc2VkIGJsYWNrbGlzdC5cbiAgICAgICAgICBBbGwgZG9tYWlucyBmcm9tIHRoaXMgbGlzdCBhbmQgYWxsIG1hdGNoZWQgZW50cmllcyBmcm9tIHRoZSB3ZWJzaXRlcyB1cmwgYXJlIGJsb2NrZWQgaWYgYW4gbWF0Y2ggd2FzIGZvdW5kLlxuICAgICAgICA8L3A+XG4gICAgICAgIDx1bD5cbiAgICAgICAgICA8bGk+XG4gICAgICAgICAgICBFeGFtcGxlIG9mIGxpc3QgZW50cnk6IDxzcGFuIGNsYXNzTmFtZT1cImNvbG9yZWQtZXhhbXBsZS1lbGVtZW50XCI+cGFja2FnZTwvc3Bhbj4uIElmIHlvdSB2aXNpdCB0aGUgd2Vic2l0ZTogaHR0cHM6Ly93d3cubnBtanMuY29tLzxzcGFuIGNsYXNzTmFtZT1cImNvbG9yZWQtZXhhbXBsZS1lbGVtZW50XCI+cGFja2FnZTwvc3Bhbj4vZ3VscC1iYWJlbCB0aGVuIHRoZSB3ZWJzaXRlIGFyZSBibG9ja2VkXG4gICAgICAgICAgPC9saT5cbiAgICAgICAgICA8bGk+XG4gICAgICAgICAgICBFeGFtcGxlIG9mIGxpc3QgZW50cnk6IDxzcGFuIGNsYXNzTmFtZT1cImNvbG9yZWQtZXhhbXBsZS1lbGVtZW50XCI+dGVzdDwvc3Bhbj4uIElmIHlvdSB2aXNpdCB0aGUgd2Vic2l0ZTogaHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS9zZWFyY2g/cT08c3BhbiBjbGFzc05hbWU9XCJjb2xvcmVkLWV4YW1wbGUtZWxlbWVudFwiPnRlc3Q8L3NwYW4+LCB0aGVuIHRoZSB3ZWJzaXRlIGFyZSBibG9ja2VkXG4gICAgICAgICAgPC9saT5cbiAgICAgICAgICA8bGk+XG4gICAgICAgICAgICBFeGFtcGxlIG9mIGxpc3QgZW50cnk6IDxzcGFuIGNsYXNzTmFtZT1cImNvbG9yZWQtZXhhbXBsZS1lbGVtZW50XCI+cTwvc3Bhbj4uIElmIHlvdSB2aXNpdCB0aGUgd2Vic2l0ZTogaHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS9zZWFyY2g/PHNwYW4gY2xhc3NOYW1lPVwiY29sb3JlZC1leGFtcGxlLWVsZW1lbnRcIj5xPC9zcGFuPj10ZXN0LCB0aGVuIHRoZSB3ZWJzaXRlIGFyZSBibG9ja2VkXG4gICAgICAgICAgPC9saT5cbiAgICAgICAgICA8bGk+XG4gICAgICAgICAgICBFeGFtcGxlIG9mIGxpc3QgZW50cnk6IDxzcGFuIGNsYXNzTmFtZT1cImNvbG9yZWQtZXhhbXBsZS1lbGVtZW50XCI+aHViLmNvbTwvc3Bhbj4uIElmIHlvdSB2aXNpdCB0aGUgd2Vic2l0ZTogaHR0cHM6Ly93d3cuZ2l0PHNwYW4gY2xhc3NOYW1lPVwiY29sb3JlZC1leGFtcGxlLWVsZW1lbnRcIj5odWIuY29tPC9zcGFuPiwgdGhlbiB0aGUgd2Vic2l0ZSBhcmUgYmxvY2tlZFxuICAgICAgICAgIDwvbGk+XG4gICAgICAgIDwvdWw+XG4gICAgICA8L2Rpdj5cbiAgICA8L3NwYW4+XG4gICksXG4gIGJsYWNrbGlzdGVkRWxlbWVudHNJZnJhbWVzX2h0bWw6IChcbiAgICA8c3BhbiBjbGFzc05hbWU9XCJib3gtY29udGVudFwiPlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJib3gtY29udGVudC0tZGl2XCI+XG4gICAgICAgIDxwIGNsYXNzTmFtZT1cImVsZW1lbnQtcFwiPlxuICAgICAgICAgIElmIHlvdSB2aXNpdCBhbiB3ZWJzaXRlIGFuIHRoZSB3ZWJzaXRlcyBkb21haW4gbmFtZSBhcmUgaW5zaWRlIHRoaXMgbGlzdCB0aGVuIGFsbCBpZnJhbWVzIGFyZSByZW1vdmVkLlxuICAgICAgICA8L3A+XG4gICAgICAgIDx1bD5cbiAgICAgICAgICA8bGk+XG4gICAgICAgICAgICBFeGFtcGxlIG9mIGxpc3QgZW50cnk6IDxzcGFuIGNsYXNzTmFtZT1cImNvbG9yZWQtZXhhbXBsZS1lbGVtZW50XCI+Z2F6ZXRhLnBsPC9zcGFuPiAtIGlmIHlvdSB2aXNpdCB0aGUgd2Vic2l0ZTogaHR0cHM6Ly93d3cuZ2F6ZXRhLnBsIHRoZW4gYWxsIGlmcmFtZXMgb24gdGhlIHdlYnNpdGUgaHR0cHM6Ly88c3BhbiBjbGFzc05hbWU9XCJjb2xvcmVkLWV4YW1wbGUtZWxlbWVudFwiPmdhemV0YS5wbDwvc3Bhbj4gYXJlIHJlbW92ZWRcbiAgICAgICAgICA8L2xpPlxuICAgICAgICA8L3VsPlxuICAgICAgPC9kaXY+XG4gICAgPC9zcGFuPlxuICApLFxuICBibGFja2xpc3RlZEVsZW1lbnRzSWZyYW1lc1NvdXJjZXNfaHRtbDogKFxuICAgIDxzcGFuIGNsYXNzTmFtZT1cImJveC1jb250ZW50XCI+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImJveC1jb250ZW50LS1kaXZcIj5cbiAgICAgICAgPHAgY2xhc3NOYW1lPVwiZWxlbWVudC1wXCI+XG4gICAgICAgICAgSWYgeW91IHZpc2l0IGFuIHdlYnNpdGUgYW4gdGhlIHdlYnNpdGUgaW5jbHVkZXMgaWZyYW1lcyBhbmQgdGhpcyBpZnJhbWVzIGF0dHJpYnV0ZSBcInNyY1wiIChzb3VyY2UpIGluY2x1ZGVzIG9uZSBvZiBhbiBlbnRyeSBmcm9tIHRoaXMgbGlzdCwgdGhlbiB0aGUgYXJnZXQgaWZyYW1lIHdpbGwgYmUgcmVtb3ZlZC5cbiAgICAgICAgPC9wPlxuICAgICAgICA8dWw+XG4gICAgICAgICAgPGxpPlxuICAgICAgICAgICAgRXhhbXBsZSBvZiBsaXN0IGVudHJ5OiA8c3BhbiBjbGFzc05hbWU9XCJjb2xvcmVkLWV4YW1wbGUtZWxlbWVudFwiPmh0dHBzOi8vZG1wLnRoZWFkZXguY29tL3IvPC9zcGFuPi4gSWYgeW91IHZpc2l0IHRoZSB3ZWJzaXRlOiBodHRwczovL3d3dy5nYXpldGEucGwgYW5kIGlmIHRoZSB3ZWJzaXRlIGluY2x1ZGVzIGlmcmFtZXMgYW5kIHRoZSBpZnJhbWVzIFwic3JjXCIgKHNvdXJjZSkgaW5jbHVkZXMgYW4gZW50cnkgZnJvbSB0aGlzIGxpc3QgPHNwYW4gY2xhc3NOYW1lPVwiY29sb3JlZC1leGFtcGxlLWVsZW1lbnRcIj5odHRwczovL2RtcC50aGVhZGV4LmNvbS9yLzwvc3Bhbj4yMzAvMTEyMS8/Yz00MjI1MjIyOTU1NzU4MDY2NzA5LCB0aGVuIHRoaXMgaWZyYW1lIGFyZSByZW1vdmVkIGZyb20gdGhlIHdlYnNpdGVcbiAgICAgICAgICA8L2xpPlxuICAgICAgICA8L3VsPlxuICAgICAgPC9kaXY+XG4gICAgPC9zcGFuPlxuICApLFxuICBibGFja2xpc3RlZEVsZW1lbnRzSWZyYW1lc05hbWVzX2h0bWw6IChcbiAgICA8c3BhbiBjbGFzc05hbWU9XCJib3gtY29udGVudFwiPlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJib3gtY29udGVudC0tZGl2XCI+XG4gICAgICAgIDxwIGNsYXNzTmFtZT1cImVsZW1lbnQtcFwiPlxuICAgICAgICAgIElmIHlvdSB2aXNpdCBhbiB3ZWJzaXRlIGFuIHRoZSB3ZWJzaXRlIGluY2x1ZGVzIGlmcmFtZXMgYW5kIHRoaXMgaWZyYW1lcyBhdHRyaWJ1dGUgXCJuYW1lXCIgaW5jbHVkZXMgb25lIG9mIGFuIGVudHJ5IGZyb20gdGhpcyBsaXN0LCB0aGVuIHRoZSBhcmdldCBpZnJhbWUgd2lsbCBiZSByZW1vdmVkLlxuICAgICAgICA8L3A+XG4gICAgICAgIDx1bD5cbiAgICAgICAgICA8bGk+XG4gICAgICAgICAgICBFeGFtcGxlIG9mIGxpc3QgZW50cnk6IDxzcGFuIGNsYXNzTmFtZT1cImNvbG9yZWQtZXhhbXBsZS1lbGVtZW50XCI+Z29vZ2xlYWRzPC9zcGFuPi4gSWYgeW91IHZpc2l0IHRoZSB3ZWJzaXRlOiBodHRwczovL3d3dy5nYXpldGEucGwgYW5kIGlmIHRoZSB3ZWJzaXRlIGluY2x1ZGVzIGlmcmFtZXMgYW5kIHRoZSBpZnJhbWVzIFwibmFtZVwiIGluY2x1ZGVzIGFuIGVudHJ5IGZyb20gdGhpcyBsaXN0IDxzcGFuIGNsYXNzTmFtZT1cImNvbG9yZWQtZXhhbXBsZS1lbGVtZW50XCI+Z29vZ2xlYWRzPC9zcGFuPl9zeW5jLCB0aGVuIHRoaXMgaWZyYW1lIGFyZSByZW1vdmVkIGZyb20gdGhlIHdlYnNpdGVcbiAgICAgICAgICA8L2xpPlxuICAgICAgICA8L3VsPlxuICAgICAgPC9kaXY+XG4gICAgPC9zcGFuPlxuICApLFxuICBibGFja2xpc3RlZEVsZW1lbnRzVHJhY2tlcnNfaHRtbDogKFxuICAgIDxzcGFuIGNsYXNzTmFtZT1cImJveC1jb250ZW50XCI+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImJveC1jb250ZW50LS1kaXZcIj5cbiAgICAgICAgPHAgY2xhc3NOYW1lPVwiZWxlbWVudC1wXCI+XG4gICAgICAgICAgSWYgeW91IHZpc2l0IGEgd2Vic2l0ZSwgYW5kIHRoZSB3ZWJzaXRlIGhhcyBpbXBsZW1lbnRlZCBvdGhlciAodGhpcmQgcGFydHkpXG4gICAgICAgICAgc2VydmljZXMgb3IgdHJhY2tpbmcgc2VydmljZXMgYW5kIHRoZSBkb21haW4gbmFtZSBtYXRjaCB3aXRoIGFuIGRvbWFpbiBuYW1lIGZyb20gdGhpcyBsaXN0XG4gICAgICAgICAgb3IgdGhlIHdob2xlIHVybCBwYXRoIG1hdGNoIHdpdGggYW4gZW50cnkgZnJvbSB0aGlzIGxpc3QgdGhlblxuICAgICAgICAgIHRoZSByZXF1ZXN0IHdpbGwgYmUgYmxvY2tlZC5cbiAgICAgICAgPC9wPlxuICAgICAgICA8dWw+XG4gICAgICAgICAgPGxpPlxuICAgICAgICAgICAgRXhhbXBsZSBvZiBsaXN0IGVudHJ5OiA8c3BhbiBjbGFzc05hbWU9XCJjb2xvcmVkLWV4YW1wbGUtZWxlbWVudFwiPmNkbi5tb3VzZWZsb3cuY29tPC9zcGFuPi4gSWYgYW4gd2Vic2l0ZSB3aWxsIGNvbm5lY3QgdG8gYW4gZXh0ZXJuYWwgc2VydmljZSBhbmQgdGhlIGRvbWFpbiBuYW1lIGNvbnRhaW5zOiBodHRwczovLzxzcGFuIGNsYXNzTmFtZT1cImNvbG9yZWQtZXhhbXBsZS1lbGVtZW50XCI+Y2RuLm1vdXNlZmxvdy5jb208L3NwYW4+IHRoZW4gdGhlIHJlcXVlc3QgYXJlIGJsb2NrZWRcbiAgICAgICAgICA8L2xpPlxuICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgIEV4YW1wbGUgb2YgbGlzdCBlbnRyeTogPHNwYW4gY2xhc3NOYW1lPVwiY29sb3JlZC1leGFtcGxlLWVsZW1lbnRcIj5yc3JjLnBocC92My95NC9yLy1QQVhQLWRlaWpFLmdpZjwvc3Bhbj4uIElmIGFuIHdlYnNpdGUgd2lsbCBjb25uZWN0IHRvIGFuIGV4dGVybmFsIHNlcnZpY2UgYW5kIHRoZSB1cmwgcmVxdWVzdCBjb250YWluczogaHR0cHM6Ly9zdGF0aWMueHguZmJjZG4ubmV0LzxzcGFuIGNsYXNzTmFtZT1cImNvbG9yZWQtZXhhbXBsZS1lbGVtZW50XCI+cnNyYy5waHAvdjMveTQvci8tUEFYUC1kZWlqRS5naWY8L3NwYW4+IHRoZW4gdGhlIHJlcXVlc3QgYXJlIGJsb2NrZWRcbiAgICAgICAgICA8L2xpPlxuICAgICAgICA8L3VsPlxuICAgICAgPC9kaXY+XG4gICAgPC9zcGFuPlxuICApLFxuICBibGFja2xpc3RlZEVsZW1lbnRzV29yZHNfaHRtbDogKFxuICAgIDxzcGFuIGNsYXNzTmFtZT1cImJveC1jb250ZW50XCI+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImJveC1jb250ZW50LS1kaXZcIj5cbiAgICAgICAgPHAgY2xhc3NOYW1lPVwiZWxlbWVudC1wXCI+XG4gICAgICAgICAgVGhlIHNlY3VyaXR5IGNvbnRlbnQgd2lsbCBmaW5kIGVhY2ggd29yZCBmcm9tIHRoaXMgYmxhY2tsaXN0IGFuZCBlYWNoIHdvcmQgd2lsbCBiZSByZXBsYWNlIGJ5IHRoZSBcInJlcGxhY2VyXCIgZGVmaW5lZCBpbiB0aGUgXCJzZXR0aW5nc1wiIHNlY3Rpb24uXG4gICAgICAgICAgSWYgdGhlIHNlY3VyaXR5IGNvbnRlbnQgaGFzIGZvdW5kIGFuIGRhbmdlciB3b3JkLCBmcm9tIHRoZSBcIkJsYWNrbGlzdDogV29yZHNcIiBpbiBhbnkgSFRNTCB0YWcsXG4gICAgICAgICAgdGhlbiB0aGUgSFRNTCB0YWdzIGF0dHJpYnV0ZXMgYXJlIHNjYW5uZWQuIElmIGFueSBhdHRyaWJ1dGUgbmFtZSBmcm9tIHRoaXMgbGlzdCBkb2VzIG5vdCBtYXRjaGVzIHdpdGggZW50cnlzIGZyb20gdGhlIFwiQmxhY2tsaXN0OiBhdHRyaWJ1dGVzXCIsIHRoZW5cbiAgICAgICAgICB0aGUgc2VjdXJpdHkgY29udGVudCB3aWxsIGZpbmQgZWFjaCB3b3JkLCBpbnNpZGUgdGhlIGF0dHJpYnV0ZXMgdmFsdWUsIGZyb20gdGhpcyBsaXN0IGFuZCByZXBsYWNlIGVhY2ggY2hhcmFjdGVyIHdpdGggdGhlIHJlcGxhY2VyXG4gICAgICAgICAgZGVmaW5lZCBpbiB0aGUgXCJzZXR0aW5ncyBzZWN0aW9uLlxuICAgICAgICA8L3A+XG4gICAgICAgIDx1bD5cbiAgICAgICAgICA8bGk+XG4gICAgICAgICAgICBGb3IgZXhhbXBsZSwgaWYgdGhlIHdvcmQgPHNwYW4gY2xhc3NOYW1lPVwiY29sb3JlZC1leGFtcGxlLWVsZW1lbnRcIj5ndW5zPC9zcGFuPiBhcmUgaW4gdGhpcyBibGFja2xpc3QsIHRoZW4gaWYgeW91IHZpc2l0IGEgd2Vic2l0ZSwgdGhlbiB0aGlzIHdvcmQgd2lsbCBiZSByZXBsYWNlZFxuICAgICAgICAgICAgPGJyIC8+XG4gICAgICAgICAgICBFeGFtcGxlIGlucHV0OiBcIndlIGhhdmUgPHNwYW4gY2xhc3NOYW1lPVwiY29sb3JlZC1leGFtcGxlLWVsZW1lbnRcIj5ndW5zPC9zcGFuPiBpbiAuLi5cIlxuICAgICAgICAgICAgPGJyIC8+XG4gICAgICAgICAgICBFeGFtcGxlIG91dHB1dDogXCJ3ZSBoYXZlIDxzcGFuIGNsYXNzTmFtZT1cImNvbG9yZWQtZXhhbXBsZS1lbGVtZW50XCI+IyMjIzwvc3Bhbj4gaW4gLi4uXCJcbiAgICAgICAgICA8L2xpPlxuICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgIEZvciBleGFtcGxlLCBpZiB0aGUgd29yZCA8c3BhbiBjbGFzc05hbWU9XCJjb2xvcmVkLWV4YW1wbGUtZWxlbWVudFwiPnNldmVuPC9zcGFuPiBhcmUgaW4gdGhpcyBibGFja2xpc3QsIHRoZW4gaWYgeW91IHZpc2l0IGEgd2Vic2l0ZSwgdGhlbiB0aGlzIHdpbGwgYmUgcmVwbGFjZWRcbiAgICAgICAgICAgIDxiciAvPlxuICAgICAgICAgICAgRXhhbXBsZSBpbnB1dDogXCI8c3BhbiBjbGFzc05hbWU9XCJjb2xvcmVkLWV4YW1wbGUtZWxlbWVudFwiPnNldmVuPC9zcGFuPiB5ZWFycyBvbGQgLi4uXCJcbiAgICAgICAgICAgIDxiciAvPlxuICAgICAgICAgICAgRXhhbXBsZSBvdXRwdXQ6IFwiPHNwYW4gY2xhc3NOYW1lPVwiY29sb3JlZC1leGFtcGxlLWVsZW1lbnRcIj4jIyMjIzwvc3Bhbj4geWVhcnMgb2xkIC4uLlwiXG4gICAgICAgICAgPC9saT5cbiAgICAgICAgPC91bD5cbiAgICAgIDwvZGl2PlxuICAgIDwvc3Bhbj5cbiAgKSxcbiAgYmxhY2tsaXN0ZWRFbGVtZW50c0NsYXNzX2h0bWw6IChcbiAgICA8c3BhbiBjbGFzc05hbWU9XCJib3gtY29udGVudFwiPlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJib3gtY29udGVudC0tZGl2XCI+XG4gICAgICAgIDxwIGNsYXNzTmFtZT1cImVsZW1lbnQtcFwiPlxuICAgICAgICAgIEJsb2NraW5nIERPTSBFbGVtZW50cyAodGFncykgYmFzZWQgb24gaXRzIGF0dHJpYnV0ZTogY2xhc3MuXG4gICAgICAgIDwvcD5cbiAgICAgICAgPHVsPlxuICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgIEV4YW1wbGUgb2YgbGlzdCBlbnRyeTogPHNwYW4gY2xhc3NOYW1lPVwiY29sb3JlZC1leGFtcGxlLWVsZW1lbnRcIj5mb250LWJvbGQ8L3NwYW4+LiBXaGVuIHlvdSB2aXNpdCBhbiB3ZWJzaXRlIGFuZCBhIHNpbmdsZSB0YWcgaGFzIHRoZSBhdHRyaWJ1dGVzIGNsYXNzIGFuIHRoZSBjbGFzcyB2YWx1ZSBpbmNsdWRlcyB0aGlzIHRleHQ6IFwiZm9udC1ib2xkXCIsIGV4YW1wbGU6IHsnPHNwYW4gY2xhc3M9XCJmb250LWJvbGRcIj4gVGV4dCA8L3NwYW4+J30sIHRoZW4gdGhpcyB0YWcgKERPTSBlbGVtZW50KSB3aWxsIGJlIHJlbW92ZWQgZnJvbSB0aGUgY3VycmVudCB2aXNpdGVkIHdlYnNpdGVcbiAgICAgICAgICA8L2xpPlxuICAgICAgICA8L3VsPlxuICAgICAgPC9kaXY+XG4gICAgPC9zcGFuPlxuICApLFxuICBibGFja2xpc3RlZEVsZW1lbnRzSHJlZl9odG1sOiAoXG4gICAgPHNwYW4gY2xhc3NOYW1lPVwiYm94LWNvbnRlbnRcIj5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYm94LWNvbnRlbnQtLWRpdlwiPlxuICAgICAgICA8cCBjbGFzc05hbWU9XCJlbGVtZW50LXBcIj5cbiAgICAgICAgICBCbG9ja2luZyBcIkFcIiB0YWcgRWxlbWVudHMgYmFzZWQgb24gaXRzIGF0dHJpYnV0ZTogaHJlZi5cbiAgICAgICAgPC9wPlxuICAgICAgICA8dWw+XG4gICAgICAgICAgPGxpPlxuICAgICAgICAgICAgRXhhbXBsZSBvZiBsaXN0IGVudHJ5OiA8c3BhbiBjbGFzc05hbWU9XCJjb2xvcmVkLWV4YW1wbGUtZWxlbWVudFwiPnJlZGlyZWN0Pzwvc3Bhbj4uIFdoZW4geW91IHZpc2l0IGFuIHdlYnNpdGUgYW5kIGEgc2luZ2xlIHRhZyB7JzxhPid9IGhhcyB0aGUgYXR0cmlidXRlcyBocmVmIGFuIHRoZSBocmVmYHMgdmFsdWUgaW5jbHVkZXMgdGhpcyB0ZXh0OiBcInJlZGlyZWN0P1wiLCBleGFtcGxlOiB7JzxhIGhyZWY9XCJodHRwczovL3h2MzQ1YmhGRC5jb20vcmVkaXJlY3Q/Y2xpZW50PWh0dHA6Ly9leGFtcGxlLmNvbVwiPmxpbms8L2E+J30sIHRoZW4gdGhpcyB0YWcgKERPTSBlbGVtZW50KSB3aWxsIGJlIHJlbW92ZWQgZnJvbSB0aGUgY3VycmVudCB2aXNpdGVkIHdlYnNpdGVcbiAgICAgICAgICA8L2xpPlxuICAgICAgICA8L3VsPlxuICAgICAgPC9kaXY+XG4gICAgPC9zcGFuPlxuICApLFxuICBibGFja2xpc3RlZEVsZW1lbnRzSWRfaHRtbDogKFxuICAgIDxzcGFuIGNsYXNzTmFtZT1cImJveC1jb250ZW50XCI+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImJveC1jb250ZW50LS1kaXZcIj5cbiAgICAgICAgPHAgY2xhc3NOYW1lPVwiZWxlbWVudC1wXCI+XG4gICAgICAgICAgQmxvY2tpbmcgRE9NIEVsZW1lbnRzICh0YWdzKSBiYXNlZCBvbiBpdHMgYXR0cmlidXRlOiBpZC5cbiAgICAgICAgPC9wPlxuICAgICAgICA8dWw+XG4gICAgICAgICAgPGxpPlxuICAgICAgICAgICAgRXhhbXBsZSBvZiBsaXN0IGVudHJ5OiA8c3BhbiBjbGFzc05hbWU9XCJjb2xvcmVkLWV4YW1wbGUtZWxlbWVudFwiPmV4dGVybi1sb2dvPC9zcGFuPi4gV2hlbiB5b3UgdmlzaXQgYW4gd2Vic2l0ZSBhbmQgYSBzaW5nbGUgdGFnIGhhcyB0aGUgYXR0cmlidXRlcyBpZCBhbiB0aGUgaWQgdmFsdWUgaW5jbHVkZXMgdGhpcyB0ZXh0OiBcImV4dGVybi1sb2dvXCIsIGV4YW1wbGU6IHsnPGltZyBpZD1cImV4dGVybi1sb2dvXCIvPid9LCB0aGVuIHRoaXMgdGFnIChET00gZWxlbWVudCkgd2lsbCBiZSByZW1vdmVkIGZyb20gdGhlIGN1cnJlbnQgdmlzaXRlZCB3ZWJzaXRlXG4gICAgICAgICAgPC9saT5cbiAgICAgICAgPC91bD5cbiAgICAgIDwvZGl2PlxuICAgIDwvc3Bhbj5cbiAgKSxcbiAgd2hpdGVsaXN0ZWRFbGVtZW50c0RvbWFpbnNfaHRtbDogKFxuICAgIDxzcGFuIGNsYXNzTmFtZT1cImJveC1jb250ZW50XCI+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImJveC1jb250ZW50LS1kaXZcIj5cbiAgICAgICAgPHAgY2xhc3NOYW1lPVwiZWxlbWVudC1wXCI+XG4gICAgICAgICAgTWFrZSBub3RoaW5nIGZvciBzZWxlY3RlZCBkb21haW4gbmFtZXMuXG4gICAgICAgIDwvcD5cbiAgICAgICAgPHVsPlxuICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgIEV4YW1wbGUgb2YgbGlzdCBlbnRyeTogPHNwYW4gY2xhc3NOYW1lPVwiY29sb3JlZC1leGFtcGxlLWVsZW1lbnRcIj5nb29nbGUuY29tPC9zcGFuPiB0aGVuIHRoZSB3ZWJzaXRlIGh0dHBzOi8vd3d3LjxzcGFuIGNsYXNzTmFtZT1cImNvbG9yZWQtZXhhbXBsZS1lbGVtZW50XCI+Z29vZ2xlLmNvbTwvc3Bhbj4gYXJlIGFsbG93ZWQgYW5kIG5vIGNoZWNrcyBhcmUgbWFkZVxuICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgPGxpPlxuICAgICAgICAgICAgRXhhbXBsZSBvZiBsaXN0IGVudHJ5OiA8c3BhbiBjbGFzc05hbWU9XCJjb2xvcmVkLWV4YW1wbGUtZWxlbWVudFwiPm5wbWpzLmNvbTwvc3Bhbj4gdGhlbiB0aGUgd2Vic2l0ZSBodHRwczovL3d3dy48c3BhbiBjbGFzc05hbWU9XCJjb2xvcmVkLWV4YW1wbGUtZWxlbWVudFwiPm5wbWpzLmNvbTwvc3Bhbj4vcGFja2FnZS9ndWxwLWJhYmVsIGFyZSBhbGxvd2VkIGFuZCBubyBjaGVja3MgYXJlIG1hZGVcbiAgICAgICAgICA8L2xpPlxuICAgICAgICA8L3VsPlxuICAgICAgPC9kaXY+XG4gICAgPC9zcGFuPlxuICApLFxuICBleGFtcGxlOiAnRXhhbXBsZXMnLFxuICAvKipcbiAgICogSW1hZ2VzIGRvd25sb2FkIFxuICAgKi9cbiAgaW1hZ2VzUG9wdXBUaXRsZTogJ0ltYWdlcyBvbiBjdXJyZW50IHdlYnNpdGUnLFxuICBpbWFnZXNOb0RhdGE6ICdObyB2YWxpZCBpbWFnZXMgZm91bmQnLFxuICBpbWFnZXNOb0RhdGFGYXZvdXJpdGVzOiAnTm8gc2F2ZWQgaW1hZ2VzIGZvdW5kJyxcbiAgaW1hZ2VzTG9hZGluZ1RhYnM6ICdMb2FkaW5nIGFjdGl2ZSB0YWJzLi4uJyxcbiAgY3VycmVudF90YWJzX3RpdGxlOiAnQ3VycmVudCB0YWJzJyxcbiAgZmlsdGVyOiAnRmlsdGVyJyxcbiAgZmlsdGVyX2FsbDogJ0FsbCcsXG4gIGl0ZW1zUGVyU2l0ZTogJ1BlciBzaXRlJyxcbiAgaXRlbXNQZXJTaXRlU3VmZml4OiAnaW1hZ2VzJyxcbiAgcGFnZTogJ1BhZ2UnLFxuICBvZjogJ29mJyxcbiAgaW1hZ2VzOiAnaW1hZ2VzJyxcbiAgY3VycmVudF9mYXZvdXJpdGVzX2ltYWdlczogJ0N1cnJlbnRseSBzYXZlZCBpbWFnZXMnLFxuICBvcGVuX2luX25ld190YWI6ICdPcGVuIGluIG5ldyB0YWInLFxuICBkb3dubG9hZDogJ0Rvd25sb2FkJyxcbiAgZG93bmxvYWRTbWFsbDogJ2Rvd25sb2FkJyxcbiAgZGVsZXRlX2FsbDogJ0RlbGV0ZSBhbGwnLFxuICBub3RMb2dnZWRJbkltYWdlc0Zhdm91cml0ZXNBZGQ6ICdPbmx5IGxvZ2dlZCBpbiB1c2VycyBhcmUgYWJsZSB0byBhZGQgaW1hZ2VzIHRvIHRoZSBmYXZvdXJpdGVzIGxpc3QnLFxuICBub3RMb2dnZWRJbkltYWdlc0Zhdm91cml0ZXNNYW5hZ2U6ICdPbmx5IGxvZ2dlZCBpbiB1c2VycyBhcmUgYWJsZSB0byBtYW5hZ2UgdGhlIGZhdm91cml0ZXMgbGlzdCcsXG4gIHRhYnNOb0RhdGE6ICdObyB2YWxpZCB0YWJzIGF2YWlsYWJsZScsXG4gIGltYWdlc0xvYWRpbmdEYXRhOiAnTG9hZGluZyBpbWFnZXMuLi4nLFxuICAvKlxuICAgKiBMaXN0IGFjdGlvbnMgXG4gICAqL1xuICBpbmZvSXRlbUFkZGVkOiAnSXRlbSBoYXMgYmVlbiBhZGRlZCB0byB0aGUgY3VycmVudCBsaXN0JyxcbiAgaW5mb0l0ZW1SZW1vdmVkOiAnSXRlbSBoYXMgYmVlbiByZW1vdmVkIGZyb20gbGlzdCcsXG4gIGluZm9BcnJheUlzMDogJ0xpc3QgYXJlIGVtcHR5LCBidXQgeW91IHdhbnQgdG8gcmVtb3ZlIGFuIHZhbHVlJyxcbiAgaW5mb0luY29ycmVjdFZhbHVlOiAnVmFsdWUgaXMgaW5jb3JyZWN0JyxcbiAgaW5mb0l0ZW1Jbkxpc3Q6ICdJdGVtIGFsbHJlYWR5IGluIGxpc3QnLFxuXG4gIGNvdW50cnk6ICdDb3VudHJ5JyxcbiAgY291bnRyaWVzTm90Rm91bmRUZXh0OiAnU29ycnksIG5vIGNvdW50cmllcyBmb3VuZCcsXG4gIGRyb3BUZXh0OiAnRHJvcCBoZXJlJyxcbiAgZXJyb3I6ICdFcnJvcicsXG4gIHNlYXJjaFBsYWNlaG9sZGVyOiAnU2VhcmNoIGZvciB2YWx1ZSBoZXJlLi4uJyxcbiAgc2VhcmNoOiAnU2VhcmNoJyxcbiAgbGlzdDogJ0xpc3QnLFxuICBhZGRQbGFjZWhvbGRlcjogJ1ZhbHVlLi4uJyxcbiAgYWRkTmV3RW50cnlUaXRsZTogJ0FkZCBuZXcgZW50cnknLFxuICBub19kYXRhX2xpc3Q6ICdObyBlbnRyaWVzJyxcbiAgbm9fZGF0YV9saXN0X3NlYXJjaDogJ05vIHNlYXJjaCByZXN1bHQnLFxuICBsb2FkaW5nOiAnTG9hZGluZy4uLicsXG4gIGhvbWVfc2VjdXJpdHlfMTogJ0Jsb2NraW5nIGRhbmdlciBhbmQgdHJhY2tpbmcgY29va2llcycsXG4gIGhvbWVfc2VjdXJpdHlfMjogJ0Jsb2NraW5nIGRhbmdlciBhbmQgdHJhY2tpbmcgcmVxdWVzdHMnLFxuICBob21lX3NlY3VyaXR5XzM6ICdCbG9ja2luZyB0cmFja2VycycsXG4gIGhvbWVfc2VjdXJpdHlfNDogJ0Jsb2NraW5nIGRhbmdlciBwb3JuIHdlYnNpdGVzJyxcbiAgaG9tZV9zZWN1cml0eV81OiAnQmxvY2tpbmcgY3VzdG9tIGRhbmdlciB3b3JkcycsXG4gIGhvbWVfc2VjdXJpdHlfNjogJ0Jsb2NraW5nIGN1c3RvbSB3ZWJzaXRlcyBIVE1MIGNvbnRlbnQnLFxuICB1cGxvYWQ6ICdEcmFnICYgRHJvcCBOaW5qYVByb3RlY3RgcyBqc29uIGZpbGUgaGVyZS4uLicsXG4gIGV4cG9ydDogJ0V4cG9ydCcsXG4gIGV4cG9ydEFsbDogJ29mIGdsb2JhbCBsaXN0cyBhbmQgc2V0dGluZ3MnLFxuICBkYW5nZXJDb3VudDogJ1Byb3RlY3RpbmcgeW91IScsXG4gIGRhbmdlckNvdW50UHJlZml4OiAnVGhlIG1heGltdW0gbnVtYmVyIG9mIGRhbmdlciBibG9ja2VkIGVsZW1lbnRzIGhhcyBiZWVuIHJlYWNoZWQgYW5kIGlzIGN1cnJlbnRseScsXG4gIGRhbmdlclVybFByZWZpeDogJ1RoZSBjdXJyZW50IHVybCBvciBwYXJ0IG9mIHRoZSBnaXZlbiB1cmwgYXJlIGRhbmdlci4gQmxvY2tpbmcgYnkgYmxhY2tsaXN0IGVudHJ5JyxcbiAgZG9tYWluOiAnRG9tYWluIHdpdGhvdXQgd3d3LiBFeGFtcGxlOiByZWFjdC1kaXZjcmVhdG9yLmNiYS5wbCcsXG4gIHRhZzogJ1RhZyBuYW1lLiBGb3IgZXhhbXBsZTogZGl2JyxcbiAgbGFuZ3VhZ2VzOiAnTGFuZ3VhZ2VzJ1xufTtcblxuZXhwb3J0IGRlZmF1bHQgRU47XG4iLCJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCB7IGFkZG9uUHJlZml4IH0gZnJvbSAnLi4vU291cmNlL0FwcEZpbGVzL0Z1bmN0aW9ucy9hZGRvblByZWZpeCc7XG5cbmNvbnN0IFBMID0ge1xuICBpdGVtUmVtb3ZlZEZyb21MaXN0OiAnV3BpcyB6b3N0YcWCIHVzdW5pxJl0eSB6IGxpc3R5JyxcbiAgY3Vycm50bHlJczogJ0tsaWtuaWogdGVrc3QgcG9uacW8ZWogYWJ5IHd5a29uYcSHJyxcbiAgY3Vycm50bHlJc09mZjogJ3fFgsSFY3plbmllJyxcbiAgY3Vycm50bHlJc09uOiAnd3nFgsSFY3plbmllJyxcbiAgdGl0bGVfaHRtbF9ibG9ja2VyOiAnQmxvY2tlcicsXG4gIGJsb2NrZXJfbXNnXzc6IFwiQ29udGVudCBCbG9ja2VyIHBvendhbGEgbmEgemFibG9rb3dhbmllIHRyZcWbY2kgYmllxbzEhWNlaiBzdHJvbnkgaW50ZXJuZXRvd2VqLiBBYnkgemFibG9rb3dhxIcgZGFueSBlbGVtZW50IGRyemV3YSBET00sIHfFgsSFY3ogdXPFgnVnxJkgQ29udGVudCBCbG9ja2VyIHBvdGVtIHd5YmllcnogZWxlbWVudCB6ZSBzdHJvbnkgaW50ZXJuZXRvd2VqLiBXc3p5c3RraWUgemFibG9rb3dhbmUgZWxlbWVudHkgbW9nxIUgem9zdGHEhyBza2Fzb3dhbmUgdyAnRGFzaGJvYXJkJyB3IHNla2NqaSAnWmFibGtvd2FueSBIVE1MJy5cIixcbiAgdGl0bGVfcmVzZXQ6ICdSZXNldCcsXG4gIHJlc2V0X2RvbmU6ICdSZXNldCBhcHBsaWthY2ppIGRvIHVzdGF3aWXFhCBmYWJyeWN6bnljaCB6b3N0YcWCIHByemVwcm93YWR6b255IHBvbXnFm2xuaWUuJyxcbiAgcmVzZXQ6J0tsaWtuaWogdGVuIHRla3N0IGFieSBwcnplcHJvd2FkemnEhyByZXNldCB0ZWogd3R5Y3praSBkbyB1c3Rhd2llxYQgZmFicnljem55Y2guIFdzenlzdGtpZSB0d29qYSBkYW5lIHogbGlzdCwgdXN0YXdpZW5pYSBpIHN0YXR5c3R5a2Egem9zdGFuYSB1c3VuacSZdGUuIFByemVqZHogbmFqcGllcncgZG8gZHppYcWCdSBla3Nwb3J0dSBkYW55Y2ggYWJ5IHBvIHR5bSByZXNlY2llIG3Ds2Mgd3lrb25hxIcgaW1wb3J0IGRhbnljaC4nLFxuICBtZW51X3RpdGxlX25pbmphOiAnSWtvbmthIE5pbmphJyxcbiAgbmluamFJY29uOiAnSWtvbmthIE5pbmphIHRlZ28gcm96c3plcnplbmlhIHpvc3RhxYJhIHd6acSZdGEgeicsXG4gIHR1cm5PbjogJ1fFgsSFY3ogTmluamFQcm90ZWN0JyxcbiAgdHVybk9mZjogJ1d5xYLEhWN6IE5pbmphUHJvdGVjdCcsXG4gIGxpbmtzOiAnTGlua2knLFxuICBkZWxldGVBbGxJZnJhbWVzOiAnVXN1xYQgcmFta2kgeiBiaWVyesSFY2VqIHN0cm9ueScsXG4gIGRlbGV0ZUFsbENvb2tpZXM6ICdVc3XFhCBjaWFzdGVjemthIHogYmllcnrEhWNlaiBzdHJvbnknLFxuICBub3RMb2dnZWRJblN0YXRpc3RpY01lc3NhZ2U6ICdQcmFjdWplc3ogbG9rYWxuaWUuIFphbG9ndWogc2nEmSBhYnkgemFjaG93YcSHIHN0YXR5c3R5a8SZIHdzdGVjei4nLFxuICB0b2RheV9ibG9ja2VkOiAnU3RhdHlzdHlrYSB6YWJsb2tvd2FueWNoIGVsZW1lbnTDs3cgZG5pYSBkemlzaWVqc3plZ28nLFxuICBtZW51X3RleHRfc3RhdGlzdGljOiAnU3RhdHlzdHlrYSB6YWJsb2tvd2FueWNoIGVsZW1lbnTDs3cnLFxuICBtZW51X3RleHRfc3RhdGlzdGljX3NtYWxsOiAnU3RhdHlzdHlrYScsXG4gIG1lbnVfdGV4dF9yZXF1ZXN0czogJ1phcHl0YW5pYScsXG4gIGFkZG9uX25vdF9hdmFpbGFibGU6ICdEb21lbmEgbmllIHplendhbGEgbmEgdcW8eXdhbmllIHd0eWN6ZWsnLFxuICBOb0RhdGFCbG9ja2VkSXRlbXM6ICdCcmFrIHphYmxva293YW55Y2ggaW5mb3JtYWNqaScsXG4gIE5vRGF0YUJsb2NrZWRJdGVtc1RvZGF5OiAnQnJhayBpbmZvcm1hY2ppIG8gemFibG9rb3dhbnljaCBlbGVtZW50YWNoIHogZG5pYSBkemlzaWVqc3plZ28nLFxuICBob21lX2NoYXQ6ICdDaGF0IHoga29sZWdhbWkgLSBiZXogxZtsZWR6ZW5pYScsXG4gIGhvbWVfbWVzc2FnZXM6ICdXeXN5xYJhaiB3aWFkb21vxZtjaSAtIGJleiDFm2xlZHplbmlhJyxcbiAgaG9tZV9zZWN1cml0eTogJ09jaHJvbmEgdyBpbnRlcm5lY2llIC0gYmxva293YW5pZSDFm2xlZHrEhWN5Y2gnLFxuICBob21lX2ltYWdlczogJ1BvYmllcmFqIHpkasSZY2lhIC0gYmV6IMWbbGVkemVuaWEnLFxuICAvKiogXG4gICAqIExlZnQgbWVudVxuICAgKi9cbiAgbWVudV90ZXh0X2V4cG9ydDogJ0Vrc3BvcnQnLFxuICBtZW51X3RpdGxlX2V4cG9ydDogJ1ByemVqZMW6IGRvIG9ic3phcnUgZWtzcG9ydHUnLFxuICBtZW51X3RleHRfaW1wb3J0OiAnSW1wb3J0JyxcbiAgbWVudV90aXRsZV9pbXBvcnQ6ICdQcnplamTFuiBkbyBvYnN6YXJ1IGltcG9ydHUnLFxuICBtZXNzYWdlc19tYWluOiAnV2lhZG9tb8WbY2knLFxuICBtZW51X3RleHRfbWVzc2FnZXM6ICdXaWFkb21vxZtjaScsXG4gIG1lbnVfdGl0bGVfbWVzc2FnZXM6ICdQcnplamTFuiBkbyBvYnN6YXJ1IHdpYWRvbW/Fm2NpJyxcbiAgbWVudV90ZXh0X25vdGlmaWNhdGlvbnM6ICdQb3dpYWRvbWllbmlhJyxcbiAgbWVudV90aXRsZV9ub3RpZmljYXRpb25zOiAnUHJ6ZWpkxbogZG8gb2JzemFydSBwb3dpYWRvbWllxYQnLFxuICBmYXZvdXJpdGVzX21haW46ICdabmFqb21vxZtjaScsXG4gIG1lbnVfdGV4dF9mYXZvdXJpdGVzOiAnWm5ham9taScsXG4gIG1lbnVfdGl0bGVfZmF2b3VyaXRlczogJ1ByemVqZMW6IGRvIG9ic3phcnUgem5ham9taScsXG4gIG1lbnVfdGV4dF9hZGRfZmF2b3VyaXRlczogJ1d5c3p1a2FqJyxcbiAgbWVudV90aXRsZV9hZGRfZmF2b3VyaXRlczogJ1ByemVqZMW6IGRvIG9ic3phcnUgc3p1a2FuaWEgem5ham9teWNoJyxcbiAgY2hhdF9tYWluOiAnQ2hhdCcsXG4gIG1lbnVfdGV4dF9jaGF0OiAnQ2hhdCcsXG4gIG1lbnVfdGl0bGVfY2hhdDogJ1ByemVqZMW6IGRvIG9ic3phcnUgY2hhdHUnLFxuICBtZW51X3RleHRfc2VjdXJpdHk6ICdEb21lbmEnLFxuICBtZW51X3RleHRfc2VjdXJpdHlfbWFpbjogJ0xpc3RhJyxcbiAgbWVudV90aXRsZV9zZWN1cml0eTogJ1ByemVqZMW6IGRvIG9ic3phcnUgemFyesSFZHphbmlhIGRvbWVuxIUnLFxuICBtZW51X3RleHRfc2VjdXJpdHlfc2V0dGluZ3M6ICdVc3Rhd2llbmlhJyxcbiAgbWVudV90aXRsZV9zZWN1cml0eV9zZXR0aW5nczogJ1ByemVqZMW6IGRvIG9ic3phcnUgdXN0YXdpZcWEIG9jaHJvbnknLFxuICBtZW51X3RleHRfY29va2llczogJ0Npc3RlY3prYScsXG4gIG1lbnVfdGl0bGVfY29va2llczogJ1ByemVqZMW6IGRvIG9ic3phcnUgY2lhc3RlY3playcsXG4gIG1lbnVfdGV4dF9ob21lOiAnU3Ryb25hIGfFgsOzd25hJyxcbiAgbWVudV90aXRsZV9ob21lOiAnUHJ6ZWpkxbogZG8gc3Ryb255IGfFgsOzd25laicsXG4gIG1lbnVfdGV4dF9pZnJhbWVzOiAnUmFta2knLFxuICBtZW51X3RpdGxlX2lmcmFtZXM6ICdQcnplamTFuiBkbyBvYnN6YXJ1IHJhbWVrJyxcbiAgbWVudV90ZXh0X3NlY3VyaXR5X2V4YW1wbGVzOiAnUHJ6eWvFgmFkeScsXG4gIG1lbnVfdGl0bGVfc2VjdXJpdHlfZXhhbXBsZXM6ICdQcnplamTFuiBkbyBvYnN6YXJ1IHByenlrxYJhZMOzdyBvY2hyb255JyxcbiAgbWVudV90ZXh0X2Rvd25sb2FkX2ltYWdlczogJ1BvYmllcnogemRqxJljaWEnLFxuICBtZW51X3RpdGxlX2Rvd25sb2FkX2ltYWdlczogJ1ByemVqZMW6IGRvIG9ic3phcnUgcG9ib3J1IHpkasSZxIcnLFxuICBtZW51X3RleHRfaW1hZ2VzOiAnWmRqxJljaWEnLFxuICBtZW51X3RleHRfaW1hZ2VzX2Zhdm91cml0ZXM6ICdaYXBpc2FuZSB6ZGrEmWNpYScsXG4gIG1lbnVfdGl0bGVfaW1hZ2VzX2Zhdm91cml0ZXM6ICdQcnplamTFuiBkbyBvYnN6YXJ1IHphcGlzYW55Y2ggemRqxJnEhycsXG4gIGFjY291bnRQcml2YWN5VGVybXM6ICdXYXJ1bmtpIHByeXdhdG5vxZtjaScsXG4gIC8qKiBcbiAgICogR0xPQkFMIEVSUk9SIE1FU1NFQUdFU1xuICAgKi9cbiAgZ2xvYmFsTmV0d29ya0Vycm9yOiAnQsWCxIVkIHNpZWNpLicsXG4gIGdsb2JhbFByb2Nlc3NFcnJvcjogJ0LFgsSFZCBwcm9jZXN1LicsXG4gIGdsb2JhbFVzZXJEb2VzTm90RXhzaXN0czogJ0tvbnRvIHXFvHl0a293bmlrYSBuaWUgaXN0bmllamUnLFxuICBnbG9iYWxJbnZhbGlkRW1haWxzQWRyZXNzOiAnTmllcHJhd2lkxYJvd3kgZm9ybWF0IGFkcmVzdSBlLW1haWwnLFxuICBnbG9iYWxFcnJvcm1lc3NhZ2VQcmVmaXg6ICdabmFsZXppb25vIGLFgsSFZCwga3TDs3J5IHBvd29kdWplLCDFvGUgYXBsaWthY2phIG5pZSBkemlhxYJhIHBvcHJhd25pZS4nLFxuICBnbG9iYWxFcnJvcm1lc3NhZ2VDbG9zZUJ1dHRvbjogJ0lnbm9ydWonLFxuICBnbG9iYWxFcnJvcm1lc3NhZ2VMZWFybk1vcmVCdXR0b246ICdDenl0YWogd2nEmWNlaicsXG4gIGdsb2JhbEludmFsaWRDb3VudHJ5OiAnTmllcG9wcmF3bnkga3JhaicsXG4gIGdsb2JhbEludmFsaWRMYW5ndWFnZTogJ05pZXBvcHJhd255IGrEmXp5aycsXG4gIGdsb2JhbEVycm9yQ29kZVRpdGxlOiAnS29kIGLFgsSZZHUnLFxuICBnbG9iYWxFcnJvckNvZGVfMTogJ0LFgsSFZCBzaWVjaS4gR2R5IHd5c3TEhXBpxYIgYsWCxIVkIHNpZWNpLCBvem5hY3phIHRvLCDFvGUgxbzEhWRhbmllIOKAnmFqYXjigJ0gbmllIHBvd2lvZMWCbyBzacSZLiBTcHJhd2TFuiBwb8WCxIVjemVuaWUgc2llY2lvd2UgbHViIHRvLCBwb25pZXdhxbwgdXPFgnVnYSB6ZGFsbmEgamVzdCBvYmVjbmllIG5pZWRvc3TEmXBuYS4nLFxuICBnbG9iYWxFcnJvckNvZGVfMjogJ0LFgsSFZCBwcm9jZXN1IGFwbGlrYWNqaS4gT3puYWN6YSB0bywgxbxlIG9kcG93aWVkxbogbmEgxbzEhWRhbmlhIGFqYXggcG9kYcWCYSBuaWVwcmF3aWTFgm93xIUgc3RydWt0dXLEmSBhcGxpa2FjamkuJyxcbiAgZ2xvYmFsRXJyb3JDb2RlXzM6ICdPZHBvd2llZMW6IGlubmEgbmnFvCBvY3pla2l3YW5hLiBPem5hY3phIHRvLCDFvGUgxbzEhWRhbmEgd2FydG/Fm8SHIGJpZcW8xIVjZWdvIGtvbnRla3N0dSBhcGxpa2FjamkgamVzdCBuaWVwcmF3aWTFgm93YS4nLFxuICBjb2RlOiAnS29kJyxcbiAgbGlzdE5vdFN5bmNocm9uaXplZFVzZXJOb3RMb2dnZWRJbjogJ1ByYWN1amVzeiBsb2thbG5pZS4gWmFsb2d1aiBzacSZIGFieSBzeW5jaHJvbml6b3dhxIcgbGlzdMSZLicsXG4gIG5vdExvZ2dlZEluOiAnSW5mb3JtYWNqYSBuaWV6YWxvZ293YW5pYScsXG4gIGxpc3RTeW5jaHJvbml6ZWRfb25lOiAnU3luY2hyb25pem93YW5vJyxcbiAgLyoqXG4gICAqIENvb2tpZXMgcG9wdXAgcGFnZVxuICAgKi9cbiAgdGl0bGVEZWxldGVDb29raWU6ICdTa2FzdWogcG9qZWR5bmN6ZSBjaWFzdGVjemtvJyxcbiAgdGl0bGVDb3B5Q29va2llVmFsdWU6ICdLb3BpdWogd2FydG/Fm8SHIGRvIHNjaG93a2EnLFxuICBjb29raWVfbXNnXzE6ICdEb21lbmE6JyxcbiAgY29va2llX21zZ18yOiAnTmF6d2E6JyxcbiAgY29va2llX21zZ18zOiAnV2FydG/Fm8SHOicsXG4gIGNvb2tpZV9tc2dfNDogJ0thc3VqIHdzenlzdGtpZSBjaWFzdGVjemthLiBKZXN0IG1vxbxsaXdlIMW8ZSB6b3N0YW5pZXN6IHd5bG9nb3dhbnkgeiBiaWXFvMSFY2VqIHN0cm9ueS4nLFxuICBjb29raWVzTm9EYXRhOiAnQnJhayBjaWFzdGVjemVrJyxcbiAgLy8gdXNlciBhY2NvdW50XG4gIGF2YXRhckVycm9yRmlsZVR5cGU6ICdOaWVyb3pwb3puYW55IHR5cCBwbGlrdScsXG4gIGF2YXRhckVycm9yRmlsZVNpemU6ICdSb3ptaWFyIHBsaWt1IHByemVrcmFjemEgbGltaXQgNSBNQiBkbGEgcHJvZ3JhbXUgQXZhdGFyJyxcbiAgYXZhdGFyRXJyb3JGaWxlVHlwZVN1cHBvcnQ6ICdEb3p3b2xvbmUgc8SFIHR5bGtvIHR5cHkgcGxpa8OzdyBqcGcsIHBuZyBpIGdpZicsXG5cbiAgLyoqXG4gICAqIEJsYWNrbGlzdCBvdmVydmlld1xuICAgKi9cbiAgYmxhY2tsaXN0OiAnQ3phcm5lIGxpc3R5JyxcbiAgd2hpdGVsaXN0OiAnQmlhxYJlIGxpc3R5JyxcbiAgYmxhY2tsaXN0ZWRFbGVtZW50c1dvcmRzOiAnQ3phcm5hIGxpc3RhIFPFgm93YScsXG4gIGJsYWNrbGlzdGVkRWxlbWVudHNEb21pYW5zOiAnQ3phcm5hIGxpc3RhIERvbWVueScsXG4gIGJsYWNrbGlzdGVkRWxlbWVudHNVcmxzSW5jbHVkZXM6ICdDemFybmEgbGlzdGEgQWRyZXN5IHVybCcsXG4gIGJsYWNrbGlzdGVkRWxlbWVudHNUcmFja2VyczogJ0N6YXJuYSBsaXN0YSBUcmFja2VyeScsXG4gIGJsYWNrbGlzdGVkRWxlbWVudHNDb29raWVzOiAnQ3phcm5hIGxpc3RhIENpYXN0ZWN6a2EnLFxuICBibGFja2xpc3RlZEVsZW1lbnRzQ2xhc3M6ICdCbG9rdWogSFRNTCBkbGEgY2xhc3MnLFxuICBibGFja2xpc3RlZEVsZW1lbnRzSWQ6ICdCbG9rdWogSFRNTCBkbGEgaWQnLFxuICBibGFja2xpc3RlZEVsZW1lbnRzSHJlZjogJ0Jsb2t1aiBIVE1MIGRsYSBocmVmJyxcbiAgbWVudUJsYWNrbGlzdGVkRWxlbWVudHNDbGFzczogJ0Jsb2t1aiBIVE1MIGRsYSBjbGFzcycsXG4gIG1lbnVCbGFja2xpc3RlZEVsZW1lbnRzSWQ6ICdCbG9rdWogSFRNTCBkbGEgaWQnLFxuICBtZW51QmxhY2tsaXN0ZWRFbGVtZW50c0hyZWY6ICdCbG9rdWogSFRNTCBkbGEgaHJlZicsXG4gIGJsYWNrbGlzdGVkRWxlbWVudHNJZnJhbWVzOiAnQ3phcm5hIGxpc3RhIFJhbWtpJyxcbiAgYmxhY2tsaXN0ZWRFbGVtZW50c0lmcmFtZXNTb3VyY2VzOiAnQ3phcm5hIGxpc3RhIFJhbWtpIMW6csOzZMWCbycsXG4gIGJsYWNrbGlzdGVkRWxlbWVudHNJZnJhbWVzTmFtZXM6ICdDemFybmEgbGlzdGEgUmFta2kgbmF6d2EnLFxuICBjb3BpZWRUb0NsaXBCb2FyZDogJ1Nrb3Bpb3dhbm8gZG8gc2Nob3drYScsXG4gIGFjdGlvbl90aXRsZV9jb3B5VG9DbGlwYm9hcmQ6ICdTa29waXVqIGxpc3TEmSBkbyBzY2hvd2thJyxcbiAgYWN0aW9uX3RpdGxlX2V4cG9ydFRvRmlsZTogJ0Vrc3BvcnR1aiBsaXN0xJkgZG8gcGxpa3UgbyBmb3JtYWNpZSBKU09OJyxcbiAgYWN0aW9uX3RpdGxlX2RlbGV0ZUxpc3Q6ICdXeWN6ecWbxIcgbGlzdMSZIGdsb2JhbG5pZScsXG4gIGFjdGlvbl90aXRsZV9jb3B5VG9DbGlwYm9hcmRfc2luZ2xlOiAnU2tvcGl1aiB3YXJ0b8WbxIcgZG8gc2Nob3drYScsXG4gIGFjdGlvbl90aXRsZV9kZWxldGVfc2luZ2xlOiAnVXN1xYQgd3BpcycsXG4gIGZvclRoaXNGdW5jdGlvbkxvZ2luOiAnWmFsb2d1aiBzacSZLCBhYnkgd3lrb25hxIcgdMSZIGFrY2rEmScsXG4gIGVtcHR5TGlzdERvbmU6ICdMaXN0YSB6b3N0YcWCYSB3eWN6eXN6Y3pvbmEnLFxuICByZXN0b3JlRGVmYXVsdFZhbHVlOiAnWnJlc2V0dWogbGlzdMSZIGRvIHdhcnRvxZtjaSBkb215xZtsbnljaCcsXG4gIHdoaXRlbGlzdGVkRWxlbWVudHNEb21haW5zOiAnQmlhxYJhIGxpc3RhIERvbWVueScsXG4gIGJsb2NrZWRFbGVtZW50czogJ0Jsb2NrZXIgSFRNTCcsXG4gIC8qKlxuICAgKiBTZWN1cml0eSBzZXR0aW5nc1xuICAgKi9cbiAgc2VjdXJpdHlJc09uOiAnVGEgd3R5Y3prYSBqZXN0IHfFgsSFY3pvbmEgbHViIHd5xYLEhWN6b25hLicsXG4gIHNjYW5UZXh0T25XZWJzaXRlOiAnSmXFm2xpIHd5xYLEhWN6eXN6IHTEmSBvcGNqxJksIHd0ZWR5IHdzenlzdGtpZSBzxYJvd2EgbmEgc3Ryb25pZSBpbnRlcm5ldG93ZWogTklFIHPEhSBza2Fub3dhbmUuIEN6YXJuYSBsaXN0YTogU8WCb3dhLCBzxIUgaWdub3Jvd2FuZS4nLFxuICBhbGxvd09ubHlIdHRwc1Byb3RvY29sOiAnWmV6d2FsYWogbmEgb2R3aWVkemFuaWUgdHlsa28gc3Ryb24gaW50ZXJuZXRvd3ljaCBIVFRQUyAtIGN6eWxpIHN0cm9ueSB6IHByb3Rva2/FgmVtIEhUVFAgem9zdGFuxIUgemFibG9rb3dhbmUuJyxcbiAgYWxsb3dPbmx5SHR0cFByb3RvY29sOiAnWmV6d2FsYWogbmEgb2R3aWVkemFuaWUgdHlsa28gc3Ryb24gaW50ZXJuZXRvd3ljaCBIVFRQIC0gY3p5bGkgc3Ryb255IHogcHJvdG9rb8WCZW0gSFRUUFMgem9zdGFuxIUgemFibG9rb3dhbmUuJyxcbiAgbWFrZVNlYXJjaEluU291cmNlQ29kZTogJ1NrYW51aiBzxYJvd2EgdyBrb2R6aWUgxbpyw7NkxYJvd3ltIGRhbmVnbyBlbGVtZW50dSBIVE1MIChpbm5lckhUTUwpIGx1YiB0eWxrbyB3IHRla3NjaWUgZWxlbWVudGFjaCBIVE1MIChpbm5lclRleHQpLicsXG4gIG11dGF0aW9uQ2hlY2s6ICdTcHJhd2R6YW5pZSBlbGVtZW50w7N3IEhUTUwgc3Ryb255IGludGVybmV0b3dlaiBtYSBuYXN0xIVwacSHIHLDs3duaWXFvCBwbyB6YcWCYWRvd2FuaXUgc3Ryb255IChET00gbXV0YWNqZSBuYSBlbGVtZW50YWNoIEhUTUwgemF6d3ljemFqIHBvcHJ6ZXogYmlibGlvdGVraSBKYXZhc2NyaXB0KS4nLFxuICBpZ25vcmVUYWdTdHlsZTogJ0lnbm9ydWoga29kIHphd2FydHkgdyB0YWdhY2ggXCJTVFlMRVwiICg8c3R5bGU+IHRhZykgcG9kY3phcyBza2Fub3dhbmlhIG5hIHBvZHN0YXdpZSBjemFybmVqIGxpc3R5IFwiU8WCb3dhXCIuJyxcbiAgaWdub3JlVGFnU2NyaXB0OiAnSWdub3J1aiBrb2QgemF3YXJ0eSB3IHRhZ2FjaCBcIlNDUklQVFwiICg8c2NyaXB0PiB0YWcpIHBvZGN6YXMgc2thbm93YW5pYSBuYSBwb2RzdGF3aWUgY3phcm5laiBsaXN0eSBcIlPFgm93YVwiLicsXG4gIGlnbm9yZVRhZ0xpbms6ICdJZ25vcnVqIGtvZCB6YXdhcnR5IHcgdGFnYWNoIFwiTGlua1wiICg8bGluaz4gdGFnKSBwb2RjemFzIHNrYW5vd2FuaWEgbmEgcG9kc3Rhd2llIGN6YXJuZWogbGlzdHkgXCJTxYJvd2FcIi4nLFxuICBpZ25vcmVUYWdNZXRhOiAnSWdub3J1aiBrb2QgemF3YXJ0eSB3IHRhZ2FjaCBcIk1ldGFcIiAoPG1ldGE+IHRhZykgcG9kY3phcyBza2Fub3dhbmlhIG5hIHBvZHN0YXdpZSBjemFybmVqIGxpc3R5IFwiU8WCb3dhXCIuJyxcbiAgcmVwbGFjZXI6ICdaYXN0xIVwIGthxbxkeSB6bmFrIG5pZWJlenBpZWN6bmVnbyBzxYJvd2EgKG5pZWJlenBpZWN6bmUgc8WCb3dhIHBvY2hvZHrEhSB6IGN6YXJuZWogbGlzdHkgU8WCb3dhKSB0eW0gd3Bpc2VtLicsXG4gIG1heGltdW1PZkRhbmdlcldvcmRzOiAnUG8gb3NpxIVnbmnEmWNpdSB0ZWogd2FydG/Fm2NpIC0gcG9wcnpleiBzdW3EmSB6YWJsb2tvd2FueWNoIGVsZW1lbnTDs3cgbmEgc3Ryb25pZSBuYSBwb2RzdGF3aWUgY3phcm55Y2ggbGlzdDogQ3phcm5hIGxpc3RhIFPFgm93YSwgQmxva3VqIEhUTUwgZGxhIGNsYXNzLCBCbG9rdWogSFRNTCBkbGEgaHJlZiBvcmF6IEJsb2t1aiBIVE1MIGRsYSBpZCAoa2HFvGR5IHphYmxva293YW55IGVsZW1lbnQgendpxJlrc3phIHdhcnRvxZtjaSBsaWN6bmlrYSBvICsxKSB3dGVkeSBzdHJvbmEgaW50ZXJuZXRvd2Egem9zdGFuaWUgemFibG9rb3dhbmEuIE1pbmltYWxuYSB3YXJ0b8WbxIcgdG8gMSwgbWFrc3ltYWxuYSB0byAzMDAuJyxcbiAgbGltaXRsZXNzU2NhbjogJ1ppZ25vcnVqIG1ha3N5bWFsbsSFIGxpY3pixJkgemFibG9rb3dhbnljaCBuaWViZXpwaWVjem55Y2ggZWxlbWVudMOzdyBuYSBwb2RzdGF3aWUgY3phcm55Y2ggbGlzdDogQ3phcm5hIGxpc3RhIFPFgm93YSwgQmxva3VqIEhUTUwgZGxhIGNsYXNzLCBCbG9rdWogSFRNTCBkbGEgaHJlZiBvcmF6IEJsb2t1aiBIVE1MIGRsYSBpZC4gU3Ryb25hIG5pZSB6b3N0YW5pZSB6YWJsb2tvd2FuYSAoemlnbm9ydWogcG93ecW8c3rEhSB3YXJ0b8WbxIcpLiBKZcWbbGkgYWt0eXd1amVzeiB0xJkgZnVua2NqxJksIFByb3RlY3Rpb24gbW/FvGUgc3Bvd29sbmnEhyBkemlhxYJhbmllIHByemVnbMSFZGFya2kuJyxcbiAgZGVsZXRlQ29va2llczogJ0thc3VqIGF1dG9tYXR5Y3puaWUgd3N6eXN0a2llIGNpYXN0ZWN6a2EgbmEgcG9kc3Rhd2llIGN6YXJuZWogbGlzdHkgQ2lhc3RlY3prYSBuYSB3c3p5dGtpY2ggc3Ryb25hY2guIENpYXN0ZWN6a2Ega2Fzb3dhbmUgc8SFIGdkeSBvdHdpZXJhc3ogbHViIHphbXlrYXN6IHN0cm9uxJkgaW50ZXJuZXRvd8SFIGkgcG9kY3phcyBwcnplZ2zEhWRhbmlhIGNvIDUgc2VrdW5kLicsXG5cbiAgLyoqXG4gICAqIFBvcHVwIC0gaG9tZVxuICAgKi9cbiAgcG9wdXBNYWluVGl0bGU6ICdDemFybnkgbmluamEgc3RhdHlzdHlrYScsXG4gIHBvcHVwX2Jsb2NrZWRfdHJhY2tlcnM6ICdaYWJsb2tvd2FuaSB0cmFja2VyenknLFxuICBwb3B1cF9ibG9ja2VkX2Nvb2tpZXM6ICdaYWJsb2tvd2FuZSBjaWFzdGVjemthJyxcbiAgcG9wdXBfYmxvY2tlZF93b3JkczogJ1phYmxva293YW5lIMWCb3dhJyxcbiAgcG9wdXBfYmxvY2tlZF9yZXF1ZXN0czogJ1phYmxva293YW5lIHphcHl0YW5pYScsXG4gIHBvcHVwX2Jsb2NrZWRfaWZyYW1lczogJ1phYmxva293YW5lIHJhbWtpJyxcbiAgcG9wdXBfYmxvY2tlZF9kb206ICdaYWJsb2tvd2FueSBIVE1MJyxcbiAgcG9wdXBfYmxvY2tlZF93ZWJzaXRlczogJ1phYmxva293YW5lIHN0cm9ueScsXG4gIHBvcHVwX3RpdGxlX2Rhc2hib2FyZDogJ1N0YXR5c3R5a2EnLFxuICBwb3B1cF90aXRsZV9nbG9iYWxfY2hhcnQ6ICdHbG9iYWxuYSBzdGF0eXN0eWthJyxcbiAgLyoqXG4gICAqIFBvcHVwIC0gSWZyYW1lcyBwYWdlXG4gICAqL1xuICB0aXRsZURlbGV0ZUlmcmFtZTogJ1VzdcWEIHBvamVkeW5jenkgZWxlbWVudCBpZnJhbWUnLFxuICBpZnJhbWVfbXNnXzE6ICfFuXLDs2TFgm86JyxcbiAgaWZyYW1lX21zZ18yOiAnSWQ6JyxcbiAgaWZyYW1lX21zZ18zOiAnY2xhc3NOYW1lOicsXG4gIGlmcmFtZXNOb0RhdGE6ICdCcmFrIHJhbWVrJyxcblxuICAvKipcbiAgICogUG9wdXAgLSBzZWN1cml0eVxuICAgKi9cbiAgcG9wdXBfYWRkX2JsYWNrbGlzdGVkRWxlbWVudHNUcmFja2VyczogJ0RvZGFqIGJpZcW8xIVjxIUgZG9tZW7EmSBkbyB0cmFja2Vyw7N3IGN6YXJuZWogbGlzdHkuIFdzenlzdGtpZSBwcsOzYnkgdXp5c2thbmlhIGRvc3TEmXB1IGRvIHRlaiBkb21lbnkgc8SFIHphYmxva293YW5lLicsXG4gIHBvcHVwX3JlbW92ZV9ibGFja2xpc3RlZEVsZW1lbnRzVHJhY2tlcnM6ICdVc3XFhCBiaWXFvMSFY8SFIGRvbWVuxJkgeiBjemFybmVqIGxpc3R5IC0gVHJhY2tlcsOzdy4nLFxuICBwb3B1cF9hZGRfYmxhY2tsaXN0ZWRFbGVtZW50c0RvbWlhbnM6ICdEb2RhaiBiaWXFvMSFY2UgZG9tZW55IGRvIGRvbWVueSBjemFybmVqIGxpc3R5IGRvbWVuLiBXc3p5c3RraWUgcHLDs2J5IHV6eXNrYW5pYSBkb3N0xJlwdSBkbyB0ZWogZG9tZW55IGx1YiB1c8WCdWcgeiB0ZWogZG9tZW55IHPEhSBibG9rb3dhbmUuJyxcbiAgcG9wdXBfcmVtb3ZlX2JsYWNrbGlzdGVkRWxlbWVudHNEb21pYW5zOiAnVXN1xYQgYmllxbzEhWPEhSBkb21lbsSZIHogY3phcm5laiBsaXN0eSAtIERvbWVuLicsXG4gIHBvcHVwX2FkZF9ibGFja2xpc3RlZEVsZW1lbnRzQ29va2llczogJ0RvZGFqIGJpZcW8xIVjxIUgZG9tZW7EmSBkbyBjemFybmVqIGxpc3R5IHBsaWvDs3cgY29va2llLiBXc3p5c3RraWUgY2lhc3RlY3prYSBzxIUgdXN1d2FuZSBwb2RjemFzIHphxYJhZG93YW5pYSBzdHJvbnksIHBvdGVtIGNvIDUgc2VrdW5kIG9yYXogb2RjemFzIG9wdXNjemFuaWEgd2l0cnlueS4nLFxuICBwb3B1cF9yZW1vdmVfYmxhY2tsaXN0ZWRFbGVtZW50c0Nvb2tpZXM6ICdVc3XFhCBiaWXFvMSFY8SFIGRvbWVuxJkgeiBjemFybmVqIGxpc3R5IC0gQ2lhc3RlY3prYScsXG4gIHBvcHVwX2FkZF9ibGFja2xpc3RlZEVsZW1lbnRzSWZyYW1lczogJ0RvZGFqIGJpZcW8xIVjxIUgZG9tZW7EmSBkbyBjemFybmVqIGxpc3R5IC0gUmFt4bixaS4gV3N6eXN0a2llIHJhbWtpIHNhIHVzdXdhbmUgemUgc3Ryb255LCBnZHkgdGEgcHJvYnVqZSB3Y3p5dGFjIMW6csOzZMWCbyB6ZXduxJl0cnplbmdvIHNlcndpc3UgKHJhbWtpKS4nLFxuICBwb3B1cF9yZW1vdmVfYmxhY2tsaXN0ZWRFbGVtZW50c0lmcmFtZXM6ICdVc3XFhCBiaWXFvMSFY8SFIGRvbWVuxJkgeiBjemFybmVqIGxpc3R5IC0gUmFta2kuJyxcbiAgcG9wdXBfYWRkX2JsYWNrbGlzdGVkRWxlbWVudHNJZnJhbWVzU291cmNlczogJ0RvZGFqIGJpZcW8xIVjeSBhZHJlcyB1cmwgZG8gY3phcm5laiBsaXN0eSAtIFJhbWtpIMW6csOzZMWCby4gV3N6eXN0a2llIHJhbWtpIHNhIHVzdXdhbmUgemUgc3Ryb255LCBnZHkgdGEgcHJvYnVqZSB3Y3p5dGFjIMW6csOzZMWCbyB6ZXduxJl0cnplbmdvIHNlcndpc3UgKHJhbWtpKS4nLFxuICBwb3B1cF9yZW1vdmVfYmxhY2tsaXN0ZWRFbGVtZW50c0lmcmFtZXNTb3VyY2VzOiAnVXN1xYQgYmllxbzEhWN5IGFkcmVzIHVybCB6IGN6YXJuZWogbGlzdHkgLSBSYW1raSDFunLDs2TFgm8uJyxcbiAgcG9wdXBfYWRkX3doaXRlbGlzdGVkRWxlbWVudHNEb21haW5zOiAnRG9kYWogYmllxbzEhWN5IHdwaXMgYmlhxYJlaiBsaXN0eSBEb21lbi4gZXp3w7NsIG5hIHdzenlzdGtvICjFvGFkbmUgxbzEhWRhbmllIG5pZSBqZXN0IGJsb2tvd2FuZSwgYnJhayBzcHJhd2R6YW5pYSBzxYLDs3cgbmEgY3phcm5laiBsacWbY2llLCBicmFrIHVzdXdhbmlhIHBsaWvDs3cgY29va2llIGkgYXV0b21hdHljem5lIHVzdXdhbmllIGlmcmFtZSkuJyxcbiAgcG9wdXBfcmVtb3ZlX3doaXRlbGlzdGVkRWxlbWVudHNEb21haW5zOiAnVXN1xYQgYmllxbzEhWPEhSBkb21lbsSZIHogYmlhxYJlaiBsaXN0eSBEb21lbi4nLFxuXG4gIHBvcHVwX2FkZF9ibGFja2xpc3RlZEVsZW1lbnRzVHJhY2tlcnNfcG9wdXA6ICdEb2RhaiBiaWXFvMSFY3kgd3BpcyBkbyBjemFybmVqIGxpc3R5IFRyYWNrZXLDs3cuIFdzenlzdGtpZSBwcsOzYnkgdXp5c2thbmlhIGRvc3TEmXB1IGRvIHRlaiBkb21lbnkgc8SFIHphYmxva293YW5lLicsXG4gIHBvcHVwX3JlbW92ZV9ibGFja2xpc3RlZEVsZW1lbnRzVHJhY2tlcnNfcG9wdXA6ICdVc3XFhCBiaWXFvMSFY3kgd3BpcyB6IGN6YXJuZWogbGlzdHkgVHJhY2tlcsOzdy4nLFxuICBwb3B1cF9hZGRfYmxhY2tsaXN0ZWRFbGVtZW50c0RvbWlhbnNfcG9wdXA6ICdEb2RhaiBiaWXFvMSFY3kgd3BpcyBkbyBjemFybmVqIGxpc3R5IERvbWVuLiBXc3p5c3RraWUgcHLDs2J5IHV6eXNrYW5pYSBkb3N0xJlwdSBkbyB0ZWogZG9tZW55IGx1YiB1c8WCdWcgeiB0ZWogZG9tZW55IHPEhSBibG9rb3dhbmUuJyxcbiAgcG9wdXBfcmVtb3ZlX2JsYWNrbGlzdGVkRWxlbWVudHNEb21pYW5zX3BvcHVwOiAnVXN1xYQgYmllxbzEhWN5IHdwaXMgeiBjemFybmVqIGxpc3R5IERvbWVuLicsXG4gIHBvcHVwX2FkZF9ibGFja2xpc3RlZEVsZW1lbnRzQ29va2llc19wb3B1cDogJ0RvZGFqIGJpZcW8xIVjeSB3cGlzIGRvIGN6YXJuZWogbGlzdHkgQ2lhc3RlY3prYS4gV3N6eXN0a2llIGNpYXN0ZWN6a2Egc8SFIHVzdXdhbmUgcG9kY3phcyB6YcWCYWRvd2FuaWEgc3Ryb255LCBwb3RlbSBjbyA1IHNla3VuZCBvcmF6IG9kY3phcyBvcHVzY3phbmlhIHdpdHJ5bnkuJyxcbiAgcG9wdXBfcmVtb3ZlX2JsYWNrbGlzdGVkRWxlbWVudHNDb29raWVzX3BvcHVwOiAnVXN1xYQgYmllxbzEhWN5IHdwaXMgeiBjemFybmVqIGxpc3R5IENpYXN0ZWN6a2EnLFxuICBwb3B1cF9hZGRfYmxhY2tsaXN0ZWRFbGVtZW50c0lmcmFtZXNfcG9wdXA6ICdEb2RhaiBiaWXFvMSFY3kgd3BpcyBkbyBjemFybmVqIGxpc3R5IFJhbeG4sWkuIFdzenlzdGtpZSByYW1raSBzYSB1c3V3YW5lIHplIHN0cm9ueSwgZ2R5IHRhIHByb2J1amUgd2N6eXRhYyDFunLDs2TFgm8gemV3bsSZdHJ6ZW5nbyBzZXJ3aXN1IChyYW1raSkuJyxcbiAgcG9wdXBfcmVtb3ZlX2JsYWNrbGlzdGVkRWxlbWVudHNJZnJhbWVzX3BvcHVwOiAnVXN1xYQgYmllxbzEhWN5IHdwaXMgeiBjemFybmVqIGxpc3R5IFJhbWtpLicsXG4gIHBvcHVwX2FkZF9ibGFja2xpc3RlZEVsZW1lbnRzSWZyYW1lc1NvdXJjZXNfcG9wdXA6ICdEb2RhaiBiaWXFvMSFY3kgd3BpcyBkbyBjemFybmVqIGxpc3R5IFJhbWtpIMW6csOzZMWCby4gV3N6eXN0a2llIHJhbWtpIHNhIHVzdXdhbmUgemUgc3Ryb255LCBnZHkgdGEgcHJvYnVqZSB3Y3p5dGFjIMW6csOzZMWCbyB6ZXduxJl0cnplbmdvIHNlcndpc3UgKHJhbWtpKS4nLFxuICBwb3B1cF9yZW1vdmVfYmxhY2tsaXN0ZWRFbGVtZW50c0lmcmFtZXNTb3VyY2VzX3BvcHVwOiAnVXN1xYQgYmllxbzEhWN5IHdwaXMgeiBjemFybmVqIGxpc3R5IFJhbWtpIMW6csOzZMWCby4nLFxuICBwb3B1cF9hZGRfd2hpdGVsaXN0ZWRFbGVtZW50c0RvbWFpbnNfcG9wdXA6ICdEb2RhaiBiaWXFvMSFY3kgd3BpcyBiaWHFgmVqIGxpc3R5IERvbWVuLiBaZXp3w7NsIG5hIHdzenlzdGtvICjFvGFkbmUgxbzEhWRhbmllIG5pZSBqZXN0IGJsb2tvd2FuZSwgYnJhayBzcHJhd2R6YW5pYSBzxYLDs3cgbmEgY3phcm5laiBsacWbY2llLCBicmFrIHVzdXdhbmlhIHBsaWvDs3cgY29va2llIGkgYXV0b21hdHljem5lIHVzdXdhbmllIGlmcmFtZSkuJyxcbiAgcG9wdXBfcmVtb3ZlX3doaXRlbGlzdGVkRWxlbWVudHNEb21haW5zX3BvcHVwOiAnVXN1xYQgYmllxbzEhWN5IHdwaXMgeiBiaWHFgmVqIGxpc3R5IERvbWVuLicsXG5cbiAgcG9wdXBfcmVsb2FkX3RhcmdldDogJ1phxYJhZHVqIHBvbm93bmllIHN0cm9uxJknLFxuICBleHRlbmRzYmxhY2tsaXN0OiAoXG4gICAgPHNwYW4+XG4gICAgICBQb2RjemFzIMWCYWRvd2FuaWEgd2l0cnlueSBkb21lbmEgamVzdCBza2Fub3dhbmEgcHJ6ZXogZmlsdHIgY3phcm5laiBsaXN0eS4gSmXFm2xpIGRvbWVuYSBqZXN0IG5hIGN6YXJuZWogbGnFm2NpZSwgem9zdGFuaWUgemFibG9rb3dhbmEuIEFieSB6YXBld25pxIcgbWFrc3ltYWxuZSBiZXpwaWVjemXFhHN0d28sIG1vxbxuYSBkb2RhxIcgcm96c3plcnpvbsSFIGN6YXJuxIUgbGlzdMSZIHoga29sZWpueW1pIDIwODIyIHdwaXNhbWkuIFRyZcWbxIcgbGlzdHkgem5hamR1amUgc2nEmSB0dXRhajpcbiAgICAgIDxhIHRhcmdldD0nX2JsYW5rJyBocmVmPXtgJHthZGRvblByZWZpeCgpfS9leHRlbmRlZGJsYWNrbGlzdC50eHRgfT5cbiAgICAgICAgZXh0ZW5kZWRibGFja2xpc3QudHh0XG4gICAgICAgIDwvYT5cbiAgICA8L3NwYW4+XG4gICksXG4gIGV4dGVuZHNwb3JubGlzdDogKFxuICAgIDxzcGFuPlxuICAgICAgUG9kY3phcyDFgmFkb3dhbmlhIHdpdHJ5bnkgZG9tZW5hIGplc3Qgc2thbm93YW5hIHByemV6IGZpbHRyIGN6YXJuZWogbGlzdHkuIEplxZtsaSBkb21lbmEgamVzdCBuYSBjemFybmVqIGxpxZtjaWUsIHpvc3RhbmllIHphYmxva293YW5hLiBBYnkgemFwZXduacSHIG1ha3N5bWFsbmUgYmV6cGllY3plxYRzdHdvLCBtb8W8bmEgZG9kYcSHIHJvenN6ZXJ6b27EhSBjemFybsSFIGxpc3TEmSBkb21lbiBwb3Jub2dyYWZpY3pueWNoIHoga29sZWpueW1pIDY2Njggd3Bpc2FtaS4gVHJlxZvEhyBsaXN0eSB6bmFqZHVqZSBzacSZIHR1dGFqOlxuICAgICAgPGEgdGFyZ2V0PSdfYmxhbmsnIGhyZWY9e2Ake2FkZG9uUHJlZml4KCl9L2V4dGVuZGVkcG9ybmxpc3QudHh0YH0+XG4gICAgICAgIGV4dGVuZGVkcG9ybmxpc3QudHh0XG4gICAgICA8L2E+XG4gICAgPC9zcGFuPlxuICApLFxuICAvKipcbiAgICogU2VjdXJpdHkgZXhhbXBsZXNcbiAgICovXG4gIGJsYWNrbGlzdGVkRWxlbWVudHNDb29raWVzX2h0bWw6IChcbiAgICA8c3BhbiBjbGFzc05hbWU9XCJib3gtY29udGVudFwiPlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJib3gtY29udGVudC0tZGl2XCI+XG4gICAgICAgIDxwIGNsYXNzTmFtZT1cImVsZW1lbnQtcFwiPlxuICAgICAgICAgIFR1dGFqIHBvd2lubm8gc2nEmSB3cGlzYcSHIG5henfEmSBjaWFzdGVjemthIGFieSBuYSBrYcW8ZGVqIHN0cm9uaWUgaW50ZXJuZXRvd2VqIGthxbxkZSBjaWFzdGVjemtvIG8gcG9kYW5laiBuYXp3aWUgem9zdGHFgm8gc2thc293YW5lIGx1YlxuICAgICAgICAgIG5hendhIGRvbWVueSBuYSBrdMOzcmVqIGthxbxkZSBjaWFzdGVjemthIG1hasSFIHpvc3RhxIcgc2thc293YW5lLlxuICAgICAgICAgIFN0YW5kYXJkb3dvIGxpc3RhIG1hIHBvbmFkIDM1MCB3cGlzw7N3IG5pZWJlenBpZWN6bnljaCBuYXpldyBkb21lbiBsdWIgdXPFgnVnIMWbbGVkesSFY3ljaCwga3TDs3LEhSBzxIUgYXV0b21hdHljem5pZSBrYXNvd2FuZS5cbiAgICAgICAgPC9wPlxuICAgICAgICA8dWw+XG4gICAgICAgICAgPGxpPlxuICAgICAgICAgICAgUHJ6eWvFgmFkb3d5IHdwaXMgdyB0ZWogbGnFm2NpZTogPHNwYW4gY2xhc3NOYW1lPVwiY29sb3JlZC1leGFtcGxlLWVsZW1lbnRcIj5HUFM8L3NwYW4+LiBKZcWbbGkgb2R3aWVkemlzeiBzdHJvbsSZIGludGVybmV0b3fEhTogaHR0cHM6Ly93d3cueW91dHViZS5jb20sIHd0ZWR5IGNpYXN0ZWN6a28gbyBuYXp3aWUgPHNwYW4gY2xhc3NOYW1lPVwiY29sb3JlZC1leGFtcGxlLWVsZW1lbnRcIj5HUFM8L3NwYW4+IHpvc3RhbmllIHNrYXNvd2FuZVxuICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgPGxpPlxuICAgICAgICAgICAgUHJ6eWvFgmFkb3d5IHdwaXMgdyB0ZWogbGnFm2NpZTogPHNwYW4gY2xhc3NOYW1lPVwiY29sb3JlZC1leGFtcGxlLWVsZW1lbnRcIj53d3cuN3NlYXJjaC5jb208L3NwYW4+LiBKZcWbbGkgb2R3aWVkemlzeiBzdHJvbsSZIGludGVybmV0b3fEhTogaHR0cHM6Ly93d3cuN3NlYXJjaC5jb20sIHd0ZWR5IDxzcGFuIGNsYXNzTmFtZT1cImNvbG9yZWQtZXhhbXBsZS1lbGVtZW50XCI+d3N6eXN0a2llIGNpYXN0ZWN6a2E8L3NwYW4+IHpvc3RhbsSFIHNrYXNvd2FuZVxuICAgICAgICAgIDwvbGk+XG4gICAgICAgIDwvdWw+XG4gICAgICA8L2Rpdj5cbiAgICA8L3NwYW4+XG4gICksXG4gIGJsYWNrbGlzdGVkRWxlbWVudHNEb21pYW5zX2h0bWw6IChcbiAgICA8c3BhbiBjbGFzc05hbWU9XCJib3gtY29udGVudFwiPlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJib3gtY29udGVudC0tZGl2XCI+XG4gICAgICAgIDxwIGNsYXNzTmFtZT1cImVsZW1lbnQtcFwiPlxuICAgICAgICAgIFRvIGplc3QgY3phcm5hIGxpc3RhIG9wYXJ0YSBqZXN0IG5hIG5hendpZSBkb21lbnkuXG4gICAgICAgICAgV3N6eXN0a2llIGRvbWVueSB6IHRlaiBsaXN0eSBzxIUgYmxva293YW5lIHBvZGN6YXMgb2R3aWVkemFuaWEgdGVqIHdpdHJ5bnkuXG4gICAgICAgIDwvcD5cbiAgICAgICAgPHVsPlxuICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgIFByenlrxYJhZG93eSB3cGlzIHcgdGVqIGxpxZtjaWU6IDxzcGFuIGNsYXNzTmFtZT1cImNvbG9yZWQtZXhhbXBsZS1lbGVtZW50XCI+eXRpbWcuY29tPC9zcGFuPi5KZcWbbGkgb2R3aWVkemlzeiBzdHJvbsSZIGludGVybmV0b3fEhSAgPHNwYW4gY2xhc3NOYW1lPVwiY29sb3JlZC1leGFtcGxlLWVsZW1lbnRcIj5odHRwczovL3l0aW1nLmNvbTwvc3Bhbj4gc3Ryb25hIGludGVybmV0b3dhIHpvc3RhbmllIHphYmxva293YW5hXG4gICAgICAgICAgPC9saT5cbiAgICAgICAgICA8bGk+XG4gICAgICAgICAgICBQcnp5a8WCYWRvd3kgd3BpcyB3IHRlaiBsacWbY2llOiA8c3BhbiBjbGFzc05hbWU9XCJjb2xvcmVkLWV4YW1wbGUtZWxlbWVudFwiPmdpdGh1Yi5jb208L3NwYW4+LiBKZcWbbGkgb2R3aWVkemlzeiBzdHJvbsSZIGludGVybmV0b3fEhSA8c3BhbiBjbGFzc05hbWU9XCJjb2xvcmVkLWV4YW1wbGUtZWxlbWVudFwiPmh0dHBzOi8vZ2l0aHViLmNvbTwvc3Bhbj4gc3Ryb25hIGludGVybmV0b3dhIHpvc3RhbmllIHphYmxva293YW5hXG4gICAgICAgICAgPC9saT5cbiAgICAgICAgPC91bD5cbiAgICAgIDwvZGl2PlxuICAgIDwvc3Bhbj5cbiAgKSxcbiAgYmxhY2tsaXN0ZWRFbGVtZW50c1VybHNJbmNsdWRlc19odG1sOiAoXG4gICAgPHNwYW4gY2xhc3NOYW1lPVwiYm94LWNvbnRlbnRcIj5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYm94LWNvbnRlbnQtLWRpdlwiPlxuICAgICAgICA8cCBjbGFzc05hbWU9XCJlbGVtZW50LXBcIj5cbiAgICAgICAgICBDemFybmEgbGlzdHkgb3BhcnRhIG5hIGFkcmVzYWNoIFVSTCBsdWIgY3rEmcWbxIcgYWRyZXN1IHVybC5cbiAgICAgICAgICBXc3p5c3RraWUgbmF6d3kgZG9tZW4geiB0ZWogbGlzdHkgb3JheiB3c3p5c3RraWUgY3rEmcWbY2kgeiBhZHJlc3UgVVJMIHNhIGJyYW5lIHBvZCB1d2FnxJkgcG9kY3phcyBvZHdpZWR6YW5pYSBzdG9ybnkgaW50ZXJuZXR3ZWouXG4gICAgICAgICAgSmV6ZWxpIGFkcmVzIHN0cm9ueSBpbnRlcm5ldG93ZWogemF3aWVyYSBqYWtpa29sd2llayB6bmFrIGx1YiBjacSFZyB6bmFrw7N3IHogdGVqIGxpc3R5IHd0ZWR5IGRvc3TEmXAgZG8gc3Ryb255IGludGVybmV0b3dlaiB6b3N0YW5pZSB6YWJsb2tvd2FueS5cbiAgICAgICAgPC9wPlxuICAgICAgICA8dWw+XG4gICAgICAgICAgPGxpPlxuICAgICAgICAgICAgUHJ6eWvFgmFkb3d5IHdwaXMgdyB0ZWogbGnFm2NpZTogPHNwYW4gY2xhc3NOYW1lPVwiY29sb3JlZC1leGFtcGxlLWVsZW1lbnRcIj5wYWNrYWdlPC9zcGFuPi4gSmXFm2xpIG9kd2llZHppc3ogc3Ryb27EmSBpbnRlcm5ldG93xIU6IGh0dHBzOi8vd3d3Lm5wbWpzLmNvbS88c3BhbiBjbGFzc05hbWU9XCJjb2xvcmVkLWV4YW1wbGUtZWxlbWVudFwiPnBhY2thZ2U8L3NwYW4+L2d1bHAtYmFiZWwgd3RlZHkgZG9zdMSZcCBkbyBzdHJvbnkgaW50ZXJuZXRvd2VqIHpvc3RhbmllIHphYmxva293YW55XG4gICAgICAgICAgPC9saT5cbiAgICAgICAgICA8bGk+XG4gICAgICAgICAgICBQcnp5a8WCYWRvd3kgd3BpcyB3IHRlaiBsacWbY2llOiA8c3BhbiBjbGFzc05hbWU9XCJjb2xvcmVkLWV4YW1wbGUtZWxlbWVudFwiPnRlc3Q8L3NwYW4+LiBKZcWbbGkgb2R3aWVkemlzeiBzdHJvbsSZIGludGVybmV0b3fEhTogaHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS9zZWFyY2g/cT08c3BhbiBjbGFzc05hbWU9XCJjb2xvcmVkLWV4YW1wbGUtZWxlbWVudFwiPnRlc3Q8L3NwYW4+IHd0ZWR5IGRvc3TEmXAgZG8gc3Ryb255IGludGVybmV0b3dlaiB6b3N0YW5pZSB6YWJsb2tvd2FueVxuICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgPGxpPlxuICAgICAgICAgICAgUHJ6eWvFgmFkb3d5IHdwaXMgdyB0ZWogbGnFm2NpZTogPHNwYW4gY2xhc3NOYW1lPVwiY29sb3JlZC1leGFtcGxlLWVsZW1lbnRcIj5xPC9zcGFuPi4gSmXFm2xpIG9kd2llZHppc3ogc3Ryb27EmSBpbnRlcm5ldG93xIU6IGh0dHBzOi8vd3d3Lmdvb2dsZS5jb20vc2VhcmNoPzxzcGFuIGNsYXNzTmFtZT1cImNvbG9yZWQtZXhhbXBsZS1lbGVtZW50XCI+cTwvc3Bhbj49dGVzdCB3dGVkeSBkb3N0xJlwIGRvIHN0cm9ueSBpbnRlcm5ldG93ZWogem9zdGFuaWUgemFibG9rb3dhbnlcbiAgICAgICAgICA8L2xpPlxuICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgIFByenlrxYJhZG93eSB3cGlzIHcgdGVqIGxpxZtjaWU6IDxzcGFuIGNsYXNzTmFtZT1cImNvbG9yZWQtZXhhbXBsZS1lbGVtZW50XCI+aHViLmNvbTwvc3Bhbj4uIEplxZtsaSBvZHdpZWR6aXN6IHN0cm9uxJkgaW50ZXJuZXRvd8SFOiBodHRwczovL3d3dy5naXQ8c3BhbiBjbGFzc05hbWU9XCJjb2xvcmVkLWV4YW1wbGUtZWxlbWVudFwiPmh1Yi5jb208L3NwYW4+IHd0ZWR5IGRvc3TEmXAgZG8gc3Ryb255IGludGVybmV0b3dlaiB6b3N0YW5pZSB6YWJsb2tvd2FueVxuICAgICAgICAgIDwvbGk+XG4gICAgICAgIDwvdWw+XG4gICAgICA8L2Rpdj5cbiAgICA8L3NwYW4+XG4gICksXG4gIGJsYWNrbGlzdGVkRWxlbWVudHNJZnJhbWVzX2h0bWw6IChcbiAgICA8c3BhbiBjbGFzc05hbWU9XCJib3gtY29udGVudFwiPlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJib3gtY29udGVudC0tZGl2XCI+XG4gICAgICAgIDxwIGNsYXNzTmFtZT1cImVsZW1lbnQtcFwiPlxuICAgICAgICAgIEN6YXJuYSBsaXN0YSBuYXp3IGRvbWVuIG5hIGt0w7NyeWNoIChzdHJvbmFjaCBpbnRlcm5ldG93eWNoKSBtYWphIHpvc3RhxIcgdXN1bmnEmXRlIHJhbWtpIChpZnJhbWUpLlxuICAgICAgICA8L3A+XG4gICAgICAgIDx1bD5cbiAgICAgICAgICA8bGk+XG4gICAgICAgICAgICBQcnp5a8WCYWRvd3kgd3BpcyB3IHRlaiBsacWbY2llOiA8c3BhbiBjbGFzc05hbWU9XCJjb2xvcmVkLWV4YW1wbGUtZWxlbWVudFwiPmdhemV0YS5wbDwvc3Bhbj4uIEplxZtsaSBvZHdpZWR6aXN6IHN0cm9uxJkgaW50ZXJuZXRvd8SFOiBodHRwczovL3d3dy48c3BhbiBjbGFzc05hbWU9XCJjb2xvcmVkLWV4YW1wbGUtZWxlbWVudFwiPmdhemV0YS5wbDwvc3Bhbj4gd3RlZHkgd3N6eXN0a2llIHJhbWtpIHpvc3RhbsSFIHVzdW5pxJl0ZVxuICAgICAgICAgIDwvbGk+XG4gICAgICAgIDwvdWw+XG4gICAgICA8L2Rpdj5cbiAgICA8L3NwYW4+XG4gICksXG4gIF9odG1sOiAoXG4gICAgPHNwYW4gY2xhc3NOYW1lPVwiYm94LWNvbnRlbnRcIj5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYm94LWNvbnRlbnQtLWRpdlwiPlxuICAgICAgICA8cCBjbGFzc05hbWU9XCJlbGVtZW50LXBcIj5cbiAgICAgICAgICBDemFybmEgbGlzdGEgxbpyw7NkZcWCIHJhbWVrIGRvbWVuLCBrdMOzcmUgbWFqYSB6b3N0YcSHIHVzdW5pxJl0ZSBuYSBrYcW8ZGVqIHN0cm9uaWUuXG4gICAgICAgIDwvcD5cbiAgICAgICAgPHVsPlxuICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgIFByenlrxYJhZG93eSB3cGlzIHcgdGVqIGxpxZtjaWU6IDxzcGFuIGNsYXNzTmFtZT1cImNvbG9yZWQtZXhhbXBsZS1lbGVtZW50XCI+aHR0cHM6Ly9kbXAudGhlYWRleC5jb20vci88L3NwYW4+LiBKZcWbbGkgb2R3aWVkemlzeiBzdHJvbsSZIGludGVybmV0b3fEhTogaHR0cHM6Ly93d3cuZ2F6ZXRhLnBsIGEgemHFgmFkb3dhbmVqIHJhbWtpICh0YWc6IGlmcmFtZSkgxbpyw7NkxYJvIHphd2llcmE6IDxzcGFuIGNsYXNzTmFtZT1cImNvbG9yZWQtZXhhbXBsZS1lbGVtZW50XCI+aHR0cHM6Ly9kbXAudGhlYWRleC5jb20vci88L3NwYW4+MjMwLzExMjEvP2M9NDIyNTIyMjk1NTc1ODA2NjcwOSwgd3RlZHkgcmFta2Egem9zdGFuaWUgdXN1bmnEmXRhIHplIHN0cm9ueVxuICAgICAgICAgIDwvbGk+XG4gICAgICAgIDwvdWw+XG4gICAgICA8L2Rpdj5cbiAgICA8L3NwYW4+XG4gICksXG4gIGJsYWNrbGlzdGVkRWxlbWVudHNJZnJhbWVzTmFtZXNfaHRtbDogKFxuICAgIDxzcGFuIGNsYXNzTmFtZT1cImJveC1jb250ZW50XCI+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImJveC1jb250ZW50LS1kaXZcIj5cbiAgICAgICAgPHAgY2xhc3NOYW1lPVwiZWxlbWVudC1wXCI+XG4gICAgICAgICAgQ3phcm5hIGxpc3RhIG5hemV3IHJhbWVrLCBrdMOzcmUgbWFqYSB6b3N0YcSHIHVzdW5pxJl0ZSBuYSBrYcW8ZGVqIHN0cm9uaWUuXG4gICAgICAgIDwvcD5cbiAgICAgICAgPHVsPlxuICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgIFByenlrxYJhZG93eSB3cGlzIHcgdGVqIGxpxZtjaWU6IDxzcGFuIGNsYXNzTmFtZT1cImNvbG9yZWQtZXhhbXBsZS1lbGVtZW50XCI+Z29vZ2xlYWRzPC9zcGFuPi4gSmXFm2xpIG9kd2llZHppc3ogc3Ryb27EmSBpbnRlcm5ldG93xIU6IGh0dHBzOi8vd3d3LmdhemV0YS5wbCBhIHphxYJhZG93YW5laiByYW1raSAodGFnOiBpZnJhbWUpIG5hendhIHphd2llcmE6IDxzcGFuIGNsYXNzTmFtZT1cImNvbG9yZWQtZXhhbXBsZS1lbGVtZW50XCI+Z29vZ2xlYWRzPC9zcGFuPl9zeW5jLCB3dGVkeSByYW1rYSB6b3N0YW5pZSB1c3VuacSZdGEgemUgc3Ryb255XG4gICAgICAgICAgPC9saT5cbiAgICAgICAgPC91bD5cbiAgICAgIDwvZGl2PlxuICAgIDwvc3Bhbj5cbiAgKSxcbiAgYmxhY2tsaXN0ZWRFbGVtZW50c1RyYWNrZXJzX2h0bWw6IChcbiAgICA8c3BhbiBjbGFzc05hbWU9XCJib3gtY29udGVudFwiPlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJib3gtY29udGVudC0tZGl2XCI+XG4gICAgICAgIDxwIGNsYXNzTmFtZT1cImVsZW1lbnQtcFwiPlxuICAgICAgICAgIEplxZtsaSBvZHdpZWR6aXN6IHdpdHJ5bsSZIGludGVybmV0b3fEhSwgYSB3aXRyeW5hIHdkcm/FvHnFgmEgxZtsZWR6ZW5pZVxuICAgICAgICAgIHVzxYJ1Z2kgaSBuYXp3YSBkb21lbnkgamVzdCB6Z29kbmEgeiBqZWRuxIUgeiBuYXp3IGRvbWVuIHogdGVqIGxpc3R5IGx1YlxuICAgICAgICAgIGNhxYJhIMWbY2llxbxrYSBhZHJlc3UgdXJsIGplc3QgemdvZG5hIHogamVkbnltIHogd3Bpc8OzdyB6IHRlaiBsaXN0eSB0b1xuICAgICAgICAgIMW8xIVkYW5pZSB6b3N0YW5pZSB6YWJsb2tvd2FuZS5cbiAgICAgICAgPC9wPlxuICAgICAgICA8dWw+XG4gICAgICAgICAgPGxpPlxuICAgICAgICAgICAgUHJ6eWvFgmFkb3d5IHdwaXMgdyB0ZWogbGnFm2NpZTogPHNwYW4gY2xhc3NOYW1lPVwiY29sb3JlZC1leGFtcGxlLWVsZW1lbnRcIj5jZG4ubW91c2VmbG93LmNvbTwvc3Bhbj4uIEplxZtsaSB3aXRyeW5hIHBvxYLEhWN6eSBzacSZIHogdXPFgnVnxIUgemV3bsSZdHJ6bsSFIGkgYWRyZXMgemFweXRhbmlhIHphd2llcmEgbmF6d8SZIGRvbWVueTogaHR0cHM6Ly88c3BhbiBjbGFzc05hbWU9XCJjb2xvcmVkLWV4YW1wbGUtZWxlbWVudFwiPmNkbi5tb3VzZWZsb3cuY29tPC9zcGFuPiB0byB6YXB5dGFuaWEgem9zdGFuaWUgemFibG9rb3dhbmVcbiAgICAgICAgICA8L2xpPlxuICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgIFByenlrxYJhZG93eSB3cGlzIHcgdGVqIGxpxZtjaWU6IDxzcGFuIGNsYXNzTmFtZT1cImNvbG9yZWQtZXhhbXBsZS1lbGVtZW50XCI+cnNyYy5waHAvdjMveTQvci8tUEFYUC1kZWlqRS5naWY8L3NwYW4+LiBKZcWbbGkgd2l0cnluYSBwb8WCxIVjenkgc2nEmSB6IHVzxYJ1Z8SFIHpld27EmXRyem7EhSBpIGFkcmVzIHphcHl0YW5pYSB6YXdpZXJhIG5henfEmSBkb21lbnk6IGh0dHBzOi8vc3RhdGljLnh4LmZiY2RuLm5ldC88c3BhbiBjbGFzc05hbWU9XCJjb2xvcmVkLWV4YW1wbGUtZWxlbWVudFwiPnJzcmMucGhwL3YzL3k0L3IvLVBBWFAtZGVpakUuZ2lmPC9zcGFuPiB0byB6YXB5dGFuaWEgem9zdGFuaWUgemFibG9rb3dhbmVcbiAgICAgICAgICA8L2xpPlxuICAgICAgICA8L3VsPlxuICAgICAgPC9kaXY+XG4gICAgPC9zcGFuPlxuICApLFxuICBibGFja2xpc3RlZEVsZW1lbnRzV29yZHNfaHRtbDogKFxuICAgIDxzcGFuIGNsYXNzTmFtZT1cImJveC1jb250ZW50XCI+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImJveC1jb250ZW50LS1kaXZcIj5cbiAgICAgICAgPHAgY2xhc3NOYW1lPVwiZWxlbWVudC1wXCI+XG4gICAgICAgICAgS29udGVrcyBvY2hyb255IHRlaiBhcGxpa2Fjamkgem5hamR6aWUga2HFvGRlIHPFgm93byB6IHRlaiBjemFybmVqIGxpc3R5LCBhIGthxbxkZSBzxYJvd28gem9zdGFuaWUgemFzdMSFcGlvbmUgcHJ6ZXog4oCeemFtaWVubmlr4oCdIHpkZWZpbmlvd2FueSB3IHNla2NqaSDigJ5Vc3Rhd2llbmlhIG9jaHJvbnkgLlxuICAgICAgICA8L3A+XG4gICAgICAgIDx1bD5cbiAgICAgICAgICA8bGk+XG4gICAgICAgICAgICBOYSBwcnp5a8WCYWQsIGplxZtsaSBzxYJvd28gXCJwaXN0b2xldFwiIHpuYWpkdWplIHNpxJkgbmEgdGVqIGN6YXJuZWogbGnFm2NpZSwgdG8gamXFm2xpIG9kd2llZHppc3ogc3Ryb27EmSBpbnRlcm5ldG93xIUsIHPFgm93byDigJ5waXN0b2xldOKAnSB6b3N0YW5pZSB6YXN0xIVwaW9uZS5cbiAgICAgICAgICAgIDxiciAvPlxuICAgICAgICAgICAgUHJ6eWvFgmFkIHByemVkOiBcIm1hbSA8c3BhbiBjbGFzc05hbWU9XCJjb2xvcmVkLWV4YW1wbGUtZWxlbWVudFwiPnBpc3RvbGV0PC9zcGFuPiB3IHN6YWZpZS5cIi5cbiAgICAgICAgICAgIDxiciAvPlxuICAgICAgICAgICAgUHJ6eWvFgmFkIHBvOiBcIm1hbSA8c3BhbiBjbGFzc05hbWU9XCJjb2xvcmVkLWV4YW1wbGUtZWxlbWVudFwiPiMjIyMjIyMjPC9zcGFuPiB3IHN6YWZpZS5cIlxuICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgPGxpPlxuICAgICAgICAgICAgTmEgcHJ6eWvFgmFkLCBqZcWbbGkgc8WCb3dvIFwiemFrdXB5XCIgem5hamR1amUgc2nEmSBuYSB0ZWogY3phcm5laiBsacWbY2llLCB0byBqZcWbbGkgb2R3aWVkemlzeiBzdHJvbsSZIGludGVybmV0b3fEhSwgc8WCb3dvIHpha3VweSB6b3N0YW5pZSB6YXN0xIVwaW9uZS5cbiAgICAgICAgICAgIDxiciAvPlxuICAgICAgICAgICAgUHJ6eWvFgmFkIHByemVkOiBcIm1vamUgPHNwYW4gY2xhc3NOYW1lPVwiY29sb3JlZC1leGFtcGxlLWVsZW1lbnRcIj56YWt1cHk8L3NwYW4+IHPEhSB3IHNhbW9jaG9kemllLlwiLlxuICAgICAgICAgICAgPGJyIC8+XG4gICAgICAgICAgICBQcnp5a8WCYWQgcG86IFwibW9qZSA8c3BhbiBjbGFzc05hbWU9XCJjb2xvcmVkLWV4YW1wbGUtZWxlbWVudFwiPiMjIyMjIzwvc3Bhbj4gc8SFIHcgc2Ftb2Nob2R6aWUuXCJcbiAgICAgICAgICA8L2xpPlxuICAgICAgICA8L3VsPlxuICAgICAgPC9kaXY+XG4gICAgPC9zcGFuPlxuICApLFxuICBibGFja2xpc3RlZEVsZW1lbnRzQ2xhc3NfaHRtbDogKFxuICAgIDxzcGFuIGNsYXNzTmFtZT1cImJveC1jb250ZW50XCI+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImJveC1jb250ZW50LS1kaXZcIj5cbiAgICAgICAgPHAgY2xhc3NOYW1lPVwiZWxlbWVudC1wXCI+XG4gICAgICAgICAgQmxva293YW5pZSB0YWfDs3cgZHJ6ZXdhIERPTSBuYSBwb2RzdGF3aWUgamVnbyBpZGVudGlmaWthdG9yYTogY2xhc3MuXG4gICAgICAgIDwvcD5cbiAgICAgICAgPHVsPlxuICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgIFByenlrxYJhZG93eSB3cGlzIG5hIHRlaiBsacWbY2llOiBcImZvbnQtYm9sZFwiLiBKZcWbbGkgb2R3aWVkemlzeiBqYWvEhWtvbHdpZWsgc3Ryb27EmSBpbnRlcm5ldG93xIUgd3RlZHkgd3N5enN0a2llIGVsZW1lbnR5IHphd2llcmFqxIVjZSBhdHJ5YnV0IGNsYXNzIG8gd2FydG/Fm2NpICdmb250LWJvbGQnIChucDogeyc8c3BhbiBjbGFzcz1cImZvbnQtYm9sZFwiPiBUZXh0IDwvc3Bhbj4nfSkgem9zdGFuxIUgdXN1bmnEmXRlIHplIHN0cm9ueSBpbnRlcm5ldG93ZWouXG4gICAgICAgICAgPC9saT5cbiAgICAgICAgPC91bD5cbiAgICAgIDwvZGl2PlxuICAgIDwvc3Bhbj5cbiAgKSxcbiAgYmxhY2tsaXN0ZWRFbGVtZW50c0hyZWZfaHRtbDogKFxuICAgIDxzcGFuIGNsYXNzTmFtZT1cImJveC1jb250ZW50XCI+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImJveC1jb250ZW50LS1kaXZcIj5cbiAgICAgICAgPHAgY2xhc3NOYW1lPVwiZWxlbWVudC1wXCI+XG4gICAgICAgICAgQmxva293YW5pZSB0YWfDs3cgXCJBXCIgZHJ6ZXdhIERPTSBuYSBwb2RzdGF3aWUgamVnbyBpZGVudGlmaWthdG9yYTogaHJlZi5cbiAgICAgICAgPC9wPlxuICAgICAgICA8dWw+XG4gICAgICAgICAgPGxpPlxuICAgICAgICAgICAgUHJ6eWvFgmFkb3d5IHdwaXMgbmEgdGVqIGxpxZtjaWU6IFwicmVkaXJlY3Q/XCIuIEplxZtsaSBvZHdpZWR6aXN6IGpha8SFa29sd2llayBzdHJvbsSZIGludGVybmV0b3fEhSB3dGVkeSB3c3l6c3RraWUgZWxlbWVudHkgZHJ6ZXdhIERPTSB7JzxhPid9IHphd2llcmFqxIVjZSBhdHJ5YnV0IGhyZWYgbyB3YXJ0b8WbY2kgJ3JlZGlyZWN0PycgKG5wOiB7JzxhIGhyZWY9XCJodHRwczovL3h2MzQ1YmhGRC5jb20vcmVkaXJlY3Q/Y2xpZW50PWh0dHA6Ly9leGFtcGxlLmNvbVwiPmxpbms8L2E+J30pIHpvc3RhbsSFIHVzdW5pxJl0ZSB6ZSBzdHJvbnkgaW50ZXJuZXRvd2VqLlxuICAgICAgICAgIDwvbGk+XG4gICAgICAgIDwvdWw+XG4gICAgICA8L2Rpdj5cbiAgICA8L3NwYW4+XG4gICksXG4gIGJsYWNrbGlzdGVkRWxlbWVudHNJZF9odG1sOiAoXG4gICAgPHNwYW4gY2xhc3NOYW1lPVwiYm94LWNvbnRlbnRcIj5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYm94LWNvbnRlbnQtLWRpdlwiPlxuICAgICAgICA8cCBjbGFzc05hbWU9XCJlbGVtZW50LXBcIj5cbiAgICAgICAgICBCbG9rb3dhbmllIHRhZ8OzdyBkcnpld2EgRE9NIG5hIHBvZHN0YXdpZSBqZWdvIGlkZW50aWZpa2F0b3JhOiBpZC5cbiAgICAgICAgPC9wPlxuICAgICAgICA8dWw+XG4gICAgICAgICAgPGxpPlxuICAgICAgICAgICAgUHJ6eWvFgmFkb3d5IHdwaXMgbmEgdGVqIGxpxZtjaWU6IFwiZXh0ZXJuLWxvZ29cIi4gSmXFm2xpIG9kd2llZHppc3ogamFrxIVrb2x3aWVrIHN0cm9uxJkgaW50ZXJuZXRvd8SFIHd0ZWR5IHdzeXpzdGtpZSBlbGVtZW50eSB6YXdpZXJhasSFY2UgYXRyeWJ1dCBpZCBvIHdhcnRvxZtjaSAnZXh0ZXJuLWxvZ28nIChucDogeyc8aW1nIGlkPVwiZXh0ZXJuLWxvZ29cIi8+J30pIHpvc3RhbsSFIHVzdW5pxJl0ZSB6ZSBzdHJvbnkgaW50ZXJuZXRvd2VqLlxuICAgICAgICAgIDwvbGk+XG4gICAgICAgIDwvdWw+XG4gICAgICA8L2Rpdj5cbiAgICA8L3NwYW4+XG4gICksXG4gIHdoaXRlbGlzdGVkRWxlbWVudHNEb21haW5zX2h0bWw6IChcbiAgICA8c3BhbiBjbGFzc05hbWU9XCJib3gtY29udGVudFwiPlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJib3gtY29udGVudC0tZGl2XCI+XG4gICAgICAgIDxwIGNsYXNzTmFtZT1cImVsZW1lbnQtcFwiPlxuICAgICAgICAgIE5pZSByw7NiIG5pYyBkbGEgd3licmFueWNoIG5hencgZG9tZW4uXG4gICAgICAgIDwvcD5cbiAgICAgICAgPHVsPlxuICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgIFByenlrxYJhZG93eSB3cGlzIHcgdGVqIGxpxZtjaWU6IDxzcGFuIGNsYXNzTmFtZT1cImNvbG9yZWQtZXhhbXBsZS1lbGVtZW50XCI+Z29vZ2xlLmNvbTwvc3Bhbj4uIEplxZtsaSBvZHdpZWR6aXN6IHN0cm9uxJkgaW50ZXJuZXRvd8SFOiBodHRwczovL3d3dy48c3BhbiBjbGFzc05hbWU9XCJjb2xvcmVkLWV4YW1wbGUtZWxlbWVudFwiPmdvb2dsZS5jb208L3NwYW4+IG5pZSBzxIUgd3lrb255d2FuZSDFvGFkbmUgcHJvY2VzeSBhbmkgbmllIGplc3RlxZsgY2hyb25pb255XG4gICAgICAgICAgPC9saT5cbiAgICAgICAgICA8bGk+XG4gICAgICAgICAgICBQcnp5a8WCYWRvd3kgd3BpcyB3IHRlaiBsacWbY2llOiA8c3BhbiBjbGFzc05hbWU9XCJjb2xvcmVkLWV4YW1wbGUtZWxlbWVudFwiPm5wbWpzLmNvbTwvc3Bhbj4uIEplxZtsaSBvZHdpZWR6aXN6IHN0cm9uxJkgaW50ZXJuZXRvd8SFOiBodHRwczovL3d3dy48c3BhbiBjbGFzc05hbWU9XCJjb2xvcmVkLWV4YW1wbGUtZWxlbWVudFwiPm5wbWpzLmNvbTwvc3Bhbj4vcGFja2FnZS9ndWxwLWJhYmVsLCBuaWUgc8SFIHd5a29ueXdhbmUgxbxhZG5lIHByb2Nlc3kgYW5pIG5pZSBqZXN0ZcWbIGNocm9uaW9ueVxuICAgICAgICAgIDwvbGk+XG4gICAgICAgIDwvdWw+XG4gICAgICA8L2Rpdj5cbiAgICA8L3NwYW4+XG4gICksXG4gIGV4YW1wbGU6ICdQcnp5a8WCYWR5JyxcbiAgLyoqXG4gICAqIEltYWdlcyBkb3dubG9hZCBcbiAgICovXG4gIGltYWdlc1BvcHVwVGl0bGU6ICdabmFsZXppb25vIHpkasSZY2lhJyxcbiAgaW1hZ2VzTm9EYXRhOiAnQnJhayBwb3ByYXdueWNoIHpkasSZxIcnLFxuICBpbWFnZXNOb0RhdGFGYXZvdXJpdGVzOiAnQnJhayB6YXBpc2FueWNoIHpkasSZxIcnLFxuICBpbWFnZXNMb2FkaW5nVGFiczogJ8WBYWRvd2FuaWUgYWt0eXdueWNoIG9raWVuZWsuLi4nLFxuICBjdXJyZW50X3RhYnNfdGl0bGU6ICdBa3R1YWxuZSBva25hJyxcbiAgZmlsdGVyOiAnRmlsdHJ1aicsXG4gIGZpbHRlcl9hbGw6ICdXc3p5c3RraWUnLFxuICBpdGVtc1BlclNpdGU6ICdDbyBzdHJvbsSZJyxcbiAgaXRlbXNQZXJTaXRlU3VmZml4OiAnemRqxJnEhycsXG4gIHBhZ2U6ICdTdHJvbmEnLFxuICBvZjogJ3onLFxuICBpbWFnZXM6ICd6ZGrEmcSHJyxcbiAgY3VycmVudF9mYXZvdXJpdGVzX2ltYWdlczogJ1R5bWN6YXNlbSB6YXBpc2FuZSB6ZGrEmWNpYScsXG4gIG9wZW5faW5fbmV3X3RhYjogJ090d8OzcnogdyBub3d5bSBva2llbnRrdScsXG4gIGRvd25sb2FkOiAnUG9iaWVyeicsXG4gIGRvd25sb2FkU21hbGw6ICdwb2JpZXJ6JyxcbiAgZGVsZXRlX2FsbDogJ1VzdcWEIHdzenlza28nLFxuICBub3RMb2dnZWRJbkltYWdlc0Zhdm91cml0ZXNBZGQ6ICdUeWxrbyB6YWxvZ293YW5pIHXFvHl0a293bmljeSBtb2fEhSBkb2Rhd2HEhyB6ZGrEmWNpYSBkbyBsaXN0eSB1bHViaW9ueWNoJyxcbiAgbm90TG9nZ2VkSW5JbWFnZXNGYXZvdXJpdGVzTWFuYWdlOiAnVHlsa28gemFsb2dvd2FuaSB1xbx5dGtvd25pY3kgbW9nxIUgemFyesSFZHphxIcgbGlzdMSFIHVsdWJpb255Y2gnLFxuICB0YWJzTm9EYXRhOiAnQnJhayBwb3ByYXdueWNoIG9raWVuZWsnLFxuICBpbWFnZXNMb2FkaW5nRGF0YTogJ8WBYWRvd2FuaWUgemRqxJnEhy4uLicsXG4gIC8qXG4gICAqIExpc3QgYWN0aW9ucyBcbiAgICovXG4gIGluZm9JdGVtQWRkZWQ6ICdXcGlzIHpvc3RhxYIgZG9kYW55IGRvIGxpc3R5JyxcbiAgaW5mb0l0ZW1SZW1vdmVkOiAnV3BpcyB6b3N0YcWCIHVzdW5pxJl0eSB6IGxpc3R5JyxcbiAgaW5mb0FycmF5SXMwOiAnTGlzdGEgamVzdCBwdXN0YSwgd2nEmWMgbmllIG1vxbxuYSB1c3VuxIXEhyDFvGFkbmVnbyBlbGVtZW50dScsXG4gIGluZm9JbmNvcnJlY3RWYWx1ZTogJ1dhcnRvxZvEhyBqZXN0IG5pZXByYXdpZMWCb3dhJyxcbiAgaW5mb0l0ZW1Jbkxpc3Q6ICdXcGlzIGp1xbwgaXN0bmllamUgbmEgbGnFm2NpZScsXG4gIGNvdW50cnk6ICdLcmFqJyxcbiAgY291bnRyaWVzTm90Rm91bmRUZXh0OiAnUHJ6ZXByYXN6YW0sIG5pZSB6bmFsYXrFgmVtIHRha2llZ28ga3JhanUnLFxuICBkcm9wVGV4dDogJ1VwdcWbxIcgdHV0YWonLFxuICBlcnJvcjogJ0LFgsSFZCcsXG4gIHNlYXJjaFBsYWNlaG9sZGVyOiAnU3p1a2FqLi4uJyxcbiAgc2VhcmNoOiAnU3p1a2FqJyxcbiAgbGlzdDogJ0xpc3RhJyxcbiAgYWRkUGxhY2Vob2xkZXI6ICdXYXJ0b8WbxIcuLi4nLFxuICBhZGROZXdFbnRyeVRpdGxlOiAnRG9kYWogbm93eSB3cGlzJyxcbiAgbm9fZGF0YV9saXN0OiAnQnJhayB3cGlzw7N3JyxcbiAgbm9fZGF0YV9saXN0X3NlYXJjaDogJ0JyYWsgd3luaWvDs3cgc3p1a2FuaWEnLFxuICBsb2FkaW5nOiAnxYFhZG93YW5pZS4uLicsXG4gIGhvbWVfc2VjdXJpdHlfMTogJ0Jsb2tvd2FuaWUgbmllYmV6cGllY3pueWNoIGNpYXN0ZWN6ZWsnLFxuICBob21lX3NlY3VyaXR5XzI6ICdCbG9rb3dhbmllIG5pZWJlenBpZWN6bnljaCB6YXB5dGFuJyxcbiAgaG9tZV9zZWN1cml0eV8zOiAnQmxva293YW5pZSBuaWViZXpwaWVjem55Y2ggdXPFgnVnIMWbbGVkY3p5Y2gnLFxuICBob21lX3NlY3VyaXR5XzQ6ICdCbG9rb3dhbmllIG5pZWJlenBpZWN6bnljaCBzdHJvbiBwb3Jub2dyYWZpY3pueWNoJyxcbiAgaG9tZV9zZWN1cml0eV81OiAnQmxva293YW5pZSBuaWViZXpwaWVjem55Y2ggc8WCb3cnLFxuICBob21lX3NlY3VyaXR5XzY6ICdCbG9rb3dhbmllIG5pZWJlenBpZWN6bnljaCB6YXdhcnRvxZtjaSBzdHJvbiBpbnRlcm5ldG93eWNoJyxcbiAgdXBsb2FkOiAnUHJ6ZWNpxIVnbmlqIGkgdXB1xZvEhyBwbGlrIGpzb24gTmluamFQcm90ZWN0YSB0dXRhai4uLicsXG4gIGV4cG9ydDogJ0Vrc3BvcnQnLFxuICBleHBvcnRBbGw6ICdnbG9iYWxueWNoIGxpc3QgaSB1c3Rhd2llbicsXG4gIGRhbmdlckNvdW50OiAnQ2hyb25pxJkgY2nEmSEnLFxuICBkYW5nZXJDb3VudFByZWZpeDogJ09zacSFZ25pxJl0byBtYWtzeW1hbG5hIGxpY3pixJkgbmllYmV6cGllY3pueWNoIGVsZW1lbnTDs3csIGt0w7NyYSBqZXN0IG9iZWNuaWUnLFxuICBkYW5nZXJVcmxQcmVmaXg6ICdBZHJlcyBzdHJvbnkgYWxibyBjesSZxZvEhyBhZHJlc3Ugc3Ryb255IGludGVybmV0b3dlaiBqZXN0IG5pZWJlenBpZWN6bnkgaSB6bmFqZHVqZSBzacSZIHcgamVkbmVqIHogY3phcm5laiBsaXN0eScsXG4gIGRvbWFpbjogJ05hendhIGRvbWVuYSBiZXogd3d3LiBOYSBwcnp5a8WCYWQ6IHJlYWN0LWRpdmNyZWF0b3IuY2JhLnBsJyxcbiAgdGFnOiAnTmF6d2EgdGFndS4gTmEgcHJ6eWvFgmFkOiBkaXYnLFxuICBsYW5ndWFnZXM6ICdKxJl6eWtpJ1xufTtcblxuZXhwb3J0IGRlZmF1bHQgUEw7XG4iLCJpbXBvcnQgcG9zc2libGVMYW5ndWFnZXMgZnJvbSAnLi9wb3NzaWJsZUxhbmd1YWdlcyc7XG5cbmNvbnN0IGdldExhbmd1YWdlID0gKCkgPT4ge1xuICAgIGxldCBjdXJyZW50TGFuZ3VhZ2UgPSAgbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2FwcGxhbmd1YWdlJykgPyBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnYXBwbGFuZ3VhZ2UnKSA6ICdlbic7XG4gICAgXG4gICAgaWYoIXBvc3NpYmxlTGFuZ3VhZ2VzLmluY2x1ZGVzKGN1cnJlbnRMYW5ndWFnZSkpe1xuICAgICAgICBjdXJyZW50TGFuZ3VhZ2UgPSAnZW4nO1xuICAgIH1cbiAgICBcbiAgICByZXR1cm4gY3VycmVudExhbmd1YWdlLnRvTG93ZXJDYXNlKCk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBnZXRMYW5ndWFnZTsiLCJjb25zdCBwb3NzaWJsZUxhbmd1YWdlcyA9IFsnZGUnLCAnZW4nLCAncGwnXTtcbmV4cG9ydCBkZWZhdWx0IHBvc3NpYmxlTGFuZ3VhZ2VzOyIsInZhciBhcGkgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiKTtcbiAgICAgICAgICAgIHZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vYmxvY2tlZGNvdW50LnNjc3NcIik7XG5cbiAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgIH1cblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5pbnNlcnQgPSBcImhlYWRcIjtcbm9wdGlvbnMuc2luZ2xldG9uID0gZmFsc2U7XG5cbnZhciB1cGRhdGUgPSBhcGkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5tb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzIHx8IHt9OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgaXNPbGRJRSA9IGZ1bmN0aW9uIGlzT2xkSUUoKSB7XG4gIHZhciBtZW1vO1xuICByZXR1cm4gZnVuY3Rpb24gbWVtb3JpemUoKSB7XG4gICAgaWYgKHR5cGVvZiBtZW1vID09PSAndW5kZWZpbmVkJykge1xuICAgICAgLy8gVGVzdCBmb3IgSUUgPD0gOSBhcyBwcm9wb3NlZCBieSBCcm93c2VyaGFja3NcbiAgICAgIC8vIEBzZWUgaHR0cDovL2Jyb3dzZXJoYWNrcy5jb20vI2hhY2stZTcxZDg2OTJmNjUzMzQxNzNmZWU3MTVjMjIyY2I4MDVcbiAgICAgIC8vIFRlc3RzIGZvciBleGlzdGVuY2Ugb2Ygc3RhbmRhcmQgZ2xvYmFscyBpcyB0byBhbGxvdyBzdHlsZS1sb2FkZXJcbiAgICAgIC8vIHRvIG9wZXJhdGUgY29ycmVjdGx5IGludG8gbm9uLXN0YW5kYXJkIGVudmlyb25tZW50c1xuICAgICAgLy8gQHNlZSBodHRwczovL2dpdGh1Yi5jb20vd2VicGFjay1jb250cmliL3N0eWxlLWxvYWRlci9pc3N1ZXMvMTc3XG4gICAgICBtZW1vID0gQm9vbGVhbih3aW5kb3cgJiYgZG9jdW1lbnQgJiYgZG9jdW1lbnQuYWxsICYmICF3aW5kb3cuYXRvYik7XG4gICAgfVxuXG4gICAgcmV0dXJuIG1lbW87XG4gIH07XG59KCk7XG5cbnZhciBnZXRUYXJnZXQgPSBmdW5jdGlvbiBnZXRUYXJnZXQoKSB7XG4gIHZhciBtZW1vID0ge307XG4gIHJldHVybiBmdW5jdGlvbiBtZW1vcml6ZSh0YXJnZXQpIHtcbiAgICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTsgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblxuICAgICAgaWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgICAgLy8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcbiAgICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgLy8gaXN0YW5idWwgaWdub3JlIG5leHRcbiAgICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gICAgfVxuXG4gICAgcmV0dXJuIG1lbW9bdGFyZ2V0XTtcbiAgfTtcbn0oKTtcblxudmFyIHN0eWxlc0luRG9tID0gW107XG5cbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzSW5Eb20ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3R5bGVzSW5Eb21baV0uaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgcmVzdWx0ID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gbGlzdFtpXTtcbiAgICB2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICB2YXIgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgIHZhciBpZGVudGlmaWVyID0gXCJcIi5jb25jYXQoaWQsIFwiIFwiKS5jb25jYXQoY291bnQpO1xuICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgIHZhciBvYmogPSB7XG4gICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgIHNvdXJjZU1hcDogaXRlbVszXVxuICAgIH07XG5cbiAgICBpZiAoaW5kZXggIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRvbVtpbmRleF0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5Eb21baW5kZXhdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc3R5bGVzSW5Eb20ucHVzaCh7XG4gICAgICAgIGlkZW50aWZpZXI6IGlkZW50aWZpZXIsXG4gICAgICAgIHVwZGF0ZXI6IGFkZFN0eWxlKG9iaiwgb3B0aW9ucyksXG4gICAgICAgIHJlZmVyZW5jZXM6IDFcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlkZW50aWZpZXJzLnB1c2goaWRlbnRpZmllcik7XG4gIH1cblxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBzdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJyk7XG4gIHZhciBhdHRyaWJ1dGVzID0gb3B0aW9ucy5hdHRyaWJ1dGVzIHx8IHt9O1xuXG4gIGlmICh0eXBlb2YgYXR0cmlidXRlcy5ub25jZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09ICd1bmRlZmluZWQnID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuXG4gICAgaWYgKG5vbmNlKSB7XG4gICAgICBhdHRyaWJ1dGVzLm5vbmNlID0gbm9uY2U7XG4gICAgfVxuICB9XG5cbiAgT2JqZWN0LmtleXMoYXR0cmlidXRlcykuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgc3R5bGUuc2V0QXR0cmlidXRlKGtleSwgYXR0cmlidXRlc1trZXldKTtcbiAgfSk7XG5cbiAgaWYgKHR5cGVvZiBvcHRpb25zLmluc2VydCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIG9wdGlvbnMuaW5zZXJ0KHN0eWxlKTtcbiAgfSBlbHNlIHtcbiAgICB2YXIgdGFyZ2V0ID0gZ2V0VGFyZ2V0KG9wdGlvbnMuaW5zZXJ0IHx8ICdoZWFkJyk7XG5cbiAgICBpZiAoIXRhcmdldCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgICB9XG5cbiAgICB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xuICB9XG5cbiAgcmV0dXJuIHN0eWxlO1xufVxuXG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGUpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZS5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgc3R5bGUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZSk7XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG52YXIgcmVwbGFjZVRleHQgPSBmdW5jdGlvbiByZXBsYWNlVGV4dCgpIHtcbiAgdmFyIHRleHRTdG9yZSA9IFtdO1xuICByZXR1cm4gZnVuY3Rpb24gcmVwbGFjZShpbmRleCwgcmVwbGFjZW1lbnQpIHtcbiAgICB0ZXh0U3RvcmVbaW5kZXhdID0gcmVwbGFjZW1lbnQ7XG4gICAgcmV0dXJuIHRleHRTdG9yZS5maWx0ZXIoQm9vbGVhbikuam9pbignXFxuJyk7XG4gIH07XG59KCk7XG5cbmZ1bmN0aW9uIGFwcGx5VG9TaW5nbGV0b25UYWcoc3R5bGUsIGluZGV4LCByZW1vdmUsIG9iaikge1xuICB2YXIgY3NzID0gcmVtb3ZlID8gJycgOiBvYmoubWVkaWEgPyBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpLmNvbmNhdChvYmouY3NzLCBcIn1cIikgOiBvYmouY3NzOyAvLyBGb3Igb2xkIElFXG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuXG4gIGlmIChzdHlsZS5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGUuc3R5bGVTaGVldC5jc3NUZXh0ID0gcmVwbGFjZVRleHQoaW5kZXgsIGNzcyk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIGNzc05vZGUgPSBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpO1xuICAgIHZhciBjaGlsZE5vZGVzID0gc3R5bGUuY2hpbGROb2RlcztcblxuICAgIGlmIChjaGlsZE5vZGVzW2luZGV4XSkge1xuICAgICAgc3R5bGUucmVtb3ZlQ2hpbGQoY2hpbGROb2Rlc1tpbmRleF0pO1xuICAgIH1cblxuICAgIGlmIChjaGlsZE5vZGVzLmxlbmd0aCkge1xuICAgICAgc3R5bGUuaW5zZXJ0QmVmb3JlKGNzc05vZGUsIGNoaWxkTm9kZXNbaW5kZXhdKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc3R5bGUuYXBwZW5kQ2hpbGQoY3NzTm9kZSk7XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIGFwcGx5VG9UYWcoc3R5bGUsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gb2JqLmNzcztcbiAgdmFyIG1lZGlhID0gb2JqLm1lZGlhO1xuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcblxuICBpZiAobWVkaWEpIHtcbiAgICBzdHlsZS5zZXRBdHRyaWJ1dGUoJ21lZGlhJywgbWVkaWEpO1xuICB9IGVsc2Uge1xuICAgIHN0eWxlLnJlbW92ZUF0dHJpYnV0ZSgnbWVkaWEnKTtcbiAgfVxuXG4gIGlmIChzb3VyY2VNYXAgJiYgYnRvYSkge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9IC8vIEZvciBvbGQgSUVcblxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG5cblxuICBpZiAoc3R5bGUuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGUuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGUucmVtb3ZlQ2hpbGQoc3R5bGUuZmlyc3RDaGlsZCk7XG4gICAgfVxuXG4gICAgc3R5bGUuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cblxudmFyIHNpbmdsZXRvbiA9IG51bGw7XG52YXIgc2luZ2xldG9uQ291bnRlciA9IDA7XG5cbmZ1bmN0aW9uIGFkZFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgc3R5bGU7XG4gIHZhciB1cGRhdGU7XG4gIHZhciByZW1vdmU7XG5cbiAgaWYgKG9wdGlvbnMuc2luZ2xldG9uKSB7XG4gICAgdmFyIHN0eWxlSW5kZXggPSBzaW5nbGV0b25Db3VudGVyKys7XG4gICAgc3R5bGUgPSBzaW5nbGV0b24gfHwgKHNpbmdsZXRvbiA9IGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSk7XG4gICAgdXBkYXRlID0gYXBwbHlUb1NpbmdsZXRvblRhZy5iaW5kKG51bGwsIHN0eWxlLCBzdHlsZUluZGV4LCBmYWxzZSk7XG4gICAgcmVtb3ZlID0gYXBwbHlUb1NpbmdsZXRvblRhZy5iaW5kKG51bGwsIHN0eWxlLCBzdHlsZUluZGV4LCB0cnVlKTtcbiAgfSBlbHNlIHtcbiAgICBzdHlsZSA9IGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgICB1cGRhdGUgPSBhcHBseVRvVGFnLmJpbmQobnVsbCwgc3R5bGUsIG9wdGlvbnMpO1xuXG4gICAgcmVtb3ZlID0gZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKTtcbiAgICB9O1xuICB9XG5cbiAgdXBkYXRlKG9iaik7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGVTdHlsZShuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlbW92ZSgpO1xuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTsgLy8gRm9yY2Ugc2luZ2xlLXRhZyBzb2x1dGlvbiBvbiBJRTYtOSwgd2hpY2ggaGFzIGEgaGFyZCBsaW1pdCBvbiB0aGUgIyBvZiA8c3R5bGU+XG4gIC8vIHRhZ3MgaXQgd2lsbCBhbGxvdyBvbiBhIHBhZ2VcblxuICBpZiAoIW9wdGlvbnMuc2luZ2xldG9uICYmIHR5cGVvZiBvcHRpb25zLnNpbmdsZXRvbiAhPT0gJ2Jvb2xlYW4nKSB7XG4gICAgb3B0aW9ucy5zaW5nbGV0b24gPSBpc09sZElFKCk7XG4gIH1cblxuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG5cbiAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG5ld0xpc3QpICE9PSAnW29iamVjdCBBcnJheV0nKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRvbVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cblxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcblxuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcblxuICAgICAgaWYgKHN0eWxlc0luRG9tW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRvbVtfaW5kZXhdLnVwZGF0ZXIoKTtcblxuICAgICAgICBzdHlsZXNJbkRvbS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsIi8vIEltcG9ydHNcbnZhciBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKTtcbmV4cG9ydHMgPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuQmxvY2tlZHt3aWR0aDoxMDB2dztoZWlnaHQ6MTAwdmg7b3ZlcmZsb3c6aGlkZGVuO2JhY2tncm91bmQtc2l6ZTpjb3Zlcn0uQmxvY2tlZCBoMSwuQmxvY2tlZCBoMnttYXgtd2lkdGg6ODAlO3RleHQtYWxpZ246Y2VudGVyO2xpbmUtaGVpZ2h0OjMwcHg7Ym94LXNpemluZzpib3JkZXItYm94O3BhZGRpbmc6MjBweDttYXJnaW46MCBhdXRvO2NvbG9yOiNmZmY7Zm9udC1zaXplOjI0cHh9LkJsb2NrZWQgaDJ7Y29sb3I6Z29sZDttaW4taGVpZ2h0OjMwcHh9LkJsb2NrZWQgLmhlYWRlciwuQmxvY2tlZCAuZm9vdGVye3dpZHRoOjEwMHZ3O21pbi1oZWlnaHQ6MTAwcHg7aGVpZ2h0OmF1dG87b3ZlcmZsb3c6YXV0bztiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMzksMzksMzksMC45KTtwb3NpdGlvbjphYnNvbHV0ZTtsZWZ0OjB9LkJsb2NrZWQgLmhlYWRlcnt0b3A6MH0uQmxvY2tlZCAuZm9vdGVye2JvdHRvbTowfS5CbG9ja2VkIC5mb290ZXIgYXtkaXNwbGF5OmJsb2NrO3dpZHRoOjMwMHB4O21hcmdpbjozMHB4IGF1dG87YmFja2dyb3VuZC1jb2xvcjpnb2xkO2NvbG9yOnJnYmEoMzksMzksMzksMC45KTtib3gtc2l6aW5nOmJvcmRlci1ib3g7cGFkZGluZzoxMHB4IDMwcHg7dGV4dC1hbGlnbjpjZW50ZXI7bGluZS1oZWlnaHQ6MzBweDtib3JkZXItcmFkaXVzOjVweDtib3JkZXI6bm9uZTt0ZXh0LWRlY29yYXRpb246bm9uZTtmb250LXNpemU6MjFweDt0cmFuc2l0aW9uLWR1cmF0aW9uOjMwMG1zO2JveC1zaGFkb3c6MHB4IDBweCA4cHggdHJhbnNwYXJlbnR9LkJsb2NrZWQgLmZvb3RlciBhOmhvdmVye2JveC1zaGFkb3c6MHB4IDBweCA4cHggZ29sZH1cXG5cIiwgXCJcIl0pO1xuLy8gRXhwb3J0c1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG4vLyBjc3MgYmFzZSBjb2RlLCBpbmplY3RlZCBieSB0aGUgY3NzLWxvYWRlclxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHVzZVNvdXJjZU1hcCkge1xuICB2YXIgbGlzdCA9IFtdOyAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG5cbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCk7XG5cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIHJldHVybiBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoY29udGVudCwgXCJ9XCIpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKCcnKTtcbiAgfTsgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcblxuXG4gIGxpc3QuaSA9IGZ1bmN0aW9uIChtb2R1bGVzLCBtZWRpYVF1ZXJ5LCBkZWR1cGUpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09ICdzdHJpbmcnKSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsICcnXV07XG4gICAgfVxuXG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcblxuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWRlc3RydWN0dXJpbmdcbiAgICAgICAgdmFyIGlkID0gdGhpc1tpXVswXTtcblxuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBtb2R1bGVzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfaV0pO1xuXG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnRpbnVlXG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuXG4gICAgICBpZiAobWVkaWFRdWVyeSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWFRdWVyeTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzJdID0gXCJcIi5jb25jYXQobWVkaWFRdWVyeSwgXCIgYW5kIFwiKS5jb25jYXQoaXRlbVsyXSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gbGlzdDtcbn07XG5cbmZ1bmN0aW9uIGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXSB8fCAnJzsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1kZXN0cnVjdHVyaW5nXG5cbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuXG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG5cbiAgaWYgKHVzZVNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gdG9Db21tZW50KGNzc01hcHBpbmcpO1xuICAgIHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbiAoc291cmNlKSB7XG4gICAgICByZXR1cm4gXCIvKiMgc291cmNlVVJMPVwiLmNvbmNhdChjc3NNYXBwaW5nLnNvdXJjZVJvb3QgfHwgJycpLmNvbmNhdChzb3VyY2UsIFwiICovXCIpO1xuICAgIH0pO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oJ1xcbicpO1xuICB9XG5cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKCdcXG4nKTtcbn0gLy8gQWRhcHRlZCBmcm9tIGNvbnZlcnQtc291cmNlLW1hcCAoTUlUKVxuXG5cbmZ1bmN0aW9uIHRvQ29tbWVudChzb3VyY2VNYXApIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmXG4gIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpO1xuICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gIHJldHVybiBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG59Il0sInNvdXJjZVJvb3QiOiIifQ==