!function(e){var t={};function n(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(r,i,function(t){return e[t]}.bind(null,i));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=133)}([function(e,t,n){var r=n(2),i=n(18),a=n(11),o=n(12),l=n(19),s=function(e,t,n){var u,c,f,d,p=e&s.F,m=e&s.G,h=e&s.S,g=e&s.P,v=e&s.B,y=m?r:h?r[t]||(r[t]={}):(r[t]||{}).prototype,b=m?i:i[t]||(i[t]={}),w=b.prototype||(b.prototype={});for(u in m&&(n=t),n)f=((c=!p&&y&&void 0!==y[u])?y:n)[u],d=v&&c?l(f,r):g&&"function"==typeof f?l(Function.call,f):f,y&&o(y,u,f,e&s.U),b[u]!=f&&a(b,u,d),g&&w[u]!=f&&(w[u]=f)};r.core=i,s.F=1,s.G=2,s.S=4,s.P=8,s.B=16,s.W=32,s.U=64,s.R=128,e.exports=s},function(e,t,n){var r=n(4);e.exports=function(e){if(!r(e))throw TypeError(e+" is not an object!");return e}},function(e,t){var n=e.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=n)},function(e,t){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,t){e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},function(e,t,n){var r=n(47)("wks"),i=n(33),a=n(2).Symbol,o="function"==typeof a;(e.exports=function(e){return r[e]||(r[e]=o&&a[e]||(o?a:i)("Symbol."+e))}).store=r},function(e,t,n){var r=n(21),i=Math.min;e.exports=function(e){return e>0?i(r(e),9007199254740991):0}},function(e,t,n){e.exports=!n(3)((function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a}))},function(e,t,n){var r=n(1),i=n(96),a=n(23),o=Object.defineProperty;t.f=n(7)?Object.defineProperty:function(e,t,n){if(r(e),t=a(t,!0),r(n),i)try{return o(e,t,n)}catch(e){}if("get"in n||"set"in n)throw TypeError("Accessors not supported!");return"value"in n&&(e[t]=n.value),e}},function(e,t,n){var r=n(24);e.exports=function(e){return Object(r(e))}},function(e,t){e.exports=function(e){if("function"!=typeof e)throw TypeError(e+" is not a function!");return e}},function(e,t,n){var r=n(8),i=n(32);e.exports=n(7)?function(e,t,n){return r.f(e,t,i(1,n))}:function(e,t,n){return e[t]=n,e}},function(e,t,n){var r=n(2),i=n(11),a=n(14),o=n(33)("src"),l=n(137),s=(""+l).split("toString");n(18).inspectSource=function(e){return l.call(e)},(e.exports=function(e,t,n,l){var u="function"==typeof n;u&&(a(n,"name")||i(n,"name",t)),e[t]!==n&&(u&&(a(n,o)||i(n,o,e[t]?""+e[t]:s.join(String(t)))),e===r?e[t]=n:l?e[t]?e[t]=n:i(e,t,n):(delete e[t],i(e,t,n)))})(Function.prototype,"toString",(function(){return"function"==typeof this&&this[o]||l.call(this)}))},function(e,t,n){var r=n(0),i=n(3),a=n(24),o=/"/g,l=function(e,t,n,r){var i=String(a(e)),l="<"+t;return""!==n&&(l+=" "+n+'="'+String(r).replace(o,"&quot;")+'"'),l+">"+i+"</"+t+">"};e.exports=function(e,t){var n={};n[e]=t(l),r(r.P+r.F*i((function(){var t=""[e]('"');return t!==t.toLowerCase()||t.split('"').length>3})),"String",n)}},function(e,t){var n={}.hasOwnProperty;e.exports=function(e,t){return n.call(e,t)}},function(e,t,n){var r=n(48),i=n(24);e.exports=function(e){return r(i(e))}},function(e,t,n){var r=n(49),i=n(32),a=n(15),o=n(23),l=n(14),s=n(96),u=Object.getOwnPropertyDescriptor;t.f=n(7)?u:function(e,t){if(e=a(e),t=o(t,!0),s)try{return u(e,t)}catch(e){}if(l(e,t))return i(!r.f.call(e,t),e[t])}},function(e,t,n){var r=n(14),i=n(9),a=n(70)("IE_PROTO"),o=Object.prototype;e.exports=Object.getPrototypeOf||function(e){return e=i(e),r(e,a)?e[a]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?o:null}},function(e,t){var n=e.exports={version:"2.6.11"};"number"==typeof __e&&(__e=n)},function(e,t,n){var r=n(10);e.exports=function(e,t,n){if(r(e),void 0===t)return e;switch(n){case 1:return function(n){return e.call(t,n)};case 2:return function(n,r){return e.call(t,n,r)};case 3:return function(n,r,i){return e.call(t,n,r,i)}}return function(){return e.apply(t,arguments)}}},function(e,t){var n={}.toString;e.exports=function(e){return n.call(e).slice(8,-1)}},function(e,t){var n=Math.ceil,r=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?r:n)(e)}},function(e,t,n){"use strict";var r=n(3);e.exports=function(e,t){return!!e&&r((function(){t?e.call(null,(function(){}),1):e.call(null)}))}},function(e,t,n){var r=n(4);e.exports=function(e,t){if(!r(e))return e;var n,i;if(t&&"function"==typeof(n=e.toString)&&!r(i=n.call(e)))return i;if("function"==typeof(n=e.valueOf)&&!r(i=n.call(e)))return i;if(!t&&"function"==typeof(n=e.toString)&&!r(i=n.call(e)))return i;throw TypeError("Can't convert object to primitive value")}},function(e,t){e.exports=function(e){if(null==e)throw TypeError("Can't call method on  "+e);return e}},function(e,t,n){var r=n(0),i=n(18),a=n(3);e.exports=function(e,t){var n=(i.Object||{})[e]||Object[e],o={};o[e]=t(n),r(r.S+r.F*a((function(){n(1)})),"Object",o)}},function(e,t,n){var r=n(19),i=n(48),a=n(9),o=n(6),l=n(86);e.exports=function(e,t){var n=1==e,s=2==e,u=3==e,c=4==e,f=6==e,d=5==e||f,p=t||l;return function(t,l,m){for(var h,g,v=a(t),y=i(v),b=r(l,m,3),w=o(y.length),k=0,_=n?p(t,w):s?p(t,0):void 0;w>k;k++)if((d||k in y)&&(g=b(h=y[k],k,v),e))if(n)_[k]=g;else if(g)switch(e){case 3:return!0;case 5:return h;case 6:return k;case 2:_.push(h)}else if(c)return!1;return f?-1:u||c?c:_}}},function(e,t,n){"use strict";if(n(7)){var r=n(29),i=n(2),a=n(3),o=n(0),l=n(63),s=n(94),u=n(19),c=n(39),f=n(32),d=n(11),p=n(41),m=n(21),h=n(6),g=n(124),v=n(35),y=n(23),b=n(14),w=n(44),k=n(4),_=n(9),E=n(83),x=n(36),z=n(17),S=n(37).f,T=n(85),N=n(33),P=n(5),j=n(26),C=n(53),I=n(51),M=n(88),O=n(46),D=n(58),L=n(38),A=n(87),F=n(113),B=n(8),R=n(16),W=B.f,U=R.f,H=i.RangeError,V=i.TypeError,K=i.Uint8Array,$=Array.prototype,Q=s.ArrayBuffer,q=s.DataView,G=j(0),J=j(2),Z=j(3),Y=j(4),X=j(5),ee=j(6),te=C(!0),ne=C(!1),re=M.values,ie=M.keys,ae=M.entries,oe=$.lastIndexOf,le=$.reduce,se=$.reduceRight,ue=$.join,ce=$.sort,fe=$.slice,de=$.toString,pe=$.toLocaleString,me=P("iterator"),he=P("toStringTag"),ge=N("typed_constructor"),ve=N("def_constructor"),ye=l.CONSTR,be=l.TYPED,we=l.VIEW,ke=j(1,(function(e,t){return Se(I(e,e[ve]),t)})),_e=a((function(){return 1===new K(new Uint16Array([1]).buffer)[0]})),Ee=!!K&&!!K.prototype.set&&a((function(){new K(1).set({})})),xe=function(e,t){var n=m(e);if(n<0||n%t)throw H("Wrong offset!");return n},ze=function(e){if(k(e)&&be in e)return e;throw V(e+" is not a typed array!")},Se=function(e,t){if(!k(e)||!(ge in e))throw V("It is not a typed array constructor!");return new e(t)},Te=function(e,t){return Ne(I(e,e[ve]),t)},Ne=function(e,t){for(var n=0,r=t.length,i=Se(e,r);r>n;)i[n]=t[n++];return i},Pe=function(e,t,n){W(e,t,{get:function(){return this._d[n]}})},je=function(e){var t,n,r,i,a,o,l=_(e),s=arguments.length,c=s>1?arguments[1]:void 0,f=void 0!==c,d=T(l);if(null!=d&&!E(d)){for(o=d.call(l),r=[],t=0;!(a=o.next()).done;t++)r.push(a.value);l=r}for(f&&s>2&&(c=u(c,arguments[2],2)),t=0,n=h(l.length),i=Se(this,n);n>t;t++)i[t]=f?c(l[t],t):l[t];return i},Ce=function(){for(var e=0,t=arguments.length,n=Se(this,t);t>e;)n[e]=arguments[e++];return n},Ie=!!K&&a((function(){pe.call(new K(1))})),Me=function(){return pe.apply(Ie?fe.call(ze(this)):ze(this),arguments)},Oe={copyWithin:function(e,t){return F.call(ze(this),e,t,arguments.length>2?arguments[2]:void 0)},every:function(e){return Y(ze(this),e,arguments.length>1?arguments[1]:void 0)},fill:function(e){return A.apply(ze(this),arguments)},filter:function(e){return Te(this,J(ze(this),e,arguments.length>1?arguments[1]:void 0))},find:function(e){return X(ze(this),e,arguments.length>1?arguments[1]:void 0)},findIndex:function(e){return ee(ze(this),e,arguments.length>1?arguments[1]:void 0)},forEach:function(e){G(ze(this),e,arguments.length>1?arguments[1]:void 0)},indexOf:function(e){return ne(ze(this),e,arguments.length>1?arguments[1]:void 0)},includes:function(e){return te(ze(this),e,arguments.length>1?arguments[1]:void 0)},join:function(e){return ue.apply(ze(this),arguments)},lastIndexOf:function(e){return oe.apply(ze(this),arguments)},map:function(e){return ke(ze(this),e,arguments.length>1?arguments[1]:void 0)},reduce:function(e){return le.apply(ze(this),arguments)},reduceRight:function(e){return se.apply(ze(this),arguments)},reverse:function(){for(var e,t=ze(this).length,n=Math.floor(t/2),r=0;r<n;)e=this[r],this[r++]=this[--t],this[t]=e;return this},some:function(e){return Z(ze(this),e,arguments.length>1?arguments[1]:void 0)},sort:function(e){return ce.call(ze(this),e)},subarray:function(e,t){var n=ze(this),r=n.length,i=v(e,r);return new(I(n,n[ve]))(n.buffer,n.byteOffset+i*n.BYTES_PER_ELEMENT,h((void 0===t?r:v(t,r))-i))}},De=function(e,t){return Te(this,fe.call(ze(this),e,t))},Le=function(e){ze(this);var t=xe(arguments[1],1),n=this.length,r=_(e),i=h(r.length),a=0;if(i+t>n)throw H("Wrong length!");for(;a<i;)this[t+a]=r[a++]},Ae={entries:function(){return ae.call(ze(this))},keys:function(){return ie.call(ze(this))},values:function(){return re.call(ze(this))}},Fe=function(e,t){return k(e)&&e[be]&&"symbol"!=typeof t&&t in e&&String(+t)==String(t)},Be=function(e,t){return Fe(e,t=y(t,!0))?f(2,e[t]):U(e,t)},Re=function(e,t,n){return!(Fe(e,t=y(t,!0))&&k(n)&&b(n,"value"))||b(n,"get")||b(n,"set")||n.configurable||b(n,"writable")&&!n.writable||b(n,"enumerable")&&!n.enumerable?W(e,t,n):(e[t]=n.value,e)};ye||(R.f=Be,B.f=Re),o(o.S+o.F*!ye,"Object",{getOwnPropertyDescriptor:Be,defineProperty:Re}),a((function(){de.call({})}))&&(de=pe=function(){return ue.call(this)});var We=p({},Oe);p(We,Ae),d(We,me,Ae.values),p(We,{slice:De,set:Le,constructor:function(){},toString:de,toLocaleString:Me}),Pe(We,"buffer","b"),Pe(We,"byteOffset","o"),Pe(We,"byteLength","l"),Pe(We,"length","e"),W(We,he,{get:function(){return this[be]}}),e.exports=function(e,t,n,s){var u=e+((s=!!s)?"Clamped":"")+"Array",f="get"+e,p="set"+e,m=i[u],v=m||{},y=m&&z(m),b=!m||!l.ABV,_={},E=m&&m.prototype,T=function(e,n){W(e,n,{get:function(){return function(e,n){var r=e._d;return r.v[f](n*t+r.o,_e)}(this,n)},set:function(e){return function(e,n,r){var i=e._d;s&&(r=(r=Math.round(r))<0?0:r>255?255:255&r),i.v[p](n*t+i.o,r,_e)}(this,n,e)},enumerable:!0})};b?(m=n((function(e,n,r,i){c(e,m,u,"_d");var a,o,l,s,f=0,p=0;if(k(n)){if(!(n instanceof Q||"ArrayBuffer"==(s=w(n))||"SharedArrayBuffer"==s))return be in n?Ne(m,n):je.call(m,n);a=n,p=xe(r,t);var v=n.byteLength;if(void 0===i){if(v%t)throw H("Wrong length!");if((o=v-p)<0)throw H("Wrong length!")}else if((o=h(i)*t)+p>v)throw H("Wrong length!");l=o/t}else l=g(n),a=new Q(o=l*t);for(d(e,"_d",{b:a,o:p,l:o,e:l,v:new q(a)});f<l;)T(e,f++)})),E=m.prototype=x(We),d(E,"constructor",m)):a((function(){m(1)}))&&a((function(){new m(-1)}))&&D((function(e){new m,new m(null),new m(1.5),new m(e)}),!0)||(m=n((function(e,n,r,i){var a;return c(e,m,u),k(n)?n instanceof Q||"ArrayBuffer"==(a=w(n))||"SharedArrayBuffer"==a?void 0!==i?new v(n,xe(r,t),i):void 0!==r?new v(n,xe(r,t)):new v(n):be in n?Ne(m,n):je.call(m,n):new v(g(n))})),G(y!==Function.prototype?S(v).concat(S(y)):S(v),(function(e){e in m||d(m,e,v[e])})),m.prototype=E,r||(E.constructor=m));var N=E[me],P=!!N&&("values"==N.name||null==N.name),j=Ae.values;d(m,ge,!0),d(E,be,u),d(E,we,!0),d(E,ve,m),(s?new m(1)[he]==u:he in E)||W(E,he,{get:function(){return u}}),_[u]=m,o(o.G+o.W+o.F*(m!=v),_),o(o.S,u,{BYTES_PER_ELEMENT:t}),o(o.S+o.F*a((function(){v.of.call(m,1)})),u,{from:je,of:Ce}),"BYTES_PER_ELEMENT"in E||d(E,"BYTES_PER_ELEMENT",t),o(o.P,u,Oe),L(u),o(o.P+o.F*Ee,u,{set:Le}),o(o.P+o.F*!P,u,Ae),r||E.toString==de||(E.toString=de),o(o.P+o.F*a((function(){new m(1).slice()})),u,{slice:De}),o(o.P+o.F*(a((function(){return[1,2].toLocaleString()!=new m([1,2]).toLocaleString()}))||!a((function(){E.toLocaleString.call([1,2])}))),u,{toLocaleString:Me}),O[u]=P?N:j,r||P||d(E,me,j)}}else e.exports=function(){}},function(e,t,n){var r=n(119),i=n(0),a=n(47)("metadata"),o=a.store||(a.store=new(n(122))),l=function(e,t,n){var i=o.get(e);if(!i){if(!n)return;o.set(e,i=new r)}var a=i.get(t);if(!a){if(!n)return;i.set(t,a=new r)}return a};e.exports={store:o,map:l,has:function(e,t,n){var r=l(t,n,!1);return void 0!==r&&r.has(e)},get:function(e,t,n){var r=l(t,n,!1);return void 0===r?void 0:r.get(e)},set:function(e,t,n,r){l(n,r,!0).set(e,t)},keys:function(e,t){var n=l(e,t,!1),r=[];return n&&n.forEach((function(e,t){r.push(t)})),r},key:function(e){return void 0===e||"symbol"==typeof e?e:String(e)},exp:function(e){i(i.S,"Reflect",e)}}},function(e,t){e.exports=!1},function(e,t,n){var r=n(33)("meta"),i=n(4),a=n(14),o=n(8).f,l=0,s=Object.isExtensible||function(){return!0},u=!n(3)((function(){return s(Object.preventExtensions({}))})),c=function(e){o(e,r,{value:{i:"O"+ ++l,w:{}}})},f=e.exports={KEY:r,NEED:!1,fastKey:function(e,t){if(!i(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!a(e,r)){if(!s(e))return"F";if(!t)return"E";c(e)}return e[r].i},getWeak:function(e,t){if(!a(e,r)){if(!s(e))return!0;if(!t)return!1;c(e)}return e[r].w},onFreeze:function(e){return u&&f.NEED&&s(e)&&!a(e,r)&&c(e),e}}},function(e,t,n){var r=n(5)("unscopables"),i=Array.prototype;null==i[r]&&n(11)(i,r,{}),e.exports=function(e){i[r][e]=!0}},function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},function(e,t){var n=0,r=Math.random();e.exports=function(e){return"Symbol(".concat(void 0===e?"":e,")_",(++n+r).toString(36))}},function(e,t,n){var r=n(98),i=n(71);e.exports=Object.keys||function(e){return r(e,i)}},function(e,t,n){var r=n(21),i=Math.max,a=Math.min;e.exports=function(e,t){return(e=r(e))<0?i(e+t,0):a(e,t)}},function(e,t,n){var r=n(1),i=n(99),a=n(71),o=n(70)("IE_PROTO"),l=function(){},s=function(){var e,t=n(68)("iframe"),r=a.length;for(t.style.display="none",n(72).appendChild(t),t.src="javascript:",(e=t.contentWindow.document).open(),e.write("<script>document.F=Object<\/script>"),e.close(),s=e.F;r--;)delete s.prototype[a[r]];return s()};e.exports=Object.create||function(e,t){var n;return null!==e?(l.prototype=r(e),n=new l,l.prototype=null,n[o]=e):n=s(),void 0===t?n:i(n,t)}},function(e,t,n){var r=n(98),i=n(71).concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return r(e,i)}},function(e,t,n){"use strict";var r=n(2),i=n(8),a=n(7),o=n(5)("species");e.exports=function(e){var t=r[e];a&&t&&!t[o]&&i.f(t,o,{configurable:!0,get:function(){return this}})}},function(e,t){e.exports=function(e,t,n,r){if(!(e instanceof t)||void 0!==r&&r in e)throw TypeError(n+": incorrect invocation!");return e}},function(e,t,n){var r=n(19),i=n(111),a=n(83),o=n(1),l=n(6),s=n(85),u={},c={};(t=e.exports=function(e,t,n,f,d){var p,m,h,g,v=d?function(){return e}:s(e),y=r(n,f,t?2:1),b=0;if("function"!=typeof v)throw TypeError(e+" is not iterable!");if(a(v)){for(p=l(e.length);p>b;b++)if((g=t?y(o(m=e[b])[0],m[1]):y(e[b]))===u||g===c)return g}else for(h=v.call(e);!(m=h.next()).done;)if((g=i(h,y,m.value,t))===u||g===c)return g}).BREAK=u,t.RETURN=c},function(e,t,n){var r=n(12);e.exports=function(e,t,n){for(var i in t)r(e,i,t[i],n);return e}},function(e,t,n){var r=n(4);e.exports=function(e,t){if(!r(e)||e._t!==t)throw TypeError("Incompatible receiver, "+t+" required!");return e}},function(e,t,n){var r=n(8).f,i=n(14),a=n(5)("toStringTag");e.exports=function(e,t,n){e&&!i(e=n?e:e.prototype,a)&&r(e,a,{configurable:!0,value:t})}},function(e,t,n){var r=n(20),i=n(5)("toStringTag"),a="Arguments"==r(function(){return arguments}());e.exports=function(e){var t,n,o;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(e){}}(t=Object(e),i))?n:a?r(t):"Object"==(o=r(t))&&"function"==typeof t.callee?"Arguments":o}},function(e,t,n){var r=n(0),i=n(24),a=n(3),o=n(74),l="["+o+"]",s=RegExp("^"+l+l+"*"),u=RegExp(l+l+"*$"),c=function(e,t,n){var i={},l=a((function(){return!!o[e]()||"​"!="​"[e]()})),s=i[e]=l?t(f):o[e];n&&(i[n]=s),r(r.P+r.F*l,"String",i)},f=c.trim=function(e,t){return e=String(i(e)),1&t&&(e=e.replace(s,"")),2&t&&(e=e.replace(u,"")),e};e.exports=c},function(e,t){e.exports={}},function(e,t,n){var r=n(18),i=n(2),a=i["__core-js_shared__"]||(i["__core-js_shared__"]={});(e.exports=function(e,t){return a[e]||(a[e]=void 0!==t?t:{})})("versions",[]).push({version:r.version,mode:n(29)?"pure":"global",copyright:"© 2019 Denis Pushkarev (zloirock.ru)"})},function(e,t,n){var r=n(20);e.exports=Object("z").propertyIsEnumerable(0)?Object:function(e){return"String"==r(e)?e.split(""):Object(e)}},function(e,t){t.f={}.propertyIsEnumerable},function(e,t,n){"use strict";var r=n(1);e.exports=function(){var e=r(this),t="";return e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),e.unicode&&(t+="u"),e.sticky&&(t+="y"),t}},function(e,t,n){var r=n(1),i=n(10),a=n(5)("species");e.exports=function(e,t){var n,o=r(e).constructor;return void 0===o||null==(n=r(o)[a])?t:i(n)}},function(e,t,n){"use strict";e.exports=n(337)},function(e,t,n){var r=n(15),i=n(6),a=n(35);e.exports=function(e){return function(t,n,o){var l,s=r(t),u=i(s.length),c=a(o,u);if(e&&n!=n){for(;u>c;)if((l=s[c++])!=l)return!0}else for(;u>c;c++)if((e||c in s)&&s[c]===n)return e||c||0;return!e&&-1}}},function(e,t){t.f=Object.getOwnPropertySymbols},function(e,t,n){var r=n(20);e.exports=Array.isArray||function(e){return"Array"==r(e)}},function(e,t,n){var r=n(21),i=n(24);e.exports=function(e){return function(t,n){var a,o,l=String(i(t)),s=r(n),u=l.length;return s<0||s>=u?e?"":void 0:(a=l.charCodeAt(s))<55296||a>56319||s+1===u||(o=l.charCodeAt(s+1))<56320||o>57343?e?l.charAt(s):a:e?l.slice(s,s+2):o-56320+(a-55296<<10)+65536}}},function(e,t,n){var r=n(4),i=n(20),a=n(5)("match");e.exports=function(e){var t;return r(e)&&(void 0!==(t=e[a])?!!t:"RegExp"==i(e))}},function(e,t,n){var r=n(5)("iterator"),i=!1;try{var a=[7][r]();a.return=function(){i=!0},Array.from(a,(function(){throw 2}))}catch(e){}e.exports=function(e,t){if(!t&&!i)return!1;var n=!1;try{var a=[7],o=a[r]();o.next=function(){return{done:n=!0}},a[r]=function(){return o},e(a)}catch(e){}return n}},function(e,t,n){"use strict";var r=n(44),i=RegExp.prototype.exec;e.exports=function(e,t){var n=e.exec;if("function"==typeof n){var a=n.call(e,t);if("object"!=typeof a)throw new TypeError("RegExp exec method returned something other than an Object or null");return a}if("RegExp"!==r(e))throw new TypeError("RegExp#exec called on incompatible receiver");return i.call(e,t)}},function(e,t,n){"use strict";n(115);var r=n(12),i=n(11),a=n(3),o=n(24),l=n(5),s=n(89),u=l("species"),c=!a((function(){var e=/./;return e.exec=function(){var e=[];return e.groups={a:"7"},e},"7"!=="".replace(e,"$<a>")})),f=function(){var e=/(?:)/,t=e.exec;e.exec=function(){return t.apply(this,arguments)};var n="ab".split(e);return 2===n.length&&"a"===n[0]&&"b"===n[1]}();e.exports=function(e,t,n){var d=l(e),p=!a((function(){var t={};return t[d]=function(){return 7},7!=""[e](t)})),m=p?!a((function(){var t=!1,n=/a/;return n.exec=function(){return t=!0,null},"split"===e&&(n.constructor={},n.constructor[u]=function(){return n}),n[d](""),!t})):void 0;if(!p||!m||"replace"===e&&!c||"split"===e&&!f){var h=/./[d],g=n(o,d,""[e],(function(e,t,n,r,i){return t.exec===s?p&&!i?{done:!0,value:h.call(t,n,r)}:{done:!0,value:e.call(n,t,r)}:{done:!1}})),v=g[0],y=g[1];r(String.prototype,e,v),i(RegExp.prototype,d,2==t?function(e,t){return y.call(e,this,t)}:function(e){return y.call(e,this)})}}},function(e,t,n){var r=n(2).navigator;e.exports=r&&r.userAgent||""},function(e,t,n){"use strict";var r=n(2),i=n(0),a=n(12),o=n(41),l=n(30),s=n(40),u=n(39),c=n(4),f=n(3),d=n(58),p=n(43),m=n(75);e.exports=function(e,t,n,h,g,v){var y=r[e],b=y,w=g?"set":"add",k=b&&b.prototype,_={},E=function(e){var t=k[e];a(k,e,"delete"==e||"has"==e?function(e){return!(v&&!c(e))&&t.call(this,0===e?0:e)}:"get"==e?function(e){return v&&!c(e)?void 0:t.call(this,0===e?0:e)}:"add"==e?function(e){return t.call(this,0===e?0:e),this}:function(e,n){return t.call(this,0===e?0:e,n),this})};if("function"==typeof b&&(v||k.forEach&&!f((function(){(new b).entries().next()})))){var x=new b,z=x[w](v?{}:-0,1)!=x,S=f((function(){x.has(1)})),T=d((function(e){new b(e)})),N=!v&&f((function(){for(var e=new b,t=5;t--;)e[w](t,t);return!e.has(-0)}));T||((b=t((function(t,n){u(t,b,e);var r=m(new y,t,b);return null!=n&&s(n,g,r[w],r),r}))).prototype=k,k.constructor=b),(S||N)&&(E("delete"),E("has"),g&&E("get")),(N||z)&&E(w),v&&k.clear&&delete k.clear}else b=h.getConstructor(t,e,g,w),o(b.prototype,n),l.NEED=!0;return p(b,e),_[e]=b,i(i.G+i.W+i.F*(b!=y),_),v||h.setStrong(b,e,g),b}},function(e,t,n){for(var r,i=n(2),a=n(11),o=n(33),l=o("typed_array"),s=o("view"),u=!(!i.ArrayBuffer||!i.DataView),c=u,f=0,d="Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array".split(",");f<9;)(r=i[d[f++]])?(a(r.prototype,l,!0),a(r.prototype,s,!0)):c=!1;e.exports={ABV:u,CONSTR:c,TYPED:l,VIEW:s}},function(e,t,n){"use strict";e.exports=n(29)||!n(3)((function(){var e=Math.random();__defineSetter__.call(null,e,(function(){})),delete n(2)[e]}))},function(e,t,n){"use strict";var r=n(0);e.exports=function(e){r(r.S,e,{of:function(){for(var e=arguments.length,t=new Array(e);e--;)t[e]=arguments[e];return new this(t)}})}},function(e,t,n){"use strict";var r=n(0),i=n(10),a=n(19),o=n(40);e.exports=function(e){r(r.S,e,{from:function(e){var t,n,r,l,s=arguments[1];return i(this),(t=void 0!==s)&&i(s),null==e?new this:(n=[],t?(r=0,l=a(s,arguments[2],2),o(e,!1,(function(e){n.push(l(e,r++))}))):o(e,!1,n.push,n),new this(n))}})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.addonRoot=t.addonPrefix=t.addonPrefixDashboardMenu=t.addonPrefixDashboard=t.addonPrefixPopup=void 0,t.addonPrefixPopup=function(){return browser.runtime.getURL("Distribution/Popup/index.html")},t.addonPrefixDashboard=function(){return browser.runtime.getURL("Distribution/Dashboard/index.html")},t.addonPrefixDashboardMenu=function(){return browser.runtime.getURL("Distribution/Dashboard/")},t.addonPrefix=function(){return browser.runtime.getURL("Distribution")},t.addonRoot=function(){return browser.runtime.getURL("")}},function(e,t,n){var r=n(4),i=n(2).document,a=r(i)&&r(i.createElement);e.exports=function(e){return a?i.createElement(e):{}}},function(e,t,n){var r=n(2),i=n(18),a=n(29),o=n(97),l=n(8).f;e.exports=function(e){var t=i.Symbol||(i.Symbol=a?{}:r.Symbol||{});"_"==e.charAt(0)||e in t||l(t,e,{value:o.f(e)})}},function(e,t,n){var r=n(47)("keys"),i=n(33);e.exports=function(e){return r[e]||(r[e]=i(e))}},function(e,t){e.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},function(e,t,n){var r=n(2).document;e.exports=r&&r.documentElement},function(e,t,n){var r=n(4),i=n(1),a=function(e,t){if(i(e),!r(t)&&null!==t)throw TypeError(t+": can't set as prototype!")};e.exports={set:Object.setPrototypeOf||("__proto__"in{}?function(e,t,r){try{(r=n(19)(Function.call,n(16).f(Object.prototype,"__proto__").set,2))(e,[]),t=!(e instanceof Array)}catch(e){t=!0}return function(e,n){return a(e,n),t?e.__proto__=n:r(e,n),e}}({},!1):void 0),check:a}},function(e,t){e.exports="\t\n\v\f\r   ᠎             　\u2028\u2029\ufeff"},function(e,t,n){var r=n(4),i=n(73).set;e.exports=function(e,t,n){var a,o=t.constructor;return o!==n&&"function"==typeof o&&(a=o.prototype)!==n.prototype&&r(a)&&i&&i(e,a),e}},function(e,t,n){"use strict";var r=n(21),i=n(24);e.exports=function(e){var t=String(i(this)),n="",a=r(e);if(a<0||a==1/0)throw RangeError("Count can't be negative");for(;a>0;(a>>>=1)&&(t+=t))1&a&&(n+=t);return n}},function(e,t){e.exports=Math.sign||function(e){return 0==(e=+e)||e!=e?e:e<0?-1:1}},function(e,t){var n=Math.expm1;e.exports=!n||n(10)>22025.465794806718||n(10)<22025.465794806718||-2e-17!=n(-2e-17)?function(e){return 0==(e=+e)?e:e>-1e-6&&e<1e-6?e+e*e/2:Math.exp(e)-1}:n},function(e,t,n){"use strict";var r=n(29),i=n(0),a=n(12),o=n(11),l=n(46),s=n(80),u=n(43),c=n(17),f=n(5)("iterator"),d=!([].keys&&"next"in[].keys()),p=function(){return this};e.exports=function(e,t,n,m,h,g,v){s(n,t,m);var y,b,w,k=function(e){if(!d&&e in z)return z[e];switch(e){case"keys":case"values":return function(){return new n(this,e)}}return function(){return new n(this,e)}},_=t+" Iterator",E="values"==h,x=!1,z=e.prototype,S=z[f]||z["@@iterator"]||h&&z[h],T=S||k(h),N=h?E?k("entries"):T:void 0,P="Array"==t&&z.entries||S;if(P&&(w=c(P.call(new e)))!==Object.prototype&&w.next&&(u(w,_,!0),r||"function"==typeof w[f]||o(w,f,p)),E&&S&&"values"!==S.name&&(x=!0,T=function(){return S.call(this)}),r&&!v||!d&&!x&&z[f]||o(z,f,T),l[t]=T,l[_]=p,h)if(y={values:E?T:k("values"),keys:g?T:k("keys"),entries:N},v)for(b in y)b in z||a(z,b,y[b]);else i(i.P+i.F*(d||x),t,y);return y}},function(e,t,n){"use strict";var r=n(36),i=n(32),a=n(43),o={};n(11)(o,n(5)("iterator"),(function(){return this})),e.exports=function(e,t,n){e.prototype=r(o,{next:i(1,n)}),a(e,t+" Iterator")}},function(e,t,n){var r=n(57),i=n(24);e.exports=function(e,t,n){if(r(t))throw TypeError("String#"+n+" doesn't accept regex!");return String(i(e))}},function(e,t,n){var r=n(5)("match");e.exports=function(e){var t=/./;try{"/./"[e](t)}catch(n){try{return t[r]=!1,!"/./"[e](t)}catch(e){}}return!0}},function(e,t,n){var r=n(46),i=n(5)("iterator"),a=Array.prototype;e.exports=function(e){return void 0!==e&&(r.Array===e||a[i]===e)}},function(e,t,n){"use strict";var r=n(8),i=n(32);e.exports=function(e,t,n){t in e?r.f(e,t,i(0,n)):e[t]=n}},function(e,t,n){var r=n(44),i=n(5)("iterator"),a=n(46);e.exports=n(18).getIteratorMethod=function(e){if(null!=e)return e[i]||e["@@iterator"]||a[r(e)]}},function(e,t,n){var r=n(226);e.exports=function(e,t){return new(r(e))(t)}},function(e,t,n){"use strict";var r=n(9),i=n(35),a=n(6);e.exports=function(e){for(var t=r(this),n=a(t.length),o=arguments.length,l=i(o>1?arguments[1]:void 0,n),s=o>2?arguments[2]:void 0,u=void 0===s?n:i(s,n);u>l;)t[l++]=e;return t}},function(e,t,n){"use strict";var r=n(31),i=n(114),a=n(46),o=n(15);e.exports=n(79)(Array,"Array",(function(e,t){this._t=o(e),this._i=0,this._k=t}),(function(){var e=this._t,t=this._k,n=this._i++;return!e||n>=e.length?(this._t=void 0,i(1)):i(0,"keys"==t?n:"values"==t?e[n]:[n,e[n]])}),"values"),a.Arguments=a.Array,r("keys"),r("values"),r("entries")},function(e,t,n){"use strict";var r,i,a=n(50),o=RegExp.prototype.exec,l=String.prototype.replace,s=o,u=(r=/a/,i=/b*/g,o.call(r,"a"),o.call(i,"a"),0!==r.lastIndex||0!==i.lastIndex),c=void 0!==/()??/.exec("")[1];(u||c)&&(s=function(e){var t,n,r,i,s=this;return c&&(n=new RegExp("^"+s.source+"$(?!\\s)",a.call(s))),u&&(t=s.lastIndex),r=o.call(s,e),u&&r&&(s.lastIndex=s.global?r.index+r[0].length:t),c&&r&&r.length>1&&l.call(r[0],n,(function(){for(i=1;i<arguments.length-2;i++)void 0===arguments[i]&&(r[i]=void 0)})),r}),e.exports=s},function(e,t,n){"use strict";var r=n(56)(!0);e.exports=function(e,t,n){return t+(n?r(e,t).length:1)}},function(e,t,n){var r,i,a,o=n(19),l=n(104),s=n(72),u=n(68),c=n(2),f=c.process,d=c.setImmediate,p=c.clearImmediate,m=c.MessageChannel,h=c.Dispatch,g=0,v={},y=function(){var e=+this;if(v.hasOwnProperty(e)){var t=v[e];delete v[e],t()}},b=function(e){y.call(e.data)};d&&p||(d=function(e){for(var t=[],n=1;arguments.length>n;)t.push(arguments[n++]);return v[++g]=function(){l("function"==typeof e?e:Function(e),t)},r(g),g},p=function(e){delete v[e]},"process"==n(20)(f)?r=function(e){f.nextTick(o(y,e,1))}:h&&h.now?r=function(e){h.now(o(y,e,1))}:m?(a=(i=new m).port2,i.port1.onmessage=b,r=o(a.postMessage,a,1)):c.addEventListener&&"function"==typeof postMessage&&!c.importScripts?(r=function(e){c.postMessage(e+"","*")},c.addEventListener("message",b,!1)):r="onreadystatechange"in u("script")?function(e){s.appendChild(u("script")).onreadystatechange=function(){s.removeChild(this),y.call(e)}}:function(e){setTimeout(o(y,e,1),0)}),e.exports={set:d,clear:p}},function(e,t,n){var r=n(2),i=n(91).set,a=r.MutationObserver||r.WebKitMutationObserver,o=r.process,l=r.Promise,s="process"==n(20)(o);e.exports=function(){var e,t,n,u=function(){var r,i;for(s&&(r=o.domain)&&r.exit();e;){i=e.fn,e=e.next;try{i()}catch(r){throw e?n():t=void 0,r}}t=void 0,r&&r.enter()};if(s)n=function(){o.nextTick(u)};else if(!a||r.navigator&&r.navigator.standalone)if(l&&l.resolve){var c=l.resolve(void 0);n=function(){c.then(u)}}else n=function(){i.call(r,u)};else{var f=!0,d=document.createTextNode("");new a(u).observe(d,{characterData:!0}),n=function(){d.data=f=!f}}return function(r){var i={fn:r,next:void 0};t&&(t.next=i),e||(e=i,n()),t=i}}},function(e,t,n){"use strict";var r=n(10);function i(e){var t,n;this.promise=new e((function(e,r){if(void 0!==t||void 0!==n)throw TypeError("Bad Promise constructor");t=e,n=r})),this.resolve=r(t),this.reject=r(n)}e.exports.f=function(e){return new i(e)}},function(e,t,n){"use strict";var r=n(2),i=n(7),a=n(29),o=n(63),l=n(11),s=n(41),u=n(3),c=n(39),f=n(21),d=n(6),p=n(124),m=n(37).f,h=n(8).f,g=n(87),v=n(43),y=r.ArrayBuffer,b=r.DataView,w=r.Math,k=r.RangeError,_=r.Infinity,E=y,x=w.abs,z=w.pow,S=w.floor,T=w.log,N=w.LN2,P=i?"_b":"buffer",j=i?"_l":"byteLength",C=i?"_o":"byteOffset";function I(e,t,n){var r,i,a,o=new Array(n),l=8*n-t-1,s=(1<<l)-1,u=s>>1,c=23===t?z(2,-24)-z(2,-77):0,f=0,d=e<0||0===e&&1/e<0?1:0;for((e=x(e))!=e||e===_?(i=e!=e?1:0,r=s):(r=S(T(e)/N),e*(a=z(2,-r))<1&&(r--,a*=2),(e+=r+u>=1?c/a:c*z(2,1-u))*a>=2&&(r++,a/=2),r+u>=s?(i=0,r=s):r+u>=1?(i=(e*a-1)*z(2,t),r+=u):(i=e*z(2,u-1)*z(2,t),r=0));t>=8;o[f++]=255&i,i/=256,t-=8);for(r=r<<t|i,l+=t;l>0;o[f++]=255&r,r/=256,l-=8);return o[--f]|=128*d,o}function M(e,t,n){var r,i=8*n-t-1,a=(1<<i)-1,o=a>>1,l=i-7,s=n-1,u=e[s--],c=127&u;for(u>>=7;l>0;c=256*c+e[s],s--,l-=8);for(r=c&(1<<-l)-1,c>>=-l,l+=t;l>0;r=256*r+e[s],s--,l-=8);if(0===c)c=1-o;else{if(c===a)return r?NaN:u?-_:_;r+=z(2,t),c-=o}return(u?-1:1)*r*z(2,c-t)}function O(e){return e[3]<<24|e[2]<<16|e[1]<<8|e[0]}function D(e){return[255&e]}function L(e){return[255&e,e>>8&255]}function A(e){return[255&e,e>>8&255,e>>16&255,e>>24&255]}function F(e){return I(e,52,8)}function B(e){return I(e,23,4)}function R(e,t,n){h(e.prototype,t,{get:function(){return this[n]}})}function W(e,t,n,r){var i=p(+n);if(i+t>e[j])throw k("Wrong index!");var a=e[P]._b,o=i+e[C],l=a.slice(o,o+t);return r?l:l.reverse()}function U(e,t,n,r,i,a){var o=p(+n);if(o+t>e[j])throw k("Wrong index!");for(var l=e[P]._b,s=o+e[C],u=r(+i),c=0;c<t;c++)l[s+c]=u[a?c:t-c-1]}if(o.ABV){if(!u((function(){y(1)}))||!u((function(){new y(-1)}))||u((function(){return new y,new y(1.5),new y(NaN),"ArrayBuffer"!=y.name}))){for(var H,V=(y=function(e){return c(this,y),new E(p(e))}).prototype=E.prototype,K=m(E),$=0;K.length>$;)(H=K[$++])in y||l(y,H,E[H]);a||(V.constructor=y)}var Q=new b(new y(2)),q=b.prototype.setInt8;Q.setInt8(0,2147483648),Q.setInt8(1,2147483649),!Q.getInt8(0)&&Q.getInt8(1)||s(b.prototype,{setInt8:function(e,t){q.call(this,e,t<<24>>24)},setUint8:function(e,t){q.call(this,e,t<<24>>24)}},!0)}else y=function(e){c(this,y,"ArrayBuffer");var t=p(e);this._b=g.call(new Array(t),0),this[j]=t},b=function(e,t,n){c(this,b,"DataView"),c(e,y,"DataView");var r=e[j],i=f(t);if(i<0||i>r)throw k("Wrong offset!");if(i+(n=void 0===n?r-i:d(n))>r)throw k("Wrong length!");this[P]=e,this[C]=i,this[j]=n},i&&(R(y,"byteLength","_l"),R(b,"buffer","_b"),R(b,"byteLength","_l"),R(b,"byteOffset","_o")),s(b.prototype,{getInt8:function(e){return W(this,1,e)[0]<<24>>24},getUint8:function(e){return W(this,1,e)[0]},getInt16:function(e){var t=W(this,2,e,arguments[1]);return(t[1]<<8|t[0])<<16>>16},getUint16:function(e){var t=W(this,2,e,arguments[1]);return t[1]<<8|t[0]},getInt32:function(e){return O(W(this,4,e,arguments[1]))},getUint32:function(e){return O(W(this,4,e,arguments[1]))>>>0},getFloat32:function(e){return M(W(this,4,e,arguments[1]),23,4)},getFloat64:function(e){return M(W(this,8,e,arguments[1]),52,8)},setInt8:function(e,t){U(this,1,e,D,t)},setUint8:function(e,t){U(this,1,e,D,t)},setInt16:function(e,t){U(this,2,e,L,t,arguments[2])},setUint16:function(e,t){U(this,2,e,L,t,arguments[2])},setInt32:function(e,t){U(this,4,e,A,t,arguments[2])},setUint32:function(e,t){U(this,4,e,A,t,arguments[2])},setFloat32:function(e,t){U(this,4,e,B,t,arguments[2])},setFloat64:function(e,t){U(this,8,e,F,t,arguments[2])}});v(y,"ArrayBuffer"),v(b,"DataView"),l(b.prototype,o.VIEW,!0),t.ArrayBuffer=y,t.DataView=b},function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t,n){e.exports=!n(7)&&!n(3)((function(){return 7!=Object.defineProperty(n(68)("div"),"a",{get:function(){return 7}}).a}))},function(e,t,n){t.f=n(5)},function(e,t,n){var r=n(14),i=n(15),a=n(53)(!1),o=n(70)("IE_PROTO");e.exports=function(e,t){var n,l=i(e),s=0,u=[];for(n in l)n!=o&&r(l,n)&&u.push(n);for(;t.length>s;)r(l,n=t[s++])&&(~a(u,n)||u.push(n));return u}},function(e,t,n){var r=n(8),i=n(1),a=n(34);e.exports=n(7)?Object.defineProperties:function(e,t){i(e);for(var n,o=a(t),l=o.length,s=0;l>s;)r.f(e,n=o[s++],t[n]);return e}},function(e,t,n){var r=n(15),i=n(37).f,a={}.toString,o="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];e.exports.f=function(e){return o&&"[object Window]"==a.call(e)?function(e){try{return i(e)}catch(e){return o.slice()}}(e):i(r(e))}},function(e,t,n){"use strict";var r=n(7),i=n(34),a=n(54),o=n(49),l=n(9),s=n(48),u=Object.assign;e.exports=!u||n(3)((function(){var e={},t={},n=Symbol(),r="abcdefghijklmnopqrst";return e[n]=7,r.split("").forEach((function(e){t[e]=e})),7!=u({},e)[n]||Object.keys(u({},t)).join("")!=r}))?function(e,t){for(var n=l(e),u=arguments.length,c=1,f=a.f,d=o.f;u>c;)for(var p,m=s(arguments[c++]),h=f?i(m).concat(f(m)):i(m),g=h.length,v=0;g>v;)p=h[v++],r&&!d.call(m,p)||(n[p]=m[p]);return n}:u},function(e,t){e.exports=Object.is||function(e,t){return e===t?0!==e||1/e==1/t:e!=e&&t!=t}},function(e,t,n){"use strict";var r=n(10),i=n(4),a=n(104),o=[].slice,l={},s=function(e,t,n){if(!(t in l)){for(var r=[],i=0;i<t;i++)r[i]="a["+i+"]";l[t]=Function("F,a","return new F("+r.join(",")+")")}return l[t](e,n)};e.exports=Function.bind||function(e){var t=r(this),n=o.call(arguments,1),l=function(){var r=n.concat(o.call(arguments));return this instanceof l?s(t,r.length,r):a(t,r,e)};return i(t.prototype)&&(l.prototype=t.prototype),l}},function(e,t){e.exports=function(e,t,n){var r=void 0===n;switch(t.length){case 0:return r?e():e.call(n);case 1:return r?e(t[0]):e.call(n,t[0]);case 2:return r?e(t[0],t[1]):e.call(n,t[0],t[1]);case 3:return r?e(t[0],t[1],t[2]):e.call(n,t[0],t[1],t[2]);case 4:return r?e(t[0],t[1],t[2],t[3]):e.call(n,t[0],t[1],t[2],t[3])}return e.apply(n,t)}},function(e,t,n){var r=n(2).parseInt,i=n(45).trim,a=n(74),o=/^[-+]?0[xX]/;e.exports=8!==r(a+"08")||22!==r(a+"0x16")?function(e,t){var n=i(String(e),3);return r(n,t>>>0||(o.test(n)?16:10))}:r},function(e,t,n){var r=n(2).parseFloat,i=n(45).trim;e.exports=1/r(n(74)+"-0")!=-1/0?function(e){var t=i(String(e),3),n=r(t);return 0===n&&"-"==t.charAt(0)?-0:n}:r},function(e,t,n){var r=n(20);e.exports=function(e,t){if("number"!=typeof e&&"Number"!=r(e))throw TypeError(t);return+e}},function(e,t,n){var r=n(4),i=Math.floor;e.exports=function(e){return!r(e)&&isFinite(e)&&i(e)===e}},function(e,t){e.exports=Math.log1p||function(e){return(e=+e)>-1e-8&&e<1e-8?e-e*e/2:Math.log(1+e)}},function(e,t,n){var r=n(77),i=Math.pow,a=i(2,-52),o=i(2,-23),l=i(2,127)*(2-o),s=i(2,-126);e.exports=Math.fround||function(e){var t,n,i=Math.abs(e),u=r(e);return i<s?u*(i/s/o+1/a-1/a)*s*o:(n=(t=(1+o/a)*i)-(t-i))>l||n!=n?u*(1/0):u*n}},function(e,t,n){var r=n(1);e.exports=function(e,t,n,i){try{return i?t(r(n)[0],n[1]):t(n)}catch(t){var a=e.return;throw void 0!==a&&r(a.call(e)),t}}},function(e,t,n){var r=n(10),i=n(9),a=n(48),o=n(6);e.exports=function(e,t,n,l,s){r(t);var u=i(e),c=a(u),f=o(u.length),d=s?f-1:0,p=s?-1:1;if(n<2)for(;;){if(d in c){l=c[d],d+=p;break}if(d+=p,s?d<0:f<=d)throw TypeError("Reduce of empty array with no initial value")}for(;s?d>=0:f>d;d+=p)d in c&&(l=t(l,c[d],d,u));return l}},function(e,t,n){"use strict";var r=n(9),i=n(35),a=n(6);e.exports=[].copyWithin||function(e,t){var n=r(this),o=a(n.length),l=i(e,o),s=i(t,o),u=arguments.length>2?arguments[2]:void 0,c=Math.min((void 0===u?o:i(u,o))-s,o-l),f=1;for(s<l&&l<s+c&&(f=-1,s+=c-1,l+=c-1);c-- >0;)s in n?n[l]=n[s]:delete n[l],l+=f,s+=f;return n}},function(e,t){e.exports=function(e,t){return{value:t,done:!!e}}},function(e,t,n){"use strict";var r=n(89);n(0)({target:"RegExp",proto:!0,forced:r!==/./.exec},{exec:r})},function(e,t,n){n(7)&&"g"!=/./g.flags&&n(8).f(RegExp.prototype,"flags",{configurable:!0,get:n(50)})},function(e,t){e.exports=function(e){try{return{e:!1,v:e()}}catch(e){return{e:!0,v:e}}}},function(e,t,n){var r=n(1),i=n(4),a=n(93);e.exports=function(e,t){if(r(e),i(t)&&t.constructor===e)return t;var n=a.f(e);return(0,n.resolve)(t),n.promise}},function(e,t,n){"use strict";var r=n(120),i=n(42);e.exports=n(62)("Map",(function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}}),{get:function(e){var t=r.getEntry(i(this,"Map"),e);return t&&t.v},set:function(e,t){return r.def(i(this,"Map"),0===e?0:e,t)}},r,!0)},function(e,t,n){"use strict";var r=n(8).f,i=n(36),a=n(41),o=n(19),l=n(39),s=n(40),u=n(79),c=n(114),f=n(38),d=n(7),p=n(30).fastKey,m=n(42),h=d?"_s":"size",g=function(e,t){var n,r=p(t);if("F"!==r)return e._i[r];for(n=e._f;n;n=n.n)if(n.k==t)return n};e.exports={getConstructor:function(e,t,n,u){var c=e((function(e,r){l(e,c,t,"_i"),e._t=t,e._i=i(null),e._f=void 0,e._l=void 0,e[h]=0,null!=r&&s(r,n,e[u],e)}));return a(c.prototype,{clear:function(){for(var e=m(this,t),n=e._i,r=e._f;r;r=r.n)r.r=!0,r.p&&(r.p=r.p.n=void 0),delete n[r.i];e._f=e._l=void 0,e[h]=0},delete:function(e){var n=m(this,t),r=g(n,e);if(r){var i=r.n,a=r.p;delete n._i[r.i],r.r=!0,a&&(a.n=i),i&&(i.p=a),n._f==r&&(n._f=i),n._l==r&&(n._l=a),n[h]--}return!!r},forEach:function(e){m(this,t);for(var n,r=o(e,arguments.length>1?arguments[1]:void 0,3);n=n?n.n:this._f;)for(r(n.v,n.k,this);n&&n.r;)n=n.p},has:function(e){return!!g(m(this,t),e)}}),d&&r(c.prototype,"size",{get:function(){return m(this,t)[h]}}),c},def:function(e,t,n){var r,i,a=g(e,t);return a?a.v=n:(e._l=a={i:i=p(t,!0),k:t,v:n,p:r=e._l,n:void 0,r:!1},e._f||(e._f=a),r&&(r.n=a),e[h]++,"F"!==i&&(e._i[i]=a)),e},getEntry:g,setStrong:function(e,t,n){u(e,t,(function(e,n){this._t=m(e,t),this._k=n,this._l=void 0}),(function(){for(var e=this._k,t=this._l;t&&t.r;)t=t.p;return this._t&&(this._l=t=t?t.n:this._t._f)?c(0,"keys"==e?t.k:"values"==e?t.v:[t.k,t.v]):(this._t=void 0,c(1))}),n?"entries":"values",!n,!0),f(t)}}},function(e,t,n){"use strict";var r=n(120),i=n(42);e.exports=n(62)("Set",(function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}}),{add:function(e){return r.def(i(this,"Set"),e=0===e?0:e,e)}},r)},function(e,t,n){"use strict";var r,i=n(2),a=n(26)(0),o=n(12),l=n(30),s=n(101),u=n(123),c=n(4),f=n(42),d=n(42),p=!i.ActiveXObject&&"ActiveXObject"in i,m=l.getWeak,h=Object.isExtensible,g=u.ufstore,v=function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}},y={get:function(e){if(c(e)){var t=m(e);return!0===t?g(f(this,"WeakMap")).get(e):t?t[this._i]:void 0}},set:function(e,t){return u.def(f(this,"WeakMap"),e,t)}},b=e.exports=n(62)("WeakMap",v,y,u,!0,!0);d&&p&&(s((r=u.getConstructor(v,"WeakMap")).prototype,y),l.NEED=!0,a(["delete","has","get","set"],(function(e){var t=b.prototype,n=t[e];o(t,e,(function(t,i){if(c(t)&&!h(t)){this._f||(this._f=new r);var a=this._f[e](t,i);return"set"==e?this:a}return n.call(this,t,i)}))})))},function(e,t,n){"use strict";var r=n(41),i=n(30).getWeak,a=n(1),o=n(4),l=n(39),s=n(40),u=n(26),c=n(14),f=n(42),d=u(5),p=u(6),m=0,h=function(e){return e._l||(e._l=new g)},g=function(){this.a=[]},v=function(e,t){return d(e.a,(function(e){return e[0]===t}))};g.prototype={get:function(e){var t=v(this,e);if(t)return t[1]},has:function(e){return!!v(this,e)},set:function(e,t){var n=v(this,e);n?n[1]=t:this.a.push([e,t])},delete:function(e){var t=p(this.a,(function(t){return t[0]===e}));return~t&&this.a.splice(t,1),!!~t}},e.exports={getConstructor:function(e,t,n,a){var u=e((function(e,r){l(e,u,t,"_i"),e._t=t,e._i=m++,e._l=void 0,null!=r&&s(r,n,e[a],e)}));return r(u.prototype,{delete:function(e){if(!o(e))return!1;var n=i(e);return!0===n?h(f(this,t)).delete(e):n&&c(n,this._i)&&delete n[this._i]},has:function(e){if(!o(e))return!1;var n=i(e);return!0===n?h(f(this,t)).has(e):n&&c(n,this._i)}}),u},def:function(e,t,n){var r=i(a(t),!0);return!0===r?h(e).set(t,n):r[e._i]=n,e},ufstore:h}},function(e,t,n){var r=n(21),i=n(6);e.exports=function(e){if(void 0===e)return 0;var t=r(e),n=i(t);if(t!==n)throw RangeError("Wrong length!");return n}},function(e,t,n){var r=n(37),i=n(54),a=n(1),o=n(2).Reflect;e.exports=o&&o.ownKeys||function(e){var t=r.f(a(e)),n=i.f;return n?t.concat(n(e)):t}},function(e,t,n){"use strict";var r=n(55),i=n(4),a=n(6),o=n(19),l=n(5)("isConcatSpreadable");e.exports=function e(t,n,s,u,c,f,d,p){for(var m,h,g=c,v=0,y=!!d&&o(d,p,3);v<u;){if(v in s){if(m=y?y(s[v],v,n):s[v],h=!1,i(m)&&(h=void 0!==(h=m[l])?!!h:r(m)),h&&f>0)g=e(t,n,m,a(m.length),g,f-1)-1;else{if(g>=9007199254740991)throw TypeError();t[g]=m}g++}v++}return g}},function(e,t,n){var r=n(6),i=n(76),a=n(24);e.exports=function(e,t,n,o){var l=String(a(e)),s=l.length,u=void 0===n?" ":String(n),c=r(t);if(c<=s||""==u)return l;var f=c-s,d=i.call(u,Math.ceil(f/u.length));return d.length>f&&(d=d.slice(0,f)),o?d+l:l+d}},function(e,t,n){var r=n(7),i=n(34),a=n(15),o=n(49).f;e.exports=function(e){return function(t){for(var n,l=a(t),s=i(l),u=s.length,c=0,f=[];u>c;)n=s[c++],r&&!o.call(l,n)||f.push(e?[n,l[n]]:l[n]);return f}}},function(e,t,n){var r=n(44),i=n(130);e.exports=function(e){return function(){if(r(this)!=e)throw TypeError(e+"#toJSON isn't generic");return i(this)}}},function(e,t,n){var r=n(40);e.exports=function(e,t){var n=[];return r(e,!1,n.push,n,t),n}},function(e,t){e.exports=Math.scale||function(e,t,n,r,i){return 0===arguments.length||e!=e||t!=t||n!=n||r!=r||i!=i?NaN:e===1/0||e===-1/0?e:(e-t)*(i-r)/(n-t)+r}},function(e,t,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,i=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;function o(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,l,s=o(e),u=1;u<arguments.length;u++){for(var c in n=Object(arguments[u]))i.call(n,c)&&(s[c]=n[c]);if(r){l=r(n);for(var f=0;f<l.length;f++)a.call(n,l[f])&&(s[l[f]]=n[l[f]])}}return s}},function(e,t,n){n(134),e.exports=n(336)},function(e,t,n){"use strict";(function(e){if(n(135),n(332),n(333),e._babelPolyfill)throw new Error("only one instance of babel-polyfill is allowed");e._babelPolyfill=!0;function t(e,t,n){e[t]||Object.defineProperty(e,t,{writable:!0,configurable:!0,value:n})}t(String.prototype,"padLeft","".padStart),t(String.prototype,"padRight","".padEnd),"pop,reverse,shift,keys,values,entries,indexOf,every,some,forEach,map,filter,find,findIndex,includes,join,slice,concat,push,splice,unshift,sort,lastIndexOf,reduce,reduceRight,copyWithin,fill".split(",").forEach((function(e){[][e]&&t(Array,e,Function.call.bind([][e]))}))}).call(this,n(95))},function(e,t,n){n(136),n(139),n(140),n(141),n(142),n(143),n(144),n(145),n(146),n(147),n(148),n(149),n(150),n(151),n(152),n(153),n(154),n(155),n(156),n(157),n(158),n(159),n(160),n(161),n(162),n(163),n(164),n(165),n(166),n(167),n(168),n(169),n(170),n(171),n(172),n(173),n(174),n(175),n(176),n(177),n(178),n(179),n(180),n(181),n(182),n(183),n(184),n(185),n(186),n(187),n(188),n(189),n(190),n(191),n(192),n(193),n(194),n(195),n(196),n(197),n(198),n(199),n(200),n(201),n(202),n(203),n(204),n(205),n(206),n(207),n(208),n(209),n(210),n(211),n(212),n(213),n(214),n(216),n(217),n(219),n(220),n(221),n(222),n(223),n(224),n(225),n(227),n(228),n(229),n(230),n(231),n(232),n(233),n(234),n(235),n(236),n(237),n(238),n(239),n(88),n(240),n(115),n(241),n(116),n(242),n(243),n(244),n(245),n(246),n(119),n(121),n(122),n(247),n(248),n(249),n(250),n(251),n(252),n(253),n(254),n(255),n(256),n(257),n(258),n(259),n(260),n(261),n(262),n(263),n(264),n(265),n(266),n(267),n(268),n(269),n(270),n(271),n(272),n(273),n(274),n(275),n(276),n(277),n(278),n(279),n(280),n(281),n(282),n(283),n(284),n(285),n(286),n(287),n(288),n(289),n(290),n(291),n(292),n(293),n(294),n(295),n(296),n(297),n(298),n(299),n(300),n(301),n(302),n(303),n(304),n(305),n(306),n(307),n(308),n(309),n(310),n(311),n(312),n(313),n(314),n(315),n(316),n(317),n(318),n(319),n(320),n(321),n(322),n(323),n(324),n(325),n(326),n(327),n(328),n(329),n(330),n(331),e.exports=n(18)},function(e,t,n){"use strict";var r=n(2),i=n(14),a=n(7),o=n(0),l=n(12),s=n(30).KEY,u=n(3),c=n(47),f=n(43),d=n(33),p=n(5),m=n(97),h=n(69),g=n(138),v=n(55),y=n(1),b=n(4),w=n(9),k=n(15),_=n(23),E=n(32),x=n(36),z=n(100),S=n(16),T=n(54),N=n(8),P=n(34),j=S.f,C=N.f,I=z.f,M=r.Symbol,O=r.JSON,D=O&&O.stringify,L=p("_hidden"),A=p("toPrimitive"),F={}.propertyIsEnumerable,B=c("symbol-registry"),R=c("symbols"),W=c("op-symbols"),U=Object.prototype,H="function"==typeof M&&!!T.f,V=r.QObject,K=!V||!V.prototype||!V.prototype.findChild,$=a&&u((function(){return 7!=x(C({},"a",{get:function(){return C(this,"a",{value:7}).a}})).a}))?function(e,t,n){var r=j(U,t);r&&delete U[t],C(e,t,n),r&&e!==U&&C(U,t,r)}:C,Q=function(e){var t=R[e]=x(M.prototype);return t._k=e,t},q=H&&"symbol"==typeof M.iterator?function(e){return"symbol"==typeof e}:function(e){return e instanceof M},G=function(e,t,n){return e===U&&G(W,t,n),y(e),t=_(t,!0),y(n),i(R,t)?(n.enumerable?(i(e,L)&&e[L][t]&&(e[L][t]=!1),n=x(n,{enumerable:E(0,!1)})):(i(e,L)||C(e,L,E(1,{})),e[L][t]=!0),$(e,t,n)):C(e,t,n)},J=function(e,t){y(e);for(var n,r=g(t=k(t)),i=0,a=r.length;a>i;)G(e,n=r[i++],t[n]);return e},Z=function(e){var t=F.call(this,e=_(e,!0));return!(this===U&&i(R,e)&&!i(W,e))&&(!(t||!i(this,e)||!i(R,e)||i(this,L)&&this[L][e])||t)},Y=function(e,t){if(e=k(e),t=_(t,!0),e!==U||!i(R,t)||i(W,t)){var n=j(e,t);return!n||!i(R,t)||i(e,L)&&e[L][t]||(n.enumerable=!0),n}},X=function(e){for(var t,n=I(k(e)),r=[],a=0;n.length>a;)i(R,t=n[a++])||t==L||t==s||r.push(t);return r},ee=function(e){for(var t,n=e===U,r=I(n?W:k(e)),a=[],o=0;r.length>o;)!i(R,t=r[o++])||n&&!i(U,t)||a.push(R[t]);return a};H||(l((M=function(){if(this instanceof M)throw TypeError("Symbol is not a constructor!");var e=d(arguments.length>0?arguments[0]:void 0),t=function(n){this===U&&t.call(W,n),i(this,L)&&i(this[L],e)&&(this[L][e]=!1),$(this,e,E(1,n))};return a&&K&&$(U,e,{configurable:!0,set:t}),Q(e)}).prototype,"toString",(function(){return this._k})),S.f=Y,N.f=G,n(37).f=z.f=X,n(49).f=Z,T.f=ee,a&&!n(29)&&l(U,"propertyIsEnumerable",Z,!0),m.f=function(e){return Q(p(e))}),o(o.G+o.W+o.F*!H,{Symbol:M});for(var te="hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","),ne=0;te.length>ne;)p(te[ne++]);for(var re=P(p.store),ie=0;re.length>ie;)h(re[ie++]);o(o.S+o.F*!H,"Symbol",{for:function(e){return i(B,e+="")?B[e]:B[e]=M(e)},keyFor:function(e){if(!q(e))throw TypeError(e+" is not a symbol!");for(var t in B)if(B[t]===e)return t},useSetter:function(){K=!0},useSimple:function(){K=!1}}),o(o.S+o.F*!H,"Object",{create:function(e,t){return void 0===t?x(e):J(x(e),t)},defineProperty:G,defineProperties:J,getOwnPropertyDescriptor:Y,getOwnPropertyNames:X,getOwnPropertySymbols:ee});var ae=u((function(){T.f(1)}));o(o.S+o.F*ae,"Object",{getOwnPropertySymbols:function(e){return T.f(w(e))}}),O&&o(o.S+o.F*(!H||u((function(){var e=M();return"[null]"!=D([e])||"{}"!=D({a:e})||"{}"!=D(Object(e))}))),"JSON",{stringify:function(e){for(var t,n,r=[e],i=1;arguments.length>i;)r.push(arguments[i++]);if(n=t=r[1],(b(t)||void 0!==e)&&!q(e))return v(t)||(t=function(e,t){if("function"==typeof n&&(t=n.call(this,e,t)),!q(t))return t}),r[1]=t,D.apply(O,r)}}),M.prototype[A]||n(11)(M.prototype,A,M.prototype.valueOf),f(M,"Symbol"),f(Math,"Math",!0),f(r.JSON,"JSON",!0)},function(e,t,n){e.exports=n(47)("native-function-to-string",Function.toString)},function(e,t,n){var r=n(34),i=n(54),a=n(49);e.exports=function(e){var t=r(e),n=i.f;if(n)for(var o,l=n(e),s=a.f,u=0;l.length>u;)s.call(e,o=l[u++])&&t.push(o);return t}},function(e,t,n){var r=n(0);r(r.S,"Object",{create:n(36)})},function(e,t,n){var r=n(0);r(r.S+r.F*!n(7),"Object",{defineProperty:n(8).f})},function(e,t,n){var r=n(0);r(r.S+r.F*!n(7),"Object",{defineProperties:n(99)})},function(e,t,n){var r=n(15),i=n(16).f;n(25)("getOwnPropertyDescriptor",(function(){return function(e,t){return i(r(e),t)}}))},function(e,t,n){var r=n(9),i=n(17);n(25)("getPrototypeOf",(function(){return function(e){return i(r(e))}}))},function(e,t,n){var r=n(9),i=n(34);n(25)("keys",(function(){return function(e){return i(r(e))}}))},function(e,t,n){n(25)("getOwnPropertyNames",(function(){return n(100).f}))},function(e,t,n){var r=n(4),i=n(30).onFreeze;n(25)("freeze",(function(e){return function(t){return e&&r(t)?e(i(t)):t}}))},function(e,t,n){var r=n(4),i=n(30).onFreeze;n(25)("seal",(function(e){return function(t){return e&&r(t)?e(i(t)):t}}))},function(e,t,n){var r=n(4),i=n(30).onFreeze;n(25)("preventExtensions",(function(e){return function(t){return e&&r(t)?e(i(t)):t}}))},function(e,t,n){var r=n(4);n(25)("isFrozen",(function(e){return function(t){return!r(t)||!!e&&e(t)}}))},function(e,t,n){var r=n(4);n(25)("isSealed",(function(e){return function(t){return!r(t)||!!e&&e(t)}}))},function(e,t,n){var r=n(4);n(25)("isExtensible",(function(e){return function(t){return!!r(t)&&(!e||e(t))}}))},function(e,t,n){var r=n(0);r(r.S+r.F,"Object",{assign:n(101)})},function(e,t,n){var r=n(0);r(r.S,"Object",{is:n(102)})},function(e,t,n){var r=n(0);r(r.S,"Object",{setPrototypeOf:n(73).set})},function(e,t,n){"use strict";var r=n(44),i={};i[n(5)("toStringTag")]="z",i+""!="[object z]"&&n(12)(Object.prototype,"toString",(function(){return"[object "+r(this)+"]"}),!0)},function(e,t,n){var r=n(0);r(r.P,"Function",{bind:n(103)})},function(e,t,n){var r=n(8).f,i=Function.prototype,a=/^\s*function ([^ (]*)/;"name"in i||n(7)&&r(i,"name",{configurable:!0,get:function(){try{return(""+this).match(a)[1]}catch(e){return""}}})},function(e,t,n){"use strict";var r=n(4),i=n(17),a=n(5)("hasInstance"),o=Function.prototype;a in o||n(8).f(o,a,{value:function(e){if("function"!=typeof this||!r(e))return!1;if(!r(this.prototype))return e instanceof this;for(;e=i(e);)if(this.prototype===e)return!0;return!1}})},function(e,t,n){var r=n(0),i=n(105);r(r.G+r.F*(parseInt!=i),{parseInt:i})},function(e,t,n){var r=n(0),i=n(106);r(r.G+r.F*(parseFloat!=i),{parseFloat:i})},function(e,t,n){"use strict";var r=n(2),i=n(14),a=n(20),o=n(75),l=n(23),s=n(3),u=n(37).f,c=n(16).f,f=n(8).f,d=n(45).trim,p=r.Number,m=p,h=p.prototype,g="Number"==a(n(36)(h)),v="trim"in String.prototype,y=function(e){var t=l(e,!1);if("string"==typeof t&&t.length>2){var n,r,i,a=(t=v?t.trim():d(t,3)).charCodeAt(0);if(43===a||45===a){if(88===(n=t.charCodeAt(2))||120===n)return NaN}else if(48===a){switch(t.charCodeAt(1)){case 66:case 98:r=2,i=49;break;case 79:case 111:r=8,i=55;break;default:return+t}for(var o,s=t.slice(2),u=0,c=s.length;u<c;u++)if((o=s.charCodeAt(u))<48||o>i)return NaN;return parseInt(s,r)}}return+t};if(!p(" 0o1")||!p("0b1")||p("+0x1")){p=function(e){var t=arguments.length<1?0:e,n=this;return n instanceof p&&(g?s((function(){h.valueOf.call(n)})):"Number"!=a(n))?o(new m(y(t)),n,p):y(t)};for(var b,w=n(7)?u(m):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger".split(","),k=0;w.length>k;k++)i(m,b=w[k])&&!i(p,b)&&f(p,b,c(m,b));p.prototype=h,h.constructor=p,n(12)(r,"Number",p)}},function(e,t,n){"use strict";var r=n(0),i=n(21),a=n(107),o=n(76),l=1..toFixed,s=Math.floor,u=[0,0,0,0,0,0],c="Number.toFixed: incorrect invocation!",f=function(e,t){for(var n=-1,r=t;++n<6;)r+=e*u[n],u[n]=r%1e7,r=s(r/1e7)},d=function(e){for(var t=6,n=0;--t>=0;)n+=u[t],u[t]=s(n/e),n=n%e*1e7},p=function(){for(var e=6,t="";--e>=0;)if(""!==t||0===e||0!==u[e]){var n=String(u[e]);t=""===t?n:t+o.call("0",7-n.length)+n}return t},m=function(e,t,n){return 0===t?n:t%2==1?m(e,t-1,n*e):m(e*e,t/2,n)};r(r.P+r.F*(!!l&&("0.000"!==8e-5.toFixed(3)||"1"!==.9.toFixed(0)||"1.25"!==1.255.toFixed(2)||"1000000000000000128"!==(0xde0b6b3a7640080).toFixed(0))||!n(3)((function(){l.call({})}))),"Number",{toFixed:function(e){var t,n,r,l,s=a(this,c),u=i(e),h="",g="0";if(u<0||u>20)throw RangeError(c);if(s!=s)return"NaN";if(s<=-1e21||s>=1e21)return String(s);if(s<0&&(h="-",s=-s),s>1e-21)if(n=(t=function(e){for(var t=0,n=e;n>=4096;)t+=12,n/=4096;for(;n>=2;)t+=1,n/=2;return t}(s*m(2,69,1))-69)<0?s*m(2,-t,1):s/m(2,t,1),n*=4503599627370496,(t=52-t)>0){for(f(0,n),r=u;r>=7;)f(1e7,0),r-=7;for(f(m(10,r,1),0),r=t-1;r>=23;)d(1<<23),r-=23;d(1<<r),f(1,1),d(2),g=p()}else f(0,n),f(1<<-t,0),g=p()+o.call("0",u);return g=u>0?h+((l=g.length)<=u?"0."+o.call("0",u-l)+g:g.slice(0,l-u)+"."+g.slice(l-u)):h+g}})},function(e,t,n){"use strict";var r=n(0),i=n(3),a=n(107),o=1..toPrecision;r(r.P+r.F*(i((function(){return"1"!==o.call(1,void 0)}))||!i((function(){o.call({})}))),"Number",{toPrecision:function(e){var t=a(this,"Number#toPrecision: incorrect invocation!");return void 0===e?o.call(t):o.call(t,e)}})},function(e,t,n){var r=n(0);r(r.S,"Number",{EPSILON:Math.pow(2,-52)})},function(e,t,n){var r=n(0),i=n(2).isFinite;r(r.S,"Number",{isFinite:function(e){return"number"==typeof e&&i(e)}})},function(e,t,n){var r=n(0);r(r.S,"Number",{isInteger:n(108)})},function(e,t,n){var r=n(0);r(r.S,"Number",{isNaN:function(e){return e!=e}})},function(e,t,n){var r=n(0),i=n(108),a=Math.abs;r(r.S,"Number",{isSafeInteger:function(e){return i(e)&&a(e)<=9007199254740991}})},function(e,t,n){var r=n(0);r(r.S,"Number",{MAX_SAFE_INTEGER:9007199254740991})},function(e,t,n){var r=n(0);r(r.S,"Number",{MIN_SAFE_INTEGER:-9007199254740991})},function(e,t,n){var r=n(0),i=n(106);r(r.S+r.F*(Number.parseFloat!=i),"Number",{parseFloat:i})},function(e,t,n){var r=n(0),i=n(105);r(r.S+r.F*(Number.parseInt!=i),"Number",{parseInt:i})},function(e,t,n){var r=n(0),i=n(109),a=Math.sqrt,o=Math.acosh;r(r.S+r.F*!(o&&710==Math.floor(o(Number.MAX_VALUE))&&o(1/0)==1/0),"Math",{acosh:function(e){return(e=+e)<1?NaN:e>94906265.62425156?Math.log(e)+Math.LN2:i(e-1+a(e-1)*a(e+1))}})},function(e,t,n){var r=n(0),i=Math.asinh;r(r.S+r.F*!(i&&1/i(0)>0),"Math",{asinh:function e(t){return isFinite(t=+t)&&0!=t?t<0?-e(-t):Math.log(t+Math.sqrt(t*t+1)):t}})},function(e,t,n){var r=n(0),i=Math.atanh;r(r.S+r.F*!(i&&1/i(-0)<0),"Math",{atanh:function(e){return 0==(e=+e)?e:Math.log((1+e)/(1-e))/2}})},function(e,t,n){var r=n(0),i=n(77);r(r.S,"Math",{cbrt:function(e){return i(e=+e)*Math.pow(Math.abs(e),1/3)}})},function(e,t,n){var r=n(0);r(r.S,"Math",{clz32:function(e){return(e>>>=0)?31-Math.floor(Math.log(e+.5)*Math.LOG2E):32}})},function(e,t,n){var r=n(0),i=Math.exp;r(r.S,"Math",{cosh:function(e){return(i(e=+e)+i(-e))/2}})},function(e,t,n){var r=n(0),i=n(78);r(r.S+r.F*(i!=Math.expm1),"Math",{expm1:i})},function(e,t,n){var r=n(0);r(r.S,"Math",{fround:n(110)})},function(e,t,n){var r=n(0),i=Math.abs;r(r.S,"Math",{hypot:function(e,t){for(var n,r,a=0,o=0,l=arguments.length,s=0;o<l;)s<(n=i(arguments[o++]))?(a=a*(r=s/n)*r+1,s=n):a+=n>0?(r=n/s)*r:n;return s===1/0?1/0:s*Math.sqrt(a)}})},function(e,t,n){var r=n(0),i=Math.imul;r(r.S+r.F*n(3)((function(){return-5!=i(4294967295,5)||2!=i.length})),"Math",{imul:function(e,t){var n=+e,r=+t,i=65535&n,a=65535&r;return 0|i*a+((65535&n>>>16)*a+i*(65535&r>>>16)<<16>>>0)}})},function(e,t,n){var r=n(0);r(r.S,"Math",{log10:function(e){return Math.log(e)*Math.LOG10E}})},function(e,t,n){var r=n(0);r(r.S,"Math",{log1p:n(109)})},function(e,t,n){var r=n(0);r(r.S,"Math",{log2:function(e){return Math.log(e)/Math.LN2}})},function(e,t,n){var r=n(0);r(r.S,"Math",{sign:n(77)})},function(e,t,n){var r=n(0),i=n(78),a=Math.exp;r(r.S+r.F*n(3)((function(){return-2e-17!=!Math.sinh(-2e-17)})),"Math",{sinh:function(e){return Math.abs(e=+e)<1?(i(e)-i(-e))/2:(a(e-1)-a(-e-1))*(Math.E/2)}})},function(e,t,n){var r=n(0),i=n(78),a=Math.exp;r(r.S,"Math",{tanh:function(e){var t=i(e=+e),n=i(-e);return t==1/0?1:n==1/0?-1:(t-n)/(a(e)+a(-e))}})},function(e,t,n){var r=n(0);r(r.S,"Math",{trunc:function(e){return(e>0?Math.floor:Math.ceil)(e)}})},function(e,t,n){var r=n(0),i=n(35),a=String.fromCharCode,o=String.fromCodePoint;r(r.S+r.F*(!!o&&1!=o.length),"String",{fromCodePoint:function(e){for(var t,n=[],r=arguments.length,o=0;r>o;){if(t=+arguments[o++],i(t,1114111)!==t)throw RangeError(t+" is not a valid code point");n.push(t<65536?a(t):a(55296+((t-=65536)>>10),t%1024+56320))}return n.join("")}})},function(e,t,n){var r=n(0),i=n(15),a=n(6);r(r.S,"String",{raw:function(e){for(var t=i(e.raw),n=a(t.length),r=arguments.length,o=[],l=0;n>l;)o.push(String(t[l++])),l<r&&o.push(String(arguments[l]));return o.join("")}})},function(e,t,n){"use strict";n(45)("trim",(function(e){return function(){return e(this,3)}}))},function(e,t,n){"use strict";var r=n(56)(!0);n(79)(String,"String",(function(e){this._t=String(e),this._i=0}),(function(){var e,t=this._t,n=this._i;return n>=t.length?{value:void 0,done:!0}:(e=r(t,n),this._i+=e.length,{value:e,done:!1})}))},function(e,t,n){"use strict";var r=n(0),i=n(56)(!1);r(r.P,"String",{codePointAt:function(e){return i(this,e)}})},function(e,t,n){"use strict";var r=n(0),i=n(6),a=n(81),o="".endsWith;r(r.P+r.F*n(82)("endsWith"),"String",{endsWith:function(e){var t=a(this,e,"endsWith"),n=arguments.length>1?arguments[1]:void 0,r=i(t.length),l=void 0===n?r:Math.min(i(n),r),s=String(e);return o?o.call(t,s,l):t.slice(l-s.length,l)===s}})},function(e,t,n){"use strict";var r=n(0),i=n(81);r(r.P+r.F*n(82)("includes"),"String",{includes:function(e){return!!~i(this,e,"includes").indexOf(e,arguments.length>1?arguments[1]:void 0)}})},function(e,t,n){var r=n(0);r(r.P,"String",{repeat:n(76)})},function(e,t,n){"use strict";var r=n(0),i=n(6),a=n(81),o="".startsWith;r(r.P+r.F*n(82)("startsWith"),"String",{startsWith:function(e){var t=a(this,e,"startsWith"),n=i(Math.min(arguments.length>1?arguments[1]:void 0,t.length)),r=String(e);return o?o.call(t,r,n):t.slice(n,n+r.length)===r}})},function(e,t,n){"use strict";n(13)("anchor",(function(e){return function(t){return e(this,"a","name",t)}}))},function(e,t,n){"use strict";n(13)("big",(function(e){return function(){return e(this,"big","","")}}))},function(e,t,n){"use strict";n(13)("blink",(function(e){return function(){return e(this,"blink","","")}}))},function(e,t,n){"use strict";n(13)("bold",(function(e){return function(){return e(this,"b","","")}}))},function(e,t,n){"use strict";n(13)("fixed",(function(e){return function(){return e(this,"tt","","")}}))},function(e,t,n){"use strict";n(13)("fontcolor",(function(e){return function(t){return e(this,"font","color",t)}}))},function(e,t,n){"use strict";n(13)("fontsize",(function(e){return function(t){return e(this,"font","size",t)}}))},function(e,t,n){"use strict";n(13)("italics",(function(e){return function(){return e(this,"i","","")}}))},function(e,t,n){"use strict";n(13)("link",(function(e){return function(t){return e(this,"a","href",t)}}))},function(e,t,n){"use strict";n(13)("small",(function(e){return function(){return e(this,"small","","")}}))},function(e,t,n){"use strict";n(13)("strike",(function(e){return function(){return e(this,"strike","","")}}))},function(e,t,n){"use strict";n(13)("sub",(function(e){return function(){return e(this,"sub","","")}}))},function(e,t,n){"use strict";n(13)("sup",(function(e){return function(){return e(this,"sup","","")}}))},function(e,t,n){var r=n(0);r(r.S,"Date",{now:function(){return(new Date).getTime()}})},function(e,t,n){"use strict";var r=n(0),i=n(9),a=n(23);r(r.P+r.F*n(3)((function(){return null!==new Date(NaN).toJSON()||1!==Date.prototype.toJSON.call({toISOString:function(){return 1}})})),"Date",{toJSON:function(e){var t=i(this),n=a(t);return"number"!=typeof n||isFinite(n)?t.toISOString():null}})},function(e,t,n){var r=n(0),i=n(215);r(r.P+r.F*(Date.prototype.toISOString!==i),"Date",{toISOString:i})},function(e,t,n){"use strict";var r=n(3),i=Date.prototype.getTime,a=Date.prototype.toISOString,o=function(e){return e>9?e:"0"+e};e.exports=r((function(){return"0385-07-25T07:06:39.999Z"!=a.call(new Date(-50000000000001))}))||!r((function(){a.call(new Date(NaN))}))?function(){if(!isFinite(i.call(this)))throw RangeError("Invalid time value");var e=this,t=e.getUTCFullYear(),n=e.getUTCMilliseconds(),r=t<0?"-":t>9999?"+":"";return r+("00000"+Math.abs(t)).slice(r?-6:-4)+"-"+o(e.getUTCMonth()+1)+"-"+o(e.getUTCDate())+"T"+o(e.getUTCHours())+":"+o(e.getUTCMinutes())+":"+o(e.getUTCSeconds())+"."+(n>99?n:"0"+o(n))+"Z"}:a},function(e,t,n){var r=Date.prototype,i=r.toString,a=r.getTime;new Date(NaN)+""!="Invalid Date"&&n(12)(r,"toString",(function(){var e=a.call(this);return e==e?i.call(this):"Invalid Date"}))},function(e,t,n){var r=n(5)("toPrimitive"),i=Date.prototype;r in i||n(11)(i,r,n(218))},function(e,t,n){"use strict";var r=n(1),i=n(23);e.exports=function(e){if("string"!==e&&"number"!==e&&"default"!==e)throw TypeError("Incorrect hint");return i(r(this),"number"!=e)}},function(e,t,n){var r=n(0);r(r.S,"Array",{isArray:n(55)})},function(e,t,n){"use strict";var r=n(19),i=n(0),a=n(9),o=n(111),l=n(83),s=n(6),u=n(84),c=n(85);i(i.S+i.F*!n(58)((function(e){Array.from(e)})),"Array",{from:function(e){var t,n,i,f,d=a(e),p="function"==typeof this?this:Array,m=arguments.length,h=m>1?arguments[1]:void 0,g=void 0!==h,v=0,y=c(d);if(g&&(h=r(h,m>2?arguments[2]:void 0,2)),null==y||p==Array&&l(y))for(n=new p(t=s(d.length));t>v;v++)u(n,v,g?h(d[v],v):d[v]);else for(f=y.call(d),n=new p;!(i=f.next()).done;v++)u(n,v,g?o(f,h,[i.value,v],!0):i.value);return n.length=v,n}})},function(e,t,n){"use strict";var r=n(0),i=n(84);r(r.S+r.F*n(3)((function(){function e(){}return!(Array.of.call(e)instanceof e)})),"Array",{of:function(){for(var e=0,t=arguments.length,n=new("function"==typeof this?this:Array)(t);t>e;)i(n,e,arguments[e++]);return n.length=t,n}})},function(e,t,n){"use strict";var r=n(0),i=n(15),a=[].join;r(r.P+r.F*(n(48)!=Object||!n(22)(a)),"Array",{join:function(e){return a.call(i(this),void 0===e?",":e)}})},function(e,t,n){"use strict";var r=n(0),i=n(72),a=n(20),o=n(35),l=n(6),s=[].slice;r(r.P+r.F*n(3)((function(){i&&s.call(i)})),"Array",{slice:function(e,t){var n=l(this.length),r=a(this);if(t=void 0===t?n:t,"Array"==r)return s.call(this,e,t);for(var i=o(e,n),u=o(t,n),c=l(u-i),f=new Array(c),d=0;d<c;d++)f[d]="String"==r?this.charAt(i+d):this[i+d];return f}})},function(e,t,n){"use strict";var r=n(0),i=n(10),a=n(9),o=n(3),l=[].sort,s=[1,2,3];r(r.P+r.F*(o((function(){s.sort(void 0)}))||!o((function(){s.sort(null)}))||!n(22)(l)),"Array",{sort:function(e){return void 0===e?l.call(a(this)):l.call(a(this),i(e))}})},function(e,t,n){"use strict";var r=n(0),i=n(26)(0),a=n(22)([].forEach,!0);r(r.P+r.F*!a,"Array",{forEach:function(e){return i(this,e,arguments[1])}})},function(e,t,n){var r=n(4),i=n(55),a=n(5)("species");e.exports=function(e){var t;return i(e)&&("function"!=typeof(t=e.constructor)||t!==Array&&!i(t.prototype)||(t=void 0),r(t)&&null===(t=t[a])&&(t=void 0)),void 0===t?Array:t}},function(e,t,n){"use strict";var r=n(0),i=n(26)(1);r(r.P+r.F*!n(22)([].map,!0),"Array",{map:function(e){return i(this,e,arguments[1])}})},function(e,t,n){"use strict";var r=n(0),i=n(26)(2);r(r.P+r.F*!n(22)([].filter,!0),"Array",{filter:function(e){return i(this,e,arguments[1])}})},function(e,t,n){"use strict";var r=n(0),i=n(26)(3);r(r.P+r.F*!n(22)([].some,!0),"Array",{some:function(e){return i(this,e,arguments[1])}})},function(e,t,n){"use strict";var r=n(0),i=n(26)(4);r(r.P+r.F*!n(22)([].every,!0),"Array",{every:function(e){return i(this,e,arguments[1])}})},function(e,t,n){"use strict";var r=n(0),i=n(112);r(r.P+r.F*!n(22)([].reduce,!0),"Array",{reduce:function(e){return i(this,e,arguments.length,arguments[1],!1)}})},function(e,t,n){"use strict";var r=n(0),i=n(112);r(r.P+r.F*!n(22)([].reduceRight,!0),"Array",{reduceRight:function(e){return i(this,e,arguments.length,arguments[1],!0)}})},function(e,t,n){"use strict";var r=n(0),i=n(53)(!1),a=[].indexOf,o=!!a&&1/[1].indexOf(1,-0)<0;r(r.P+r.F*(o||!n(22)(a)),"Array",{indexOf:function(e){return o?a.apply(this,arguments)||0:i(this,e,arguments[1])}})},function(e,t,n){"use strict";var r=n(0),i=n(15),a=n(21),o=n(6),l=[].lastIndexOf,s=!!l&&1/[1].lastIndexOf(1,-0)<0;r(r.P+r.F*(s||!n(22)(l)),"Array",{lastIndexOf:function(e){if(s)return l.apply(this,arguments)||0;var t=i(this),n=o(t.length),r=n-1;for(arguments.length>1&&(r=Math.min(r,a(arguments[1]))),r<0&&(r=n+r);r>=0;r--)if(r in t&&t[r]===e)return r||0;return-1}})},function(e,t,n){var r=n(0);r(r.P,"Array",{copyWithin:n(113)}),n(31)("copyWithin")},function(e,t,n){var r=n(0);r(r.P,"Array",{fill:n(87)}),n(31)("fill")},function(e,t,n){"use strict";var r=n(0),i=n(26)(5),a=!0;"find"in[]&&Array(1).find((function(){a=!1})),r(r.P+r.F*a,"Array",{find:function(e){return i(this,e,arguments.length>1?arguments[1]:void 0)}}),n(31)("find")},function(e,t,n){"use strict";var r=n(0),i=n(26)(6),a="findIndex",o=!0;a in[]&&Array(1)[a]((function(){o=!1})),r(r.P+r.F*o,"Array",{findIndex:function(e){return i(this,e,arguments.length>1?arguments[1]:void 0)}}),n(31)(a)},function(e,t,n){n(38)("Array")},function(e,t,n){var r=n(2),i=n(75),a=n(8).f,o=n(37).f,l=n(57),s=n(50),u=r.RegExp,c=u,f=u.prototype,d=/a/g,p=/a/g,m=new u(d)!==d;if(n(7)&&(!m||n(3)((function(){return p[n(5)("match")]=!1,u(d)!=d||u(p)==p||"/a/i"!=u(d,"i")})))){u=function(e,t){var n=this instanceof u,r=l(e),a=void 0===t;return!n&&r&&e.constructor===u&&a?e:i(m?new c(r&&!a?e.source:e,t):c((r=e instanceof u)?e.source:e,r&&a?s.call(e):t),n?this:f,u)};for(var h=function(e){e in u||a(u,e,{configurable:!0,get:function(){return c[e]},set:function(t){c[e]=t}})},g=o(c),v=0;g.length>v;)h(g[v++]);f.constructor=u,u.prototype=f,n(12)(r,"RegExp",u)}n(38)("RegExp")},function(e,t,n){"use strict";n(116);var r=n(1),i=n(50),a=n(7),o=/./.toString,l=function(e){n(12)(RegExp.prototype,"toString",e,!0)};n(3)((function(){return"/a/b"!=o.call({source:"a",flags:"b"})}))?l((function(){var e=r(this);return"/".concat(e.source,"/","flags"in e?e.flags:!a&&e instanceof RegExp?i.call(e):void 0)})):"toString"!=o.name&&l((function(){return o.call(this)}))},function(e,t,n){"use strict";var r=n(1),i=n(6),a=n(90),o=n(59);n(60)("match",1,(function(e,t,n,l){return[function(n){var r=e(this),i=null==n?void 0:n[t];return void 0!==i?i.call(n,r):new RegExp(n)[t](String(r))},function(e){var t=l(n,e,this);if(t.done)return t.value;var s=r(e),u=String(this);if(!s.global)return o(s,u);var c=s.unicode;s.lastIndex=0;for(var f,d=[],p=0;null!==(f=o(s,u));){var m=String(f[0]);d[p]=m,""===m&&(s.lastIndex=a(u,i(s.lastIndex),c)),p++}return 0===p?null:d}]}))},function(e,t,n){"use strict";var r=n(1),i=n(9),a=n(6),o=n(21),l=n(90),s=n(59),u=Math.max,c=Math.min,f=Math.floor,d=/\$([$&`']|\d\d?|<[^>]*>)/g,p=/\$([$&`']|\d\d?)/g;n(60)("replace",2,(function(e,t,n,m){return[function(r,i){var a=e(this),o=null==r?void 0:r[t];return void 0!==o?o.call(r,a,i):n.call(String(a),r,i)},function(e,t){var i=m(n,e,this,t);if(i.done)return i.value;var f=r(e),d=String(this),p="function"==typeof t;p||(t=String(t));var g=f.global;if(g){var v=f.unicode;f.lastIndex=0}for(var y=[];;){var b=s(f,d);if(null===b)break;if(y.push(b),!g)break;""===String(b[0])&&(f.lastIndex=l(d,a(f.lastIndex),v))}for(var w,k="",_=0,E=0;E<y.length;E++){b=y[E];for(var x=String(b[0]),z=u(c(o(b.index),d.length),0),S=[],T=1;T<b.length;T++)S.push(void 0===(w=b[T])?w:String(w));var N=b.groups;if(p){var P=[x].concat(S,z,d);void 0!==N&&P.push(N);var j=String(t.apply(void 0,P))}else j=h(x,d,z,S,N,t);z>=_&&(k+=d.slice(_,z)+j,_=z+x.length)}return k+d.slice(_)}];function h(e,t,r,a,o,l){var s=r+e.length,u=a.length,c=p;return void 0!==o&&(o=i(o),c=d),n.call(l,c,(function(n,i){var l;switch(i.charAt(0)){case"$":return"$";case"&":return e;case"`":return t.slice(0,r);case"'":return t.slice(s);case"<":l=o[i.slice(1,-1)];break;default:var c=+i;if(0===c)return n;if(c>u){var d=f(c/10);return 0===d?n:d<=u?void 0===a[d-1]?i.charAt(1):a[d-1]+i.charAt(1):n}l=a[c-1]}return void 0===l?"":l}))}}))},function(e,t,n){"use strict";var r=n(1),i=n(102),a=n(59);n(60)("search",1,(function(e,t,n,o){return[function(n){var r=e(this),i=null==n?void 0:n[t];return void 0!==i?i.call(n,r):new RegExp(n)[t](String(r))},function(e){var t=o(n,e,this);if(t.done)return t.value;var l=r(e),s=String(this),u=l.lastIndex;i(u,0)||(l.lastIndex=0);var c=a(l,s);return i(l.lastIndex,u)||(l.lastIndex=u),null===c?-1:c.index}]}))},function(e,t,n){"use strict";var r=n(57),i=n(1),a=n(51),o=n(90),l=n(6),s=n(59),u=n(89),c=n(3),f=Math.min,d=[].push,p="length",m=!c((function(){RegExp(4294967295,"y")}));n(60)("split",2,(function(e,t,n,c){var h;return h="c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1)[p]||2!="ab".split(/(?:ab)*/)[p]||4!=".".split(/(.?)(.?)/)[p]||".".split(/()()/)[p]>1||"".split(/.?/)[p]?function(e,t){var i=String(this);if(void 0===e&&0===t)return[];if(!r(e))return n.call(i,e,t);for(var a,o,l,s=[],c=(e.ignoreCase?"i":"")+(e.multiline?"m":"")+(e.unicode?"u":"")+(e.sticky?"y":""),f=0,m=void 0===t?4294967295:t>>>0,h=new RegExp(e.source,c+"g");(a=u.call(h,i))&&!((o=h.lastIndex)>f&&(s.push(i.slice(f,a.index)),a[p]>1&&a.index<i[p]&&d.apply(s,a.slice(1)),l=a[0][p],f=o,s[p]>=m));)h.lastIndex===a.index&&h.lastIndex++;return f===i[p]?!l&&h.test("")||s.push(""):s.push(i.slice(f)),s[p]>m?s.slice(0,m):s}:"0".split(void 0,0)[p]?function(e,t){return void 0===e&&0===t?[]:n.call(this,e,t)}:n,[function(n,r){var i=e(this),a=null==n?void 0:n[t];return void 0!==a?a.call(n,i,r):h.call(String(i),n,r)},function(e,t){var r=c(h,e,this,t,h!==n);if(r.done)return r.value;var u=i(e),d=String(this),p=a(u,RegExp),g=u.unicode,v=(u.ignoreCase?"i":"")+(u.multiline?"m":"")+(u.unicode?"u":"")+(m?"y":"g"),y=new p(m?u:"^(?:"+u.source+")",v),b=void 0===t?4294967295:t>>>0;if(0===b)return[];if(0===d.length)return null===s(y,d)?[d]:[];for(var w=0,k=0,_=[];k<d.length;){y.lastIndex=m?k:0;var E,x=s(y,m?d:d.slice(k));if(null===x||(E=f(l(y.lastIndex+(m?0:k)),d.length))===w)k=o(d,k,g);else{if(_.push(d.slice(w,k)),_.length===b)return _;for(var z=1;z<=x.length-1;z++)if(_.push(x[z]),_.length===b)return _;k=w=E}}return _.push(d.slice(w)),_}]}))},function(e,t,n){"use strict";var r,i,a,o,l=n(29),s=n(2),u=n(19),c=n(44),f=n(0),d=n(4),p=n(10),m=n(39),h=n(40),g=n(51),v=n(91).set,y=n(92)(),b=n(93),w=n(117),k=n(61),_=n(118),E=s.TypeError,x=s.process,z=x&&x.versions,S=z&&z.v8||"",T=s.Promise,N="process"==c(x),P=function(){},j=i=b.f,C=!!function(){try{var e=T.resolve(1),t=(e.constructor={})[n(5)("species")]=function(e){e(P,P)};return(N||"function"==typeof PromiseRejectionEvent)&&e.then(P)instanceof t&&0!==S.indexOf("6.6")&&-1===k.indexOf("Chrome/66")}catch(e){}}(),I=function(e){var t;return!(!d(e)||"function"!=typeof(t=e.then))&&t},M=function(e,t){if(!e._n){e._n=!0;var n=e._c;y((function(){for(var r=e._v,i=1==e._s,a=0,o=function(t){var n,a,o,l=i?t.ok:t.fail,s=t.resolve,u=t.reject,c=t.domain;try{l?(i||(2==e._h&&L(e),e._h=1),!0===l?n=r:(c&&c.enter(),n=l(r),c&&(c.exit(),o=!0)),n===t.promise?u(E("Promise-chain cycle")):(a=I(n))?a.call(n,s,u):s(n)):u(r)}catch(e){c&&!o&&c.exit(),u(e)}};n.length>a;)o(n[a++]);e._c=[],e._n=!1,t&&!e._h&&O(e)}))}},O=function(e){v.call(s,(function(){var t,n,r,i=e._v,a=D(e);if(a&&(t=w((function(){N?x.emit("unhandledRejection",i,e):(n=s.onunhandledrejection)?n({promise:e,reason:i}):(r=s.console)&&r.error&&r.error("Unhandled promise rejection",i)})),e._h=N||D(e)?2:1),e._a=void 0,a&&t.e)throw t.v}))},D=function(e){return 1!==e._h&&0===(e._a||e._c).length},L=function(e){v.call(s,(function(){var t;N?x.emit("rejectionHandled",e):(t=s.onrejectionhandled)&&t({promise:e,reason:e._v})}))},A=function(e){var t=this;t._d||(t._d=!0,(t=t._w||t)._v=e,t._s=2,t._a||(t._a=t._c.slice()),M(t,!0))},F=function(e){var t,n=this;if(!n._d){n._d=!0,n=n._w||n;try{if(n===e)throw E("Promise can't be resolved itself");(t=I(e))?y((function(){var r={_w:n,_d:!1};try{t.call(e,u(F,r,1),u(A,r,1))}catch(e){A.call(r,e)}})):(n._v=e,n._s=1,M(n,!1))}catch(e){A.call({_w:n,_d:!1},e)}}};C||(T=function(e){m(this,T,"Promise","_h"),p(e),r.call(this);try{e(u(F,this,1),u(A,this,1))}catch(e){A.call(this,e)}},(r=function(e){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1}).prototype=n(41)(T.prototype,{then:function(e,t){var n=j(g(this,T));return n.ok="function"!=typeof e||e,n.fail="function"==typeof t&&t,n.domain=N?x.domain:void 0,this._c.push(n),this._a&&this._a.push(n),this._s&&M(this,!1),n.promise},catch:function(e){return this.then(void 0,e)}}),a=function(){var e=new r;this.promise=e,this.resolve=u(F,e,1),this.reject=u(A,e,1)},b.f=j=function(e){return e===T||e===o?new a(e):i(e)}),f(f.G+f.W+f.F*!C,{Promise:T}),n(43)(T,"Promise"),n(38)("Promise"),o=n(18).Promise,f(f.S+f.F*!C,"Promise",{reject:function(e){var t=j(this);return(0,t.reject)(e),t.promise}}),f(f.S+f.F*(l||!C),"Promise",{resolve:function(e){return _(l&&this===o?T:this,e)}}),f(f.S+f.F*!(C&&n(58)((function(e){T.all(e).catch(P)}))),"Promise",{all:function(e){var t=this,n=j(t),r=n.resolve,i=n.reject,a=w((function(){var n=[],a=0,o=1;h(e,!1,(function(e){var l=a++,s=!1;n.push(void 0),o++,t.resolve(e).then((function(e){s||(s=!0,n[l]=e,--o||r(n))}),i)})),--o||r(n)}));return a.e&&i(a.v),n.promise},race:function(e){var t=this,n=j(t),r=n.reject,i=w((function(){h(e,!1,(function(e){t.resolve(e).then(n.resolve,r)}))}));return i.e&&r(i.v),n.promise}})},function(e,t,n){"use strict";var r=n(123),i=n(42);n(62)("WeakSet",(function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}}),{add:function(e){return r.def(i(this,"WeakSet"),e,!0)}},r,!1,!0)},function(e,t,n){"use strict";var r=n(0),i=n(63),a=n(94),o=n(1),l=n(35),s=n(6),u=n(4),c=n(2).ArrayBuffer,f=n(51),d=a.ArrayBuffer,p=a.DataView,m=i.ABV&&c.isView,h=d.prototype.slice,g=i.VIEW;r(r.G+r.W+r.F*(c!==d),{ArrayBuffer:d}),r(r.S+r.F*!i.CONSTR,"ArrayBuffer",{isView:function(e){return m&&m(e)||u(e)&&g in e}}),r(r.P+r.U+r.F*n(3)((function(){return!new d(2).slice(1,void 0).byteLength})),"ArrayBuffer",{slice:function(e,t){if(void 0!==h&&void 0===t)return h.call(o(this),e);for(var n=o(this).byteLength,r=l(e,n),i=l(void 0===t?n:t,n),a=new(f(this,d))(s(i-r)),u=new p(this),c=new p(a),m=0;r<i;)c.setUint8(m++,u.getUint8(r++));return a}}),n(38)("ArrayBuffer")},function(e,t,n){var r=n(0);r(r.G+r.W+r.F*!n(63).ABV,{DataView:n(94).DataView})},function(e,t,n){n(27)("Int8",1,(function(e){return function(t,n,r){return e(this,t,n,r)}}))},function(e,t,n){n(27)("Uint8",1,(function(e){return function(t,n,r){return e(this,t,n,r)}}))},function(e,t,n){n(27)("Uint8",1,(function(e){return function(t,n,r){return e(this,t,n,r)}}),!0)},function(e,t,n){n(27)("Int16",2,(function(e){return function(t,n,r){return e(this,t,n,r)}}))},function(e,t,n){n(27)("Uint16",2,(function(e){return function(t,n,r){return e(this,t,n,r)}}))},function(e,t,n){n(27)("Int32",4,(function(e){return function(t,n,r){return e(this,t,n,r)}}))},function(e,t,n){n(27)("Uint32",4,(function(e){return function(t,n,r){return e(this,t,n,r)}}))},function(e,t,n){n(27)("Float32",4,(function(e){return function(t,n,r){return e(this,t,n,r)}}))},function(e,t,n){n(27)("Float64",8,(function(e){return function(t,n,r){return e(this,t,n,r)}}))},function(e,t,n){var r=n(0),i=n(10),a=n(1),o=(n(2).Reflect||{}).apply,l=Function.apply;r(r.S+r.F*!n(3)((function(){o((function(){}))})),"Reflect",{apply:function(e,t,n){var r=i(e),s=a(n);return o?o(r,t,s):l.call(r,t,s)}})},function(e,t,n){var r=n(0),i=n(36),a=n(10),o=n(1),l=n(4),s=n(3),u=n(103),c=(n(2).Reflect||{}).construct,f=s((function(){function e(){}return!(c((function(){}),[],e)instanceof e)})),d=!s((function(){c((function(){}))}));r(r.S+r.F*(f||d),"Reflect",{construct:function(e,t){a(e),o(t);var n=arguments.length<3?e:a(arguments[2]);if(d&&!f)return c(e,t,n);if(e==n){switch(t.length){case 0:return new e;case 1:return new e(t[0]);case 2:return new e(t[0],t[1]);case 3:return new e(t[0],t[1],t[2]);case 4:return new e(t[0],t[1],t[2],t[3])}var r=[null];return r.push.apply(r,t),new(u.apply(e,r))}var s=n.prototype,p=i(l(s)?s:Object.prototype),m=Function.apply.call(e,p,t);return l(m)?m:p}})},function(e,t,n){var r=n(8),i=n(0),a=n(1),o=n(23);i(i.S+i.F*n(3)((function(){Reflect.defineProperty(r.f({},1,{value:1}),1,{value:2})})),"Reflect",{defineProperty:function(e,t,n){a(e),t=o(t,!0),a(n);try{return r.f(e,t,n),!0}catch(e){return!1}}})},function(e,t,n){var r=n(0),i=n(16).f,a=n(1);r(r.S,"Reflect",{deleteProperty:function(e,t){var n=i(a(e),t);return!(n&&!n.configurable)&&delete e[t]}})},function(e,t,n){"use strict";var r=n(0),i=n(1),a=function(e){this._t=i(e),this._i=0;var t,n=this._k=[];for(t in e)n.push(t)};n(80)(a,"Object",(function(){var e,t=this._k;do{if(this._i>=t.length)return{value:void 0,done:!0}}while(!((e=t[this._i++])in this._t));return{value:e,done:!1}})),r(r.S,"Reflect",{enumerate:function(e){return new a(e)}})},function(e,t,n){var r=n(16),i=n(17),a=n(14),o=n(0),l=n(4),s=n(1);o(o.S,"Reflect",{get:function e(t,n){var o,u,c=arguments.length<3?t:arguments[2];return s(t)===c?t[n]:(o=r.f(t,n))?a(o,"value")?o.value:void 0!==o.get?o.get.call(c):void 0:l(u=i(t))?e(u,n,c):void 0}})},function(e,t,n){var r=n(16),i=n(0),a=n(1);i(i.S,"Reflect",{getOwnPropertyDescriptor:function(e,t){return r.f(a(e),t)}})},function(e,t,n){var r=n(0),i=n(17),a=n(1);r(r.S,"Reflect",{getPrototypeOf:function(e){return i(a(e))}})},function(e,t,n){var r=n(0);r(r.S,"Reflect",{has:function(e,t){return t in e}})},function(e,t,n){var r=n(0),i=n(1),a=Object.isExtensible;r(r.S,"Reflect",{isExtensible:function(e){return i(e),!a||a(e)}})},function(e,t,n){var r=n(0);r(r.S,"Reflect",{ownKeys:n(125)})},function(e,t,n){var r=n(0),i=n(1),a=Object.preventExtensions;r(r.S,"Reflect",{preventExtensions:function(e){i(e);try{return a&&a(e),!0}catch(e){return!1}}})},function(e,t,n){var r=n(8),i=n(16),a=n(17),o=n(14),l=n(0),s=n(32),u=n(1),c=n(4);l(l.S,"Reflect",{set:function e(t,n,l){var f,d,p=arguments.length<4?t:arguments[3],m=i.f(u(t),n);if(!m){if(c(d=a(t)))return e(d,n,l,p);m=s(0)}if(o(m,"value")){if(!1===m.writable||!c(p))return!1;if(f=i.f(p,n)){if(f.get||f.set||!1===f.writable)return!1;f.value=l,r.f(p,n,f)}else r.f(p,n,s(0,l));return!0}return void 0!==m.set&&(m.set.call(p,l),!0)}})},function(e,t,n){var r=n(0),i=n(73);i&&r(r.S,"Reflect",{setPrototypeOf:function(e,t){i.check(e,t);try{return i.set(e,t),!0}catch(e){return!1}}})},function(e,t,n){"use strict";var r=n(0),i=n(53)(!0);r(r.P,"Array",{includes:function(e){return i(this,e,arguments.length>1?arguments[1]:void 0)}}),n(31)("includes")},function(e,t,n){"use strict";var r=n(0),i=n(126),a=n(9),o=n(6),l=n(10),s=n(86);r(r.P,"Array",{flatMap:function(e){var t,n,r=a(this);return l(e),t=o(r.length),n=s(r,0),i(n,r,r,t,0,1,e,arguments[1]),n}}),n(31)("flatMap")},function(e,t,n){"use strict";var r=n(0),i=n(126),a=n(9),o=n(6),l=n(21),s=n(86);r(r.P,"Array",{flatten:function(){var e=arguments[0],t=a(this),n=o(t.length),r=s(t,0);return i(r,t,t,n,0,void 0===e?1:l(e)),r}}),n(31)("flatten")},function(e,t,n){"use strict";var r=n(0),i=n(56)(!0);r(r.P,"String",{at:function(e){return i(this,e)}})},function(e,t,n){"use strict";var r=n(0),i=n(127),a=n(61),o=/Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(a);r(r.P+r.F*o,"String",{padStart:function(e){return i(this,e,arguments.length>1?arguments[1]:void 0,!0)}})},function(e,t,n){"use strict";var r=n(0),i=n(127),a=n(61),o=/Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(a);r(r.P+r.F*o,"String",{padEnd:function(e){return i(this,e,arguments.length>1?arguments[1]:void 0,!1)}})},function(e,t,n){"use strict";n(45)("trimLeft",(function(e){return function(){return e(this,1)}}),"trimStart")},function(e,t,n){"use strict";n(45)("trimRight",(function(e){return function(){return e(this,2)}}),"trimEnd")},function(e,t,n){"use strict";var r=n(0),i=n(24),a=n(6),o=n(57),l=n(50),s=RegExp.prototype,u=function(e,t){this._r=e,this._s=t};n(80)(u,"RegExp String",(function(){var e=this._r.exec(this._s);return{value:e,done:null===e}})),r(r.P,"String",{matchAll:function(e){if(i(this),!o(e))throw TypeError(e+" is not a regexp!");var t=String(this),n="flags"in s?String(e.flags):l.call(e),r=new RegExp(e.source,~n.indexOf("g")?n:"g"+n);return r.lastIndex=a(e.lastIndex),new u(r,t)}})},function(e,t,n){n(69)("asyncIterator")},function(e,t,n){n(69)("observable")},function(e,t,n){var r=n(0),i=n(125),a=n(15),o=n(16),l=n(84);r(r.S,"Object",{getOwnPropertyDescriptors:function(e){for(var t,n,r=a(e),s=o.f,u=i(r),c={},f=0;u.length>f;)void 0!==(n=s(r,t=u[f++]))&&l(c,t,n);return c}})},function(e,t,n){var r=n(0),i=n(128)(!1);r(r.S,"Object",{values:function(e){return i(e)}})},function(e,t,n){var r=n(0),i=n(128)(!0);r(r.S,"Object",{entries:function(e){return i(e)}})},function(e,t,n){"use strict";var r=n(0),i=n(9),a=n(10),o=n(8);n(7)&&r(r.P+n(64),"Object",{__defineGetter__:function(e,t){o.f(i(this),e,{get:a(t),enumerable:!0,configurable:!0})}})},function(e,t,n){"use strict";var r=n(0),i=n(9),a=n(10),o=n(8);n(7)&&r(r.P+n(64),"Object",{__defineSetter__:function(e,t){o.f(i(this),e,{set:a(t),enumerable:!0,configurable:!0})}})},function(e,t,n){"use strict";var r=n(0),i=n(9),a=n(23),o=n(17),l=n(16).f;n(7)&&r(r.P+n(64),"Object",{__lookupGetter__:function(e){var t,n=i(this),r=a(e,!0);do{if(t=l(n,r))return t.get}while(n=o(n))}})},function(e,t,n){"use strict";var r=n(0),i=n(9),a=n(23),o=n(17),l=n(16).f;n(7)&&r(r.P+n(64),"Object",{__lookupSetter__:function(e){var t,n=i(this),r=a(e,!0);do{if(t=l(n,r))return t.set}while(n=o(n))}})},function(e,t,n){var r=n(0);r(r.P+r.R,"Map",{toJSON:n(129)("Map")})},function(e,t,n){var r=n(0);r(r.P+r.R,"Set",{toJSON:n(129)("Set")})},function(e,t,n){n(65)("Map")},function(e,t,n){n(65)("Set")},function(e,t,n){n(65)("WeakMap")},function(e,t,n){n(65)("WeakSet")},function(e,t,n){n(66)("Map")},function(e,t,n){n(66)("Set")},function(e,t,n){n(66)("WeakMap")},function(e,t,n){n(66)("WeakSet")},function(e,t,n){var r=n(0);r(r.G,{global:n(2)})},function(e,t,n){var r=n(0);r(r.S,"System",{global:n(2)})},function(e,t,n){var r=n(0),i=n(20);r(r.S,"Error",{isError:function(e){return"Error"===i(e)}})},function(e,t,n){var r=n(0);r(r.S,"Math",{clamp:function(e,t,n){return Math.min(n,Math.max(t,e))}})},function(e,t,n){var r=n(0);r(r.S,"Math",{DEG_PER_RAD:Math.PI/180})},function(e,t,n){var r=n(0),i=180/Math.PI;r(r.S,"Math",{degrees:function(e){return e*i}})},function(e,t,n){var r=n(0),i=n(131),a=n(110);r(r.S,"Math",{fscale:function(e,t,n,r,o){return a(i(e,t,n,r,o))}})},function(e,t,n){var r=n(0);r(r.S,"Math",{iaddh:function(e,t,n,r){var i=e>>>0,a=n>>>0;return(t>>>0)+(r>>>0)+((i&a|(i|a)&~(i+a>>>0))>>>31)|0}})},function(e,t,n){var r=n(0);r(r.S,"Math",{isubh:function(e,t,n,r){var i=e>>>0,a=n>>>0;return(t>>>0)-(r>>>0)-((~i&a|~(i^a)&i-a>>>0)>>>31)|0}})},function(e,t,n){var r=n(0);r(r.S,"Math",{imulh:function(e,t){var n=+e,r=+t,i=65535&n,a=65535&r,o=n>>16,l=r>>16,s=(o*a>>>0)+(i*a>>>16);return o*l+(s>>16)+((i*l>>>0)+(65535&s)>>16)}})},function(e,t,n){var r=n(0);r(r.S,"Math",{RAD_PER_DEG:180/Math.PI})},function(e,t,n){var r=n(0),i=Math.PI/180;r(r.S,"Math",{radians:function(e){return e*i}})},function(e,t,n){var r=n(0);r(r.S,"Math",{scale:n(131)})},function(e,t,n){var r=n(0);r(r.S,"Math",{umulh:function(e,t){var n=+e,r=+t,i=65535&n,a=65535&r,o=n>>>16,l=r>>>16,s=(o*a>>>0)+(i*a>>>16);return o*l+(s>>>16)+((i*l>>>0)+(65535&s)>>>16)}})},function(e,t,n){var r=n(0);r(r.S,"Math",{signbit:function(e){return(e=+e)!=e?e:0==e?1/e==1/0:e>0}})},function(e,t,n){"use strict";var r=n(0),i=n(18),a=n(2),o=n(51),l=n(118);r(r.P+r.R,"Promise",{finally:function(e){var t=o(this,i.Promise||a.Promise),n="function"==typeof e;return this.then(n?function(n){return l(t,e()).then((function(){return n}))}:e,n?function(n){return l(t,e()).then((function(){throw n}))}:e)}})},function(e,t,n){"use strict";var r=n(0),i=n(93),a=n(117);r(r.S,"Promise",{try:function(e){var t=i.f(this),n=a(e);return(n.e?t.reject:t.resolve)(n.v),t.promise}})},function(e,t,n){var r=n(28),i=n(1),a=r.key,o=r.set;r.exp({defineMetadata:function(e,t,n,r){o(e,t,i(n),a(r))}})},function(e,t,n){var r=n(28),i=n(1),a=r.key,o=r.map,l=r.store;r.exp({deleteMetadata:function(e,t){var n=arguments.length<3?void 0:a(arguments[2]),r=o(i(t),n,!1);if(void 0===r||!r.delete(e))return!1;if(r.size)return!0;var s=l.get(t);return s.delete(n),!!s.size||l.delete(t)}})},function(e,t,n){var r=n(28),i=n(1),a=n(17),o=r.has,l=r.get,s=r.key,u=function(e,t,n){if(o(e,t,n))return l(e,t,n);var r=a(t);return null!==r?u(e,r,n):void 0};r.exp({getMetadata:function(e,t){return u(e,i(t),arguments.length<3?void 0:s(arguments[2]))}})},function(e,t,n){var r=n(121),i=n(130),a=n(28),o=n(1),l=n(17),s=a.keys,u=a.key,c=function(e,t){var n=s(e,t),a=l(e);if(null===a)return n;var o=c(a,t);return o.length?n.length?i(new r(n.concat(o))):o:n};a.exp({getMetadataKeys:function(e){return c(o(e),arguments.length<2?void 0:u(arguments[1]))}})},function(e,t,n){var r=n(28),i=n(1),a=r.get,o=r.key;r.exp({getOwnMetadata:function(e,t){return a(e,i(t),arguments.length<3?void 0:o(arguments[2]))}})},function(e,t,n){var r=n(28),i=n(1),a=r.keys,o=r.key;r.exp({getOwnMetadataKeys:function(e){return a(i(e),arguments.length<2?void 0:o(arguments[1]))}})},function(e,t,n){var r=n(28),i=n(1),a=n(17),o=r.has,l=r.key,s=function(e,t,n){if(o(e,t,n))return!0;var r=a(t);return null!==r&&s(e,r,n)};r.exp({hasMetadata:function(e,t){return s(e,i(t),arguments.length<3?void 0:l(arguments[2]))}})},function(e,t,n){var r=n(28),i=n(1),a=r.has,o=r.key;r.exp({hasOwnMetadata:function(e,t){return a(e,i(t),arguments.length<3?void 0:o(arguments[2]))}})},function(e,t,n){var r=n(28),i=n(1),a=n(10),o=r.key,l=r.set;r.exp({metadata:function(e,t){return function(n,r){l(e,t,(void 0!==r?i:a)(n),o(r))}}})},function(e,t,n){var r=n(0),i=n(92)(),a=n(2).process,o="process"==n(20)(a);r(r.G,{asap:function(e){var t=o&&a.domain;i(t?t.bind(e):e)}})},function(e,t,n){"use strict";var r=n(0),i=n(2),a=n(18),o=n(92)(),l=n(5)("observable"),s=n(10),u=n(1),c=n(39),f=n(41),d=n(11),p=n(40),m=p.RETURN,h=function(e){return null==e?void 0:s(e)},g=function(e){var t=e._c;t&&(e._c=void 0,t())},v=function(e){return void 0===e._o},y=function(e){v(e)||(e._o=void 0,g(e))},b=function(e,t){u(e),this._c=void 0,this._o=e,e=new w(this);try{var n=t(e),r=n;null!=n&&("function"==typeof n.unsubscribe?n=function(){r.unsubscribe()}:s(n),this._c=n)}catch(t){return void e.error(t)}v(this)&&g(this)};b.prototype=f({},{unsubscribe:function(){y(this)}});var w=function(e){this._s=e};w.prototype=f({},{next:function(e){var t=this._s;if(!v(t)){var n=t._o;try{var r=h(n.next);if(r)return r.call(n,e)}catch(e){try{y(t)}finally{throw e}}}},error:function(e){var t=this._s;if(v(t))throw e;var n=t._o;t._o=void 0;try{var r=h(n.error);if(!r)throw e;e=r.call(n,e)}catch(e){try{g(t)}finally{throw e}}return g(t),e},complete:function(e){var t=this._s;if(!v(t)){var n=t._o;t._o=void 0;try{var r=h(n.complete);e=r?r.call(n,e):void 0}catch(e){try{g(t)}finally{throw e}}return g(t),e}}});var k=function(e){c(this,k,"Observable","_f")._f=s(e)};f(k.prototype,{subscribe:function(e){return new b(e,this._f)},forEach:function(e){var t=this;return new(a.Promise||i.Promise)((function(n,r){s(e);var i=t.subscribe({next:function(t){try{return e(t)}catch(e){r(e),i.unsubscribe()}},error:r,complete:n})}))}}),f(k,{from:function(e){var t="function"==typeof this?this:k,n=h(u(e)[l]);if(n){var r=u(n.call(e));return r.constructor===t?r:new t((function(e){return r.subscribe(e)}))}return new t((function(t){var n=!1;return o((function(){if(!n){try{if(p(e,!1,(function(e){if(t.next(e),n)return m}))===m)return}catch(e){if(n)throw e;return void t.error(e)}t.complete()}})),function(){n=!0}}))},of:function(){for(var e=0,t=arguments.length,n=new Array(t);e<t;)n[e]=arguments[e++];return new("function"==typeof this?this:k)((function(e){var t=!1;return o((function(){if(!t){for(var r=0;r<n.length;++r)if(e.next(n[r]),t)return;e.complete()}})),function(){t=!0}}))}}),d(k.prototype,l,(function(){return this})),r(r.G,{Observable:k}),n(38)("Observable")},function(e,t,n){var r=n(2),i=n(0),a=n(61),o=[].slice,l=/MSIE .\./.test(a),s=function(e){return function(t,n){var r=arguments.length>2,i=!!r&&o.call(arguments,2);return e(r?function(){("function"==typeof t?t:Function(t)).apply(this,i)}:t,n)}};i(i.G+i.B+i.F*l,{setTimeout:s(r.setTimeout),setInterval:s(r.setInterval)})},function(e,t,n){var r=n(0),i=n(91);r(r.G+r.B,{setImmediate:i.set,clearImmediate:i.clear})},function(e,t,n){for(var r=n(88),i=n(34),a=n(12),o=n(2),l=n(11),s=n(46),u=n(5),c=u("iterator"),f=u("toStringTag"),d=s.Array,p={CSSRuleList:!0,CSSStyleDeclaration:!1,CSSValueList:!1,ClientRectList:!1,DOMRectList:!1,DOMStringList:!1,DOMTokenList:!0,DataTransferItemList:!1,FileList:!1,HTMLAllCollection:!1,HTMLCollection:!1,HTMLFormElement:!1,HTMLSelectElement:!1,MediaList:!0,MimeTypeArray:!1,NamedNodeMap:!1,NodeList:!0,PaintRequestList:!1,Plugin:!1,PluginArray:!1,SVGLengthList:!1,SVGNumberList:!1,SVGPathSegList:!1,SVGPointList:!1,SVGStringList:!1,SVGTransformList:!1,SourceBufferList:!1,StyleSheetList:!0,TextTrackCueList:!1,TextTrackList:!1,TouchList:!1},m=i(p),h=0;h<m.length;h++){var g,v=m[h],y=p[v],b=o[v],w=b&&b.prototype;if(w&&(w[c]||l(w,c,d),w[f]||l(w,f,v),s[v]=d,y))for(g in r)w[g]||a(w,g,r[g],!0)}},function(e,t,n){(function(t){!function(t){"use strict";var n=Object.prototype,r=n.hasOwnProperty,i="function"==typeof Symbol?Symbol:{},a=i.iterator||"@@iterator",o=i.asyncIterator||"@@asyncIterator",l=i.toStringTag||"@@toStringTag",s="object"==typeof e,u=t.regeneratorRuntime;if(u)s&&(e.exports=u);else{(u=t.regeneratorRuntime=s?e.exports:{}).wrap=h;var c={},f={};f[a]=function(){return this};var d=Object.getPrototypeOf,p=d&&d(d(S([])));p&&p!==n&&r.call(p,a)&&(f=p);var m=b.prototype=v.prototype=Object.create(f);y.prototype=m.constructor=b,b.constructor=y,b[l]=y.displayName="GeneratorFunction",u.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===y||"GeneratorFunction"===(t.displayName||t.name))},u.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,b):(e.__proto__=b,l in e||(e[l]="GeneratorFunction")),e.prototype=Object.create(m),e},u.awrap=function(e){return{__await:e}},w(k.prototype),k.prototype[o]=function(){return this},u.AsyncIterator=k,u.async=function(e,t,n,r){var i=new k(h(e,t,n,r));return u.isGeneratorFunction(t)?i:i.next().then((function(e){return e.done?e.value:i.next()}))},w(m),m[l]="Generator",m[a]=function(){return this},m.toString=function(){return"[object Generator]"},u.keys=function(e){var t=[];for(var n in e)t.push(n);return t.reverse(),function n(){for(;t.length;){var r=t.pop();if(r in e)return n.value=r,n.done=!1,n}return n.done=!0,n}},u.values=S,z.prototype={constructor:z,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(x),!e)for(var t in this)"t"===t.charAt(0)&&r.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function n(n,r){return o.type="throw",o.arg=e,t.next=n,r&&(t.method="next",t.arg=void 0),!!r}for(var i=this.tryEntries.length-1;i>=0;--i){var a=this.tryEntries[i],o=a.completion;if("root"===a.tryLoc)return n("end");if(a.tryLoc<=this.prev){var l=r.call(a,"catchLoc"),s=r.call(a,"finallyLoc");if(l&&s){if(this.prev<a.catchLoc)return n(a.catchLoc,!0);if(this.prev<a.finallyLoc)return n(a.finallyLoc)}else if(l){if(this.prev<a.catchLoc)return n(a.catchLoc,!0)}else{if(!s)throw new Error("try statement without catch or finally");if(this.prev<a.finallyLoc)return n(a.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var i=this.tryEntries[n];if(i.tryLoc<=this.prev&&r.call(i,"finallyLoc")&&this.prev<i.finallyLoc){var a=i;break}}a&&("break"===e||"continue"===e)&&a.tryLoc<=t&&t<=a.finallyLoc&&(a=null);var o=a?a.completion:{};return o.type=e,o.arg=t,a?(this.method="next",this.next=a.finallyLoc,c):this.complete(o)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),c},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),x(n),c}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var r=n.completion;if("throw"===r.type){var i=r.arg;x(n)}return i}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,n){return this.delegate={iterator:S(e),resultName:t,nextLoc:n},"next"===this.method&&(this.arg=void 0),c}}}function h(e,t,n,r){var i=t&&t.prototype instanceof v?t:v,a=Object.create(i.prototype),o=new z(r||[]);return a._invoke=function(e,t,n){var r="suspendedStart";return function(i,a){if("executing"===r)throw new Error("Generator is already running");if("completed"===r){if("throw"===i)throw a;return T()}for(n.method=i,n.arg=a;;){var o=n.delegate;if(o){var l=_(o,n);if(l){if(l===c)continue;return l}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if("suspendedStart"===r)throw r="completed",n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);r="executing";var s=g(e,t,n);if("normal"===s.type){if(r=n.done?"completed":"suspendedYield",s.arg===c)continue;return{value:s.arg,done:n.done}}"throw"===s.type&&(r="completed",n.method="throw",n.arg=s.arg)}}}(e,n,o),a}function g(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}function v(){}function y(){}function b(){}function w(e){["next","throw","return"].forEach((function(t){e[t]=function(e){return this._invoke(t,e)}}))}function k(e){function n(t,i,a,o){var l=g(e[t],e,i);if("throw"!==l.type){var s=l.arg,u=s.value;return u&&"object"==typeof u&&r.call(u,"__await")?Promise.resolve(u.__await).then((function(e){n("next",e,a,o)}),(function(e){n("throw",e,a,o)})):Promise.resolve(u).then((function(e){s.value=e,a(s)}),o)}o(l.arg)}var i;"object"==typeof t.process&&t.process.domain&&(n=t.process.domain.bind(n)),this._invoke=function(e,t){function r(){return new Promise((function(r,i){n(e,t,r,i)}))}return i=i?i.then(r,r):r()}}function _(e,t){var n=e.iterator[t.method];if(void 0===n){if(t.delegate=null,"throw"===t.method){if(e.iterator.return&&(t.method="return",t.arg=void 0,_(e,t),"throw"===t.method))return c;t.method="throw",t.arg=new TypeError("The iterator does not provide a 'throw' method")}return c}var r=g(n,e.iterator,t.arg);if("throw"===r.type)return t.method="throw",t.arg=r.arg,t.delegate=null,c;var i=r.arg;return i?i.done?(t[e.resultName]=i.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=void 0),t.delegate=null,c):i:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,c)}function E(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function x(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function z(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(E,this),this.reset(!0)}function S(e){if(e){var t=e[a];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var n=-1,i=function t(){for(;++n<e.length;)if(r.call(e,n))return t.value=e[n],t.done=!1,t;return t.value=void 0,t.done=!0,t};return i.next=i}}return{next:T}}function T(){return{value:void 0,done:!0}}}("object"==typeof t?t:"object"==typeof window?window:"object"==typeof self?self:this)}).call(this,n(95))},function(e,t,n){n(334),e.exports=n(18).RegExp.escape},function(e,t,n){var r=n(0),i=n(335)(/[\\^$*+?.()|[\]{}]/g,"\\$&");r(r.S,"RegExp",{escape:function(e){return i(e)}})},function(e,t){e.exports=function(e,t){var n=t===Object(t)?function(e){return t[e]}:t;return function(t){return String(t).replace(e,n)}}},function(e,t,n){"use strict";var r,i=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),a=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),l=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&a(t,e,n);return o(t,e),t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var u=l(n(52)),c=s(n(338)),f=n(67),d=s(n(342));n(348);var p=function(e){function t(t){var n=e.call(this,t)||this;return n.state={dangerCount:100},n.translations=d.default(),n}return i(t,e),t.prototype.componentDidMount=function(){var e=this;browser.runtime.sendMessage({action:"get-max-danger-count"}).then((function(t){e.setState({dangerCount:t})})).catch((function(){}))},t.prototype.render=function(){var e=this.state.dangerCount;return u.default.createElement("div",{className:"Blocked",style:{backgroundImage:"url("+f.addonRoot()+"/logo/sam-bark-XFkkYwKiC_U-unsplash.jpg"}},u.default.createElement("div",{className:"header"},u.default.createElement("h2",null,this.translations.dangerCountPrefix+": "+e),u.default.createElement("h1",null,""+this.translations.dangerCount)),u.default.createElement("div",{className:"footer"},u.default.createElement("a",{href:f.addonPrefixDashboard()+"#/security-settings"},this.translations.popup_title_dashboard)))},t}(u.Component);c.default.render(u.default.createElement(p,null),document.getElementById("app"))},function(e,t,n){"use strict";
/** @license React v16.13.1
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(132),i="function"==typeof Symbol&&Symbol.for,a=i?Symbol.for("react.element"):60103,o=i?Symbol.for("react.portal"):60106,l=i?Symbol.for("react.fragment"):60107,s=i?Symbol.for("react.strict_mode"):60108,u=i?Symbol.for("react.profiler"):60114,c=i?Symbol.for("react.provider"):60109,f=i?Symbol.for("react.context"):60110,d=i?Symbol.for("react.forward_ref"):60112,p=i?Symbol.for("react.suspense"):60113,m=i?Symbol.for("react.memo"):60115,h=i?Symbol.for("react.lazy"):60116,g="function"==typeof Symbol&&Symbol.iterator;function v(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var y={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},b={};function w(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||y}function k(){}function _(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||y}w.prototype.isReactComponent={},w.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(v(85));this.updater.enqueueSetState(this,e,t,"setState")},w.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},k.prototype=w.prototype;var E=_.prototype=new k;E.constructor=_,r(E,w.prototype),E.isPureReactComponent=!0;var x={current:null},z=Object.prototype.hasOwnProperty,S={key:!0,ref:!0,__self:!0,__source:!0};function T(e,t,n){var r,i={},o=null,l=null;if(null!=t)for(r in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(o=""+t.key),t)z.call(t,r)&&!S.hasOwnProperty(r)&&(i[r]=t[r]);var s=arguments.length-2;if(1===s)i.children=n;else if(1<s){for(var u=Array(s),c=0;c<s;c++)u[c]=arguments[c+2];i.children=u}if(e&&e.defaultProps)for(r in s=e.defaultProps)void 0===i[r]&&(i[r]=s[r]);return{$$typeof:a,type:e,key:o,ref:l,props:i,_owner:x.current}}function N(e){return"object"==typeof e&&null!==e&&e.$$typeof===a}var P=/\/+/g,j=[];function C(e,t,n,r){if(j.length){var i=j.pop();return i.result=e,i.keyPrefix=t,i.func=n,i.context=r,i.count=0,i}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function I(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>j.length&&j.push(e)}function M(e,t,n){return null==e?0:function e(t,n,r,i){var l=typeof t;"undefined"!==l&&"boolean"!==l||(t=null);var s=!1;if(null===t)s=!0;else switch(l){case"string":case"number":s=!0;break;case"object":switch(t.$$typeof){case a:case o:s=!0}}if(s)return r(i,t,""===n?"."+O(t,0):n),1;if(s=0,n=""===n?".":n+":",Array.isArray(t))for(var u=0;u<t.length;u++){var c=n+O(l=t[u],u);s+=e(l,c,r,i)}else if(null===t||"object"!=typeof t?c=null:c="function"==typeof(c=g&&t[g]||t["@@iterator"])?c:null,"function"==typeof c)for(t=c.call(t),u=0;!(l=t.next()).done;)s+=e(l=l.value,c=n+O(l,u++),r,i);else if("object"===l)throw r=""+t,Error(v(31,"[object Object]"===r?"object with keys {"+Object.keys(t).join(", ")+"}":r,""));return s}(e,"",t,n)}function O(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,(function(e){return t[e]}))}(e.key):t.toString(36)}function D(e,t){e.func.call(e.context,t,e.count++)}function L(e,t,n){var r=e.result,i=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?A(e,r,n,(function(e){return e})):null!=e&&(N(e)&&(e=function(e,t){return{$$typeof:a,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,i+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(P,"$&/")+"/")+n)),r.push(e))}function A(e,t,n,r,i){var a="";null!=n&&(a=(""+n).replace(P,"$&/")+"/"),M(e,L,t=C(t,a,r,i)),I(t)}var F={current:null};function B(){var e=F.current;if(null===e)throw Error(v(321));return e}var R={ReactCurrentDispatcher:F,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:x,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:function(e,t,n){if(null==e)return e;var r=[];return A(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;M(e,D,t=C(null,null,t,n)),I(t)},count:function(e){return M(e,(function(){return null}),null)},toArray:function(e){var t=[];return A(e,t,null,(function(e){return e})),t},only:function(e){if(!N(e))throw Error(v(143));return e}},t.Component=w,t.Fragment=l,t.Profiler=u,t.PureComponent=_,t.StrictMode=s,t.Suspense=p,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=R,t.cloneElement=function(e,t,n){if(null==e)throw Error(v(267,e));var i=r({},e.props),o=e.key,l=e.ref,s=e._owner;if(null!=t){if(void 0!==t.ref&&(l=t.ref,s=x.current),void 0!==t.key&&(o=""+t.key),e.type&&e.type.defaultProps)var u=e.type.defaultProps;for(c in t)z.call(t,c)&&!S.hasOwnProperty(c)&&(i[c]=void 0===t[c]&&void 0!==u?u[c]:t[c])}var c=arguments.length-2;if(1===c)i.children=n;else if(1<c){u=Array(c);for(var f=0;f<c;f++)u[f]=arguments[f+2];i.children=u}return{$$typeof:a,type:e.type,key:o,ref:l,props:i,_owner:s}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:f,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:c,_context:e},e.Consumer=e},t.createElement=T,t.createFactory=function(e){var t=T.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:d,render:e}},t.isValidElement=N,t.lazy=function(e){return{$$typeof:h,_ctor:e,_status:-1,_result:null}},t.memo=function(e,t){return{$$typeof:m,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return B().useCallback(e,t)},t.useContext=function(e,t){return B().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return B().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return B().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return B().useLayoutEffect(e,t)},t.useMemo=function(e,t){return B().useMemo(e,t)},t.useReducer=function(e,t,n){return B().useReducer(e,t,n)},t.useRef=function(e){return B().useRef(e)},t.useState=function(e){return B().useState(e)},t.version="16.13.1"},function(e,t,n){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE){0;try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}}(),e.exports=n(339)},function(e,t,n){"use strict";
/** @license React v16.13.1
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(52),i=n(132),a=n(340);function o(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(o(227));function l(e,t,n,r,i,a,o,l,s){var u=Array.prototype.slice.call(arguments,3);try{t.apply(n,u)}catch(e){this.onError(e)}}var s=!1,u=null,c=!1,f=null,d={onError:function(e){s=!0,u=e}};function p(e,t,n,r,i,a,o,c,f){s=!1,u=null,l.apply(d,arguments)}var m=null,h=null,g=null;function v(e,t,n){var r=e.type||"unknown-event";e.currentTarget=g(n),function(e,t,n,r,i,a,l,d,m){if(p.apply(this,arguments),s){if(!s)throw Error(o(198));var h=u;s=!1,u=null,c||(c=!0,f=h)}}(r,t,void 0,e),e.currentTarget=null}var y=null,b={};function w(){if(y)for(var e in b){var t=b[e],n=y.indexOf(e);if(!(-1<n))throw Error(o(96,e));if(!_[n]){if(!t.extractEvents)throw Error(o(97,e));for(var r in _[n]=t,n=t.eventTypes){var i=void 0,a=n[r],l=t,s=r;if(E.hasOwnProperty(s))throw Error(o(99,s));E[s]=a;var u=a.phasedRegistrationNames;if(u){for(i in u)u.hasOwnProperty(i)&&k(u[i],l,s);i=!0}else a.registrationName?(k(a.registrationName,l,s),i=!0):i=!1;if(!i)throw Error(o(98,r,e))}}}}function k(e,t,n){if(x[e])throw Error(o(100,e));x[e]=t,z[e]=t.eventTypes[n].dependencies}var _=[],E={},x={},z={};function S(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];if(!b.hasOwnProperty(t)||b[t]!==r){if(b[t])throw Error(o(102,t));b[t]=r,n=!0}}n&&w()}var T=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),N=null,P=null,j=null;function C(e){if(e=h(e)){if("function"!=typeof N)throw Error(o(280));var t=e.stateNode;t&&(t=m(t),N(e.stateNode,e.type,t))}}function I(e){P?j?j.push(e):j=[e]:P=e}function M(){if(P){var e=P,t=j;if(j=P=null,C(e),t)for(e=0;e<t.length;e++)C(t[e])}}function O(e,t){return e(t)}function D(e,t,n,r,i){return e(t,n,r,i)}function L(){}var A=O,F=!1,B=!1;function R(){null===P&&null===j||(L(),M())}function W(e,t,n){if(B)return e(t,n);B=!0;try{return A(e,t,n)}finally{B=!1,R()}}var U=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,H=Object.prototype.hasOwnProperty,V={},K={};function $(e,t,n,r,i,a){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=i,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=a}var Q={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){Q[e]=new $(e,0,!1,e,null,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];Q[t]=new $(t,1,!1,e[1],null,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){Q[e]=new $(e,2,!1,e.toLowerCase(),null,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){Q[e]=new $(e,2,!1,e,null,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){Q[e]=new $(e,3,!1,e.toLowerCase(),null,!1)})),["checked","multiple","muted","selected"].forEach((function(e){Q[e]=new $(e,3,!0,e,null,!1)})),["capture","download"].forEach((function(e){Q[e]=new $(e,4,!1,e,null,!1)})),["cols","rows","size","span"].forEach((function(e){Q[e]=new $(e,6,!1,e,null,!1)})),["rowSpan","start"].forEach((function(e){Q[e]=new $(e,5,!1,e.toLowerCase(),null,!1)}));var q=/[\-:]([a-z])/g;function G(e){return e[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(q,G);Q[t]=new $(t,1,!1,e,null,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(q,G);Q[t]=new $(t,1,!1,e,"http://www.w3.org/1999/xlink",!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(q,G);Q[t]=new $(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1)})),["tabIndex","crossOrigin"].forEach((function(e){Q[e]=new $(e,1,!1,e.toLowerCase(),null,!1)})),Q.xlinkHref=new $("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0),["src","href","action","formAction"].forEach((function(e){Q[e]=new $(e,1,!1,e.toLowerCase(),null,!0)}));var J=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function Z(e,t,n,r){var i=Q.hasOwnProperty(t)?Q[t]:null;(null!==i?0===i.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,i,r)&&(n=null),r||null===i?function(e){return!!H.call(K,e)||!H.call(V,e)&&(U.test(e)?K[e]=!0:(V[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):i.mustUseProperty?e[i.propertyName]=null===n?3!==i.type&&"":n:(t=i.attributeName,r=i.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(i=i.type)||4===i&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}J.hasOwnProperty("ReactCurrentDispatcher")||(J.ReactCurrentDispatcher={current:null}),J.hasOwnProperty("ReactCurrentBatchConfig")||(J.ReactCurrentBatchConfig={suspense:null});var Y=/^(.*)[\\\/]/,X="function"==typeof Symbol&&Symbol.for,ee=X?Symbol.for("react.element"):60103,te=X?Symbol.for("react.portal"):60106,ne=X?Symbol.for("react.fragment"):60107,re=X?Symbol.for("react.strict_mode"):60108,ie=X?Symbol.for("react.profiler"):60114,ae=X?Symbol.for("react.provider"):60109,oe=X?Symbol.for("react.context"):60110,le=X?Symbol.for("react.concurrent_mode"):60111,se=X?Symbol.for("react.forward_ref"):60112,ue=X?Symbol.for("react.suspense"):60113,ce=X?Symbol.for("react.suspense_list"):60120,fe=X?Symbol.for("react.memo"):60115,de=X?Symbol.for("react.lazy"):60116,pe=X?Symbol.for("react.block"):60121,me="function"==typeof Symbol&&Symbol.iterator;function he(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=me&&e[me]||e["@@iterator"])?e:null}function ge(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case ne:return"Fragment";case te:return"Portal";case ie:return"Profiler";case re:return"StrictMode";case ue:return"Suspense";case ce:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case oe:return"Context.Consumer";case ae:return"Context.Provider";case se:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case fe:return ge(e.type);case pe:return ge(e.render);case de:if(e=1===e._status?e._result:null)return ge(e)}return null}function ve(e){var t="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break e;default:var r=e._debugOwner,i=e._debugSource,a=ge(e.type);n=null,r&&(n=ge(r.type)),r=a,a="",i?a=" (at "+i.fileName.replace(Y,"")+":"+i.lineNumber+")":n&&(a=" (created by "+n+")"),n="\n    in "+(r||"Unknown")+a}t+=n,e=e.return}while(e);return t}function ye(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function be(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function we(e){e._valueTracker||(e._valueTracker=function(e){var t=be(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var i=n.get,a=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return i.call(this)},set:function(e){r=""+e,a.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function ke(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=be(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function _e(e,t){var n=t.checked;return i({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Ee(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=ye(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function xe(e,t){null!=(t=t.checked)&&Z(e,"checked",t,!1)}function ze(e,t){xe(e,t);var n=ye(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?Te(e,t.type,n):t.hasOwnProperty("defaultValue")&&Te(e,t.type,ye(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Se(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function Te(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function Ne(e,t){return e=i({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function Pe(e,t,n,r){if(e=e.options,t){t={};for(var i=0;i<n.length;i++)t["$"+n[i]]=!0;for(n=0;n<e.length;n++)i=t.hasOwnProperty("$"+e[n].value),e[n].selected!==i&&(e[n].selected=i),i&&r&&(e[n].defaultSelected=!0)}else{for(n=""+ye(n),t=null,i=0;i<e.length;i++){if(e[i].value===n)return e[i].selected=!0,void(r&&(e[i].defaultSelected=!0));null!==t||e[i].disabled||(t=e[i])}null!==t&&(t.selected=!0)}}function je(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(o(91));return i({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Ce(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(o(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(o(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:ye(n)}}function Ie(e,t){var n=ye(t.value),r=ye(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function Me(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}var Oe="http://www.w3.org/1999/xhtml",De="http://www.w3.org/2000/svg";function Le(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Ae(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?Le(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var Fe,Be=function(e){return"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(t,n,r,i){MSApp.execUnsafeLocalFunction((function(){return e(t,n)}))}:e}((function(e,t){if(e.namespaceURI!==De||"innerHTML"in e)e.innerHTML=t;else{for((Fe=Fe||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=Fe.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}}));function Re(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}function We(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var Ue={animationend:We("Animation","AnimationEnd"),animationiteration:We("Animation","AnimationIteration"),animationstart:We("Animation","AnimationStart"),transitionend:We("Transition","TransitionEnd")},He={},Ve={};function Ke(e){if(He[e])return He[e];if(!Ue[e])return e;var t,n=Ue[e];for(t in n)if(n.hasOwnProperty(t)&&t in Ve)return He[e]=n[t];return e}T&&(Ve=document.createElement("div").style,"AnimationEvent"in window||(delete Ue.animationend.animation,delete Ue.animationiteration.animation,delete Ue.animationstart.animation),"TransitionEvent"in window||delete Ue.transitionend.transition);var $e=Ke("animationend"),Qe=Ke("animationiteration"),qe=Ke("animationstart"),Ge=Ke("transitionend"),Je="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Ze=new("function"==typeof WeakMap?WeakMap:Map);function Ye(e){var t=Ze.get(e);return void 0===t&&(t=new Map,Ze.set(e,t)),t}function Xe(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).effectTag)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function et(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function tt(e){if(Xe(e)!==e)throw Error(o(188))}function nt(e){if(!(e=function(e){var t=e.alternate;if(!t){if(null===(t=Xe(e)))throw Error(o(188));return t!==e?null:e}for(var n=e,r=t;;){var i=n.return;if(null===i)break;var a=i.alternate;if(null===a){if(null!==(r=i.return)){n=r;continue}break}if(i.child===a.child){for(a=i.child;a;){if(a===n)return tt(i),e;if(a===r)return tt(i),t;a=a.sibling}throw Error(o(188))}if(n.return!==r.return)n=i,r=a;else{for(var l=!1,s=i.child;s;){if(s===n){l=!0,n=i,r=a;break}if(s===r){l=!0,r=i,n=a;break}s=s.sibling}if(!l){for(s=a.child;s;){if(s===n){l=!0,n=a,r=i;break}if(s===r){l=!0,r=a,n=i;break}s=s.sibling}if(!l)throw Error(o(189))}}if(n.alternate!==r)throw Error(o(190))}if(3!==n.tag)throw Error(o(188));return n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function rt(e,t){if(null==t)throw Error(o(30));return null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function it(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var at=null;function ot(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t))for(var r=0;r<t.length&&!e.isPropagationStopped();r++)v(e,t[r],n[r]);else t&&v(e,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}function lt(e){if(null!==e&&(at=rt(at,e)),e=at,at=null,e){if(it(e,ot),at)throw Error(o(95));if(c)throw e=f,c=!1,f=null,e}}function st(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function ut(e){if(!T)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t}var ct=[];function ft(e){e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>ct.length&&ct.push(e)}function dt(e,t,n,r){if(ct.length){var i=ct.pop();return i.topLevelType=e,i.eventSystemFlags=r,i.nativeEvent=t,i.targetInst=n,i}return{topLevelType:e,eventSystemFlags:r,nativeEvent:t,targetInst:n,ancestors:[]}}function pt(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var r=n;if(3===r.tag)r=r.stateNode.containerInfo;else{for(;r.return;)r=r.return;r=3!==r.tag?null:r.stateNode.containerInfo}if(!r)break;5!==(t=n.tag)&&6!==t||e.ancestors.push(n),n=Tn(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var i=st(e.nativeEvent);r=e.topLevelType;var a=e.nativeEvent,o=e.eventSystemFlags;0===n&&(o|=64);for(var l=null,s=0;s<_.length;s++){var u=_[s];u&&(u=u.extractEvents(r,t,a,i,o))&&(l=rt(l,u))}lt(l)}}function mt(e,t,n){if(!n.has(e)){switch(e){case"scroll":qt(t,"scroll",!0);break;case"focus":case"blur":qt(t,"focus",!0),qt(t,"blur",!0),n.set("blur",null),n.set("focus",null);break;case"cancel":case"close":ut(e)&&qt(t,e,!0);break;case"invalid":case"submit":case"reset":break;default:-1===Je.indexOf(e)&&Qt(e,t)}n.set(e,null)}}var ht,gt,vt,yt=!1,bt=[],wt=null,kt=null,_t=null,Et=new Map,xt=new Map,zt=[],St="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "),Tt="focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");function Nt(e,t,n,r,i){return{blockedOn:e,topLevelType:t,eventSystemFlags:32|n,nativeEvent:i,container:r}}function Pt(e,t){switch(e){case"focus":case"blur":wt=null;break;case"dragenter":case"dragleave":kt=null;break;case"mouseover":case"mouseout":_t=null;break;case"pointerover":case"pointerout":Et.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":xt.delete(t.pointerId)}}function jt(e,t,n,r,i,a){return null===e||e.nativeEvent!==a?(e=Nt(t,n,r,i,a),null!==t&&(null!==(t=Nn(t))&&gt(t)),e):(e.eventSystemFlags|=r,e)}function Ct(e){var t=Tn(e.target);if(null!==t){var n=Xe(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=et(n)))return e.blockedOn=t,void a.unstable_runWithPriority(e.priority,(function(){vt(n)}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function It(e){if(null!==e.blockedOn)return!1;var t=Yt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);if(null!==t){var n=Nn(t);return null!==n&&gt(n),e.blockedOn=t,!1}return!0}function Mt(e,t,n){It(e)&&n.delete(t)}function Ot(){for(yt=!1;0<bt.length;){var e=bt[0];if(null!==e.blockedOn){null!==(e=Nn(e.blockedOn))&&ht(e);break}var t=Yt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);null!==t?e.blockedOn=t:bt.shift()}null!==wt&&It(wt)&&(wt=null),null!==kt&&It(kt)&&(kt=null),null!==_t&&It(_t)&&(_t=null),Et.forEach(Mt),xt.forEach(Mt)}function Dt(e,t){e.blockedOn===t&&(e.blockedOn=null,yt||(yt=!0,a.unstable_scheduleCallback(a.unstable_NormalPriority,Ot)))}function Lt(e){function t(t){return Dt(t,e)}if(0<bt.length){Dt(bt[0],e);for(var n=1;n<bt.length;n++){var r=bt[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==wt&&Dt(wt,e),null!==kt&&Dt(kt,e),null!==_t&&Dt(_t,e),Et.forEach(t),xt.forEach(t),n=0;n<zt.length;n++)(r=zt[n]).blockedOn===e&&(r.blockedOn=null);for(;0<zt.length&&null===(n=zt[0]).blockedOn;)Ct(n),null===n.blockedOn&&zt.shift()}var At={},Ft=new Map,Bt=new Map,Rt=["abort","abort",$e,"animationEnd",Qe,"animationIteration",qe,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Ge,"transitionEnd","waiting","waiting"];function Wt(e,t){for(var n=0;n<e.length;n+=2){var r=e[n],i=e[n+1],a="on"+(i[0].toUpperCase()+i.slice(1));a={phasedRegistrationNames:{bubbled:a,captured:a+"Capture"},dependencies:[r],eventPriority:t},Bt.set(r,t),Ft.set(r,a),At[i]=a}}Wt("blur blur cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focus focus input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),Wt("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),Wt(Rt,2);for(var Ut="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),Ht=0;Ht<Ut.length;Ht++)Bt.set(Ut[Ht],0);var Vt=a.unstable_UserBlockingPriority,Kt=a.unstable_runWithPriority,$t=!0;function Qt(e,t){qt(t,e,!1)}function qt(e,t,n){var r=Bt.get(t);switch(void 0===r?2:r){case 0:r=Gt.bind(null,t,1,e);break;case 1:r=Jt.bind(null,t,1,e);break;default:r=Zt.bind(null,t,1,e)}n?e.addEventListener(t,r,!0):e.addEventListener(t,r,!1)}function Gt(e,t,n,r){F||L();var i=Zt,a=F;F=!0;try{D(i,e,t,n,r)}finally{(F=a)||R()}}function Jt(e,t,n,r){Kt(Vt,Zt.bind(null,e,t,n,r))}function Zt(e,t,n,r){if($t)if(0<bt.length&&-1<St.indexOf(e))e=Nt(null,e,t,n,r),bt.push(e);else{var i=Yt(e,t,n,r);if(null===i)Pt(e,r);else if(-1<St.indexOf(e))e=Nt(i,e,t,n,r),bt.push(e);else if(!function(e,t,n,r,i){switch(t){case"focus":return wt=jt(wt,e,t,n,r,i),!0;case"dragenter":return kt=jt(kt,e,t,n,r,i),!0;case"mouseover":return _t=jt(_t,e,t,n,r,i),!0;case"pointerover":var a=i.pointerId;return Et.set(a,jt(Et.get(a)||null,e,t,n,r,i)),!0;case"gotpointercapture":return a=i.pointerId,xt.set(a,jt(xt.get(a)||null,e,t,n,r,i)),!0}return!1}(i,e,t,n,r)){Pt(e,r),e=dt(e,r,null,t);try{W(pt,e)}finally{ft(e)}}}}function Yt(e,t,n,r){if(null!==(n=Tn(n=st(r)))){var i=Xe(n);if(null===i)n=null;else{var a=i.tag;if(13===a){if(null!==(n=et(i)))return n;n=null}else if(3===a){if(i.stateNode.hydrate)return 3===i.tag?i.stateNode.containerInfo:null;n=null}else i!==n&&(n=null)}}e=dt(e,r,n,t);try{W(pt,e)}finally{ft(e)}return null}var Xt={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},en=["Webkit","ms","Moz","O"];function tn(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||Xt.hasOwnProperty(e)&&Xt[e]?(""+t).trim():t+"px"}function nn(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),i=tn(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,i):e[n]=i}}Object.keys(Xt).forEach((function(e){en.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),Xt[t]=Xt[e]}))}));var rn=i({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function an(e,t){if(t){if(rn[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(o(137,e,""));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(o(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(o(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(o(62,""))}}function on(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var ln=Oe;function sn(e,t){var n=Ye(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=z[t];for(var r=0;r<t.length;r++)mt(t[r],e,n)}function un(){}function cn(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function fn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function dn(e,t){var n,r=fn(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=fn(r)}}function pn(){for(var e=window,t=cn();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=cn((e=t.contentWindow).document)}return t}function mn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var hn=null,gn=null;function vn(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function yn(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var bn="function"==typeof setTimeout?setTimeout:void 0,wn="function"==typeof clearTimeout?clearTimeout:void 0;function kn(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function _n(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var En=Math.random().toString(36).slice(2),xn="__reactInternalInstance$"+En,zn="__reactEventHandlers$"+En,Sn="__reactContainere$"+En;function Tn(e){var t=e[xn];if(t)return t;for(var n=e.parentNode;n;){if(t=n[Sn]||n[xn]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=_n(e);null!==e;){if(n=e[xn])return n;e=_n(e)}return t}n=(e=n).parentNode}return null}function Nn(e){return!(e=e[xn]||e[Sn])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function Pn(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(o(33))}function jn(e){return e[zn]||null}function Cn(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function In(e,t){var n=e.stateNode;if(!n)return null;var r=m(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(o(231,t,typeof n));return n}function Mn(e,t,n){(t=In(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=rt(n._dispatchListeners,t),n._dispatchInstances=rt(n._dispatchInstances,e))}function On(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=Cn(t);for(t=n.length;0<t--;)Mn(n[t],"captured",e);for(t=0;t<n.length;t++)Mn(n[t],"bubbled",e)}}function Dn(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=In(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=rt(n._dispatchListeners,t),n._dispatchInstances=rt(n._dispatchInstances,e))}function Ln(e){e&&e.dispatchConfig.registrationName&&Dn(e._targetInst,null,e)}function An(e){it(e,On)}var Fn=null,Bn=null,Rn=null;function Wn(){if(Rn)return Rn;var e,t,n=Bn,r=n.length,i="value"in Fn?Fn.value:Fn.textContent,a=i.length;for(e=0;e<r&&n[e]===i[e];e++);var o=r-e;for(t=1;t<=o&&n[r-t]===i[a-t];t++);return Rn=i.slice(e,1<t?1-t:void 0)}function Un(){return!0}function Hn(){return!1}function Vn(e,t,n,r){for(var i in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(i)&&((t=e[i])?this[i]=t(n):"target"===i?this.target=r:this[i]=n[i]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?Un:Hn,this.isPropagationStopped=Hn,this}function Kn(e,t,n,r){if(this.eventPool.length){var i=this.eventPool.pop();return this.call(i,e,t,n,r),i}return new this(e,t,n,r)}function $n(e){if(!(e instanceof this))throw Error(o(279));e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function Qn(e){e.eventPool=[],e.getPooled=Kn,e.release=$n}i(Vn.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=Un)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=Un)},persist:function(){this.isPersistent=Un},isPersistent:Hn,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=Hn,this._dispatchInstances=this._dispatchListeners=null}}),Vn.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},Vn.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var a=new t;return i(a,n.prototype),n.prototype=a,n.prototype.constructor=n,n.Interface=i({},r.Interface,e),n.extend=r.extend,Qn(n),n},Qn(Vn);var qn=Vn.extend({data:null}),Gn=Vn.extend({data:null}),Jn=[9,13,27,32],Zn=T&&"CompositionEvent"in window,Yn=null;T&&"documentMode"in document&&(Yn=document.documentMode);var Xn=T&&"TextEvent"in window&&!Yn,er=T&&(!Zn||Yn&&8<Yn&&11>=Yn),tr=String.fromCharCode(32),nr={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},rr=!1;function ir(e,t){switch(e){case"keyup":return-1!==Jn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function ar(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var or=!1;var lr={eventTypes:nr,extractEvents:function(e,t,n,r){var i;if(Zn)e:{switch(e){case"compositionstart":var a=nr.compositionStart;break e;case"compositionend":a=nr.compositionEnd;break e;case"compositionupdate":a=nr.compositionUpdate;break e}a=void 0}else or?ir(e,n)&&(a=nr.compositionEnd):"keydown"===e&&229===n.keyCode&&(a=nr.compositionStart);return a?(er&&"ko"!==n.locale&&(or||a!==nr.compositionStart?a===nr.compositionEnd&&or&&(i=Wn()):(Bn="value"in(Fn=r)?Fn.value:Fn.textContent,or=!0)),a=qn.getPooled(a,t,n,r),i?a.data=i:null!==(i=ar(n))&&(a.data=i),An(a),i=a):i=null,(e=Xn?function(e,t){switch(e){case"compositionend":return ar(t);case"keypress":return 32!==t.which?null:(rr=!0,tr);case"textInput":return(e=t.data)===tr&&rr?null:e;default:return null}}(e,n):function(e,t){if(or)return"compositionend"===e||!Zn&&ir(e,t)?(e=Wn(),Rn=Bn=Fn=null,or=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return er&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))?((t=Gn.getPooled(nr.beforeInput,t,n,r)).data=e,An(t)):t=null,null===i?t:null===t?i:[i,t]}},sr={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function ur(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!sr[e.type]:"textarea"===t}var cr={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function fr(e,t,n){return(e=Vn.getPooled(cr.change,e,t,n)).type="change",I(n),An(e),e}var dr=null,pr=null;function mr(e){lt(e)}function hr(e){if(ke(Pn(e)))return e}function gr(e,t){if("change"===e)return t}var vr=!1;function yr(){dr&&(dr.detachEvent("onpropertychange",br),pr=dr=null)}function br(e){if("value"===e.propertyName&&hr(pr))if(e=fr(pr,e,st(e)),F)lt(e);else{F=!0;try{O(mr,e)}finally{F=!1,R()}}}function wr(e,t,n){"focus"===e?(yr(),pr=n,(dr=t).attachEvent("onpropertychange",br)):"blur"===e&&yr()}function kr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return hr(pr)}function _r(e,t){if("click"===e)return hr(t)}function Er(e,t){if("input"===e||"change"===e)return hr(t)}T&&(vr=ut("input")&&(!document.documentMode||9<document.documentMode));var xr={eventTypes:cr,_isInputEventSupported:vr,extractEvents:function(e,t,n,r){var i=t?Pn(t):window,a=i.nodeName&&i.nodeName.toLowerCase();if("select"===a||"input"===a&&"file"===i.type)var o=gr;else if(ur(i))if(vr)o=Er;else{o=kr;var l=wr}else(a=i.nodeName)&&"input"===a.toLowerCase()&&("checkbox"===i.type||"radio"===i.type)&&(o=_r);if(o&&(o=o(e,t)))return fr(o,n,r);l&&l(e,i,t),"blur"===e&&(e=i._wrapperState)&&e.controlled&&"number"===i.type&&Te(i,"number",i.value)}},zr=Vn.extend({view:null,detail:null}),Sr={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Tr(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Sr[e])&&!!t[e]}function Nr(){return Tr}var Pr=0,jr=0,Cr=!1,Ir=!1,Mr=zr.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Nr,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=Pr;return Pr=e.screenX,Cr?"mousemove"===e.type?e.screenX-t:0:(Cr=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=jr;return jr=e.screenY,Ir?"mousemove"===e.type?e.screenY-t:0:(Ir=!0,0)}}),Or=Mr.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Dr={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Lr={eventTypes:Dr,extractEvents:function(e,t,n,r,i){var a="mouseover"===e||"pointerover"===e,o="mouseout"===e||"pointerout"===e;if(a&&0==(32&i)&&(n.relatedTarget||n.fromElement)||!o&&!a)return null;(a=r.window===r?r:(a=r.ownerDocument)?a.defaultView||a.parentWindow:window,o)?(o=t,null!==(t=(t=n.relatedTarget||n.toElement)?Tn(t):null)&&(t!==Xe(t)||5!==t.tag&&6!==t.tag)&&(t=null)):o=null;if(o===t)return null;if("mouseout"===e||"mouseover"===e)var l=Mr,s=Dr.mouseLeave,u=Dr.mouseEnter,c="mouse";else"pointerout"!==e&&"pointerover"!==e||(l=Or,s=Dr.pointerLeave,u=Dr.pointerEnter,c="pointer");if(e=null==o?a:Pn(o),a=null==t?a:Pn(t),(s=l.getPooled(s,o,n,r)).type=c+"leave",s.target=e,s.relatedTarget=a,(n=l.getPooled(u,t,n,r)).type=c+"enter",n.target=a,n.relatedTarget=e,c=t,(r=o)&&c)e:{for(u=c,o=0,e=l=r;e;e=Cn(e))o++;for(e=0,t=u;t;t=Cn(t))e++;for(;0<o-e;)l=Cn(l),o--;for(;0<e-o;)u=Cn(u),e--;for(;o--;){if(l===u||l===u.alternate)break e;l=Cn(l),u=Cn(u)}l=null}else l=null;for(u=l,l=[];r&&r!==u&&(null===(o=r.alternate)||o!==u);)l.push(r),r=Cn(r);for(r=[];c&&c!==u&&(null===(o=c.alternate)||o!==u);)r.push(c),c=Cn(c);for(c=0;c<l.length;c++)Dn(l[c],"bubbled",s);for(c=r.length;0<c--;)Dn(r[c],"captured",n);return 0==(64&i)?[s]:[s,n]}};var Ar="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},Fr=Object.prototype.hasOwnProperty;function Br(e,t){if(Ar(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!Fr.call(t,n[r])||!Ar(e[n[r]],t[n[r]]))return!1;return!0}var Rr=T&&"documentMode"in document&&11>=document.documentMode,Wr={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Ur=null,Hr=null,Vr=null,Kr=!1;function $r(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return Kr||null==Ur||Ur!==cn(n)?null:("selectionStart"in(n=Ur)&&mn(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},Vr&&Br(Vr,n)?null:(Vr=n,(e=Vn.getPooled(Wr.select,Hr,e,t)).type="select",e.target=Ur,An(e),e))}var Qr={eventTypes:Wr,extractEvents:function(e,t,n,r,i,a){if(!(a=!(i=a||(r.window===r?r.document:9===r.nodeType?r:r.ownerDocument)))){e:{i=Ye(i),a=z.onSelect;for(var o=0;o<a.length;o++)if(!i.has(a[o])){i=!1;break e}i=!0}a=!i}if(a)return null;switch(i=t?Pn(t):window,e){case"focus":(ur(i)||"true"===i.contentEditable)&&(Ur=i,Hr=t,Vr=null);break;case"blur":Vr=Hr=Ur=null;break;case"mousedown":Kr=!0;break;case"contextmenu":case"mouseup":case"dragend":return Kr=!1,$r(n,r);case"selectionchange":if(Rr)break;case"keydown":case"keyup":return $r(n,r)}return null}},qr=Vn.extend({animationName:null,elapsedTime:null,pseudoElement:null}),Gr=Vn.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),Jr=zr.extend({relatedTarget:null});function Zr(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var Yr={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Xr={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},ei=zr.extend({key:function(e){if(e.key){var t=Yr[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=Zr(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Xr[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Nr,charCode:function(e){return"keypress"===e.type?Zr(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?Zr(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),ti=Mr.extend({dataTransfer:null}),ni=zr.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Nr}),ri=Vn.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),ii=Mr.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),ai={eventTypes:At,extractEvents:function(e,t,n,r){var i=Ft.get(e);if(!i)return null;switch(e){case"keypress":if(0===Zr(n))return null;case"keydown":case"keyup":e=ei;break;case"blur":case"focus":e=Jr;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=Mr;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=ti;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=ni;break;case $e:case Qe:case qe:e=qr;break;case Ge:e=ri;break;case"scroll":e=zr;break;case"wheel":e=ii;break;case"copy":case"cut":case"paste":e=Gr;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=Or;break;default:e=Vn}return An(t=e.getPooled(i,t,n,r)),t}};if(y)throw Error(o(101));y=Array.prototype.slice.call("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),w(),m=jn,h=Nn,g=Pn,S({SimpleEventPlugin:ai,EnterLeaveEventPlugin:Lr,ChangeEventPlugin:xr,SelectEventPlugin:Qr,BeforeInputEventPlugin:lr});var oi=[],li=-1;function si(e){0>li||(e.current=oi[li],oi[li]=null,li--)}function ui(e,t){li++,oi[li]=e.current,e.current=t}var ci={},fi={current:ci},di={current:!1},pi=ci;function mi(e,t){var n=e.type.contextTypes;if(!n)return ci;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var i,a={};for(i in n)a[i]=t[i];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=a),a}function hi(e){return null!=(e=e.childContextTypes)}function gi(){si(di),si(fi)}function vi(e,t,n){if(fi.current!==ci)throw Error(o(168));ui(fi,t),ui(di,n)}function yi(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var a in r=r.getChildContext())if(!(a in e))throw Error(o(108,ge(t)||"Unknown",a));return i({},n,{},r)}function bi(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||ci,pi=fi.current,ui(fi,e),ui(di,di.current),!0}function wi(e,t,n){var r=e.stateNode;if(!r)throw Error(o(169));n?(e=yi(e,t,pi),r.__reactInternalMemoizedMergedChildContext=e,si(di),si(fi),ui(fi,e)):si(di),ui(di,n)}var ki=a.unstable_runWithPriority,_i=a.unstable_scheduleCallback,Ei=a.unstable_cancelCallback,xi=a.unstable_requestPaint,zi=a.unstable_now,Si=a.unstable_getCurrentPriorityLevel,Ti=a.unstable_ImmediatePriority,Ni=a.unstable_UserBlockingPriority,Pi=a.unstable_NormalPriority,ji=a.unstable_LowPriority,Ci=a.unstable_IdlePriority,Ii={},Mi=a.unstable_shouldYield,Oi=void 0!==xi?xi:function(){},Di=null,Li=null,Ai=!1,Fi=zi(),Bi=1e4>Fi?zi:function(){return zi()-Fi};function Ri(){switch(Si()){case Ti:return 99;case Ni:return 98;case Pi:return 97;case ji:return 96;case Ci:return 95;default:throw Error(o(332))}}function Wi(e){switch(e){case 99:return Ti;case 98:return Ni;case 97:return Pi;case 96:return ji;case 95:return Ci;default:throw Error(o(332))}}function Ui(e,t){return e=Wi(e),ki(e,t)}function Hi(e,t,n){return e=Wi(e),_i(e,t,n)}function Vi(e){return null===Di?(Di=[e],Li=_i(Ti,$i)):Di.push(e),Ii}function Ki(){if(null!==Li){var e=Li;Li=null,Ei(e)}$i()}function $i(){if(!Ai&&null!==Di){Ai=!0;var e=0;try{var t=Di;Ui(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),Di=null}catch(t){throw null!==Di&&(Di=Di.slice(e+1)),_i(Ti,Ki),t}finally{Ai=!1}}}function Qi(e,t,n){return 1073741821-(1+((1073741821-e+t/10)/(n/=10)|0))*n}function qi(e,t){if(e&&e.defaultProps)for(var n in t=i({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}var Gi={current:null},Ji=null,Zi=null,Yi=null;function Xi(){Yi=Zi=Ji=null}function ea(e){var t=Gi.current;si(Gi),e.type._context._currentValue=t}function ta(e,t){for(;null!==e;){var n=e.alternate;if(e.childExpirationTime<t)e.childExpirationTime=t,null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t);else{if(!(null!==n&&n.childExpirationTime<t))break;n.childExpirationTime=t}e=e.return}}function na(e,t){Ji=e,Yi=Zi=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(e.expirationTime>=t&&(jo=!0),e.firstContext=null)}function ra(e,t){if(Yi!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(Yi=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Zi){if(null===Ji)throw Error(o(308));Zi=t,Ji.dependencies={expirationTime:0,firstContext:t,responders:null}}else Zi=Zi.next=t;return e._currentValue}var ia=!1;function aa(e){e.updateQueue={baseState:e.memoizedState,baseQueue:null,shared:{pending:null},effects:null}}function oa(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,baseQueue:e.baseQueue,shared:e.shared,effects:e.effects})}function la(e,t){return(e={expirationTime:e,suspenseConfig:t,tag:0,payload:null,callback:null,next:null}).next=e}function sa(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function ua(e,t){var n=e.alternate;null!==n&&oa(n,e),null===(n=(e=e.updateQueue).baseQueue)?(e.baseQueue=t.next=t,t.next=t):(t.next=n.next,n.next=t)}function ca(e,t,n,r){var a=e.updateQueue;ia=!1;var o=a.baseQueue,l=a.shared.pending;if(null!==l){if(null!==o){var s=o.next;o.next=l.next,l.next=s}o=l,a.shared.pending=null,null!==(s=e.alternate)&&(null!==(s=s.updateQueue)&&(s.baseQueue=l))}if(null!==o){s=o.next;var u=a.baseState,c=0,f=null,d=null,p=null;if(null!==s)for(var m=s;;){if((l=m.expirationTime)<r){var h={expirationTime:m.expirationTime,suspenseConfig:m.suspenseConfig,tag:m.tag,payload:m.payload,callback:m.callback,next:null};null===p?(d=p=h,f=u):p=p.next=h,l>c&&(c=l)}else{null!==p&&(p=p.next={expirationTime:1073741823,suspenseConfig:m.suspenseConfig,tag:m.tag,payload:m.payload,callback:m.callback,next:null}),as(l,m.suspenseConfig);e:{var g=e,v=m;switch(l=t,h=n,v.tag){case 1:if("function"==typeof(g=v.payload)){u=g.call(h,u,l);break e}u=g;break e;case 3:g.effectTag=-4097&g.effectTag|64;case 0:if(null==(l="function"==typeof(g=v.payload)?g.call(h,u,l):g))break e;u=i({},u,l);break e;case 2:ia=!0}}null!==m.callback&&(e.effectTag|=32,null===(l=a.effects)?a.effects=[m]:l.push(m))}if(null===(m=m.next)||m===s){if(null===(l=a.shared.pending))break;m=o.next=l.next,l.next=s,a.baseQueue=o=l,a.shared.pending=null}}null===p?f=u:p.next=d,a.baseState=f,a.baseQueue=p,os(c),e.expirationTime=c,e.memoizedState=u}}function fa(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],i=r.callback;if(null!==i){if(r.callback=null,r=i,i=n,"function"!=typeof r)throw Error(o(191,r));r.call(i)}}}var da=J.ReactCurrentBatchConfig,pa=(new r.Component).refs;function ma(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:i({},t,n),e.memoizedState=n,0===e.expirationTime&&(e.updateQueue.baseState=n)}var ha={isMounted:function(e){return!!(e=e._reactInternalFiber)&&Xe(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=$l(),i=da.suspense;(i=la(r=Ql(r,e,i),i)).payload=t,null!=n&&(i.callback=n),sa(e,i),ql(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=$l(),i=da.suspense;(i=la(r=Ql(r,e,i),i)).tag=1,i.payload=t,null!=n&&(i.callback=n),sa(e,i),ql(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=$l(),r=da.suspense;(r=la(n=Ql(n,e,r),r)).tag=2,null!=t&&(r.callback=t),sa(e,r),ql(e,n)}};function ga(e,t,n,r,i,a,o){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,a,o):!t.prototype||!t.prototype.isPureReactComponent||(!Br(n,r)||!Br(i,a))}function va(e,t,n){var r=!1,i=ci,a=t.contextType;return"object"==typeof a&&null!==a?a=ra(a):(i=hi(t)?pi:fi.current,a=(r=null!=(r=t.contextTypes))?mi(e,i):ci),t=new t(n,a),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=ha,e.stateNode=t,t._reactInternalFiber=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=i,e.__reactInternalMemoizedMaskedChildContext=a),t}function ya(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&ha.enqueueReplaceState(t,t.state,null)}function ba(e,t,n,r){var i=e.stateNode;i.props=n,i.state=e.memoizedState,i.refs=pa,aa(e);var a=t.contextType;"object"==typeof a&&null!==a?i.context=ra(a):(a=hi(t)?pi:fi.current,i.context=mi(e,a)),ca(e,n,i,r),i.state=e.memoizedState,"function"==typeof(a=t.getDerivedStateFromProps)&&(ma(e,t,a,n),i.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof i.getSnapshotBeforeUpdate||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||(t=i.state,"function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount(),t!==i.state&&ha.enqueueReplaceState(i,i.state,null),ca(e,n,i,r),i.state=e.memoizedState),"function"==typeof i.componentDidMount&&(e.effectTag|=4)}var wa=Array.isArray;function ka(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(o(309));var r=n.stateNode}if(!r)throw Error(o(147,e));var i=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===i?t.ref:((t=function(e){var t=r.refs;t===pa&&(t=r.refs={}),null===e?delete t[i]:t[i]=e})._stringRef=i,t)}if("string"!=typeof e)throw Error(o(284));if(!n._owner)throw Error(o(290,e))}return e}function _a(e,t){if("textarea"!==e.type)throw Error(o(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,""))}function Ea(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function i(e,t){return(e=Ss(e,t)).index=0,e.sibling=null,e}function a(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function l(t){return e&&null===t.alternate&&(t.effectTag=2),t}function s(e,t,n,r){return null===t||6!==t.tag?((t=Ps(n,e.mode,r)).return=e,t):((t=i(t,n)).return=e,t)}function u(e,t,n,r){return null!==t&&t.elementType===n.type?((r=i(t,n.props)).ref=ka(e,t,n),r.return=e,r):((r=Ts(n.type,n.key,n.props,null,e.mode,r)).ref=ka(e,t,n),r.return=e,r)}function c(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=js(n,e.mode,r)).return=e,t):((t=i(t,n.children||[])).return=e,t)}function f(e,t,n,r,a){return null===t||7!==t.tag?((t=Ns(n,e.mode,r,a)).return=e,t):((t=i(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Ps(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case ee:return(n=Ts(t.type,t.key,t.props,null,e.mode,n)).ref=ka(e,null,t),n.return=e,n;case te:return(t=js(t,e.mode,n)).return=e,t}if(wa(t)||he(t))return(t=Ns(t,e.mode,n,null)).return=e,t;_a(e,t)}return null}function p(e,t,n,r){var i=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==i?null:s(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case ee:return n.key===i?n.type===ne?f(e,t,n.props.children,r,i):u(e,t,n,r):null;case te:return n.key===i?c(e,t,n,r):null}if(wa(n)||he(n))return null!==i?null:f(e,t,n,r,null);_a(e,n)}return null}function m(e,t,n,r,i){if("string"==typeof r||"number"==typeof r)return s(t,e=e.get(n)||null,""+r,i);if("object"==typeof r&&null!==r){switch(r.$$typeof){case ee:return e=e.get(null===r.key?n:r.key)||null,r.type===ne?f(t,e,r.props.children,i,r.key):u(t,e,r,i);case te:return c(t,e=e.get(null===r.key?n:r.key)||null,r,i)}if(wa(r)||he(r))return f(t,e=e.get(n)||null,r,i,null);_a(t,r)}return null}function h(i,o,l,s){for(var u=null,c=null,f=o,h=o=0,g=null;null!==f&&h<l.length;h++){f.index>h?(g=f,f=null):g=f.sibling;var v=p(i,f,l[h],s);if(null===v){null===f&&(f=g);break}e&&f&&null===v.alternate&&t(i,f),o=a(v,o,h),null===c?u=v:c.sibling=v,c=v,f=g}if(h===l.length)return n(i,f),u;if(null===f){for(;h<l.length;h++)null!==(f=d(i,l[h],s))&&(o=a(f,o,h),null===c?u=f:c.sibling=f,c=f);return u}for(f=r(i,f);h<l.length;h++)null!==(g=m(f,i,h,l[h],s))&&(e&&null!==g.alternate&&f.delete(null===g.key?h:g.key),o=a(g,o,h),null===c?u=g:c.sibling=g,c=g);return e&&f.forEach((function(e){return t(i,e)})),u}function g(i,l,s,u){var c=he(s);if("function"!=typeof c)throw Error(o(150));if(null==(s=c.call(s)))throw Error(o(151));for(var f=c=null,h=l,g=l=0,v=null,y=s.next();null!==h&&!y.done;g++,y=s.next()){h.index>g?(v=h,h=null):v=h.sibling;var b=p(i,h,y.value,u);if(null===b){null===h&&(h=v);break}e&&h&&null===b.alternate&&t(i,h),l=a(b,l,g),null===f?c=b:f.sibling=b,f=b,h=v}if(y.done)return n(i,h),c;if(null===h){for(;!y.done;g++,y=s.next())null!==(y=d(i,y.value,u))&&(l=a(y,l,g),null===f?c=y:f.sibling=y,f=y);return c}for(h=r(i,h);!y.done;g++,y=s.next())null!==(y=m(h,i,g,y.value,u))&&(e&&null!==y.alternate&&h.delete(null===y.key?g:y.key),l=a(y,l,g),null===f?c=y:f.sibling=y,f=y);return e&&h.forEach((function(e){return t(i,e)})),c}return function(e,r,a,s){var u="object"==typeof a&&null!==a&&a.type===ne&&null===a.key;u&&(a=a.props.children);var c="object"==typeof a&&null!==a;if(c)switch(a.$$typeof){case ee:e:{for(c=a.key,u=r;null!==u;){if(u.key===c){switch(u.tag){case 7:if(a.type===ne){n(e,u.sibling),(r=i(u,a.props.children)).return=e,e=r;break e}break;default:if(u.elementType===a.type){n(e,u.sibling),(r=i(u,a.props)).ref=ka(e,u,a),r.return=e,e=r;break e}}n(e,u);break}t(e,u),u=u.sibling}a.type===ne?((r=Ns(a.props.children,e.mode,s,a.key)).return=e,e=r):((s=Ts(a.type,a.key,a.props,null,e.mode,s)).ref=ka(e,r,a),s.return=e,e=s)}return l(e);case te:e:{for(u=a.key;null!==r;){if(r.key===u){if(4===r.tag&&r.stateNode.containerInfo===a.containerInfo&&r.stateNode.implementation===a.implementation){n(e,r.sibling),(r=i(r,a.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=js(a,e.mode,s)).return=e,e=r}return l(e)}if("string"==typeof a||"number"==typeof a)return a=""+a,null!==r&&6===r.tag?(n(e,r.sibling),(r=i(r,a)).return=e,e=r):(n(e,r),(r=Ps(a,e.mode,s)).return=e,e=r),l(e);if(wa(a))return h(e,r,a,s);if(he(a))return g(e,r,a,s);if(c&&_a(e,a),void 0===a&&!u)switch(e.tag){case 1:case 0:throw e=e.type,Error(o(152,e.displayName||e.name||"Component"))}return n(e,r)}}var xa=Ea(!0),za=Ea(!1),Sa={},Ta={current:Sa},Na={current:Sa},Pa={current:Sa};function ja(e){if(e===Sa)throw Error(o(174));return e}function Ca(e,t){switch(ui(Pa,t),ui(Na,e),ui(Ta,Sa),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:Ae(null,"");break;default:t=Ae(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}si(Ta),ui(Ta,t)}function Ia(){si(Ta),si(Na),si(Pa)}function Ma(e){ja(Pa.current);var t=ja(Ta.current),n=Ae(t,e.type);t!==n&&(ui(Na,e),ui(Ta,n))}function Oa(e){Na.current===e&&(si(Ta),si(Na))}var Da={current:0};function La(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.effectTag))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}function Aa(e,t){return{responder:e,props:t}}var Fa=J.ReactCurrentDispatcher,Ba=J.ReactCurrentBatchConfig,Ra=0,Wa=null,Ua=null,Ha=null,Va=!1;function Ka(){throw Error(o(321))}function $a(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!Ar(e[n],t[n]))return!1;return!0}function Qa(e,t,n,r,i,a){if(Ra=a,Wa=t,t.memoizedState=null,t.updateQueue=null,t.expirationTime=0,Fa.current=null===e||null===e.memoizedState?vo:yo,e=n(r,i),t.expirationTime===Ra){a=0;do{if(t.expirationTime=0,!(25>a))throw Error(o(301));a+=1,Ha=Ua=null,t.updateQueue=null,Fa.current=bo,e=n(r,i)}while(t.expirationTime===Ra)}if(Fa.current=go,t=null!==Ua&&null!==Ua.next,Ra=0,Ha=Ua=Wa=null,Va=!1,t)throw Error(o(300));return e}function qa(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Ha?Wa.memoizedState=Ha=e:Ha=Ha.next=e,Ha}function Ga(){if(null===Ua){var e=Wa.alternate;e=null!==e?e.memoizedState:null}else e=Ua.next;var t=null===Ha?Wa.memoizedState:Ha.next;if(null!==t)Ha=t,Ua=e;else{if(null===e)throw Error(o(310));e={memoizedState:(Ua=e).memoizedState,baseState:Ua.baseState,baseQueue:Ua.baseQueue,queue:Ua.queue,next:null},null===Ha?Wa.memoizedState=Ha=e:Ha=Ha.next=e}return Ha}function Ja(e,t){return"function"==typeof t?t(e):t}function Za(e){var t=Ga(),n=t.queue;if(null===n)throw Error(o(311));n.lastRenderedReducer=e;var r=Ua,i=r.baseQueue,a=n.pending;if(null!==a){if(null!==i){var l=i.next;i.next=a.next,a.next=l}r.baseQueue=i=a,n.pending=null}if(null!==i){i=i.next,r=r.baseState;var s=l=a=null,u=i;do{var c=u.expirationTime;if(c<Ra){var f={expirationTime:u.expirationTime,suspenseConfig:u.suspenseConfig,action:u.action,eagerReducer:u.eagerReducer,eagerState:u.eagerState,next:null};null===s?(l=s=f,a=r):s=s.next=f,c>Wa.expirationTime&&(Wa.expirationTime=c,os(c))}else null!==s&&(s=s.next={expirationTime:1073741823,suspenseConfig:u.suspenseConfig,action:u.action,eagerReducer:u.eagerReducer,eagerState:u.eagerState,next:null}),as(c,u.suspenseConfig),r=u.eagerReducer===e?u.eagerState:e(r,u.action);u=u.next}while(null!==u&&u!==i);null===s?a=r:s.next=l,Ar(r,t.memoizedState)||(jo=!0),t.memoizedState=r,t.baseState=a,t.baseQueue=s,n.lastRenderedState=r}return[t.memoizedState,n.dispatch]}function Ya(e){var t=Ga(),n=t.queue;if(null===n)throw Error(o(311));n.lastRenderedReducer=e;var r=n.dispatch,i=n.pending,a=t.memoizedState;if(null!==i){n.pending=null;var l=i=i.next;do{a=e(a,l.action),l=l.next}while(l!==i);Ar(a,t.memoizedState)||(jo=!0),t.memoizedState=a,null===t.baseQueue&&(t.baseState=a),n.lastRenderedState=a}return[a,r]}function Xa(e){var t=qa();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:Ja,lastRenderedState:e}).dispatch=ho.bind(null,Wa,e),[t.memoizedState,e]}function eo(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=Wa.updateQueue)?(t={lastEffect:null},Wa.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function to(){return Ga().memoizedState}function no(e,t,n,r){var i=qa();Wa.effectTag|=e,i.memoizedState=eo(1|t,n,void 0,void 0===r?null:r)}function ro(e,t,n,r){var i=Ga();r=void 0===r?null:r;var a=void 0;if(null!==Ua){var o=Ua.memoizedState;if(a=o.destroy,null!==r&&$a(r,o.deps))return void eo(t,n,a,r)}Wa.effectTag|=e,i.memoizedState=eo(1|t,n,a,r)}function io(e,t){return no(516,4,e,t)}function ao(e,t){return ro(516,4,e,t)}function oo(e,t){return ro(4,2,e,t)}function lo(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function so(e,t,n){return n=null!=n?n.concat([e]):null,ro(4,2,lo.bind(null,t,e),n)}function uo(){}function co(e,t){return qa().memoizedState=[e,void 0===t?null:t],e}function fo(e,t){var n=Ga();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&$a(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function po(e,t){var n=Ga();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&$a(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function mo(e,t,n){var r=Ri();Ui(98>r?98:r,(function(){e(!0)})),Ui(97<r?97:r,(function(){var r=Ba.suspense;Ba.suspense=void 0===t?null:t;try{e(!1),n()}finally{Ba.suspense=r}}))}function ho(e,t,n){var r=$l(),i=da.suspense;i={expirationTime:r=Ql(r,e,i),suspenseConfig:i,action:n,eagerReducer:null,eagerState:null,next:null};var a=t.pending;if(null===a?i.next=i:(i.next=a.next,a.next=i),t.pending=i,a=e.alternate,e===Wa||null!==a&&a===Wa)Va=!0,i.expirationTime=Ra,Wa.expirationTime=Ra;else{if(0===e.expirationTime&&(null===a||0===a.expirationTime)&&null!==(a=t.lastRenderedReducer))try{var o=t.lastRenderedState,l=a(o,n);if(i.eagerReducer=a,i.eagerState=l,Ar(l,o))return}catch(e){}ql(e,r)}}var go={readContext:ra,useCallback:Ka,useContext:Ka,useEffect:Ka,useImperativeHandle:Ka,useLayoutEffect:Ka,useMemo:Ka,useReducer:Ka,useRef:Ka,useState:Ka,useDebugValue:Ka,useResponder:Ka,useDeferredValue:Ka,useTransition:Ka},vo={readContext:ra,useCallback:co,useContext:ra,useEffect:io,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,no(4,2,lo.bind(null,t,e),n)},useLayoutEffect:function(e,t){return no(4,2,e,t)},useMemo:function(e,t){var n=qa();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=qa();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=ho.bind(null,Wa,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},qa().memoizedState=e},useState:Xa,useDebugValue:uo,useResponder:Aa,useDeferredValue:function(e,t){var n=Xa(e),r=n[0],i=n[1];return io((function(){var n=Ba.suspense;Ba.suspense=void 0===t?null:t;try{i(e)}finally{Ba.suspense=n}}),[e,t]),r},useTransition:function(e){var t=Xa(!1),n=t[0];return t=t[1],[co(mo.bind(null,t,e),[t,e]),n]}},yo={readContext:ra,useCallback:fo,useContext:ra,useEffect:ao,useImperativeHandle:so,useLayoutEffect:oo,useMemo:po,useReducer:Za,useRef:to,useState:function(){return Za(Ja)},useDebugValue:uo,useResponder:Aa,useDeferredValue:function(e,t){var n=Za(Ja),r=n[0],i=n[1];return ao((function(){var n=Ba.suspense;Ba.suspense=void 0===t?null:t;try{i(e)}finally{Ba.suspense=n}}),[e,t]),r},useTransition:function(e){var t=Za(Ja),n=t[0];return t=t[1],[fo(mo.bind(null,t,e),[t,e]),n]}},bo={readContext:ra,useCallback:fo,useContext:ra,useEffect:ao,useImperativeHandle:so,useLayoutEffect:oo,useMemo:po,useReducer:Ya,useRef:to,useState:function(){return Ya(Ja)},useDebugValue:uo,useResponder:Aa,useDeferredValue:function(e,t){var n=Ya(Ja),r=n[0],i=n[1];return ao((function(){var n=Ba.suspense;Ba.suspense=void 0===t?null:t;try{i(e)}finally{Ba.suspense=n}}),[e,t]),r},useTransition:function(e){var t=Ya(Ja),n=t[0];return t=t[1],[fo(mo.bind(null,t,e),[t,e]),n]}},wo=null,ko=null,_o=!1;function Eo(e,t){var n=xs(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function xo(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function zo(e){if(_o){var t=ko;if(t){var n=t;if(!xo(e,t)){if(!(t=kn(n.nextSibling))||!xo(e,t))return e.effectTag=-1025&e.effectTag|2,_o=!1,void(wo=e);Eo(wo,n)}wo=e,ko=kn(t.firstChild)}else e.effectTag=-1025&e.effectTag|2,_o=!1,wo=e}}function So(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;wo=e}function To(e){if(e!==wo)return!1;if(!_o)return So(e),_o=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!yn(t,e.memoizedProps))for(t=ko;t;)Eo(e,t),t=kn(t.nextSibling);if(So(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(o(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){ko=kn(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}ko=null}}else ko=wo?kn(e.stateNode.nextSibling):null;return!0}function No(){ko=wo=null,_o=!1}var Po=J.ReactCurrentOwner,jo=!1;function Co(e,t,n,r){t.child=null===e?za(t,null,n,r):xa(t,e.child,n,r)}function Io(e,t,n,r,i){n=n.render;var a=t.ref;return na(t,i),r=Qa(e,t,n,r,a,i),null===e||jo?(t.effectTag|=1,Co(e,t,r,i),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=i&&(e.expirationTime=0),qo(e,t,i))}function Mo(e,t,n,r,i,a){if(null===e){var o=n.type;return"function"!=typeof o||zs(o)||void 0!==o.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Ts(n.type,null,r,null,t.mode,a)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=o,Oo(e,t,o,r,i,a))}return o=e.child,i<a&&(i=o.memoizedProps,(n=null!==(n=n.compare)?n:Br)(i,r)&&e.ref===t.ref)?qo(e,t,a):(t.effectTag|=1,(e=Ss(o,r)).ref=t.ref,e.return=t,t.child=e)}function Oo(e,t,n,r,i,a){return null!==e&&Br(e.memoizedProps,r)&&e.ref===t.ref&&(jo=!1,i<a)?(t.expirationTime=e.expirationTime,qo(e,t,a)):Lo(e,t,n,r,a)}function Do(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function Lo(e,t,n,r,i){var a=hi(n)?pi:fi.current;return a=mi(t,a),na(t,i),n=Qa(e,t,n,r,a,i),null===e||jo?(t.effectTag|=1,Co(e,t,n,i),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=i&&(e.expirationTime=0),qo(e,t,i))}function Ao(e,t,n,r,i){if(hi(n)){var a=!0;bi(t)}else a=!1;if(na(t,i),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),va(t,n,r),ba(t,n,r,i),r=!0;else if(null===e){var o=t.stateNode,l=t.memoizedProps;o.props=l;var s=o.context,u=n.contextType;"object"==typeof u&&null!==u?u=ra(u):u=mi(t,u=hi(n)?pi:fi.current);var c=n.getDerivedStateFromProps,f="function"==typeof c||"function"==typeof o.getSnapshotBeforeUpdate;f||"function"!=typeof o.UNSAFE_componentWillReceiveProps&&"function"!=typeof o.componentWillReceiveProps||(l!==r||s!==u)&&ya(t,o,r,u),ia=!1;var d=t.memoizedState;o.state=d,ca(t,r,o,i),s=t.memoizedState,l!==r||d!==s||di.current||ia?("function"==typeof c&&(ma(t,n,c,r),s=t.memoizedState),(l=ia||ga(t,n,l,r,d,s,u))?(f||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||("function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount()),"function"==typeof o.componentDidMount&&(t.effectTag|=4)):("function"==typeof o.componentDidMount&&(t.effectTag|=4),t.memoizedProps=r,t.memoizedState=s),o.props=r,o.state=s,o.context=u,r=l):("function"==typeof o.componentDidMount&&(t.effectTag|=4),r=!1)}else o=t.stateNode,oa(e,t),l=t.memoizedProps,o.props=t.type===t.elementType?l:qi(t.type,l),s=o.context,"object"==typeof(u=n.contextType)&&null!==u?u=ra(u):u=mi(t,u=hi(n)?pi:fi.current),(f="function"==typeof(c=n.getDerivedStateFromProps)||"function"==typeof o.getSnapshotBeforeUpdate)||"function"!=typeof o.UNSAFE_componentWillReceiveProps&&"function"!=typeof o.componentWillReceiveProps||(l!==r||s!==u)&&ya(t,o,r,u),ia=!1,s=t.memoizedState,o.state=s,ca(t,r,o,i),d=t.memoizedState,l!==r||s!==d||di.current||ia?("function"==typeof c&&(ma(t,n,c,r),d=t.memoizedState),(c=ia||ga(t,n,l,r,s,d,u))?(f||"function"!=typeof o.UNSAFE_componentWillUpdate&&"function"!=typeof o.componentWillUpdate||("function"==typeof o.componentWillUpdate&&o.componentWillUpdate(r,d,u),"function"==typeof o.UNSAFE_componentWillUpdate&&o.UNSAFE_componentWillUpdate(r,d,u)),"function"==typeof o.componentDidUpdate&&(t.effectTag|=4),"function"==typeof o.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof o.componentDidUpdate||l===e.memoizedProps&&s===e.memoizedState||(t.effectTag|=4),"function"!=typeof o.getSnapshotBeforeUpdate||l===e.memoizedProps&&s===e.memoizedState||(t.effectTag|=256),t.memoizedProps=r,t.memoizedState=d),o.props=r,o.state=d,o.context=u,r=c):("function"!=typeof o.componentDidUpdate||l===e.memoizedProps&&s===e.memoizedState||(t.effectTag|=4),"function"!=typeof o.getSnapshotBeforeUpdate||l===e.memoizedProps&&s===e.memoizedState||(t.effectTag|=256),r=!1);return Fo(e,t,n,r,a,i)}function Fo(e,t,n,r,i,a){Do(e,t);var o=0!=(64&t.effectTag);if(!r&&!o)return i&&wi(t,n,!1),qo(e,t,a);r=t.stateNode,Po.current=t;var l=o&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.effectTag|=1,null!==e&&o?(t.child=xa(t,e.child,null,a),t.child=xa(t,null,l,a)):Co(e,t,l,a),t.memoizedState=r.state,i&&wi(t,n,!0),t.child}function Bo(e){var t=e.stateNode;t.pendingContext?vi(0,t.pendingContext,t.pendingContext!==t.context):t.context&&vi(0,t.context,!1),Ca(e,t.containerInfo)}var Ro,Wo,Uo,Ho={dehydrated:null,retryTime:0};function Vo(e,t,n){var r,i=t.mode,a=t.pendingProps,o=Da.current,l=!1;if((r=0!=(64&t.effectTag))||(r=0!=(2&o)&&(null===e||null!==e.memoizedState)),r?(l=!0,t.effectTag&=-65):null!==e&&null===e.memoizedState||void 0===a.fallback||!0===a.unstable_avoidThisFallback||(o|=1),ui(Da,1&o),null===e){if(void 0!==a.fallback&&zo(t),l){if(l=a.fallback,(a=Ns(null,i,0,null)).return=t,0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,a.child=e;null!==e;)e.return=a,e=e.sibling;return(n=Ns(l,i,n,null)).return=t,a.sibling=n,t.memoizedState=Ho,t.child=a,n}return i=a.children,t.memoizedState=null,t.child=za(t,null,i,n)}if(null!==e.memoizedState){if(i=(e=e.child).sibling,l){if(a=a.fallback,(n=Ss(e,e.pendingProps)).return=t,0==(2&t.mode)&&(l=null!==t.memoizedState?t.child.child:t.child)!==e.child)for(n.child=l;null!==l;)l.return=n,l=l.sibling;return(i=Ss(i,a)).return=t,n.sibling=i,n.childExpirationTime=0,t.memoizedState=Ho,t.child=n,i}return n=xa(t,e.child,a.children,n),t.memoizedState=null,t.child=n}if(e=e.child,l){if(l=a.fallback,(a=Ns(null,i,0,null)).return=t,a.child=e,null!==e&&(e.return=a),0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,a.child=e;null!==e;)e.return=a,e=e.sibling;return(n=Ns(l,i,n,null)).return=t,a.sibling=n,n.effectTag|=2,a.childExpirationTime=0,t.memoizedState=Ho,t.child=a,n}return t.memoizedState=null,t.child=xa(t,e,a.children,n)}function Ko(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t),ta(e.return,t)}function $o(e,t,n,r,i,a){var o=e.memoizedState;null===o?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailExpiration:0,tailMode:i,lastEffect:a}:(o.isBackwards=t,o.rendering=null,o.renderingStartTime=0,o.last=r,o.tail=n,o.tailExpiration=0,o.tailMode=i,o.lastEffect=a)}function Qo(e,t,n){var r=t.pendingProps,i=r.revealOrder,a=r.tail;if(Co(e,t,r.children,n),0!=(2&(r=Da.current)))r=1&r|2,t.effectTag|=64;else{if(null!==e&&0!=(64&e.effectTag))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Ko(e,n);else if(19===e.tag)Ko(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(ui(Da,r),0==(2&t.mode))t.memoizedState=null;else switch(i){case"forwards":for(n=t.child,i=null;null!==n;)null!==(e=n.alternate)&&null===La(e)&&(i=n),n=n.sibling;null===(n=i)?(i=t.child,t.child=null):(i=n.sibling,n.sibling=null),$o(t,!1,i,n,a,t.lastEffect);break;case"backwards":for(n=null,i=t.child,t.child=null;null!==i;){if(null!==(e=i.alternate)&&null===La(e)){t.child=i;break}e=i.sibling,i.sibling=n,n=i,i=e}$o(t,!0,n,null,a,t.lastEffect);break;case"together":$o(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function qo(e,t,n){null!==e&&(t.dependencies=e.dependencies);var r=t.expirationTime;if(0!==r&&os(r),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child)throw Error(o(153));if(null!==t.child){for(n=Ss(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Ss(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function Go(e,t){switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function Jo(e,t,n){var r=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return hi(t.type)&&gi(),null;case 3:return Ia(),si(di),si(fi),(n=t.stateNode).pendingContext&&(n.context=n.pendingContext,n.pendingContext=null),null!==e&&null!==e.child||!To(t)||(t.effectTag|=4),null;case 5:Oa(t),n=ja(Pa.current);var a=t.type;if(null!==e&&null!=t.stateNode)Wo(e,t,a,r,n),e.ref!==t.ref&&(t.effectTag|=128);else{if(!r){if(null===t.stateNode)throw Error(o(166));return null}if(e=ja(Ta.current),To(t)){r=t.stateNode,a=t.type;var l=t.memoizedProps;switch(r[xn]=t,r[zn]=l,a){case"iframe":case"object":case"embed":Qt("load",r);break;case"video":case"audio":for(e=0;e<Je.length;e++)Qt(Je[e],r);break;case"source":Qt("error",r);break;case"img":case"image":case"link":Qt("error",r),Qt("load",r);break;case"form":Qt("reset",r),Qt("submit",r);break;case"details":Qt("toggle",r);break;case"input":Ee(r,l),Qt("invalid",r),sn(n,"onChange");break;case"select":r._wrapperState={wasMultiple:!!l.multiple},Qt("invalid",r),sn(n,"onChange");break;case"textarea":Ce(r,l),Qt("invalid",r),sn(n,"onChange")}for(var s in an(a,l),e=null,l)if(l.hasOwnProperty(s)){var u=l[s];"children"===s?"string"==typeof u?r.textContent!==u&&(e=["children",u]):"number"==typeof u&&r.textContent!==""+u&&(e=["children",""+u]):x.hasOwnProperty(s)&&null!=u&&sn(n,s)}switch(a){case"input":we(r),Se(r,l,!0);break;case"textarea":we(r),Me(r);break;case"select":case"option":break;default:"function"==typeof l.onClick&&(r.onclick=un)}n=e,t.updateQueue=n,null!==n&&(t.effectTag|=4)}else{switch(s=9===n.nodeType?n:n.ownerDocument,e===ln&&(e=Le(a)),e===ln?"script"===a?((e=s.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=s.createElement(a,{is:r.is}):(e=s.createElement(a),"select"===a&&(s=e,r.multiple?s.multiple=!0:r.size&&(s.size=r.size))):e=s.createElementNS(e,a),e[xn]=t,e[zn]=r,Ro(e,t),t.stateNode=e,s=on(a,r),a){case"iframe":case"object":case"embed":Qt("load",e),u=r;break;case"video":case"audio":for(u=0;u<Je.length;u++)Qt(Je[u],e);u=r;break;case"source":Qt("error",e),u=r;break;case"img":case"image":case"link":Qt("error",e),Qt("load",e),u=r;break;case"form":Qt("reset",e),Qt("submit",e),u=r;break;case"details":Qt("toggle",e),u=r;break;case"input":Ee(e,r),u=_e(e,r),Qt("invalid",e),sn(n,"onChange");break;case"option":u=Ne(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},u=i({},r,{value:void 0}),Qt("invalid",e),sn(n,"onChange");break;case"textarea":Ce(e,r),u=je(e,r),Qt("invalid",e),sn(n,"onChange");break;default:u=r}an(a,u);var c=u;for(l in c)if(c.hasOwnProperty(l)){var f=c[l];"style"===l?nn(e,f):"dangerouslySetInnerHTML"===l?null!=(f=f?f.__html:void 0)&&Be(e,f):"children"===l?"string"==typeof f?("textarea"!==a||""!==f)&&Re(e,f):"number"==typeof f&&Re(e,""+f):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(x.hasOwnProperty(l)?null!=f&&sn(n,l):null!=f&&Z(e,l,f,s))}switch(a){case"input":we(e),Se(e,r,!1);break;case"textarea":we(e),Me(e);break;case"option":null!=r.value&&e.setAttribute("value",""+ye(r.value));break;case"select":e.multiple=!!r.multiple,null!=(n=r.value)?Pe(e,!!r.multiple,n,!1):null!=r.defaultValue&&Pe(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof u.onClick&&(e.onclick=un)}vn(a,r)&&(t.effectTag|=4)}null!==t.ref&&(t.effectTag|=128)}return null;case 6:if(e&&null!=t.stateNode)Uo(0,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(o(166));n=ja(Pa.current),ja(Ta.current),To(t)?(n=t.stateNode,r=t.memoizedProps,n[xn]=t,n.nodeValue!==r&&(t.effectTag|=4)):((n=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[xn]=t,t.stateNode=n)}return null;case 13:return si(Da),r=t.memoizedState,0!=(64&t.effectTag)?(t.expirationTime=n,t):(n=null!==r,r=!1,null===e?void 0!==t.memoizedProps.fallback&&To(t):(r=null!==(a=e.memoizedState),n||null===a||null!==(a=e.child.sibling)&&(null!==(l=t.firstEffect)?(t.firstEffect=a,a.nextEffect=l):(t.firstEffect=t.lastEffect=a,a.nextEffect=null),a.effectTag=8)),n&&!r&&0!=(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&Da.current)?Tl===wl&&(Tl=kl):(Tl!==wl&&Tl!==kl||(Tl=_l),0!==Il&&null!==xl&&(Ms(xl,Sl),Os(xl,Il)))),(n||r)&&(t.effectTag|=4),null);case 4:return Ia(),null;case 10:return ea(t),null;case 17:return hi(t.type)&&gi(),null;case 19:if(si(Da),null===(r=t.memoizedState))return null;if(a=0!=(64&t.effectTag),null===(l=r.rendering)){if(a)Go(r,!1);else if(Tl!==wl||null!==e&&0!=(64&e.effectTag))for(l=t.child;null!==l;){if(null!==(e=La(l))){for(t.effectTag|=64,Go(r,!1),null!==(a=e.updateQueue)&&(t.updateQueue=a,t.effectTag|=4),null===r.lastEffect&&(t.firstEffect=null),t.lastEffect=r.lastEffect,r=t.child;null!==r;)l=n,(a=r).effectTag&=2,a.nextEffect=null,a.firstEffect=null,a.lastEffect=null,null===(e=a.alternate)?(a.childExpirationTime=0,a.expirationTime=l,a.child=null,a.memoizedProps=null,a.memoizedState=null,a.updateQueue=null,a.dependencies=null):(a.childExpirationTime=e.childExpirationTime,a.expirationTime=e.expirationTime,a.child=e.child,a.memoizedProps=e.memoizedProps,a.memoizedState=e.memoizedState,a.updateQueue=e.updateQueue,l=e.dependencies,a.dependencies=null===l?null:{expirationTime:l.expirationTime,firstContext:l.firstContext,responders:l.responders}),r=r.sibling;return ui(Da,1&Da.current|2),t.child}l=l.sibling}}else{if(!a)if(null!==(e=La(l))){if(t.effectTag|=64,a=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.effectTag|=4),Go(r,!0),null===r.tail&&"hidden"===r.tailMode&&!l.alternate)return null!==(t=t.lastEffect=r.lastEffect)&&(t.nextEffect=null),null}else 2*Bi()-r.renderingStartTime>r.tailExpiration&&1<n&&(t.effectTag|=64,a=!0,Go(r,!1),t.expirationTime=t.childExpirationTime=n-1);r.isBackwards?(l.sibling=t.child,t.child=l):(null!==(n=r.last)?n.sibling=l:t.child=l,r.last=l)}return null!==r.tail?(0===r.tailExpiration&&(r.tailExpiration=Bi()+500),n=r.tail,r.rendering=n,r.tail=n.sibling,r.lastEffect=t.lastEffect,r.renderingStartTime=Bi(),n.sibling=null,t=Da.current,ui(Da,a?1&t|2:1&t),n):null}throw Error(o(156,t.tag))}function Zo(e){switch(e.tag){case 1:hi(e.type)&&gi();var t=e.effectTag;return 4096&t?(e.effectTag=-4097&t|64,e):null;case 3:if(Ia(),si(di),si(fi),0!=(64&(t=e.effectTag)))throw Error(o(285));return e.effectTag=-4097&t|64,e;case 5:return Oa(e),null;case 13:return si(Da),4096&(t=e.effectTag)?(e.effectTag=-4097&t|64,e):null;case 19:return si(Da),null;case 4:return Ia(),null;case 10:return ea(e),null;default:return null}}function Yo(e,t){return{value:e,source:t,stack:ve(t)}}Ro=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Wo=function(e,t,n,r,a){var o=e.memoizedProps;if(o!==r){var l,s,u=t.stateNode;switch(ja(Ta.current),e=null,n){case"input":o=_e(u,o),r=_e(u,r),e=[];break;case"option":o=Ne(u,o),r=Ne(u,r),e=[];break;case"select":o=i({},o,{value:void 0}),r=i({},r,{value:void 0}),e=[];break;case"textarea":o=je(u,o),r=je(u,r),e=[];break;default:"function"!=typeof o.onClick&&"function"==typeof r.onClick&&(u.onclick=un)}for(l in an(n,r),n=null,o)if(!r.hasOwnProperty(l)&&o.hasOwnProperty(l)&&null!=o[l])if("style"===l)for(s in u=o[l])u.hasOwnProperty(s)&&(n||(n={}),n[s]="");else"dangerouslySetInnerHTML"!==l&&"children"!==l&&"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(x.hasOwnProperty(l)?e||(e=[]):(e=e||[]).push(l,null));for(l in r){var c=r[l];if(u=null!=o?o[l]:void 0,r.hasOwnProperty(l)&&c!==u&&(null!=c||null!=u))if("style"===l)if(u){for(s in u)!u.hasOwnProperty(s)||c&&c.hasOwnProperty(s)||(n||(n={}),n[s]="");for(s in c)c.hasOwnProperty(s)&&u[s]!==c[s]&&(n||(n={}),n[s]=c[s])}else n||(e||(e=[]),e.push(l,n)),n=c;else"dangerouslySetInnerHTML"===l?(c=c?c.__html:void 0,u=u?u.__html:void 0,null!=c&&u!==c&&(e=e||[]).push(l,c)):"children"===l?u===c||"string"!=typeof c&&"number"!=typeof c||(e=e||[]).push(l,""+c):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&(x.hasOwnProperty(l)?(null!=c&&sn(a,l),e||u===c||(e=[])):(e=e||[]).push(l,c))}n&&(e=e||[]).push("style",n),a=e,(t.updateQueue=a)&&(t.effectTag|=4)}},Uo=function(e,t,n,r){n!==r&&(t.effectTag|=4)};var Xo="function"==typeof WeakSet?WeakSet:Set;function el(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=ve(n)),null!==n&&ge(n.type),t=t.value,null!==e&&1===e.tag&&ge(e.type);try{console.error(t)}catch(e){setTimeout((function(){throw e}))}}function tl(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){ys(e,t)}else t.current=null}function nl(e,t){switch(t.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&t.effectTag&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:qi(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:case 5:case 6:case 4:case 17:return}throw Error(o(163))}function rl(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.destroy;n.destroy=void 0,void 0!==r&&r()}n=n.next}while(n!==t)}}function il(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function al(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:return void il(3,n);case 1:if(e=n.stateNode,4&n.effectTag)if(null===t)e.componentDidMount();else{var r=n.elementType===n.type?t.memoizedProps:qi(n.type,t.memoizedProps);e.componentDidUpdate(r,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate)}return void(null!==(t=n.updateQueue)&&fa(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:e=n.child.stateNode;break;case 1:e=n.child.stateNode}fa(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.effectTag&&vn(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&Lt(n)))));case 19:case 17:case 20:case 21:return}throw Error(o(163))}function ol(e,t,n){switch("function"==typeof _s&&_s(t),t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var r=e.next;Ui(97<n?97:n,(function(){var e=r;do{var n=e.destroy;if(void 0!==n){var i=t;try{n()}catch(e){ys(i,e)}}e=e.next}while(e!==r)}))}break;case 1:tl(t),"function"==typeof(n=t.stateNode).componentWillUnmount&&function(e,t){try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){ys(e,t)}}(t,n);break;case 5:tl(t);break;case 4:cl(e,t,n)}}function ll(e){var t=e.alternate;e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null,e.dependencies=null,e.alternate=null,e.firstEffect=null,e.lastEffect=null,e.pendingProps=null,e.memoizedProps=null,e.stateNode=null,null!==t&&ll(t)}function sl(e){return 5===e.tag||3===e.tag||4===e.tag}function ul(e){e:{for(var t=e.return;null!==t;){if(sl(t)){var n=t;break e}t=t.return}throw Error(o(160))}switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(o(161))}16&n.effectTag&&(Re(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||sl(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}r?function e(t,n,r){var i=t.tag,a=5===i||6===i;if(a)t=a?t.stateNode:t.stateNode.instance,n?8===r.nodeType?r.parentNode.insertBefore(t,n):r.insertBefore(t,n):(8===r.nodeType?(n=r.parentNode).insertBefore(t,r):(n=r).appendChild(t),null!==(r=r._reactRootContainer)&&void 0!==r||null!==n.onclick||(n.onclick=un));else if(4!==i&&null!==(t=t.child))for(e(t,n,r),t=t.sibling;null!==t;)e(t,n,r),t=t.sibling}(e,n,t):function e(t,n,r){var i=t.tag,a=5===i||6===i;if(a)t=a?t.stateNode:t.stateNode.instance,n?r.insertBefore(t,n):r.appendChild(t);else if(4!==i&&null!==(t=t.child))for(e(t,n,r),t=t.sibling;null!==t;)e(t,n,r),t=t.sibling}(e,n,t)}function cl(e,t,n){for(var r,i,a=t,l=!1;;){if(!l){l=a.return;e:for(;;){if(null===l)throw Error(o(160));switch(r=l.stateNode,l.tag){case 5:i=!1;break e;case 3:case 4:r=r.containerInfo,i=!0;break e}l=l.return}l=!0}if(5===a.tag||6===a.tag){e:for(var s=e,u=a,c=n,f=u;;)if(ol(s,f,c),null!==f.child&&4!==f.tag)f.child.return=f,f=f.child;else{if(f===u)break e;for(;null===f.sibling;){if(null===f.return||f.return===u)break e;f=f.return}f.sibling.return=f.return,f=f.sibling}i?(s=r,u=a.stateNode,8===s.nodeType?s.parentNode.removeChild(u):s.removeChild(u)):r.removeChild(a.stateNode)}else if(4===a.tag){if(null!==a.child){r=a.stateNode.containerInfo,i=!0,a.child.return=a,a=a.child;continue}}else if(ol(e,a,n),null!==a.child){a.child.return=a,a=a.child;continue}if(a===t)break;for(;null===a.sibling;){if(null===a.return||a.return===t)return;4===(a=a.return).tag&&(l=!1)}a.sibling.return=a.return,a=a.sibling}}function fl(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:return void rl(3,t);case 1:return;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps,i=null!==e?e.memoizedProps:r;e=t.type;var a=t.updateQueue;if(t.updateQueue=null,null!==a){for(n[zn]=r,"input"===e&&"radio"===r.type&&null!=r.name&&xe(n,r),on(e,i),t=on(e,r),i=0;i<a.length;i+=2){var l=a[i],s=a[i+1];"style"===l?nn(n,s):"dangerouslySetInnerHTML"===l?Be(n,s):"children"===l?Re(n,s):Z(n,l,s,t)}switch(e){case"input":ze(n,r);break;case"textarea":Ie(n,r);break;case"select":t=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(e=r.value)?Pe(n,!!r.multiple,e,!1):t!==!!r.multiple&&(null!=r.defaultValue?Pe(n,!!r.multiple,r.defaultValue,!0):Pe(n,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(o(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((t=t.stateNode).hydrate&&(t.hydrate=!1,Lt(t.containerInfo)));case 12:return;case 13:if(n=t,null===t.memoizedState?r=!1:(r=!0,n=t.child,Ol=Bi()),null!==n)e:for(e=n;;){if(5===e.tag)a=e.stateNode,r?"function"==typeof(a=a.style).setProperty?a.setProperty("display","none","important"):a.display="none":(a=e.stateNode,i=null!=(i=e.memoizedProps.style)&&i.hasOwnProperty("display")?i.display:null,a.style.display=tn("display",i));else if(6===e.tag)e.stateNode.nodeValue=r?"":e.memoizedProps;else{if(13===e.tag&&null!==e.memoizedState&&null===e.memoizedState.dehydrated){(a=e.child.sibling).return=e,e=a;continue}if(null!==e.child){e.child.return=e,e=e.child;continue}}if(e===n)break;for(;null===e.sibling;){if(null===e.return||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}return void dl(t);case 19:return void dl(t);case 17:return}throw Error(o(163))}function dl(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Xo),t.forEach((function(t){var r=ws.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}var pl="function"==typeof WeakMap?WeakMap:Map;function ml(e,t,n){(n=la(n,null)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Ll||(Ll=!0,Al=r),el(e,t)},n}function hl(e,t,n){(n=la(n,null)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var i=t.value;n.payload=function(){return el(e,t),r(i)}}var a=e.stateNode;return null!==a&&"function"==typeof a.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Fl?Fl=new Set([this]):Fl.add(this),el(e,t));var n=t.stack;this.componentDidCatch(t.value,{componentStack:null!==n?n:""})}),n}var gl,vl=Math.ceil,yl=J.ReactCurrentDispatcher,bl=J.ReactCurrentOwner,wl=0,kl=3,_l=4,El=0,xl=null,zl=null,Sl=0,Tl=wl,Nl=null,Pl=1073741823,jl=1073741823,Cl=null,Il=0,Ml=!1,Ol=0,Dl=null,Ll=!1,Al=null,Fl=null,Bl=!1,Rl=null,Wl=90,Ul=null,Hl=0,Vl=null,Kl=0;function $l(){return 0!=(48&El)?1073741821-(Bi()/10|0):0!==Kl?Kl:Kl=1073741821-(Bi()/10|0)}function Ql(e,t,n){if(0==(2&(t=t.mode)))return 1073741823;var r=Ri();if(0==(4&t))return 99===r?1073741823:1073741822;if(0!=(16&El))return Sl;if(null!==n)e=Qi(e,0|n.timeoutMs||5e3,250);else switch(r){case 99:e=1073741823;break;case 98:e=Qi(e,150,100);break;case 97:case 96:e=Qi(e,5e3,250);break;case 95:e=2;break;default:throw Error(o(326))}return null!==xl&&e===Sl&&--e,e}function ql(e,t){if(50<Hl)throw Hl=0,Vl=null,Error(o(185));if(null!==(e=Gl(e,t))){var n=Ri();1073741823===t?0!=(8&El)&&0==(48&El)?Xl(e):(Zl(e),0===El&&Ki()):Zl(e),0==(4&El)||98!==n&&99!==n||(null===Ul?Ul=new Map([[e,t]]):(void 0===(n=Ul.get(e))||n>t)&&Ul.set(e,t))}}function Gl(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var r=e.return,i=null;if(null===r&&3===e.tag)i=e.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<t&&(r.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===r.return&&3===r.tag){i=r.stateNode;break}r=r.return}return null!==i&&(xl===i&&(os(t),Tl===_l&&Ms(i,Sl)),Os(i,t)),i}function Jl(e){var t=e.lastExpiredTime;if(0!==t)return t;if(!Is(e,t=e.firstPendingTime))return t;var n=e.lastPingedTime;return 2>=(e=n>(e=e.nextKnownPendingLevel)?n:e)&&t!==e?0:e}function Zl(e){if(0!==e.lastExpiredTime)e.callbackExpirationTime=1073741823,e.callbackPriority=99,e.callbackNode=Vi(Xl.bind(null,e));else{var t=Jl(e),n=e.callbackNode;if(0===t)null!==n&&(e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90);else{var r=$l();if(1073741823===t?r=99:1===t||2===t?r=95:r=0>=(r=10*(1073741821-t)-10*(1073741821-r))?99:250>=r?98:5250>=r?97:95,null!==n){var i=e.callbackPriority;if(e.callbackExpirationTime===t&&i>=r)return;n!==Ii&&Ei(n)}e.callbackExpirationTime=t,e.callbackPriority=r,t=1073741823===t?Vi(Xl.bind(null,e)):Hi(r,Yl.bind(null,e),{timeout:10*(1073741821-t)-Bi()}),e.callbackNode=t}}}function Yl(e,t){if(Kl=0,t)return Ds(e,t=$l()),Zl(e),null;var n=Jl(e);if(0!==n){if(t=e.callbackNode,0!=(48&El))throw Error(o(327));if(hs(),e===xl&&n===Sl||ns(e,n),null!==zl){var r=El;El|=16;for(var i=is();;)try{ss();break}catch(t){rs(e,t)}if(Xi(),El=r,yl.current=i,1===Tl)throw t=Nl,ns(e,n),Ms(e,n),Zl(e),t;if(null===zl)switch(i=e.finishedWork=e.current.alternate,e.finishedExpirationTime=n,r=Tl,xl=null,r){case wl:case 1:throw Error(o(345));case 2:Ds(e,2<n?2:n);break;case kl:if(Ms(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=fs(i)),1073741823===Pl&&10<(i=Ol+500-Bi())){if(Ml){var a=e.lastPingedTime;if(0===a||a>=n){e.lastPingedTime=n,ns(e,n);break}}if(0!==(a=Jl(e))&&a!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}e.timeoutHandle=bn(ds.bind(null,e),i);break}ds(e);break;case _l:if(Ms(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=fs(i)),Ml&&(0===(i=e.lastPingedTime)||i>=n)){e.lastPingedTime=n,ns(e,n);break}if(0!==(i=Jl(e))&&i!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}if(1073741823!==jl?r=10*(1073741821-jl)-Bi():1073741823===Pl?r=0:(r=10*(1073741821-Pl)-5e3,0>(r=(i=Bi())-r)&&(r=0),(n=10*(1073741821-n)-i)<(r=(120>r?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*vl(r/1960))-r)&&(r=n)),10<r){e.timeoutHandle=bn(ds.bind(null,e),r);break}ds(e);break;case 5:if(1073741823!==Pl&&null!==Cl){a=Pl;var l=Cl;if(0>=(r=0|l.busyMinDurationMs)?r=0:(i=0|l.busyDelayMs,r=(a=Bi()-(10*(1073741821-a)-(0|l.timeoutMs||5e3)))<=i?0:i+r-a),10<r){Ms(e,n),e.timeoutHandle=bn(ds.bind(null,e),r);break}}ds(e);break;default:throw Error(o(329))}if(Zl(e),e.callbackNode===t)return Yl.bind(null,e)}}return null}function Xl(e){var t=e.lastExpiredTime;if(t=0!==t?t:1073741823,0!=(48&El))throw Error(o(327));if(hs(),e===xl&&t===Sl||ns(e,t),null!==zl){var n=El;El|=16;for(var r=is();;)try{ls();break}catch(t){rs(e,t)}if(Xi(),El=n,yl.current=r,1===Tl)throw n=Nl,ns(e,t),Ms(e,t),Zl(e),n;if(null!==zl)throw Error(o(261));e.finishedWork=e.current.alternate,e.finishedExpirationTime=t,xl=null,ds(e),Zl(e)}return null}function es(e,t){var n=El;El|=1;try{return e(t)}finally{0===(El=n)&&Ki()}}function ts(e,t){var n=El;El&=-2,El|=8;try{return e(t)}finally{0===(El=n)&&Ki()}}function ns(e,t){e.finishedWork=null,e.finishedExpirationTime=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,wn(n)),null!==zl)for(n=zl.return;null!==n;){var r=n;switch(r.tag){case 1:null!=(r=r.type.childContextTypes)&&gi();break;case 3:Ia(),si(di),si(fi);break;case 5:Oa(r);break;case 4:Ia();break;case 13:case 19:si(Da);break;case 10:ea(r)}n=n.return}xl=e,zl=Ss(e.current,null),Sl=t,Tl=wl,Nl=null,jl=Pl=1073741823,Cl=null,Il=0,Ml=!1}function rs(e,t){for(;;){try{if(Xi(),Fa.current=go,Va)for(var n=Wa.memoizedState;null!==n;){var r=n.queue;null!==r&&(r.pending=null),n=n.next}if(Ra=0,Ha=Ua=Wa=null,Va=!1,null===zl||null===zl.return)return Tl=1,Nl=t,zl=null;e:{var i=e,a=zl.return,o=zl,l=t;if(t=Sl,o.effectTag|=2048,o.firstEffect=o.lastEffect=null,null!==l&&"object"==typeof l&&"function"==typeof l.then){var s=l;if(0==(2&o.mode)){var u=o.alternate;u?(o.updateQueue=u.updateQueue,o.memoizedState=u.memoizedState,o.expirationTime=u.expirationTime):(o.updateQueue=null,o.memoizedState=null)}var c=0!=(1&Da.current),f=a;do{var d;if(d=13===f.tag){var p=f.memoizedState;if(null!==p)d=null!==p.dehydrated;else{var m=f.memoizedProps;d=void 0!==m.fallback&&(!0!==m.unstable_avoidThisFallback||!c)}}if(d){var h=f.updateQueue;if(null===h){var g=new Set;g.add(s),f.updateQueue=g}else h.add(s);if(0==(2&f.mode)){if(f.effectTag|=64,o.effectTag&=-2981,1===o.tag)if(null===o.alternate)o.tag=17;else{var v=la(1073741823,null);v.tag=2,sa(o,v)}o.expirationTime=1073741823;break e}l=void 0,o=t;var y=i.pingCache;if(null===y?(y=i.pingCache=new pl,l=new Set,y.set(s,l)):void 0===(l=y.get(s))&&(l=new Set,y.set(s,l)),!l.has(o)){l.add(o);var b=bs.bind(null,i,s,o);s.then(b,b)}f.effectTag|=4096,f.expirationTime=t;break e}f=f.return}while(null!==f);l=Error((ge(o.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+ve(o))}5!==Tl&&(Tl=2),l=Yo(l,o),f=a;do{switch(f.tag){case 3:s=l,f.effectTag|=4096,f.expirationTime=t,ua(f,ml(f,s,t));break e;case 1:s=l;var w=f.type,k=f.stateNode;if(0==(64&f.effectTag)&&("function"==typeof w.getDerivedStateFromError||null!==k&&"function"==typeof k.componentDidCatch&&(null===Fl||!Fl.has(k)))){f.effectTag|=4096,f.expirationTime=t,ua(f,hl(f,s,t));break e}}f=f.return}while(null!==f)}zl=cs(zl)}catch(e){t=e;continue}break}}function is(){var e=yl.current;return yl.current=go,null===e?go:e}function as(e,t){e<Pl&&2<e&&(Pl=e),null!==t&&e<jl&&2<e&&(jl=e,Cl=t)}function os(e){e>Il&&(Il=e)}function ls(){for(;null!==zl;)zl=us(zl)}function ss(){for(;null!==zl&&!Mi();)zl=us(zl)}function us(e){var t=gl(e.alternate,e,Sl);return e.memoizedProps=e.pendingProps,null===t&&(t=cs(e)),bl.current=null,t}function cs(e){zl=e;do{var t=zl.alternate;if(e=zl.return,0==(2048&zl.effectTag)){if(t=Jo(t,zl,Sl),1===Sl||1!==zl.childExpirationTime){for(var n=0,r=zl.child;null!==r;){var i=r.expirationTime,a=r.childExpirationTime;i>n&&(n=i),a>n&&(n=a),r=r.sibling}zl.childExpirationTime=n}if(null!==t)return t;null!==e&&0==(2048&e.effectTag)&&(null===e.firstEffect&&(e.firstEffect=zl.firstEffect),null!==zl.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=zl.firstEffect),e.lastEffect=zl.lastEffect),1<zl.effectTag&&(null!==e.lastEffect?e.lastEffect.nextEffect=zl:e.firstEffect=zl,e.lastEffect=zl))}else{if(null!==(t=Zo(zl)))return t.effectTag&=2047,t;null!==e&&(e.firstEffect=e.lastEffect=null,e.effectTag|=2048)}if(null!==(t=zl.sibling))return t;zl=e}while(null!==zl);return Tl===wl&&(Tl=5),null}function fs(e){var t=e.expirationTime;return t>(e=e.childExpirationTime)?t:e}function ds(e){var t=Ri();return Ui(99,ps.bind(null,e,t)),null}function ps(e,t){do{hs()}while(null!==Rl);if(0!=(48&El))throw Error(o(327));var n=e.finishedWork,r=e.finishedExpirationTime;if(null===n)return null;if(e.finishedWork=null,e.finishedExpirationTime=0,n===e.current)throw Error(o(177));e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90,e.nextKnownPendingLevel=0;var i=fs(n);if(e.firstPendingTime=i,r<=e.lastSuspendedTime?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:r<=e.firstSuspendedTime&&(e.firstSuspendedTime=r-1),r<=e.lastPingedTime&&(e.lastPingedTime=0),r<=e.lastExpiredTime&&(e.lastExpiredTime=0),e===xl&&(zl=xl=null,Sl=0),1<n.effectTag?null!==n.lastEffect?(n.lastEffect.nextEffect=n,i=n.firstEffect):i=n:i=n.firstEffect,null!==i){var a=El;El|=32,bl.current=null,hn=$t;var l=pn();if(mn(l)){if("selectionStart"in l)var s={start:l.selectionStart,end:l.selectionEnd};else e:{var u=(s=(s=l.ownerDocument)&&s.defaultView||window).getSelection&&s.getSelection();if(u&&0!==u.rangeCount){s=u.anchorNode;var c=u.anchorOffset,f=u.focusNode;u=u.focusOffset;try{s.nodeType,f.nodeType}catch(e){s=null;break e}var d=0,p=-1,m=-1,h=0,g=0,v=l,y=null;t:for(;;){for(var b;v!==s||0!==c&&3!==v.nodeType||(p=d+c),v!==f||0!==u&&3!==v.nodeType||(m=d+u),3===v.nodeType&&(d+=v.nodeValue.length),null!==(b=v.firstChild);)y=v,v=b;for(;;){if(v===l)break t;if(y===s&&++h===c&&(p=d),y===f&&++g===u&&(m=d),null!==(b=v.nextSibling))break;y=(v=y).parentNode}v=b}s=-1===p||-1===m?null:{start:p,end:m}}else s=null}s=s||{start:0,end:0}}else s=null;gn={activeElementDetached:null,focusedElem:l,selectionRange:s},$t=!1,Dl=i;do{try{ms()}catch(e){if(null===Dl)throw Error(o(330));ys(Dl,e),Dl=Dl.nextEffect}}while(null!==Dl);Dl=i;do{try{for(l=e,s=t;null!==Dl;){var w=Dl.effectTag;if(16&w&&Re(Dl.stateNode,""),128&w){var k=Dl.alternate;if(null!==k){var _=k.ref;null!==_&&("function"==typeof _?_(null):_.current=null)}}switch(1038&w){case 2:ul(Dl),Dl.effectTag&=-3;break;case 6:ul(Dl),Dl.effectTag&=-3,fl(Dl.alternate,Dl);break;case 1024:Dl.effectTag&=-1025;break;case 1028:Dl.effectTag&=-1025,fl(Dl.alternate,Dl);break;case 4:fl(Dl.alternate,Dl);break;case 8:cl(l,c=Dl,s),ll(c)}Dl=Dl.nextEffect}}catch(e){if(null===Dl)throw Error(o(330));ys(Dl,e),Dl=Dl.nextEffect}}while(null!==Dl);if(_=gn,k=pn(),w=_.focusedElem,s=_.selectionRange,k!==w&&w&&w.ownerDocument&&function e(t,n){return!(!t||!n)&&(t===n||(!t||3!==t.nodeType)&&(n&&3===n.nodeType?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}(w.ownerDocument.documentElement,w)){null!==s&&mn(w)&&(k=s.start,void 0===(_=s.end)&&(_=k),"selectionStart"in w?(w.selectionStart=k,w.selectionEnd=Math.min(_,w.value.length)):(_=(k=w.ownerDocument||document)&&k.defaultView||window).getSelection&&(_=_.getSelection(),c=w.textContent.length,l=Math.min(s.start,c),s=void 0===s.end?l:Math.min(s.end,c),!_.extend&&l>s&&(c=s,s=l,l=c),c=dn(w,l),f=dn(w,s),c&&f&&(1!==_.rangeCount||_.anchorNode!==c.node||_.anchorOffset!==c.offset||_.focusNode!==f.node||_.focusOffset!==f.offset)&&((k=k.createRange()).setStart(c.node,c.offset),_.removeAllRanges(),l>s?(_.addRange(k),_.extend(f.node,f.offset)):(k.setEnd(f.node,f.offset),_.addRange(k))))),k=[];for(_=w;_=_.parentNode;)1===_.nodeType&&k.push({element:_,left:_.scrollLeft,top:_.scrollTop});for("function"==typeof w.focus&&w.focus(),w=0;w<k.length;w++)(_=k[w]).element.scrollLeft=_.left,_.element.scrollTop=_.top}$t=!!hn,gn=hn=null,e.current=n,Dl=i;do{try{for(w=e;null!==Dl;){var E=Dl.effectTag;if(36&E&&al(w,Dl.alternate,Dl),128&E){k=void 0;var x=Dl.ref;if(null!==x){var z=Dl.stateNode;switch(Dl.tag){case 5:k=z;break;default:k=z}"function"==typeof x?x(k):x.current=k}}Dl=Dl.nextEffect}}catch(e){if(null===Dl)throw Error(o(330));ys(Dl,e),Dl=Dl.nextEffect}}while(null!==Dl);Dl=null,Oi(),El=a}else e.current=n;if(Bl)Bl=!1,Rl=e,Wl=t;else for(Dl=i;null!==Dl;)t=Dl.nextEffect,Dl.nextEffect=null,Dl=t;if(0===(t=e.firstPendingTime)&&(Fl=null),1073741823===t?e===Vl?Hl++:(Hl=0,Vl=e):Hl=0,"function"==typeof ks&&ks(n.stateNode,r),Zl(e),Ll)throw Ll=!1,e=Al,Al=null,e;return 0!=(8&El)||Ki(),null}function ms(){for(;null!==Dl;){var e=Dl.effectTag;0!=(256&e)&&nl(Dl.alternate,Dl),0==(512&e)||Bl||(Bl=!0,Hi(97,(function(){return hs(),null}))),Dl=Dl.nextEffect}}function hs(){if(90!==Wl){var e=97<Wl?97:Wl;return Wl=90,Ui(e,gs)}}function gs(){if(null===Rl)return!1;var e=Rl;if(Rl=null,0!=(48&El))throw Error(o(331));var t=El;for(El|=32,e=e.current.firstEffect;null!==e;){try{var n=e;if(0!=(512&n.effectTag))switch(n.tag){case 0:case 11:case 15:case 22:rl(5,n),il(5,n)}}catch(t){if(null===e)throw Error(o(330));ys(e,t)}n=e.nextEffect,e.nextEffect=null,e=n}return El=t,Ki(),!0}function vs(e,t,n){sa(e,t=ml(e,t=Yo(n,t),1073741823)),null!==(e=Gl(e,1073741823))&&Zl(e)}function ys(e,t){if(3===e.tag)vs(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){vs(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Fl||!Fl.has(r))){sa(n,e=hl(n,e=Yo(t,e),1073741823)),null!==(n=Gl(n,1073741823))&&Zl(n);break}}n=n.return}}function bs(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),xl===e&&Sl===n?Tl===_l||Tl===kl&&1073741823===Pl&&Bi()-Ol<500?ns(e,Sl):Ml=!0:Is(e,n)&&(0!==(t=e.lastPingedTime)&&t<n||(e.lastPingedTime=n,Zl(e)))}function ws(e,t){var n=e.stateNode;null!==n&&n.delete(t),0===(t=0)&&(t=Ql(t=$l(),e,null)),null!==(e=Gl(e,t))&&Zl(e)}gl=function(e,t,n){var r=t.expirationTime;if(null!==e){var i=t.pendingProps;if(e.memoizedProps!==i||di.current)jo=!0;else{if(r<n){switch(jo=!1,t.tag){case 3:Bo(t),No();break;case 5:if(Ma(t),4&t.mode&&1!==n&&i.hidden)return t.expirationTime=t.childExpirationTime=1,null;break;case 1:hi(t.type)&&bi(t);break;case 4:Ca(t,t.stateNode.containerInfo);break;case 10:r=t.memoizedProps.value,i=t.type._context,ui(Gi,i._currentValue),i._currentValue=r;break;case 13:if(null!==t.memoizedState)return 0!==(r=t.child.childExpirationTime)&&r>=n?Vo(e,t,n):(ui(Da,1&Da.current),null!==(t=qo(e,t,n))?t.sibling:null);ui(Da,1&Da.current);break;case 19:if(r=t.childExpirationTime>=n,0!=(64&e.effectTag)){if(r)return Qo(e,t,n);t.effectTag|=64}if(null!==(i=t.memoizedState)&&(i.rendering=null,i.tail=null),ui(Da,Da.current),!r)return null}return qo(e,t,n)}jo=!1}}else jo=!1;switch(t.expirationTime=0,t.tag){case 2:if(r=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,i=mi(t,fi.current),na(t,n),i=Qa(null,t,r,e,i,n),t.effectTag|=1,"object"==typeof i&&null!==i&&"function"==typeof i.render&&void 0===i.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,hi(r)){var a=!0;bi(t)}else a=!1;t.memoizedState=null!==i.state&&void 0!==i.state?i.state:null,aa(t);var l=r.getDerivedStateFromProps;"function"==typeof l&&ma(t,r,l,e),i.updater=ha,t.stateNode=i,i._reactInternalFiber=t,ba(t,r,e,n),t=Fo(null,t,r,!0,a,n)}else t.tag=0,Co(null,t,i,n),t=t.child;return t;case 16:e:{if(i=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,function(e){if(-1===e._status){e._status=0;var t=e._ctor;t=t(),e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}}(i),1!==i._status)throw i._result;switch(i=i._result,t.type=i,a=t.tag=function(e){if("function"==typeof e)return zs(e)?1:0;if(null!=e){if((e=e.$$typeof)===se)return 11;if(e===fe)return 14}return 2}(i),e=qi(i,e),a){case 0:t=Lo(null,t,i,e,n);break e;case 1:t=Ao(null,t,i,e,n);break e;case 11:t=Io(null,t,i,e,n);break e;case 14:t=Mo(null,t,i,qi(i.type,e),r,n);break e}throw Error(o(306,i,""))}return t;case 0:return r=t.type,i=t.pendingProps,Lo(e,t,r,i=t.elementType===r?i:qi(r,i),n);case 1:return r=t.type,i=t.pendingProps,Ao(e,t,r,i=t.elementType===r?i:qi(r,i),n);case 3:if(Bo(t),r=t.updateQueue,null===e||null===r)throw Error(o(282));if(r=t.pendingProps,i=null!==(i=t.memoizedState)?i.element:null,oa(e,t),ca(t,r,null,n),(r=t.memoizedState.element)===i)No(),t=qo(e,t,n);else{if((i=t.stateNode.hydrate)&&(ko=kn(t.stateNode.containerInfo.firstChild),wo=t,i=_o=!0),i)for(n=za(t,null,r,n),t.child=n;n;)n.effectTag=-3&n.effectTag|1024,n=n.sibling;else Co(e,t,r,n),No();t=t.child}return t;case 5:return Ma(t),null===e&&zo(t),r=t.type,i=t.pendingProps,a=null!==e?e.memoizedProps:null,l=i.children,yn(r,i)?l=null:null!==a&&yn(r,a)&&(t.effectTag|=16),Do(e,t),4&t.mode&&1!==n&&i.hidden?(t.expirationTime=t.childExpirationTime=1,t=null):(Co(e,t,l,n),t=t.child),t;case 6:return null===e&&zo(t),null;case 13:return Vo(e,t,n);case 4:return Ca(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=xa(t,null,r,n):Co(e,t,r,n),t.child;case 11:return r=t.type,i=t.pendingProps,Io(e,t,r,i=t.elementType===r?i:qi(r,i),n);case 7:return Co(e,t,t.pendingProps,n),t.child;case 8:case 12:return Co(e,t,t.pendingProps.children,n),t.child;case 10:e:{r=t.type._context,i=t.pendingProps,l=t.memoizedProps,a=i.value;var s=t.type._context;if(ui(Gi,s._currentValue),s._currentValue=a,null!==l)if(s=l.value,0===(a=Ar(s,a)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(s,a):1073741823))){if(l.children===i.children&&!di.current){t=qo(e,t,n);break e}}else for(null!==(s=t.child)&&(s.return=t);null!==s;){var u=s.dependencies;if(null!==u){l=s.child;for(var c=u.firstContext;null!==c;){if(c.context===r&&0!=(c.observedBits&a)){1===s.tag&&((c=la(n,null)).tag=2,sa(s,c)),s.expirationTime<n&&(s.expirationTime=n),null!==(c=s.alternate)&&c.expirationTime<n&&(c.expirationTime=n),ta(s.return,n),u.expirationTime<n&&(u.expirationTime=n);break}c=c.next}}else l=10===s.tag&&s.type===t.type?null:s.child;if(null!==l)l.return=s;else for(l=s;null!==l;){if(l===t){l=null;break}if(null!==(s=l.sibling)){s.return=l.return,l=s;break}l=l.return}s=l}Co(e,t,i.children,n),t=t.child}return t;case 9:return i=t.type,r=(a=t.pendingProps).children,na(t,n),r=r(i=ra(i,a.unstable_observedBits)),t.effectTag|=1,Co(e,t,r,n),t.child;case 14:return a=qi(i=t.type,t.pendingProps),Mo(e,t,i,a=qi(i.type,a),r,n);case 15:return Oo(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,i=t.pendingProps,i=t.elementType===r?i:qi(r,i),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,hi(r)?(e=!0,bi(t)):e=!1,na(t,n),va(t,r,i),ba(t,r,i,n),Fo(null,t,r,!0,e,n);case 19:return Qo(e,t,n)}throw Error(o(156,t.tag))};var ks=null,_s=null;function Es(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function xs(e,t,n,r){return new Es(e,t,n,r)}function zs(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Ss(e,t){var n=e.alternate;return null===n?((n=xs(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{expirationTime:t.expirationTime,firstContext:t.firstContext,responders:t.responders},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Ts(e,t,n,r,i,a){var l=2;if(r=e,"function"==typeof e)zs(e)&&(l=1);else if("string"==typeof e)l=5;else e:switch(e){case ne:return Ns(n.children,i,a,t);case le:l=8,i|=7;break;case re:l=8,i|=1;break;case ie:return(e=xs(12,n,t,8|i)).elementType=ie,e.type=ie,e.expirationTime=a,e;case ue:return(e=xs(13,n,t,i)).type=ue,e.elementType=ue,e.expirationTime=a,e;case ce:return(e=xs(19,n,t,i)).elementType=ce,e.expirationTime=a,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case ae:l=10;break e;case oe:l=9;break e;case se:l=11;break e;case fe:l=14;break e;case de:l=16,r=null;break e;case pe:l=22;break e}throw Error(o(130,null==e?e:typeof e,""))}return(t=xs(l,n,t,i)).elementType=e,t.type=r,t.expirationTime=a,t}function Ns(e,t,n,r){return(e=xs(7,e,r,t)).expirationTime=n,e}function Ps(e,t,n){return(e=xs(6,e,null,t)).expirationTime=n,e}function js(e,t,n){return(t=xs(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Cs(e,t,n){this.tag=t,this.current=null,this.containerInfo=e,this.pingCache=this.pendingChildren=null,this.finishedExpirationTime=0,this.finishedWork=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=90,this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}function Is(e,t){var n=e.firstSuspendedTime;return e=e.lastSuspendedTime,0!==n&&n>=t&&e<=t}function Ms(e,t){var n=e.firstSuspendedTime,r=e.lastSuspendedTime;n<t&&(e.firstSuspendedTime=t),(r>t||0===n)&&(e.lastSuspendedTime=t),t<=e.lastPingedTime&&(e.lastPingedTime=0),t<=e.lastExpiredTime&&(e.lastExpiredTime=0)}function Os(e,t){t>e.firstPendingTime&&(e.firstPendingTime=t);var n=e.firstSuspendedTime;0!==n&&(t>=n?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:t>=e.lastSuspendedTime&&(e.lastSuspendedTime=t+1),t>e.nextKnownPendingLevel&&(e.nextKnownPendingLevel=t))}function Ds(e,t){var n=e.lastExpiredTime;(0===n||n>t)&&(e.lastExpiredTime=t)}function Ls(e,t,n,r){var i=t.current,a=$l(),l=da.suspense;a=Ql(a,i,l);e:if(n){t:{if(Xe(n=n._reactInternalFiber)!==n||1!==n.tag)throw Error(o(170));var s=n;do{switch(s.tag){case 3:s=s.stateNode.context;break t;case 1:if(hi(s.type)){s=s.stateNode.__reactInternalMemoizedMergedChildContext;break t}}s=s.return}while(null!==s);throw Error(o(171))}if(1===n.tag){var u=n.type;if(hi(u)){n=yi(n,u,s);break e}}n=s}else n=ci;return null===t.context?t.context=n:t.pendingContext=n,(t=la(a,l)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),sa(i,t),ql(i,a),a}function As(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Fs(e,t){null!==(e=e.memoizedState)&&null!==e.dehydrated&&e.retryTime<t&&(e.retryTime=t)}function Bs(e,t){Fs(e,t),(e=e.alternate)&&Fs(e,t)}function Rs(e,t,n){var r=new Cs(e,t,n=null!=n&&!0===n.hydrate),i=xs(3,null,null,2===t?7:1===t?3:0);r.current=i,i.stateNode=r,aa(i),e[Sn]=r.current,n&&0!==t&&function(e,t){var n=Ye(t);St.forEach((function(e){mt(e,t,n)})),Tt.forEach((function(e){mt(e,t,n)}))}(0,9===e.nodeType?e:e.ownerDocument),this._internalRoot=r}function Ws(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Us(e,t,n,r,i){var a=n._reactRootContainer;if(a){var o=a._internalRoot;if("function"==typeof i){var l=i;i=function(){var e=As(o);l.call(e)}}Ls(t,o,e,i)}else{if(a=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Rs(e,0,t?{hydrate:!0}:void 0)}(n,r),o=a._internalRoot,"function"==typeof i){var s=i;i=function(){var e=As(o);s.call(e)}}ts((function(){Ls(t,o,e,i)}))}return As(o)}function Hs(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:te,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}function Vs(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Ws(t))throw Error(o(200));return Hs(e,t,null,n)}Rs.prototype.render=function(e){Ls(e,this._internalRoot,null,null)},Rs.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;Ls(null,e,null,(function(){t[Sn]=null}))},ht=function(e){if(13===e.tag){var t=Qi($l(),150,100);ql(e,t),Bs(e,t)}},gt=function(e){13===e.tag&&(ql(e,3),Bs(e,3))},vt=function(e){if(13===e.tag){var t=$l();ql(e,t=Ql(t,e,null)),Bs(e,t)}},N=function(e,t,n){switch(t){case"input":if(ze(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var i=jn(r);if(!i)throw Error(o(90));ke(r),ze(r,i)}}}break;case"textarea":Ie(e,n);break;case"select":null!=(t=n.value)&&Pe(e,!!n.multiple,t,!1)}},O=es,D=function(e,t,n,r,i){var a=El;El|=4;try{return Ui(98,e.bind(null,t,n,r,i))}finally{0===(El=a)&&Ki()}},L=function(){0==(49&El)&&(function(){if(null!==Ul){var e=Ul;Ul=null,e.forEach((function(e,t){Ds(t,e),Zl(t)})),Ki()}}(),hs())},A=function(e,t){var n=El;El|=2;try{return e(t)}finally{0===(El=n)&&Ki()}};var Ks,$s,Qs={Events:[Nn,Pn,jn,S,E,An,function(e){it(e,Ln)},I,M,Zt,lt,hs,{current:!1}]};$s=(Ks={findFiberByHostInstance:Tn,bundleType:0,version:"16.13.1",rendererPackageName:"react-dom"}).findFiberByHostInstance,function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);ks=function(e){try{t.onCommitFiberRoot(n,e,void 0,64==(64&e.current.effectTag))}catch(e){}},_s=function(e){try{t.onCommitFiberUnmount(n,e)}catch(e){}}}catch(e){}}(i({},Ks,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:J.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=nt(e))?null:e.stateNode},findFiberByHostInstance:function(e){return $s?$s(e):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null})),t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=Qs,t.createPortal=Vs,t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;if(void 0===t){if("function"==typeof e.render)throw Error(o(188));throw Error(o(268,Object.keys(e)))}return e=null===(e=nt(t))?null:e.stateNode},t.flushSync=function(e,t){if(0!=(48&El))throw Error(o(187));var n=El;El|=1;try{return Ui(99,e.bind(null,t))}finally{El=n,Ki()}},t.hydrate=function(e,t,n){if(!Ws(t))throw Error(o(200));return Us(null,e,t,!0,n)},t.render=function(e,t,n){if(!Ws(t))throw Error(o(200));return Us(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Ws(e))throw Error(o(40));return!!e._reactRootContainer&&(ts((function(){Us(null,null,e,!1,(function(){e._reactRootContainer=null,e[Sn]=null}))})),!0)},t.unstable_batchedUpdates=es,t.unstable_createPortal=function(e,t){return Vs(e,t,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!Ws(n))throw Error(o(200));if(null==e||void 0===e._reactInternalFiber)throw Error(o(38));return Us(e,t,n,!1,r)},t.version="16.13.1"},function(e,t,n){"use strict";e.exports=n(341)},function(e,t,n){"use strict";
/** @license React v0.19.1
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r,i,a,o,l;if("undefined"==typeof window||"function"!=typeof MessageChannel){var s=null,u=null,c=function(){if(null!==s)try{var e=t.unstable_now();s(!0,e),s=null}catch(e){throw setTimeout(c,0),e}},f=Date.now();t.unstable_now=function(){return Date.now()-f},r=function(e){null!==s?setTimeout(r,0,e):(s=e,setTimeout(c,0))},i=function(e,t){u=setTimeout(e,t)},a=function(){clearTimeout(u)},o=function(){return!1},l=t.unstable_forceFrameRate=function(){}}else{var d=window.performance,p=window.Date,m=window.setTimeout,h=window.clearTimeout;if("undefined"!=typeof console){var g=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof g&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills")}if("object"==typeof d&&"function"==typeof d.now)t.unstable_now=function(){return d.now()};else{var v=p.now();t.unstable_now=function(){return p.now()-v}}var y=!1,b=null,w=-1,k=5,_=0;o=function(){return t.unstable_now()>=_},l=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported"):k=0<e?Math.floor(1e3/e):5};var E=new MessageChannel,x=E.port2;E.port1.onmessage=function(){if(null!==b){var e=t.unstable_now();_=e+k;try{b(!0,e)?x.postMessage(null):(y=!1,b=null)}catch(e){throw x.postMessage(null),e}}else y=!1},r=function(e){b=e,y||(y=!0,x.postMessage(null))},i=function(e,n){w=m((function(){e(t.unstable_now())}),n)},a=function(){h(w),w=-1}}function z(e,t){var n=e.length;e.push(t);e:for(;;){var r=n-1>>>1,i=e[r];if(!(void 0!==i&&0<N(i,t)))break e;e[r]=t,e[n]=i,n=r}}function S(e){return void 0===(e=e[0])?null:e}function T(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,i=e.length;r<i;){var a=2*(r+1)-1,o=e[a],l=a+1,s=e[l];if(void 0!==o&&0>N(o,n))void 0!==s&&0>N(s,o)?(e[r]=s,e[l]=n,r=l):(e[r]=o,e[a]=n,r=a);else{if(!(void 0!==s&&0>N(s,n)))break e;e[r]=s,e[l]=n,r=l}}}return t}return null}function N(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var P=[],j=[],C=1,I=null,M=3,O=!1,D=!1,L=!1;function A(e){for(var t=S(j);null!==t;){if(null===t.callback)T(j);else{if(!(t.startTime<=e))break;T(j),t.sortIndex=t.expirationTime,z(P,t)}t=S(j)}}function F(e){if(L=!1,A(e),!D)if(null!==S(P))D=!0,r(B);else{var t=S(j);null!==t&&i(F,t.startTime-e)}}function B(e,n){D=!1,L&&(L=!1,a()),O=!0;var r=M;try{for(A(n),I=S(P);null!==I&&(!(I.expirationTime>n)||e&&!o());){var l=I.callback;if(null!==l){I.callback=null,M=I.priorityLevel;var s=l(I.expirationTime<=n);n=t.unstable_now(),"function"==typeof s?I.callback=s:I===S(P)&&T(P),A(n)}else T(P);I=S(P)}if(null!==I)var u=!0;else{var c=S(j);null!==c&&i(F,c.startTime-n),u=!1}return u}finally{I=null,M=r,O=!1}}function R(e){switch(e){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1e4;default:return 5e3}}var W=l;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){D||O||(D=!0,r(B))},t.unstable_getCurrentPriorityLevel=function(){return M},t.unstable_getFirstCallbackNode=function(){return S(P)},t.unstable_next=function(e){switch(M){case 1:case 2:case 3:var t=3;break;default:t=M}var n=M;M=t;try{return e()}finally{M=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=W,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=M;M=e;try{return t()}finally{M=n}},t.unstable_scheduleCallback=function(e,n,o){var l=t.unstable_now();if("object"==typeof o&&null!==o){var s=o.delay;s="number"==typeof s&&0<s?l+s:l,o="number"==typeof o.timeout?o.timeout:R(e)}else o=R(e),s=l;return e={id:C++,callback:n,priorityLevel:e,startTime:s,expirationTime:o=s+o,sortIndex:-1},s>l?(e.sortIndex=s,z(j,e),null===S(P)&&e===S(j)&&(L?a():L=!0,i(F,s-l))):(e.sortIndex=o,z(P,e),D||O||(D=!0,r(B))),e},t.unstable_shouldYield=function(){var e=t.unstable_now();A(e);var n=S(P);return n!==I&&null!==I&&null!==n&&null!==n.callback&&n.startTime<=e&&n.expirationTime<I.expirationTime||o()},t.unstable_wrapCallback=function(e){var t=M;return function(){var n=M;M=t;try{return e.apply(this,arguments)}finally{M=n}}}},function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var i=r(n(343)),a=r(n(344)),o=r(n(345)),l=r(n(346));t.default=function(){switch(l.default()){case"de":return i.default;case"en":return a.default;case"pl":return o.default;default:return a.default}}},function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&r(t,e,n);return i(t,e),t};Object.defineProperty(t,"__esModule",{value:!0});var o=a(n(52)),l=n(67),s={itemRemovedFromList:"Eintrag wurde aus der Liste entfernt",currntlyIs:"Klicken Sie die Box unten um den Blocker zu",currntlyIsOff:"aktivieren",currntlyIsOn:"deaktivieren",title_html_blocker:"Blocker",blocker_msg_7:"Content Blocker kann DOM Elemente der genutzten Website blockieren. Um dieses Feature zu nutzen aktiviere den Content Blocker und klicke auf ein Element das blockiert werden soll. Alle geblockten HTML Elemente können wieder hergestellt werden im Dashboard auf der Seite 'Blockiertes HTML'.",title_reset:"Reset",reset_done:"Die Applikation wurde auf Ihre Werkeinstellungen zurücksetzten.",reset:"Klicken Sie das Icon an um diese Erweiterung auf die Werkeinstellungen zurücksetzten. Alle deine gespeicherten Daten und Einstellungen werden gelöscht. Bitte exporiere vor diesem Prozess deine Daten und Einstellungen um diese später (über das Dashboard) wieder zu importieren.",menu_title_ninja:"Ninja Icon",ninjaIcon:"Das Ninja Icon dieser Erweiterung wurde entnommen von",turnOn:"NinjaProtect anschalten",turnOff:"NinjaProtect ausschalten",links:"Links",deleteAllIframes:"Iframes aus dieser Webseite enfernen",deleteAllCookies:"Cookies verwalten",notLoggedInStatisticMessage:"Sie arbeiten lokal. Bitte loggen Sie sich ein damit die Statistik rückwärts festgehalten werden kann.",today_blocked:"Heutige Statistik der blockierten Elemente",menu_text_statistic:"Statistik aller blockierten Elemente ",menu_text_statistic_small:"Statistik",menu_text_requests:"Anfragen",addon_not_available:"Diese Webseite unterstützt keine Addons",NoDataBlockedItemsToday:"Keine blockierten Elemente von heute verfügbar",NoDataBlockedItems:"Keine blockierten Daten",home_chat:"Mit Freunden chatten - ohne Tracking",home_messages:"Nachrichten senden - ohne Tracking",home_security:"Sicherheit im Internet - Blockierung von Trackern",home_images:"Fotos herunterladen - kein Tracking",menu_text_export:"Export",menu_title_export:"Navigiere zu dem Export",menu_text_import:"Import",menu_title_import:"Navigiere zu dem Import",messages_main:"Nachrichten",menu_text_messages:"Nachrichten",menu_title_messages:"Navigiere zu den Nachrichten",menu_text_notifications:"Benachrichtigungen",menu_title_notifications:"Navigiere zu den Benachrichtigungen",menu_text_favourites:"Freunde",menu_title_favourites:"Navigiere zu den Freunde",menu_text_add_favourites:"Suche",menu_title_add_favourites:"Navigiere zu der Freunden Suche",chat_main:"Chat",menu_text_chat:"Chat",menu_title_chat:"Navigiere zu dem Chat",menu_text_security:"Domäne",menu_text_security_main:"Liste",menu_title_security:"Navigiere zu dem Bereich Domänen Verwaltung",menu_text_security_settings:"Einstellungen",menu_title_security_settings:"Navigiere zu dem Bereich Sicherheits Einstellungen",menu_text_cookies:"Cookies",menu_title_cookies:"Navigiere zu dem Bereich Cookies",menu_text_home:"Startseite",menu_title_home:"Navigiere zur Startseite",menu_text_iframes:"Iframes",menu_title_iframes:"Navigiere zu dem Bereich Iframes",menu_text_security_examples:"Beispiele",menu_title_security_examples:"Navigiere zu dem Bereich Sichereich Beispiele",menu_text_download_images:"Fotos download",menu_title_download_images:"Navigiere zu dem Bereich Fotos herunterladen",menu_text_images:"Fotos",menu_text_images_favourites:"Gespeicherte Fotos",menu_title_images_favourites:"Navigiere zu dem Bereich gespiecherte Fotos",accountPrivacyTerms:"Nutzungsbedingungen",globalNetworkError:"Netzwerk Fehler.",globalProcessError:"Interner Fehler.",globalUserDoesNotExsists:"Benutzerkonto existiert nicht",globalInvalidEmailsAdress:"Ungültiges E-Mail-Adressformat",globalErrormessagePrefix:"Es wurde ein Fehler gefunden, der dazu führt, dass die Anwendung nicht ordnungsgemäß funktioniert.",globalErrormessageCloseButton:"Ignorieren",globalErrormessageLearnMoreButton:"Mehr lesen",globalInvalidCountry:"Fehlerhaftes Land",globalInvalidLanguage:"Fehlerhafte Sprache",globalErrorCodeTitle:"Fehlercode",globalErrorCode_1:'Netzwerkfehler. Wenn ein Netzwerkfehler aufgetreten ist, ist eine "Ajax" -Anforderung fehlgeschlagen. Überprüfen Sie Ihre Netzwerkverbindung oder das, da der Remote-Dienst derzeit nicht verfügbar ist.',globalErrorCode_2:"App-Prozessfehler. Dies bedeutet, dass die Antwort auf Ajax-Anforderungen eine ungültige Struktur für die Anwendung bereitgestellt hat.",globalErrorCode_3:"Antwort anders als erwartet. Der Mittelwert des angeforderten Werts des aktuellen Anwendungskontexts ist ungültig.",code:"Code",listNotSynchronizedUserNotLoggedIn:"Du arbeitest lokal. Logge dich ein um die Liste zu synchronisieren.",notLoggedIn:"Nicht eingeloggt Information",listSynchronized_one:"Synchronisiert",titleDeleteCookie:"Einzelnes Cookie Element löschen",titleCopyCookieValue:"Wert von dem Cookie in den zwischen speichern",cookie_msg_1:"Domäne:",cookie_msg_2:"Name:",cookie_msg_3:"Wert:",cookie_msg_4:"Alle Cookies löschen. Es ist gut möglich das du danach aus der Seite ausgeloggst wirst.",cookiesNoData:"Keine Cookies vorhanden",blacklist:"Schwarze Listen",whitelist:"Weiße Listen",blacklistedElementsWords:"Blacklist Wörter",blacklistedElementsDomians:"Blacklist Domänen",blacklistedElementsUrlsIncludes:"Blacklist Url Adressen",blacklistedElementsTrackers:"Blacklist Trackers",blacklistedElementsCookies:"Blacklist Cookies",blacklistedElementsClass:"Blockierung von HTML für class",blacklistedElementsId:"Blockierung von HTML für id",blacklistedElementsHref:"Blockierung von HTML für href",menuBlacklistedElementsClass:"Blockierung für class",menuBlacklistedElementsId:"Blockierung für id",menuBlacklistedElementsHref:"Blockierung für href",blacklistedElementsIframes:"Blacklist Iframes",blacklistedElementsIframesSources:"Blacklist Iframe Quellen",blacklistedElementsIframesNames:"Blacklist Iframe Namen",copiedToClipBoard:"In die Zwischenablage kopiert",action_title_copyToClipboard:"Liste in Zwischenablage kopieren",action_title_exportToFile:"Liste in JSON-Feld exportieren",action_title_deleteList:"Liste global leeren",action_title_copyToClipboard_single:"Wert in Zwischenablage kopieren",action_title_delete_single:"Eintrag löschen",forThisFunctionLogin:"Um diese Aktion auszuführen, melden Sie sich bitte an",emptyListDone:"Liste wurde geleert",restoreDefaultValue:"Stellen Sie die Liste auf den Standardwert zurück",whitelistedElementsDomains:"Whitelist Domänen",blockedElements:"Content Blocker",securityIsOn:"Diese Erweiterung ist AN oder AUS.",scanTextOnWebsite:"Wenn Sie diese Option ausschalten, werden alle Wörte auf den Websiten NICHT gescannt. Schwarze Liste: Wörte/ Attribute/ Attribute Wörter - werden ignoriert.",allowOnlyHttpsProtocol:"Erlaube nur den Besuch von HTTPS Websites - also der Zugriff auf alle HTTP Webseiten wird blockiert.",allowOnlyHttpProtocol:"Erlaube nur den Besuch von HTTP Websites - also der Zugriff auf alle HTTPS Webseiten wird blockiert.",makeSearchInSourceCode:"Scannen Sie Wörter im Quellcode eines bestimmten HTML-Elements (innerHTML) oder nur im Text von HTML-Elementen (innerText).",mutationCheck:"Überprüfen der HTML-Elemente von Websites nach dem Laden der Seite (DOM Mutationen von HTML Elementen in der Regel durchgeführt von Javascript Bibliotheken).",ignoreTagStyle:'Den Kod innerhalb von den "STYLE" Tags (<style> Tag) beim Scan Prozess ignorieren anhand der Schwarzen Liste Wörter.',ignoreTagScript:'Den Kod innerhalb von den "Script" Tags (<script> Tag) beim Scan Prozess ignorieren anhand der Schwarzen Liste Wörter.',ignoreTagLink:'Den Kod innerhalb von den "Link" Tags (<link> Tag) beim Scan Prozess ignorieren anhand der Schwarzen Liste Wörter.',ignoreTagMeta:'Den Kod innerhalb von den "Meta" Tags (<meta> Tag) beim Scan Prozess ignorieren anhand der Schwarzen Liste Wörter.',replacer:"Ersetze jedes einzelne Gefahrenwortzeichen durch diesen Eintrag. Die Gefahrenwörter sind Wörte aus Ihrer eigen definierten Schwarzen Liste Wörter.",maximumOfDangerWords:"Nach Erreichen dieses Wertes - anhand der schwarzen Listen: Blacklist Wörte, Blockierung von HTML für class, Blockierung von HTML für href oder Blockierung von HTML für id, dann wird die Website gesperrt. Der Minimalwert ist 1, der Maximalwert ist 300.",limitlessScan:"Ignorieren Sie die maximale Anzahl von blockierten Gefahren anhand den Schwarzen Listen: Blacklist Wörte, Blockierung von HTML für class, Blockierung von HTML für href oder Blockierung von HTML für id. Die Website wird nicht blockiert (ignorieren Sie den obigen Wert). Wenn Sie diese Funktion aktivieren, kann Protection die Leistung Ihres Browsers beeinträchtigen.",deleteCookies:"Lösche alle Cookies anhand der Schwarzen Liste Cookies auf jeder Webseite ? Cookie werden gelöscht beim Öffnen oder Schließen eines Tabs und wärend des Browsings alle 5 Sekunden.",popupMainTitle:"Schwarze Ninja Statistik",popup_blocked_trackers:"Blockierte Tracker",popup_blocked_cookies:"Blockierte Cookies",popup_blocked_words:"Blockierte Wörter",popup_blocked_requests:"Blockierte Anfragen",popup_blocked_iframes:"Blockierte Iframes",popup_blocked_dom:"Blockiertes HTML",popup_blocked_websites:"Blockierte Webseiten",popup_title_dashboard:"Dashboard",popup_title_global_chart:"Globale Statistik",titleDeleteIframe:"Löschen Sie einen einzelnen Iframe",iframe_msg_1:"Quelle:",iframe_msg_2:"Id:",iframe_msg_3:"className:",iframesNoData:"Keine Iframes vorhanden",popup_add_blacklistedElementsTrackers:"Fügen Sie den Blacklist-Trackern die aktuelle Domain hinzu. Alle Versuche, auf diese Domain zuzugreifen, werden blockiert.",popup_remove_blacklistedElementsTrackers:"Entfernen Sie die aktuelle Domain aus der Blacklist Trackern.",popup_add_blacklistedElementsDomians:"Fügen Sie der Blacklist-Domain die aktuelle Domain hinzu. Alle Versuche, von dieser Domain aus auf diese Domain oder Dienste zuzugreifen, werden blockiert.",popup_remove_blacklistedElementsDomians:"Entfernen Sie die aktuelle Domain aus der Blacklist Domänen.",popup_add_blacklistedElementsCookies:"Fügen Sie den Blacklist-Cookies die aktuelle Domain hinzu. Alle Cookies werden beim Laden der Website entfernt, dann alle 5 Sekunden und wenn die Website verlassen wird.",popup_remove_blacklistedElementsCookies:"Entfernen Sie die aktuelle Domain aus der Blacklist Cookies.",popup_add_blacklistedElementsIframes:"Aktuelle Domain zur Blacklist hinzufügen iframes.",popup_remove_blacklistedElementsIframes:"Entfernen Sie die aktuelle Domain aus der Blacklist Iframes. Alle Iframes werden gelöscht sobald diese Website versucht externen Content zu laden.",popup_add_blacklistedElementsIframesSources:"Aktuelle Url zur Blacklist Iframes Sources hinzufügen.",popup_remove_blacklistedElementsIframesSources:"Entfernen Sie die aktuelle Url aus der Blacklist Iframes Sources. Alle Iframes werden gelöscht sobald diese Website versucht externen Content zu laden.",popup_add_whitelistedElementsDomains:"Fügen Sie der Whitelist-Domain die aktuelle Domain hinzu und lassen Sie alles zu (keine Anfrage wird blockiert, keine Blacklist-Wortprüfung, keine Cookie-Löschung und keine automatische Iframe-Löschung).",popup_remove_whitelistedElementsDomains:"Entfernen Sie die aktuelle Domain aus der Whitelist Domänen.",popup_add_blacklistedElementsTrackers_popup:"Fügen Sie den aktuellen Eintrag zu der List  Blacklist Trackern hinzu. Alle Versuche, auf diese Domain zuzugreifen, werden blockiert.",popup_remove_blacklistedElementsTrackers_popup:"Entfernen Sie den Eintrag aus der Blacklist Tracker.",popup_add_blacklistedElementsDomians_popup:"Fügen Sie den aktuellen Eintrag zu der List  Blacklist Domains hinzu. Alle Versuche, von dieser Domain aus auf diese Domain oder Dienste zuzugreifen, werden blockiert.",popup_remove_blacklistedElementsDomians_popup:"Entfernen Sie den Eintrag aus der Blacklist Domänen.",popup_add_blacklistedElementsCookies_popup:"Fügen Sie den aktuellen Eintrag zu der List  Blacklist Cookies hinzu. Alle Cookies werden beim Laden der Website entfernt, dann alle 5 Sekunden und wenn die Website verlassen wird.",popup_remove_blacklistedElementsCookies_popup:"Entfernen Sie den Eintrag aus der Blacklist Cookie.",popup_add_blacklistedElementsIframes_popup:"Fügen Sie den aktuellen Eintrag zu der List  Blacklist Iframes hinzu. Alle Iframes werden gelöscht sobald diese Website versucht externen Content zu laden.",popup_remove_blacklistedElementsIframes_popup:"Entfernen Sie den Eintrag aus der Blacklist Iframes.",popup_add_blacklistedElementsIframesSources_popup:"Fügen Sie den aktuellen Eintrag zu der List  Blacklist Iframes Sources hinzu.",popup_remove_blacklistedElementsIframesSources_popup:"Entfernen Sie den Eintrag aus der Blacklist Iframes Sources. Alle Iframes werden gelöscht sobald diese Website versucht externen Content zu laden.",popup_add_whitelistedElementsDomains_popup:"Fügen Sie der Whitelist-Domain die aktuelle Domain hinzu und lassen Sie alles zu (keine Anfrage wird blockiert, keine Blacklist-Wortprüfung, keine Cookie-Löschung und keine automatische Iframe-Löschung).",popup_remove_whitelistedElementsDomains_popup:"Entfernen Sie die aktuelle Domain aus der Whitelist Domänen.",popup_reload_target:"Reload website",extendsblacklist:o.createElement("span",null,"Wärend des Laden einer Webseite, wird die Domäne über ein Blacklist Filter durchgefürfelt. Wenn die Domäne auf der Schwarzen Liste steht, wird diese blockiert. Um die maximale Sicherheit zu gewärleisten kann eine Erweiterte Blacklist hinzugefügt werden it weiteren 20822 Einträgen. Der Inhalt der Liste steht hier:",o.createElement("a",{target:"_blank",href:l.addonPrefix()+"/extendedblacklist.txt"},"extendedblacklist.txt")),extendspornlist:o.createElement("span",null,"Wärend des Laden einer Webseite, wird die Domäne über ein Blacklist Filter durchgefürfelt. Wenn die Domäne auf der Schwarzen Liste steht, wird diese blockiert. Um die maximale Sicherheit zu gewärleisten kann eine Erweiterte Pornlist hinzugefügt werden it weiteren 6668 Einträgen. Der Inhalt der Liste steht hier:",o.createElement("a",{target:"_blank",href:l.addonPrefix()+"/extendedpornlist.txt"},"extendedpornlist.txt")),blacklistedElementsCookies_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"Sie können hier einen Cookie-Namen oder einen Domain-Namen hinzufügen, der auf jeder Website gelöscht werden soll. Standardmäßig enthält diese Liste 640 Einträge mit vordefinierten Cookie-Namen oder Domain-Namen dass die Verwendung von Cookies für Tracking-Zwecke und dort automatisch durch den Sicherheitsinhalt gelöscht werden."),o.createElement("ul",null,o.createElement("li",null,"Beispiel Eintrag in der Liste: ",o.createElement("span",{className:"colored-example-element"},"GPS"),". Wenn Sie danach die Webseite besuchen: https://www.youtube.com, dann wird der Cookie mit dem Name ",o.createElement("span",{className:"colored-example-element"},"GPS")," gelöscht"),o.createElement("li",null,"Beispiel Eintrag in der Liste: ",o.createElement("span",{className:"colored-example-element"},"www.7search.com"),". Wenn Sie danach die Webseite besuchen: https://www.7search.com, dann werden ",o.createElement("span",{className:"colored-example-element"},"alle Cookies"),"  von der Seite gelöscht.")))),blacklistedElementsDomians_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"Dies ist eine auf Domainnamen basierende Blacklist. Alle Domains aus dieser Liste werden beim Besuch ihrer Websites blockiert."),o.createElement("ul",null,o.createElement("li",null,"Beispiel Eintrag in der Liste: ",o.createElement("span",{className:"colored-example-element"},"ytimg.com")," wenn Sie dann die Webseite besuchen ",o.createElement("span",{className:"colored-example-element"},"https://ytimg.com")," wird der Zugruff verweigert."),o.createElement("li",null,"Beispiel Eintrag in der Liste: ",o.createElement("span",{className:"colored-example-element"},"github.com")," wenn Sie dann die Webseite besuchen ",o.createElement("span",{className:"colored-example-element"},"https://github.com")," wird der Zugruff verweigert.")))),blacklistedElementsUrlsIncludes_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"Dies ist ein Domainname und Teil der URL-basierten Blacklist. Alle Domains aus dieser Liste und alle übereinstimmenden Einträge aus der Website-URL werden blockiert, wenn eine Übereinstimmung gefunden wurde."),o.createElement("ul",null,o.createElement("li",null,"Beispiel Eintrag in der Liste: ",o.createElement("span",{className:"colored-example-element"},"package"),". Wenn Sie danach die Webseite besuchen: https://www.npmjs.com/",o.createElement("span",{className:"colored-example-element"},"package"),"/gulp-babel  wird der Zugruff verweigert."),o.createElement("li",null,"Beispiel Eintrag in der Liste: ",o.createElement("span",{className:"colored-example-element"},"test"),". Wenn Sie danach die Webseite besuchen: https://www.google.com/search?q=",o.createElement("span",{className:"colored-example-element"},"test"),",  wird der Zugruff verweigert."),o.createElement("li",null,"Beispiel Eintrag in der Liste: ",o.createElement("span",{className:"colored-example-element"},"q"),". Wenn Sie danach die Webseite besuchen: https://www.google.com/search?",o.createElement("span",{className:"colored-example-element"},"q"),"=test,  wird der Zugruff verweigert."),o.createElement("li",null,"Beispiel Eintrag in der Liste: ",o.createElement("span",{className:"colored-example-element"},"hub.com"),". Wenn Sie danach die Webseite besuchen: https://www.git",o.createElement("span",{className:"colored-example-element"},"hub.com"),",  wird der Zugruff verweigert.")))),blacklistedElementsIframes_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"Wenn Sie eine Website besuchen und sich der Domainname der Website in dieser Liste befindet, werden alle Iframes entfernt."),o.createElement("ul",null,o.createElement("li",null,"Beispiel Eintrag in der Liste: ",o.createElement("span",{className:"colored-example-element"},"gazeta.pl"),". Wenn Sie danach die Webseite besuchen: https://www.gazeta.pl werden alle Iframes von der Seite https://",o.createElement("span",{className:"colored-example-element"},"gazeta.pl")," entfernt")))),blacklistedElementsIframesSources_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},'Wenn Sie eine Website besuchen und der Attribut "src" also Source (Quelle des Servers) eines Iframes einen Eintrag aus dieser Liste beinhaltet, wird das Iframe aus der Website entfernt.'),o.createElement("ul",null,o.createElement("li",null,"Beispiel Eintrag in der Liste: ",o.createElement("span",{className:"colored-example-element"},"https://dmp.theadex.com/r/"),". Wenn Sie danach die Webseite besuchen: https://www.gazeta.pl und irgendein Iframe Element das Attribut src (source), den Source beinhaltet ",o.createElement("span",{className:"colored-example-element"},"https://dmp.theadex.com/r/"),"230/1121/?c=4225222955758066709, wird das Iframe aus der Seite komplett entfernt")))),blacklistedElementsIframesNames_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},'Wenn Sie eine Website besuchen und der Attribut "name" eines Iframes einen Eintrag aus dieser Liste beinhaltet, wird das Iframe aus der Website entfernt.'),o.createElement("ul",null,o.createElement("li",null,"Beispiel Eintrag in der Liste: ",o.createElement("span",{className:"colored-example-element"},"googleads"),". Wenn Sie danach die Webseite besuchen: https://www.gazeta.pl und irgendein Iframe Element das Attribut name, die Zeichenkette beinhaltet ",o.createElement("span",{className:"colored-example-element"},"googleads"),"_sync, wird das Iframe aus der Seite komplett entfernt")))),blacklistedElementsTrackers_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"Wenn Sie eine Website besuchen und die Website andere implementiert hat (Dritte) Dienste oder Tracking-Dienste und der Domainname stimmen mit einem Domainnamen aus dieser Liste überein oder der gesamte URL-Pfad stimmt dann mit einem Eintrag aus dieser Liste überein Die Anfrage wird blockiert."),o.createElement("ul",null,o.createElement("li",null,"Beispiel Eintrag in der Liste: ",o.createElement("span",{className:"colored-example-element"},"cdn.mouseflow.com"),". Egal welche Webseite Sie besuchen, falls eine Webseite versuche einen Service von https://",o.createElement("span",{className:"colored-example-element"},"cdn.mouseflow.com"),"/lib/track.js abzurufen, wird diese Abfrage blockiert"),o.createElement("li",null,"Beispiel Eintrag in der Liste: ",o.createElement("span",{className:"colored-example-element"},"rsrc.php/v3/y4/r/-PAXP-deijE.gif"),". Egal welche Webseite Sie besuchen, falls eine Webseite versuche einen Service von: https://static.xx.fbcdn.net/",o.createElement("span",{className:"colored-example-element"},"rsrc.php/v3/y4/r/-PAXP-deijE.gif"),"  abzurufen, wird diese Abfrage blockiert")))),blacklistedElementsWords_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},'Der Sicherheitsinhalt findet jedes Wort aus dieser schwarzen Liste und jedes Wort wird durch den im Abschnitt "Einstellungen" definierten "Ersetzer" ersetzt. Wenn der Sicherheitsinhalt ein Gefahrenwort aus der "Blacklist: Words" in einem HTML-Tag gefunden hat, Anschließend werden die HTML-Tag-Attribute gescannt. Wenn ein Attributname aus dieser Liste nicht mit Einträgen aus der "Blacklist: Attribute" übereinstimmt, dann Der Sicherheitsinhalt findet jedes Wort innerhalb des Attributwerts aus dieser Liste und ersetzt jedes Zeichen durch das Ersetzerzeichen definiert im Abschnitt "Einstellungen".'),o.createElement("ul",null,o.createElement("li",null,'Zum Beispiel, wenn das Wort "guns" in dieser schwarzen Liste vorhanden ist und Sie eine Website besuchen, dann wird das Wort "guns" ersetzt werden.',o.createElement("br",null),'Beispiel Eingabe: "we have ',o.createElement("span",{className:"colored-example-element"},"guns"),' in ...".',o.createElement("br",null),'Beispielausgabe: "we have ',o.createElement("span",{className:"colored-example-element"},"####"),' in ..."'),o.createElement("li",null,'Zum Beispiel, wenn das Wort "seven" in dieser schwarzen Liste vorhanden ist und Sie eine Website besuchen, dann wird das Wort "seven" ersetzt werden.',o.createElement("br",null),'Beispiel Eingabe: "',o.createElement("span",{className:"colored-example-element"},"seven"),' years old ...".',o.createElement("br",null),'Beispielausgabe: "',o.createElement("span",{className:"colored-example-element"},"#####"),' years old ...".')))),blacklistedElementsClass_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"Blockieren von DOM-Elementen (Tags) basierend auf dem Attribut: class."),o.createElement("ul",null,o.createElement("li",null,"Beispiel Eintrag: \"font-bold\". Wenn du eine Webseite besuchtst und irgendein DOM Element das Attribut class mit dem Wert 'font-bold' befüllt ist (z.B.: ",'<span class="font-bold"> Text </span>',") dann wird das Element aus der Webseite enfernt.")))),blacklistedElementsHref_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},'Blockieren von "A" -Tag-Elementen basierend auf ihrem Attribut: href.'),o.createElement("ul",null,o.createElement("li",null,'Beispiel Eintrag: "redirect?". Wenn du ein Webseite besuchtst und das DOM Element ',"<a>"," das Attribut href mit dem Wert 'redirect?' befüllt hat (z.B.: ",'<a href="https://xv345bhFD.com/redirect?client=http://example.com">link</a>',"), dann wird das Element aus der Webseite enfernt.")))),blacklistedElementsId_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"Blockieren von DOM-Elementen (Tags) basierend auf dem Attribut: zd."),o.createElement("ul",null,o.createElement("li",null,"Beispiel Eintrag: \"extern-logo\". Wenn du eine Webseite besuchtst und irgendein DOM Element das Attribut id mit dem Wert 'extern-logo' befüllt ist (z.B.: ",'<img id="extern-logo"/>',"), dann wird das Element aus der Webseite enfernt.")))),whitelistedElementsDomains_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"Machen Sie nichts für ausgewählte Domainnamen."),o.createElement("ul",null,o.createElement("li",null,"Beispiel Eintrag in der Liste: ",o.createElement("span",{className:"colored-example-element"},"google.com")," wenn Sie dann die Webseite besuchen https://www.",o.createElement("span",{className:"colored-example-element"},"google.com")," findet keine Überprüfung jeglicher Art statt"),o.createElement("li",null,"Beispiel Eintrag in der Liste: ",o.createElement("span",{className:"colored-example-element"},"npmjs.com")," wenn Sie dann die Webseite besuchen https://www.",o.createElement("span",{className:"colored-example-element"},"npmjs.com"),"/package/gulp-babel findet keine Überprüfung jeglicher Art statt")))),example:"Beispiele",imagesPopupTitle:"Fotos wurden gefunden",imagesNoData:"Keine validen Fotos vorhanden",imagesNoDataFavourites:"Keine gespeicherten Fotos vorhanden",imagesLoadingTabs:"Aktive tabs werden geladen...",current_tabs_title:"Offene Tabs",filter:"Filtern",filter_all:"Alle",itemsPerSite:"Je Seite",itemsPerSiteSuffix:"Fotos",page:"Seite",of:"von",images:"Fotos",current_favourites_images:"Derzeit gespeicherte Fotos",open_in_new_tab:"Im neuen Tab öffnen",download:"Herunterladen",downloadSmall:"download",delete_all:"Alle löschen",notLoggedInImagesFavouritesAdd:"Nur angemeldete Benutzer können Bilder zur Favoritenliste hinzufügen",notLoggedInImagesFavouritesManage:"Nur angemeldete Benutzer können die Favoritenliste verwalten",tabsNoData:"Keine validen Tabs vorhanden",imagesLoadingData:"Fotos werden geladen...",infoItemAdded:"Eintrag wurde in die Liste hinzugefügt",infoItemRemoved:"Eintrag wurde aus der Liste entfernt",infoArrayIs0:"Liste ist leer, daher kann kein Element entfernt werden",infoIncorrectValue:"Wert ist nicht valide",infoItemInList:"Eintrag bereits in der Liste vorhanden",country:"Land",countriesNotFoundText:"Sorry, dieses Land habe ich nicht gefunden",dropText:"Hier loslassen",error:"Fehler",searchPlaceholder:"Suchen...",search:"Suche",list:"Liste",addPlaceholder:"Wert...",addNewEntryTitle:"Neuen Eintrag hinzufügen",no_data_list:"Keine Einträge vorhanden",no_data_list_search:"Keine Suchergebnisse vorhanden",loading:"Laden...",home_security_3:"Blockierung von Anfragen",home_security_2:"Blockierung von Cookies",home_security_1:"Blockierung von Trackern",home_security_4:"Blockierung von Pornographischen Seiten",home_security_5:"Blockierung von Wörtern",home_security_6:"Blockierung von Webseiten Content",upload:"Drag & Drop die NinjaProtects json Datei hier...",export:"Export",exportAll:"der globalen Listen und Einstellungen",dangerCount:"Ich beschütze dich!",dangerCountPrefix:"Die maximale Anzahl der Gefahren Elemente wurde erreicht und beträgt aktuell",dangerUrlPrefix:"Die URL oder ein Teil der URL ist gefährlich und befindet sich in einer der schwarzen Listen",domain:"Domänen Name ohne www. Beispiel: react-divcreator.cba.pl",tag:"Tag Name. Beispiel: div",languages:"Sprachen"};t.default=s},function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&r(t,e,n);return i(t,e),t};Object.defineProperty(t,"__esModule",{value:!0});var o=a(n(52)),l=n(67),s={itemRemovedFromList:"Entry has been removed from current list",currntlyIs:"Klick the box below to",currntlyIsOff:"activate",currntlyIsOn:"deactivate",title_html_blocker:"Blocker",blocker_msg_7:"Content blocker block's HTML content that's belong to the current visited website.  External content cannot be blocked, like: iframes. To block an element, activate the blocker then click on an HTML element on the website. All blocked elements can be deleted on the dashboard in the 'Blocked elements' section.",title_reset:"Factory reset",reset_done:"Reset of this application are done and factory configuration are restored.",reset:"Klick this text to make an factory reset of this extension. All your custom lists entries, configuration and the global statistic will be deleted, so please make an export of your lists, settings and statistic. After this process make an import from the dashboard page.",menu_title_ninja:"Ninja Icon",ninjaIcon:"Ninja Icon of this extensions are token from",turnOn:"Turn NinjaProtect on",turnOff:"Turn NinjaProtect off",links:"Links",deleteAllIframes:"Delete iframes from current website",deleteAllCookies:"Delete Cookies from current website",notLoggedInStatisticMessage:"You are working locally. Login to persist the statistic otherwise the statistic cannot be done backwards.",today_blocked:"Current day statistic of blocked elements",menu_text_statistic:"Statistic of blocked items",menu_text_statistic_small:"Statistic",menu_text_requests:"Requests",addon_not_available:"This website are not supporting extensions",NoDataBlockedItems:"No blocked data",NoDataBlockedItemsToday:"No blocked data from today available",home_chat:"Chat with friends - without tracking",home_messages:"Send messages - without tracking",home_security:"Keep yourself secure in the internet - block trackers",home_images:"Images download - without tracking",menu_text_export:"Export",menu_title_export:"Navigate to the export area",menu_text_import:"Import",menu_title_import:"Navigate to the import area",messages_main:"Messages",menu_text_messages:"Messages",menu_title_messages:"Navigate to the messages area",menu_text_notifications:"Notifications",menu_title_notifications:"Navigate to the notifications area",menu_text_favourites:"Friends",menu_title_favourites:"Navigate to the friends area",menu_text_add_favourites:"Search",menu_title_add_favourites:"Navigate to the friends search area",chat_main:"Chat",menu_text_chat:"Chat",menu_title_chat:"Navigate to the chat area",menu_text_security:"Domain",menu_text_security_main:"List",menu_title_security:"Navigate to the domain management area",menu_text_security_settings:"Settings",menu_title_security_settings:"Navigate to the security settings area",menu_text_cookies:"Cookies",menu_title_cookies:"Navigate to the cookies area",menu_text_home:"Home",menu_title_home:"Navigate to the homepage area",menu_text_iframes:"Iframes",menu_title_iframes:"Navigate to the iframes area",menu_text_security_examples:"Examples",menu_title_security_examples:"Navigate to the security examples area",menu_text_download_images:"Download images",menu_title_download_images:"Navigate to the images download area",menu_text_images:"Images",menu_text_images_favourites:"Saved images",menu_title_images_favourites:"Navigate to the saved images area",accountPrivacyTerms:"Privacy policy",globalNetworkError:"Network error.",globalProcessError:"Process error.",globalUserDoesNotExsists:"User Account does not exsists",globalInvalidEmailsAdress:"Invalid email address format",globalErrormessagePrefix:"An error occured which causes the application to not work properly.",globalErrormessageCloseButton:"Dismiss",globalErrormessageLearnMoreButton:"Learn more",globalInvalidCountry:"Invalid country",globalInvalidLanguage:"Invalid language",globalErrorCodeTitle:"Error code",globalErrorCode_1:'Network error. When a network error occured this mean an "ajax" request failed. Check your network connection or that because the remote service currently not available.',globalErrorCode_2:"App process error. It means that the ajax requests response provided an invalid structure for the application.",globalErrorCode_3:"Response other then expected. Its mean the requested value of the current applications context are invalid.",code:"Code",listNotSynchronizedUserNotLoggedIn:"You are working locally. Login to synchronize your list.",notLoggedIn:"Not logged in information",listSynchronized_one:"Synchronized",titleDeleteCookie:"Delete single cookie",cookie_msg_1:"Domain:",cookie_msg_2:"Name:",cookie_msg_3:"Value:",cookie_msg_4:"Delete all cookies. It is possible that you will be logged out from the current website.",cookiesNoData:"No cookies available",avatarErrorFileType:"Unrecognized file type",avatarErrorFileSize:"File size exceeds limit of 5MB for avatar",avatarErrorFileTypeSupport:"Only jpg, png and gif file types are allowed",blacklist:"Blacklists",whitelist:"Whitelists",blacklistedElementsWords:"Blacklist Words",blacklistedElementsDomians:"Blacklist Domains",blacklistedElementsUrlsIncludes:"Blacklist Urls includes",blacklistedElementsTrackers:"Blacklist Trackers",blacklistedElementsCookies:"Blacklist Cookies",blacklistedElementsClass:"Block HTML by class",blacklistedElementsId:"Block HTML by id",blacklistedElementsHref:"Block HTML by href",menuBlacklistedElementsClass:"Block by class",menuBlacklistedElementsId:"Block by id",menuBlacklistedElementsHref:"Block by href",blacklistedElementsIframes:"Blacklist Iframes",blacklistedElementsIframesSources:"Blacklist Iframe Sources",blacklistedElementsIframesNames:"Blacklist Iframe Names",copiedToClipBoard:"Copied to clipboard",action_title_copyToClipboard:"Copy list to clipboard",action_title_exportToFile:"Export list to JSON field",action_title_deleteList:"Empty list globally",action_title_copyToClipboard_single:"Copy value to clipboard",action_title_delete_single:"Remove entry",forThisFunctionLogin:"To perform this action, please login",emptyListDone:"List has been emptied",restoreDefaultValue:"Restore list to its default value",whitelistedElementsDomains:"Whitelist Domains",blockedElements:"Content Blocker",securityIsOn:"This extension is ON or OFF.",scanTextOnWebsite:"If you turn this option OFF, then all words are NOT scanned. The Blacklist: Words, Attributes, Attributes Words are ignored.",makeSearchInSourceCode:"Scan words in the source code of a given HTML element (innerHTML) or only in the text of HTML elements (innerText).",mutationCheck:"Check websites HTML elements after the page was loaded (DOM Mutations listener - grabbing all elements changed by Javascript libraries).",ignoreTagStyle:'Ignore the code inside the "Style" tags (<style> tag) while scanning process based on blacklist words.',ignoreTagScript:'Ignore the code inside the "SCRIPT" tags (<script> tag) while scanning process based on blacklist words.',ignoreTagLink:'Ignore the code inside the "Link" tags (<link> tag) while scanning process based on blacklist words.',ignoreTagMeta:'Ignore the code inside the "Meta" tags (<meta> tag) while scanning process based on blacklist words.',replacer:'Replace each single danger words character with this entry. The danger words comes from your customized "Blacklist Words".',maximumOfDangerWords:"After this value is reached - count based on blacklists: words, Block HTML by class, Block HTML by id and Block HTML by href (each blocked element causes the count to rise +1), the website will be blocked. Minimum value is 1, maximum value is 300.",limitlessScan:'Ignore the maximum count of all blocked elements. Blocked elements are counted based on this blacklists: "Blocked Content", "Blacklist Words", "Block by class", "Block by id" and "Block by href". The website will not be blocked (ignore the value above). If you activate this function, the security content can slow down the performance of your browser.',deleteCookies:"Autodelete all cookies based on the blacklist Cookies on each website ? Cookies are delete if you open or close an tab an while browsing each 5 seconds.",popupMainTitle:"Black ninja statistic",popup_blocked_trackers:"Blocked trackers",popup_blocked_cookies:"Blocked cookies",popup_blocked_words:"Blocked words",popup_blocked_requests:"Blocked requests",popup_blocked_iframes:"Blocked iframes",popup_blocked_dom:"Blocked HTML",popup_blocked_websites:"Blocked websites",popup_title_dashboard:"Dashboard",popup_title_global_chart:"Global statistic",titleDeleteIframe:"Delete single iframe",iframe_msg_1:"Source:",iframe_msg_2:"Id:",iframe_msg_3:"className:",iframesNoData:"No iframes available",popup_add_blacklistedElementsTrackers:"Add current domain to the blacklist trackers. All tries to access this domain will be blocked.",popup_remove_blacklistedElementsTrackers:"Remove current domain from the blacklist trackers.",popup_add_blacklistedElementsDomians:"Add current domain to the blacklist domains. All tries to access this domain or services from this domain will be blocked.",popup_remove_blacklistedElementsDomians:"Remove current domain from the blacklist domains.",popup_add_blacklistedElementsCookies:"Add current domain to the blacklist cookies. All cookies will be removed, if the website has been loaded, then for each 5 seconds and finally if you are leaving the current website all cookies deleted.",popup_remove_blacklistedElementsCookies:"Remove current domain from the blacklist cookies.",popup_add_blacklistedElementsIframes:"Add current domain to blacklist iframes and remove all iframes if the website tries to attach/ include an external iframe.",popup_remove_blacklistedElementsIframes:"Remove current domain from the blacklist iframes.",popup_add_blacklistedElementsIframesSources:"Add current listed url to blacklist Iframes Sources and remove all iframes if the website tries to attach/ include an external iframe.",popup_remove_blacklistedElementsIframesSources:"Remove current listed url from the blacklist Iframes Sources.",popup_add_whitelistedElementsDomains:"Add current domain to the whitelist domains and allow everything (no request are blocked, no blacklist words check, no cookie deletion and no auto iframe deletion).",popup_remove_whitelistedElementsDomains:"Remove current domain from the whitelist domains.",popup_add_blacklistedElementsTrackers_popup:"Add current entry to the blacklist trackers. All tries to access this domain will be blocked.",popup_remove_blacklistedElementsTrackers_popup:"Remove current entry from the blacklist trackers.",popup_add_blacklistedElementsDomians_popup:"Add current entry to the blacklist domains. All tries to access this domain or services from this domain will be blocked.",popup_remove_blacklistedElementsDomians_popup:"Remove current entry from the blacklist domains.",popup_add_blacklistedElementsCookies_popup:"Add current entry to the blacklist cookies. All cookies will be removed, if the website has been loaded, then for each 5 seconds and finally if you are leaving the current website all cookies deleted.",popup_remove_blacklistedElementsCookies_popup:"Remove current entry from the blacklist cookies.",popup_add_blacklistedElementsIframes_popup:"Add current entry to blacklist iframes and remove all iframes if the website tries to attach/ include an external iframe..",popup_remove_blacklistedElementsIframes_popup:"Remove current entry from the blacklist iframes.",popup_add_blacklistedElementsIframesSources_popup:"Add current entry to blacklist Iframes Sources  and remove all iframes if the website tries to attach/ include an external iframe..",popup_remove_blacklistedElementsIframesSources_popup:"Remove current entry from the blacklist Iframes Sources.",popup_add_whitelistedElementsDomains_popup:"Add current entry to the whitelist domains and allow everything (no request are blocked, no blacklist words check, no cookie deletion and no auto iframe deletion).",popup_remove_whitelistedElementsDomains_popup:"Remove current entry from the whitelist domains.",popup_reload_target:"Reload website",extendsblacklist:o.createElement("span",null,"While loading a website, the domain is scanned through a blacklist filter. If the domain is blacklisted, it will be blocked. To ensure maximum security, an extended blacklist can be added with another 20,822 entries. The content of the list is here:",o.createElement("a",{target:"_blank",href:l.addonPrefix()+"/extendedblacklist.txt"},"extendedblacklist.txt")),extendspornlist:o.createElement("span",null,"While loading a website, the domain is scanned through a blacklist filter. If the domain is blacklisted, it will be blocked. To ensure maximum security, an extended pornlist can be added with another 6,668 entries. The content of the list is here:",o.createElement("a",{target:"_blank",href:l.addonPrefix()+"/extendedpornlist.txt"},"extendedpornlist.txt")),blacklistedElementsCookies_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"You can add here an cookie name or an domain name which should be deleted on each website. Default this list has 640 entries with predefined cookie names or domain names that using cookies for tracking purposes and there are automatically deleted by the security content."),o.createElement("ul",null,o.createElement("li",null,"Example of list entry: ",o.createElement("span",{className:"colored-example-element"},"GPS"),". If you visit the website: https://www.youtube.com, then the cookie with the name ",o.createElement("span",{className:"colored-example-element"},"GPS")," are deleted"),o.createElement("li",null,"Example of list entry: ",o.createElement("span",{className:"colored-example-element"},"www.7search.com"),". If you visit the website: https://www.7search.com, then ",o.createElement("span",{className:"colored-example-element"},"all cookies")," from this website are deleted")))),blacklistedElementsDomians_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"This is an domain name based blacklist. All domains from this list are blocked while visiting there websites."),o.createElement("ul",null,o.createElement("li",null,"Example of list entry: ",o.createElement("span",{className:"colored-example-element"},"ytimg.com")," and if yout try to access the website ",o.createElement("span",{className:"colored-example-element"},"https://ytimg.com")," then the website are blocked"),o.createElement("li",null,"Example of list entry: ",o.createElement("span",{className:"colored-example-element"},"github.com")," and if yout try to access the website ",o.createElement("span",{className:"colored-example-element"},"https://github.com")," then the website are blocked")))),blacklistedElementsUrlsIncludes_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"This is an domain name and part of url based blacklist. All domains from this list and all matched entries from the websites url are blocked if an match was found."),o.createElement("ul",null,o.createElement("li",null,"Example of list entry: ",o.createElement("span",{className:"colored-example-element"},"package"),". If you visit the website: https://www.npmjs.com/",o.createElement("span",{className:"colored-example-element"},"package"),"/gulp-babel then the website are blocked"),o.createElement("li",null,"Example of list entry: ",o.createElement("span",{className:"colored-example-element"},"test"),". If you visit the website: https://www.google.com/search?q=",o.createElement("span",{className:"colored-example-element"},"test"),", then the website are blocked"),o.createElement("li",null,"Example of list entry: ",o.createElement("span",{className:"colored-example-element"},"q"),". If you visit the website: https://www.google.com/search?",o.createElement("span",{className:"colored-example-element"},"q"),"=test, then the website are blocked"),o.createElement("li",null,"Example of list entry: ",o.createElement("span",{className:"colored-example-element"},"hub.com"),". If you visit the website: https://www.git",o.createElement("span",{className:"colored-example-element"},"hub.com"),", then the website are blocked")))),blacklistedElementsIframes_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"If you visit an website an the websites domain name are inside this list then all iframes are removed."),o.createElement("ul",null,o.createElement("li",null,"Example of list entry: ",o.createElement("span",{className:"colored-example-element"},"gazeta.pl")," - if you visit the website: https://www.gazeta.pl then all iframes on the website https://",o.createElement("span",{className:"colored-example-element"},"gazeta.pl")," are removed")))),blacklistedElementsIframesSources_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},'If you visit an website an the website includes iframes and this iframes attribute "src" (source) includes one of an entry from this list, then the arget iframe will be removed.'),o.createElement("ul",null,o.createElement("li",null,"Example of list entry: ",o.createElement("span",{className:"colored-example-element"},"https://dmp.theadex.com/r/"),'. If you visit the website: https://www.gazeta.pl and if the website includes iframes and the iframes "src" (source) includes an entry from this list ',o.createElement("span",{className:"colored-example-element"},"https://dmp.theadex.com/r/"),"230/1121/?c=4225222955758066709, then this iframe are removed from the website")))),blacklistedElementsIframesNames_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},'If you visit an website an the website includes iframes and this iframes attribute "name" includes one of an entry from this list, then the arget iframe will be removed.'),o.createElement("ul",null,o.createElement("li",null,"Example of list entry: ",o.createElement("span",{className:"colored-example-element"},"googleads"),'. If you visit the website: https://www.gazeta.pl and if the website includes iframes and the iframes "name" includes an entry from this list ',o.createElement("span",{className:"colored-example-element"},"googleads"),"_sync, then this iframe are removed from the website")))),blacklistedElementsTrackers_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"If you visit a website, and the website has implemented other (third party) services or tracking services and the domain name match with an domain name from this list or the whole url path match with an entry from this list then the request will be blocked."),o.createElement("ul",null,o.createElement("li",null,"Example of list entry: ",o.createElement("span",{className:"colored-example-element"},"cdn.mouseflow.com"),". If an website will connect to an external service and the domain name contains: https://",o.createElement("span",{className:"colored-example-element"},"cdn.mouseflow.com")," then the request are blocked"),o.createElement("li",null,"Example of list entry: ",o.createElement("span",{className:"colored-example-element"},"rsrc.php/v3/y4/r/-PAXP-deijE.gif"),". If an website will connect to an external service and the url request contains: https://static.xx.fbcdn.net/",o.createElement("span",{className:"colored-example-element"},"rsrc.php/v3/y4/r/-PAXP-deijE.gif")," then the request are blocked")))),blacklistedElementsWords_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},'The security content will find each word from this blacklist and each word will be replace by the "replacer" defined in the "settings" section. If the security content has found an danger word, from the "Blacklist: Words" in any HTML tag, then the HTML tags attributes are scanned. If any attribute name from this list does not matches with entrys from the "Blacklist: attributes", then the security content will find each word, inside the attributes value, from this list and replace each character with the replacer defined in the "settings section.'),o.createElement("ul",null,o.createElement("li",null,"For example, if the word ",o.createElement("span",{className:"colored-example-element"},"guns")," are in this blacklist, then if you visit a website, then this word will be replaced",o.createElement("br",null),'Example input: "we have ',o.createElement("span",{className:"colored-example-element"},"guns"),' in ..."',o.createElement("br",null),'Example output: "we have ',o.createElement("span",{className:"colored-example-element"},"####"),' in ..."'),o.createElement("li",null,"For example, if the word ",o.createElement("span",{className:"colored-example-element"},"seven")," are in this blacklist, then if you visit a website, then this will be replaced",o.createElement("br",null),'Example input: "',o.createElement("span",{className:"colored-example-element"},"seven"),' years old ..."',o.createElement("br",null),'Example output: "',o.createElement("span",{className:"colored-example-element"},"#####"),' years old ..."')))),blacklistedElementsClass_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"Blocking DOM Elements (tags) based on its attribute: class."),o.createElement("ul",null,o.createElement("li",null,"Example of list entry: ",o.createElement("span",{className:"colored-example-element"},"font-bold"),'. When you visit an website and a single tag has the attributes class an the class value includes this text: "font-bold", example: ','<span class="font-bold"> Text </span>',", then this tag (DOM element) will be removed from the current visited website")))),blacklistedElementsHref_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},'Blocking "A" tag Elements based on its attribute: href.'),o.createElement("ul",null,o.createElement("li",null,"Example of list entry: ",o.createElement("span",{className:"colored-example-element"},"redirect?"),". When you visit an website and a single tag ","<a>",' has the attributes href an the href`s value includes this text: "redirect?", example: ','<a href="https://xv345bhFD.com/redirect?client=http://example.com">link</a>',", then this tag (DOM element) will be removed from the current visited website")))),blacklistedElementsId_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"Blocking DOM Elements (tags) based on its attribute: id."),o.createElement("ul",null,o.createElement("li",null,"Example of list entry: ",o.createElement("span",{className:"colored-example-element"},"extern-logo"),'. When you visit an website and a single tag has the attributes id an the id value includes this text: "extern-logo", example: ','<img id="extern-logo"/>',", then this tag (DOM element) will be removed from the current visited website")))),whitelistedElementsDomains_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"Make nothing for selected domain names."),o.createElement("ul",null,o.createElement("li",null,"Example of list entry: ",o.createElement("span",{className:"colored-example-element"},"google.com")," then the website https://www.",o.createElement("span",{className:"colored-example-element"},"google.com")," are allowed and no checks are made"),o.createElement("li",null,"Example of list entry: ",o.createElement("span",{className:"colored-example-element"},"npmjs.com")," then the website https://www.",o.createElement("span",{className:"colored-example-element"},"npmjs.com"),"/package/gulp-babel are allowed and no checks are made")))),example:"Examples",imagesPopupTitle:"Images on current website",imagesNoData:"No valid images found",imagesNoDataFavourites:"No saved images found",imagesLoadingTabs:"Loading active tabs...",current_tabs_title:"Current tabs",filter:"Filter",filter_all:"All",itemsPerSite:"Per site",itemsPerSiteSuffix:"images",page:"Page",of:"of",images:"images",current_favourites_images:"Currently saved images",open_in_new_tab:"Open in new tab",download:"Download",downloadSmall:"download",delete_all:"Delete all",notLoggedInImagesFavouritesAdd:"Only logged in users are able to add images to the favourites list",notLoggedInImagesFavouritesManage:"Only logged in users are able to manage the favourites list",tabsNoData:"No valid tabs available",imagesLoadingData:"Loading images...",infoItemAdded:"Item has been added to the current list",infoItemRemoved:"Item has been removed from list",infoArrayIs0:"List are empty, but you want to remove an value",infoIncorrectValue:"Value is incorrect",infoItemInList:"Item allready in list",country:"Country",countriesNotFoundText:"Sorry, no countries found",dropText:"Drop here",error:"Error",searchPlaceholder:"Search for value here...",search:"Search",list:"List",addPlaceholder:"Value...",addNewEntryTitle:"Add new entry",no_data_list:"No entries",no_data_list_search:"No search result",loading:"Loading...",home_security_1:"Blocking danger and tracking cookies",home_security_2:"Blocking danger and tracking requests",home_security_3:"Blocking trackers",home_security_4:"Blocking danger porn websites",home_security_5:"Blocking custom danger words",home_security_6:"Blocking custom websites HTML content",upload:"Drag & Drop NinjaProtect`s json file here...",export:"Export",exportAll:"of global lists and settings",dangerCount:"Protecting you!",dangerCountPrefix:"The maximum number of danger blocked elements has been reached and is currently",dangerUrlPrefix:"The current url or part of the given url are danger. Blocking by blacklist entry",domain:"Domain without www. Example: react-divcreator.cba.pl",tag:"Tag name. For example: div",languages:"Languages"};t.default=s},function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&r(t,e,n);return i(t,e),t};Object.defineProperty(t,"__esModule",{value:!0});var o=a(n(52)),l=n(67),s={itemRemovedFromList:"Wpis został usunięty z listy",currntlyIs:"Kliknij tekst poniżej aby wykonać",currntlyIsOff:"włączenie",currntlyIsOn:"wyłączenie",title_html_blocker:"Blocker",blocker_msg_7:"Content Blocker pozwala na zablokowanie treści bieżącej strony internetowej. Aby zablokować dany element drzewa DOM, włącz usługę Content Blocker potem wybierz element ze strony internetowej. Wszystkie zablokowane elementy mogą zostać skasowane w 'Dashboard' w sekcji 'Zablkowany HTML'.",title_reset:"Reset",reset_done:"Reset applikacji do ustawień fabrycznych został przeprowadzony pomyślnie.",reset:"Kliknij ten tekst aby przeprowadzić reset tej wtyczki do ustawień fabrycznych. Wszystkie twoja dane z list, ustawienia i statystyka zostana usunięte. Przejdz najpierw do działu eksportu danych aby po tym resecie móc wykonać import danych.",menu_title_ninja:"Ikonka Ninja",ninjaIcon:"Ikonka Ninja tego rozszerzenia została wzięta z",turnOn:"Włącz NinjaProtect",turnOff:"Wyłącz NinjaProtect",links:"Linki",deleteAllIframes:"Usuń ramki z bierzącej strony",deleteAllCookies:"Usuń ciasteczka z bierzącej strony",notLoggedInStatisticMessage:"Pracujesz lokalnie. Zaloguj się aby zachować statystykę wstecz.",today_blocked:"Statystyka zablokowanych elementów dnia dzisiejszego",menu_text_statistic:"Statystyka zablokowanych elementów",menu_text_statistic_small:"Statystyka",menu_text_requests:"Zapytania",addon_not_available:"Domena nie zezwala na używanie wtyczek",NoDataBlockedItems:"Brak zablokowanych informacji",NoDataBlockedItemsToday:"Brak informacji o zablokowanych elementach z dnia dzisiejszego",home_chat:"Chat z kolegami - bez śledzenia",home_messages:"Wysyłaj wiadomości - bez śledzenia",home_security:"Ochrona w internecie - blokowanie śledzących",home_images:"Pobieraj zdjęcia - bez śledzenia",menu_text_export:"Eksport",menu_title_export:"Przejdź do obszaru eksportu",menu_text_import:"Import",menu_title_import:"Przejdź do obszaru importu",messages_main:"Wiadomości",menu_text_messages:"Wiadomości",menu_title_messages:"Przejdź do obszaru wiadomości",menu_text_notifications:"Powiadomienia",menu_title_notifications:"Przejdź do obszaru powiadomień",favourites_main:"Znajomości",menu_text_favourites:"Znajomi",menu_title_favourites:"Przejdź do obszaru znajomi",menu_text_add_favourites:"Wyszukaj",menu_title_add_favourites:"Przejdź do obszaru szukania znajomych",chat_main:"Chat",menu_text_chat:"Chat",menu_title_chat:"Przejdź do obszaru chatu",menu_text_security:"Domena",menu_text_security_main:"Lista",menu_title_security:"Przejdź do obszaru zarządzania domeną",menu_text_security_settings:"Ustawienia",menu_title_security_settings:"Przejdź do obszaru ustawień ochrony",menu_text_cookies:"Cisteczka",menu_title_cookies:"Przejdź do obszaru ciasteczek",menu_text_home:"Strona główna",menu_title_home:"Przejdź do strony głównej",menu_text_iframes:"Ramki",menu_title_iframes:"Przejdź do obszaru ramek",menu_text_security_examples:"Przykłady",menu_title_security_examples:"Przejdź do obszaru przykładów ochrony",menu_text_download_images:"Pobierz zdjęcia",menu_title_download_images:"Przejdź do obszaru poboru zdjęć",menu_text_images:"Zdjęcia",menu_text_images_favourites:"Zapisane zdjęcia",menu_title_images_favourites:"Przejdź do obszaru zapisanych zdjęć",accountPrivacyTerms:"Warunki prywatności",globalNetworkError:"Błąd sieci.",globalProcessError:"Błąd procesu.",globalUserDoesNotExsists:"Konto użytkownika nie istnieje",globalInvalidEmailsAdress:"Nieprawidłowy format adresu e-mail",globalErrormessagePrefix:"Znaleziono błąd, który powoduje, że aplikacja nie działa poprawnie.",globalErrormessageCloseButton:"Ignoruj",globalErrormessageLearnMoreButton:"Czytaj więcej",globalInvalidCountry:"Niepoprawny kraj",globalInvalidLanguage:"Niepoprawny język",globalErrorCodeTitle:"Kod błędu",globalErrorCode_1:"Błąd sieci. Gdy wystąpił błąd sieci, oznacza to, że żądanie „ajax” nie powiodło się. Sprawdź połączenie sieciowe lub to, ponieważ usługa zdalna jest obecnie niedostępna.",globalErrorCode_2:"Błąd procesu aplikacji. Oznacza to, że odpowiedź na żądania ajax podała nieprawidłową strukturę aplikacji.",globalErrorCode_3:"Odpowiedź inna niż oczekiwana. Oznacza to, że żądana wartość bieżącego kontekstu aplikacji jest nieprawidłowa.",code:"Kod",listNotSynchronizedUserNotLoggedIn:"Pracujesz lokalnie. Zaloguj się aby synchronizować listę.",notLoggedIn:"Informacja niezalogowania",listSynchronized_one:"Synchronizowano",titleDeleteCookie:"Skasuj pojedyncze ciasteczko",titleCopyCookieValue:"Kopiuj wartość do schowka",cookie_msg_1:"Domena:",cookie_msg_2:"Nazwa:",cookie_msg_3:"Wartość:",cookie_msg_4:"Kasuj wszystkie ciasteczka. Jest możliwe że zostaniesz wylogowany z bieżącej strony.",cookiesNoData:"Brak ciasteczek",avatarErrorFileType:"Nierozpoznany typ pliku",avatarErrorFileSize:"Rozmiar pliku przekracza limit 5 MB dla programu Avatar",avatarErrorFileTypeSupport:"Dozwolone są tylko typy plików jpg, png i gif",blacklist:"Czarne listy",whitelist:"Białe listy",blacklistedElementsWords:"Czarna lista Słowa",blacklistedElementsDomians:"Czarna lista Domeny",blacklistedElementsUrlsIncludes:"Czarna lista Adresy url",blacklistedElementsTrackers:"Czarna lista Trackery",blacklistedElementsCookies:"Czarna lista Ciasteczka",blacklistedElementsClass:"Blokuj HTML dla class",blacklistedElementsId:"Blokuj HTML dla id",blacklistedElementsHref:"Blokuj HTML dla href",menuBlacklistedElementsClass:"Blokuj HTML dla class",menuBlacklistedElementsId:"Blokuj HTML dla id",menuBlacklistedElementsHref:"Blokuj HTML dla href",blacklistedElementsIframes:"Czarna lista Ramki",blacklistedElementsIframesSources:"Czarna lista Ramki źródło",blacklistedElementsIframesNames:"Czarna lista Ramki nazwa",copiedToClipBoard:"Skopiowano do schowka",action_title_copyToClipboard:"Skopiuj listę do schowka",action_title_exportToFile:"Eksportuj listę do pliku o formacie JSON",action_title_deleteList:"Wyczyść listę globalnie",action_title_copyToClipboard_single:"Skopiuj wartość do schowka",action_title_delete_single:"Usuń wpis",forThisFunctionLogin:"Zaloguj się, aby wykonać tę akcję",emptyListDone:"Lista została wyczyszczona",restoreDefaultValue:"Zresetuj listę do wartości domyślnych",whitelistedElementsDomains:"Biała lista Domeny",blockedElements:"Blocker HTML",securityIsOn:"Ta wtyczka jest włączona lub wyłączona.",scanTextOnWebsite:"Jeśli wyłączysz tę opcję, wtedy wszystkie słowa na stronie internetowej NIE są skanowane. Czarna lista: Słowa, są ignorowane.",allowOnlyHttpsProtocol:"Zezwalaj na odwiedzanie tylko stron internetowych HTTPS - czyli strony z protokołem HTTP zostaną zablokowane.",allowOnlyHttpProtocol:"Zezwalaj na odwiedzanie tylko stron internetowych HTTP - czyli strony z protokołem HTTPS zostaną zablokowane.",makeSearchInSourceCode:"Skanuj słowa w kodzie źródłowym danego elementu HTML (innerHTML) lub tylko w tekscie elementach HTML (innerText).",mutationCheck:"Sprawdzanie elementów HTML strony internetowej ma nastąpić również po załadowaniu strony (DOM mutacje na elementach HTML zazwyczaj poprzez biblioteki Javascript).",ignoreTagStyle:'Ignoruj kod zawarty w tagach "STYLE" (<style> tag) podczas skanowania na podstawie czarnej listy "Słowa".',ignoreTagScript:'Ignoruj kod zawarty w tagach "SCRIPT" (<script> tag) podczas skanowania na podstawie czarnej listy "Słowa".',ignoreTagLink:'Ignoruj kod zawarty w tagach "Link" (<link> tag) podczas skanowania na podstawie czarnej listy "Słowa".',ignoreTagMeta:'Ignoruj kod zawarty w tagach "Meta" (<meta> tag) podczas skanowania na podstawie czarnej listy "Słowa".',replacer:"Zastąp każdy znak niebezpiecznego słowa (niebezpieczne słowa pochodzą z czarnej listy Słowa) tym wpisem.",maximumOfDangerWords:"Po osiągnięciu tej wartości - poprzez sumę zablokowanych elementów na stronie na podstawie czarnych list: Czarna lista Słowa, Blokuj HTML dla class, Blokuj HTML dla href oraz Blokuj HTML dla id (każdy zablokowany element zwiększa wartości licznika o +1) wtedy strona internetowa zostanie zablokowana. Minimalna wartość to 1, maksymalna to 300.",limitlessScan:"Zignoruj maksymalną liczbę zablokowanych niebezpiecznych elementów na podstawie czarnych list: Czarna lista Słowa, Blokuj HTML dla class, Blokuj HTML dla href oraz Blokuj HTML dla id. Strona nie zostanie zablokowana (zignoruj powyższą wartość). Jeśli aktywujesz tę funkcję, Protection może spowolnić działanie przeglądarki.",deleteCookies:"Kasuj automatycznie wszystkie ciasteczka na podstawie czarnej listy Ciasteczka na wszytkich stronach. Ciasteczka kasowane są gdy otwierasz lub zamykasz stronę internetową i podczas przeglądania co 5 sekund.",popupMainTitle:"Czarny ninja statystyka",popup_blocked_trackers:"Zablokowani trackerzy",popup_blocked_cookies:"Zablokowane ciasteczka",popup_blocked_words:"Zablokowane łowa",popup_blocked_requests:"Zablokowane zapytania",popup_blocked_iframes:"Zablokowane ramki",popup_blocked_dom:"Zablokowany HTML",popup_blocked_websites:"Zablokowane strony",popup_title_dashboard:"Statystyka",popup_title_global_chart:"Globalna statystyka",titleDeleteIframe:"Usuń pojedynczy element iframe",iframe_msg_1:"Źródło:",iframe_msg_2:"Id:",iframe_msg_3:"className:",iframesNoData:"Brak ramek",popup_add_blacklistedElementsTrackers:"Dodaj bieżącą domenę do trackerów czarnej listy. Wszystkie próby uzyskania dostępu do tej domeny są zablokowane.",popup_remove_blacklistedElementsTrackers:"Usuń bieżącą domenę z czarnej listy - Trackerów.",popup_add_blacklistedElementsDomians:"Dodaj bieżące domeny do domeny czarnej listy domen. Wszystkie próby uzyskania dostępu do tej domeny lub usług z tej domeny są blokowane.",popup_remove_blacklistedElementsDomians:"Usuń bieżącą domenę z czarnej listy - Domen.",popup_add_blacklistedElementsCookies:"Dodaj bieżącą domenę do czarnej listy plików cookie. Wszystkie ciasteczka są usuwane podczas załadowania strony, potem co 5 sekund oraz odczas opusczania witryny.",popup_remove_blacklistedElementsCookies:"Usuń bieżącą domenę z czarnej listy - Ciasteczka",popup_add_blacklistedElementsIframes:"Dodaj bieżącą domenę do czarnej listy - Ramḱi. Wszystkie ramki sa usuwane ze strony, gdy ta probuje wczytac źródło zewnętrzengo serwisu (ramki).",popup_remove_blacklistedElementsIframes:"Usuń bieżącą domenę z czarnej listy - Ramki.",popup_add_blacklistedElementsIframesSources:"Dodaj bieżący adres url do czarnej listy - Ramki źródło. Wszystkie ramki sa usuwane ze strony, gdy ta probuje wczytac źródło zewnętrzengo serwisu (ramki).",popup_remove_blacklistedElementsIframesSources:"Usuń bieżący adres url z czarnej listy - Ramki źródło.",popup_add_whitelistedElementsDomains:"Dodaj bieżący wpis białej listy Domen. ezwól na wszystko (żadne żądanie nie jest blokowane, brak sprawdzania słów na czarnej liście, brak usuwania plików cookie i automatyczne usuwanie iframe).",popup_remove_whitelistedElementsDomains:"Usuń bieżącą domenę z białej listy Domen.",popup_add_blacklistedElementsTrackers_popup:"Dodaj bieżący wpis do czarnej listy Trackerów. Wszystkie próby uzyskania dostępu do tej domeny są zablokowane.",popup_remove_blacklistedElementsTrackers_popup:"Usuń bieżący wpis z czarnej listy Trackerów.",popup_add_blacklistedElementsDomians_popup:"Dodaj bieżący wpis do czarnej listy Domen. Wszystkie próby uzyskania dostępu do tej domeny lub usług z tej domeny są blokowane.",popup_remove_blacklistedElementsDomians_popup:"Usuń bieżący wpis z czarnej listy Domen.",popup_add_blacklistedElementsCookies_popup:"Dodaj bieżący wpis do czarnej listy Ciasteczka. Wszystkie ciasteczka są usuwane podczas załadowania strony, potem co 5 sekund oraz odczas opusczania witryny.",popup_remove_blacklistedElementsCookies_popup:"Usuń bieżący wpis z czarnej listy Ciasteczka",popup_add_blacklistedElementsIframes_popup:"Dodaj bieżący wpis do czarnej listy Ramḱi. Wszystkie ramki sa usuwane ze strony, gdy ta probuje wczytac źródło zewnętrzengo serwisu (ramki).",popup_remove_blacklistedElementsIframes_popup:"Usuń bieżący wpis z czarnej listy Ramki.",popup_add_blacklistedElementsIframesSources_popup:"Dodaj bieżący wpis do czarnej listy Ramki źródło. Wszystkie ramki sa usuwane ze strony, gdy ta probuje wczytac źródło zewnętrzengo serwisu (ramki).",popup_remove_blacklistedElementsIframesSources_popup:"Usuń bieżący wpis z czarnej listy Ramki źródło.",popup_add_whitelistedElementsDomains_popup:"Dodaj bieżący wpis białej listy Domen. Zezwól na wszystko (żadne żądanie nie jest blokowane, brak sprawdzania słów na czarnej liście, brak usuwania plików cookie i automatyczne usuwanie iframe).",popup_remove_whitelistedElementsDomains_popup:"Usuń bieżący wpis z białej listy Domen.",popup_reload_target:"Załaduj ponownie stronę",extendsblacklist:o.createElement("span",null,"Podczas ładowania witryny domena jest skanowana przez filtr czarnej listy. Jeśli domena jest na czarnej liście, zostanie zablokowana. Aby zapewnić maksymalne bezpieczeństwo, można dodać rozszerzoną czarną listę z kolejnymi 20822 wpisami. Treść listy znajduje się tutaj:",o.createElement("a",{target:"_blank",href:l.addonPrefix()+"/extendedblacklist.txt"},"extendedblacklist.txt")),extendspornlist:o.createElement("span",null,"Podczas ładowania witryny domena jest skanowana przez filtr czarnej listy. Jeśli domena jest na czarnej liście, zostanie zablokowana. Aby zapewnić maksymalne bezpieczeństwo, można dodać rozszerzoną czarną listę domen pornograficznych z kolejnymi 6668 wpisami. Treść listy znajduje się tutaj:",o.createElement("a",{target:"_blank",href:l.addonPrefix()+"/extendedpornlist.txt"},"extendedpornlist.txt")),blacklistedElementsCookies_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"Tutaj powinno się wpisać nazwę ciasteczka aby na każdej stronie internetowej każde ciasteczko o podanej nazwie zostało skasowane lub nazwa domeny na której każde ciasteczka mają zostać skasowane. Standardowo lista ma ponad 350 wpisów niebezpiecznych nazew domen lub usług śledzących, którą są automatycznie kasowane."),o.createElement("ul",null,o.createElement("li",null,"Przykładowy wpis w tej liście: ",o.createElement("span",{className:"colored-example-element"},"GPS"),". Jeśli odwiedzisz stronę internetową: https://www.youtube.com, wtedy ciasteczko o nazwie ",o.createElement("span",{className:"colored-example-element"},"GPS")," zostanie skasowane"),o.createElement("li",null,"Przykładowy wpis w tej liście: ",o.createElement("span",{className:"colored-example-element"},"www.7search.com"),". Jeśli odwiedzisz stronę internetową: https://www.7search.com, wtedy ",o.createElement("span",{className:"colored-example-element"},"wszystkie ciasteczka")," zostaną skasowane")))),blacklistedElementsDomians_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"To jest czarna lista oparta jest na nazwie domeny. Wszystkie domeny z tej listy są blokowane podczas odwiedzania tej witryny."),o.createElement("ul",null,o.createElement("li",null,"Przykładowy wpis w tej liście: ",o.createElement("span",{className:"colored-example-element"},"ytimg.com"),".Jeśli odwiedzisz stronę internetową  ",o.createElement("span",{className:"colored-example-element"},"https://ytimg.com")," strona internetowa zostanie zablokowana"),o.createElement("li",null,"Przykładowy wpis w tej liście: ",o.createElement("span",{className:"colored-example-element"},"github.com"),". Jeśli odwiedzisz stronę internetową ",o.createElement("span",{className:"colored-example-element"},"https://github.com")," strona internetowa zostanie zablokowana")))),blacklistedElementsUrlsIncludes_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"Czarna listy oparta na adresach URL lub część adresu url. Wszystkie nazwy domen z tej listy oraz wszystkie części z adresu URL sa brane pod uwagę podczas odwiedzania storny internetwej. Jezeli adres strony internetowej zawiera jakikolwiek znak lub ciąg znaków z tej listy wtedy dostęp do strony internetowej zostanie zablokowany."),o.createElement("ul",null,o.createElement("li",null,"Przykładowy wpis w tej liście: ",o.createElement("span",{className:"colored-example-element"},"package"),". Jeśli odwiedzisz stronę internetową: https://www.npmjs.com/",o.createElement("span",{className:"colored-example-element"},"package"),"/gulp-babel wtedy dostęp do strony internetowej zostanie zablokowany"),o.createElement("li",null,"Przykładowy wpis w tej liście: ",o.createElement("span",{className:"colored-example-element"},"test"),". Jeśli odwiedzisz stronę internetową: https://www.google.com/search?q=",o.createElement("span",{className:"colored-example-element"},"test")," wtedy dostęp do strony internetowej zostanie zablokowany"),o.createElement("li",null,"Przykładowy wpis w tej liście: ",o.createElement("span",{className:"colored-example-element"},"q"),". Jeśli odwiedzisz stronę internetową: https://www.google.com/search?",o.createElement("span",{className:"colored-example-element"},"q"),"=test wtedy dostęp do strony internetowej zostanie zablokowany"),o.createElement("li",null,"Przykładowy wpis w tej liście: ",o.createElement("span",{className:"colored-example-element"},"hub.com"),". Jeśli odwiedzisz stronę internetową: https://www.git",o.createElement("span",{className:"colored-example-element"},"hub.com")," wtedy dostęp do strony internetowej zostanie zablokowany")))),blacklistedElementsIframes_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"Czarna lista nazw domen na których (stronach internetowych) maja zostać usunięte ramki (iframe)."),o.createElement("ul",null,o.createElement("li",null,"Przykładowy wpis w tej liście: ",o.createElement("span",{className:"colored-example-element"},"gazeta.pl"),". Jeśli odwiedzisz stronę internetową: https://www.",o.createElement("span",{className:"colored-example-element"},"gazeta.pl")," wtedy wszystkie ramki zostaną usunięte")))),_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"Czarna lista źródeł ramek domen, które maja zostać usunięte na każdej stronie."),o.createElement("ul",null,o.createElement("li",null,"Przykładowy wpis w tej liście: ",o.createElement("span",{className:"colored-example-element"},"https://dmp.theadex.com/r/"),". Jeśli odwiedzisz stronę internetową: https://www.gazeta.pl a załadowanej ramki (tag: iframe) źródło zawiera: ",o.createElement("span",{className:"colored-example-element"},"https://dmp.theadex.com/r/"),"230/1121/?c=4225222955758066709, wtedy ramka zostanie usunięta ze strony")))),blacklistedElementsIframesNames_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"Czarna lista nazew ramek, które maja zostać usunięte na każdej stronie."),o.createElement("ul",null,o.createElement("li",null,"Przykładowy wpis w tej liście: ",o.createElement("span",{className:"colored-example-element"},"googleads"),". Jeśli odwiedzisz stronę internetową: https://www.gazeta.pl a załadowanej ramki (tag: iframe) nazwa zawiera: ",o.createElement("span",{className:"colored-example-element"},"googleads"),"_sync, wtedy ramka zostanie usunięta ze strony")))),blacklistedElementsTrackers_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"Jeśli odwiedzisz witrynę internetową, a witryna wdrożyła śledzenie usługi i nazwa domeny jest zgodna z jedną z nazw domen z tej listy lub cała ścieżka adresu url jest zgodna z jednym z wpisów z tej listy to żądanie zostanie zablokowane."),o.createElement("ul",null,o.createElement("li",null,"Przykładowy wpis w tej liście: ",o.createElement("span",{className:"colored-example-element"},"cdn.mouseflow.com"),". Jeśli witryna połączy się z usługą zewnętrzną i adres zapytania zawiera nazwę domeny: https://",o.createElement("span",{className:"colored-example-element"},"cdn.mouseflow.com")," to zapytania zostanie zablokowane"),o.createElement("li",null,"Przykładowy wpis w tej liście: ",o.createElement("span",{className:"colored-example-element"},"rsrc.php/v3/y4/r/-PAXP-deijE.gif"),". Jeśli witryna połączy się z usługą zewnętrzną i adres zapytania zawiera nazwę domeny: https://static.xx.fbcdn.net/",o.createElement("span",{className:"colored-example-element"},"rsrc.php/v3/y4/r/-PAXP-deijE.gif")," to zapytania zostanie zablokowane")))),blacklistedElementsWords_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"Konteks ochrony tej aplikacji znajdzie każde słowo z tej czarnej listy, a każde słowo zostanie zastąpione przez „zamiennik” zdefiniowany w sekcji „Ustawienia ochrony ."),o.createElement("ul",null,o.createElement("li",null,'Na przykład, jeśli słowo "pistolet" znajduje się na tej czarnej liście, to jeśli odwiedzisz stronę internetową, słowo „pistolet” zostanie zastąpione.',o.createElement("br",null),'Przykład przed: "mam ',o.createElement("span",{className:"colored-example-element"},"pistolet"),' w szafie.".',o.createElement("br",null),'Przykład po: "mam ',o.createElement("span",{className:"colored-example-element"},"########"),' w szafie."'),o.createElement("li",null,'Na przykład, jeśli słowo "zakupy" znajduje się na tej czarnej liście, to jeśli odwiedzisz stronę internetową, słowo zakupy zostanie zastąpione.',o.createElement("br",null),'Przykład przed: "moje ',o.createElement("span",{className:"colored-example-element"},"zakupy"),' są w samochodzie.".',o.createElement("br",null),'Przykład po: "moje ',o.createElement("span",{className:"colored-example-element"},"######"),' są w samochodzie."')))),blacklistedElementsClass_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"Blokowanie tagów drzewa DOM na podstawie jego identifikatora: class."),o.createElement("ul",null,o.createElement("li",null,"Przykładowy wpis na tej liście: \"font-bold\". Jeśli odwiedzisz jakąkolwiek stronę internetową wtedy wsyzstkie elementy zawierające atrybut class o wartości 'font-bold' (np: ",'<span class="font-bold"> Text </span>',") zostaną usunięte ze strony internetowej.")))),blacklistedElementsHref_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},'Blokowanie tagów "A" drzewa DOM na podstawie jego identifikatora: href.'),o.createElement("ul",null,o.createElement("li",null,'Przykładowy wpis na tej liście: "redirect?". Jeśli odwiedzisz jakąkolwiek stronę internetową wtedy wsyzstkie elementy drzewa DOM ',"<a>"," zawierające atrybut href o wartości 'redirect?' (np: ",'<a href="https://xv345bhFD.com/redirect?client=http://example.com">link</a>',") zostaną usunięte ze strony internetowej.")))),blacklistedElementsId_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"Blokowanie tagów drzewa DOM na podstawie jego identifikatora: id."),o.createElement("ul",null,o.createElement("li",null,"Przykładowy wpis na tej liście: \"extern-logo\". Jeśli odwiedzisz jakąkolwiek stronę internetową wtedy wsyzstkie elementy zawierające atrybut id o wartości 'extern-logo' (np: ",'<img id="extern-logo"/>',") zostaną usunięte ze strony internetowej.")))),whitelistedElementsDomains_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"Nie rób nic dla wybranych nazw domen."),o.createElement("ul",null,o.createElement("li",null,"Przykładowy wpis w tej liście: ",o.createElement("span",{className:"colored-example-element"},"google.com"),". Jeśli odwiedzisz stronę internetową: https://www.",o.createElement("span",{className:"colored-example-element"},"google.com")," nie są wykonywane żadne procesy ani nie jesteś chroniony"),o.createElement("li",null,"Przykładowy wpis w tej liście: ",o.createElement("span",{className:"colored-example-element"},"npmjs.com"),". Jeśli odwiedzisz stronę internetową: https://www.",o.createElement("span",{className:"colored-example-element"},"npmjs.com"),"/package/gulp-babel, nie są wykonywane żadne procesy ani nie jesteś chroniony")))),example:"Przykłady",imagesPopupTitle:"Znaleziono zdjęcia",imagesNoData:"Brak poprawnych zdjęć",imagesNoDataFavourites:"Brak zapisanych zdjęć",imagesLoadingTabs:"Ładowanie aktywnych okienek...",current_tabs_title:"Aktualne okna",filter:"Filtruj",filter_all:"Wszystkie",itemsPerSite:"Co stronę",itemsPerSiteSuffix:"zdjęć",page:"Strona",of:"z",images:"zdjęć",current_favourites_images:"Tymczasem zapisane zdjęcia",open_in_new_tab:"Otwórz w nowym okientku",download:"Pobierz",downloadSmall:"pobierz",delete_all:"Usuń wszysko",notLoggedInImagesFavouritesAdd:"Tylko zalogowani użytkownicy mogą dodawać zdjęcia do listy ulubionych",notLoggedInImagesFavouritesManage:"Tylko zalogowani użytkownicy mogą zarządzać listą ulubionych",tabsNoData:"Brak poprawnych okienek",imagesLoadingData:"Ładowanie zdjęć...",infoItemAdded:"Wpis został dodany do listy",infoItemRemoved:"Wpis został usunięty z listy",infoArrayIs0:"Lista jest pusta, więc nie można usunąć żadnego elementu",infoIncorrectValue:"Wartość jest nieprawidłowa",infoItemInList:"Wpis już istnieje na liście",country:"Kraj",countriesNotFoundText:"Przepraszam, nie znalazłem takiego kraju",dropText:"Upuść tutaj",error:"Błąd",searchPlaceholder:"Szukaj...",search:"Szukaj",list:"Lista",addPlaceholder:"Wartość...",addNewEntryTitle:"Dodaj nowy wpis",no_data_list:"Brak wpisów",no_data_list_search:"Brak wyników szukania",loading:"Ładowanie...",home_security_1:"Blokowanie niebezpiecznych ciasteczek",home_security_2:"Blokowanie niebezpiecznych zapytan",home_security_3:"Blokowanie niebezpiecznych usług śledczych",home_security_4:"Blokowanie niebezpiecznych stron pornograficznych",home_security_5:"Blokowanie niebezpiecznych słow",home_security_6:"Blokowanie niebezpiecznych zawartości stron internetowych",upload:"Przeciągnij i upuść plik json NinjaProtecta tutaj...",export:"Eksport",exportAll:"globalnych list i ustawien",dangerCount:"Chronię cię!",dangerCountPrefix:"Osiągnięto maksymalna liczbę niebezpiecznych elementów, która jest obecnie",dangerUrlPrefix:"Adres strony albo część adresu strony internetowej jest niebezpieczny i znajduje się w jednej z czarnej listy",domain:"Nazwa domena bez www. Na przykład: react-divcreator.cba.pl",tag:"Nazwa tagu. Na przykład: div",languages:"Języki"};t.default=s},function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var i=r(n(347));t.default=function(){var e=localStorage.getItem("applanguage")?localStorage.getItem("applanguage"):"en";return i.default.includes(e)||(e="en"),e.toLowerCase()}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.default=["de","en","pl"]},function(e,t,n){var r=n(349),i=n(350);"string"==typeof(i=i.__esModule?i.default:i)&&(i=[[e.i,i,""]]);var a={insert:"head",singleton:!1};r(i,a);e.exports=i.locals||{}},function(e,t,n){"use strict";var r,i=function(){return void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r},a=function(){var e={};return function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}e[t]=n}return e[t]}}(),o=[];function l(e){for(var t=-1,n=0;n<o.length;n++)if(o[n].identifier===e){t=n;break}return t}function s(e,t){for(var n={},r=[],i=0;i<e.length;i++){var a=e[i],s=t.base?a[0]+t.base:a[0],u=n[s]||0,c="".concat(s," ").concat(u);n[s]=u+1;var f=l(c),d={css:a[1],media:a[2],sourceMap:a[3]};-1!==f?(o[f].references++,o[f].updater(d)):o.push({identifier:c,updater:g(d,t),references:1}),r.push(c)}return r}function u(e){var t=document.createElement("style"),r=e.attributes||{};if(void 0===r.nonce){var i=n.nc;i&&(r.nonce=i)}if(Object.keys(r).forEach((function(e){t.setAttribute(e,r[e])})),"function"==typeof e.insert)e.insert(t);else{var o=a(e.insert||"head");if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}return t}var c,f=(c=[],function(e,t){return c[e]=t,c.filter(Boolean).join("\n")});function d(e,t,n,r){var i=n?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(e.styleSheet)e.styleSheet.cssText=f(t,i);else{var a=document.createTextNode(i),o=e.childNodes;o[t]&&e.removeChild(o[t]),o.length?e.insertBefore(a,o[t]):e.appendChild(a)}}function p(e,t,n){var r=n.css,i=n.media,a=n.sourceMap;if(i?e.setAttribute("media",i):e.removeAttribute("media"),a&&btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleSheet)e.styleSheet.cssText=r;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(r))}}var m=null,h=0;function g(e,t){var n,r,i;if(t.singleton){var a=h++;n=m||(m=u(t)),r=d.bind(null,n,a,!1),i=d.bind(null,n,a,!0)}else n=u(t),r=p.bind(null,n,t),i=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)};return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else i()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=i());var n=s(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var r=0;r<n.length;r++){var i=l(n[r]);o[i].references--}for(var a=s(e,t),u=0;u<n.length;u++){var c=l(n[u]);0===o[c].references&&(o[c].updater(),o.splice(c,1))}n=a}}}},function(e,t,n){(t=n(351)(!1)).push([e.i,".Blocked{width:100vw;height:100vh;overflow:hidden;background-size:cover}.Blocked h1,.Blocked h2{max-width:80%;text-align:center;line-height:30px;box-sizing:border-box;padding:20px;margin:0 auto;color:#fff;font-size:24px}.Blocked h2{color:gold;min-height:30px}.Blocked .header,.Blocked .footer{width:100vw;min-height:100px;height:auto;overflow:auto;background-color:rgba(39,39,39,0.9);position:absolute;left:0}.Blocked .header{top:0}.Blocked .footer{bottom:0}.Blocked .footer a{display:block;width:300px;margin:30px auto;background-color:gold;color:rgba(39,39,39,0.9);box-sizing:border-box;padding:10px 30px;text-align:center;line-height:30px;border-radius:5px;border:none;text-decoration:none;font-size:21px;transition-duration:300ms;box-shadow:0px 0px 8px transparent}.Blocked .footer a:hover{box-shadow:0px 0px 8px gold}\n",""]),e.exports=t},function(e,t,n){"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=function(e,t){var n=e[1]||"",r=e[3];if(!r)return n;if(t&&"function"==typeof btoa){var i=(o=r,l=btoa(unescape(encodeURIComponent(JSON.stringify(o)))),s="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(l),"/*# ".concat(s," */")),a=r.sources.map((function(e){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(e," */")}));return[n].concat(a).concat([i]).join("\n")}var o,l,s;return[n].join("\n")}(t,e);return t[2]?"@media ".concat(t[2]," {").concat(n,"}"):n})).join("")},t.i=function(e,n,r){"string"==typeof e&&(e=[[null,e,""]]);var i={};if(r)for(var a=0;a<this.length;a++){var o=this[a][0];null!=o&&(i[o]=!0)}for(var l=0;l<e.length;l++){var s=[].concat(e[l]);r&&i[s[0]]||(n&&(s[2]?s[2]="".concat(n," and ").concat(s[2]):s[2]=n),t.push(s))}},t}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,