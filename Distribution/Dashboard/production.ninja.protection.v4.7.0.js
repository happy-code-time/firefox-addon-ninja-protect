!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=168)}([function(e,t,n){var r=n(3),o=n(22),i=n(14),a=n(15),l=n(23),s=function(e,t,n){var c,u,d,f,p=e&s.F,h=e&s.G,g=e&s.S,m=e&s.P,b=e&s.B,v=h?r:g?r[t]||(r[t]={}):(r[t]||{}).prototype,y=h?o:o[t]||(o[t]={}),x=y.prototype||(y.prototype={});for(c in h&&(n=t),n)d=((u=!p&&v&&void 0!==v[c])?v:n)[c],f=b&&u?l(d,r):m&&"function"==typeof d?l(Function.call,d):d,v&&a(v,c,d,e&s.U),y[c]!=d&&i(y,c,f),m&&x[c]!=d&&(x[c]=d)};r.core=o,s.F=1,s.G=2,s.S=4,s.P=8,s.B=16,s.W=32,s.U=64,s.R=128,e.exports=s},function(e,t,n){"use strict";e.exports=n(372)},function(e,t,n){var r=n(5);e.exports=function(e){if(!r(e))throw TypeError(e+" is not an object!");return e}},function(e,t){var n=e.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=n)},function(e,t){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,t){e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},function(e,t,n){var r=n(55)("wks"),o=n(40),i=n(3).Symbol,a="function"==typeof i;(e.exports=function(e){return r[e]||(r[e]=a&&i[e]||(a?i:o)("Symbol."+e))}).store=r},function(e,t,n){var r=n(25),o=Math.min;e.exports=function(e){return e>0?o(r(e),9007199254740991):0}},function(e,t,n){e.exports=!n(4)((function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a}))},function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var o=r(n(386)),i=r(n(387)),a=r(n(388)),l=r(n(389));t.default=function(){switch(l.default()){case"de":return o.default;case"en":return i.default;case"pl":return a.default;default:return i.default}}},function(e,t,n){var r=n(2),o=n(117),i=n(28),a=Object.defineProperty;t.f=n(8)?Object.defineProperty:function(e,t,n){if(r(e),t=i(t,!0),r(n),o)try{return a(e,t,n)}catch(e){}if("get"in n||"set"in n)throw TypeError("Accessors not supported!");return"value"in n&&(e[t]=n.value),e}},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),l=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&i(t,e,n);return a(t,e),t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=l(n(1)),u=s(n(9)),d=function(e){function t(t){var n=e.call(this,t)||this;return n.state={minifiedSecondSideBar:!0,isMinified:!0,sidebarMin:!0,contentMin:!0,minifiedSaver:!0,language:"en",activeTab:{},contentData:n.props.contentData?n.props.contentData:"",loginRequired:n.props.loginRequired,redirectAfterLogin:n.props.redirectAfterLogin?n.props.redirectAfterLogin:""},n.translations=u.default(),n}return o(t,e),t.prototype.render=function(){return c.createElement("div",{className:"ContentBody"},0==this.state.loginRequired&&this.state.contentData)},t}(c.Component);t.default=d},function(e,t,n){var r=n(29);e.exports=function(e){return Object(r(e))}},function(e,t){e.exports=function(e){if("function"!=typeof e)throw TypeError(e+" is not a function!");return e}},function(e,t,n){var r=n(10),o=n(39);e.exports=n(8)?function(e,t,n){return r.f(e,t,o(1,n))}:function(e,t,n){return e[t]=n,e}},function(e,t,n){var r=n(3),o=n(14),i=n(18),a=n(40)("src"),l=n(172),s=(""+l).split("toString");n(22).inspectSource=function(e){return l.call(e)},(e.exports=function(e,t,n,l){var c="function"==typeof n;c&&(i(n,"name")||o(n,"name",t)),e[t]!==n&&(c&&(i(n,a)||o(n,a,e[t]?""+e[t]:s.join(String(t)))),e===r?e[t]=n:l?e[t]?e[t]=n:o(e,t,n):(delete e[t],o(e,t,n)))})(Function.prototype,"toString",(function(){return"function"==typeof this&&this[a]||l.call(this)}))},function(e,t,n){var r=n(0),o=n(4),i=n(29),a=/"/g,l=function(e,t,n,r){var o=String(i(e)),l="<"+t;return""!==n&&(l+=" "+n+'="'+String(r).replace(a,"&quot;")+'"'),l+">"+o+"</"+t+">"};e.exports=function(e,t){var n={};n[e]=t(l),r(r.P+r.F*o((function(){var t=""[e]('"');return t!==t.toLowerCase()||t.split('"').length>3})),"String",n)}},function(e,t,n){"use strict";function r(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}n.d(t,"a",(function(){return r}))},function(e,t){var n={}.hasOwnProperty;e.exports=function(e,t){return n.call(e,t)}},function(e,t,n){var r=n(56),o=n(29);e.exports=function(e){return r(o(e))}},function(e,t,n){var r=n(57),o=n(39),i=n(19),a=n(28),l=n(18),s=n(117),c=Object.getOwnPropertyDescriptor;t.f=n(8)?c:function(e,t){if(e=i(e),t=a(t,!0),s)try{return c(e,t)}catch(e){}if(l(e,t))return o(!r.f.call(e,t),e[t])}},function(e,t,n){var r=n(18),o=n(12),i=n(85)("IE_PROTO"),a=Object.prototype;e.exports=Object.getPrototypeOf||function(e){return e=o(e),r(e,i)?e[i]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?a:null}},function(e,t){var n=e.exports={version:"2.6.11"};"number"==typeof __e&&(__e=n)},function(e,t,n){var r=n(13);e.exports=function(e,t,n){if(r(e),void 0===t)return e;switch(n){case 1:return function(n){return e.call(t,n)};case 2:return function(n,r){return e.call(t,n,r)};case 3:return function(n,r,o){return e.call(t,n,r,o)}}return function(){return e.apply(t,arguments)}}},function(e,t){var n={}.toString;e.exports=function(e){return n.call(e).slice(8,-1)}},function(e,t){var n=Math.ceil,r=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?r:n)(e)}},function(e,t,n){"use strict";var r=n(4);e.exports=function(e,t){return!!e&&r((function(){t?e.call(null,(function(){}),1):e.call(null)}))}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.addonRoot=t.addonPrefix=t.addonPrefixDashboardMenu=t.addonPrefixDashboard=t.addonPrefixPopup=void 0,t.addonPrefixPopup=function(){return browser.runtime.getURL("Distribution/Popup/index.html")},t.addonPrefixDashboard=function(){return browser.runtime.getURL("Distribution/Dashboard/index.html")},t.addonPrefixDashboardMenu=function(){return browser.runtime.getURL("Distribution/Dashboard/")},t.addonPrefix=function(){return browser.runtime.getURL("Distribution")},t.addonRoot=function(){return browser.runtime.getURL("")}},function(e,t,n){var r=n(5);e.exports=function(e,t){if(!r(e))return e;var n,o;if(t&&"function"==typeof(n=e.toString)&&!r(o=n.call(e)))return o;if("function"==typeof(n=e.valueOf)&&!r(o=n.call(e)))return o;if(!t&&"function"==typeof(n=e.toString)&&!r(o=n.call(e)))return o;throw TypeError("Can't convert object to primitive value")}},function(e,t){e.exports=function(e){if(null==e)throw TypeError("Can't call method on  "+e);return e}},function(e,t,n){var r=n(0),o=n(22),i=n(4);e.exports=function(e,t){var n=(o.Object||{})[e]||Object[e],a={};a[e]=t(n),r(r.S+r.F*i((function(){n(1)})),"Object",a)}},function(e,t,n){var r=n(23),o=n(56),i=n(12),a=n(7),l=n(101);e.exports=function(e,t){var n=1==e,s=2==e,c=3==e,u=4==e,d=6==e,f=5==e||d,p=t||l;return function(t,l,h){for(var g,m,b=i(t),v=o(b),y=r(l,h,3),x=a(v.length),w=0,k=n?p(t,x):s?p(t,0):void 0;x>w;w++)if((f||w in v)&&(m=y(g=v[w],w,b),e))if(n)k[w]=m;else if(m)switch(e){case 3:return!0;case 5:return g;case 6:return w;case 2:k.push(g)}else if(u)return!1;return d?-1:c||u?u:k}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.default=function(){return""+Math.floor(1e6*Math.random())+Math.floor(1e6*Math.random())+Math.floor(1e6*Math.random())}},function(e,t,n){"use strict";if(n(8)){var r=n(36),o=n(3),i=n(4),a=n(0),l=n(73),s=n(109),c=n(23),u=n(46),d=n(39),f=n(14),p=n(48),h=n(25),g=n(7),m=n(145),b=n(42),v=n(28),y=n(18),x=n(51),w=n(5),k=n(12),_=n(98),E=n(43),S=n(21),P=n(44).f,z=n(100),M=n(40),C=n(6),O=n(31),T=n(63),N=n(59),D=n(103),j=n(53),I=n(68),L=n(45),A=n(102),R=n(134),B=n(10),F=n(20),W=B.f,U=F.f,H=o.RangeError,V=o.TypeError,q=o.Uint8Array,K=Array.prototype,$=s.ArrayBuffer,J=s.DataView,G=O(0),Y=O(2),Z=O(3),Q=O(4),X=O(5),ee=O(6),te=T(!0),ne=T(!1),re=D.values,oe=D.keys,ie=D.entries,ae=K.lastIndexOf,le=K.reduce,se=K.reduceRight,ce=K.join,ue=K.sort,de=K.slice,fe=K.toString,pe=K.toLocaleString,he=C("iterator"),ge=C("toStringTag"),me=M("typed_constructor"),be=M("def_constructor"),ve=l.CONSTR,ye=l.TYPED,xe=l.VIEW,we=O(1,(function(e,t){return Pe(N(e,e[be]),t)})),ke=i((function(){return 1===new q(new Uint16Array([1]).buffer)[0]})),_e=!!q&&!!q.prototype.set&&i((function(){new q(1).set({})})),Ee=function(e,t){var n=h(e);if(n<0||n%t)throw H("Wrong offset!");return n},Se=function(e){if(w(e)&&ye in e)return e;throw V(e+" is not a typed array!")},Pe=function(e,t){if(!w(e)||!(me in e))throw V("It is not a typed array constructor!");return new e(t)},ze=function(e,t){return Me(N(e,e[be]),t)},Me=function(e,t){for(var n=0,r=t.length,o=Pe(e,r);r>n;)o[n]=t[n++];return o},Ce=function(e,t,n){W(e,t,{get:function(){return this._d[n]}})},Oe=function(e){var t,n,r,o,i,a,l=k(e),s=arguments.length,u=s>1?arguments[1]:void 0,d=void 0!==u,f=z(l);if(null!=f&&!_(f)){for(a=f.call(l),r=[],t=0;!(i=a.next()).done;t++)r.push(i.value);l=r}for(d&&s>2&&(u=c(u,arguments[2],2)),t=0,n=g(l.length),o=Pe(this,n);n>t;t++)o[t]=d?u(l[t],t):l[t];return o},Te=function(){for(var e=0,t=arguments.length,n=Pe(this,t);t>e;)n[e]=arguments[e++];return n},Ne=!!q&&i((function(){pe.call(new q(1))})),De=function(){return pe.apply(Ne?de.call(Se(this)):Se(this),arguments)},je={copyWithin:function(e,t){return R.call(Se(this),e,t,arguments.length>2?arguments[2]:void 0)},every:function(e){return Q(Se(this),e,arguments.length>1?arguments[1]:void 0)},fill:function(e){return A.apply(Se(this),arguments)},filter:function(e){return ze(this,Y(Se(this),e,arguments.length>1?arguments[1]:void 0))},find:function(e){return X(Se(this),e,arguments.length>1?arguments[1]:void 0)},findIndex:function(e){return ee(Se(this),e,arguments.length>1?arguments[1]:void 0)},forEach:function(e){G(Se(this),e,arguments.length>1?arguments[1]:void 0)},indexOf:function(e){return ne(Se(this),e,arguments.length>1?arguments[1]:void 0)},includes:function(e){return te(Se(this),e,arguments.length>1?arguments[1]:void 0)},join:function(e){return ce.apply(Se(this),arguments)},lastIndexOf:function(e){return ae.apply(Se(this),arguments)},map:function(e){return we(Se(this),e,arguments.length>1?arguments[1]:void 0)},reduce:function(e){return le.apply(Se(this),arguments)},reduceRight:function(e){return se.apply(Se(this),arguments)},reverse:function(){for(var e,t=Se(this).length,n=Math.floor(t/2),r=0;r<n;)e=this[r],this[r++]=this[--t],this[t]=e;return this},some:function(e){return Z(Se(this),e,arguments.length>1?arguments[1]:void 0)},sort:function(e){return ue.call(Se(this),e)},subarray:function(e,t){var n=Se(this),r=n.length,o=b(e,r);return new(N(n,n[be]))(n.buffer,n.byteOffset+o*n.BYTES_PER_ELEMENT,g((void 0===t?r:b(t,r))-o))}},Ie=function(e,t){return ze(this,de.call(Se(this),e,t))},Le=function(e){Se(this);var t=Ee(arguments[1],1),n=this.length,r=k(e),o=g(r.length),i=0;if(o+t>n)throw H("Wrong length!");for(;i<o;)this[t+i]=r[i++]},Ae={entries:function(){return ie.call(Se(this))},keys:function(){return oe.call(Se(this))},values:function(){return re.call(Se(this))}},Re=function(e,t){return w(e)&&e[ye]&&"symbol"!=typeof t&&t in e&&String(+t)==String(t)},Be=function(e,t){return Re(e,t=v(t,!0))?d(2,e[t]):U(e,t)},Fe=function(e,t,n){return!(Re(e,t=v(t,!0))&&w(n)&&y(n,"value"))||y(n,"get")||y(n,"set")||n.configurable||y(n,"writable")&&!n.writable||y(n,"enumerable")&&!n.enumerable?W(e,t,n):(e[t]=n.value,e)};ve||(F.f=Be,B.f=Fe),a(a.S+a.F*!ve,"Object",{getOwnPropertyDescriptor:Be,defineProperty:Fe}),i((function(){fe.call({})}))&&(fe=pe=function(){return ce.call(this)});var We=p({},je);p(We,Ae),f(We,he,Ae.values),p(We,{slice:Ie,set:Le,constructor:function(){},toString:fe,toLocaleString:De}),Ce(We,"buffer","b"),Ce(We,"byteOffset","o"),Ce(We,"byteLength","l"),Ce(We,"length","e"),W(We,ge,{get:function(){return this[ye]}}),e.exports=function(e,t,n,s){var c=e+((s=!!s)?"Clamped":"")+"Array",d="get"+e,p="set"+e,h=o[c],b=h||{},v=h&&S(h),y=!h||!l.ABV,k={},_=h&&h.prototype,z=function(e,n){W(e,n,{get:function(){return function(e,n){var r=e._d;return r.v[d](n*t+r.o,ke)}(this,n)},set:function(e){return function(e,n,r){var o=e._d;s&&(r=(r=Math.round(r))<0?0:r>255?255:255&r),o.v[p](n*t+o.o,r,ke)}(this,n,e)},enumerable:!0})};y?(h=n((function(e,n,r,o){u(e,h,c,"_d");var i,a,l,s,d=0,p=0;if(w(n)){if(!(n instanceof $||"ArrayBuffer"==(s=x(n))||"SharedArrayBuffer"==s))return ye in n?Me(h,n):Oe.call(h,n);i=n,p=Ee(r,t);var b=n.byteLength;if(void 0===o){if(b%t)throw H("Wrong length!");if((a=b-p)<0)throw H("Wrong length!")}else if((a=g(o)*t)+p>b)throw H("Wrong length!");l=a/t}else l=m(n),i=new $(a=l*t);for(f(e,"_d",{b:i,o:p,l:a,e:l,v:new J(i)});d<l;)z(e,d++)})),_=h.prototype=E(We),f(_,"constructor",h)):i((function(){h(1)}))&&i((function(){new h(-1)}))&&I((function(e){new h,new h(null),new h(1.5),new h(e)}),!0)||(h=n((function(e,n,r,o){var i;return u(e,h,c),w(n)?n instanceof $||"ArrayBuffer"==(i=x(n))||"SharedArrayBuffer"==i?void 0!==o?new b(n,Ee(r,t),o):void 0!==r?new b(n,Ee(r,t)):new b(n):ye in n?Me(h,n):Oe.call(h,n):new b(m(n))})),G(v!==Function.prototype?P(b).concat(P(v)):P(b),(function(e){e in h||f(h,e,b[e])})),h.prototype=_,r||(_.constructor=h));var M=_[he],C=!!M&&("values"==M.name||null==M.name),O=Ae.values;f(h,me,!0),f(_,ye,c),f(_,xe,!0),f(_,be,h),(s?new h(1)[ge]==c:ge in _)||W(_,ge,{get:function(){return c}}),k[c]=h,a(a.G+a.W+a.F*(h!=b),k),a(a.S,c,{BYTES_PER_ELEMENT:t}),a(a.S+a.F*i((function(){b.of.call(h,1)})),c,{from:Oe,of:Te}),"BYTES_PER_ELEMENT"in _||f(_,"BYTES_PER_ELEMENT",t),a(a.P,c,je),L(c),a(a.P+a.F*_e,c,{set:Le}),a(a.P+a.F*!C,c,Ae),r||_.toString==fe||(_.toString=fe),a(a.P+a.F*i((function(){new h(1).slice()})),c,{slice:Ie}),a(a.P+a.F*(i((function(){return[1,2].toLocaleString()!=new h([1,2]).toLocaleString()}))||!i((function(){_.toLocaleString.call([1,2])}))),c,{toLocaleString:De}),j[c]=C?M:O,r||C||f(_,he,O)}}else e.exports=function(){}},function(e,t,n){var r=n(140),o=n(0),i=n(55)("metadata"),a=i.store||(i.store=new(n(143))),l=function(e,t,n){var o=a.get(e);if(!o){if(!n)return;a.set(e,o=new r)}var i=o.get(t);if(!i){if(!n)return;o.set(t,i=new r)}return i};e.exports={store:a,map:l,has:function(e,t,n){var r=l(t,n,!1);return void 0!==r&&r.has(e)},get:function(e,t,n){var r=l(t,n,!1);return void 0===r?void 0:r.get(e)},set:function(e,t,n,r){l(n,r,!0).set(e,t)},keys:function(e,t){var n=l(e,t,!1),r=[];return n&&n.forEach((function(e,t){r.push(t)})),r},key:function(e){return void 0===e||"symbol"==typeof e?e:String(e)},exp:function(e){o(o.S,"Reflect",e)}}},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),l=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&i(t,e,n);return a(t,e),t},s=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(o,i){function a(e){try{s(r.next(e))}catch(e){i(e)}}function l(e){try{s(r.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,l)}s((r=r.apply(e,t||[])).next())}))},c=this&&this.__generator||function(e,t){var n,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function l(i){return function(l){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!(o=a.trys,(o=o.length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=t.call(e,a)}catch(e){i=[6,e],r=0}finally{n=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,l])}}},u=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var d=l(n(1)),f=l(n(80)),p=n(60),h=u(n(405)),g=u(n(157)),m=u(n(158)),b=u(n(159)),v=u(n(160)),y=u(n(161)),x=u(n(111)),w=u(n(9)),k=u(n(162)),_=u(n(163)),E=u(n(164)),S=u(n(165)),P=u(n(54)),z=function(e){function t(t){var n=e.call(this,t)||this;return n.changeList=n.changeList.bind(n),n.setInputValue=n.setInputValue.bind(n),n.setNewLocalStorageData=n.setNewLocalStorageData.bind(n),n.deleteAll=n.deleteAll.bind(n),n.state={data:[],inputValue:"",messages:[],animationLoading:!0,jsonData:{},itemsPerSite:15},n.translations=w.default(),n.storageName=n.props.storageName,n.listReadable=n.translations[n.storageName],n.storageKey="BLACKLIST",n}return o(t,e),t.prototype.componentDidMount=function(){s(this,void 0,void 0,(function(){var e,t,n,r;return c(this,(function(o){switch(o.label){case 0:return n={},t=this.storageName,[4,k.default(this.storageName)];case 1:n[t]=o.sent(),e=n;try{e=e[this.storageName]?e[this.storageName]:[],this.setState({data:e,jsonData:e?JSON.stringify((r={},r[this.storageName]=e,r)):"",animationLoading:!1})}catch(e){this.setState({animationLoading:!1})}return[2]}}))}))},t.prototype.setInputValue=function(e,t){13==e.keyCode||13==e.which?this.changeList(e,t,e.target.value):27==e.keyCode||27==e.which?this.setState({inputValue:""}):this.setState({inputValue:e.target.value})},t.prototype.setNewLocalStorageData=function(e){var t,n=sessionStorage.getItem(this.storageKey),r=this.state.jsonData;try{(n=JSON.parse(n))[this.storageName]=e,void 0!==n[this.storageName]&&(r=JSON.stringify(((t={})[this.storageName]=n[this.storageName],t))),localStorage.setItem(this.storageKey,JSON.stringify(n)),this.setState({jsonData:r})}catch(e){}},t.prototype.deleteAll=function(){var e=this;this.setState({animationLoading:!0},(function(){return s(e,void 0,void 0,(function(){var e;return c(this,(function(t){switch(t.label){case 0:return(e=this.state.data)&&e.length?[4,S.default(this.storageName,[])]:[3,2];case 1:return t.sent(),P.default(this.translations.emptyListDone,0),this.setState({data:[],animationLoading:!1}),[3,3];case 2:this.setState({animationLoading:!1}),t.label=3;case 3:return[2]}}))}))}))},t.prototype.changeList=function(e,t,n){var r=this;this.setState({animationLoading:!0},(function(){return s(r,void 0,void 0,(function(){var r,o,i=this;return c(this,(function(a){switch(a.label){case 0:return r=this.state.data,o={error:!1,message:"",data:[]},n.length?("remove"==t&&e.target&&e.target.parentNode&&e.target.parentNode.parentNode&&e.target.parentNode.parentNode.classList.add("animation-back"),"add"!=t?[3,2]:[4,_.default(this.storageName,n)]):(P.default("Error while adding value to the current list "+this.listReadable+". Value cannot be an empty string",-1),[2,this.setState({animationLoading:!1})]);case 1:return o=a.sent(),[3,4];case 2:return[4,E.default(this.storageName,n)];case 3:o=a.sent(),a.label=4;case 4:return 1==o.error?(P.default(o.message,1),[2,this.setState({animationLoading:!1})]):(P.default(o.message,0),o.data&&(r=o.data),this.setState({inputValue:"",data:r,animationLoading:!1},(function(){i.setNewLocalStorageData(r)})),[2])}}))}))}))},t.prototype.setMessageCopyToClipBoard=function(){P.default(this.translations.copiedToClipBoard,0)},t.prototype.resetToDefault=function(){var e=this;this.setState({animationLoading:!0},(function(){browser.runtime.sendMessage({action:"set-list-hardcoded",list:e.storageName}).then((function(t){e.setState({data:t,animationLoading:!1})})).catch((function(t){P.default(t,-1),e.setState({animationLoading:!1})}))}))},t.prototype.getData=function(){var e=this,t=this.state.data,n=[];return t.map((function(t){n.push({name:t,copyToClipboardJsx:d.createElement("i",{className:"fas fa-clipboard clipboard",title:e.translations.action_title_copyToClipboard_single,onClick:function(n){x.default(n,t,document.documentElement.scrollTop),e.setMessageCopyToClipBoard()}}),removeJsx:d.createElement("i",{title:e.translations.action_title_delete_single,className:"fas fa-trash-alt delete",onClick:function(n){return e.changeList(n,"remove",t)}})})})),n},t.prototype.inputOnChangeCallback=function(e){},t.prototype.liOnClickCallback=function(e,t){},t.prototype.saveToFileJson=function(e){var t=this,n=this;e.persist(),e.target.classList.add("copied-remove"),setTimeout((function(){if(e.target.classList.remove("copied"),e.target.classList.remove("copied-remove"),t.state.jsonData)try{var r=new Blob([JSON.stringify(t.state.jsonData)],{type:"application/json;charset=utf-8"});f.saveAs(r,"NinjaProtect-"+n.storageName+".json")}catch(e){P.default("Error while creating Blob file. Error message: "+e+".",-1)}}),300)},t.prototype.render=function(){var e=this,t=this.state,n=t.animationLoading,r=t.data;return d.createElement("div",{className:"Blacklist flex flex-column"},n&&d.createElement(h.default,null),d.createElement("h1",{className:"h1-title"},d.createElement(p.Link,{className:"single-link-to-list",to:"security"},d.createElement("i",{className:"fas fa-chevron-left"})),this.translations[this.storageName]+" "+(r?"("+r.length+")":"")),d.createElement("div",{className:"actions"},d.createElement(p.Link,{title:this.translations.example,to:"security-examples",className:"button-action"},d.createElement("i",{className:"far fa-question-circle example-link"})),d.createElement("i",{title:"Export your custom list to json file",onClick:function(t){e.saveToFileJson(t)},className:"fas fa-file-signature button-action icon-iframes"}),d.createElement("i",{title:this.translations.restoreDefaultValue,onClick:function(t){return e.resetToDefault()},className:"far fa-registered button-action"}),d.createElement("i",{title:this.translations.action_title_deleteList,onClick:function(t){e.deleteAll()},className:"far fa-trash-alt button-action delete-all"})),d.createElement("h1",{className:"h1 ff-title"},this.translations.addNewEntryTitle),d.createElement("div",{className:"input-holder"},d.createElement("input",{className:"input",type:"text",onKeyDownCapture:function(t){return e.setInputValue(t,"add")},onChange:function(t){return e.setInputValue(t,"add")},value:this.state.inputValue,placeholder:this.translations.addPlaceholder}),d.createElement("span",{className:"icon",onClick:function(t){return e.changeList(t,"add",e.state.inputValue)}},"➕")),d.createElement(g.default,{data:this.getData(),itemsPerSite:this.state.itemsPerSite,displayTotal:!1,totalPrefix:"",displayPagesInfo:!0,paginationTextPrefix:this.translations.page,paginationTextMiddle:this.translations.of,paginationPagesToDisplay:3,displayPaginationPages:!0,alignPagination:1,alignPagesItems:2,display:["name","copyToClipboardJsx","removeJsx"],env:"prod",displayCount:!0,resetCountOnEachPage:!1,previousButton:"",nextButton:"",displaySearch:!0,searchPlaceholder:this.translations.searchPlaceholder,searchIcon:"",searchSensisitve:!1,searchOnKeys:["name"],searchValue:"",searchOnKeyDown:!0,searchTitle:this.translations.search,paginationTitle:this.translations.list,fallbackMounting:d.createElement(y.default,null),fallbackLoading:d.createElement(m.default,null),fallbackLoadingTime:100,fallbackNoData:d.createElement(b.default,null),fallbackNoDataSearch:d.createElement(v.default,null),inputOnChangeCallback:this.inputOnChangeCallback,liOnClickCallback:this.liOnClickCallback}),d.createElement("form",{style:{display:"none !important",opacity:0,position:"absolute",width:0,height:0,overflow:"hidden"}},d.createElement("textarea",{id:"copy-to-clipboard",value:"",readOnly:!0})))},t}(d.Component);t.default=z},function(e,t){e.exports=!1},function(e,t,n){var r=n(40)("meta"),o=n(5),i=n(18),a=n(10).f,l=0,s=Object.isExtensible||function(){return!0},c=!n(4)((function(){return s(Object.preventExtensions({}))})),u=function(e){a(e,r,{value:{i:"O"+ ++l,w:{}}})},d=e.exports={KEY:r,NEED:!1,fastKey:function(e,t){if(!o(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!i(e,r)){if(!s(e))return"F";if(!t)return"E";u(e)}return e[r].i},getWeak:function(e,t){if(!i(e,r)){if(!s(e))return!0;if(!t)return!1;u(e)}return e[r].w},onFreeze:function(e){return c&&d.NEED&&s(e)&&!i(e,r)&&u(e),e}}},function(e,t,n){var r=n(6)("unscopables"),o=Array.prototype;null==o[r]&&n(14)(o,r,{}),e.exports=function(e){o[r][e]=!0}},function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},function(e,t){var n=0,r=Math.random();e.exports=function(e){return"Symbol(".concat(void 0===e?"":e,")_",(++n+r).toString(36))}},function(e,t,n){var r=n(119),o=n(86);e.exports=Object.keys||function(e){return r(e,o)}},function(e,t,n){var r=n(25),o=Math.max,i=Math.min;e.exports=function(e,t){return(e=r(e))<0?o(e+t,0):i(e,t)}},function(e,t,n){var r=n(2),o=n(120),i=n(86),a=n(85)("IE_PROTO"),l=function(){},s=function(){var e,t=n(83)("iframe"),r=i.length;for(t.style.display="none",n(87).appendChild(t),t.src="javascript:",(e=t.contentWindow.document).open(),e.write("<script>document.F=Object<\/script>"),e.close(),s=e.F;r--;)delete s.prototype[i[r]];return s()};e.exports=Object.create||function(e,t){var n;return null!==e?(l.prototype=r(e),n=new l,l.prototype=null,n[a]=e):n=s(),void 0===t?n:o(n,t)}},function(e,t,n){var r=n(119),o=n(86).concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return r(e,o)}},function(e,t,n){"use strict";var r=n(3),o=n(10),i=n(8),a=n(6)("species");e.exports=function(e){var t=r[e];i&&t&&!t[a]&&o.f(t,a,{configurable:!0,get:function(){return this}})}},function(e,t){e.exports=function(e,t,n,r){if(!(e instanceof t)||void 0!==r&&r in e)throw TypeError(n+": incorrect invocation!");return e}},function(e,t,n){var r=n(23),o=n(132),i=n(98),a=n(2),l=n(7),s=n(100),c={},u={};(t=e.exports=function(e,t,n,d,f){var p,h,g,m,b=f?function(){return e}:s(e),v=r(n,d,t?2:1),y=0;if("function"!=typeof b)throw TypeError(e+" is not iterable!");if(i(b)){for(p=l(e.length);p>y;y++)if((m=t?v(a(h=e[y])[0],h[1]):v(e[y]))===c||m===u)return m}else for(g=b.call(e);!(h=g.next()).done;)if((m=o(g,v,h.value,t))===c||m===u)return m}).BREAK=c,t.RETURN=u},function(e,t,n){var r=n(15);e.exports=function(e,t,n){for(var o in t)r(e,o,t[o],n);return e}},function(e,t,n){var r=n(5);e.exports=function(e,t){if(!r(e)||e._t!==t)throw TypeError("Incompatible receiver, "+t+" required!");return e}},function(e,t,n){var r=n(10).f,o=n(18),i=n(6)("toStringTag");e.exports=function(e,t,n){e&&!o(e=n?e:e.prototype,i)&&r(e,i,{configurable:!0,value:t})}},function(e,t,n){var r=n(24),o=n(6)("toStringTag"),i="Arguments"==r(function(){return arguments}());e.exports=function(e){var t,n,a;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(e){}}(t=Object(e),o))?n:i?r(t):"Object"==(a=r(t))&&"function"==typeof t.callee?"Arguments":a}},function(e,t,n){var r=n(0),o=n(29),i=n(4),a=n(89),l="["+a+"]",s=RegExp("^"+l+l+"*"),c=RegExp(l+l+"*$"),u=function(e,t,n){var o={},l=i((function(){return!!a[e]()||"​"!="​"[e]()})),s=o[e]=l?t(d):a[e];n&&(o[n]=s),r(r.P+r.F*l,"String",o)},d=u.trim=function(e,t){return e=String(o(e)),1&t&&(e=e.replace(s,"")),2&t&&(e=e.replace(c,"")),e};e.exports=u},function(e,t){e.exports={}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.default=function(e,t){void 0===e&&(e=""),sessionStorage.setItem("messagesApp",JSON.stringify([{errorMessage:e,errorCode:t}]))}},function(e,t,n){var r=n(22),o=n(3),i=o["__core-js_shared__"]||(o["__core-js_shared__"]={});(e.exports=function(e,t){return i[e]||(i[e]=void 0!==t?t:{})})("versions",[]).push({version:r.version,mode:n(36)?"pure":"global",copyright:"© 2019 Denis Pushkarev (zloirock.ru)"})},function(e,t,n){var r=n(24);e.exports=Object("z").propertyIsEnumerable(0)?Object:function(e){return"String"==r(e)?e.split(""):Object(e)}},function(e,t){t.f={}.propertyIsEnumerable},function(e,t,n){"use strict";var r=n(2);e.exports=function(){var e=r(this),t="";return e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),e.unicode&&(t+="u"),e.sticky&&(t+="y"),t}},function(e,t,n){var r=n(2),o=n(13),i=n(6)("species");e.exports=function(e,t){var n,a=r(e).constructor;return void 0===a||null==(n=r(a)[i])?t:o(n)}},function(e,t,n){"use strict";n.r(t),n.d(t,"MemoryRouter",(function(){return F})),n.d(t,"Prompt",(function(){return U})),n.d(t,"Redirect",(function(){return K})),n.d(t,"Route",(function(){return Y})),n.d(t,"Router",(function(){return B})),n.d(t,"StaticRouter",(function(){return ne})),n.d(t,"Switch",(function(){return re})),n.d(t,"generatePath",(function(){return q})),n.d(t,"matchPath",(function(){return G})),n.d(t,"useHistory",(function(){return ae})),n.d(t,"useLocation",(function(){return le})),n.d(t,"useParams",(function(){return se})),n.d(t,"useRouteMatch",(function(){return ce})),n.d(t,"withRouter",(function(){return oe})),n.d(t,"BrowserRouter",(function(){return ue})),n.d(t,"HashRouter",(function(){return de})),n.d(t,"Link",(function(){return be})),n.d(t,"NavLink",(function(){return xe}));var r=n(17),o=n(1),i=n.n(o);n(61);function a(){return(a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function l(e){return"/"===e.charAt(0)}function s(e,t){for(var n=t,r=n+1,o=e.length;r<o;n+=1,r+=1)e[n]=e[r];e.pop()}var c=function(e,t){void 0===t&&(t="");var n,r=e&&e.split("/")||[],o=t&&t.split("/")||[],i=e&&l(e),a=t&&l(t),c=i||a;if(e&&l(e)?o=r:r.length&&(o.pop(),o=o.concat(r)),!o.length)return"/";if(o.length){var u=o[o.length-1];n="."===u||".."===u||""===u}else n=!1;for(var d=0,f=o.length;f>=0;f--){var p=o[f];"."===p?s(o,f):".."===p?(s(o,f),d++):d&&(s(o,f),d--)}if(!c)for(;d--;d)o.unshift("..");!c||""===o[0]||o[0]&&l(o[0])||o.unshift("");var h=o.join("/");return n&&"/"!==h.substr(-1)&&(h+="/"),h};function u(e){return e.valueOf?e.valueOf():Object.prototype.valueOf.call(e)}var d=function e(t,n){if(t===n)return!0;if(null==t||null==n)return!1;if(Array.isArray(t))return Array.isArray(n)&&t.length===n.length&&t.every((function(t,r){return e(t,n[r])}));if("object"==typeof t||"object"==typeof n){var r=u(t),o=u(n);return r!==t||o!==n?e(r,o):Object.keys(Object.assign({},t,n)).every((function(r){return e(t[r],n[r])}))}return!1};var f=function(e,t){if(!e)throw new Error("Invariant failed")};function p(e){return"/"===e.charAt(0)?e:"/"+e}function h(e){return"/"===e.charAt(0)?e.substr(1):e}function g(e,t){return function(e,t){return 0===e.toLowerCase().indexOf(t.toLowerCase())&&-1!=="/?#".indexOf(e.charAt(t.length))}(e,t)?e.substr(t.length):e}function m(e){return"/"===e.charAt(e.length-1)?e.slice(0,-1):e}function b(e){var t=e.pathname,n=e.search,r=e.hash,o=t||"/";return n&&"?"!==n&&(o+="?"===n.charAt(0)?n:"?"+n),r&&"#"!==r&&(o+="#"===r.charAt(0)?r:"#"+r),o}function v(e,t,n,r){var o;"string"==typeof e?(o=function(e){var t=e||"/",n="",r="",o=t.indexOf("#");-1!==o&&(r=t.substr(o),t=t.substr(0,o));var i=t.indexOf("?");return-1!==i&&(n=t.substr(i),t=t.substr(0,i)),{pathname:t,search:"?"===n?"":n,hash:"#"===r?"":r}}(e)).state=t:(void 0===(o=a({},e)).pathname&&(o.pathname=""),o.search?"?"!==o.search.charAt(0)&&(o.search="?"+o.search):o.search="",o.hash?"#"!==o.hash.charAt(0)&&(o.hash="#"+o.hash):o.hash="",void 0!==t&&void 0===o.state&&(o.state=t));try{o.pathname=decodeURI(o.pathname)}catch(e){throw e instanceof URIError?new URIError('Pathname "'+o.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):e}return n&&(o.key=n),r?o.pathname?"/"!==o.pathname.charAt(0)&&(o.pathname=c(o.pathname,r.pathname)):o.pathname=r.pathname:o.pathname||(o.pathname="/"),o}function y(){var e=null;var t=[];return{setPrompt:function(t){return e=t,function(){e===t&&(e=null)}},confirmTransitionTo:function(t,n,r,o){if(null!=e){var i="function"==typeof e?e(t,n):e;"string"==typeof i?"function"==typeof r?r(i,o):o(!0):o(!1!==i)}else o(!0)},appendListener:function(e){var n=!0;function r(){n&&e.apply(void 0,arguments)}return t.push(r),function(){n=!1,t=t.filter((function(e){return e!==r}))}},notifyListeners:function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];t.forEach((function(e){return e.apply(void 0,n)}))}}}var x=!("undefined"==typeof window||!window.document||!window.document.createElement);function w(e,t){t(window.confirm(e))}function k(){try{return window.history.state||{}}catch(e){return{}}}function _(e){void 0===e&&(e={}),x||f(!1);var t,n=window.history,r=(-1===(t=window.navigator.userAgent).indexOf("Android 2.")&&-1===t.indexOf("Android 4.0")||-1===t.indexOf("Mobile Safari")||-1!==t.indexOf("Chrome")||-1!==t.indexOf("Windows Phone"))&&window.history&&"pushState"in window.history,o=!(-1===window.navigator.userAgent.indexOf("Trident")),i=e,l=i.forceRefresh,s=void 0!==l&&l,c=i.getUserConfirmation,u=void 0===c?w:c,d=i.keyLength,h=void 0===d?6:d,_=e.basename?m(p(e.basename)):"";function E(e){var t=e||{},n=t.key,r=t.state,o=window.location,i=o.pathname+o.search+o.hash;return _&&(i=g(i,_)),v(i,r,n)}function S(){return Math.random().toString(36).substr(2,h)}var P=y();function z(e){a(B,e),B.length=n.length,P.notifyListeners(B.location,B.action)}function M(e){(function(e){return void 0===e.state&&-1===navigator.userAgent.indexOf("CriOS")})(e)||T(E(e.state))}function C(){T(E(k()))}var O=!1;function T(e){if(O)O=!1,z();else{P.confirmTransitionTo(e,"POP",u,(function(t){t?z({action:"POP",location:e}):function(e){var t=B.location,n=D.indexOf(t.key);-1===n&&(n=0);var r=D.indexOf(e.key);-1===r&&(r=0);var o=n-r;o&&(O=!0,I(o))}(e)}))}}var N=E(k()),D=[N.key];function j(e){return _+b(e)}function I(e){n.go(e)}var L=0;function A(e){1===(L+=e)&&1===e?(window.addEventListener("popstate",M),o&&window.addEventListener("hashchange",C)):0===L&&(window.removeEventListener("popstate",M),o&&window.removeEventListener("hashchange",C))}var R=!1;var B={length:n.length,action:"POP",location:N,createHref:j,push:function(e,t){var o=v(e,t,S(),B.location);P.confirmTransitionTo(o,"PUSH",u,(function(e){if(e){var t=j(o),i=o.key,a=o.state;if(r)if(n.pushState({key:i,state:a},null,t),s)window.location.href=t;else{var l=D.indexOf(B.location.key),c=D.slice(0,l+1);c.push(o.key),D=c,z({action:"PUSH",location:o})}else window.location.href=t}}))},replace:function(e,t){var o=v(e,t,S(),B.location);P.confirmTransitionTo(o,"REPLACE",u,(function(e){if(e){var t=j(o),i=o.key,a=o.state;if(r)if(n.replaceState({key:i,state:a},null,t),s)window.location.replace(t);else{var l=D.indexOf(B.location.key);-1!==l&&(D[l]=o.key),z({action:"REPLACE",location:o})}else window.location.replace(t)}}))},go:I,goBack:function(){I(-1)},goForward:function(){I(1)},block:function(e){void 0===e&&(e=!1);var t=P.setPrompt(e);return R||(A(1),R=!0),function(){return R&&(R=!1,A(-1)),t()}},listen:function(e){var t=P.appendListener(e);return A(1),function(){A(-1),t()}}};return B}var E={hashbang:{encodePath:function(e){return"!"===e.charAt(0)?e:"!/"+h(e)},decodePath:function(e){return"!"===e.charAt(0)?e.substr(1):e}},noslash:{encodePath:h,decodePath:p},slash:{encodePath:p,decodePath:p}};function S(e){var t=e.indexOf("#");return-1===t?e:e.slice(0,t)}function P(){var e=window.location.href,t=e.indexOf("#");return-1===t?"":e.substring(t+1)}function z(e){window.location.replace(S(window.location.href)+"#"+e)}function M(e){void 0===e&&(e={}),x||f(!1);var t=window.history,n=(window.navigator.userAgent.indexOf("Firefox"),e),r=n.getUserConfirmation,o=void 0===r?w:r,i=n.hashType,l=void 0===i?"slash":i,s=e.basename?m(p(e.basename)):"",c=E[l],u=c.encodePath,d=c.decodePath;function h(){var e=d(P());return s&&(e=g(e,s)),v(e)}var k=y();function _(e){a(B,e),B.length=t.length,k.notifyListeners(B.location,B.action)}var M=!1,C=null;function O(){var e,t,n=P(),r=u(n);if(n!==r)z(r);else{var i=h(),a=B.location;if(!M&&(t=i,(e=a).pathname===t.pathname&&e.search===t.search&&e.hash===t.hash))return;if(C===b(i))return;C=null,function(e){if(M)M=!1,_();else{k.confirmTransitionTo(e,"POP",o,(function(t){t?_({action:"POP",location:e}):function(e){var t=B.location,n=j.lastIndexOf(b(t));-1===n&&(n=0);var r=j.lastIndexOf(b(e));-1===r&&(r=0);var o=n-r;o&&(M=!0,I(o))}(e)}))}}(i)}}var T=P(),N=u(T);T!==N&&z(N);var D=h(),j=[b(D)];function I(e){t.go(e)}var L=0;function A(e){1===(L+=e)&&1===e?window.addEventListener("hashchange",O):0===L&&window.removeEventListener("hashchange",O)}var R=!1;var B={length:t.length,action:"POP",location:D,createHref:function(e){var t=document.querySelector("base"),n="";return t&&t.getAttribute("href")&&(n=S(window.location.href)),n+"#"+u(s+b(e))},push:function(e,t){var n=v(e,void 0,void 0,B.location);k.confirmTransitionTo(n,"PUSH",o,(function(e){if(e){var t=b(n),r=u(s+t);if(P()!==r){C=t,function(e){window.location.hash=e}(r);var o=j.lastIndexOf(b(B.location)),i=j.slice(0,o+1);i.push(t),j=i,_({action:"PUSH",location:n})}else _()}}))},replace:function(e,t){var n=v(e,void 0,void 0,B.location);k.confirmTransitionTo(n,"REPLACE",o,(function(e){if(e){var t=b(n),r=u(s+t);P()!==r&&(C=t,z(r));var o=j.indexOf(b(B.location));-1!==o&&(j[o]=t),_({action:"REPLACE",location:n})}}))},go:I,goBack:function(){I(-1)},goForward:function(){I(1)},block:function(e){void 0===e&&(e=!1);var t=k.setPrompt(e);return R||(A(1),R=!0),function(){return R&&(R=!1,A(-1)),t()}},listen:function(e){var t=k.appendListener(e);return A(1),function(){A(-1),t()}}};return B}function C(e,t,n){return Math.min(Math.max(e,t),n)}function O(e){void 0===e&&(e={});var t=e,n=t.getUserConfirmation,r=t.initialEntries,o=void 0===r?["/"]:r,i=t.initialIndex,l=void 0===i?0:i,s=t.keyLength,c=void 0===s?6:s,u=y();function d(e){a(x,e),x.length=x.entries.length,u.notifyListeners(x.location,x.action)}function f(){return Math.random().toString(36).substr(2,c)}var p=C(l,0,o.length-1),h=o.map((function(e){return v(e,void 0,"string"==typeof e?f():e.key||f())})),g=b;function m(e){var t=C(x.index+e,0,x.entries.length-1),r=x.entries[t];u.confirmTransitionTo(r,"POP",n,(function(e){e?d({action:"POP",location:r,index:t}):d()}))}var x={length:h.length,action:"POP",location:h[p],index:p,entries:h,createHref:g,push:function(e,t){var r=v(e,t,f(),x.location);u.confirmTransitionTo(r,"PUSH",n,(function(e){if(e){var t=x.index+1,n=x.entries.slice(0);n.length>t?n.splice(t,n.length-t,r):n.push(r),d({action:"PUSH",location:r,index:t,entries:n})}}))},replace:function(e,t){var r=v(e,t,f(),x.location);u.confirmTransitionTo(r,"REPLACE",n,(function(e){e&&(x.entries[x.index]=r,d({action:"REPLACE",location:r}))}))},go:m,goBack:function(){m(-1)},goForward:function(){m(1)},canGo:function(e){var t=x.index+e;return t>=0&&t<x.entries.length},block:function(e){return void 0===e&&(e=!1),u.setPrompt(e)},listen:function(e){return u.appendListener(e)}};return x}var T=n(115),N=n(116),D=n.n(N);n(154);function j(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}var I=n(167),L=n.n(I),A=function(e){var t=Object(T.a)();return t.displayName=e,t}("Router-History"),R=function(e){var t=Object(T.a)();return t.displayName=e,t}("Router"),B=function(e){function t(t){var n;return(n=e.call(this,t)||this).state={location:t.history.location},n._isMounted=!1,n._pendingLocation=null,t.staticContext||(n.unlisten=t.history.listen((function(e){n._isMounted?n.setState({location:e}):n._pendingLocation=e}))),n}Object(r.a)(t,e),t.computeRootMatch=function(e){return{path:"/",url:"/",params:{},isExact:"/"===e}};var n=t.prototype;return n.componentDidMount=function(){this._isMounted=!0,this._pendingLocation&&this.setState({location:this._pendingLocation})},n.componentWillUnmount=function(){this.unlisten&&this.unlisten()},n.render=function(){return i.a.createElement(R.Provider,{value:{history:this.props.history,location:this.state.location,match:t.computeRootMatch(this.state.location.pathname),staticContext:this.props.staticContext}},i.a.createElement(A.Provider,{children:this.props.children||null,value:this.props.history}))},t}(i.a.Component);var F=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return(t=e.call.apply(e,[this].concat(r))||this).history=O(t.props),t}return Object(r.a)(t,e),t.prototype.render=function(){return i.a.createElement(B,{history:this.history,children:this.props.children})},t}(i.a.Component);var W=function(e){function t(){return e.apply(this,arguments)||this}Object(r.a)(t,e);var n=t.prototype;return n.componentDidMount=function(){this.props.onMount&&this.props.onMount.call(this,this)},n.componentDidUpdate=function(e){this.props.onUpdate&&this.props.onUpdate.call(this,this,e)},n.componentWillUnmount=function(){this.props.onUnmount&&this.props.onUnmount.call(this,this)},n.render=function(){return null},t}(i.a.Component);function U(e){var t=e.message,n=e.when,r=void 0===n||n;return i.a.createElement(R.Consumer,null,(function(e){if(e||f(!1),!r||e.staticContext)return null;var n=e.history.block;return i.a.createElement(W,{onMount:function(e){e.release=n(t)},onUpdate:function(e,r){r.message!==t&&(e.release(),e.release=n(t))},onUnmount:function(e){e.release()},message:t})}))}var H={},V=0;function q(e,t){return void 0===e&&(e="/"),void 0===t&&(t={}),"/"===e?e:function(e){if(H[e])return H[e];var t=D.a.compile(e);return V<1e4&&(H[e]=t,V++),t}(e)(t,{pretty:!0})}function K(e){var t=e.computedMatch,n=e.to,r=e.push,o=void 0!==r&&r;return i.a.createElement(R.Consumer,null,(function(e){e||f(!1);var r=e.history,l=e.staticContext,s=o?r.push:r.replace,c=v(t?"string"==typeof n?q(n,t.params):a({},n,{pathname:q(n.pathname,t.params)}):n);return l?(s(c),null):i.a.createElement(W,{onMount:function(){s(c)},onUpdate:function(e,t){var n,r,o=v(t.to);n=o,r=a({},c,{key:o.key}),n.pathname===r.pathname&&n.search===r.search&&n.hash===r.hash&&n.key===r.key&&d(n.state,r.state)||s(c)},to:n})}))}var $={},J=0;function G(e,t){void 0===t&&(t={}),("string"==typeof t||Array.isArray(t))&&(t={path:t});var n=t,r=n.path,o=n.exact,i=void 0!==o&&o,a=n.strict,l=void 0!==a&&a,s=n.sensitive,c=void 0!==s&&s;return[].concat(r).reduce((function(t,n){if(!n&&""!==n)return null;if(t)return t;var r=function(e,t){var n=""+t.end+t.strict+t.sensitive,r=$[n]||($[n]={});if(r[e])return r[e];var o=[],i={regexp:D()(e,o,t),keys:o};return J<1e4&&(r[e]=i,J++),i}(n,{end:i,strict:l,sensitive:c}),o=r.regexp,a=r.keys,s=o.exec(e);if(!s)return null;var u=s[0],d=s.slice(1),f=e===u;return i&&!f?null:{path:n,url:"/"===n&&""===u?"/":u,isExact:f,params:a.reduce((function(e,t,n){return e[t.name]=d[n],e}),{})}}),null)}var Y=function(e){function t(){return e.apply(this,arguments)||this}return Object(r.a)(t,e),t.prototype.render=function(){var e=this;return i.a.createElement(R.Consumer,null,(function(t){t||f(!1);var n=e.props.location||t.location,r=a({},t,{location:n,match:e.props.computedMatch?e.props.computedMatch:e.props.path?G(n.pathname,e.props):t.match}),o=e.props,l=o.children,s=o.component,c=o.render;return Array.isArray(l)&&0===l.length&&(l=null),i.a.createElement(R.Provider,{value:r},r.match?l?"function"==typeof l?l(r):l:s?i.a.createElement(s,r):c?c(r):null:"function"==typeof l?l(r):null)}))},t}(i.a.Component);function Z(e){return"/"===e.charAt(0)?e:"/"+e}function Q(e,t){if(!e)return t;var n=Z(e);return 0!==t.pathname.indexOf(n)?t:a({},t,{pathname:t.pathname.substr(n.length)})}function X(e){return"string"==typeof e?e:b(e)}function ee(e){return function(){f(!1)}}function te(){}var ne=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return(t=e.call.apply(e,[this].concat(r))||this).handlePush=function(e){return t.navigateTo(e,"PUSH")},t.handleReplace=function(e){return t.navigateTo(e,"REPLACE")},t.handleListen=function(){return te},t.handleBlock=function(){return te},t}Object(r.a)(t,e);var n=t.prototype;return n.navigateTo=function(e,t){var n=this.props,r=n.basename,o=void 0===r?"":r,i=n.context,l=void 0===i?{}:i;l.action=t,l.location=function(e,t){return e?a({},t,{pathname:Z(e)+t.pathname}):t}(o,v(e)),l.url=X(l.location)},n.render=function(){var e=this.props,t=e.basename,n=void 0===t?"":t,r=e.context,o=void 0===r?{}:r,l=e.location,s=void 0===l?"/":l,c=j(e,["basename","context","location"]),u={createHref:function(e){return Z(n+X(e))},action:"POP",location:Q(n,v(s)),push:this.handlePush,replace:this.handleReplace,go:ee(),goBack:ee(),goForward:ee(),listen:this.handleListen,block:this.handleBlock};return i.a.createElement(B,a({},c,{history:u,staticContext:o}))},t}(i.a.Component);var re=function(e){function t(){return e.apply(this,arguments)||this}return Object(r.a)(t,e),t.prototype.render=function(){var e=this;return i.a.createElement(R.Consumer,null,(function(t){t||f(!1);var n,r,o=e.props.location||t.location;return i.a.Children.forEach(e.props.children,(function(e){if(null==r&&i.a.isValidElement(e)){n=e;var l=e.props.path||e.props.from;r=l?G(o.pathname,a({},e.props,{path:l})):t.match}})),r?i.a.cloneElement(n,{location:o,computedMatch:r}):null}))},t}(i.a.Component);function oe(e){var t="withRouter("+(e.displayName||e.name)+")",n=function(t){var n=t.wrappedComponentRef,r=j(t,["wrappedComponentRef"]);return i.a.createElement(R.Consumer,null,(function(t){return t||f(!1),i.a.createElement(e,a({},r,t,{ref:n}))}))};return n.displayName=t,n.WrappedComponent=e,L()(n,e)}var ie=i.a.useContext;function ae(){return ie(A)}function le(){return ie(R).location}function se(){var e=ie(R).match;return e?e.params:{}}function ce(e){var t=le(),n=ie(R).match;return e?G(t.pathname,e):n}var ue=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return(t=e.call.apply(e,[this].concat(r))||this).history=_(t.props),t}return Object(r.a)(t,e),t.prototype.render=function(){return i.a.createElement(B,{history:this.history,children:this.props.children})},t}(i.a.Component);var de=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return(t=e.call.apply(e,[this].concat(r))||this).history=M(t.props),t}return Object(r.a)(t,e),t.prototype.render=function(){return i.a.createElement(B,{history:this.history,children:this.props.children})},t}(i.a.Component);var fe=function(e,t){return"function"==typeof e?e(t):e},pe=function(e,t){return"string"==typeof e?v(e,null,null,t):e},he=function(e){return e},ge=i.a.forwardRef;void 0===ge&&(ge=he);var me=ge((function(e,t){var n=e.innerRef,r=e.navigate,o=e.onClick,l=j(e,["innerRef","navigate","onClick"]),s=l.target,c=a({},l,{onClick:function(e){try{o&&o(e)}catch(t){throw e.preventDefault(),t}e.defaultPrevented||0!==e.button||s&&"_self"!==s||function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(e)||(e.preventDefault(),r())}});return c.ref=he!==ge&&t||n,i.a.createElement("a",c)}));var be=ge((function(e,t){var n=e.component,r=void 0===n?me:n,o=e.replace,l=e.to,s=e.innerRef,c=j(e,["component","replace","to","innerRef"]);return i.a.createElement(R.Consumer,null,(function(e){e||f(!1);var n=e.history,u=pe(fe(l,e.location),e.location),d=u?n.createHref(u):"",p=a({},c,{href:d,navigate:function(){var t=fe(l,e.location);(o?n.replace:n.push)(t)}});return he!==ge?p.ref=t||s:p.innerRef=s,i.a.createElement(r,p)}))})),ve=function(e){return e},ye=i.a.forwardRef;void 0===ye&&(ye=ve);var xe=ye((function(e,t){var n=e["aria-current"],r=void 0===n?"page":n,o=e.activeClassName,l=void 0===o?"active":o,s=e.activeStyle,c=e.className,u=e.exact,d=e.isActive,p=e.location,h=e.sensitive,g=e.strict,m=e.style,b=e.to,v=e.innerRef,y=j(e,["aria-current","activeClassName","activeStyle","className","exact","isActive","location","sensitive","strict","style","to","innerRef"]);return i.a.createElement(R.Consumer,null,(function(e){e||f(!1);var n=p||e.location,o=pe(fe(b,n),n),x=o.pathname,w=x&&x.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1"),k=w?G(n.pathname,{path:w,exact:u,sensitive:h,strict:g}):null,_=!!(d?d(k,n):k),E=_?function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.filter((function(e){return e})).join(" ")}(c,l):c,S=_?a({},m,{},s):m,P=a({"aria-current":_&&r||null,className:E,style:S,to:o},y);return ve!==ye?P.ref=t||v:P.innerRef=v,i.a.createElement(be,P)}))}))},function(e,t,n){e.exports=n(373)()},function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t,n){var r=n(19),o=n(7),i=n(42);e.exports=function(e){return function(t,n,a){var l,s=r(t),c=o(s.length),u=i(a,c);if(e&&n!=n){for(;c>u;)if((l=s[u++])!=l)return!0}else for(;c>u;u++)if((e||u in s)&&s[u]===n)return e||u||0;return!e&&-1}}},function(e,t){t.f=Object.getOwnPropertySymbols},function(e,t,n){var r=n(24);e.exports=Array.isArray||function(e){return"Array"==r(e)}},function(e,t,n){var r=n(25),o=n(29);e.exports=function(e){return function(t,n){var i,a,l=String(o(t)),s=r(n),c=l.length;return s<0||s>=c?e?"":void 0:(i=l.charCodeAt(s))<55296||i>56319||s+1===c||(a=l.charCodeAt(s+1))<56320||a>57343?e?l.charAt(s):i:e?l.slice(s,s+2):a-56320+(i-55296<<10)+65536}}},function(e,t,n){var r=n(5),o=n(24),i=n(6)("match");e.exports=function(e){var t;return r(e)&&(void 0!==(t=e[i])?!!t:"RegExp"==o(e))}},function(e,t,n){var r=n(6)("iterator"),o=!1;try{var i=[7][r]();i.return=function(){o=!0},Array.from(i,(function(){throw 2}))}catch(e){}e.exports=function(e,t){if(!t&&!o)return!1;var n=!1;try{var i=[7],a=i[r]();a.next=function(){return{done:n=!0}},i[r]=function(){return a},e(i)}catch(e){}return n}},function(e,t,n){"use strict";var r=n(51),o=RegExp.prototype.exec;e.exports=function(e,t){var n=e.exec;if("function"==typeof n){var i=n.call(e,t);if("object"!=typeof i)throw new TypeError("RegExp exec method returned something other than an Object or null");return i}if("RegExp"!==r(e))throw new TypeError("RegExp#exec called on incompatible receiver");return o.call(e,t)}},function(e,t,n){"use strict";n(136);var r=n(15),o=n(14),i=n(4),a=n(29),l=n(6),s=n(104),c=l("species"),u=!i((function(){var e=/./;return e.exec=function(){var e=[];return e.groups={a:"7"},e},"7"!=="".replace(e,"$<a>")})),d=function(){var e=/(?:)/,t=e.exec;e.exec=function(){return t.apply(this,arguments)};var n="ab".split(e);return 2===n.length&&"a"===n[0]&&"b"===n[1]}();e.exports=function(e,t,n){var f=l(e),p=!i((function(){var t={};return t[f]=function(){return 7},7!=""[e](t)})),h=p?!i((function(){var t=!1,n=/a/;return n.exec=function(){return t=!0,null},"split"===e&&(n.constructor={},n.constructor[c]=function(){return n}),n[f](""),!t})):void 0;if(!p||!h||"replace"===e&&!u||"split"===e&&!d){var g=/./[f],m=n(a,f,""[e],(function(e,t,n,r,o){return t.exec===s?p&&!o?{done:!0,value:g.call(t,n,r)}:{done:!0,value:e.call(n,t,r)}:{done:!1}})),b=m[0],v=m[1];r(String.prototype,e,b),o(RegExp.prototype,f,2==t?function(e,t){return v.call(e,this,t)}:function(e){return v.call(e,this)})}}},function(e,t,n){var r=n(3).navigator;e.exports=r&&r.userAgent||""},function(e,t,n){"use strict";var r=n(3),o=n(0),i=n(15),a=n(48),l=n(37),s=n(47),c=n(46),u=n(5),d=n(4),f=n(68),p=n(50),h=n(90);e.exports=function(e,t,n,g,m,b){var v=r[e],y=v,x=m?"set":"add",w=y&&y.prototype,k={},_=function(e){var t=w[e];i(w,e,"delete"==e||"has"==e?function(e){return!(b&&!u(e))&&t.call(this,0===e?0:e)}:"get"==e?function(e){return b&&!u(e)?void 0:t.call(this,0===e?0:e)}:"add"==e?function(e){return t.call(this,0===e?0:e),this}:function(e,n){return t.call(this,0===e?0:e,n),this})};if("function"==typeof y&&(b||w.forEach&&!d((function(){(new y).entries().next()})))){var E=new y,S=E[x](b?{}:-0,1)!=E,P=d((function(){E.has(1)})),z=f((function(e){new y(e)})),M=!b&&d((function(){for(var e=new y,t=5;t--;)e[x](t,t);return!e.has(-0)}));z||((y=t((function(t,n){c(t,y,e);var r=h(new v,t,y);return null!=n&&s(n,m,r[x],r),r}))).prototype=w,w.constructor=y),(P||M)&&(_("delete"),_("has"),m&&_("get")),(M||S)&&_(x),b&&w.clear&&delete w.clear}else y=g.getConstructor(t,e,m,x),a(y.prototype,n),l.NEED=!0;return p(y,e),k[e]=y,o(o.G+o.W+o.F*(y!=v),k),b||g.setStrong(y,e,m),y}},function(e,t,n){for(var r,o=n(3),i=n(14),a=n(40),l=a("typed_array"),s=a("view"),c=!(!o.ArrayBuffer||!o.DataView),u=c,d=0,f="Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array".split(",");d<9;)(r=o[f[d++]])?(i(r.prototype,l,!0),i(r.prototype,s,!0)):u=!1;e.exports={ABV:c,CONSTR:u,TYPED:l,VIEW:s}},function(e,t,n){"use strict";e.exports=n(36)||!n(4)((function(){var e=Math.random();__defineSetter__.call(null,e,(function(){})),delete n(3)[e]}))},function(e,t,n){"use strict";var r=n(0);e.exports=function(e){r(r.S,e,{of:function(){for(var e=arguments.length,t=new Array(e);e--;)t[e]=arguments[e];return new this(t)}})}},function(e,t,n){"use strict";var r=n(0),o=n(13),i=n(23),a=n(47);e.exports=function(e){r(r.S,e,{from:function(e){var t,n,r,l,s=arguments[1];return o(this),(t=void 0!==s)&&o(s),null==e?new this:(n=[],t?(r=0,l=i(s,arguments[2],2),a(e,!1,(function(e){n.push(l(e,r++))}))):a(e,!1,n.push,n),new this(n))}})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.default=function(e,t,n){var r=!1;return e.map((function(e){n[e]!==t[e]&&(r=!0)})),r}},function(e,t,n){"use strict";var r,o=function(){return void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r},i=function(){var e={};return function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}e[t]=n}return e[t]}}(),a=[];function l(e){for(var t=-1,n=0;n<a.length;n++)if(a[n].identifier===e){t=n;break}return t}function s(e,t){for(var n={},r=[],o=0;o<e.length;o++){var i=e[o],s=t.base?i[0]+t.base:i[0],c=n[s]||0,u="".concat(s," ").concat(c);n[s]=c+1;var d=l(u),f={css:i[1],media:i[2],sourceMap:i[3]};-1!==d?(a[d].references++,a[d].updater(f)):a.push({identifier:u,updater:m(f,t),references:1}),r.push(u)}return r}function c(e){var t=document.createElement("style"),r=e.attributes||{};if(void 0===r.nonce){var o=n.nc;o&&(r.nonce=o)}if(Object.keys(r).forEach((function(e){t.setAttribute(e,r[e])})),"function"==typeof e.insert)e.insert(t);else{var a=i(e.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}return t}var u,d=(u=[],function(e,t){return u[e]=t,u.filter(Boolean).join("\n")});function f(e,t,n,r){var o=n?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(e.styleSheet)e.styleSheet.cssText=d(t,o);else{var i=document.createTextNode(o),a=e.childNodes;a[t]&&e.removeChild(a[t]),a.length?e.insertBefore(i,a[t]):e.appendChild(i)}}function p(e,t,n){var r=n.css,o=n.media,i=n.sourceMap;if(o?e.setAttribute("media",o):e.removeAttribute("media"),i&&btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleSheet)e.styleSheet.cssText=r;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(r))}}var h=null,g=0;function m(e,t){var n,r,o;if(t.singleton){var i=g++;n=h||(h=c(t)),r=f.bind(null,n,i,!1),o=f.bind(null,n,i,!0)}else n=c(t),r=p.bind(null,n,t),o=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)};return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else o()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=o());var n=s(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var r=0;r<n.length;r++){var o=l(n[r]);a[o].references--}for(var i=s(e,t),c=0;c<n.length;c++){var u=l(n[c]);0===a[u].references&&(a[u].updater(),a.splice(u,1))}n=i}}}},function(e,t,n){"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=function(e,t){var n=e[1]||"",r=e[3];if(!r)return n;if(t&&"function"==typeof btoa){var o=(a=r,l=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),s="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(l),"/*# ".concat(s," */")),i=r.sources.map((function(e){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(e," */")}));return[n].concat(i).concat([o]).join("\n")}var a,l,s;return[n].join("\n")}(t,e);return t[2]?"@media ".concat(t[2]," {").concat(n,"}"):n})).join("")},t.i=function(e,n,r){"string"==typeof e&&(e=[[null,e,""]]);var o={};if(r)for(var i=0;i<this.length;i++){var a=this[i][0];null!=a&&(o[a]=!0)}for(var l=0;l<e.length;l++){var s=[].concat(e[l]);r&&o[s[0]]||(n&&(s[2]?s[2]="".concat(n," and ").concat(s[2]):s[2]=n),t.push(s))}},t}},function(e,t,n){(function(n){var r,o,i;o=[],void 0===(i="function"==typeof(r=function(){"use strict";function t(e,t,n){var r=new XMLHttpRequest;r.open("GET",e),r.responseType="blob",r.onload=function(){a(r.response,t,n)},r.onerror=function(){console.error("could not download file")},r.send()}function r(e){var t=new XMLHttpRequest;t.open("HEAD",e,!1);try{t.send()}catch(e){}return 200<=t.status&&299>=t.status}function o(e){try{e.dispatchEvent(new MouseEvent("click"))}catch(n){var t=document.createEvent("MouseEvents");t.initMouseEvent("click",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),e.dispatchEvent(t)}}var i="object"==typeof window&&window.window===window?window:"object"==typeof self&&self.self===self?self:"object"==typeof n&&n.global===n?n:void 0,a=i.saveAs||("object"!=typeof window||window!==i?function(){}:"download"in HTMLAnchorElement.prototype?function(e,n,a){var l=i.URL||i.webkitURL,s=document.createElement("a");n=n||e.name||"download",s.download=n,s.rel="noopener","string"==typeof e?(s.href=e,s.origin===location.origin?o(s):r(s.href)?t(e,n,a):o(s,s.target="_blank")):(s.href=l.createObjectURL(e),setTimeout((function(){l.revokeObjectURL(s.href)}),4e4),setTimeout((function(){o(s)}),0))}:"msSaveOrOpenBlob"in navigator?function(e,n,i){if(n=n||e.name||"download","string"!=typeof e)navigator.msSaveOrOpenBlob(function(e,t){return void 0===t?t={autoBom:!1}:"object"!=typeof t&&(console.warn("Deprecated: Expected third argument to be a object"),t={autoBom:!t}),t.autoBom&&/^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(e.type)?new Blob(["\ufeff",e],{type:e.type}):e}(e,i),n);else if(r(e))t(e,n,i);else{var a=document.createElement("a");a.href=e,a.target="_blank",setTimeout((function(){o(a)}))}}:function(e,n,r,o){if((o=o||open("","_blank"))&&(o.document.title=o.document.body.innerText="downloading..."),"string"==typeof e)return t(e,n,r);var a="application/octet-stream"===e.type,l=/constructor/i.test(i.HTMLElement)||i.safari,s=/CriOS\/[\d]+/.test(navigator.userAgent);if((s||a&&l)&&"object"==typeof FileReader){var c=new FileReader;c.onloadend=function(){var e=c.result;e=s?e:e.replace(/^data:[^;]*;/,"data:attachment/file;"),o?o.location.href=e:location=e,o=null},c.readAsDataURL(e)}else{var u=i.URL||i.webkitURL,d=u.createObjectURL(e);o?o.location=d:location.href=d,o=null,setTimeout((function(){u.revokeObjectURL(d)}),4e4)}});i.saveAs=a.saveAs=a,e.exports=a})?r.apply(t,o):r)||(e.exports=i)}).call(this,n(62))},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),l=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&i(t,e,n);return a(t,e),t},s=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(o,i){function a(e){try{s(r.next(e))}catch(e){i(e)}}function l(e){try{s(r.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,l)}s((r=r.apply(e,t||[])).next())}))},c=this&&this.__generator||function(e,t){var n,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function l(i){return function(l){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!(o=a.trys,(o=o.length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=t.call(e,a)}catch(e){i=[6,e],r=0}finally{n=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,l])}}},u=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var d=l(n(1)),f=l(n(80)),p=n(60),h=u(n(111)),g=u(n(9)),m=u(n(162)),b=u(n(163)),v=u(n(164)),y=u(n(165)),x=u(n(166)),w=u(n(157)),k=u(n(158)),_=u(n(159)),E=u(n(160)),S=u(n(161)),P=u(n(32)),z=u(n(54)),M=function(e){function t(t){var n=e.call(this,t)||this;return n.changeList=n.changeList.bind(n),n.setInputValue=n.setInputValue.bind(n),n.setInputValueDomain=n.setInputValueDomain.bind(n),n.setInputValueTagname=n.setInputValueTagname.bind(n),n.setNewLocalStorageData=n.setNewLocalStorageData.bind(n),n.deleteAll=n.deleteAll.bind(n),n.state={data:[],inputValue:"",inputValueTagname:"",inputValueDomain:"",messages:[],animationLoading:!0,jsonData:{},currentItems:20,itemsPerSite:20},n.translations=g.default(),n.storageName=n.props.storageName,n.listReadable=n.translations[n.storageName],n.storageKey="BLACKLIST",n}return o(t,e),t.prototype.componentDidMount=function(){s(this,void 0,void 0,(function(){var e,t,n,r;return c(this,(function(o){switch(o.label){case 0:return n={},t=this.storageName,[4,m.default(this.storageName)];case 1:n[t]=o.sent(),e=n;try{e=e[this.storageName]?e[this.storageName]:[],this.setState({data:e,jsonData:e?JSON.stringify((r={},r[this.storageName]=e,r)):"",animationLoading:!1})}catch(e){this.setState({animationLoading:!1})}return[2]}}))}))},t.prototype.setNewLocalStorageData=function(e){var t,n=sessionStorage.getItem(this.storageKey),r=this.state.jsonData;try{(n=JSON.parse(n))[this.storageName]=e,void 0!==n[this.storageName]&&(r=JSON.stringify(((t={})[this.storageName]=n[this.storageName],t))),localStorage.setItem(this.storageKey,JSON.stringify(n)),this.setState({jsonData:r})}catch(e){}},t.prototype.deleteAll=function(){var e=this;this.setState({animationLoading:!0},(function(){return s(e,void 0,void 0,(function(){var e;return c(this,(function(t){switch(t.label){case 0:return(e=this.state.data)&&e.length?[4,y.default(this.storageName,[])]:[3,2];case 1:return t.sent(),z.default(this.translations.emptyListDone,0),this.setState({data:[],animationLoading:!1}),[3,3];case 2:this.setState({animationLoading:!1}),t.label=3;case 3:return[2]}}))}))}))},t.prototype.setInputValue=function(e,t){e.persist(),13==e.keyCode||13==e.which?this.changeList(e,"add"):27==e.keyCode||27==e.which?this.setState({inputValue:""}):this.setState({inputValue:e.target.value})},t.prototype.setInputValueDomain=function(e){e.persist(),13==e.keyCode||13==e.which?this.changeList(e,"add"):27==e.keyCode||27==e.which?this.setState({inputValueDomain:""}):this.setState({inputValueDomain:e.target.value})},t.prototype.setInputValueTagname=function(e){e.persist(),13==e.keyCode||13==e.which?this.changeList(e,"add"):27==e.keyCode||27==e.which?this.setState({inputValueTagname:""}):this.setState({inputValueTagname:e.target.value})},t.prototype.changeList=function(e,t,n){var r=this;void 0===n&&(n=""),e.persist();var o=this.state,i=o.inputValueTagname,a=o.inputValueDomain,l=o.inputValue;"blacklistedElementsHref"==this.storageName&&(i="a"),this.setState({animationLoading:!0},(function(){return s(r,void 0,void 0,(function(){var r,o,s=this;return c(this,(function(c){switch(c.label){case 0:return r=this.state.data,o={error:!1,message:"",data:[]},"add"==t&&""==n&&(n=l),"add"!=t||n.length&&i.length&&a.length?("remove"==t&&e.target&&e.target.parentNode&&e.target.parentNode.parentNode&&e.target.parentNode.parentNode.classList.add("animation-back"),"add"!=t?[3,2]:[4,b.default(this.storageName,a+"::"+i+"::"+n)]):(z.default("Error while adding value to the current list "+this.listReadable+". Values cannot be empty",-1),[2,this.setState({animationLoading:!1})]);case 1:return o=c.sent(),[3,5];case 2:return"blockedElements"!=this.storageName?[3,3]:[2,browser.runtime.sendMessage({action:"delete-blocked-html-element",storageName:"blockedElements",value:n.id,domain:n.domain}).then((function(e){return z.default(s.translations.itemRemovedFromList,0),s.setState({data:e,animationLoading:!1})})).catch((function(e){z.default(""+e,-1)}))];case 3:return[4,v.default(this.storageName,n)];case 4:o=c.sent(),c.label=5;case 5:return 1==o.error?(z.default(o.message,-1),[2,this.setState({animationLoading:!1})]):(z.default(this.translations.itemRemovedFromList,0),o.data&&(r=o.data),this.setState({inputValue:"",inputValueDomain:"",inputValueTagname:"",data:r,animationLoading:!1},(function(){s.setNewLocalStorageData(r)})),[2])}}))}))}))},t.prototype.setMessageCopyToClipBoard=function(){z.default(this.translations.copiedToClipBoard,0)},t.prototype.resetToDefault=function(){var e=this;this.setState({animationLoading:!0},(function(){browser.runtime.sendMessage({action:"set-list-hardcoded",list:e.storageName}).then((function(t){e.setState({data:t,animationLoading:!1})})).catch((function(t){z.default(t,-1),e.setState({animationLoading:!1})}))}))},t.prototype.getData=function(){var e=this,t=this.state.data,n=[];return t.map((function(t){n.push({name:"blockedElements"==e.storageName?JSON.stringify(t):t,copyToClipboardJsx:d.createElement("i",{className:"fas fa-clipboard clipboard",title:e.translations.action_title_copyToClipboard_single,onClick:function(n){h.default(n,"blockedElements"==e.storageName?JSON.stringify(t):t,document.documentElement.scrollTop),e.setMessageCopyToClipBoard()}}),removeJsx:d.createElement("i",{title:e.translations.action_title_delete_single,className:"fas fa-trash-alt delete",onClick:function(n){return e.changeList(n,"remove",t)}})})})),n},t.prototype.inputOnChangeCallback=function(e){},t.prototype.liOnClickCallback=function(e,t){},t.prototype.saveToFileJson=function(e){var t=this;e.persist(),e.target.classList.add("copied-remove"),setTimeout((function(){if(e.target.classList.remove("copied"),e.target.classList.remove("copied-remove"),t.state.jsonData)try{var n=new Blob([JSON.stringify(t.state.jsonData)],{type:"application/json;charset=utf-8"});f.saveAs(n,"NinjaProtect_SETTINGS_"+P.default()+".json")}catch(e){n=new Blob(["Error while creating Blob file. Error message: "+e+"."],{type:"application/json;charset=utf-8"});f.saveAs(n,"NinjaProtect_SETTINGS_"+P.default()+".json")}}),300)},t.prototype.render=function(){var e=this,t=this.state,n=t.animationLoading,r=t.data;return d.createElement("div",{className:"Blacklist"},n&&d.createElement(x.default,null),d.createElement("h1",{className:"h1-title"},d.createElement(p.Link,{className:"single-link-to-list",to:"security"},d.createElement("i",{className:"fas fa-chevron-left"})),this.translations[this.storageName]+" "+(r?"("+r.length+")":"")),d.createElement("div",{className:"actions"},d.createElement(p.Link,{title:this.translations.example,to:"security-examples",className:"button-action"},d.createElement("i",{className:"far fa-question-circle example-link"})),d.createElement("i",{onClick:function(t){e.saveToFileJson(t)},className:"fas fa-file-signature button-action icon-iframes"}),d.createElement("i",{title:this.translations.restoreDefaultValue,onClick:function(t){return e.resetToDefault()},className:"far fa-registered button-action"}),d.createElement("i",{title:this.translations.action_title_deleteList,onClick:function(t){e.deleteAll()},className:"far fa-trash-alt button-action delete-all"})),d.createElement(w.default,{data:this.getData(),itemsPerSite:20,displayTotal:!1,totalPrefix:"",displayPagesInfo:!0,paginationTextPrefix:this.translations.page,paginationTextMiddle:this.translations.of,paginationPagesToDisplay:3,displayPaginationPages:!0,alignPagination:1,alignPagesItems:2,display:["name","copyToClipboardJsx","removeJsx"],env:"prod",displayCount:!0,resetCountOnEachPage:!1,previousButton:"",nextButton:"",displaySearch:!0,searchPlaceholder:this.translations.searchPlaceholder,searchIcon:"",searchSensisitve:!1,searchOnKeys:["name"],searchValue:"",searchOnKeyDown:!0,searchTitle:this.translations.search,paginationTitle:this.translations.list,fallbackMounting:d.createElement(S.default,null),fallbackLoading:d.createElement(k.default,null),fallbackLoadingTime:100,fallbackNoData:d.createElement(_.default,null),fallbackNoDataSearch:d.createElement(E.default,null),inputOnChangeCallback:this.inputOnChangeCallback,liOnClickCallback:this.liOnClickCallback}),"blockedElements"!==this.storageName&&d.createElement("h1",{className:"h1-list"},this.translations.addNewEntryTitle),"blockedElements"!==this.storageName&&d.createElement("div",{className:"input-holder input-holder-dom flex"},d.createElement("input",{className:"input",type:"text",onKeyDownCapture:function(t){return e.setInputValueDomain(t)},onChange:function(t){return e.setInputValueDomain(t)},value:this.state.inputValueDomain,placeholder:this.translations.domain}),d.createElement("input",{className:"input",type:"text",onKeyDownCapture:function(t){return e.setInputValueTagname(t)},onChange:function(t){return e.setInputValueTagname(t)},value:"blacklistedElementsHref"==this.storageName?"a":this.state.inputValueTagname,placeholder:this.translations.tag}),d.createElement("input",{className:"input",type:"text",onKeyDownCapture:function(t){return e.setInputValue(t,"add")},onChange:function(t){return e.setInputValue(t,"add")},value:this.state.inputValue,placeholder:this.translations.addPlaceholder}),d.createElement("span",{className:"icon",onClick:function(t){return e.changeList(t,"add",e.state.inputValue)}},"➕")),d.createElement("form",{style:{display:"none !important",opacity:0,position:"absolute",width:0,height:0,overflow:"hidden"}},d.createElement("textarea",{id:"copy-to-clipboard",value:"",readOnly:!0})))},t}(d.Component);t.default=M},,function(e,t,n){var r=n(5),o=n(3).document,i=r(o)&&r(o.createElement);e.exports=function(e){return i?o.createElement(e):{}}},function(e,t,n){var r=n(3),o=n(22),i=n(36),a=n(118),l=n(10).f;e.exports=function(e){var t=o.Symbol||(o.Symbol=i?{}:r.Symbol||{});"_"==e.charAt(0)||e in t||l(t,e,{value:a.f(e)})}},function(e,t,n){var r=n(55)("keys"),o=n(40);e.exports=function(e){return r[e]||(r[e]=o(e))}},function(e,t){e.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},function(e,t,n){var r=n(3).document;e.exports=r&&r.documentElement},function(e,t,n){var r=n(5),o=n(2),i=function(e,t){if(o(e),!r(t)&&null!==t)throw TypeError(t+": can't set as prototype!")};e.exports={set:Object.setPrototypeOf||("__proto__"in{}?function(e,t,r){try{(r=n(23)(Function.call,n(20).f(Object.prototype,"__proto__").set,2))(e,[]),t=!(e instanceof Array)}catch(e){t=!0}return function(e,n){return i(e,n),t?e.__proto__=n:r(e,n),e}}({},!1):void 0),check:i}},function(e,t){e.exports="\t\n\v\f\r   ᠎             　\u2028\u2029\ufeff"},function(e,t,n){var r=n(5),o=n(88).set;e.exports=function(e,t,n){var i,a=t.constructor;return a!==n&&"function"==typeof a&&(i=a.prototype)!==n.prototype&&r(i)&&o&&o(e,i),e}},function(e,t,n){"use strict";var r=n(25),o=n(29);e.exports=function(e){var t=String(o(this)),n="",i=r(e);if(i<0||i==1/0)throw RangeError("Count can't be negative");for(;i>0;(i>>>=1)&&(t+=t))1&i&&(n+=t);return n}},function(e,t){e.exports=Math.sign||function(e){return 0==(e=+e)||e!=e?e:e<0?-1:1}},function(e,t){var n=Math.expm1;e.exports=!n||n(10)>22025.465794806718||n(10)<22025.465794806718||-2e-17!=n(-2e-17)?function(e){return 0==(e=+e)?e:e>-1e-6&&e<1e-6?e+e*e/2:Math.exp(e)-1}:n},function(e,t,n){"use strict";var r=n(36),o=n(0),i=n(15),a=n(14),l=n(53),s=n(95),c=n(50),u=n(21),d=n(6)("iterator"),f=!([].keys&&"next"in[].keys()),p=function(){return this};e.exports=function(e,t,n,h,g,m,b){s(n,t,h);var v,y,x,w=function(e){if(!f&&e in S)return S[e];switch(e){case"keys":case"values":return function(){return new n(this,e)}}return function(){return new n(this,e)}},k=t+" Iterator",_="values"==g,E=!1,S=e.prototype,P=S[d]||S["@@iterator"]||g&&S[g],z=P||w(g),M=g?_?w("entries"):z:void 0,C="Array"==t&&S.entries||P;if(C&&(x=u(C.call(new e)))!==Object.prototype&&x.next&&(c(x,k,!0),r||"function"==typeof x[d]||a(x,d,p)),_&&P&&"values"!==P.name&&(E=!0,z=function(){return P.call(this)}),r&&!b||!f&&!E&&S[d]||a(S,d,z),l[t]=z,l[k]=p,g)if(v={values:_?z:w("values"),keys:m?z:w("keys"),entries:M},b)for(y in v)y in S||i(S,y,v[y]);else o(o.P+o.F*(f||E),t,v);return v}},function(e,t,n){"use strict";var r=n(43),o=n(39),i=n(50),a={};n(14)(a,n(6)("iterator"),(function(){return this})),e.exports=function(e,t,n){e.prototype=r(a,{next:o(1,n)}),i(e,t+" Iterator")}},function(e,t,n){var r=n(67),o=n(29);e.exports=function(e,t,n){if(r(t))throw TypeError("String#"+n+" doesn't accept regex!");return String(o(e))}},function(e,t,n){var r=n(6)("match");e.exports=function(e){var t=/./;try{"/./"[e](t)}catch(n){try{return t[r]=!1,!"/./"[e](t)}catch(e){}}return!0}},function(e,t,n){var r=n(53),o=n(6)("iterator"),i=Array.prototype;e.exports=function(e){return void 0!==e&&(r.Array===e||i[o]===e)}},function(e,t,n){"use strict";var r=n(10),o=n(39);e.exports=function(e,t,n){t in e?r.f(e,t,o(0,n)):e[t]=n}},function(e,t,n){var r=n(51),o=n(6)("iterator"),i=n(53);e.exports=n(22).getIteratorMethod=function(e){if(null!=e)return e[o]||e["@@iterator"]||i[r(e)]}},function(e,t,n){var r=n(261);e.exports=function(e,t){return new(r(e))(t)}},function(e,t,n){"use strict";var r=n(12),o=n(42),i=n(7);e.exports=function(e){for(var t=r(this),n=i(t.length),a=arguments.length,l=o(a>1?arguments[1]:void 0,n),s=a>2?arguments[2]:void 0,c=void 0===s?n:o(s,n);c>l;)t[l++]=e;return t}},function(e,t,n){"use strict";var r=n(38),o=n(135),i=n(53),a=n(19);e.exports=n(94)(Array,"Array",(function(e,t){this._t=a(e),this._i=0,this._k=t}),(function(){var e=this._t,t=this._k,n=this._i++;return!e||n>=e.length?(this._t=void 0,o(1)):o(0,"keys"==t?n:"values"==t?e[n]:[n,e[n]])}),"values"),i.Arguments=i.Array,r("keys"),r("values"),r("entries")},function(e,t,n){"use strict";var r,o,i=n(58),a=RegExp.prototype.exec,l=String.prototype.replace,s=a,c=(r=/a/,o=/b*/g,a.call(r,"a"),a.call(o,"a"),0!==r.lastIndex||0!==o.lastIndex),u=void 0!==/()??/.exec("")[1];(c||u)&&(s=function(e){var t,n,r,o,s=this;return u&&(n=new RegExp("^"+s.source+"$(?!\\s)",i.call(s))),c&&(t=s.lastIndex),r=a.call(s,e),c&&r&&(s.lastIndex=s.global?r.index+r[0].length:t),u&&r&&r.length>1&&l.call(r[0],n,(function(){for(o=1;o<arguments.length-2;o++)void 0===arguments[o]&&(r[o]=void 0)})),r}),e.exports=s},function(e,t,n){"use strict";var r=n(66)(!0);e.exports=function(e,t,n){return t+(n?r(e,t).length:1)}},function(e,t,n){var r,o,i,a=n(23),l=n(125),s=n(87),c=n(83),u=n(3),d=u.process,f=u.setImmediate,p=u.clearImmediate,h=u.MessageChannel,g=u.Dispatch,m=0,b={},v=function(){var e=+this;if(b.hasOwnProperty(e)){var t=b[e];delete b[e],t()}},y=function(e){v.call(e.data)};f&&p||(f=function(e){for(var t=[],n=1;arguments.length>n;)t.push(arguments[n++]);return b[++m]=function(){l("function"==typeof e?e:Function(e),t)},r(m),m},p=function(e){delete b[e]},"process"==n(24)(d)?r=function(e){d.nextTick(a(v,e,1))}:g&&g.now?r=function(e){g.now(a(v,e,1))}:h?(i=(o=new h).port2,o.port1.onmessage=y,r=a(i.postMessage,i,1)):u.addEventListener&&"function"==typeof postMessage&&!u.importScripts?(r=function(e){u.postMessage(e+"","*")},u.addEventListener("message",y,!1)):r="onreadystatechange"in c("script")?function(e){s.appendChild(c("script")).onreadystatechange=function(){s.removeChild(this),v.call(e)}}:function(e){setTimeout(a(v,e,1),0)}),e.exports={set:f,clear:p}},function(e,t,n){var r=n(3),o=n(106).set,i=r.MutationObserver||r.WebKitMutationObserver,a=r.process,l=r.Promise,s="process"==n(24)(a);e.exports=function(){var e,t,n,c=function(){var r,o;for(s&&(r=a.domain)&&r.exit();e;){o=e.fn,e=e.next;try{o()}catch(r){throw e?n():t=void 0,r}}t=void 0,r&&r.enter()};if(s)n=function(){a.nextTick(c)};else if(!i||r.navigator&&r.navigator.standalone)if(l&&l.resolve){var u=l.resolve(void 0);n=function(){u.then(c)}}else n=function(){o.call(r,c)};else{var d=!0,f=document.createTextNode("");new i(c).observe(f,{characterData:!0}),n=function(){f.data=d=!d}}return function(r){var o={fn:r,next:void 0};t&&(t.next=o),e||(e=o,n()),t=o}}},function(e,t,n){"use strict";var r=n(13);function o(e){var t,n;this.promise=new e((function(e,r){if(void 0!==t||void 0!==n)throw TypeError("Bad Promise constructor");t=e,n=r})),this.resolve=r(t),this.reject=r(n)}e.exports.f=function(e){return new o(e)}},function(e,t,n){"use strict";var r=n(3),o=n(8),i=n(36),a=n(73),l=n(14),s=n(48),c=n(4),u=n(46),d=n(25),f=n(7),p=n(145),h=n(44).f,g=n(10).f,m=n(102),b=n(50),v=r.ArrayBuffer,y=r.DataView,x=r.Math,w=r.RangeError,k=r.Infinity,_=v,E=x.abs,S=x.pow,P=x.floor,z=x.log,M=x.LN2,C=o?"_b":"buffer",O=o?"_l":"byteLength",T=o?"_o":"byteOffset";function N(e,t,n){var r,o,i,a=new Array(n),l=8*n-t-1,s=(1<<l)-1,c=s>>1,u=23===t?S(2,-24)-S(2,-77):0,d=0,f=e<0||0===e&&1/e<0?1:0;for((e=E(e))!=e||e===k?(o=e!=e?1:0,r=s):(r=P(z(e)/M),e*(i=S(2,-r))<1&&(r--,i*=2),(e+=r+c>=1?u/i:u*S(2,1-c))*i>=2&&(r++,i/=2),r+c>=s?(o=0,r=s):r+c>=1?(o=(e*i-1)*S(2,t),r+=c):(o=e*S(2,c-1)*S(2,t),r=0));t>=8;a[d++]=255&o,o/=256,t-=8);for(r=r<<t|o,l+=t;l>0;a[d++]=255&r,r/=256,l-=8);return a[--d]|=128*f,a}function D(e,t,n){var r,o=8*n-t-1,i=(1<<o)-1,a=i>>1,l=o-7,s=n-1,c=e[s--],u=127&c;for(c>>=7;l>0;u=256*u+e[s],s--,l-=8);for(r=u&(1<<-l)-1,u>>=-l,l+=t;l>0;r=256*r+e[s],s--,l-=8);if(0===u)u=1-a;else{if(u===i)return r?NaN:c?-k:k;r+=S(2,t),u-=a}return(c?-1:1)*r*S(2,u-t)}function j(e){return e[3]<<24|e[2]<<16|e[1]<<8|e[0]}function I(e){return[255&e]}function L(e){return[255&e,e>>8&255]}function A(e){return[255&e,e>>8&255,e>>16&255,e>>24&255]}function R(e){return N(e,52,8)}function B(e){return N(e,23,4)}function F(e,t,n){g(e.prototype,t,{get:function(){return this[n]}})}function W(e,t,n,r){var o=p(+n);if(o+t>e[O])throw w("Wrong index!");var i=e[C]._b,a=o+e[T],l=i.slice(a,a+t);return r?l:l.reverse()}function U(e,t,n,r,o,i){var a=p(+n);if(a+t>e[O])throw w("Wrong index!");for(var l=e[C]._b,s=a+e[T],c=r(+o),u=0;u<t;u++)l[s+u]=c[i?u:t-u-1]}if(a.ABV){if(!c((function(){v(1)}))||!c((function(){new v(-1)}))||c((function(){return new v,new v(1.5),new v(NaN),"ArrayBuffer"!=v.name}))){for(var H,V=(v=function(e){return u(this,v),new _(p(e))}).prototype=_.prototype,q=h(_),K=0;q.length>K;)(H=q[K++])in v||l(v,H,_[H]);i||(V.constructor=v)}var $=new y(new v(2)),J=y.prototype.setInt8;$.setInt8(0,2147483648),$.setInt8(1,2147483649),!$.getInt8(0)&&$.getInt8(1)||s(y.prototype,{setInt8:function(e,t){J.call(this,e,t<<24>>24)},setUint8:function(e,t){J.call(this,e,t<<24>>24)}},!0)}else v=function(e){u(this,v,"ArrayBuffer");var t=p(e);this._b=m.call(new Array(t),0),this[O]=t},y=function(e,t,n){u(this,y,"DataView"),u(e,v,"DataView");var r=e[O],o=d(t);if(o<0||o>r)throw w("Wrong offset!");if(o+(n=void 0===n?r-o:f(n))>r)throw w("Wrong length!");this[C]=e,this[T]=o,this[O]=n},o&&(F(v,"byteLength","_l"),F(y,"buffer","_b"),F(y,"byteLength","_l"),F(y,"byteOffset","_o")),s(y.prototype,{getInt8:function(e){return W(this,1,e)[0]<<24>>24},getUint8:function(e){return W(this,1,e)[0]},getInt16:function(e){var t=W(this,2,e,arguments[1]);return(t[1]<<8|t[0])<<16>>16},getUint16:function(e){var t=W(this,2,e,arguments[1]);return t[1]<<8|t[0]},getInt32:function(e){return j(W(this,4,e,arguments[1]))},getUint32:function(e){return j(W(this,4,e,arguments[1]))>>>0},getFloat32:function(e){return D(W(this,4,e,arguments[1]),23,4)},getFloat64:function(e){return D(W(this,8,e,arguments[1]),52,8)},setInt8:function(e,t){U(this,1,e,I,t)},setUint8:function(e,t){U(this,1,e,I,t)},setInt16:function(e,t){U(this,2,e,L,t,arguments[2])},setUint16:function(e,t){U(this,2,e,L,t,arguments[2])},setInt32:function(e,t){U(this,4,e,A,t,arguments[2])},setUint32:function(e,t){U(this,4,e,A,t,arguments[2])},setFloat32:function(e,t){U(this,4,e,B,t,arguments[2])},setFloat64:function(e,t){U(this,8,e,R,t,arguments[2])}});b(v,"ArrayBuffer"),b(y,"DataView"),l(y.prototype,a.VIEW,!0),t.ArrayBuffer=v,t.DataView=y},function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var o=r(n(9));t.default=function(){var e=o.default();return[{name:"blacklistedElementsCookies",translated:e.blacklistedElementsCookies,link:"blacklist-cookies",img:"cookies-690037_1920.jpg"},{name:"blacklistedElementsDomians",translated:e.blacklistedElementsDomians,link:"blacklist-urls",img:"earth-1149733_1920.jpg"},{name:"blacklistedElementsUrlsIncludes",translated:e.blacklistedElementsUrlsIncludes,link:"blacklist-urls-includes",img:"earth-1149733_1920.jpg"},{name:"blacklistedElementsIframes",translated:e.blacklistedElementsIframes,link:"blacklist-iframes",img:"building-1245984_1920.jpg"},{name:"blacklistedElementsIframesSources",translated:e.blacklistedElementsIframesSources,link:"blacklist-iframes-sources",img:"building-1245984_1920.jpg"},{name:"blacklistedElementsIframesNames",translated:e.blacklistedElementsIframesNames,link:"blacklist-iframes-sources",img:"building-1245984_1920.jpg"},{name:"blacklistedElementsTrackers",translated:e.blacklistedElementsTrackers,link:"blacklist-trackers",img:"people-690810_1920.jpg"},{name:"blacklistedElementsWords",translated:e.blacklistedElementsWords,link:"blacklist-words",img:"book-1209805_1920.jpg"},{name:"blacklistedElementsClass",translated:e.blacklistedElementsClass,link:"360-dom-blocker-class",img:"computer-1209641_1920.jpg"},{name:"blacklistedElementsHref",translated:e.blacklistedElementsHref,link:"360-dom-blocker-href",img:"computer-1209641_1920.jpg"},{name:"blacklistedElementsId",translated:e.blacklistedElementsId,link:"360-dom-blocker-id",img:"computer-1209641_1920.jpg"},{name:"whitelistedElementsDomains",translated:e.whitelistedElementsDomains,link:"whitelist-domains",img:"desk-1081708_1920.jpg"}]}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.default=function(e,t,n){var r=setInterval((function(){n&&(document.documentElement.scrollTop=n)}),1);try{if(e.preventDefault(),e.persist(),null!==document.getElementById("copy-to-clipboard")){var o=document.getElementById("copy-to-clipboard");o.value=t,o.select(),document.execCommand("copy"),o.focus(),e.target.classList.add("copied"),setTimeout((function(){e.target.classList.add("copied-remove"),setTimeout((function(){e.target.classList.remove("copied"),e.target.classList.remove("copied-remove"),clearInterval(r)}),300)}),200)}}catch(e){clearInterval(r)}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.default=function(e,t){return void 0===t&&(t=!0),browser.runtime.sendMessage({action:"get-list",list:e}).then((function(e){return null==e?[]:e})).catch((function(e){return[]}))}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.default=function(e,t){try{localStorage.setItem(e,JSON.stringify(t))}catch(n){localStorage.setItem(e,JSON.stringify(t))}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.default=function(e,t){return browser.runtime.sendMessage({action:"set-list",list:e,value:t}).then((function(e){return!0})).catch((function(e){return!1}))}},function(e,t,n){"use strict";(function(e){var r=n(1),o=n.n(r),i=n(17),a=n(61),l=n.n(a),s="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:void 0!==e?e:{};function c(e){var t=[];return{on:function(e){t.push(e)},off:function(e){t=t.filter((function(t){return t!==e}))},get:function(){return e},set:function(n,r){e=n,t.forEach((function(t){return t(e,r)}))}}}var u=o.a.createContext||function(e,t){var n,o,a,u="__create-react-context-"+((s[a="__global_unique_id__"]=(s[a]||0)+1)+"__"),d=function(e){function n(){var t;return(t=e.apply(this,arguments)||this).emitter=c(t.props.value),t}Object(i.a)(n,e);var r=n.prototype;return r.getChildContext=function(){var e;return(e={})[u]=this.emitter,e},r.componentWillReceiveProps=function(e){if(this.props.value!==e.value){var n,r=this.props.value,o=e.value;((i=r)===(a=o)?0!==i||1/i==1/a:i!=i&&a!=a)?n=0:(n="function"==typeof t?t(r,o):1073741823,0!==(n|=0)&&this.emitter.set(e.value,n))}var i,a},r.render=function(){return this.props.children},n}(r.Component);d.childContextTypes=((n={})[u]=l.a.object.isRequired,n);var f=function(t){function n(){var e;return(e=t.apply(this,arguments)||this).state={value:e.getValue()},e.onUpdate=function(t,n){0!=((0|e.observedBits)&n)&&e.setState({value:e.getValue()})},e}Object(i.a)(n,t);var r=n.prototype;return r.componentWillReceiveProps=function(e){var t=e.observedBits;this.observedBits=null==t?1073741823:t},r.componentDidMount=function(){this.context[u]&&this.context[u].on(this.onUpdate);var e=this.props.observedBits;this.observedBits=null==e?1073741823:e},r.componentWillUnmount=function(){this.context[u]&&this.context[u].off(this.onUpdate)},r.getValue=function(){return this.context[u]?this.context[u].get():e},r.render=function(){return(e=this.props.children,Array.isArray(e)?e[0]:e)(this.state.value);var e},n}(r.Component);return f.contextTypes=((o={})[u]=l.a.object,o),{Provider:d,Consumer:f}};t.a=u}).call(this,n(62))},function(e,t,n){var r=n(375);e.exports=p,e.exports.parse=i,e.exports.compile=function(e,t){return l(i(e,t),t)},e.exports.tokensToFunction=l,e.exports.tokensToRegExp=f;var o=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function i(e,t){for(var n,r=[],i=0,a=0,l="",u=t&&t.delimiter||"/";null!=(n=o.exec(e));){var d=n[0],f=n[1],p=n.index;if(l+=e.slice(a,p),a=p+d.length,f)l+=f[1];else{var h=e[a],g=n[2],m=n[3],b=n[4],v=n[5],y=n[6],x=n[7];l&&(r.push(l),l="");var w=null!=g&&null!=h&&h!==g,k="+"===y||"*"===y,_="?"===y||"*"===y,E=n[2]||u,S=b||v;r.push({name:m||i++,prefix:g||"",delimiter:E,optional:_,repeat:k,partial:w,asterisk:!!x,pattern:S?c(S):x?".*":"[^"+s(E)+"]+?"})}}return a<e.length&&(l+=e.substr(a)),l&&r.push(l),r}function a(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function l(e,t){for(var n=new Array(e.length),o=0;o<e.length;o++)"object"==typeof e[o]&&(n[o]=new RegExp("^(?:"+e[o].pattern+")$",d(t)));return function(t,o){for(var i="",l=t||{},s=(o||{}).pretty?a:encodeURIComponent,c=0;c<e.length;c++){var u=e[c];if("string"!=typeof u){var d,f=l[u.name];if(null==f){if(u.optional){u.partial&&(i+=u.prefix);continue}throw new TypeError('Expected "'+u.name+'" to be defined')}if(r(f)){if(!u.repeat)throw new TypeError('Expected "'+u.name+'" to not repeat, but received `'+JSON.stringify(f)+"`");if(0===f.length){if(u.optional)continue;throw new TypeError('Expected "'+u.name+'" to not be empty')}for(var p=0;p<f.length;p++){if(d=s(f[p]),!n[c].test(d))throw new TypeError('Expected all "'+u.name+'" to match "'+u.pattern+'", but received `'+JSON.stringify(d)+"`");i+=(0===p?u.prefix:u.delimiter)+d}}else{if(d=u.asterisk?encodeURI(f).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):s(f),!n[c].test(d))throw new TypeError('Expected "'+u.name+'" to match "'+u.pattern+'", but received "'+d+'"');i+=u.prefix+d}}else i+=u}return i}}function s(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function c(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function u(e,t){return e.keys=t,e}function d(e){return e&&e.sensitive?"":"i"}function f(e,t,n){r(t)||(n=t||n,t=[]);for(var o=(n=n||{}).strict,i=!1!==n.end,a="",l=0;l<e.length;l++){var c=e[l];if("string"==typeof c)a+=s(c);else{var f=s(c.prefix),p="(?:"+c.pattern+")";t.push(c),c.repeat&&(p+="(?:"+f+p+")*"),a+=p=c.optional?c.partial?f+"("+p+")?":"(?:"+f+"("+p+"))?":f+"("+p+")"}}var h=s(n.delimiter||"/"),g=a.slice(-h.length)===h;return o||(a=(g?a.slice(0,-h.length):a)+"(?:"+h+"(?=$))?"),a+=i?"$":o&&g?"":"(?="+h+"|$)",u(new RegExp("^"+a,d(n)),t)}function p(e,t,n){return r(t)||(n=t||n,t=[]),n=n||{},e instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)t.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return u(e,t)}(e,t):r(e)?function(e,t,n){for(var r=[],o=0;o<e.length;o++)r.push(p(e[o],t,n).source);return u(new RegExp("(?:"+r.join("|")+")",d(n)),t)}(e,t,n):function(e,t,n){return f(i(e,n),t,n)}(e,t,n)}},function(e,t,n){e.exports=!n(8)&&!n(4)((function(){return 7!=Object.defineProperty(n(83)("div"),"a",{get:function(){return 7}}).a}))},function(e,t,n){t.f=n(6)},function(e,t,n){var r=n(18),o=n(19),i=n(63)(!1),a=n(85)("IE_PROTO");e.exports=function(e,t){var n,l=o(e),s=0,c=[];for(n in l)n!=a&&r(l,n)&&c.push(n);for(;t.length>s;)r(l,n=t[s++])&&(~i(c,n)||c.push(n));return c}},function(e,t,n){var r=n(10),o=n(2),i=n(41);e.exports=n(8)?Object.defineProperties:function(e,t){o(e);for(var n,a=i(t),l=a.length,s=0;l>s;)r.f(e,n=a[s++],t[n]);return e}},function(e,t,n){var r=n(19),o=n(44).f,i={}.toString,a="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];e.exports.f=function(e){return a&&"[object Window]"==i.call(e)?function(e){try{return o(e)}catch(e){return a.slice()}}(e):o(r(e))}},function(e,t,n){"use strict";var r=n(8),o=n(41),i=n(64),a=n(57),l=n(12),s=n(56),c=Object.assign;e.exports=!c||n(4)((function(){var e={},t={},n=Symbol(),r="abcdefghijklmnopqrst";return e[n]=7,r.split("").forEach((function(e){t[e]=e})),7!=c({},e)[n]||Object.keys(c({},t)).join("")!=r}))?function(e,t){for(var n=l(e),c=arguments.length,u=1,d=i.f,f=a.f;c>u;)for(var p,h=s(arguments[u++]),g=d?o(h).concat(d(h)):o(h),m=g.length,b=0;m>b;)p=g[b++],r&&!f.call(h,p)||(n[p]=h[p]);return n}:c},function(e,t){e.exports=Object.is||function(e,t){return e===t?0!==e||1/e==1/t:e!=e&&t!=t}},function(e,t,n){"use strict";var r=n(13),o=n(5),i=n(125),a=[].slice,l={},s=function(e,t,n){if(!(t in l)){for(var r=[],o=0;o<t;o++)r[o]="a["+o+"]";l[t]=Function("F,a","return new F("+r.join(",")+")")}return l[t](e,n)};e.exports=Function.bind||function(e){var t=r(this),n=a.call(arguments,1),l=function(){var r=n.concat(a.call(arguments));return this instanceof l?s(t,r.length,r):i(t,r,e)};return o(t.prototype)&&(l.prototype=t.prototype),l}},function(e,t){e.exports=function(e,t,n){var r=void 0===n;switch(t.length){case 0:return r?e():e.call(n);case 1:return r?e(t[0]):e.call(n,t[0]);case 2:return r?e(t[0],t[1]):e.call(n,t[0],t[1]);case 3:return r?e(t[0],t[1],t[2]):e.call(n,t[0],t[1],t[2]);case 4:return r?e(t[0],t[1],t[2],t[3]):e.call(n,t[0],t[1],t[2],t[3])}return e.apply(n,t)}},function(e,t,n){var r=n(3).parseInt,o=n(52).trim,i=n(89),a=/^[-+]?0[xX]/;e.exports=8!==r(i+"08")||22!==r(i+"0x16")?function(e,t){var n=o(String(e),3);return r(n,t>>>0||(a.test(n)?16:10))}:r},function(e,t,n){var r=n(3).parseFloat,o=n(52).trim;e.exports=1/r(n(89)+"-0")!=-1/0?function(e){var t=o(String(e),3),n=r(t);return 0===n&&"-"==t.charAt(0)?-0:n}:r},function(e,t,n){var r=n(24);e.exports=function(e,t){if("number"!=typeof e&&"Number"!=r(e))throw TypeError(t);return+e}},function(e,t,n){var r=n(5),o=Math.floor;e.exports=function(e){return!r(e)&&isFinite(e)&&o(e)===e}},function(e,t){e.exports=Math.log1p||function(e){return(e=+e)>-1e-8&&e<1e-8?e-e*e/2:Math.log(1+e)}},function(e,t,n){var r=n(92),o=Math.pow,i=o(2,-52),a=o(2,-23),l=o(2,127)*(2-a),s=o(2,-126);e.exports=Math.fround||function(e){var t,n,o=Math.abs(e),c=r(e);return o<s?c*(o/s/a+1/i-1/i)*s*a:(n=(t=(1+a/i)*o)-(t-o))>l||n!=n?c*(1/0):c*n}},function(e,t,n){var r=n(2);e.exports=function(e,t,n,o){try{return o?t(r(n)[0],n[1]):t(n)}catch(t){var i=e.return;throw void 0!==i&&r(i.call(e)),t}}},function(e,t,n){var r=n(13),o=n(12),i=n(56),a=n(7);e.exports=function(e,t,n,l,s){r(t);var c=o(e),u=i(c),d=a(c.length),f=s?d-1:0,p=s?-1:1;if(n<2)for(;;){if(f in u){l=u[f],f+=p;break}if(f+=p,s?f<0:d<=f)throw TypeError("Reduce of empty array with no initial value")}for(;s?f>=0:d>f;f+=p)f in u&&(l=t(l,u[f],f,c));return l}},function(e,t,n){"use strict";var r=n(12),o=n(42),i=n(7);e.exports=[].copyWithin||function(e,t){var n=r(this),a=i(n.length),l=o(e,a),s=o(t,a),c=arguments.length>2?arguments[2]:void 0,u=Math.min((void 0===c?a:o(c,a))-s,a-l),d=1;for(s<l&&l<s+u&&(d=-1,s+=u-1,l+=u-1);u-- >0;)s in n?n[l]=n[s]:delete n[l],l+=d,s+=d;return n}},function(e,t){e.exports=function(e,t){return{value:t,done:!!e}}},function(e,t,n){"use strict";var r=n(104);n(0)({target:"RegExp",proto:!0,forced:r!==/./.exec},{exec:r})},function(e,t,n){n(8)&&"g"!=/./g.flags&&n(10).f(RegExp.prototype,"flags",{configurable:!0,get:n(58)})},function(e,t){e.exports=function(e){try{return{e:!1,v:e()}}catch(e){return{e:!0,v:e}}}},function(e,t,n){var r=n(2),o=n(5),i=n(108);e.exports=function(e,t){if(r(e),o(t)&&t.constructor===e)return t;var n=i.f(e);return(0,n.resolve)(t),n.promise}},function(e,t,n){"use strict";var r=n(141),o=n(49);e.exports=n(72)("Map",(function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}}),{get:function(e){var t=r.getEntry(o(this,"Map"),e);return t&&t.v},set:function(e,t){return r.def(o(this,"Map"),0===e?0:e,t)}},r,!0)},function(e,t,n){"use strict";var r=n(10).f,o=n(43),i=n(48),a=n(23),l=n(46),s=n(47),c=n(94),u=n(135),d=n(45),f=n(8),p=n(37).fastKey,h=n(49),g=f?"_s":"size",m=function(e,t){var n,r=p(t);if("F"!==r)return e._i[r];for(n=e._f;n;n=n.n)if(n.k==t)return n};e.exports={getConstructor:function(e,t,n,c){var u=e((function(e,r){l(e,u,t,"_i"),e._t=t,e._i=o(null),e._f=void 0,e._l=void 0,e[g]=0,null!=r&&s(r,n,e[c],e)}));return i(u.prototype,{clear:function(){for(var e=h(this,t),n=e._i,r=e._f;r;r=r.n)r.r=!0,r.p&&(r.p=r.p.n=void 0),delete n[r.i];e._f=e._l=void 0,e[g]=0},delete:function(e){var n=h(this,t),r=m(n,e);if(r){var o=r.n,i=r.p;delete n._i[r.i],r.r=!0,i&&(i.n=o),o&&(o.p=i),n._f==r&&(n._f=o),n._l==r&&(n._l=i),n[g]--}return!!r},forEach:function(e){h(this,t);for(var n,r=a(e,arguments.length>1?arguments[1]:void 0,3);n=n?n.n:this._f;)for(r(n.v,n.k,this);n&&n.r;)n=n.p},has:function(e){return!!m(h(this,t),e)}}),f&&r(u.prototype,"size",{get:function(){return h(this,t)[g]}}),u},def:function(e,t,n){var r,o,i=m(e,t);return i?i.v=n:(e._l=i={i:o=p(t,!0),k:t,v:n,p:r=e._l,n:void 0,r:!1},e._f||(e._f=i),r&&(r.n=i),e[g]++,"F"!==o&&(e._i[o]=i)),e},getEntry:m,setStrong:function(e,t,n){c(e,t,(function(e,n){this._t=h(e,t),this._k=n,this._l=void 0}),(function(){for(var e=this._k,t=this._l;t&&t.r;)t=t.p;return this._t&&(this._l=t=t?t.n:this._t._f)?u(0,"keys"==e?t.k:"values"==e?t.v:[t.k,t.v]):(this._t=void 0,u(1))}),n?"entries":"values",!n,!0),d(t)}}},function(e,t,n){"use strict";var r=n(141),o=n(49);e.exports=n(72)("Set",(function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}}),{add:function(e){return r.def(o(this,"Set"),e=0===e?0:e,e)}},r)},function(e,t,n){"use strict";var r,o=n(3),i=n(31)(0),a=n(15),l=n(37),s=n(122),c=n(144),u=n(5),d=n(49),f=n(49),p=!o.ActiveXObject&&"ActiveXObject"in o,h=l.getWeak,g=Object.isExtensible,m=c.ufstore,b=function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}},v={get:function(e){if(u(e)){var t=h(e);return!0===t?m(d(this,"WeakMap")).get(e):t?t[this._i]:void 0}},set:function(e,t){return c.def(d(this,"WeakMap"),e,t)}},y=e.exports=n(72)("WeakMap",b,v,c,!0,!0);f&&p&&(s((r=c.getConstructor(b,"WeakMap")).prototype,v),l.NEED=!0,i(["delete","has","get","set"],(function(e){var t=y.prototype,n=t[e];a(t,e,(function(t,o){if(u(t)&&!g(t)){this._f||(this._f=new r);var i=this._f[e](t,o);return"set"==e?this:i}return n.call(this,t,o)}))})))},function(e,t,n){"use strict";var r=n(48),o=n(37).getWeak,i=n(2),a=n(5),l=n(46),s=n(47),c=n(31),u=n(18),d=n(49),f=c(5),p=c(6),h=0,g=function(e){return e._l||(e._l=new m)},m=function(){this.a=[]},b=function(e,t){return f(e.a,(function(e){return e[0]===t}))};m.prototype={get:function(e){var t=b(this,e);if(t)return t[1]},has:function(e){return!!b(this,e)},set:function(e,t){var n=b(this,e);n?n[1]=t:this.a.push([e,t])},delete:function(e){var t=p(this.a,(function(t){return t[0]===e}));return~t&&this.a.splice(t,1),!!~t}},e.exports={getConstructor:function(e,t,n,i){var c=e((function(e,r){l(e,c,t,"_i"),e._t=t,e._i=h++,e._l=void 0,null!=r&&s(r,n,e[i],e)}));return r(c.prototype,{delete:function(e){if(!a(e))return!1;var n=o(e);return!0===n?g(d(this,t)).delete(e):n&&u(n,this._i)&&delete n[this._i]},has:function(e){if(!a(e))return!1;var n=o(e);return!0===n?g(d(this,t)).has(e):n&&u(n,this._i)}}),c},def:function(e,t,n){var r=o(i(t),!0);return!0===r?g(e).set(t,n):r[e._i]=n,e},ufstore:g}},function(e,t,n){var r=n(25),o=n(7);e.exports=function(e){if(void 0===e)return 0;var t=r(e),n=o(t);if(t!==n)throw RangeError("Wrong length!");return n}},function(e,t,n){var r=n(44),o=n(64),i=n(2),a=n(3).Reflect;e.exports=a&&a.ownKeys||function(e){var t=r.f(i(e)),n=o.f;return n?t.concat(n(e)):t}},function(e,t,n){"use strict";var r=n(65),o=n(5),i=n(7),a=n(23),l=n(6)("isConcatSpreadable");e.exports=function e(t,n,s,c,u,d,f,p){for(var h,g,m=u,b=0,v=!!f&&a(f,p,3);b<c;){if(b in s){if(h=v?v(s[b],b,n):s[b],g=!1,o(h)&&(g=void 0!==(g=h[l])?!!g:r(h)),g&&d>0)m=e(t,n,h,i(h.length),m,d-1)-1;else{if(m>=9007199254740991)throw TypeError();t[m]=h}m++}b++}return m}},function(e,t,n){var r=n(7),o=n(91),i=n(29);e.exports=function(e,t,n,a){var l=String(i(e)),s=l.length,c=void 0===n?" ":String(n),u=r(t);if(u<=s||""==c)return l;var d=u-s,f=o.call(c,Math.ceil(d/c.length));return f.length>d&&(f=f.slice(0,d)),a?f+l:l+f}},function(e,t,n){var r=n(8),o=n(41),i=n(19),a=n(57).f;e.exports=function(e){return function(t){for(var n,l=i(t),s=o(l),c=s.length,u=0,d=[];c>u;)n=s[u++],r&&!a.call(l,n)||d.push(e?[n,l[n]]:l[n]);return d}}},function(e,t,n){var r=n(51),o=n(151);e.exports=function(e){return function(){if(r(this)!=e)throw TypeError(e+"#toJSON isn't generic");return o(this)}}},function(e,t,n){var r=n(47);e.exports=function(e,t){var n=[];return r(e,!1,n.push,n,t),n}},function(e,t){e.exports=Math.scale||function(e,t,n,r,o){return 0===arguments.length||e!=e||t!=t||n!=n||r!=r||o!=o?NaN:e===1/0||e===-1/0?e:(e-t)*(o-r)/(n-t)+r}},function(e,t,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;function a(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,l,s=a(e),c=1;c<arguments.length;c++){for(var u in n=Object(arguments[c]))o.call(n,u)&&(s[u]=n[u]);if(r){l=r(n);for(var d=0;d<l.length;d++)i.call(n,l[d])&&(s[l[d]]=n[l[d]])}}return s}},function(e,t,n){"use strict";e.exports=n(376)},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),l=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&i(t,e,n);return a(t,e),t};Object.defineProperty(t,"__esModule",{value:!0});var s=l(n(1));n(156);var c=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return o(t,e),t.prototype.render=function(){return s.createElement("div",{className:"FullScreenLoading"},s.createElement("div",{className:"spinner"}))},t}(s.Component);t.default=c},function(e,t,n){var r=n(78),o=n(396);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var i={insert:"head",singleton:!1};r(o,i);e.exports=o.locals||{}},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),l=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&i(t,e,n);return a(t,e),t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=l(n(1)),u=s(n(32)),d=s(n(406));n(407);var f=function(e){function t(t){var n=e.call(this,t)||this;return n.getPagerJsx=n.getPagerJsx.bind(n),n.getList=n.getList.bind(n),n.prev=n.prev.bind(n),n.next=n.next.bind(n),n.filterData=n.filterData.bind(n),n.pages=n.pages.bind(n),n.state={data:t.data&&typeof[]==typeof t.data?t.data:[],filteredData:t.data&&typeof[]==typeof t.data?t.data:[],searchOnKeys:t.searchOnKeys&&typeof[]==typeof t.searchOnKeys?t.searchOnKeys:[],itemsPerSite:t.itemsPerSite&&"number"==typeof t.itemsPerSite?t.itemsPerSite:10,keysToRender:t.display&&typeof[]==typeof t.display?t.display:[],displayCount:"boolean"==typeof t.displayCount&&t.displayCount,liOnClickCallback:t.liOnClickCallback&&"function"==typeof t.liOnClickCallback?t.liOnClickCallback:void 0,inputOnChangeCallback:t.inputOnChangeCallback&&"function"==typeof t.inputOnChangeCallback?t.inputOnChangeCallback:void 0,displayTotal:"boolean"==typeof t.displayTotal&&t.displayTotal,displayPagesInfo:"boolean"==typeof t.displayPagesInfo&&t.displayPagesInfo,displayPaginationPages:"boolean"==typeof t.displayPaginationPages&&t.displayPaginationPages,totalPrefix:t.totalPrefix&&"string"==typeof t.totalPrefix?t.totalPrefix:"",paginationTextPrefix:t.paginationTextPrefix&&"string"==typeof t.paginationTextPrefix?t.paginationTextPrefix:"",paginationTextMiddle:t.paginationTextMiddle&&"string"==typeof t.paginationTextMiddle?t.paginationTextMiddle:"",paginationPagesToDisplay:t.paginationPagesToDisplay&&"number"==typeof t.paginationPagesToDisplay?t.paginationPagesToDisplay:5,alignPagesItems:t.alignPagesItems&&"number"==typeof t.alignPagesItems?t.alignPagesItems:1,alignPagination:t.alignPagination&&"number"==typeof t.alignPagination?t.alignPagination:1,resetCountOnEachPage:"boolean"==typeof t.resetCountOnEachPage&&t.resetCountOnEachPage,nextButton:t.nextButton?t.nextButton:"",previousButton:t.previousButton?t.previousButton:"",displaySearch:"boolean"==typeof t.displaySearch&&t.displaySearch,searchPlaceholder:t.searchPlaceholder?t.searchPlaceholder:"",searchIcon:t.searchIcon?t.searchIcon:"",searchSensisitve:"boolean"==typeof t.searchSensisitve&&t.searchSensisitve,searchValue:t.searchValue&&"string"==typeof t.searchValue?t.searchValue:"",searchOnKeyDown:"boolean"==typeof t.searchOnKeyDown&&t.searchOnKeyDown,searchTitle:t.searchTitle&&"string"==typeof t.searchTitle?t.searchTitle:"",paginationTitle:t.paginationTitle&&"string"==typeof t.paginationTitle?t.paginationTitle:"",noDataMessage:t.noDataMessage&&"string"==typeof t.noDataMessage?t.noDataMessage:"",isLoadingFalse:"boolean"==typeof t.isLoadingFalse&&t.isLoadingFalse,fallbackLoading:t.fallbackLoading?t.fallbackLoading:"",fallbackLoadingTime:t.fallbackLoadingTime&&"number"==typeof t.fallbackLoadingTime?t.fallbackLoadingTime:0,fallbackNoData:t.fallbackNoData?t.fallbackNoData:"",fallbackNoDataSearch:t.fallbackNoDataSearch?t.fallbackNoDataSearch:"",fallbackMounting:t.fallbackMounting?t.fallbackMounting:"",env:"string"==typeof t.env?t.env:0,itemsToRender:[],itemsToRenderJsx:[],currentPage:0,loading:!0,dataLoaded:!1},n}return o(t,e),t.prototype.componentDidMount=function(){this.filterData(!0)},t.getDerivedStateFromProps=function(e,t){return d.default(e.data,t.data)?null:{data:e.data&&typeof[]==typeof e.data?e.data:[],filteredData:e.data&&typeof[]==typeof e.data?e.data:[],searchOnKeys:e.searchOnKeys&&typeof[]==typeof e.searchOnKeys?e.searchOnKeys:[],itemsPerSite:e.itemsPerSite&&"number"==typeof e.itemsPerSite?e.itemsPerSite:10,keysToRender:e.display&&typeof[]==typeof e.display?e.display:[],displayCount:"boolean"==typeof e.displayCount&&e.displayCount,liOnClickCallback:e.liOnClickCallback&&"function"==typeof e.liOnClickCallback?e.liOnClickCallback:void 0,inputOnChangeCallback:e.inputOnChangeCallback&&"function"==typeof e.inputOnChangeCallback?e.inputOnChangeCallback:void 0,displayTotal:"boolean"==typeof e.displayTotal&&e.displayTotal,displayPagesInfo:"boolean"==typeof e.displayPagesInfo&&e.displayPagesInfo,displayPaginationPages:"boolean"==typeof e.displayPaginationPages&&e.displayPaginationPages,totalPrefix:e.totalPrefix&&"string"==typeof e.totalPrefix?e.totalPrefix:"",paginationTextPrefix:e.paginationTextPrefix&&"string"==typeof e.paginationTextPrefix?e.paginationTextPrefix:"",paginationTextMiddle:e.paginationTextMiddle&&"string"==typeof e.paginationTextMiddle?e.paginationTextMiddle:"",paginationPagesToDisplay:e.paginationPagesToDisplay&&"number"==typeof e.paginationPagesToDisplay?e.paginationPagesToDisplay:5,alignPagesItems:e.alignPagesItems&&"number"==typeof e.alignPagesItems?e.alignPagesItems:1,alignPagination:e.alignPagination&&"number"==typeof e.alignPagination?e.alignPagination:1,resetCountOnEachPage:"boolean"==typeof e.resetCountOnEachPage&&e.resetCountOnEachPage,nextButton:e.nextButton?e.nextButton:"",previousButton:e.previousButton?e.previousButton:"",displaySearch:"boolean"==typeof e.displaySearch&&e.displaySearch,searchPlaceholder:e.searchPlaceholder?e.searchPlaceholder:"",searchIcon:e.searchIcon?e.searchIcon:"",searchSensisitve:"boolean"==typeof e.searchSensisitve&&e.searchSensisitve,searchValue:e.searchValue&&"string"==typeof e.searchValue?e.searchValue:"",searchOnKeyDown:"boolean"==typeof e.searchOnKeyDown&&e.searchOnKeyDown,searchTitle:e.searchTitle&&"string"==typeof e.searchTitle?e.searchTitle:"",paginationTitle:e.paginationTitle&&"string"==typeof e.paginationTitle?e.paginationTitle:"",noDataMessage:e.noDataMessage&&"string"==typeof e.noDataMessage?e.noDataMessage:"",isLoadingFalse:"boolean"==typeof e.isLoadingFalse&&e.isLoadingFalse,fallbackLoading:e.fallbackLoading?e.fallbackLoading:"",fallbackLoadingTime:e.fallbackLoadingTime&&"number"==typeof e.fallbackLoadingTime?e.fallbackLoadingTime:0,fallbackNoData:e.fallbackNoData?e.fallbackNoData:"",fallbackNoDataSearch:e.fallbackNoDataSearch?e.fallbackNoDataSearch:"",fallbackMounting:e.fallbackMounting?e.fallbackMounting:""}},t.prototype.getMaxPages=function(){var e=this.state,t=e.filteredData,n=e.itemsPerSite,r=t.length/n;return t.length<=n?parseInt(r):((r=Math.round(r))*n<t.length&&(r+=1),r)},t.prototype.changePage=function(e){e-=1,this.setState({currentPage:e})},t.prototype.getPagerJsx=function(){var e=this,t=this.state,n=t.itemsPerSite,r=t.currentPage,o=t.filteredData,i=t.displayTotal,a=t.totalPrefix,l=t.displayPaginationPages,s=t.paginationPagesToDisplay,d=t.alignPagesItems,f=t.fallbackNoData,p=t.previousButton,h=t.nextButton,g=t.searchValue,m=t.fallbackNoDataSearch,b=t.dataLoaded,v=t.fallbackMounting,y=o.length,x=r;x++;var w=this.getMaxPages(),k=[],_=[];if(w){for(var E=x-s;E<x;E++)E>0&&k.push(E);for(E=0;E<=w;E++)E>x&&E<=x+s&&_.push(E)}w||(w=1);var S=c.createElement("div",{className:"total"},a&&a,y),P=c.createElement("span",{className:"buttons"},c.createElement("span",{onClick:function(t){return e.prev()},className:0!==r?"previous-button "+(""==p?"icon-previous":""):"previous-button deactivated "+(""==p?"icon-previous":"")},p&&p,""==p&&"↩"),l&&c.createElement("span",{className:"pagination-paging"},c.createElement("span",{className:"pages-previous"},k.map((function(t){return c.createElement("span",{key:u.default(),className:"page-number",onClick:function(n){return e.changePage(t)}},t)}))),c.createElement("span",{className:"pages-current"},c.createElement("span",{className:"page-number"},x)),c.createElement("span",{className:"pages-next"},_.map((function(t){return c.createElement("span",{key:u.default(),className:"page-number",onClick:function(n){return e.changePage(t)}},t)})))),c.createElement("span",{onClick:function(t){return e.next()},className:n*x<y?"next-button "+(""==h?"icon-next":""):"next-button deactivated "+(""==h?"icon-next":"")},h&&h));if(0==y)return b||""===v?""!==f&&""===g?f:""!==m&&""!==g?m:null:v;switch(d){case 1:return c.createElement("div",{key:u.default(),className:"paging"},i&&S,P);case 2:return c.createElement("div",{key:u.default(),className:"paging"},P,i&&S);case 3:return c.createElement("div",{key:u.default(),className:"paging"},i&&S,P);case 4:case 5:return c.createElement("div",{key:u.default(),className:"paging"},P,i&&S);default:return c.createElement("div",{key:u.default(),className:"paging"},i&&S,P)}},t.prototype.pages=function(){var e=this.state,t=e.paginationTextPrefix,n=e.filteredData,r=e.currentPage,o=e.paginationTextMiddle,i=n.length,a=r;a++;var l=this.getMaxPages();return 0==l&&(l=1),0==i?null:c.createElement("div",{className:"pagination-pages"},c.createElement("div",{className:"text"},t+" "+a+" "+o+" "+l))},t.prototype.prev=function(){var e=this.state.currentPage;0!==e&&this.setState({currentPage:e-1})},t.prototype.next=function(){var e=this.state,t=e.itemsPerSite,n=e.currentPage,r=n;t*++r<e.filteredData.length&&this.setState({currentPage:n+1})},t.prototype.clickCallback=function(e,t){var n=this.state.liOnClickCallback;n&&n(e,t)},t.prototype.getList=function(){var e=this,t=this.state,n=t.keysToRender,r=t.displayCount,o=t.currentPage,i=t.itemsPerSite,a=t.filteredData,l=t.resetCountOnEachPage;o=parseInt(o),i=parseInt(i);var s=o*i,d=s+i;if(isNaN(s)||isNaN(d))return"dev"==this.state.env&&console.log("Invalid value passed as key: currentPage. The current page returned NaN - not a number"),null;var f=a.slice(s,d),p=[];return f.map((function(t,a){var s=[],d=a+1;o&&!l&&(d+=o*i),r&&s.push(c.createElement("span",{className:"index entry entry-1",key:u.default()},d));var f=0,h=Object.keys(t);n.map((function(e,n){var o=t[e];h.includes(e)&&void 0!==o&&(f++,s.push(c.createElement("span",{className:"value entry entry-"+(n+(r?2:1))+" value-"+f,key:u.default()},o)))})),p.push(c.createElement("li",{onClick:function(n){return e.clickCallback(n,t)},key:u.default()},s))})),p},t.prototype.filterData=function(e){var t=this;void 0===e&&(e=!1);var n=this.state.fallbackLoadingTime;this.setState({loading:!0},(function(){setTimeout((function(){var r=t.state,o=r.searchValue,i=r.data,a=r.searchSensisitve,l=r.searchOnKeys,s=(r.env,r.searchOnKeyDown),c=[];s||e?(i.map((function(e){l.map((function(t){void 0!==e[t]&&"string"==typeof e[t]&&(a&&""!==o&&-1!==e[t].indexOf(o)&&c.push(e),a||""===o||-1===e[t].toLowerCase().indexOf(o.toLowerCase())||c.push(e),""==o&&c.push(e))}))})),t.setState({filteredData:c,loading:!1},(function(){t.state.dataLoaded||setTimeout((function(){t.setState({dataLoaded:!0})}),2*n)}))):t.setState({dataLoaded:!0,loading:!1})}),n)}))},t.prototype.setSearchValue=function(e){var t=this;e.persist();var n=this.state,r=n.data,o=n.inputOnChangeCallback,i=e.target.value;this.setState({loading:!0},(function(){return o&&o(e),27==e.keyCode||27==e.which?t.setState({searchValue:"",currentPage:0,filteredData:r,loading:!1}):13==e.keyCode||13==e.which?t.setState({searchValue:i,currentPage:0},(function(){t.filterData(!0)})):void t.setState({searchValue:i,currentPage:0},(function(){t.filterData()}))}))},t.prototype.render=function(){var e=this,t=this.state,n=t.loading,r=t.fallbackLoading,o=t.alignPagination,i=t.displaySearch,a=t.searchIcon,l=t.searchPlaceholder,s=t.searchTitle,u=t.paginationTitle,d=this.getList();return c.createElement("div",{className:"Pagination"},i&&c.createElement("h1",{className:"h1"},s),i&&c.createElement("div",{className:"input-holder"},c.createElement("input",{className:"input",type:"text",onKeyDownCapture:function(t){return e.setSearchValue(t)},onChange:function(t){return e.setSearchValue(t)},value:this.state.searchValue,placeholder:l}),""!==a&&c.createElement("span",{className:"icon",onClick:function(t){return e.filterData(!0)}},a),""==a&&c.createElement("span",{className:"icon icon-search",onClick:function(t){return e.filterData(!0)}})),1==o&&u&&c.createElement("h1",{className:"h1"},u),1==o&&c.createElement("ul",null,0!==d.length&&d,""!==r&&n&&r),this.getPagerJsx(),this.pages(),1!==o&&u&&c.createElement("h1",{className:"h1"},u),1!==o&&c.createElement("ul",null,0!==d.length&&d,""!==r&&n&&r))},t}(c.Component);t.default=f},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),l=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&i(t,e,n);return a(t,e),t};Object.defineProperty(t,"__esModule",{value:!0});var s=l(n(1));n(156);var c=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return o(t,e),t.prototype.render=function(){return s.createElement("div",{className:"FullScreenLoadingMin"},s.createElement("div",{className:"spinner"}))},t}(s.Component);t.default=c},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),l=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&i(t,e,n);return a(t,e),t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=l(n(1)),u=s(n(9)),d=n(27),f=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return o(t,e),t.prototype.render=function(){var e=u.default();return c.createElement("div",{className:"NoData"},c.createElement("img",{alt:"image",src:d.addonRoot()+"/logo/shield-128.png"}),c.createElement("h1",{className:"h1-title"},e.no_data_list))},t}(c.Component);t.default=f},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),l=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&i(t,e,n);return a(t,e),t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=l(n(1)),u=s(n(9)),d=n(27),f=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return o(t,e),t.prototype.render=function(){var e=u.default();return c.createElement("div",{className:"NoData"},c.createElement("img",{alt:"image",src:d.addonRoot()+"/logo/shield-128.png"}),c.createElement("h1",{className:"h1-title"},e.no_data_list_search))},t}(c.Component);t.default=f},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),l=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&i(t,e,n);return a(t,e),t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=l(n(1)),u=s(n(9)),d=n(27),f=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return o(t,e),t.prototype.render=function(){var e=u.default();return c.createElement("div",{className:"NoData"},c.createElement("img",{alt:"image",src:d.addonRoot()+"/logo/shield-128.png"}),c.createElement("h1",{className:"h1-title"},e.loading))},t}(c.Component);t.default=f},function(e,t,n){"use strict";var r=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(o,i){function a(e){try{s(r.next(e))}catch(e){i(e)}}function l(e){try{s(r.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,l)}s((r=r.apply(e,t||[])).next())}))},o=this&&this.__generator||function(e,t){var n,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function l(i){return function(l){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!(o=a.trys,(o=o.length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=t.call(e,a)}catch(e){i=[6,e],r=0}finally{n=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,l])}}},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var a=i(n(112));t.default=function(e){return r(void 0,void 0,void 0,(function(){return o(this,(function(t){switch(t.label){case 0:return[4,a.default(e)];case 1:return[2,t.sent()]}}))}))}},function(e,t,n){"use strict";var r=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(o,i){function a(e){try{s(r.next(e))}catch(e){i(e)}}function l(e){try{s(r.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,l)}s((r=r.apply(e,t||[])).next())}))},o=this&&this.__generator||function(e,t){var n,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function l(i){return function(l){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!(o=a.trys,(o=o.length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=t.call(e,a)}catch(e){i=[6,e],r=0}finally{n=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,l])}}},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var a=i(n(112)),l=i(n(113)),s=i(n(114)),c=i(n(9));t.default=function(e,t){return r(void 0,void 0,void 0,(function(){var n,r;return o(this,(function(o){switch(o.label){case 0:return n=c.default(),[4,a.default(e)];case 1:return r=(r=o.sent())||[],t?r&&r.length&&r.includes(t)?[2,{error:!0,message:n.infoItemInList,data:r}]:(r.unshift(t),l.default(e,r),[4,s.default(e,r)]):[2,{error:!0,message:n.infoIncorrectValue,data:r}];case 2:return o.sent(),[2,{error:!1,message:n.infoItemAdded,data:r}]}}))}))}},function(e,t,n){"use strict";var r=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(o,i){function a(e){try{s(r.next(e))}catch(e){i(e)}}function l(e){try{s(r.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,l)}s((r=r.apply(e,t||[])).next())}))},o=this&&this.__generator||function(e,t){var n,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function l(i){return function(l){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!(o=a.trys,(o=o.length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=t.call(e,a)}catch(e){i=[6,e],r=0}finally{n=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,l])}}},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var a=i(n(112)),l=i(n(113)),s=i(n(114)),c=i(n(9));t.default=function(e,t){return r(void 0,void 0,void 0,(function(){var n,r;return o(this,(function(o){switch(o.label){case 0:return n=c.default(),[4,a.default(e)];case 1:return r=(r=o.sent())||[],t?null==r?[2,{error:!0,message:n.infoArrayIs0,data:r}]:(r=r.filter((function(e){return e!==t})),l.default(e,r),[4,s.default(e,r)]):[2,{error:!0,message:n.infoIncorrectValue,data:r}];case 2:return o.sent(),[2,{error:!1,message:n.infoItemRemoved,data:r}]}}))}))}},function(e,t,n){"use strict";var r=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(o,i){function a(e){try{s(r.next(e))}catch(e){i(e)}}function l(e){try{s(r.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,l)}s((r=r.apply(e,t||[])).next())}))},o=this&&this.__generator||function(e,t){var n,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function l(i){return function(l){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!(o=a.trys,(o=o.length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=t.call(e,a)}catch(e){i=[6,e],r=0}finally{n=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,l])}}},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var a=i(n(114)),l=i(n(113));t.default=function(e,t){return r(void 0,void 0,void 0,(function(){return o(this,(function(n){switch(n.label){case 0:return l.default(e,t),[4,a.default(e,t)];case 1:return n.sent(),[2,!0]}}))}))}},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),l=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&i(t,e,n);return a(t,e),t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=l(n(1)),u=s(n(9)),d=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return o(t,e),t.prototype.render=function(){var e=u.default();return c.createElement("div",{className:"LoadingBoxTop"},e.loading)},t}(c.Component);t.default=d},function(e,t,n){"use strict";var r=n(154),o={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},i={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},a={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},l={};function s(e){return r.isMemo(e)?a:l[e.$$typeof]||o}l[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},l[r.Memo]=a;var c=Object.defineProperty,u=Object.getOwnPropertyNames,d=Object.getOwnPropertySymbols,f=Object.getOwnPropertyDescriptor,p=Object.getPrototypeOf,h=Object.prototype;e.exports=function e(t,n,r){if("string"!=typeof n){if(h){var o=p(n);o&&o!==h&&e(t,o,r)}var a=u(n);d&&(a=a.concat(d(n)));for(var l=s(t),g=s(n),m=0;m<a.length;++m){var b=a[m];if(!(i[b]||r&&r[b]||g&&g[b]||l&&l[b])){var v=f(n,b);try{c(t,b,v)}catch(e){}}}}return t}},function(e,t,n){n(169),e.exports=n(371)},function(e,t,n){"use strict";(function(e){if(n(170),n(367),n(368),e._babelPolyfill)throw new Error("only one instance of babel-polyfill is allowed");e._babelPolyfill=!0;function t(e,t,n){e[t]||Object.defineProperty(e,t,{writable:!0,configurable:!0,value:n})}t(String.prototype,"padLeft","".padStart),t(String.prototype,"padRight","".padEnd),"pop,reverse,shift,keys,values,entries,indexOf,every,some,forEach,map,filter,find,findIndex,includes,join,slice,concat,push,splice,unshift,sort,lastIndexOf,reduce,reduceRight,copyWithin,fill".split(",").forEach((function(e){[][e]&&t(Array,e,Function.call.bind([][e]))}))}).call(this,n(62))},function(e,t,n){n(171),n(174),n(175),n(176),n(177),n(178),n(179),n(180),n(181),n(182),n(183),n(184),n(185),n(186),n(187),n(188),n(189),n(190),n(191),n(192),n(193),n(194),n(195),n(196),n(197),n(198),n(199),n(200),n(201),n(202),n(203),n(204),n(205),n(206),n(207),n(208),n(209),n(210),n(211),n(212),n(213),n(214),n(215),n(216),n(217),n(218),n(219),n(220),n(221),n(222),n(223),n(224),n(225),n(226),n(227),n(228),n(229),n(230),n(231),n(232),n(233),n(234),n(235),n(236),n(237),n(238),n(239),n(240),n(241),n(242),n(243),n(244),n(245),n(246),n(247),n(248),n(249),n(251),n(252),n(254),n(255),n(256),n(257),n(258),n(259),n(260),n(262),n(263),n(264),n(265),n(266),n(267),n(268),n(269),n(270),n(271),n(272),n(273),n(274),n(103),n(275),n(136),n(276),n(137),n(277),n(278),n(279),n(280),n(281),n(140),n(142),n(143),n(282),n(283),n(284),n(285),n(286),n(287),n(288),n(289),n(290),n(291),n(292),n(293),n(294),n(295),n(296),n(297),n(298),n(299),n(300),n(301),n(302),n(303),n(304),n(305),n(306),n(307),n(308),n(309),n(310),n(311),n(312),n(313),n(314),n(315),n(316),n(317),n(318),n(319),n(320),n(321),n(322),n(323),n(324),n(325),n(326),n(327),n(328),n(329),n(330),n(331),n(332),n(333),n(334),n(335),n(336),n(337),n(338),n(339),n(340),n(341),n(342),n(343),n(344),n(345),n(346),n(347),n(348),n(349),n(350),n(351),n(352),n(353),n(354),n(355),n(356),n(357),n(358),n(359),n(360),n(361),n(362),n(363),n(364),n(365),n(366),e.exports=n(22)},function(e,t,n){"use strict";var r=n(3),o=n(18),i=n(8),a=n(0),l=n(15),s=n(37).KEY,c=n(4),u=n(55),d=n(50),f=n(40),p=n(6),h=n(118),g=n(84),m=n(173),b=n(65),v=n(2),y=n(5),x=n(12),w=n(19),k=n(28),_=n(39),E=n(43),S=n(121),P=n(20),z=n(64),M=n(10),C=n(41),O=P.f,T=M.f,N=S.f,D=r.Symbol,j=r.JSON,I=j&&j.stringify,L=p("_hidden"),A=p("toPrimitive"),R={}.propertyIsEnumerable,B=u("symbol-registry"),F=u("symbols"),W=u("op-symbols"),U=Object.prototype,H="function"==typeof D&&!!z.f,V=r.QObject,q=!V||!V.prototype||!V.prototype.findChild,K=i&&c((function(){return 7!=E(T({},"a",{get:function(){return T(this,"a",{value:7}).a}})).a}))?function(e,t,n){var r=O(U,t);r&&delete U[t],T(e,t,n),r&&e!==U&&T(U,t,r)}:T,$=function(e){var t=F[e]=E(D.prototype);return t._k=e,t},J=H&&"symbol"==typeof D.iterator?function(e){return"symbol"==typeof e}:function(e){return e instanceof D},G=function(e,t,n){return e===U&&G(W,t,n),v(e),t=k(t,!0),v(n),o(F,t)?(n.enumerable?(o(e,L)&&e[L][t]&&(e[L][t]=!1),n=E(n,{enumerable:_(0,!1)})):(o(e,L)||T(e,L,_(1,{})),e[L][t]=!0),K(e,t,n)):T(e,t,n)},Y=function(e,t){v(e);for(var n,r=m(t=w(t)),o=0,i=r.length;i>o;)G(e,n=r[o++],t[n]);return e},Z=function(e){var t=R.call(this,e=k(e,!0));return!(this===U&&o(F,e)&&!o(W,e))&&(!(t||!o(this,e)||!o(F,e)||o(this,L)&&this[L][e])||t)},Q=function(e,t){if(e=w(e),t=k(t,!0),e!==U||!o(F,t)||o(W,t)){var n=O(e,t);return!n||!o(F,t)||o(e,L)&&e[L][t]||(n.enumerable=!0),n}},X=function(e){for(var t,n=N(w(e)),r=[],i=0;n.length>i;)o(F,t=n[i++])||t==L||t==s||r.push(t);return r},ee=function(e){for(var t,n=e===U,r=N(n?W:w(e)),i=[],a=0;r.length>a;)!o(F,t=r[a++])||n&&!o(U,t)||i.push(F[t]);return i};H||(l((D=function(){if(this instanceof D)throw TypeError("Symbol is not a constructor!");var e=f(arguments.length>0?arguments[0]:void 0),t=function(n){this===U&&t.call(W,n),o(this,L)&&o(this[L],e)&&(this[L][e]=!1),K(this,e,_(1,n))};return i&&q&&K(U,e,{configurable:!0,set:t}),$(e)}).prototype,"toString",(function(){return this._k})),P.f=Q,M.f=G,n(44).f=S.f=X,n(57).f=Z,z.f=ee,i&&!n(36)&&l(U,"propertyIsEnumerable",Z,!0),h.f=function(e){return $(p(e))}),a(a.G+a.W+a.F*!H,{Symbol:D});for(var te="hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","),ne=0;te.length>ne;)p(te[ne++]);for(var re=C(p.store),oe=0;re.length>oe;)g(re[oe++]);a(a.S+a.F*!H,"Symbol",{for:function(e){return o(B,e+="")?B[e]:B[e]=D(e)},keyFor:function(e){if(!J(e))throw TypeError(e+" is not a symbol!");for(var t in B)if(B[t]===e)return t},useSetter:function(){q=!0},useSimple:function(){q=!1}}),a(a.S+a.F*!H,"Object",{create:function(e,t){return void 0===t?E(e):Y(E(e),t)},defineProperty:G,defineProperties:Y,getOwnPropertyDescriptor:Q,getOwnPropertyNames:X,getOwnPropertySymbols:ee});var ie=c((function(){z.f(1)}));a(a.S+a.F*ie,"Object",{getOwnPropertySymbols:function(e){return z.f(x(e))}}),j&&a(a.S+a.F*(!H||c((function(){var e=D();return"[null]"!=I([e])||"{}"!=I({a:e})||"{}"!=I(Object(e))}))),"JSON",{stringify:function(e){for(var t,n,r=[e],o=1;arguments.length>o;)r.push(arguments[o++]);if(n=t=r[1],(y(t)||void 0!==e)&&!J(e))return b(t)||(t=function(e,t){if("function"==typeof n&&(t=n.call(this,e,t)),!J(t))return t}),r[1]=t,I.apply(j,r)}}),D.prototype[A]||n(14)(D.prototype,A,D.prototype.valueOf),d(D,"Symbol"),d(Math,"Math",!0),d(r.JSON,"JSON",!0)},function(e,t,n){e.exports=n(55)("native-function-to-string",Function.toString)},function(e,t,n){var r=n(41),o=n(64),i=n(57);e.exports=function(e){var t=r(e),n=o.f;if(n)for(var a,l=n(e),s=i.f,c=0;l.length>c;)s.call(e,a=l[c++])&&t.push(a);return t}},function(e,t,n){var r=n(0);r(r.S,"Object",{create:n(43)})},function(e,t,n){var r=n(0);r(r.S+r.F*!n(8),"Object",{defineProperty:n(10).f})},function(e,t,n){var r=n(0);r(r.S+r.F*!n(8),"Object",{defineProperties:n(120)})},function(e,t,n){var r=n(19),o=n(20).f;n(30)("getOwnPropertyDescriptor",(function(){return function(e,t){return o(r(e),t)}}))},function(e,t,n){var r=n(12),o=n(21);n(30)("getPrototypeOf",(function(){return function(e){return o(r(e))}}))},function(e,t,n){var r=n(12),o=n(41);n(30)("keys",(function(){return function(e){return o(r(e))}}))},function(e,t,n){n(30)("getOwnPropertyNames",(function(){return n(121).f}))},function(e,t,n){var r=n(5),o=n(37).onFreeze;n(30)("freeze",(function(e){return function(t){return e&&r(t)?e(o(t)):t}}))},function(e,t,n){var r=n(5),o=n(37).onFreeze;n(30)("seal",(function(e){return function(t){return e&&r(t)?e(o(t)):t}}))},function(e,t,n){var r=n(5),o=n(37).onFreeze;n(30)("preventExtensions",(function(e){return function(t){return e&&r(t)?e(o(t)):t}}))},function(e,t,n){var r=n(5);n(30)("isFrozen",(function(e){return function(t){return!r(t)||!!e&&e(t)}}))},function(e,t,n){var r=n(5);n(30)("isSealed",(function(e){return function(t){return!r(t)||!!e&&e(t)}}))},function(e,t,n){var r=n(5);n(30)("isExtensible",(function(e){return function(t){return!!r(t)&&(!e||e(t))}}))},function(e,t,n){var r=n(0);r(r.S+r.F,"Object",{assign:n(122)})},function(e,t,n){var r=n(0);r(r.S,"Object",{is:n(123)})},function(e,t,n){var r=n(0);r(r.S,"Object",{setPrototypeOf:n(88).set})},function(e,t,n){"use strict";var r=n(51),o={};o[n(6)("toStringTag")]="z",o+""!="[object z]"&&n(15)(Object.prototype,"toString",(function(){return"[object "+r(this)+"]"}),!0)},function(e,t,n){var r=n(0);r(r.P,"Function",{bind:n(124)})},function(e,t,n){var r=n(10).f,o=Function.prototype,i=/^\s*function ([^ (]*)/;"name"in o||n(8)&&r(o,"name",{configurable:!0,get:function(){try{return(""+this).match(i)[1]}catch(e){return""}}})},function(e,t,n){"use strict";var r=n(5),o=n(21),i=n(6)("hasInstance"),a=Function.prototype;i in a||n(10).f(a,i,{value:function(e){if("function"!=typeof this||!r(e))return!1;if(!r(this.prototype))return e instanceof this;for(;e=o(e);)if(this.prototype===e)return!0;return!1}})},function(e,t,n){var r=n(0),o=n(126);r(r.G+r.F*(parseInt!=o),{parseInt:o})},function(e,t,n){var r=n(0),o=n(127);r(r.G+r.F*(parseFloat!=o),{parseFloat:o})},function(e,t,n){"use strict";var r=n(3),o=n(18),i=n(24),a=n(90),l=n(28),s=n(4),c=n(44).f,u=n(20).f,d=n(10).f,f=n(52).trim,p=r.Number,h=p,g=p.prototype,m="Number"==i(n(43)(g)),b="trim"in String.prototype,v=function(e){var t=l(e,!1);if("string"==typeof t&&t.length>2){var n,r,o,i=(t=b?t.trim():f(t,3)).charCodeAt(0);if(43===i||45===i){if(88===(n=t.charCodeAt(2))||120===n)return NaN}else if(48===i){switch(t.charCodeAt(1)){case 66:case 98:r=2,o=49;break;case 79:case 111:r=8,o=55;break;default:return+t}for(var a,s=t.slice(2),c=0,u=s.length;c<u;c++)if((a=s.charCodeAt(c))<48||a>o)return NaN;return parseInt(s,r)}}return+t};if(!p(" 0o1")||!p("0b1")||p("+0x1")){p=function(e){var t=arguments.length<1?0:e,n=this;return n instanceof p&&(m?s((function(){g.valueOf.call(n)})):"Number"!=i(n))?a(new h(v(t)),n,p):v(t)};for(var y,x=n(8)?c(h):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger".split(","),w=0;x.length>w;w++)o(h,y=x[w])&&!o(p,y)&&d(p,y,u(h,y));p.prototype=g,g.constructor=p,n(15)(r,"Number",p)}},function(e,t,n){"use strict";var r=n(0),o=n(25),i=n(128),a=n(91),l=1..toFixed,s=Math.floor,c=[0,0,0,0,0,0],u="Number.toFixed: incorrect invocation!",d=function(e,t){for(var n=-1,r=t;++n<6;)r+=e*c[n],c[n]=r%1e7,r=s(r/1e7)},f=function(e){for(var t=6,n=0;--t>=0;)n+=c[t],c[t]=s(n/e),n=n%e*1e7},p=function(){for(var e=6,t="";--e>=0;)if(""!==t||0===e||0!==c[e]){var n=String(c[e]);t=""===t?n:t+a.call("0",7-n.length)+n}return t},h=function(e,t,n){return 0===t?n:t%2==1?h(e,t-1,n*e):h(e*e,t/2,n)};r(r.P+r.F*(!!l&&("0.000"!==8e-5.toFixed(3)||"1"!==.9.toFixed(0)||"1.25"!==1.255.toFixed(2)||"1000000000000000128"!==(0xde0b6b3a7640080).toFixed(0))||!n(4)((function(){l.call({})}))),"Number",{toFixed:function(e){var t,n,r,l,s=i(this,u),c=o(e),g="",m="0";if(c<0||c>20)throw RangeError(u);if(s!=s)return"NaN";if(s<=-1e21||s>=1e21)return String(s);if(s<0&&(g="-",s=-s),s>1e-21)if(n=(t=function(e){for(var t=0,n=e;n>=4096;)t+=12,n/=4096;for(;n>=2;)t+=1,n/=2;return t}(s*h(2,69,1))-69)<0?s*h(2,-t,1):s/h(2,t,1),n*=4503599627370496,(t=52-t)>0){for(d(0,n),r=c;r>=7;)d(1e7,0),r-=7;for(d(h(10,r,1),0),r=t-1;r>=23;)f(1<<23),r-=23;f(1<<r),d(1,1),f(2),m=p()}else d(0,n),d(1<<-t,0),m=p()+a.call("0",c);return m=c>0?g+((l=m.length)<=c?"0."+a.call("0",c-l)+m:m.slice(0,l-c)+"."+m.slice(l-c)):g+m}})},function(e,t,n){"use strict";var r=n(0),o=n(4),i=n(128),a=1..toPrecision;r(r.P+r.F*(o((function(){return"1"!==a.call(1,void 0)}))||!o((function(){a.call({})}))),"Number",{toPrecision:function(e){var t=i(this,"Number#toPrecision: incorrect invocation!");return void 0===e?a.call(t):a.call(t,e)}})},function(e,t,n){var r=n(0);r(r.S,"Number",{EPSILON:Math.pow(2,-52)})},function(e,t,n){var r=n(0),o=n(3).isFinite;r(r.S,"Number",{isFinite:function(e){return"number"==typeof e&&o(e)}})},function(e,t,n){var r=n(0);r(r.S,"Number",{isInteger:n(129)})},function(e,t,n){var r=n(0);r(r.S,"Number",{isNaN:function(e){return e!=e}})},function(e,t,n){var r=n(0),o=n(129),i=Math.abs;r(r.S,"Number",{isSafeInteger:function(e){return o(e)&&i(e)<=9007199254740991}})},function(e,t,n){var r=n(0);r(r.S,"Number",{MAX_SAFE_INTEGER:9007199254740991})},function(e,t,n){var r=n(0);r(r.S,"Number",{MIN_SAFE_INTEGER:-9007199254740991})},function(e,t,n){var r=n(0),o=n(127);r(r.S+r.F*(Number.parseFloat!=o),"Number",{parseFloat:o})},function(e,t,n){var r=n(0),o=n(126);r(r.S+r.F*(Number.parseInt!=o),"Number",{parseInt:o})},function(e,t,n){var r=n(0),o=n(130),i=Math.sqrt,a=Math.acosh;r(r.S+r.F*!(a&&710==Math.floor(a(Number.MAX_VALUE))&&a(1/0)==1/0),"Math",{acosh:function(e){return(e=+e)<1?NaN:e>94906265.62425156?Math.log(e)+Math.LN2:o(e-1+i(e-1)*i(e+1))}})},function(e,t,n){var r=n(0),o=Math.asinh;r(r.S+r.F*!(o&&1/o(0)>0),"Math",{asinh:function e(t){return isFinite(t=+t)&&0!=t?t<0?-e(-t):Math.log(t+Math.sqrt(t*t+1)):t}})},function(e,t,n){var r=n(0),o=Math.atanh;r(r.S+r.F*!(o&&1/o(-0)<0),"Math",{atanh:function(e){return 0==(e=+e)?e:Math.log((1+e)/(1-e))/2}})},function(e,t,n){var r=n(0),o=n(92);r(r.S,"Math",{cbrt:function(e){return o(e=+e)*Math.pow(Math.abs(e),1/3)}})},function(e,t,n){var r=n(0);r(r.S,"Math",{clz32:function(e){return(e>>>=0)?31-Math.floor(Math.log(e+.5)*Math.LOG2E):32}})},function(e,t,n){var r=n(0),o=Math.exp;r(r.S,"Math",{cosh:function(e){return(o(e=+e)+o(-e))/2}})},function(e,t,n){var r=n(0),o=n(93);r(r.S+r.F*(o!=Math.expm1),"Math",{expm1:o})},function(e,t,n){var r=n(0);r(r.S,"Math",{fround:n(131)})},function(e,t,n){var r=n(0),o=Math.abs;r(r.S,"Math",{hypot:function(e,t){for(var n,r,i=0,a=0,l=arguments.length,s=0;a<l;)s<(n=o(arguments[a++]))?(i=i*(r=s/n)*r+1,s=n):i+=n>0?(r=n/s)*r:n;return s===1/0?1/0:s*Math.sqrt(i)}})},function(e,t,n){var r=n(0),o=Math.imul;r(r.S+r.F*n(4)((function(){return-5!=o(4294967295,5)||2!=o.length})),"Math",{imul:function(e,t){var n=+e,r=+t,o=65535&n,i=65535&r;return 0|o*i+((65535&n>>>16)*i+o*(65535&r>>>16)<<16>>>0)}})},function(e,t,n){var r=n(0);r(r.S,"Math",{log10:function(e){return Math.log(e)*Math.LOG10E}})},function(e,t,n){var r=n(0);r(r.S,"Math",{log1p:n(130)})},function(e,t,n){var r=n(0);r(r.S,"Math",{log2:function(e){return Math.log(e)/Math.LN2}})},function(e,t,n){var r=n(0);r(r.S,"Math",{sign:n(92)})},function(e,t,n){var r=n(0),o=n(93),i=Math.exp;r(r.S+r.F*n(4)((function(){return-2e-17!=!Math.sinh(-2e-17)})),"Math",{sinh:function(e){return Math.abs(e=+e)<1?(o(e)-o(-e))/2:(i(e-1)-i(-e-1))*(Math.E/2)}})},function(e,t,n){var r=n(0),o=n(93),i=Math.exp;r(r.S,"Math",{tanh:function(e){var t=o(e=+e),n=o(-e);return t==1/0?1:n==1/0?-1:(t-n)/(i(e)+i(-e))}})},function(e,t,n){var r=n(0);r(r.S,"Math",{trunc:function(e){return(e>0?Math.floor:Math.ceil)(e)}})},function(e,t,n){var r=n(0),o=n(42),i=String.fromCharCode,a=String.fromCodePoint;r(r.S+r.F*(!!a&&1!=a.length),"String",{fromCodePoint:function(e){for(var t,n=[],r=arguments.length,a=0;r>a;){if(t=+arguments[a++],o(t,1114111)!==t)throw RangeError(t+" is not a valid code point");n.push(t<65536?i(t):i(55296+((t-=65536)>>10),t%1024+56320))}return n.join("")}})},function(e,t,n){var r=n(0),o=n(19),i=n(7);r(r.S,"String",{raw:function(e){for(var t=o(e.raw),n=i(t.length),r=arguments.length,a=[],l=0;n>l;)a.push(String(t[l++])),l<r&&a.push(String(arguments[l]));return a.join("")}})},function(e,t,n){"use strict";n(52)("trim",(function(e){return function(){return e(this,3)}}))},function(e,t,n){"use strict";var r=n(66)(!0);n(94)(String,"String",(function(e){this._t=String(e),this._i=0}),(function(){var e,t=this._t,n=this._i;return n>=t.length?{value:void 0,done:!0}:(e=r(t,n),this._i+=e.length,{value:e,done:!1})}))},function(e,t,n){"use strict";var r=n(0),o=n(66)(!1);r(r.P,"String",{codePointAt:function(e){return o(this,e)}})},function(e,t,n){"use strict";var r=n(0),o=n(7),i=n(96),a="".endsWith;r(r.P+r.F*n(97)("endsWith"),"String",{endsWith:function(e){var t=i(this,e,"endsWith"),n=arguments.length>1?arguments[1]:void 0,r=o(t.length),l=void 0===n?r:Math.min(o(n),r),s=String(e);return a?a.call(t,s,l):t.slice(l-s.length,l)===s}})},function(e,t,n){"use strict";var r=n(0),o=n(96);r(r.P+r.F*n(97)("includes"),"String",{includes:function(e){return!!~o(this,e,"includes").indexOf(e,arguments.length>1?arguments[1]:void 0)}})},function(e,t,n){var r=n(0);r(r.P,"String",{repeat:n(91)})},function(e,t,n){"use strict";var r=n(0),o=n(7),i=n(96),a="".startsWith;r(r.P+r.F*n(97)("startsWith"),"String",{startsWith:function(e){var t=i(this,e,"startsWith"),n=o(Math.min(arguments.length>1?arguments[1]:void 0,t.length)),r=String(e);return a?a.call(t,r,n):t.slice(n,n+r.length)===r}})},function(e,t,n){"use strict";n(16)("anchor",(function(e){return function(t){return e(this,"a","name",t)}}))},function(e,t,n){"use strict";n(16)("big",(function(e){return function(){return e(this,"big","","")}}))},function(e,t,n){"use strict";n(16)("blink",(function(e){return function(){return e(this,"blink","","")}}))},function(e,t,n){"use strict";n(16)("bold",(function(e){return function(){return e(this,"b","","")}}))},function(e,t,n){"use strict";n(16)("fixed",(function(e){return function(){return e(this,"tt","","")}}))},function(e,t,n){"use strict";n(16)("fontcolor",(function(e){return function(t){return e(this,"font","color",t)}}))},function(e,t,n){"use strict";n(16)("fontsize",(function(e){return function(t){return e(this,"font","size",t)}}))},function(e,t,n){"use strict";n(16)("italics",(function(e){return function(){return e(this,"i","","")}}))},function(e,t,n){"use strict";n(16)("link",(function(e){return function(t){return e(this,"a","href",t)}}))},function(e,t,n){"use strict";n(16)("small",(function(e){return function(){return e(this,"small","","")}}))},function(e,t,n){"use strict";n(16)("strike",(function(e){return function(){return e(this,"strike","","")}}))},function(e,t,n){"use strict";n(16)("sub",(function(e){return function(){return e(this,"sub","","")}}))},function(e,t,n){"use strict";n(16)("sup",(function(e){return function(){return e(this,"sup","","")}}))},function(e,t,n){var r=n(0);r(r.S,"Date",{now:function(){return(new Date).getTime()}})},function(e,t,n){"use strict";var r=n(0),o=n(12),i=n(28);r(r.P+r.F*n(4)((function(){return null!==new Date(NaN).toJSON()||1!==Date.prototype.toJSON.call({toISOString:function(){return 1}})})),"Date",{toJSON:function(e){var t=o(this),n=i(t);return"number"!=typeof n||isFinite(n)?t.toISOString():null}})},function(e,t,n){var r=n(0),o=n(250);r(r.P+r.F*(Date.prototype.toISOString!==o),"Date",{toISOString:o})},function(e,t,n){"use strict";var r=n(4),o=Date.prototype.getTime,i=Date.prototype.toISOString,a=function(e){return e>9?e:"0"+e};e.exports=r((function(){return"0385-07-25T07:06:39.999Z"!=i.call(new Date(-50000000000001))}))||!r((function(){i.call(new Date(NaN))}))?function(){if(!isFinite(o.call(this)))throw RangeError("Invalid time value");var e=this,t=e.getUTCFullYear(),n=e.getUTCMilliseconds(),r=t<0?"-":t>9999?"+":"";return r+("00000"+Math.abs(t)).slice(r?-6:-4)+"-"+a(e.getUTCMonth()+1)+"-"+a(e.getUTCDate())+"T"+a(e.getUTCHours())+":"+a(e.getUTCMinutes())+":"+a(e.getUTCSeconds())+"."+(n>99?n:"0"+a(n))+"Z"}:i},function(e,t,n){var r=Date.prototype,o=r.toString,i=r.getTime;new Date(NaN)+""!="Invalid Date"&&n(15)(r,"toString",(function(){var e=i.call(this);return e==e?o.call(this):"Invalid Date"}))},function(e,t,n){var r=n(6)("toPrimitive"),o=Date.prototype;r in o||n(14)(o,r,n(253))},function(e,t,n){"use strict";var r=n(2),o=n(28);e.exports=function(e){if("string"!==e&&"number"!==e&&"default"!==e)throw TypeError("Incorrect hint");return o(r(this),"number"!=e)}},function(e,t,n){var r=n(0);r(r.S,"Array",{isArray:n(65)})},function(e,t,n){"use strict";var r=n(23),o=n(0),i=n(12),a=n(132),l=n(98),s=n(7),c=n(99),u=n(100);o(o.S+o.F*!n(68)((function(e){Array.from(e)})),"Array",{from:function(e){var t,n,o,d,f=i(e),p="function"==typeof this?this:Array,h=arguments.length,g=h>1?arguments[1]:void 0,m=void 0!==g,b=0,v=u(f);if(m&&(g=r(g,h>2?arguments[2]:void 0,2)),null==v||p==Array&&l(v))for(n=new p(t=s(f.length));t>b;b++)c(n,b,m?g(f[b],b):f[b]);else for(d=v.call(f),n=new p;!(o=d.next()).done;b++)c(n,b,m?a(d,g,[o.value,b],!0):o.value);return n.length=b,n}})},function(e,t,n){"use strict";var r=n(0),o=n(99);r(r.S+r.F*n(4)((function(){function e(){}return!(Array.of.call(e)instanceof e)})),"Array",{of:function(){for(var e=0,t=arguments.length,n=new("function"==typeof this?this:Array)(t);t>e;)o(n,e,arguments[e++]);return n.length=t,n}})},function(e,t,n){"use strict";var r=n(0),o=n(19),i=[].join;r(r.P+r.F*(n(56)!=Object||!n(26)(i)),"Array",{join:function(e){return i.call(o(this),void 0===e?",":e)}})},function(e,t,n){"use strict";var r=n(0),o=n(87),i=n(24),a=n(42),l=n(7),s=[].slice;r(r.P+r.F*n(4)((function(){o&&s.call(o)})),"Array",{slice:function(e,t){var n=l(this.length),r=i(this);if(t=void 0===t?n:t,"Array"==r)return s.call(this,e,t);for(var o=a(e,n),c=a(t,n),u=l(c-o),d=new Array(u),f=0;f<u;f++)d[f]="String"==r?this.charAt(o+f):this[o+f];return d}})},function(e,t,n){"use strict";var r=n(0),o=n(13),i=n(12),a=n(4),l=[].sort,s=[1,2,3];r(r.P+r.F*(a((function(){s.sort(void 0)}))||!a((function(){s.sort(null)}))||!n(26)(l)),"Array",{sort:function(e){return void 0===e?l.call(i(this)):l.call(i(this),o(e))}})},function(e,t,n){"use strict";var r=n(0),o=n(31)(0),i=n(26)([].forEach,!0);r(r.P+r.F*!i,"Array",{forEach:function(e){return o(this,e,arguments[1])}})},function(e,t,n){var r=n(5),o=n(65),i=n(6)("species");e.exports=function(e){var t;return o(e)&&("function"!=typeof(t=e.constructor)||t!==Array&&!o(t.prototype)||(t=void 0),r(t)&&null===(t=t[i])&&(t=void 0)),void 0===t?Array:t}},function(e,t,n){"use strict";var r=n(0),o=n(31)(1);r(r.P+r.F*!n(26)([].map,!0),"Array",{map:function(e){return o(this,e,arguments[1])}})},function(e,t,n){"use strict";var r=n(0),o=n(31)(2);r(r.P+r.F*!n(26)([].filter,!0),"Array",{filter:function(e){return o(this,e,arguments[1])}})},function(e,t,n){"use strict";var r=n(0),o=n(31)(3);r(r.P+r.F*!n(26)([].some,!0),"Array",{some:function(e){return o(this,e,arguments[1])}})},function(e,t,n){"use strict";var r=n(0),o=n(31)(4);r(r.P+r.F*!n(26)([].every,!0),"Array",{every:function(e){return o(this,e,arguments[1])}})},function(e,t,n){"use strict";var r=n(0),o=n(133);r(r.P+r.F*!n(26)([].reduce,!0),"Array",{reduce:function(e){return o(this,e,arguments.length,arguments[1],!1)}})},function(e,t,n){"use strict";var r=n(0),o=n(133);r(r.P+r.F*!n(26)([].reduceRight,!0),"Array",{reduceRight:function(e){return o(this,e,arguments.length,arguments[1],!0)}})},function(e,t,n){"use strict";var r=n(0),o=n(63)(!1),i=[].indexOf,a=!!i&&1/[1].indexOf(1,-0)<0;r(r.P+r.F*(a||!n(26)(i)),"Array",{indexOf:function(e){return a?i.apply(this,arguments)||0:o(this,e,arguments[1])}})},function(e,t,n){"use strict";var r=n(0),o=n(19),i=n(25),a=n(7),l=[].lastIndexOf,s=!!l&&1/[1].lastIndexOf(1,-0)<0;r(r.P+r.F*(s||!n(26)(l)),"Array",{lastIndexOf:function(e){if(s)return l.apply(this,arguments)||0;var t=o(this),n=a(t.length),r=n-1;for(arguments.length>1&&(r=Math.min(r,i(arguments[1]))),r<0&&(r=n+r);r>=0;r--)if(r in t&&t[r]===e)return r||0;return-1}})},function(e,t,n){var r=n(0);r(r.P,"Array",{copyWithin:n(134)}),n(38)("copyWithin")},function(e,t,n){var r=n(0);r(r.P,"Array",{fill:n(102)}),n(38)("fill")},function(e,t,n){"use strict";var r=n(0),o=n(31)(5),i=!0;"find"in[]&&Array(1).find((function(){i=!1})),r(r.P+r.F*i,"Array",{find:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0)}}),n(38)("find")},function(e,t,n){"use strict";var r=n(0),o=n(31)(6),i="findIndex",a=!0;i in[]&&Array(1)[i]((function(){a=!1})),r(r.P+r.F*a,"Array",{findIndex:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0)}}),n(38)(i)},function(e,t,n){n(45)("Array")},function(e,t,n){var r=n(3),o=n(90),i=n(10).f,a=n(44).f,l=n(67),s=n(58),c=r.RegExp,u=c,d=c.prototype,f=/a/g,p=/a/g,h=new c(f)!==f;if(n(8)&&(!h||n(4)((function(){return p[n(6)("match")]=!1,c(f)!=f||c(p)==p||"/a/i"!=c(f,"i")})))){c=function(e,t){var n=this instanceof c,r=l(e),i=void 0===t;return!n&&r&&e.constructor===c&&i?e:o(h?new u(r&&!i?e.source:e,t):u((r=e instanceof c)?e.source:e,r&&i?s.call(e):t),n?this:d,c)};for(var g=function(e){e in c||i(c,e,{configurable:!0,get:function(){return u[e]},set:function(t){u[e]=t}})},m=a(u),b=0;m.length>b;)g(m[b++]);d.constructor=c,c.prototype=d,n(15)(r,"RegExp",c)}n(45)("RegExp")},function(e,t,n){"use strict";n(137);var r=n(2),o=n(58),i=n(8),a=/./.toString,l=function(e){n(15)(RegExp.prototype,"toString",e,!0)};n(4)((function(){return"/a/b"!=a.call({source:"a",flags:"b"})}))?l((function(){var e=r(this);return"/".concat(e.source,"/","flags"in e?e.flags:!i&&e instanceof RegExp?o.call(e):void 0)})):"toString"!=a.name&&l((function(){return a.call(this)}))},function(e,t,n){"use strict";var r=n(2),o=n(7),i=n(105),a=n(69);n(70)("match",1,(function(e,t,n,l){return[function(n){var r=e(this),o=null==n?void 0:n[t];return void 0!==o?o.call(n,r):new RegExp(n)[t](String(r))},function(e){var t=l(n,e,this);if(t.done)return t.value;var s=r(e),c=String(this);if(!s.global)return a(s,c);var u=s.unicode;s.lastIndex=0;for(var d,f=[],p=0;null!==(d=a(s,c));){var h=String(d[0]);f[p]=h,""===h&&(s.lastIndex=i(c,o(s.lastIndex),u)),p++}return 0===p?null:f}]}))},function(e,t,n){"use strict";var r=n(2),o=n(12),i=n(7),a=n(25),l=n(105),s=n(69),c=Math.max,u=Math.min,d=Math.floor,f=/\$([$&`']|\d\d?|<[^>]*>)/g,p=/\$([$&`']|\d\d?)/g;n(70)("replace",2,(function(e,t,n,h){return[function(r,o){var i=e(this),a=null==r?void 0:r[t];return void 0!==a?a.call(r,i,o):n.call(String(i),r,o)},function(e,t){var o=h(n,e,this,t);if(o.done)return o.value;var d=r(e),f=String(this),p="function"==typeof t;p||(t=String(t));var m=d.global;if(m){var b=d.unicode;d.lastIndex=0}for(var v=[];;){var y=s(d,f);if(null===y)break;if(v.push(y),!m)break;""===String(y[0])&&(d.lastIndex=l(f,i(d.lastIndex),b))}for(var x,w="",k=0,_=0;_<v.length;_++){y=v[_];for(var E=String(y[0]),S=c(u(a(y.index),f.length),0),P=[],z=1;z<y.length;z++)P.push(void 0===(x=y[z])?x:String(x));var M=y.groups;if(p){var C=[E].concat(P,S,f);void 0!==M&&C.push(M);var O=String(t.apply(void 0,C))}else O=g(E,f,S,P,M,t);S>=k&&(w+=f.slice(k,S)+O,k=S+E.length)}return w+f.slice(k)}];function g(e,t,r,i,a,l){var s=r+e.length,c=i.length,u=p;return void 0!==a&&(a=o(a),u=f),n.call(l,u,(function(n,o){var l;switch(o.charAt(0)){case"$":return"$";case"&":return e;case"`":return t.slice(0,r);case"'":return t.slice(s);case"<":l=a[o.slice(1,-1)];break;default:var u=+o;if(0===u)return n;if(u>c){var f=d(u/10);return 0===f?n:f<=c?void 0===i[f-1]?o.charAt(1):i[f-1]+o.charAt(1):n}l=i[u-1]}return void 0===l?"":l}))}}))},function(e,t,n){"use strict";var r=n(2),o=n(123),i=n(69);n(70)("search",1,(function(e,t,n,a){return[function(n){var r=e(this),o=null==n?void 0:n[t];return void 0!==o?o.call(n,r):new RegExp(n)[t](String(r))},function(e){var t=a(n,e,this);if(t.done)return t.value;var l=r(e),s=String(this),c=l.lastIndex;o(c,0)||(l.lastIndex=0);var u=i(l,s);return o(l.lastIndex,c)||(l.lastIndex=c),null===u?-1:u.index}]}))},function(e,t,n){"use strict";var r=n(67),o=n(2),i=n(59),a=n(105),l=n(7),s=n(69),c=n(104),u=n(4),d=Math.min,f=[].push,p="length",h=!u((function(){RegExp(4294967295,"y")}));n(70)("split",2,(function(e,t,n,u){var g;return g="c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1)[p]||2!="ab".split(/(?:ab)*/)[p]||4!=".".split(/(.?)(.?)/)[p]||".".split(/()()/)[p]>1||"".split(/.?/)[p]?function(e,t){var o=String(this);if(void 0===e&&0===t)return[];if(!r(e))return n.call(o,e,t);for(var i,a,l,s=[],u=(e.ignoreCase?"i":"")+(e.multiline?"m":"")+(e.unicode?"u":"")+(e.sticky?"y":""),d=0,h=void 0===t?4294967295:t>>>0,g=new RegExp(e.source,u+"g");(i=c.call(g,o))&&!((a=g.lastIndex)>d&&(s.push(o.slice(d,i.index)),i[p]>1&&i.index<o[p]&&f.apply(s,i.slice(1)),l=i[0][p],d=a,s[p]>=h));)g.lastIndex===i.index&&g.lastIndex++;return d===o[p]?!l&&g.test("")||s.push(""):s.push(o.slice(d)),s[p]>h?s.slice(0,h):s}:"0".split(void 0,0)[p]?function(e,t){return void 0===e&&0===t?[]:n.call(this,e,t)}:n,[function(n,r){var o=e(this),i=null==n?void 0:n[t];return void 0!==i?i.call(n,o,r):g.call(String(o),n,r)},function(e,t){var r=u(g,e,this,t,g!==n);if(r.done)return r.value;var c=o(e),f=String(this),p=i(c,RegExp),m=c.unicode,b=(c.ignoreCase?"i":"")+(c.multiline?"m":"")+(c.unicode?"u":"")+(h?"y":"g"),v=new p(h?c:"^(?:"+c.source+")",b),y=void 0===t?4294967295:t>>>0;if(0===y)return[];if(0===f.length)return null===s(v,f)?[f]:[];for(var x=0,w=0,k=[];w<f.length;){v.lastIndex=h?w:0;var _,E=s(v,h?f:f.slice(w));if(null===E||(_=d(l(v.lastIndex+(h?0:w)),f.length))===x)w=a(f,w,m);else{if(k.push(f.slice(x,w)),k.length===y)return k;for(var S=1;S<=E.length-1;S++)if(k.push(E[S]),k.length===y)return k;w=x=_}}return k.push(f.slice(x)),k}]}))},function(e,t,n){"use strict";var r,o,i,a,l=n(36),s=n(3),c=n(23),u=n(51),d=n(0),f=n(5),p=n(13),h=n(46),g=n(47),m=n(59),b=n(106).set,v=n(107)(),y=n(108),x=n(138),w=n(71),k=n(139),_=s.TypeError,E=s.process,S=E&&E.versions,P=S&&S.v8||"",z=s.Promise,M="process"==u(E),C=function(){},O=o=y.f,T=!!function(){try{var e=z.resolve(1),t=(e.constructor={})[n(6)("species")]=function(e){e(C,C)};return(M||"function"==typeof PromiseRejectionEvent)&&e.then(C)instanceof t&&0!==P.indexOf("6.6")&&-1===w.indexOf("Chrome/66")}catch(e){}}(),N=function(e){var t;return!(!f(e)||"function"!=typeof(t=e.then))&&t},D=function(e,t){if(!e._n){e._n=!0;var n=e._c;v((function(){for(var r=e._v,o=1==e._s,i=0,a=function(t){var n,i,a,l=o?t.ok:t.fail,s=t.resolve,c=t.reject,u=t.domain;try{l?(o||(2==e._h&&L(e),e._h=1),!0===l?n=r:(u&&u.enter(),n=l(r),u&&(u.exit(),a=!0)),n===t.promise?c(_("Promise-chain cycle")):(i=N(n))?i.call(n,s,c):s(n)):c(r)}catch(e){u&&!a&&u.exit(),c(e)}};n.length>i;)a(n[i++]);e._c=[],e._n=!1,t&&!e._h&&j(e)}))}},j=function(e){b.call(s,(function(){var t,n,r,o=e._v,i=I(e);if(i&&(t=x((function(){M?E.emit("unhandledRejection",o,e):(n=s.onunhandledrejection)?n({promise:e,reason:o}):(r=s.console)&&r.error&&r.error("Unhandled promise rejection",o)})),e._h=M||I(e)?2:1),e._a=void 0,i&&t.e)throw t.v}))},I=function(e){return 1!==e._h&&0===(e._a||e._c).length},L=function(e){b.call(s,(function(){var t;M?E.emit("rejectionHandled",e):(t=s.onrejectionhandled)&&t({promise:e,reason:e._v})}))},A=function(e){var t=this;t._d||(t._d=!0,(t=t._w||t)._v=e,t._s=2,t._a||(t._a=t._c.slice()),D(t,!0))},R=function(e){var t,n=this;if(!n._d){n._d=!0,n=n._w||n;try{if(n===e)throw _("Promise can't be resolved itself");(t=N(e))?v((function(){var r={_w:n,_d:!1};try{t.call(e,c(R,r,1),c(A,r,1))}catch(e){A.call(r,e)}})):(n._v=e,n._s=1,D(n,!1))}catch(e){A.call({_w:n,_d:!1},e)}}};T||(z=function(e){h(this,z,"Promise","_h"),p(e),r.call(this);try{e(c(R,this,1),c(A,this,1))}catch(e){A.call(this,e)}},(r=function(e){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1}).prototype=n(48)(z.prototype,{then:function(e,t){var n=O(m(this,z));return n.ok="function"!=typeof e||e,n.fail="function"==typeof t&&t,n.domain=M?E.domain:void 0,this._c.push(n),this._a&&this._a.push(n),this._s&&D(this,!1),n.promise},catch:function(e){return this.then(void 0,e)}}),i=function(){var e=new r;this.promise=e,this.resolve=c(R,e,1),this.reject=c(A,e,1)},y.f=O=function(e){return e===z||e===a?new i(e):o(e)}),d(d.G+d.W+d.F*!T,{Promise:z}),n(50)(z,"Promise"),n(45)("Promise"),a=n(22).Promise,d(d.S+d.F*!T,"Promise",{reject:function(e){var t=O(this);return(0,t.reject)(e),t.promise}}),d(d.S+d.F*(l||!T),"Promise",{resolve:function(e){return k(l&&this===a?z:this,e)}}),d(d.S+d.F*!(T&&n(68)((function(e){z.all(e).catch(C)}))),"Promise",{all:function(e){var t=this,n=O(t),r=n.resolve,o=n.reject,i=x((function(){var n=[],i=0,a=1;g(e,!1,(function(e){var l=i++,s=!1;n.push(void 0),a++,t.resolve(e).then((function(e){s||(s=!0,n[l]=e,--a||r(n))}),o)})),--a||r(n)}));return i.e&&o(i.v),n.promise},race:function(e){var t=this,n=O(t),r=n.reject,o=x((function(){g(e,!1,(function(e){t.resolve(e).then(n.resolve,r)}))}));return o.e&&r(o.v),n.promise}})},function(e,t,n){"use strict";var r=n(144),o=n(49);n(72)("WeakSet",(function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}}),{add:function(e){return r.def(o(this,"WeakSet"),e,!0)}},r,!1,!0)},function(e,t,n){"use strict";var r=n(0),o=n(73),i=n(109),a=n(2),l=n(42),s=n(7),c=n(5),u=n(3).ArrayBuffer,d=n(59),f=i.ArrayBuffer,p=i.DataView,h=o.ABV&&u.isView,g=f.prototype.slice,m=o.VIEW;r(r.G+r.W+r.F*(u!==f),{ArrayBuffer:f}),r(r.S+r.F*!o.CONSTR,"ArrayBuffer",{isView:function(e){return h&&h(e)||c(e)&&m in e}}),r(r.P+r.U+r.F*n(4)((function(){return!new f(2).slice(1,void 0).byteLength})),"ArrayBuffer",{slice:function(e,t){if(void 0!==g&&void 0===t)return g.call(a(this),e);for(var n=a(this).byteLength,r=l(e,n),o=l(void 0===t?n:t,n),i=new(d(this,f))(s(o-r)),c=new p(this),u=new p(i),h=0;r<o;)u.setUint8(h++,c.getUint8(r++));return i}}),n(45)("ArrayBuffer")},function(e,t,n){var r=n(0);r(r.G+r.W+r.F*!n(73).ABV,{DataView:n(109).DataView})},function(e,t,n){n(33)("Int8",1,(function(e){return function(t,n,r){return e(this,t,n,r)}}))},function(e,t,n){n(33)("Uint8",1,(function(e){return function(t,n,r){return e(this,t,n,r)}}))},function(e,t,n){n(33)("Uint8",1,(function(e){return function(t,n,r){return e(this,t,n,r)}}),!0)},function(e,t,n){n(33)("Int16",2,(function(e){return function(t,n,r){return e(this,t,n,r)}}))},function(e,t,n){n(33)("Uint16",2,(function(e){return function(t,n,r){return e(this,t,n,r)}}))},function(e,t,n){n(33)("Int32",4,(function(e){return function(t,n,r){return e(this,t,n,r)}}))},function(e,t,n){n(33)("Uint32",4,(function(e){return function(t,n,r){return e(this,t,n,r)}}))},function(e,t,n){n(33)("Float32",4,(function(e){return function(t,n,r){return e(this,t,n,r)}}))},function(e,t,n){n(33)("Float64",8,(function(e){return function(t,n,r){return e(this,t,n,r)}}))},function(e,t,n){var r=n(0),o=n(13),i=n(2),a=(n(3).Reflect||{}).apply,l=Function.apply;r(r.S+r.F*!n(4)((function(){a((function(){}))})),"Reflect",{apply:function(e,t,n){var r=o(e),s=i(n);return a?a(r,t,s):l.call(r,t,s)}})},function(e,t,n){var r=n(0),o=n(43),i=n(13),a=n(2),l=n(5),s=n(4),c=n(124),u=(n(3).Reflect||{}).construct,d=s((function(){function e(){}return!(u((function(){}),[],e)instanceof e)})),f=!s((function(){u((function(){}))}));r(r.S+r.F*(d||f),"Reflect",{construct:function(e,t){i(e),a(t);var n=arguments.length<3?e:i(arguments[2]);if(f&&!d)return u(e,t,n);if(e==n){switch(t.length){case 0:return new e;case 1:return new e(t[0]);case 2:return new e(t[0],t[1]);case 3:return new e(t[0],t[1],t[2]);case 4:return new e(t[0],t[1],t[2],t[3])}var r=[null];return r.push.apply(r,t),new(c.apply(e,r))}var s=n.prototype,p=o(l(s)?s:Object.prototype),h=Function.apply.call(e,p,t);return l(h)?h:p}})},function(e,t,n){var r=n(10),o=n(0),i=n(2),a=n(28);o(o.S+o.F*n(4)((function(){Reflect.defineProperty(r.f({},1,{value:1}),1,{value:2})})),"Reflect",{defineProperty:function(e,t,n){i(e),t=a(t,!0),i(n);try{return r.f(e,t,n),!0}catch(e){return!1}}})},function(e,t,n){var r=n(0),o=n(20).f,i=n(2);r(r.S,"Reflect",{deleteProperty:function(e,t){var n=o(i(e),t);return!(n&&!n.configurable)&&delete e[t]}})},function(e,t,n){"use strict";var r=n(0),o=n(2),i=function(e){this._t=o(e),this._i=0;var t,n=this._k=[];for(t in e)n.push(t)};n(95)(i,"Object",(function(){var e,t=this._k;do{if(this._i>=t.length)return{value:void 0,done:!0}}while(!((e=t[this._i++])in this._t));return{value:e,done:!1}})),r(r.S,"Reflect",{enumerate:function(e){return new i(e)}})},function(e,t,n){var r=n(20),o=n(21),i=n(18),a=n(0),l=n(5),s=n(2);a(a.S,"Reflect",{get:function e(t,n){var a,c,u=arguments.length<3?t:arguments[2];return s(t)===u?t[n]:(a=r.f(t,n))?i(a,"value")?a.value:void 0!==a.get?a.get.call(u):void 0:l(c=o(t))?e(c,n,u):void 0}})},function(e,t,n){var r=n(20),o=n(0),i=n(2);o(o.S,"Reflect",{getOwnPropertyDescriptor:function(e,t){return r.f(i(e),t)}})},function(e,t,n){var r=n(0),o=n(21),i=n(2);r(r.S,"Reflect",{getPrototypeOf:function(e){return o(i(e))}})},function(e,t,n){var r=n(0);r(r.S,"Reflect",{has:function(e,t){return t in e}})},function(e,t,n){var r=n(0),o=n(2),i=Object.isExtensible;r(r.S,"Reflect",{isExtensible:function(e){return o(e),!i||i(e)}})},function(e,t,n){var r=n(0);r(r.S,"Reflect",{ownKeys:n(146)})},function(e,t,n){var r=n(0),o=n(2),i=Object.preventExtensions;r(r.S,"Reflect",{preventExtensions:function(e){o(e);try{return i&&i(e),!0}catch(e){return!1}}})},function(e,t,n){var r=n(10),o=n(20),i=n(21),a=n(18),l=n(0),s=n(39),c=n(2),u=n(5);l(l.S,"Reflect",{set:function e(t,n,l){var d,f,p=arguments.length<4?t:arguments[3],h=o.f(c(t),n);if(!h){if(u(f=i(t)))return e(f,n,l,p);h=s(0)}if(a(h,"value")){if(!1===h.writable||!u(p))return!1;if(d=o.f(p,n)){if(d.get||d.set||!1===d.writable)return!1;d.value=l,r.f(p,n,d)}else r.f(p,n,s(0,l));return!0}return void 0!==h.set&&(h.set.call(p,l),!0)}})},function(e,t,n){var r=n(0),o=n(88);o&&r(r.S,"Reflect",{setPrototypeOf:function(e,t){o.check(e,t);try{return o.set(e,t),!0}catch(e){return!1}}})},function(e,t,n){"use strict";var r=n(0),o=n(63)(!0);r(r.P,"Array",{includes:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0)}}),n(38)("includes")},function(e,t,n){"use strict";var r=n(0),o=n(147),i=n(12),a=n(7),l=n(13),s=n(101);r(r.P,"Array",{flatMap:function(e){var t,n,r=i(this);return l(e),t=a(r.length),n=s(r,0),o(n,r,r,t,0,1,e,arguments[1]),n}}),n(38)("flatMap")},function(e,t,n){"use strict";var r=n(0),o=n(147),i=n(12),a=n(7),l=n(25),s=n(101);r(r.P,"Array",{flatten:function(){var e=arguments[0],t=i(this),n=a(t.length),r=s(t,0);return o(r,t,t,n,0,void 0===e?1:l(e)),r}}),n(38)("flatten")},function(e,t,n){"use strict";var r=n(0),o=n(66)(!0);r(r.P,"String",{at:function(e){return o(this,e)}})},function(e,t,n){"use strict";var r=n(0),o=n(148),i=n(71),a=/Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(i);r(r.P+r.F*a,"String",{padStart:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0,!0)}})},function(e,t,n){"use strict";var r=n(0),o=n(148),i=n(71),a=/Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(i);r(r.P+r.F*a,"String",{padEnd:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0,!1)}})},function(e,t,n){"use strict";n(52)("trimLeft",(function(e){return function(){return e(this,1)}}),"trimStart")},function(e,t,n){"use strict";n(52)("trimRight",(function(e){return function(){return e(this,2)}}),"trimEnd")},function(e,t,n){"use strict";var r=n(0),o=n(29),i=n(7),a=n(67),l=n(58),s=RegExp.prototype,c=function(e,t){this._r=e,this._s=t};n(95)(c,"RegExp String",(function(){var e=this._r.exec(this._s);return{value:e,done:null===e}})),r(r.P,"String",{matchAll:function(e){if(o(this),!a(e))throw TypeError(e+" is not a regexp!");var t=String(this),n="flags"in s?String(e.flags):l.call(e),r=new RegExp(e.source,~n.indexOf("g")?n:"g"+n);return r.lastIndex=i(e.lastIndex),new c(r,t)}})},function(e,t,n){n(84)("asyncIterator")},function(e,t,n){n(84)("observable")},function(e,t,n){var r=n(0),o=n(146),i=n(19),a=n(20),l=n(99);r(r.S,"Object",{getOwnPropertyDescriptors:function(e){for(var t,n,r=i(e),s=a.f,c=o(r),u={},d=0;c.length>d;)void 0!==(n=s(r,t=c[d++]))&&l(u,t,n);return u}})},function(e,t,n){var r=n(0),o=n(149)(!1);r(r.S,"Object",{values:function(e){return o(e)}})},function(e,t,n){var r=n(0),o=n(149)(!0);r(r.S,"Object",{entries:function(e){return o(e)}})},function(e,t,n){"use strict";var r=n(0),o=n(12),i=n(13),a=n(10);n(8)&&r(r.P+n(74),"Object",{__defineGetter__:function(e,t){a.f(o(this),e,{get:i(t),enumerable:!0,configurable:!0})}})},function(e,t,n){"use strict";var r=n(0),o=n(12),i=n(13),a=n(10);n(8)&&r(r.P+n(74),"Object",{__defineSetter__:function(e,t){a.f(o(this),e,{set:i(t),enumerable:!0,configurable:!0})}})},function(e,t,n){"use strict";var r=n(0),o=n(12),i=n(28),a=n(21),l=n(20).f;n(8)&&r(r.P+n(74),"Object",{__lookupGetter__:function(e){var t,n=o(this),r=i(e,!0);do{if(t=l(n,r))return t.get}while(n=a(n))}})},function(e,t,n){"use strict";var r=n(0),o=n(12),i=n(28),a=n(21),l=n(20).f;n(8)&&r(r.P+n(74),"Object",{__lookupSetter__:function(e){var t,n=o(this),r=i(e,!0);do{if(t=l(n,r))return t.set}while(n=a(n))}})},function(e,t,n){var r=n(0);r(r.P+r.R,"Map",{toJSON:n(150)("Map")})},function(e,t,n){var r=n(0);r(r.P+r.R,"Set",{toJSON:n(150)("Set")})},function(e,t,n){n(75)("Map")},function(e,t,n){n(75)("Set")},function(e,t,n){n(75)("WeakMap")},function(e,t,n){n(75)("WeakSet")},function(e,t,n){n(76)("Map")},function(e,t,n){n(76)("Set")},function(e,t,n){n(76)("WeakMap")},function(e,t,n){n(76)("WeakSet")},function(e,t,n){var r=n(0);r(r.G,{global:n(3)})},function(e,t,n){var r=n(0);r(r.S,"System",{global:n(3)})},function(e,t,n){var r=n(0),o=n(24);r(r.S,"Error",{isError:function(e){return"Error"===o(e)}})},function(e,t,n){var r=n(0);r(r.S,"Math",{clamp:function(e,t,n){return Math.min(n,Math.max(t,e))}})},function(e,t,n){var r=n(0);r(r.S,"Math",{DEG_PER_RAD:Math.PI/180})},function(e,t,n){var r=n(0),o=180/Math.PI;r(r.S,"Math",{degrees:function(e){return e*o}})},function(e,t,n){var r=n(0),o=n(152),i=n(131);r(r.S,"Math",{fscale:function(e,t,n,r,a){return i(o(e,t,n,r,a))}})},function(e,t,n){var r=n(0);r(r.S,"Math",{iaddh:function(e,t,n,r){var o=e>>>0,i=n>>>0;return(t>>>0)+(r>>>0)+((o&i|(o|i)&~(o+i>>>0))>>>31)|0}})},function(e,t,n){var r=n(0);r(r.S,"Math",{isubh:function(e,t,n,r){var o=e>>>0,i=n>>>0;return(t>>>0)-(r>>>0)-((~o&i|~(o^i)&o-i>>>0)>>>31)|0}})},function(e,t,n){var r=n(0);r(r.S,"Math",{imulh:function(e,t){var n=+e,r=+t,o=65535&n,i=65535&r,a=n>>16,l=r>>16,s=(a*i>>>0)+(o*i>>>16);return a*l+(s>>16)+((o*l>>>0)+(65535&s)>>16)}})},function(e,t,n){var r=n(0);r(r.S,"Math",{RAD_PER_DEG:180/Math.PI})},function(e,t,n){var r=n(0),o=Math.PI/180;r(r.S,"Math",{radians:function(e){return e*o}})},function(e,t,n){var r=n(0);r(r.S,"Math",{scale:n(152)})},function(e,t,n){var r=n(0);r(r.S,"Math",{umulh:function(e,t){var n=+e,r=+t,o=65535&n,i=65535&r,a=n>>>16,l=r>>>16,s=(a*i>>>0)+(o*i>>>16);return a*l+(s>>>16)+((o*l>>>0)+(65535&s)>>>16)}})},function(e,t,n){var r=n(0);r(r.S,"Math",{signbit:function(e){return(e=+e)!=e?e:0==e?1/e==1/0:e>0}})},function(e,t,n){"use strict";var r=n(0),o=n(22),i=n(3),a=n(59),l=n(139);r(r.P+r.R,"Promise",{finally:function(e){var t=a(this,o.Promise||i.Promise),n="function"==typeof e;return this.then(n?function(n){return l(t,e()).then((function(){return n}))}:e,n?function(n){return l(t,e()).then((function(){throw n}))}:e)}})},function(e,t,n){"use strict";var r=n(0),o=n(108),i=n(138);r(r.S,"Promise",{try:function(e){var t=o.f(this),n=i(e);return(n.e?t.reject:t.resolve)(n.v),t.promise}})},function(e,t,n){var r=n(34),o=n(2),i=r.key,a=r.set;r.exp({defineMetadata:function(e,t,n,r){a(e,t,o(n),i(r))}})},function(e,t,n){var r=n(34),o=n(2),i=r.key,a=r.map,l=r.store;r.exp({deleteMetadata:function(e,t){var n=arguments.length<3?void 0:i(arguments[2]),r=a(o(t),n,!1);if(void 0===r||!r.delete(e))return!1;if(r.size)return!0;var s=l.get(t);return s.delete(n),!!s.size||l.delete(t)}})},function(e,t,n){var r=n(34),o=n(2),i=n(21),a=r.has,l=r.get,s=r.key,c=function(e,t,n){if(a(e,t,n))return l(e,t,n);var r=i(t);return null!==r?c(e,r,n):void 0};r.exp({getMetadata:function(e,t){return c(e,o(t),arguments.length<3?void 0:s(arguments[2]))}})},function(e,t,n){var r=n(142),o=n(151),i=n(34),a=n(2),l=n(21),s=i.keys,c=i.key,u=function(e,t){var n=s(e,t),i=l(e);if(null===i)return n;var a=u(i,t);return a.length?n.length?o(new r(n.concat(a))):a:n};i.exp({getMetadataKeys:function(e){return u(a(e),arguments.length<2?void 0:c(arguments[1]))}})},function(e,t,n){var r=n(34),o=n(2),i=r.get,a=r.key;r.exp({getOwnMetadata:function(e,t){return i(e,o(t),arguments.length<3?void 0:a(arguments[2]))}})},function(e,t,n){var r=n(34),o=n(2),i=r.keys,a=r.key;r.exp({getOwnMetadataKeys:function(e){return i(o(e),arguments.length<2?void 0:a(arguments[1]))}})},function(e,t,n){var r=n(34),o=n(2),i=n(21),a=r.has,l=r.key,s=function(e,t,n){if(a(e,t,n))return!0;var r=i(t);return null!==r&&s(e,r,n)};r.exp({hasMetadata:function(e,t){return s(e,o(t),arguments.length<3?void 0:l(arguments[2]))}})},function(e,t,n){var r=n(34),o=n(2),i=r.has,a=r.key;r.exp({hasOwnMetadata:function(e,t){return i(e,o(t),arguments.length<3?void 0:a(arguments[2]))}})},function(e,t,n){var r=n(34),o=n(2),i=n(13),a=r.key,l=r.set;r.exp({metadata:function(e,t){return function(n,r){l(e,t,(void 0!==r?o:i)(n),a(r))}}})},function(e,t,n){var r=n(0),o=n(107)(),i=n(3).process,a="process"==n(24)(i);r(r.G,{asap:function(e){var t=a&&i.domain;o(t?t.bind(e):e)}})},function(e,t,n){"use strict";var r=n(0),o=n(3),i=n(22),a=n(107)(),l=n(6)("observable"),s=n(13),c=n(2),u=n(46),d=n(48),f=n(14),p=n(47),h=p.RETURN,g=function(e){return null==e?void 0:s(e)},m=function(e){var t=e._c;t&&(e._c=void 0,t())},b=function(e){return void 0===e._o},v=function(e){b(e)||(e._o=void 0,m(e))},y=function(e,t){c(e),this._c=void 0,this._o=e,e=new x(this);try{var n=t(e),r=n;null!=n&&("function"==typeof n.unsubscribe?n=function(){r.unsubscribe()}:s(n),this._c=n)}catch(t){return void e.error(t)}b(this)&&m(this)};y.prototype=d({},{unsubscribe:function(){v(this)}});var x=function(e){this._s=e};x.prototype=d({},{next:function(e){var t=this._s;if(!b(t)){var n=t._o;try{var r=g(n.next);if(r)return r.call(n,e)}catch(e){try{v(t)}finally{throw e}}}},error:function(e){var t=this._s;if(b(t))throw e;var n=t._o;t._o=void 0;try{var r=g(n.error);if(!r)throw e;e=r.call(n,e)}catch(e){try{m(t)}finally{throw e}}return m(t),e},complete:function(e){var t=this._s;if(!b(t)){var n=t._o;t._o=void 0;try{var r=g(n.complete);e=r?r.call(n,e):void 0}catch(e){try{m(t)}finally{throw e}}return m(t),e}}});var w=function(e){u(this,w,"Observable","_f")._f=s(e)};d(w.prototype,{subscribe:function(e){return new y(e,this._f)},forEach:function(e){var t=this;return new(i.Promise||o.Promise)((function(n,r){s(e);var o=t.subscribe({next:function(t){try{return e(t)}catch(e){r(e),o.unsubscribe()}},error:r,complete:n})}))}}),d(w,{from:function(e){var t="function"==typeof this?this:w,n=g(c(e)[l]);if(n){var r=c(n.call(e));return r.constructor===t?r:new t((function(e){return r.subscribe(e)}))}return new t((function(t){var n=!1;return a((function(){if(!n){try{if(p(e,!1,(function(e){if(t.next(e),n)return h}))===h)return}catch(e){if(n)throw e;return void t.error(e)}t.complete()}})),function(){n=!0}}))},of:function(){for(var e=0,t=arguments.length,n=new Array(t);e<t;)n[e]=arguments[e++];return new("function"==typeof this?this:w)((function(e){var t=!1;return a((function(){if(!t){for(var r=0;r<n.length;++r)if(e.next(n[r]),t)return;e.complete()}})),function(){t=!0}}))}}),f(w.prototype,l,(function(){return this})),r(r.G,{Observable:w}),n(45)("Observable")},function(e,t,n){var r=n(3),o=n(0),i=n(71),a=[].slice,l=/MSIE .\./.test(i),s=function(e){return function(t,n){var r=arguments.length>2,o=!!r&&a.call(arguments,2);return e(r?function(){("function"==typeof t?t:Function(t)).apply(this,o)}:t,n)}};o(o.G+o.B+o.F*l,{setTimeout:s(r.setTimeout),setInterval:s(r.setInterval)})},function(e,t,n){var r=n(0),o=n(106);r(r.G+r.B,{setImmediate:o.set,clearImmediate:o.clear})},function(e,t,n){for(var r=n(103),o=n(41),i=n(15),a=n(3),l=n(14),s=n(53),c=n(6),u=c("iterator"),d=c("toStringTag"),f=s.Array,p={CSSRuleList:!0,CSSStyleDeclaration:!1,CSSValueList:!1,ClientRectList:!1,DOMRectList:!1,DOMStringList:!1,DOMTokenList:!0,DataTransferItemList:!1,FileList:!1,HTMLAllCollection:!1,HTMLCollection:!1,HTMLFormElement:!1,HTMLSelectElement:!1,MediaList:!0,MimeTypeArray:!1,NamedNodeMap:!1,NodeList:!0,PaintRequestList:!1,Plugin:!1,PluginArray:!1,SVGLengthList:!1,SVGNumberList:!1,SVGPathSegList:!1,SVGPointList:!1,SVGStringList:!1,SVGTransformList:!1,SourceBufferList:!1,StyleSheetList:!0,TextTrackCueList:!1,TextTrackList:!1,TouchList:!1},h=o(p),g=0;g<h.length;g++){var m,b=h[g],v=p[b],y=a[b],x=y&&y.prototype;if(x&&(x[u]||l(x,u,f),x[d]||l(x,d,b),s[b]=f,v))for(m in r)x[m]||i(x,m,r[m],!0)}},function(e,t,n){(function(t){!function(t){"use strict";var n=Object.prototype,r=n.hasOwnProperty,o="function"==typeof Symbol?Symbol:{},i=o.iterator||"@@iterator",a=o.asyncIterator||"@@asyncIterator",l=o.toStringTag||"@@toStringTag",s="object"==typeof e,c=t.regeneratorRuntime;if(c)s&&(e.exports=c);else{(c=t.regeneratorRuntime=s?e.exports:{}).wrap=g;var u={},d={};d[i]=function(){return this};var f=Object.getPrototypeOf,p=f&&f(f(P([])));p&&p!==n&&r.call(p,i)&&(d=p);var h=y.prototype=b.prototype=Object.create(d);v.prototype=h.constructor=y,y.constructor=v,y[l]=v.displayName="GeneratorFunction",c.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===v||"GeneratorFunction"===(t.displayName||t.name))},c.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,y):(e.__proto__=y,l in e||(e[l]="GeneratorFunction")),e.prototype=Object.create(h),e},c.awrap=function(e){return{__await:e}},x(w.prototype),w.prototype[a]=function(){return this},c.AsyncIterator=w,c.async=function(e,t,n,r){var o=new w(g(e,t,n,r));return c.isGeneratorFunction(t)?o:o.next().then((function(e){return e.done?e.value:o.next()}))},x(h),h[l]="Generator",h[i]=function(){return this},h.toString=function(){return"[object Generator]"},c.keys=function(e){var t=[];for(var n in e)t.push(n);return t.reverse(),function n(){for(;t.length;){var r=t.pop();if(r in e)return n.value=r,n.done=!1,n}return n.done=!0,n}},c.values=P,S.prototype={constructor:S,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(E),!e)for(var t in this)"t"===t.charAt(0)&&r.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function n(n,r){return a.type="throw",a.arg=e,t.next=n,r&&(t.method="next",t.arg=void 0),!!r}for(var o=this.tryEntries.length-1;o>=0;--o){var i=this.tryEntries[o],a=i.completion;if("root"===i.tryLoc)return n("end");if(i.tryLoc<=this.prev){var l=r.call(i,"catchLoc"),s=r.call(i,"finallyLoc");if(l&&s){if(this.prev<i.catchLoc)return n(i.catchLoc,!0);if(this.prev<i.finallyLoc)return n(i.finallyLoc)}else if(l){if(this.prev<i.catchLoc)return n(i.catchLoc,!0)}else{if(!s)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return n(i.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var o=this.tryEntries[n];if(o.tryLoc<=this.prev&&r.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var i=o;break}}i&&("break"===e||"continue"===e)&&i.tryLoc<=t&&t<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.type=e,a.arg=t,i?(this.method="next",this.next=i.finallyLoc,u):this.complete(a)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),u},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),E(n),u}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var r=n.completion;if("throw"===r.type){var o=r.arg;E(n)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,n){return this.delegate={iterator:P(e),resultName:t,nextLoc:n},"next"===this.method&&(this.arg=void 0),u}}}function g(e,t,n,r){var o=t&&t.prototype instanceof b?t:b,i=Object.create(o.prototype),a=new S(r||[]);return i._invoke=function(e,t,n){var r="suspendedStart";return function(o,i){if("executing"===r)throw new Error("Generator is already running");if("completed"===r){if("throw"===o)throw i;return z()}for(n.method=o,n.arg=i;;){var a=n.delegate;if(a){var l=k(a,n);if(l){if(l===u)continue;return l}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if("suspendedStart"===r)throw r="completed",n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);r="executing";var s=m(e,t,n);if("normal"===s.type){if(r=n.done?"completed":"suspendedYield",s.arg===u)continue;return{value:s.arg,done:n.done}}"throw"===s.type&&(r="completed",n.method="throw",n.arg=s.arg)}}}(e,n,a),i}function m(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}function b(){}function v(){}function y(){}function x(e){["next","throw","return"].forEach((function(t){e[t]=function(e){return this._invoke(t,e)}}))}function w(e){function n(t,o,i,a){var l=m(e[t],e,o);if("throw"!==l.type){var s=l.arg,c=s.value;return c&&"object"==typeof c&&r.call(c,"__await")?Promise.resolve(c.__await).then((function(e){n("next",e,i,a)}),(function(e){n("throw",e,i,a)})):Promise.resolve(c).then((function(e){s.value=e,i(s)}),a)}a(l.arg)}var o;"object"==typeof t.process&&t.process.domain&&(n=t.process.domain.bind(n)),this._invoke=function(e,t){function r(){return new Promise((function(r,o){n(e,t,r,o)}))}return o=o?o.then(r,r):r()}}function k(e,t){var n=e.iterator[t.method];if(void 0===n){if(t.delegate=null,"throw"===t.method){if(e.iterator.return&&(t.method="return",t.arg=void 0,k(e,t),"throw"===t.method))return u;t.method="throw",t.arg=new TypeError("The iterator does not provide a 'throw' method")}return u}var r=m(n,e.iterator,t.arg);if("throw"===r.type)return t.method="throw",t.arg=r.arg,t.delegate=null,u;var o=r.arg;return o?o.done?(t[e.resultName]=o.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=void 0),t.delegate=null,u):o:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,u)}function _(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function E(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function S(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(_,this),this.reset(!0)}function P(e){if(e){var t=e[i];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var n=-1,o=function t(){for(;++n<e.length;)if(r.call(e,n))return t.value=e[n],t.done=!1,t;return t.value=void 0,t.done=!0,t};return o.next=o}}return{next:z}}function z(){return{value:void 0,done:!0}}}("object"==typeof t?t:"object"==typeof window?window:"object"==typeof self?self:this)}).call(this,n(62))},function(e,t,n){n(369),e.exports=n(22).RegExp.escape},function(e,t,n){var r=n(0),o=n(370)(/[\\^$*+?.()|[\]{}]/g,"\\$&");r(r.S,"RegExp",{escape:function(e){return o(e)}})},function(e,t){e.exports=function(e,t){var n=t===Object(t)?function(e){return t[e]}:t;return function(t){return String(t).replace(e,n)}}},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),l=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&i(t,e,n);return a(t,e),t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=l(n(1)),u=n(60),d=s(n(377)),f=s(n(381)),p=s(n(382)),h=s(n(385)),g=s(n(392)),m=s(n(394)),b=s(n(397)),v=s(n(401)),y=s(n(402)),x=s(n(404)),w=s(n(409)),k=s(n(410)),_=s(n(411)),E=s(n(412)),S=s(n(413)),P=s(n(414)),z=s(n(415)),M=s(n(416)),C=s(n(417)),O=s(n(418)),T=s(n(419)),N=s(n(420)),D=s(n(422)),j=s(n(427)),I=s(n(428)),L=s(n(429)),A=s(n(430)),R=s(n(431)),B=s(n(432)),F=s(n(433)),W=s(n(434)),U=s(n(9)),H=n(27),V=n(435);n(436);var q=function(e){function t(t){var n=e.call(this,t)||this;return n.togglePower=n.togglePower.bind(n),n.state={securityIsOn:!1},n.translations=U.default(),n}return o(t,e),t.prototype.componentDidMount=function(){this.togglePower(!0)},t.prototype.togglePower=function(e){var t=this;if(void 0===e&&(e=!1),e)return browser.runtime.sendMessage({action:"get-powermode"}).then((function(e){t.setState({securityIsOn:e})})).catch();this.setState({securityIsOn:!this.state.securityIsOn},(function(){browser.runtime.sendMessage({action:"set-powermode",powermode:t.state.securityIsOn})}))},t.prototype.render=function(){var e=this,t=this.state.securityIsOn;return c.default.createElement("div",{className:"Main block"},c.default.createElement(I.default,{persistUserSelection:!1,clearPersistUserSelection:!0,sidebarMinifiedAt:720,sidebarMaxifiedAt:1024,displayMinifyMaxifyIcon:!0,moduleSidebar:c.default.createElement(f.default,{image:c.default.createElement("img",{alt:"image",src:H.addonRoot()+"logo/shield-64.png"}),textLong:V.appNameShort,textShort:"v"+V.version,moduleMenu:c.default.createElement(L.default,{reactRouter:!1,childrenPaddingX:18,data:[{attributes:{title:this.translations.menu_title_import},text:this.translations.menu_text_import,icon:c.default.createElement("i",{className:"fas fa-cloud-upload-alt"}),href:H.addonPrefixDashboard()+"#/import"},{attributes:{title:this.translations.menu_title_export},text:this.translations.menu_text_export,icon:c.default.createElement("i",{className:"fas fa-cloud-download-alt"}),href:H.addonPrefixDashboard()+"#/export"},{attributes:{title:this.translations.menu_title_security_settings},text:this.translations.menu_text_security_settings,icon:c.default.createElement("i",{className:"fas fa-cog"}),href:H.addonPrefixDashboard()+"#/security-settings"},{attributes:{title:this.translations.menu_title_security_examples},text:this.translations.menu_text_security_examples,icon:c.default.createElement("i",{className:"fas fa-copy"}),href:H.addonPrefixDashboard()+"#/security-examples"},{text:this.translations.menu_text_statistic_small,icon:c.default.createElement("i",{className:"fas fa-chart-bar"}),href:H.addonPrefixDashboard()+"#/statistic"},{text:this.translations.title_html_blocker,icon:c.default.createElement("i",{className:"fas fa-crosshairs"}),href:H.addonPrefixDashboard()+"#/blocker"},{text:this.translations.menu_text_security_main,icon:c.default.createElement("i",{className:"fas fa-shield-alt"}),href:H.addonPrefixDashboard()+"#/security"},{icon:c.default.createElement("i",{className:"fab fa-black-tie"}),text:this.translations.blacklistedElementsCookies,href:H.addonPrefixDashboard()+"#/blacklist-cookies"},{icon:c.default.createElement("i",{className:"fab fa-black-tie"}),text:this.translations.blacklistedElementsDomians,href:H.addonPrefixDashboard()+"#/blacklist-urls"},{icon:c.default.createElement("i",{className:"fab fa-black-tie"}),text:this.translations.blacklistedElementsUrlsIncludes,href:H.addonPrefixDashboard()+"#/blacklist-urls-includes"},{icon:c.default.createElement("i",{className:"fab fa-black-tie"}),text:this.translations.blacklistedElementsTrackers,href:H.addonPrefixDashboard()+"#/blacklist-trackers"},{icon:c.default.createElement("i",{className:"fab fa-black-tie"}),text:this.translations.blacklistedElementsIframes,href:H.addonPrefixDashboard()+"#/blacklist-iframes"},{icon:c.default.createElement("i",{className:"fab fa-black-tie"}),text:this.translations.blacklistedElementsIframesSources,href:H.addonPrefixDashboard()+"#/blacklist-iframes-sources"},{icon:c.default.createElement("i",{className:"fab fa-black-tie"}),text:this.translations.blacklistedElementsIframesNames,href:H.addonPrefixDashboard()+"#/blacklist-iframes-names"},{icon:c.default.createElement("i",{className:"fab fa-black-tie"}),text:this.translations.blacklistedElementsWords,href:H.addonPrefixDashboard()+"#/blacklist-words"},{icon:c.default.createElement("i",{className:"fab fa-black-tie"}),text:this.translations.menuBlacklistedElementsClass,href:H.addonPrefixDashboard()+"#/360-dom-blocker-class"},{icon:c.default.createElement("i",{className:"fab fa-black-tie"}),text:this.translations.menuBlacklistedElementsHref,href:H.addonPrefixDashboard()+"#/360-dom-blocker-href"},{icon:c.default.createElement("i",{className:"fab fa-black-tie"}),text:this.translations.menuBlacklistedElementsId,href:H.addonPrefixDashboard()+"#/360-dom-blocker-id"},{icon:c.default.createElement("i",{className:"fas fa-feather"}),text:this.translations.whitelistedElementsDomains,href:H.addonPrefixDashboard()+"#/whitelist-domains"},{text:this.translations.accountPrivacyTerms,icon:c.default.createElement("i",{className:"fas fa-gavel"}),href:H.addonPrefixDashboard()+"#/privacy-terms"},{text:this.translations.title_reset,icon:c.default.createElement("i",{className:"fas fa-skull"}),href:H.addonPrefixDashboard()+"#/reset"},{text:this.translations.menu_title_ninja,icon:c.default.createElement("i",{className:"fas fa-icons"}),href:H.addonPrefixDashboard()+"#/icons"}]})}),headerData:c.default.createElement("span",null,c.default.createElement(A.default,null),c.default.createElement(R.default,{location:"popup",titleBox:this.translations.links,masterLink:H.addonPrefixDashboard()+"#/",masterIcon:c.default.createElement("i",{className:"fas fa-angle-right"}),masterText:this.translations.popup_title_dashboard,data:[{href:"https://addons.mozilla.org/de/firefox/addon/ninja-protect/",icon:c.default.createElement("i",{className:"fab fa-firefox-browser"}),text:"Firefox Hub",attributes:{target:"_blank"}}]}),c.default.createElement("span",{style:{float:"left"},title:t?this.translations.turnOff:this.translations.turnOn,className:"relative popup-box-main"},c.default.createElement("i",{onClick:function(t){return e.togglePower()},className:"fas fa-power-off power popup-box-icon "+(t?"color-green":"color-red")}))),contentData:c.default.createElement(u.HashRouter,null,c.default.createElement(u.Switch,null,c.default.createElement(u.Route,{exact:!0,path:"/",component:h.default}),c.default.createElement(u.Route,{exact:!0,path:"/security",component:y.default}),c.default.createElement(u.Route,{exact:!0,path:"/statistic",component:b.default}),c.default.createElement(u.Route,{exact:!0,path:"/blacklist-words",component:x.default}),c.default.createElement(u.Route,{exact:!0,path:"/blacklist-urls",component:w.default}),c.default.createElement(u.Route,{exact:!0,path:"/blacklist-urls-includes",component:k.default}),c.default.createElement(u.Route,{exact:!0,path:"/blacklist-trackers",component:_.default}),c.default.createElement(u.Route,{exact:!0,path:"/blacklist-cookies",component:E.default}),c.default.createElement(u.Route,{exact:!0,path:"/blacklist-iframes",component:M.default}),c.default.createElement(u.Route,{exact:!0,path:"/blacklist-iframes-sources",component:C.default}),c.default.createElement(u.Route,{exact:!0,path:"/blacklist-iframes-names",component:O.default}),c.default.createElement(u.Route,{exact:!0,path:"/360-dom-blocker-class",component:S.default}),c.default.createElement(u.Route,{exact:!0,path:"/360-dom-blocker-href",component:z.default}),c.default.createElement(u.Route,{exact:!0,path:"/360-dom-blocker-id",component:P.default}),c.default.createElement(u.Route,{exact:!0,path:"/whitelist-domains",component:T.default}),c.default.createElement(u.Route,{exact:!0,path:"/security-settings",component:N.default}),c.default.createElement(u.Route,{exact:!0,path:"/privacy-terms",component:D.default}),c.default.createElement(u.Route,{exact:!0,path:"/error-messages-learn-more",component:v.default}),c.default.createElement(u.Route,{exact:!0,path:"/security-examples",component:j.default}),c.default.createElement(u.Route,{exact:!0,path:"/export",component:g.default}),c.default.createElement(u.Route,{exact:!0,path:"/import",component:m.default}),c.default.createElement(u.Route,{exact:!0,path:"/icons",component:B.default}),c.default.createElement(u.Route,{exact:!0,path:"/reset",component:F.default}),c.default.createElement(u.Route,{exact:!0,path:"/blocker",component:W.default})))}),c.default.createElement(p.default,{messageKey:"messagesApp",timer:2e3,codeMapping:{"-2":{title:this.translations.notLoggedIn,displayErrorCode:!1,text:{prefix:"",suffix:"",attributes:{}},close:{text:this.translations.globalErrormessageCloseButton,attributes:{}},link:{}},"-1":{title:this.translations.error,displayErrorCode:!1,text:{prefix:"",suffix:"",attributes:{}},close:{text:this.translations.globalErrormessageCloseButton,attributes:{}},link:{}},0:{title:c.default.createElement("i",{className:"fas fa-thumbs-up mr-2"}),displayErrorCode:!1,text:{prefix:"",suffix:"",attributes:{}},close:{text:this.translations.globalErrormessageCloseButton,attributes:{}},link:{}},1:{title:this.translations.code,displayErrorCode:!0,text:{prefix:this.translations.globalErrormessagePrefix,suffix:"",attributes:{}},close:{text:this.translations.globalErrormessageCloseButton,attributes:{}},link:{text:this.translations.globalErrormessageLearnMoreButton,useTagLink:!1,href:H.addonPrefixDashboard()+"#error-messages-learn-more",attributes:{target:"_blank"}}},2:{title:this.translations.code,displayErrorCode:!0,text:{prefix:this.translations.globalErrormessagePrefix,suffix:"",attributes:{}},close:{text:this.translations.globalErrormessageCloseButton,attributes:{}},link:{text:this.translations.globalErrormessageLearnMoreButton,useTagLink:!1,href:H.addonPrefixDashboard()+"#error-messages-learn-more",attributes:{target:"_blank"}}},3:{title:this.translations.code,displayErrorCode:!0,text:{prefix:this.translations.globalErrormessagePrefix,suffix:"",attributes:{}},close:{text:this.translations.globalErrormessageCloseButton,attributes:{}},link:{text:this.translations.globalErrormessageLearnMoreButton,useTagLink:!1,href:H.addonPrefixDashboard()+"#error-messages-learn-more",attributes:{target:"_blank"}}}}}))},t}(c.Component);d.default.render(c.default.createElement(q,null),document.getElementById("app"))},function(e,t,n){"use strict";
/** @license React v16.13.1
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(153),o="function"==typeof Symbol&&Symbol.for,i=o?Symbol.for("react.element"):60103,a=o?Symbol.for("react.portal"):60106,l=o?Symbol.for("react.fragment"):60107,s=o?Symbol.for("react.strict_mode"):60108,c=o?Symbol.for("react.profiler"):60114,u=o?Symbol.for("react.provider"):60109,d=o?Symbol.for("react.context"):60110,f=o?Symbol.for("react.forward_ref"):60112,p=o?Symbol.for("react.suspense"):60113,h=o?Symbol.for("react.memo"):60115,g=o?Symbol.for("react.lazy"):60116,m="function"==typeof Symbol&&Symbol.iterator;function b(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var v={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},y={};function x(e,t,n){this.props=e,this.context=t,this.refs=y,this.updater=n||v}function w(){}function k(e,t,n){this.props=e,this.context=t,this.refs=y,this.updater=n||v}x.prototype.isReactComponent={},x.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(b(85));this.updater.enqueueSetState(this,e,t,"setState")},x.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},w.prototype=x.prototype;var _=k.prototype=new w;_.constructor=k,r(_,x.prototype),_.isPureReactComponent=!0;var E={current:null},S=Object.prototype.hasOwnProperty,P={key:!0,ref:!0,__self:!0,__source:!0};function z(e,t,n){var r,o={},a=null,l=null;if(null!=t)for(r in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(a=""+t.key),t)S.call(t,r)&&!P.hasOwnProperty(r)&&(o[r]=t[r]);var s=arguments.length-2;if(1===s)o.children=n;else if(1<s){for(var c=Array(s),u=0;u<s;u++)c[u]=arguments[u+2];o.children=c}if(e&&e.defaultProps)for(r in s=e.defaultProps)void 0===o[r]&&(o[r]=s[r]);return{$$typeof:i,type:e,key:a,ref:l,props:o,_owner:E.current}}function M(e){return"object"==typeof e&&null!==e&&e.$$typeof===i}var C=/\/+/g,O=[];function T(e,t,n,r){if(O.length){var o=O.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function N(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>O.length&&O.push(e)}function D(e,t,n){return null==e?0:function e(t,n,r,o){var l=typeof t;"undefined"!==l&&"boolean"!==l||(t=null);var s=!1;if(null===t)s=!0;else switch(l){case"string":case"number":s=!0;break;case"object":switch(t.$$typeof){case i:case a:s=!0}}if(s)return r(o,t,""===n?"."+j(t,0):n),1;if(s=0,n=""===n?".":n+":",Array.isArray(t))for(var c=0;c<t.length;c++){var u=n+j(l=t[c],c);s+=e(l,u,r,o)}else if(null===t||"object"!=typeof t?u=null:u="function"==typeof(u=m&&t[m]||t["@@iterator"])?u:null,"function"==typeof u)for(t=u.call(t),c=0;!(l=t.next()).done;)s+=e(l=l.value,u=n+j(l,c++),r,o);else if("object"===l)throw r=""+t,Error(b(31,"[object Object]"===r?"object with keys {"+Object.keys(t).join(", ")+"}":r,""));return s}(e,"",t,n)}function j(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,(function(e){return t[e]}))}(e.key):t.toString(36)}function I(e,t){e.func.call(e.context,t,e.count++)}function L(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?A(e,r,n,(function(e){return e})):null!=e&&(M(e)&&(e=function(e,t){return{$$typeof:i,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(C,"$&/")+"/")+n)),r.push(e))}function A(e,t,n,r,o){var i="";null!=n&&(i=(""+n).replace(C,"$&/")+"/"),D(e,L,t=T(t,i,r,o)),N(t)}var R={current:null};function B(){var e=R.current;if(null===e)throw Error(b(321));return e}var F={ReactCurrentDispatcher:R,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:E,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:function(e,t,n){if(null==e)return e;var r=[];return A(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;D(e,I,t=T(null,null,t,n)),N(t)},count:function(e){return D(e,(function(){return null}),null)},toArray:function(e){var t=[];return A(e,t,null,(function(e){return e})),t},only:function(e){if(!M(e))throw Error(b(143));return e}},t.Component=x,t.Fragment=l,t.Profiler=c,t.PureComponent=k,t.StrictMode=s,t.Suspense=p,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=F,t.cloneElement=function(e,t,n){if(null==e)throw Error(b(267,e));var o=r({},e.props),a=e.key,l=e.ref,s=e._owner;if(null!=t){if(void 0!==t.ref&&(l=t.ref,s=E.current),void 0!==t.key&&(a=""+t.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(u in t)S.call(t,u)&&!P.hasOwnProperty(u)&&(o[u]=void 0===t[u]&&void 0!==c?c[u]:t[u])}var u=arguments.length-2;if(1===u)o.children=n;else if(1<u){c=Array(u);for(var d=0;d<u;d++)c[d]=arguments[d+2];o.children=c}return{$$typeof:i,type:e.type,key:a,ref:l,props:o,_owner:s}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:d,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:u,_context:e},e.Consumer=e},t.createElement=z,t.createFactory=function(e){var t=z.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:f,render:e}},t.isValidElement=M,t.lazy=function(e){return{$$typeof:g,_ctor:e,_status:-1,_result:null}},t.memo=function(e,t){return{$$typeof:h,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return B().useCallback(e,t)},t.useContext=function(e,t){return B().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return B().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return B().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return B().useLayoutEffect(e,t)},t.useMemo=function(e,t){return B().useMemo(e,t)},t.useReducer=function(e,t,n){return B().useReducer(e,t,n)},t.useRef=function(e){return B().useRef(e)},t.useState=function(e){return B().useState(e)},t.version="16.13.1"},function(e,t,n){"use strict";var r=n(374);function o(){}function i(){}i.resetWarningCache=o,e.exports=function(){function e(e,t,n,o,i,a){if(a!==r){var l=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw l.name="Invariant Violation",l}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:i,resetWarningCache:o};return n.PropTypes=n,n}},function(e,t,n){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(e,t){e.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},function(e,t,n){"use strict";
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r="function"==typeof Symbol&&Symbol.for,o=r?Symbol.for("react.element"):60103,i=r?Symbol.for("react.portal"):60106,a=r?Symbol.for("react.fragment"):60107,l=r?Symbol.for("react.strict_mode"):60108,s=r?Symbol.for("react.profiler"):60114,c=r?Symbol.for("react.provider"):60109,u=r?Symbol.for("react.context"):60110,d=r?Symbol.for("react.async_mode"):60111,f=r?Symbol.for("react.concurrent_mode"):60111,p=r?Symbol.for("react.forward_ref"):60112,h=r?Symbol.for("react.suspense"):60113,g=r?Symbol.for("react.suspense_list"):60120,m=r?Symbol.for("react.memo"):60115,b=r?Symbol.for("react.lazy"):60116,v=r?Symbol.for("react.block"):60121,y=r?Symbol.for("react.fundamental"):60117,x=r?Symbol.for("react.responder"):60118,w=r?Symbol.for("react.scope"):60119;function k(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case o:switch(e=e.type){case d:case f:case a:case s:case l:case h:return e;default:switch(e=e&&e.$$typeof){case u:case p:case b:case m:case c:return e;default:return t}}case i:return t}}}function _(e){return k(e)===f}t.AsyncMode=d,t.ConcurrentMode=f,t.ContextConsumer=u,t.ContextProvider=c,t.Element=o,t.ForwardRef=p,t.Fragment=a,t.Lazy=b,t.Memo=m,t.Portal=i,t.Profiler=s,t.StrictMode=l,t.Suspense=h,t.isAsyncMode=function(e){return _(e)||k(e)===d},t.isConcurrentMode=_,t.isContextConsumer=function(e){return k(e)===u},t.isContextProvider=function(e){return k(e)===c},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===o},t.isForwardRef=function(e){return k(e)===p},t.isFragment=function(e){return k(e)===a},t.isLazy=function(e){return k(e)===b},t.isMemo=function(e){return k(e)===m},t.isPortal=function(e){return k(e)===i},t.isProfiler=function(e){return k(e)===s},t.isStrictMode=function(e){return k(e)===l},t.isSuspense=function(e){return k(e)===h},t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===a||e===f||e===s||e===l||e===h||e===g||"object"==typeof e&&null!==e&&(e.$$typeof===b||e.$$typeof===m||e.$$typeof===c||e.$$typeof===u||e.$$typeof===p||e.$$typeof===y||e.$$typeof===x||e.$$typeof===w||e.$$typeof===v)},t.typeOf=k},function(e,t,n){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE){0;try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}}(),e.exports=n(378)},function(e,t,n){"use strict";
/** @license React v16.13.1
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(1),o=n(153),i=n(379);function a(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(a(227));function l(e,t,n,r,o,i,a,l,s){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this.onError(e)}}var s=!1,c=null,u=!1,d=null,f={onError:function(e){s=!0,c=e}};function p(e,t,n,r,o,i,a,u,d){s=!1,c=null,l.apply(f,arguments)}var h=null,g=null,m=null;function b(e,t,n){var r=e.type||"unknown-event";e.currentTarget=m(n),function(e,t,n,r,o,i,l,f,h){if(p.apply(this,arguments),s){if(!s)throw Error(a(198));var g=c;s=!1,c=null,u||(u=!0,d=g)}}(r,t,void 0,e),e.currentTarget=null}var v=null,y={};function x(){if(v)for(var e in y){var t=y[e],n=v.indexOf(e);if(!(-1<n))throw Error(a(96,e));if(!k[n]){if(!t.extractEvents)throw Error(a(97,e));for(var r in k[n]=t,n=t.eventTypes){var o=void 0,i=n[r],l=t,s=r;if(_.hasOwnProperty(s))throw Error(a(99,s));_[s]=i;var c=i.phasedRegistrationNames;if(c){for(o in c)c.hasOwnProperty(o)&&w(c[o],l,s);o=!0}else i.registrationName?(w(i.registrationName,l,s),o=!0):o=!1;if(!o)throw Error(a(98,r,e))}}}}function w(e,t,n){if(E[e])throw Error(a(100,e));E[e]=t,S[e]=t.eventTypes[n].dependencies}var k=[],_={},E={},S={};function P(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];if(!y.hasOwnProperty(t)||y[t]!==r){if(y[t])throw Error(a(102,t));y[t]=r,n=!0}}n&&x()}var z=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),M=null,C=null,O=null;function T(e){if(e=g(e)){if("function"!=typeof M)throw Error(a(280));var t=e.stateNode;t&&(t=h(t),M(e.stateNode,e.type,t))}}function N(e){C?O?O.push(e):O=[e]:C=e}function D(){if(C){var e=C,t=O;if(O=C=null,T(e),t)for(e=0;e<t.length;e++)T(t[e])}}function j(e,t){return e(t)}function I(e,t,n,r,o){return e(t,n,r,o)}function L(){}var A=j,R=!1,B=!1;function F(){null===C&&null===O||(L(),D())}function W(e,t,n){if(B)return e(t,n);B=!0;try{return A(e,t,n)}finally{B=!1,F()}}var U=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,H=Object.prototype.hasOwnProperty,V={},q={};function K(e,t,n,r,o,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=i}var $={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){$[e]=new K(e,0,!1,e,null,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];$[t]=new K(t,1,!1,e[1],null,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){$[e]=new K(e,2,!1,e.toLowerCase(),null,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){$[e]=new K(e,2,!1,e,null,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){$[e]=new K(e,3,!1,e.toLowerCase(),null,!1)})),["checked","multiple","muted","selected"].forEach((function(e){$[e]=new K(e,3,!0,e,null,!1)})),["capture","download"].forEach((function(e){$[e]=new K(e,4,!1,e,null,!1)})),["cols","rows","size","span"].forEach((function(e){$[e]=new K(e,6,!1,e,null,!1)})),["rowSpan","start"].forEach((function(e){$[e]=new K(e,5,!1,e.toLowerCase(),null,!1)}));var J=/[\-:]([a-z])/g;function G(e){return e[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(J,G);$[t]=new K(t,1,!1,e,null,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(J,G);$[t]=new K(t,1,!1,e,"http://www.w3.org/1999/xlink",!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(J,G);$[t]=new K(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1)})),["tabIndex","crossOrigin"].forEach((function(e){$[e]=new K(e,1,!1,e.toLowerCase(),null,!1)})),$.xlinkHref=new K("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0),["src","href","action","formAction"].forEach((function(e){$[e]=new K(e,1,!1,e.toLowerCase(),null,!0)}));var Y=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function Z(e,t,n,r){var o=$.hasOwnProperty(t)?$[t]:null;(null!==o?0===o.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!H.call(q,e)||!H.call(V,e)&&(U.test(e)?q[e]=!0:(V[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}Y.hasOwnProperty("ReactCurrentDispatcher")||(Y.ReactCurrentDispatcher={current:null}),Y.hasOwnProperty("ReactCurrentBatchConfig")||(Y.ReactCurrentBatchConfig={suspense:null});var Q=/^(.*)[\\\/]/,X="function"==typeof Symbol&&Symbol.for,ee=X?Symbol.for("react.element"):60103,te=X?Symbol.for("react.portal"):60106,ne=X?Symbol.for("react.fragment"):60107,re=X?Symbol.for("react.strict_mode"):60108,oe=X?Symbol.for("react.profiler"):60114,ie=X?Symbol.for("react.provider"):60109,ae=X?Symbol.for("react.context"):60110,le=X?Symbol.for("react.concurrent_mode"):60111,se=X?Symbol.for("react.forward_ref"):60112,ce=X?Symbol.for("react.suspense"):60113,ue=X?Symbol.for("react.suspense_list"):60120,de=X?Symbol.for("react.memo"):60115,fe=X?Symbol.for("react.lazy"):60116,pe=X?Symbol.for("react.block"):60121,he="function"==typeof Symbol&&Symbol.iterator;function ge(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=he&&e[he]||e["@@iterator"])?e:null}function me(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case ne:return"Fragment";case te:return"Portal";case oe:return"Profiler";case re:return"StrictMode";case ce:return"Suspense";case ue:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case ae:return"Context.Consumer";case ie:return"Context.Provider";case se:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case de:return me(e.type);case pe:return me(e.render);case fe:if(e=1===e._status?e._result:null)return me(e)}return null}function be(e){var t="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break e;default:var r=e._debugOwner,o=e._debugSource,i=me(e.type);n=null,r&&(n=me(r.type)),r=i,i="",o?i=" (at "+o.fileName.replace(Q,"")+":"+o.lineNumber+")":n&&(i=" (created by "+n+")"),n="\n    in "+(r||"Unknown")+i}t+=n,e=e.return}while(e);return t}function ve(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function ye(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function xe(e){e._valueTracker||(e._valueTracker=function(e){var t=ye(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,i=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,i.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function we(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=ye(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function ke(e,t){var n=t.checked;return o({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function _e(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=ve(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Ee(e,t){null!=(t=t.checked)&&Z(e,"checked",t,!1)}function Se(e,t){Ee(e,t);var n=ve(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?ze(e,t.type,n):t.hasOwnProperty("defaultValue")&&ze(e,t.type,ve(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Pe(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ze(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function Me(e,t){return e=o({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function Ce(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+ve(n),t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function Oe(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(a(91));return o({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Te(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(a(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(a(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:ve(n)}}function Ne(e,t){var n=ve(t.value),r=ve(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function De(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}var je="http://www.w3.org/1999/xhtml",Ie="http://www.w3.org/2000/svg";function Le(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Ae(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?Le(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var Re,Be=function(e){return"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(t,n,r,o){MSApp.execUnsafeLocalFunction((function(){return e(t,n)}))}:e}((function(e,t){if(e.namespaceURI!==Ie||"innerHTML"in e)e.innerHTML=t;else{for((Re=Re||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=Re.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}}));function Fe(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}function We(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var Ue={animationend:We("Animation","AnimationEnd"),animationiteration:We("Animation","AnimationIteration"),animationstart:We("Animation","AnimationStart"),transitionend:We("Transition","TransitionEnd")},He={},Ve={};function qe(e){if(He[e])return He[e];if(!Ue[e])return e;var t,n=Ue[e];for(t in n)if(n.hasOwnProperty(t)&&t in Ve)return He[e]=n[t];return e}z&&(Ve=document.createElement("div").style,"AnimationEvent"in window||(delete Ue.animationend.animation,delete Ue.animationiteration.animation,delete Ue.animationstart.animation),"TransitionEvent"in window||delete Ue.transitionend.transition);var Ke=qe("animationend"),$e=qe("animationiteration"),Je=qe("animationstart"),Ge=qe("transitionend"),Ye="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Ze=new("function"==typeof WeakMap?WeakMap:Map);function Qe(e){var t=Ze.get(e);return void 0===t&&(t=new Map,Ze.set(e,t)),t}function Xe(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).effectTag)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function et(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function tt(e){if(Xe(e)!==e)throw Error(a(188))}function nt(e){if(!(e=function(e){var t=e.alternate;if(!t){if(null===(t=Xe(e)))throw Error(a(188));return t!==e?null:e}for(var n=e,r=t;;){var o=n.return;if(null===o)break;var i=o.alternate;if(null===i){if(null!==(r=o.return)){n=r;continue}break}if(o.child===i.child){for(i=o.child;i;){if(i===n)return tt(o),e;if(i===r)return tt(o),t;i=i.sibling}throw Error(a(188))}if(n.return!==r.return)n=o,r=i;else{for(var l=!1,s=o.child;s;){if(s===n){l=!0,n=o,r=i;break}if(s===r){l=!0,r=o,n=i;break}s=s.sibling}if(!l){for(s=i.child;s;){if(s===n){l=!0,n=i,r=o;break}if(s===r){l=!0,r=i,n=o;break}s=s.sibling}if(!l)throw Error(a(189))}}if(n.alternate!==r)throw Error(a(190))}if(3!==n.tag)throw Error(a(188));return n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function rt(e,t){if(null==t)throw Error(a(30));return null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function ot(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var it=null;function at(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t))for(var r=0;r<t.length&&!e.isPropagationStopped();r++)b(e,t[r],n[r]);else t&&b(e,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}function lt(e){if(null!==e&&(it=rt(it,e)),e=it,it=null,e){if(ot(e,at),it)throw Error(a(95));if(u)throw e=d,u=!1,d=null,e}}function st(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function ct(e){if(!z)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t}var ut=[];function dt(e){e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>ut.length&&ut.push(e)}function ft(e,t,n,r){if(ut.length){var o=ut.pop();return o.topLevelType=e,o.eventSystemFlags=r,o.nativeEvent=t,o.targetInst=n,o}return{topLevelType:e,eventSystemFlags:r,nativeEvent:t,targetInst:n,ancestors:[]}}function pt(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var r=n;if(3===r.tag)r=r.stateNode.containerInfo;else{for(;r.return;)r=r.return;r=3!==r.tag?null:r.stateNode.containerInfo}if(!r)break;5!==(t=n.tag)&&6!==t||e.ancestors.push(n),n=zn(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var o=st(e.nativeEvent);r=e.topLevelType;var i=e.nativeEvent,a=e.eventSystemFlags;0===n&&(a|=64);for(var l=null,s=0;s<k.length;s++){var c=k[s];c&&(c=c.extractEvents(r,t,i,o,a))&&(l=rt(l,c))}lt(l)}}function ht(e,t,n){if(!n.has(e)){switch(e){case"scroll":Jt(t,"scroll",!0);break;case"focus":case"blur":Jt(t,"focus",!0),Jt(t,"blur",!0),n.set("blur",null),n.set("focus",null);break;case"cancel":case"close":ct(e)&&Jt(t,e,!0);break;case"invalid":case"submit":case"reset":break;default:-1===Ye.indexOf(e)&&$t(e,t)}n.set(e,null)}}var gt,mt,bt,vt=!1,yt=[],xt=null,wt=null,kt=null,_t=new Map,Et=new Map,St=[],Pt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "),zt="focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");function Mt(e,t,n,r,o){return{blockedOn:e,topLevelType:t,eventSystemFlags:32|n,nativeEvent:o,container:r}}function Ct(e,t){switch(e){case"focus":case"blur":xt=null;break;case"dragenter":case"dragleave":wt=null;break;case"mouseover":case"mouseout":kt=null;break;case"pointerover":case"pointerout":_t.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":Et.delete(t.pointerId)}}function Ot(e,t,n,r,o,i){return null===e||e.nativeEvent!==i?(e=Mt(t,n,r,o,i),null!==t&&(null!==(t=Mn(t))&&mt(t)),e):(e.eventSystemFlags|=r,e)}function Tt(e){var t=zn(e.target);if(null!==t){var n=Xe(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=et(n)))return e.blockedOn=t,void i.unstable_runWithPriority(e.priority,(function(){bt(n)}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function Nt(e){if(null!==e.blockedOn)return!1;var t=Qt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);if(null!==t){var n=Mn(t);return null!==n&&mt(n),e.blockedOn=t,!1}return!0}function Dt(e,t,n){Nt(e)&&n.delete(t)}function jt(){for(vt=!1;0<yt.length;){var e=yt[0];if(null!==e.blockedOn){null!==(e=Mn(e.blockedOn))&&gt(e);break}var t=Qt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);null!==t?e.blockedOn=t:yt.shift()}null!==xt&&Nt(xt)&&(xt=null),null!==wt&&Nt(wt)&&(wt=null),null!==kt&&Nt(kt)&&(kt=null),_t.forEach(Dt),Et.forEach(Dt)}function It(e,t){e.blockedOn===t&&(e.blockedOn=null,vt||(vt=!0,i.unstable_scheduleCallback(i.unstable_NormalPriority,jt)))}function Lt(e){function t(t){return It(t,e)}if(0<yt.length){It(yt[0],e);for(var n=1;n<yt.length;n++){var r=yt[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==xt&&It(xt,e),null!==wt&&It(wt,e),null!==kt&&It(kt,e),_t.forEach(t),Et.forEach(t),n=0;n<St.length;n++)(r=St[n]).blockedOn===e&&(r.blockedOn=null);for(;0<St.length&&null===(n=St[0]).blockedOn;)Tt(n),null===n.blockedOn&&St.shift()}var At={},Rt=new Map,Bt=new Map,Ft=["abort","abort",Ke,"animationEnd",$e,"animationIteration",Je,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Ge,"transitionEnd","waiting","waiting"];function Wt(e,t){for(var n=0;n<e.length;n+=2){var r=e[n],o=e[n+1],i="on"+(o[0].toUpperCase()+o.slice(1));i={phasedRegistrationNames:{bubbled:i,captured:i+"Capture"},dependencies:[r],eventPriority:t},Bt.set(r,t),Rt.set(r,i),At[o]=i}}Wt("blur blur cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focus focus input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),Wt("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),Wt(Ft,2);for(var Ut="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),Ht=0;Ht<Ut.length;Ht++)Bt.set(Ut[Ht],0);var Vt=i.unstable_UserBlockingPriority,qt=i.unstable_runWithPriority,Kt=!0;function $t(e,t){Jt(t,e,!1)}function Jt(e,t,n){var r=Bt.get(t);switch(void 0===r?2:r){case 0:r=Gt.bind(null,t,1,e);break;case 1:r=Yt.bind(null,t,1,e);break;default:r=Zt.bind(null,t,1,e)}n?e.addEventListener(t,r,!0):e.addEventListener(t,r,!1)}function Gt(e,t,n,r){R||L();var o=Zt,i=R;R=!0;try{I(o,e,t,n,r)}finally{(R=i)||F()}}function Yt(e,t,n,r){qt(Vt,Zt.bind(null,e,t,n,r))}function Zt(e,t,n,r){if(Kt)if(0<yt.length&&-1<Pt.indexOf(e))e=Mt(null,e,t,n,r),yt.push(e);else{var o=Qt(e,t,n,r);if(null===o)Ct(e,r);else if(-1<Pt.indexOf(e))e=Mt(o,e,t,n,r),yt.push(e);else if(!function(e,t,n,r,o){switch(t){case"focus":return xt=Ot(xt,e,t,n,r,o),!0;case"dragenter":return wt=Ot(wt,e,t,n,r,o),!0;case"mouseover":return kt=Ot(kt,e,t,n,r,o),!0;case"pointerover":var i=o.pointerId;return _t.set(i,Ot(_t.get(i)||null,e,t,n,r,o)),!0;case"gotpointercapture":return i=o.pointerId,Et.set(i,Ot(Et.get(i)||null,e,t,n,r,o)),!0}return!1}(o,e,t,n,r)){Ct(e,r),e=ft(e,r,null,t);try{W(pt,e)}finally{dt(e)}}}}function Qt(e,t,n,r){if(null!==(n=zn(n=st(r)))){var o=Xe(n);if(null===o)n=null;else{var i=o.tag;if(13===i){if(null!==(n=et(o)))return n;n=null}else if(3===i){if(o.stateNode.hydrate)return 3===o.tag?o.stateNode.containerInfo:null;n=null}else o!==n&&(n=null)}}e=ft(e,r,n,t);try{W(pt,e)}finally{dt(e)}return null}var Xt={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},en=["Webkit","ms","Moz","O"];function tn(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||Xt.hasOwnProperty(e)&&Xt[e]?(""+t).trim():t+"px"}function nn(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=tn(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(Xt).forEach((function(e){en.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),Xt[t]=Xt[e]}))}));var rn=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function on(e,t){if(t){if(rn[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(a(137,e,""));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(a(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(a(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(a(62,""))}}function an(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var ln=je;function sn(e,t){var n=Qe(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=S[t];for(var r=0;r<t.length;r++)ht(t[r],e,n)}function cn(){}function un(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function dn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function fn(e,t){var n,r=dn(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=dn(r)}}function pn(){for(var e=window,t=un();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=un((e=t.contentWindow).document)}return t}function hn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var gn=null,mn=null;function bn(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function vn(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var yn="function"==typeof setTimeout?setTimeout:void 0,xn="function"==typeof clearTimeout?clearTimeout:void 0;function wn(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function kn(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var _n=Math.random().toString(36).slice(2),En="__reactInternalInstance$"+_n,Sn="__reactEventHandlers$"+_n,Pn="__reactContainere$"+_n;function zn(e){var t=e[En];if(t)return t;for(var n=e.parentNode;n;){if(t=n[Pn]||n[En]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=kn(e);null!==e;){if(n=e[En])return n;e=kn(e)}return t}n=(e=n).parentNode}return null}function Mn(e){return!(e=e[En]||e[Pn])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function Cn(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(a(33))}function On(e){return e[Sn]||null}function Tn(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function Nn(e,t){var n=e.stateNode;if(!n)return null;var r=h(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(a(231,t,typeof n));return n}function Dn(e,t,n){(t=Nn(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=rt(n._dispatchListeners,t),n._dispatchInstances=rt(n._dispatchInstances,e))}function jn(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=Tn(t);for(t=n.length;0<t--;)Dn(n[t],"captured",e);for(t=0;t<n.length;t++)Dn(n[t],"bubbled",e)}}function In(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=Nn(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=rt(n._dispatchListeners,t),n._dispatchInstances=rt(n._dispatchInstances,e))}function Ln(e){e&&e.dispatchConfig.registrationName&&In(e._targetInst,null,e)}function An(e){ot(e,jn)}var Rn=null,Bn=null,Fn=null;function Wn(){if(Fn)return Fn;var e,t,n=Bn,r=n.length,o="value"in Rn?Rn.value:Rn.textContent,i=o.length;for(e=0;e<r&&n[e]===o[e];e++);var a=r-e;for(t=1;t<=a&&n[r-t]===o[i-t];t++);return Fn=o.slice(e,1<t?1-t:void 0)}function Un(){return!0}function Hn(){return!1}function Vn(e,t,n,r){for(var o in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(o)&&((t=e[o])?this[o]=t(n):"target"===o?this.target=r:this[o]=n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?Un:Hn,this.isPropagationStopped=Hn,this}function qn(e,t,n,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,e,t,n,r),o}return new this(e,t,n,r)}function Kn(e){if(!(e instanceof this))throw Error(a(279));e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function $n(e){e.eventPool=[],e.getPooled=qn,e.release=Kn}o(Vn.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=Un)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=Un)},persist:function(){this.isPersistent=Un},isPersistent:Hn,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=Hn,this._dispatchInstances=this._dispatchListeners=null}}),Vn.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},Vn.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var i=new t;return o(i,n.prototype),n.prototype=i,n.prototype.constructor=n,n.Interface=o({},r.Interface,e),n.extend=r.extend,$n(n),n},$n(Vn);var Jn=Vn.extend({data:null}),Gn=Vn.extend({data:null}),Yn=[9,13,27,32],Zn=z&&"CompositionEvent"in window,Qn=null;z&&"documentMode"in document&&(Qn=document.documentMode);var Xn=z&&"TextEvent"in window&&!Qn,er=z&&(!Zn||Qn&&8<Qn&&11>=Qn),tr=String.fromCharCode(32),nr={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},rr=!1;function or(e,t){switch(e){case"keyup":return-1!==Yn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function ir(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var ar=!1;var lr={eventTypes:nr,extractEvents:function(e,t,n,r){var o;if(Zn)e:{switch(e){case"compositionstart":var i=nr.compositionStart;break e;case"compositionend":i=nr.compositionEnd;break e;case"compositionupdate":i=nr.compositionUpdate;break e}i=void 0}else ar?or(e,n)&&(i=nr.compositionEnd):"keydown"===e&&229===n.keyCode&&(i=nr.compositionStart);return i?(er&&"ko"!==n.locale&&(ar||i!==nr.compositionStart?i===nr.compositionEnd&&ar&&(o=Wn()):(Bn="value"in(Rn=r)?Rn.value:Rn.textContent,ar=!0)),i=Jn.getPooled(i,t,n,r),o?i.data=o:null!==(o=ir(n))&&(i.data=o),An(i),o=i):o=null,(e=Xn?function(e,t){switch(e){case"compositionend":return ir(t);case"keypress":return 32!==t.which?null:(rr=!0,tr);case"textInput":return(e=t.data)===tr&&rr?null:e;default:return null}}(e,n):function(e,t){if(ar)return"compositionend"===e||!Zn&&or(e,t)?(e=Wn(),Fn=Bn=Rn=null,ar=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return er&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))?((t=Gn.getPooled(nr.beforeInput,t,n,r)).data=e,An(t)):t=null,null===o?t:null===t?o:[o,t]}},sr={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function cr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!sr[e.type]:"textarea"===t}var ur={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function dr(e,t,n){return(e=Vn.getPooled(ur.change,e,t,n)).type="change",N(n),An(e),e}var fr=null,pr=null;function hr(e){lt(e)}function gr(e){if(we(Cn(e)))return e}function mr(e,t){if("change"===e)return t}var br=!1;function vr(){fr&&(fr.detachEvent("onpropertychange",yr),pr=fr=null)}function yr(e){if("value"===e.propertyName&&gr(pr))if(e=dr(pr,e,st(e)),R)lt(e);else{R=!0;try{j(hr,e)}finally{R=!1,F()}}}function xr(e,t,n){"focus"===e?(vr(),pr=n,(fr=t).attachEvent("onpropertychange",yr)):"blur"===e&&vr()}function wr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return gr(pr)}function kr(e,t){if("click"===e)return gr(t)}function _r(e,t){if("input"===e||"change"===e)return gr(t)}z&&(br=ct("input")&&(!document.documentMode||9<document.documentMode));var Er={eventTypes:ur,_isInputEventSupported:br,extractEvents:function(e,t,n,r){var o=t?Cn(t):window,i=o.nodeName&&o.nodeName.toLowerCase();if("select"===i||"input"===i&&"file"===o.type)var a=mr;else if(cr(o))if(br)a=_r;else{a=wr;var l=xr}else(i=o.nodeName)&&"input"===i.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(a=kr);if(a&&(a=a(e,t)))return dr(a,n,r);l&&l(e,o,t),"blur"===e&&(e=o._wrapperState)&&e.controlled&&"number"===o.type&&ze(o,"number",o.value)}},Sr=Vn.extend({view:null,detail:null}),Pr={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function zr(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Pr[e])&&!!t[e]}function Mr(){return zr}var Cr=0,Or=0,Tr=!1,Nr=!1,Dr=Sr.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Mr,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=Cr;return Cr=e.screenX,Tr?"mousemove"===e.type?e.screenX-t:0:(Tr=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=Or;return Or=e.screenY,Nr?"mousemove"===e.type?e.screenY-t:0:(Nr=!0,0)}}),jr=Dr.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Ir={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Lr={eventTypes:Ir,extractEvents:function(e,t,n,r,o){var i="mouseover"===e||"pointerover"===e,a="mouseout"===e||"pointerout"===e;if(i&&0==(32&o)&&(n.relatedTarget||n.fromElement)||!a&&!i)return null;(i=r.window===r?r:(i=r.ownerDocument)?i.defaultView||i.parentWindow:window,a)?(a=t,null!==(t=(t=n.relatedTarget||n.toElement)?zn(t):null)&&(t!==Xe(t)||5!==t.tag&&6!==t.tag)&&(t=null)):a=null;if(a===t)return null;if("mouseout"===e||"mouseover"===e)var l=Dr,s=Ir.mouseLeave,c=Ir.mouseEnter,u="mouse";else"pointerout"!==e&&"pointerover"!==e||(l=jr,s=Ir.pointerLeave,c=Ir.pointerEnter,u="pointer");if(e=null==a?i:Cn(a),i=null==t?i:Cn(t),(s=l.getPooled(s,a,n,r)).type=u+"leave",s.target=e,s.relatedTarget=i,(n=l.getPooled(c,t,n,r)).type=u+"enter",n.target=i,n.relatedTarget=e,u=t,(r=a)&&u)e:{for(c=u,a=0,e=l=r;e;e=Tn(e))a++;for(e=0,t=c;t;t=Tn(t))e++;for(;0<a-e;)l=Tn(l),a--;for(;0<e-a;)c=Tn(c),e--;for(;a--;){if(l===c||l===c.alternate)break e;l=Tn(l),c=Tn(c)}l=null}else l=null;for(c=l,l=[];r&&r!==c&&(null===(a=r.alternate)||a!==c);)l.push(r),r=Tn(r);for(r=[];u&&u!==c&&(null===(a=u.alternate)||a!==c);)r.push(u),u=Tn(u);for(u=0;u<l.length;u++)In(l[u],"bubbled",s);for(u=r.length;0<u--;)In(r[u],"captured",n);return 0==(64&o)?[s]:[s,n]}};var Ar="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},Rr=Object.prototype.hasOwnProperty;function Br(e,t){if(Ar(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!Rr.call(t,n[r])||!Ar(e[n[r]],t[n[r]]))return!1;return!0}var Fr=z&&"documentMode"in document&&11>=document.documentMode,Wr={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Ur=null,Hr=null,Vr=null,qr=!1;function Kr(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return qr||null==Ur||Ur!==un(n)?null:("selectionStart"in(n=Ur)&&hn(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},Vr&&Br(Vr,n)?null:(Vr=n,(e=Vn.getPooled(Wr.select,Hr,e,t)).type="select",e.target=Ur,An(e),e))}var $r={eventTypes:Wr,extractEvents:function(e,t,n,r,o,i){if(!(i=!(o=i||(r.window===r?r.document:9===r.nodeType?r:r.ownerDocument)))){e:{o=Qe(o),i=S.onSelect;for(var a=0;a<i.length;a++)if(!o.has(i[a])){o=!1;break e}o=!0}i=!o}if(i)return null;switch(o=t?Cn(t):window,e){case"focus":(cr(o)||"true"===o.contentEditable)&&(Ur=o,Hr=t,Vr=null);break;case"blur":Vr=Hr=Ur=null;break;case"mousedown":qr=!0;break;case"contextmenu":case"mouseup":case"dragend":return qr=!1,Kr(n,r);case"selectionchange":if(Fr)break;case"keydown":case"keyup":return Kr(n,r)}return null}},Jr=Vn.extend({animationName:null,elapsedTime:null,pseudoElement:null}),Gr=Vn.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),Yr=Sr.extend({relatedTarget:null});function Zr(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var Qr={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Xr={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},eo=Sr.extend({key:function(e){if(e.key){var t=Qr[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=Zr(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Xr[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Mr,charCode:function(e){return"keypress"===e.type?Zr(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?Zr(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),to=Dr.extend({dataTransfer:null}),no=Sr.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Mr}),ro=Vn.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),oo=Dr.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),io={eventTypes:At,extractEvents:function(e,t,n,r){var o=Rt.get(e);if(!o)return null;switch(e){case"keypress":if(0===Zr(n))return null;case"keydown":case"keyup":e=eo;break;case"blur":case"focus":e=Yr;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=Dr;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=to;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=no;break;case Ke:case $e:case Je:e=Jr;break;case Ge:e=ro;break;case"scroll":e=Sr;break;case"wheel":e=oo;break;case"copy":case"cut":case"paste":e=Gr;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=jr;break;default:e=Vn}return An(t=e.getPooled(o,t,n,r)),t}};if(v)throw Error(a(101));v=Array.prototype.slice.call("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),x(),h=On,g=Mn,m=Cn,P({SimpleEventPlugin:io,EnterLeaveEventPlugin:Lr,ChangeEventPlugin:Er,SelectEventPlugin:$r,BeforeInputEventPlugin:lr});var ao=[],lo=-1;function so(e){0>lo||(e.current=ao[lo],ao[lo]=null,lo--)}function co(e,t){lo++,ao[lo]=e.current,e.current=t}var uo={},fo={current:uo},po={current:!1},ho=uo;function go(e,t){var n=e.type.contextTypes;if(!n)return uo;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,i={};for(o in n)i[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=i),i}function mo(e){return null!=(e=e.childContextTypes)}function bo(){so(po),so(fo)}function vo(e,t,n){if(fo.current!==uo)throw Error(a(168));co(fo,t),co(po,n)}function yo(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var i in r=r.getChildContext())if(!(i in e))throw Error(a(108,me(t)||"Unknown",i));return o({},n,{},r)}function xo(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||uo,ho=fo.current,co(fo,e),co(po,po.current),!0}function wo(e,t,n){var r=e.stateNode;if(!r)throw Error(a(169));n?(e=yo(e,t,ho),r.__reactInternalMemoizedMergedChildContext=e,so(po),so(fo),co(fo,e)):so(po),co(po,n)}var ko=i.unstable_runWithPriority,_o=i.unstable_scheduleCallback,Eo=i.unstable_cancelCallback,So=i.unstable_requestPaint,Po=i.unstable_now,zo=i.unstable_getCurrentPriorityLevel,Mo=i.unstable_ImmediatePriority,Co=i.unstable_UserBlockingPriority,Oo=i.unstable_NormalPriority,To=i.unstable_LowPriority,No=i.unstable_IdlePriority,Do={},jo=i.unstable_shouldYield,Io=void 0!==So?So:function(){},Lo=null,Ao=null,Ro=!1,Bo=Po(),Fo=1e4>Bo?Po:function(){return Po()-Bo};function Wo(){switch(zo()){case Mo:return 99;case Co:return 98;case Oo:return 97;case To:return 96;case No:return 95;default:throw Error(a(332))}}function Uo(e){switch(e){case 99:return Mo;case 98:return Co;case 97:return Oo;case 96:return To;case 95:return No;default:throw Error(a(332))}}function Ho(e,t){return e=Uo(e),ko(e,t)}function Vo(e,t,n){return e=Uo(e),_o(e,t,n)}function qo(e){return null===Lo?(Lo=[e],Ao=_o(Mo,$o)):Lo.push(e),Do}function Ko(){if(null!==Ao){var e=Ao;Ao=null,Eo(e)}$o()}function $o(){if(!Ro&&null!==Lo){Ro=!0;var e=0;try{var t=Lo;Ho(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),Lo=null}catch(t){throw null!==Lo&&(Lo=Lo.slice(e+1)),_o(Mo,Ko),t}finally{Ro=!1}}}function Jo(e,t,n){return 1073741821-(1+((1073741821-e+t/10)/(n/=10)|0))*n}function Go(e,t){if(e&&e.defaultProps)for(var n in t=o({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}var Yo={current:null},Zo=null,Qo=null,Xo=null;function ei(){Xo=Qo=Zo=null}function ti(e){var t=Yo.current;so(Yo),e.type._context._currentValue=t}function ni(e,t){for(;null!==e;){var n=e.alternate;if(e.childExpirationTime<t)e.childExpirationTime=t,null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t);else{if(!(null!==n&&n.childExpirationTime<t))break;n.childExpirationTime=t}e=e.return}}function ri(e,t){Zo=e,Xo=Qo=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(e.expirationTime>=t&&(Oa=!0),e.firstContext=null)}function oi(e,t){if(Xo!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(Xo=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Qo){if(null===Zo)throw Error(a(308));Qo=t,Zo.dependencies={expirationTime:0,firstContext:t,responders:null}}else Qo=Qo.next=t;return e._currentValue}var ii=!1;function ai(e){e.updateQueue={baseState:e.memoizedState,baseQueue:null,shared:{pending:null},effects:null}}function li(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,baseQueue:e.baseQueue,shared:e.shared,effects:e.effects})}function si(e,t){return(e={expirationTime:e,suspenseConfig:t,tag:0,payload:null,callback:null,next:null}).next=e}function ci(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function ui(e,t){var n=e.alternate;null!==n&&li(n,e),null===(n=(e=e.updateQueue).baseQueue)?(e.baseQueue=t.next=t,t.next=t):(t.next=n.next,n.next=t)}function di(e,t,n,r){var i=e.updateQueue;ii=!1;var a=i.baseQueue,l=i.shared.pending;if(null!==l){if(null!==a){var s=a.next;a.next=l.next,l.next=s}a=l,i.shared.pending=null,null!==(s=e.alternate)&&(null!==(s=s.updateQueue)&&(s.baseQueue=l))}if(null!==a){s=a.next;var c=i.baseState,u=0,d=null,f=null,p=null;if(null!==s)for(var h=s;;){if((l=h.expirationTime)<r){var g={expirationTime:h.expirationTime,suspenseConfig:h.suspenseConfig,tag:h.tag,payload:h.payload,callback:h.callback,next:null};null===p?(f=p=g,d=c):p=p.next=g,l>u&&(u=l)}else{null!==p&&(p=p.next={expirationTime:1073741823,suspenseConfig:h.suspenseConfig,tag:h.tag,payload:h.payload,callback:h.callback,next:null}),is(l,h.suspenseConfig);e:{var m=e,b=h;switch(l=t,g=n,b.tag){case 1:if("function"==typeof(m=b.payload)){c=m.call(g,c,l);break e}c=m;break e;case 3:m.effectTag=-4097&m.effectTag|64;case 0:if(null==(l="function"==typeof(m=b.payload)?m.call(g,c,l):m))break e;c=o({},c,l);break e;case 2:ii=!0}}null!==h.callback&&(e.effectTag|=32,null===(l=i.effects)?i.effects=[h]:l.push(h))}if(null===(h=h.next)||h===s){if(null===(l=i.shared.pending))break;h=a.next=l.next,l.next=s,i.baseQueue=a=l,i.shared.pending=null}}null===p?d=c:p.next=f,i.baseState=d,i.baseQueue=p,as(u),e.expirationTime=u,e.memoizedState=c}}function fi(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],o=r.callback;if(null!==o){if(r.callback=null,r=o,o=n,"function"!=typeof r)throw Error(a(191,r));r.call(o)}}}var pi=Y.ReactCurrentBatchConfig,hi=(new r.Component).refs;function gi(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:o({},t,n),e.memoizedState=n,0===e.expirationTime&&(e.updateQueue.baseState=n)}var mi={isMounted:function(e){return!!(e=e._reactInternalFiber)&&Xe(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=Kl(),o=pi.suspense;(o=si(r=$l(r,e,o),o)).payload=t,null!=n&&(o.callback=n),ci(e,o),Jl(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=Kl(),o=pi.suspense;(o=si(r=$l(r,e,o),o)).tag=1,o.payload=t,null!=n&&(o.callback=n),ci(e,o),Jl(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=Kl(),r=pi.suspense;(r=si(n=$l(n,e,r),r)).tag=2,null!=t&&(r.callback=t),ci(e,r),Jl(e,n)}};function bi(e,t,n,r,o,i,a){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,i,a):!t.prototype||!t.prototype.isPureReactComponent||(!Br(n,r)||!Br(o,i))}function vi(e,t,n){var r=!1,o=uo,i=t.contextType;return"object"==typeof i&&null!==i?i=oi(i):(o=mo(t)?ho:fo.current,i=(r=null!=(r=t.contextTypes))?go(e,o):uo),t=new t(n,i),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=mi,e.stateNode=t,t._reactInternalFiber=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=i),t}function yi(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&mi.enqueueReplaceState(t,t.state,null)}function xi(e,t,n,r){var o=e.stateNode;o.props=n,o.state=e.memoizedState,o.refs=hi,ai(e);var i=t.contextType;"object"==typeof i&&null!==i?o.context=oi(i):(i=mo(t)?ho:fo.current,o.context=go(e,i)),di(e,n,o,r),o.state=e.memoizedState,"function"==typeof(i=t.getDerivedStateFromProps)&&(gi(e,t,i,n),o.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(t=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&mi.enqueueReplaceState(o,o.state,null),di(e,n,o,r),o.state=e.memoizedState),"function"==typeof o.componentDidMount&&(e.effectTag|=4)}var wi=Array.isArray;function ki(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(a(309));var r=n.stateNode}if(!r)throw Error(a(147,e));var o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:((t=function(e){var t=r.refs;t===hi&&(t=r.refs={}),null===e?delete t[o]:t[o]=e})._stringRef=o,t)}if("string"!=typeof e)throw Error(a(284));if(!n._owner)throw Error(a(290,e))}return e}function _i(e,t){if("textarea"!==e.type)throw Error(a(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,""))}function Ei(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t){return(e=Ps(e,t)).index=0,e.sibling=null,e}function i(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function l(t){return e&&null===t.alternate&&(t.effectTag=2),t}function s(e,t,n,r){return null===t||6!==t.tag?((t=Cs(n,e.mode,r)).return=e,t):((t=o(t,n)).return=e,t)}function c(e,t,n,r){return null!==t&&t.elementType===n.type?((r=o(t,n.props)).ref=ki(e,t,n),r.return=e,r):((r=zs(n.type,n.key,n.props,null,e.mode,r)).ref=ki(e,t,n),r.return=e,r)}function u(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Os(n,e.mode,r)).return=e,t):((t=o(t,n.children||[])).return=e,t)}function d(e,t,n,r,i){return null===t||7!==t.tag?((t=Ms(n,e.mode,r,i)).return=e,t):((t=o(t,n)).return=e,t)}function f(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Cs(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case ee:return(n=zs(t.type,t.key,t.props,null,e.mode,n)).ref=ki(e,null,t),n.return=e,n;case te:return(t=Os(t,e.mode,n)).return=e,t}if(wi(t)||ge(t))return(t=Ms(t,e.mode,n,null)).return=e,t;_i(e,t)}return null}function p(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:s(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case ee:return n.key===o?n.type===ne?d(e,t,n.props.children,r,o):c(e,t,n,r):null;case te:return n.key===o?u(e,t,n,r):null}if(wi(n)||ge(n))return null!==o?null:d(e,t,n,r,null);_i(e,n)}return null}function h(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return s(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case ee:return e=e.get(null===r.key?n:r.key)||null,r.type===ne?d(t,e,r.props.children,o,r.key):c(t,e,r,o);case te:return u(t,e=e.get(null===r.key?n:r.key)||null,r,o)}if(wi(r)||ge(r))return d(t,e=e.get(n)||null,r,o,null);_i(t,r)}return null}function g(o,a,l,s){for(var c=null,u=null,d=a,g=a=0,m=null;null!==d&&g<l.length;g++){d.index>g?(m=d,d=null):m=d.sibling;var b=p(o,d,l[g],s);if(null===b){null===d&&(d=m);break}e&&d&&null===b.alternate&&t(o,d),a=i(b,a,g),null===u?c=b:u.sibling=b,u=b,d=m}if(g===l.length)return n(o,d),c;if(null===d){for(;g<l.length;g++)null!==(d=f(o,l[g],s))&&(a=i(d,a,g),null===u?c=d:u.sibling=d,u=d);return c}for(d=r(o,d);g<l.length;g++)null!==(m=h(d,o,g,l[g],s))&&(e&&null!==m.alternate&&d.delete(null===m.key?g:m.key),a=i(m,a,g),null===u?c=m:u.sibling=m,u=m);return e&&d.forEach((function(e){return t(o,e)})),c}function m(o,l,s,c){var u=ge(s);if("function"!=typeof u)throw Error(a(150));if(null==(s=u.call(s)))throw Error(a(151));for(var d=u=null,g=l,m=l=0,b=null,v=s.next();null!==g&&!v.done;m++,v=s.next()){g.index>m?(b=g,g=null):b=g.sibling;var y=p(o,g,v.value,c);if(null===y){null===g&&(g=b);break}e&&g&&null===y.alternate&&t(o,g),l=i(y,l,m),null===d?u=y:d.sibling=y,d=y,g=b}if(v.done)return n(o,g),u;if(null===g){for(;!v.done;m++,v=s.next())null!==(v=f(o,v.value,c))&&(l=i(v,l,m),null===d?u=v:d.sibling=v,d=v);return u}for(g=r(o,g);!v.done;m++,v=s.next())null!==(v=h(g,o,m,v.value,c))&&(e&&null!==v.alternate&&g.delete(null===v.key?m:v.key),l=i(v,l,m),null===d?u=v:d.sibling=v,d=v);return e&&g.forEach((function(e){return t(o,e)})),u}return function(e,r,i,s){var c="object"==typeof i&&null!==i&&i.type===ne&&null===i.key;c&&(i=i.props.children);var u="object"==typeof i&&null!==i;if(u)switch(i.$$typeof){case ee:e:{for(u=i.key,c=r;null!==c;){if(c.key===u){switch(c.tag){case 7:if(i.type===ne){n(e,c.sibling),(r=o(c,i.props.children)).return=e,e=r;break e}break;default:if(c.elementType===i.type){n(e,c.sibling),(r=o(c,i.props)).ref=ki(e,c,i),r.return=e,e=r;break e}}n(e,c);break}t(e,c),c=c.sibling}i.type===ne?((r=Ms(i.props.children,e.mode,s,i.key)).return=e,e=r):((s=zs(i.type,i.key,i.props,null,e.mode,s)).ref=ki(e,r,i),s.return=e,e=s)}return l(e);case te:e:{for(c=i.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===i.containerInfo&&r.stateNode.implementation===i.implementation){n(e,r.sibling),(r=o(r,i.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Os(i,e.mode,s)).return=e,e=r}return l(e)}if("string"==typeof i||"number"==typeof i)return i=""+i,null!==r&&6===r.tag?(n(e,r.sibling),(r=o(r,i)).return=e,e=r):(n(e,r),(r=Cs(i,e.mode,s)).return=e,e=r),l(e);if(wi(i))return g(e,r,i,s);if(ge(i))return m(e,r,i,s);if(u&&_i(e,i),void 0===i&&!c)switch(e.tag){case 1:case 0:throw e=e.type,Error(a(152,e.displayName||e.name||"Component"))}return n(e,r)}}var Si=Ei(!0),Pi=Ei(!1),zi={},Mi={current:zi},Ci={current:zi},Oi={current:zi};function Ti(e){if(e===zi)throw Error(a(174));return e}function Ni(e,t){switch(co(Oi,t),co(Ci,e),co(Mi,zi),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:Ae(null,"");break;default:t=Ae(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}so(Mi),co(Mi,t)}function Di(){so(Mi),so(Ci),so(Oi)}function ji(e){Ti(Oi.current);var t=Ti(Mi.current),n=Ae(t,e.type);t!==n&&(co(Ci,e),co(Mi,n))}function Ii(e){Ci.current===e&&(so(Mi),so(Ci))}var Li={current:0};function Ai(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.effectTag))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}function Ri(e,t){return{responder:e,props:t}}var Bi=Y.ReactCurrentDispatcher,Fi=Y.ReactCurrentBatchConfig,Wi=0,Ui=null,Hi=null,Vi=null,qi=!1;function Ki(){throw Error(a(321))}function $i(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!Ar(e[n],t[n]))return!1;return!0}function Ji(e,t,n,r,o,i){if(Wi=i,Ui=t,t.memoizedState=null,t.updateQueue=null,t.expirationTime=0,Bi.current=null===e||null===e.memoizedState?ba:va,e=n(r,o),t.expirationTime===Wi){i=0;do{if(t.expirationTime=0,!(25>i))throw Error(a(301));i+=1,Vi=Hi=null,t.updateQueue=null,Bi.current=ya,e=n(r,o)}while(t.expirationTime===Wi)}if(Bi.current=ma,t=null!==Hi&&null!==Hi.next,Wi=0,Vi=Hi=Ui=null,qi=!1,t)throw Error(a(300));return e}function Gi(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Vi?Ui.memoizedState=Vi=e:Vi=Vi.next=e,Vi}function Yi(){if(null===Hi){var e=Ui.alternate;e=null!==e?e.memoizedState:null}else e=Hi.next;var t=null===Vi?Ui.memoizedState:Vi.next;if(null!==t)Vi=t,Hi=e;else{if(null===e)throw Error(a(310));e={memoizedState:(Hi=e).memoizedState,baseState:Hi.baseState,baseQueue:Hi.baseQueue,queue:Hi.queue,next:null},null===Vi?Ui.memoizedState=Vi=e:Vi=Vi.next=e}return Vi}function Zi(e,t){return"function"==typeof t?t(e):t}function Qi(e){var t=Yi(),n=t.queue;if(null===n)throw Error(a(311));n.lastRenderedReducer=e;var r=Hi,o=r.baseQueue,i=n.pending;if(null!==i){if(null!==o){var l=o.next;o.next=i.next,i.next=l}r.baseQueue=o=i,n.pending=null}if(null!==o){o=o.next,r=r.baseState;var s=l=i=null,c=o;do{var u=c.expirationTime;if(u<Wi){var d={expirationTime:c.expirationTime,suspenseConfig:c.suspenseConfig,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null};null===s?(l=s=d,i=r):s=s.next=d,u>Ui.expirationTime&&(Ui.expirationTime=u,as(u))}else null!==s&&(s=s.next={expirationTime:1073741823,suspenseConfig:c.suspenseConfig,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null}),is(u,c.suspenseConfig),r=c.eagerReducer===e?c.eagerState:e(r,c.action);c=c.next}while(null!==c&&c!==o);null===s?i=r:s.next=l,Ar(r,t.memoizedState)||(Oa=!0),t.memoizedState=r,t.baseState=i,t.baseQueue=s,n.lastRenderedState=r}return[t.memoizedState,n.dispatch]}function Xi(e){var t=Yi(),n=t.queue;if(null===n)throw Error(a(311));n.lastRenderedReducer=e;var r=n.dispatch,o=n.pending,i=t.memoizedState;if(null!==o){n.pending=null;var l=o=o.next;do{i=e(i,l.action),l=l.next}while(l!==o);Ar(i,t.memoizedState)||(Oa=!0),t.memoizedState=i,null===t.baseQueue&&(t.baseState=i),n.lastRenderedState=i}return[i,r]}function ea(e){var t=Gi();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:Zi,lastRenderedState:e}).dispatch=ga.bind(null,Ui,e),[t.memoizedState,e]}function ta(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=Ui.updateQueue)?(t={lastEffect:null},Ui.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function na(){return Yi().memoizedState}function ra(e,t,n,r){var o=Gi();Ui.effectTag|=e,o.memoizedState=ta(1|t,n,void 0,void 0===r?null:r)}function oa(e,t,n,r){var o=Yi();r=void 0===r?null:r;var i=void 0;if(null!==Hi){var a=Hi.memoizedState;if(i=a.destroy,null!==r&&$i(r,a.deps))return void ta(t,n,i,r)}Ui.effectTag|=e,o.memoizedState=ta(1|t,n,i,r)}function ia(e,t){return ra(516,4,e,t)}function aa(e,t){return oa(516,4,e,t)}function la(e,t){return oa(4,2,e,t)}function sa(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function ca(e,t,n){return n=null!=n?n.concat([e]):null,oa(4,2,sa.bind(null,t,e),n)}function ua(){}function da(e,t){return Gi().memoizedState=[e,void 0===t?null:t],e}function fa(e,t){var n=Yi();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&$i(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function pa(e,t){var n=Yi();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&$i(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function ha(e,t,n){var r=Wo();Ho(98>r?98:r,(function(){e(!0)})),Ho(97<r?97:r,(function(){var r=Fi.suspense;Fi.suspense=void 0===t?null:t;try{e(!1),n()}finally{Fi.suspense=r}}))}function ga(e,t,n){var r=Kl(),o=pi.suspense;o={expirationTime:r=$l(r,e,o),suspenseConfig:o,action:n,eagerReducer:null,eagerState:null,next:null};var i=t.pending;if(null===i?o.next=o:(o.next=i.next,i.next=o),t.pending=o,i=e.alternate,e===Ui||null!==i&&i===Ui)qi=!0,o.expirationTime=Wi,Ui.expirationTime=Wi;else{if(0===e.expirationTime&&(null===i||0===i.expirationTime)&&null!==(i=t.lastRenderedReducer))try{var a=t.lastRenderedState,l=i(a,n);if(o.eagerReducer=i,o.eagerState=l,Ar(l,a))return}catch(e){}Jl(e,r)}}var ma={readContext:oi,useCallback:Ki,useContext:Ki,useEffect:Ki,useImperativeHandle:Ki,useLayoutEffect:Ki,useMemo:Ki,useReducer:Ki,useRef:Ki,useState:Ki,useDebugValue:Ki,useResponder:Ki,useDeferredValue:Ki,useTransition:Ki},ba={readContext:oi,useCallback:da,useContext:oi,useEffect:ia,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,ra(4,2,sa.bind(null,t,e),n)},useLayoutEffect:function(e,t){return ra(4,2,e,t)},useMemo:function(e,t){var n=Gi();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=Gi();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=ga.bind(null,Ui,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},Gi().memoizedState=e},useState:ea,useDebugValue:ua,useResponder:Ri,useDeferredValue:function(e,t){var n=ea(e),r=n[0],o=n[1];return ia((function(){var n=Fi.suspense;Fi.suspense=void 0===t?null:t;try{o(e)}finally{Fi.suspense=n}}),[e,t]),r},useTransition:function(e){var t=ea(!1),n=t[0];return t=t[1],[da(ha.bind(null,t,e),[t,e]),n]}},va={readContext:oi,useCallback:fa,useContext:oi,useEffect:aa,useImperativeHandle:ca,useLayoutEffect:la,useMemo:pa,useReducer:Qi,useRef:na,useState:function(){return Qi(Zi)},useDebugValue:ua,useResponder:Ri,useDeferredValue:function(e,t){var n=Qi(Zi),r=n[0],o=n[1];return aa((function(){var n=Fi.suspense;Fi.suspense=void 0===t?null:t;try{o(e)}finally{Fi.suspense=n}}),[e,t]),r},useTransition:function(e){var t=Qi(Zi),n=t[0];return t=t[1],[fa(ha.bind(null,t,e),[t,e]),n]}},ya={readContext:oi,useCallback:fa,useContext:oi,useEffect:aa,useImperativeHandle:ca,useLayoutEffect:la,useMemo:pa,useReducer:Xi,useRef:na,useState:function(){return Xi(Zi)},useDebugValue:ua,useResponder:Ri,useDeferredValue:function(e,t){var n=Xi(Zi),r=n[0],o=n[1];return aa((function(){var n=Fi.suspense;Fi.suspense=void 0===t?null:t;try{o(e)}finally{Fi.suspense=n}}),[e,t]),r},useTransition:function(e){var t=Xi(Zi),n=t[0];return t=t[1],[fa(ha.bind(null,t,e),[t,e]),n]}},xa=null,wa=null,ka=!1;function _a(e,t){var n=Es(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function Ea(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function Sa(e){if(ka){var t=wa;if(t){var n=t;if(!Ea(e,t)){if(!(t=wn(n.nextSibling))||!Ea(e,t))return e.effectTag=-1025&e.effectTag|2,ka=!1,void(xa=e);_a(xa,n)}xa=e,wa=wn(t.firstChild)}else e.effectTag=-1025&e.effectTag|2,ka=!1,xa=e}}function Pa(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;xa=e}function za(e){if(e!==xa)return!1;if(!ka)return Pa(e),ka=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!vn(t,e.memoizedProps))for(t=wa;t;)_a(e,t),t=wn(t.nextSibling);if(Pa(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(a(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){wa=wn(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}wa=null}}else wa=xa?wn(e.stateNode.nextSibling):null;return!0}function Ma(){wa=xa=null,ka=!1}var Ca=Y.ReactCurrentOwner,Oa=!1;function Ta(e,t,n,r){t.child=null===e?Pi(t,null,n,r):Si(t,e.child,n,r)}function Na(e,t,n,r,o){n=n.render;var i=t.ref;return ri(t,o),r=Ji(e,t,n,r,i,o),null===e||Oa?(t.effectTag|=1,Ta(e,t,r,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),Ja(e,t,o))}function Da(e,t,n,r,o,i){if(null===e){var a=n.type;return"function"!=typeof a||Ss(a)||void 0!==a.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=zs(n.type,null,r,null,t.mode,i)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=a,ja(e,t,a,r,o,i))}return a=e.child,o<i&&(o=a.memoizedProps,(n=null!==(n=n.compare)?n:Br)(o,r)&&e.ref===t.ref)?Ja(e,t,i):(t.effectTag|=1,(e=Ps(a,r)).ref=t.ref,e.return=t,t.child=e)}function ja(e,t,n,r,o,i){return null!==e&&Br(e.memoizedProps,r)&&e.ref===t.ref&&(Oa=!1,o<i)?(t.expirationTime=e.expirationTime,Ja(e,t,i)):La(e,t,n,r,i)}function Ia(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function La(e,t,n,r,o){var i=mo(n)?ho:fo.current;return i=go(t,i),ri(t,o),n=Ji(e,t,n,r,i,o),null===e||Oa?(t.effectTag|=1,Ta(e,t,n,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),Ja(e,t,o))}function Aa(e,t,n,r,o){if(mo(n)){var i=!0;xo(t)}else i=!1;if(ri(t,o),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),vi(t,n,r),xi(t,n,r,o),r=!0;else if(null===e){var a=t.stateNode,l=t.memoizedProps;a.props=l;var s=a.context,c=n.contextType;"object"==typeof c&&null!==c?c=oi(c):c=go(t,c=mo(n)?ho:fo.current);var u=n.getDerivedStateFromProps,d="function"==typeof u||"function"==typeof a.getSnapshotBeforeUpdate;d||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(l!==r||s!==c)&&yi(t,a,r,c),ii=!1;var f=t.memoizedState;a.state=f,di(t,r,a,o),s=t.memoizedState,l!==r||f!==s||po.current||ii?("function"==typeof u&&(gi(t,n,u,r),s=t.memoizedState),(l=ii||bi(t,n,l,r,f,s,c))?(d||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||("function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount()),"function"==typeof a.componentDidMount&&(t.effectTag|=4)):("function"==typeof a.componentDidMount&&(t.effectTag|=4),t.memoizedProps=r,t.memoizedState=s),a.props=r,a.state=s,a.context=c,r=l):("function"==typeof a.componentDidMount&&(t.effectTag|=4),r=!1)}else a=t.stateNode,li(e,t),l=t.memoizedProps,a.props=t.type===t.elementType?l:Go(t.type,l),s=a.context,"object"==typeof(c=n.contextType)&&null!==c?c=oi(c):c=go(t,c=mo(n)?ho:fo.current),(d="function"==typeof(u=n.getDerivedStateFromProps)||"function"==typeof a.getSnapshotBeforeUpdate)||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(l!==r||s!==c)&&yi(t,a,r,c),ii=!1,s=t.memoizedState,a.state=s,di(t,r,a,o),f=t.memoizedState,l!==r||s!==f||po.current||ii?("function"==typeof u&&(gi(t,n,u,r),f=t.memoizedState),(u=ii||bi(t,n,l,r,s,f,c))?(d||"function"!=typeof a.UNSAFE_componentWillUpdate&&"function"!=typeof a.componentWillUpdate||("function"==typeof a.componentWillUpdate&&a.componentWillUpdate(r,f,c),"function"==typeof a.UNSAFE_componentWillUpdate&&a.UNSAFE_componentWillUpdate(r,f,c)),"function"==typeof a.componentDidUpdate&&(t.effectTag|=4),"function"==typeof a.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof a.componentDidUpdate||l===e.memoizedProps&&s===e.memoizedState||(t.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||l===e.memoizedProps&&s===e.memoizedState||(t.effectTag|=256),t.memoizedProps=r,t.memoizedState=f),a.props=r,a.state=f,a.context=c,r=u):("function"!=typeof a.componentDidUpdate||l===e.memoizedProps&&s===e.memoizedState||(t.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||l===e.memoizedProps&&s===e.memoizedState||(t.effectTag|=256),r=!1);return Ra(e,t,n,r,i,o)}function Ra(e,t,n,r,o,i){Ia(e,t);var a=0!=(64&t.effectTag);if(!r&&!a)return o&&wo(t,n,!1),Ja(e,t,i);r=t.stateNode,Ca.current=t;var l=a&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.effectTag|=1,null!==e&&a?(t.child=Si(t,e.child,null,i),t.child=Si(t,null,l,i)):Ta(e,t,l,i),t.memoizedState=r.state,o&&wo(t,n,!0),t.child}function Ba(e){var t=e.stateNode;t.pendingContext?vo(0,t.pendingContext,t.pendingContext!==t.context):t.context&&vo(0,t.context,!1),Ni(e,t.containerInfo)}var Fa,Wa,Ua,Ha={dehydrated:null,retryTime:0};function Va(e,t,n){var r,o=t.mode,i=t.pendingProps,a=Li.current,l=!1;if((r=0!=(64&t.effectTag))||(r=0!=(2&a)&&(null===e||null!==e.memoizedState)),r?(l=!0,t.effectTag&=-65):null!==e&&null===e.memoizedState||void 0===i.fallback||!0===i.unstable_avoidThisFallback||(a|=1),co(Li,1&a),null===e){if(void 0!==i.fallback&&Sa(t),l){if(l=i.fallback,(i=Ms(null,o,0,null)).return=t,0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,i.child=e;null!==e;)e.return=i,e=e.sibling;return(n=Ms(l,o,n,null)).return=t,i.sibling=n,t.memoizedState=Ha,t.child=i,n}return o=i.children,t.memoizedState=null,t.child=Pi(t,null,o,n)}if(null!==e.memoizedState){if(o=(e=e.child).sibling,l){if(i=i.fallback,(n=Ps(e,e.pendingProps)).return=t,0==(2&t.mode)&&(l=null!==t.memoizedState?t.child.child:t.child)!==e.child)for(n.child=l;null!==l;)l.return=n,l=l.sibling;return(o=Ps(o,i)).return=t,n.sibling=o,n.childExpirationTime=0,t.memoizedState=Ha,t.child=n,o}return n=Si(t,e.child,i.children,n),t.memoizedState=null,t.child=n}if(e=e.child,l){if(l=i.fallback,(i=Ms(null,o,0,null)).return=t,i.child=e,null!==e&&(e.return=i),0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,i.child=e;null!==e;)e.return=i,e=e.sibling;return(n=Ms(l,o,n,null)).return=t,i.sibling=n,n.effectTag|=2,i.childExpirationTime=0,t.memoizedState=Ha,t.child=i,n}return t.memoizedState=null,t.child=Si(t,e,i.children,n)}function qa(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t),ni(e.return,t)}function Ka(e,t,n,r,o,i){var a=e.memoizedState;null===a?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailExpiration:0,tailMode:o,lastEffect:i}:(a.isBackwards=t,a.rendering=null,a.renderingStartTime=0,a.last=r,a.tail=n,a.tailExpiration=0,a.tailMode=o,a.lastEffect=i)}function $a(e,t,n){var r=t.pendingProps,o=r.revealOrder,i=r.tail;if(Ta(e,t,r.children,n),0!=(2&(r=Li.current)))r=1&r|2,t.effectTag|=64;else{if(null!==e&&0!=(64&e.effectTag))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&qa(e,n);else if(19===e.tag)qa(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(co(Li,r),0==(2&t.mode))t.memoizedState=null;else switch(o){case"forwards":for(n=t.child,o=null;null!==n;)null!==(e=n.alternate)&&null===Ai(e)&&(o=n),n=n.sibling;null===(n=o)?(o=t.child,t.child=null):(o=n.sibling,n.sibling=null),Ka(t,!1,o,n,i,t.lastEffect);break;case"backwards":for(n=null,o=t.child,t.child=null;null!==o;){if(null!==(e=o.alternate)&&null===Ai(e)){t.child=o;break}e=o.sibling,o.sibling=n,n=o,o=e}Ka(t,!0,n,null,i,t.lastEffect);break;case"together":Ka(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function Ja(e,t,n){null!==e&&(t.dependencies=e.dependencies);var r=t.expirationTime;if(0!==r&&as(r),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child)throw Error(a(153));if(null!==t.child){for(n=Ps(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Ps(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function Ga(e,t){switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function Ya(e,t,n){var r=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return mo(t.type)&&bo(),null;case 3:return Di(),so(po),so(fo),(n=t.stateNode).pendingContext&&(n.context=n.pendingContext,n.pendingContext=null),null!==e&&null!==e.child||!za(t)||(t.effectTag|=4),null;case 5:Ii(t),n=Ti(Oi.current);var i=t.type;if(null!==e&&null!=t.stateNode)Wa(e,t,i,r,n),e.ref!==t.ref&&(t.effectTag|=128);else{if(!r){if(null===t.stateNode)throw Error(a(166));return null}if(e=Ti(Mi.current),za(t)){r=t.stateNode,i=t.type;var l=t.memoizedProps;switch(r[En]=t,r[Sn]=l,i){case"iframe":case"object":case"embed":$t("load",r);break;case"video":case"audio":for(e=0;e<Ye.length;e++)$t(Ye[e],r);break;case"source":$t("error",r);break;case"img":case"image":case"link":$t("error",r),$t("load",r);break;case"form":$t("reset",r),$t("submit",r);break;case"details":$t("toggle",r);break;case"input":_e(r,l),$t("invalid",r),sn(n,"onChange");break;case"select":r._wrapperState={wasMultiple:!!l.multiple},$t("invalid",r),sn(n,"onChange");break;case"textarea":Te(r,l),$t("invalid",r),sn(n,"onChange")}for(var s in on(i,l),e=null,l)if(l.hasOwnProperty(s)){var c=l[s];"children"===s?"string"==typeof c?r.textContent!==c&&(e=["children",c]):"number"==typeof c&&r.textContent!==""+c&&(e=["children",""+c]):E.hasOwnProperty(s)&&null!=c&&sn(n,s)}switch(i){case"input":xe(r),Pe(r,l,!0);break;case"textarea":xe(r),De(r);break;case"select":case"option":break;default:"function"==typeof l.onClick&&(r.onclick=cn)}n=e,t.updateQueue=n,null!==n&&(t.effectTag|=4)}else{switch(s=9===n.nodeType?n:n.ownerDocument,e===ln&&(e=Le(i)),e===ln?"script"===i?((e=s.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=s.createElement(i,{is:r.is}):(e=s.createElement(i),"select"===i&&(s=e,r.multiple?s.multiple=!0:r.size&&(s.size=r.size))):e=s.createElementNS(e,i),e[En]=t,e[Sn]=r,Fa(e,t),t.stateNode=e,s=an(i,r),i){case"iframe":case"object":case"embed":$t("load",e),c=r;break;case"video":case"audio":for(c=0;c<Ye.length;c++)$t(Ye[c],e);c=r;break;case"source":$t("error",e),c=r;break;case"img":case"image":case"link":$t("error",e),$t("load",e),c=r;break;case"form":$t("reset",e),$t("submit",e),c=r;break;case"details":$t("toggle",e),c=r;break;case"input":_e(e,r),c=ke(e,r),$t("invalid",e),sn(n,"onChange");break;case"option":c=Me(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},c=o({},r,{value:void 0}),$t("invalid",e),sn(n,"onChange");break;case"textarea":Te(e,r),c=Oe(e,r),$t("invalid",e),sn(n,"onChange");break;default:c=r}on(i,c);var u=c;for(l in u)if(u.hasOwnProperty(l)){var d=u[l];"style"===l?nn(e,d):"dangerouslySetInnerHTML"===l?null!=(d=d?d.__html:void 0)&&Be(e,d):"children"===l?"string"==typeof d?("textarea"!==i||""!==d)&&Fe(e,d):"number"==typeof d&&Fe(e,""+d):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(E.hasOwnProperty(l)?null!=d&&sn(n,l):null!=d&&Z(e,l,d,s))}switch(i){case"input":xe(e),Pe(e,r,!1);break;case"textarea":xe(e),De(e);break;case"option":null!=r.value&&e.setAttribute("value",""+ve(r.value));break;case"select":e.multiple=!!r.multiple,null!=(n=r.value)?Ce(e,!!r.multiple,n,!1):null!=r.defaultValue&&Ce(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof c.onClick&&(e.onclick=cn)}bn(i,r)&&(t.effectTag|=4)}null!==t.ref&&(t.effectTag|=128)}return null;case 6:if(e&&null!=t.stateNode)Ua(0,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(a(166));n=Ti(Oi.current),Ti(Mi.current),za(t)?(n=t.stateNode,r=t.memoizedProps,n[En]=t,n.nodeValue!==r&&(t.effectTag|=4)):((n=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[En]=t,t.stateNode=n)}return null;case 13:return so(Li),r=t.memoizedState,0!=(64&t.effectTag)?(t.expirationTime=n,t):(n=null!==r,r=!1,null===e?void 0!==t.memoizedProps.fallback&&za(t):(r=null!==(i=e.memoizedState),n||null===i||null!==(i=e.child.sibling)&&(null!==(l=t.firstEffect)?(t.firstEffect=i,i.nextEffect=l):(t.firstEffect=t.lastEffect=i,i.nextEffect=null),i.effectTag=8)),n&&!r&&0!=(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&Li.current)?zl===xl&&(zl=wl):(zl!==xl&&zl!==wl||(zl=kl),0!==Nl&&null!==El&&(Ds(El,Pl),js(El,Nl)))),(n||r)&&(t.effectTag|=4),null);case 4:return Di(),null;case 10:return ti(t),null;case 17:return mo(t.type)&&bo(),null;case 19:if(so(Li),null===(r=t.memoizedState))return null;if(i=0!=(64&t.effectTag),null===(l=r.rendering)){if(i)Ga(r,!1);else if(zl!==xl||null!==e&&0!=(64&e.effectTag))for(l=t.child;null!==l;){if(null!==(e=Ai(l))){for(t.effectTag|=64,Ga(r,!1),null!==(i=e.updateQueue)&&(t.updateQueue=i,t.effectTag|=4),null===r.lastEffect&&(t.firstEffect=null),t.lastEffect=r.lastEffect,r=t.child;null!==r;)l=n,(i=r).effectTag&=2,i.nextEffect=null,i.firstEffect=null,i.lastEffect=null,null===(e=i.alternate)?(i.childExpirationTime=0,i.expirationTime=l,i.child=null,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null):(i.childExpirationTime=e.childExpirationTime,i.expirationTime=e.expirationTime,i.child=e.child,i.memoizedProps=e.memoizedProps,i.memoizedState=e.memoizedState,i.updateQueue=e.updateQueue,l=e.dependencies,i.dependencies=null===l?null:{expirationTime:l.expirationTime,firstContext:l.firstContext,responders:l.responders}),r=r.sibling;return co(Li,1&Li.current|2),t.child}l=l.sibling}}else{if(!i)if(null!==(e=Ai(l))){if(t.effectTag|=64,i=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.effectTag|=4),Ga(r,!0),null===r.tail&&"hidden"===r.tailMode&&!l.alternate)return null!==(t=t.lastEffect=r.lastEffect)&&(t.nextEffect=null),null}else 2*Fo()-r.renderingStartTime>r.tailExpiration&&1<n&&(t.effectTag|=64,i=!0,Ga(r,!1),t.expirationTime=t.childExpirationTime=n-1);r.isBackwards?(l.sibling=t.child,t.child=l):(null!==(n=r.last)?n.sibling=l:t.child=l,r.last=l)}return null!==r.tail?(0===r.tailExpiration&&(r.tailExpiration=Fo()+500),n=r.tail,r.rendering=n,r.tail=n.sibling,r.lastEffect=t.lastEffect,r.renderingStartTime=Fo(),n.sibling=null,t=Li.current,co(Li,i?1&t|2:1&t),n):null}throw Error(a(156,t.tag))}function Za(e){switch(e.tag){case 1:mo(e.type)&&bo();var t=e.effectTag;return 4096&t?(e.effectTag=-4097&t|64,e):null;case 3:if(Di(),so(po),so(fo),0!=(64&(t=e.effectTag)))throw Error(a(285));return e.effectTag=-4097&t|64,e;case 5:return Ii(e),null;case 13:return so(Li),4096&(t=e.effectTag)?(e.effectTag=-4097&t|64,e):null;case 19:return so(Li),null;case 4:return Di(),null;case 10:return ti(e),null;default:return null}}function Qa(e,t){return{value:e,source:t,stack:be(t)}}Fa=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Wa=function(e,t,n,r,i){var a=e.memoizedProps;if(a!==r){var l,s,c=t.stateNode;switch(Ti(Mi.current),e=null,n){case"input":a=ke(c,a),r=ke(c,r),e=[];break;case"option":a=Me(c,a),r=Me(c,r),e=[];break;case"select":a=o({},a,{value:void 0}),r=o({},r,{value:void 0}),e=[];break;case"textarea":a=Oe(c,a),r=Oe(c,r),e=[];break;default:"function"!=typeof a.onClick&&"function"==typeof r.onClick&&(c.onclick=cn)}for(l in on(n,r),n=null,a)if(!r.hasOwnProperty(l)&&a.hasOwnProperty(l)&&null!=a[l])if("style"===l)for(s in c=a[l])c.hasOwnProperty(s)&&(n||(n={}),n[s]="");else"dangerouslySetInnerHTML"!==l&&"children"!==l&&"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(E.hasOwnProperty(l)?e||(e=[]):(e=e||[]).push(l,null));for(l in r){var u=r[l];if(c=null!=a?a[l]:void 0,r.hasOwnProperty(l)&&u!==c&&(null!=u||null!=c))if("style"===l)if(c){for(s in c)!c.hasOwnProperty(s)||u&&u.hasOwnProperty(s)||(n||(n={}),n[s]="");for(s in u)u.hasOwnProperty(s)&&c[s]!==u[s]&&(n||(n={}),n[s]=u[s])}else n||(e||(e=[]),e.push(l,n)),n=u;else"dangerouslySetInnerHTML"===l?(u=u?u.__html:void 0,c=c?c.__html:void 0,null!=u&&c!==u&&(e=e||[]).push(l,u)):"children"===l?c===u||"string"!=typeof u&&"number"!=typeof u||(e=e||[]).push(l,""+u):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&(E.hasOwnProperty(l)?(null!=u&&sn(i,l),e||c===u||(e=[])):(e=e||[]).push(l,u))}n&&(e=e||[]).push("style",n),i=e,(t.updateQueue=i)&&(t.effectTag|=4)}},Ua=function(e,t,n,r){n!==r&&(t.effectTag|=4)};var Xa="function"==typeof WeakSet?WeakSet:Set;function el(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=be(n)),null!==n&&me(n.type),t=t.value,null!==e&&1===e.tag&&me(e.type);try{console.error(t)}catch(e){setTimeout((function(){throw e}))}}function tl(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){vs(e,t)}else t.current=null}function nl(e,t){switch(t.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&t.effectTag&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:Go(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:case 5:case 6:case 4:case 17:return}throw Error(a(163))}function rl(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.destroy;n.destroy=void 0,void 0!==r&&r()}n=n.next}while(n!==t)}}function ol(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function il(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:return void ol(3,n);case 1:if(e=n.stateNode,4&n.effectTag)if(null===t)e.componentDidMount();else{var r=n.elementType===n.type?t.memoizedProps:Go(n.type,t.memoizedProps);e.componentDidUpdate(r,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate)}return void(null!==(t=n.updateQueue)&&fi(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:e=n.child.stateNode;break;case 1:e=n.child.stateNode}fi(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.effectTag&&bn(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&Lt(n)))));case 19:case 17:case 20:case 21:return}throw Error(a(163))}function al(e,t,n){switch("function"==typeof ks&&ks(t),t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var r=e.next;Ho(97<n?97:n,(function(){var e=r;do{var n=e.destroy;if(void 0!==n){var o=t;try{n()}catch(e){vs(o,e)}}e=e.next}while(e!==r)}))}break;case 1:tl(t),"function"==typeof(n=t.stateNode).componentWillUnmount&&function(e,t){try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){vs(e,t)}}(t,n);break;case 5:tl(t);break;case 4:ul(e,t,n)}}function ll(e){var t=e.alternate;e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null,e.dependencies=null,e.alternate=null,e.firstEffect=null,e.lastEffect=null,e.pendingProps=null,e.memoizedProps=null,e.stateNode=null,null!==t&&ll(t)}function sl(e){return 5===e.tag||3===e.tag||4===e.tag}function cl(e){e:{for(var t=e.return;null!==t;){if(sl(t)){var n=t;break e}t=t.return}throw Error(a(160))}switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(a(161))}16&n.effectTag&&(Fe(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||sl(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}r?function e(t,n,r){var o=t.tag,i=5===o||6===o;if(i)t=i?t.stateNode:t.stateNode.instance,n?8===r.nodeType?r.parentNode.insertBefore(t,n):r.insertBefore(t,n):(8===r.nodeType?(n=r.parentNode).insertBefore(t,r):(n=r).appendChild(t),null!==(r=r._reactRootContainer)&&void 0!==r||null!==n.onclick||(n.onclick=cn));else if(4!==o&&null!==(t=t.child))for(e(t,n,r),t=t.sibling;null!==t;)e(t,n,r),t=t.sibling}(e,n,t):function e(t,n,r){var o=t.tag,i=5===o||6===o;if(i)t=i?t.stateNode:t.stateNode.instance,n?r.insertBefore(t,n):r.appendChild(t);else if(4!==o&&null!==(t=t.child))for(e(t,n,r),t=t.sibling;null!==t;)e(t,n,r),t=t.sibling}(e,n,t)}function ul(e,t,n){for(var r,o,i=t,l=!1;;){if(!l){l=i.return;e:for(;;){if(null===l)throw Error(a(160));switch(r=l.stateNode,l.tag){case 5:o=!1;break e;case 3:case 4:r=r.containerInfo,o=!0;break e}l=l.return}l=!0}if(5===i.tag||6===i.tag){e:for(var s=e,c=i,u=n,d=c;;)if(al(s,d,u),null!==d.child&&4!==d.tag)d.child.return=d,d=d.child;else{if(d===c)break e;for(;null===d.sibling;){if(null===d.return||d.return===c)break e;d=d.return}d.sibling.return=d.return,d=d.sibling}o?(s=r,c=i.stateNode,8===s.nodeType?s.parentNode.removeChild(c):s.removeChild(c)):r.removeChild(i.stateNode)}else if(4===i.tag){if(null!==i.child){r=i.stateNode.containerInfo,o=!0,i.child.return=i,i=i.child;continue}}else if(al(e,i,n),null!==i.child){i.child.return=i,i=i.child;continue}if(i===t)break;for(;null===i.sibling;){if(null===i.return||i.return===t)return;4===(i=i.return).tag&&(l=!1)}i.sibling.return=i.return,i=i.sibling}}function dl(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:return void rl(3,t);case 1:return;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps,o=null!==e?e.memoizedProps:r;e=t.type;var i=t.updateQueue;if(t.updateQueue=null,null!==i){for(n[Sn]=r,"input"===e&&"radio"===r.type&&null!=r.name&&Ee(n,r),an(e,o),t=an(e,r),o=0;o<i.length;o+=2){var l=i[o],s=i[o+1];"style"===l?nn(n,s):"dangerouslySetInnerHTML"===l?Be(n,s):"children"===l?Fe(n,s):Z(n,l,s,t)}switch(e){case"input":Se(n,r);break;case"textarea":Ne(n,r);break;case"select":t=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(e=r.value)?Ce(n,!!r.multiple,e,!1):t!==!!r.multiple&&(null!=r.defaultValue?Ce(n,!!r.multiple,r.defaultValue,!0):Ce(n,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(a(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((t=t.stateNode).hydrate&&(t.hydrate=!1,Lt(t.containerInfo)));case 12:return;case 13:if(n=t,null===t.memoizedState?r=!1:(r=!0,n=t.child,jl=Fo()),null!==n)e:for(e=n;;){if(5===e.tag)i=e.stateNode,r?"function"==typeof(i=i.style).setProperty?i.setProperty("display","none","important"):i.display="none":(i=e.stateNode,o=null!=(o=e.memoizedProps.style)&&o.hasOwnProperty("display")?o.display:null,i.style.display=tn("display",o));else if(6===e.tag)e.stateNode.nodeValue=r?"":e.memoizedProps;else{if(13===e.tag&&null!==e.memoizedState&&null===e.memoizedState.dehydrated){(i=e.child.sibling).return=e,e=i;continue}if(null!==e.child){e.child.return=e,e=e.child;continue}}if(e===n)break;for(;null===e.sibling;){if(null===e.return||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}return void fl(t);case 19:return void fl(t);case 17:return}throw Error(a(163))}function fl(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Xa),t.forEach((function(t){var r=xs.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}var pl="function"==typeof WeakMap?WeakMap:Map;function hl(e,t,n){(n=si(n,null)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Ll||(Ll=!0,Al=r),el(e,t)},n}function gl(e,t,n){(n=si(n,null)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var o=t.value;n.payload=function(){return el(e,t),r(o)}}var i=e.stateNode;return null!==i&&"function"==typeof i.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Rl?Rl=new Set([this]):Rl.add(this),el(e,t));var n=t.stack;this.componentDidCatch(t.value,{componentStack:null!==n?n:""})}),n}var ml,bl=Math.ceil,vl=Y.ReactCurrentDispatcher,yl=Y.ReactCurrentOwner,xl=0,wl=3,kl=4,_l=0,El=null,Sl=null,Pl=0,zl=xl,Ml=null,Cl=1073741823,Ol=1073741823,Tl=null,Nl=0,Dl=!1,jl=0,Il=null,Ll=!1,Al=null,Rl=null,Bl=!1,Fl=null,Wl=90,Ul=null,Hl=0,Vl=null,ql=0;function Kl(){return 0!=(48&_l)?1073741821-(Fo()/10|0):0!==ql?ql:ql=1073741821-(Fo()/10|0)}function $l(e,t,n){if(0==(2&(t=t.mode)))return 1073741823;var r=Wo();if(0==(4&t))return 99===r?1073741823:1073741822;if(0!=(16&_l))return Pl;if(null!==n)e=Jo(e,0|n.timeoutMs||5e3,250);else switch(r){case 99:e=1073741823;break;case 98:e=Jo(e,150,100);break;case 97:case 96:e=Jo(e,5e3,250);break;case 95:e=2;break;default:throw Error(a(326))}return null!==El&&e===Pl&&--e,e}function Jl(e,t){if(50<Hl)throw Hl=0,Vl=null,Error(a(185));if(null!==(e=Gl(e,t))){var n=Wo();1073741823===t?0!=(8&_l)&&0==(48&_l)?Xl(e):(Zl(e),0===_l&&Ko()):Zl(e),0==(4&_l)||98!==n&&99!==n||(null===Ul?Ul=new Map([[e,t]]):(void 0===(n=Ul.get(e))||n>t)&&Ul.set(e,t))}}function Gl(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var r=e.return,o=null;if(null===r&&3===e.tag)o=e.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<t&&(r.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===r.return&&3===r.tag){o=r.stateNode;break}r=r.return}return null!==o&&(El===o&&(as(t),zl===kl&&Ds(o,Pl)),js(o,t)),o}function Yl(e){var t=e.lastExpiredTime;if(0!==t)return t;if(!Ns(e,t=e.firstPendingTime))return t;var n=e.lastPingedTime;return 2>=(e=n>(e=e.nextKnownPendingLevel)?n:e)&&t!==e?0:e}function Zl(e){if(0!==e.lastExpiredTime)e.callbackExpirationTime=1073741823,e.callbackPriority=99,e.callbackNode=qo(Xl.bind(null,e));else{var t=Yl(e),n=e.callbackNode;if(0===t)null!==n&&(e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90);else{var r=Kl();if(1073741823===t?r=99:1===t||2===t?r=95:r=0>=(r=10*(1073741821-t)-10*(1073741821-r))?99:250>=r?98:5250>=r?97:95,null!==n){var o=e.callbackPriority;if(e.callbackExpirationTime===t&&o>=r)return;n!==Do&&Eo(n)}e.callbackExpirationTime=t,e.callbackPriority=r,t=1073741823===t?qo(Xl.bind(null,e)):Vo(r,Ql.bind(null,e),{timeout:10*(1073741821-t)-Fo()}),e.callbackNode=t}}}function Ql(e,t){if(ql=0,t)return Is(e,t=Kl()),Zl(e),null;var n=Yl(e);if(0!==n){if(t=e.callbackNode,0!=(48&_l))throw Error(a(327));if(gs(),e===El&&n===Pl||ns(e,n),null!==Sl){var r=_l;_l|=16;for(var o=os();;)try{ss();break}catch(t){rs(e,t)}if(ei(),_l=r,vl.current=o,1===zl)throw t=Ml,ns(e,n),Ds(e,n),Zl(e),t;if(null===Sl)switch(o=e.finishedWork=e.current.alternate,e.finishedExpirationTime=n,r=zl,El=null,r){case xl:case 1:throw Error(a(345));case 2:Is(e,2<n?2:n);break;case wl:if(Ds(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=ds(o)),1073741823===Cl&&10<(o=jl+500-Fo())){if(Dl){var i=e.lastPingedTime;if(0===i||i>=n){e.lastPingedTime=n,ns(e,n);break}}if(0!==(i=Yl(e))&&i!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}e.timeoutHandle=yn(fs.bind(null,e),o);break}fs(e);break;case kl:if(Ds(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=ds(o)),Dl&&(0===(o=e.lastPingedTime)||o>=n)){e.lastPingedTime=n,ns(e,n);break}if(0!==(o=Yl(e))&&o!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}if(1073741823!==Ol?r=10*(1073741821-Ol)-Fo():1073741823===Cl?r=0:(r=10*(1073741821-Cl)-5e3,0>(r=(o=Fo())-r)&&(r=0),(n=10*(1073741821-n)-o)<(r=(120>r?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*bl(r/1960))-r)&&(r=n)),10<r){e.timeoutHandle=yn(fs.bind(null,e),r);break}fs(e);break;case 5:if(1073741823!==Cl&&null!==Tl){i=Cl;var l=Tl;if(0>=(r=0|l.busyMinDurationMs)?r=0:(o=0|l.busyDelayMs,r=(i=Fo()-(10*(1073741821-i)-(0|l.timeoutMs||5e3)))<=o?0:o+r-i),10<r){Ds(e,n),e.timeoutHandle=yn(fs.bind(null,e),r);break}}fs(e);break;default:throw Error(a(329))}if(Zl(e),e.callbackNode===t)return Ql.bind(null,e)}}return null}function Xl(e){var t=e.lastExpiredTime;if(t=0!==t?t:1073741823,0!=(48&_l))throw Error(a(327));if(gs(),e===El&&t===Pl||ns(e,t),null!==Sl){var n=_l;_l|=16;for(var r=os();;)try{ls();break}catch(t){rs(e,t)}if(ei(),_l=n,vl.current=r,1===zl)throw n=Ml,ns(e,t),Ds(e,t),Zl(e),n;if(null!==Sl)throw Error(a(261));e.finishedWork=e.current.alternate,e.finishedExpirationTime=t,El=null,fs(e),Zl(e)}return null}function es(e,t){var n=_l;_l|=1;try{return e(t)}finally{0===(_l=n)&&Ko()}}function ts(e,t){var n=_l;_l&=-2,_l|=8;try{return e(t)}finally{0===(_l=n)&&Ko()}}function ns(e,t){e.finishedWork=null,e.finishedExpirationTime=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,xn(n)),null!==Sl)for(n=Sl.return;null!==n;){var r=n;switch(r.tag){case 1:null!=(r=r.type.childContextTypes)&&bo();break;case 3:Di(),so(po),so(fo);break;case 5:Ii(r);break;case 4:Di();break;case 13:case 19:so(Li);break;case 10:ti(r)}n=n.return}El=e,Sl=Ps(e.current,null),Pl=t,zl=xl,Ml=null,Ol=Cl=1073741823,Tl=null,Nl=0,Dl=!1}function rs(e,t){for(;;){try{if(ei(),Bi.current=ma,qi)for(var n=Ui.memoizedState;null!==n;){var r=n.queue;null!==r&&(r.pending=null),n=n.next}if(Wi=0,Vi=Hi=Ui=null,qi=!1,null===Sl||null===Sl.return)return zl=1,Ml=t,Sl=null;e:{var o=e,i=Sl.return,a=Sl,l=t;if(t=Pl,a.effectTag|=2048,a.firstEffect=a.lastEffect=null,null!==l&&"object"==typeof l&&"function"==typeof l.then){var s=l;if(0==(2&a.mode)){var c=a.alternate;c?(a.updateQueue=c.updateQueue,a.memoizedState=c.memoizedState,a.expirationTime=c.expirationTime):(a.updateQueue=null,a.memoizedState=null)}var u=0!=(1&Li.current),d=i;do{var f;if(f=13===d.tag){var p=d.memoizedState;if(null!==p)f=null!==p.dehydrated;else{var h=d.memoizedProps;f=void 0!==h.fallback&&(!0!==h.unstable_avoidThisFallback||!u)}}if(f){var g=d.updateQueue;if(null===g){var m=new Set;m.add(s),d.updateQueue=m}else g.add(s);if(0==(2&d.mode)){if(d.effectTag|=64,a.effectTag&=-2981,1===a.tag)if(null===a.alternate)a.tag=17;else{var b=si(1073741823,null);b.tag=2,ci(a,b)}a.expirationTime=1073741823;break e}l=void 0,a=t;var v=o.pingCache;if(null===v?(v=o.pingCache=new pl,l=new Set,v.set(s,l)):void 0===(l=v.get(s))&&(l=new Set,v.set(s,l)),!l.has(a)){l.add(a);var y=ys.bind(null,o,s,a);s.then(y,y)}d.effectTag|=4096,d.expirationTime=t;break e}d=d.return}while(null!==d);l=Error((me(a.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+be(a))}5!==zl&&(zl=2),l=Qa(l,a),d=i;do{switch(d.tag){case 3:s=l,d.effectTag|=4096,d.expirationTime=t,ui(d,hl(d,s,t));break e;case 1:s=l;var x=d.type,w=d.stateNode;if(0==(64&d.effectTag)&&("function"==typeof x.getDerivedStateFromError||null!==w&&"function"==typeof w.componentDidCatch&&(null===Rl||!Rl.has(w)))){d.effectTag|=4096,d.expirationTime=t,ui(d,gl(d,s,t));break e}}d=d.return}while(null!==d)}Sl=us(Sl)}catch(e){t=e;continue}break}}function os(){var e=vl.current;return vl.current=ma,null===e?ma:e}function is(e,t){e<Cl&&2<e&&(Cl=e),null!==t&&e<Ol&&2<e&&(Ol=e,Tl=t)}function as(e){e>Nl&&(Nl=e)}function ls(){for(;null!==Sl;)Sl=cs(Sl)}function ss(){for(;null!==Sl&&!jo();)Sl=cs(Sl)}function cs(e){var t=ml(e.alternate,e,Pl);return e.memoizedProps=e.pendingProps,null===t&&(t=us(e)),yl.current=null,t}function us(e){Sl=e;do{var t=Sl.alternate;if(e=Sl.return,0==(2048&Sl.effectTag)){if(t=Ya(t,Sl,Pl),1===Pl||1!==Sl.childExpirationTime){for(var n=0,r=Sl.child;null!==r;){var o=r.expirationTime,i=r.childExpirationTime;o>n&&(n=o),i>n&&(n=i),r=r.sibling}Sl.childExpirationTime=n}if(null!==t)return t;null!==e&&0==(2048&e.effectTag)&&(null===e.firstEffect&&(e.firstEffect=Sl.firstEffect),null!==Sl.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=Sl.firstEffect),e.lastEffect=Sl.lastEffect),1<Sl.effectTag&&(null!==e.lastEffect?e.lastEffect.nextEffect=Sl:e.firstEffect=Sl,e.lastEffect=Sl))}else{if(null!==(t=Za(Sl)))return t.effectTag&=2047,t;null!==e&&(e.firstEffect=e.lastEffect=null,e.effectTag|=2048)}if(null!==(t=Sl.sibling))return t;Sl=e}while(null!==Sl);return zl===xl&&(zl=5),null}function ds(e){var t=e.expirationTime;return t>(e=e.childExpirationTime)?t:e}function fs(e){var t=Wo();return Ho(99,ps.bind(null,e,t)),null}function ps(e,t){do{gs()}while(null!==Fl);if(0!=(48&_l))throw Error(a(327));var n=e.finishedWork,r=e.finishedExpirationTime;if(null===n)return null;if(e.finishedWork=null,e.finishedExpirationTime=0,n===e.current)throw Error(a(177));e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90,e.nextKnownPendingLevel=0;var o=ds(n);if(e.firstPendingTime=o,r<=e.lastSuspendedTime?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:r<=e.firstSuspendedTime&&(e.firstSuspendedTime=r-1),r<=e.lastPingedTime&&(e.lastPingedTime=0),r<=e.lastExpiredTime&&(e.lastExpiredTime=0),e===El&&(Sl=El=null,Pl=0),1<n.effectTag?null!==n.lastEffect?(n.lastEffect.nextEffect=n,o=n.firstEffect):o=n:o=n.firstEffect,null!==o){var i=_l;_l|=32,yl.current=null,gn=Kt;var l=pn();if(hn(l)){if("selectionStart"in l)var s={start:l.selectionStart,end:l.selectionEnd};else e:{var c=(s=(s=l.ownerDocument)&&s.defaultView||window).getSelection&&s.getSelection();if(c&&0!==c.rangeCount){s=c.anchorNode;var u=c.anchorOffset,d=c.focusNode;c=c.focusOffset;try{s.nodeType,d.nodeType}catch(e){s=null;break e}var f=0,p=-1,h=-1,g=0,m=0,b=l,v=null;t:for(;;){for(var y;b!==s||0!==u&&3!==b.nodeType||(p=f+u),b!==d||0!==c&&3!==b.nodeType||(h=f+c),3===b.nodeType&&(f+=b.nodeValue.length),null!==(y=b.firstChild);)v=b,b=y;for(;;){if(b===l)break t;if(v===s&&++g===u&&(p=f),v===d&&++m===c&&(h=f),null!==(y=b.nextSibling))break;v=(b=v).parentNode}b=y}s=-1===p||-1===h?null:{start:p,end:h}}else s=null}s=s||{start:0,end:0}}else s=null;mn={activeElementDetached:null,focusedElem:l,selectionRange:s},Kt=!1,Il=o;do{try{hs()}catch(e){if(null===Il)throw Error(a(330));vs(Il,e),Il=Il.nextEffect}}while(null!==Il);Il=o;do{try{for(l=e,s=t;null!==Il;){var x=Il.effectTag;if(16&x&&Fe(Il.stateNode,""),128&x){var w=Il.alternate;if(null!==w){var k=w.ref;null!==k&&("function"==typeof k?k(null):k.current=null)}}switch(1038&x){case 2:cl(Il),Il.effectTag&=-3;break;case 6:cl(Il),Il.effectTag&=-3,dl(Il.alternate,Il);break;case 1024:Il.effectTag&=-1025;break;case 1028:Il.effectTag&=-1025,dl(Il.alternate,Il);break;case 4:dl(Il.alternate,Il);break;case 8:ul(l,u=Il,s),ll(u)}Il=Il.nextEffect}}catch(e){if(null===Il)throw Error(a(330));vs(Il,e),Il=Il.nextEffect}}while(null!==Il);if(k=mn,w=pn(),x=k.focusedElem,s=k.selectionRange,w!==x&&x&&x.ownerDocument&&function e(t,n){return!(!t||!n)&&(t===n||(!t||3!==t.nodeType)&&(n&&3===n.nodeType?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}(x.ownerDocument.documentElement,x)){null!==s&&hn(x)&&(w=s.start,void 0===(k=s.end)&&(k=w),"selectionStart"in x?(x.selectionStart=w,x.selectionEnd=Math.min(k,x.value.length)):(k=(w=x.ownerDocument||document)&&w.defaultView||window).getSelection&&(k=k.getSelection(),u=x.textContent.length,l=Math.min(s.start,u),s=void 0===s.end?l:Math.min(s.end,u),!k.extend&&l>s&&(u=s,s=l,l=u),u=fn(x,l),d=fn(x,s),u&&d&&(1!==k.rangeCount||k.anchorNode!==u.node||k.anchorOffset!==u.offset||k.focusNode!==d.node||k.focusOffset!==d.offset)&&((w=w.createRange()).setStart(u.node,u.offset),k.removeAllRanges(),l>s?(k.addRange(w),k.extend(d.node,d.offset)):(w.setEnd(d.node,d.offset),k.addRange(w))))),w=[];for(k=x;k=k.parentNode;)1===k.nodeType&&w.push({element:k,left:k.scrollLeft,top:k.scrollTop});for("function"==typeof x.focus&&x.focus(),x=0;x<w.length;x++)(k=w[x]).element.scrollLeft=k.left,k.element.scrollTop=k.top}Kt=!!gn,mn=gn=null,e.current=n,Il=o;do{try{for(x=e;null!==Il;){var _=Il.effectTag;if(36&_&&il(x,Il.alternate,Il),128&_){w=void 0;var E=Il.ref;if(null!==E){var S=Il.stateNode;switch(Il.tag){case 5:w=S;break;default:w=S}"function"==typeof E?E(w):E.current=w}}Il=Il.nextEffect}}catch(e){if(null===Il)throw Error(a(330));vs(Il,e),Il=Il.nextEffect}}while(null!==Il);Il=null,Io(),_l=i}else e.current=n;if(Bl)Bl=!1,Fl=e,Wl=t;else for(Il=o;null!==Il;)t=Il.nextEffect,Il.nextEffect=null,Il=t;if(0===(t=e.firstPendingTime)&&(Rl=null),1073741823===t?e===Vl?Hl++:(Hl=0,Vl=e):Hl=0,"function"==typeof ws&&ws(n.stateNode,r),Zl(e),Ll)throw Ll=!1,e=Al,Al=null,e;return 0!=(8&_l)||Ko(),null}function hs(){for(;null!==Il;){var e=Il.effectTag;0!=(256&e)&&nl(Il.alternate,Il),0==(512&e)||Bl||(Bl=!0,Vo(97,(function(){return gs(),null}))),Il=Il.nextEffect}}function gs(){if(90!==Wl){var e=97<Wl?97:Wl;return Wl=90,Ho(e,ms)}}function ms(){if(null===Fl)return!1;var e=Fl;if(Fl=null,0!=(48&_l))throw Error(a(331));var t=_l;for(_l|=32,e=e.current.firstEffect;null!==e;){try{var n=e;if(0!=(512&n.effectTag))switch(n.tag){case 0:case 11:case 15:case 22:rl(5,n),ol(5,n)}}catch(t){if(null===e)throw Error(a(330));vs(e,t)}n=e.nextEffect,e.nextEffect=null,e=n}return _l=t,Ko(),!0}function bs(e,t,n){ci(e,t=hl(e,t=Qa(n,t),1073741823)),null!==(e=Gl(e,1073741823))&&Zl(e)}function vs(e,t){if(3===e.tag)bs(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){bs(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Rl||!Rl.has(r))){ci(n,e=gl(n,e=Qa(t,e),1073741823)),null!==(n=Gl(n,1073741823))&&Zl(n);break}}n=n.return}}function ys(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),El===e&&Pl===n?zl===kl||zl===wl&&1073741823===Cl&&Fo()-jl<500?ns(e,Pl):Dl=!0:Ns(e,n)&&(0!==(t=e.lastPingedTime)&&t<n||(e.lastPingedTime=n,Zl(e)))}function xs(e,t){var n=e.stateNode;null!==n&&n.delete(t),0===(t=0)&&(t=$l(t=Kl(),e,null)),null!==(e=Gl(e,t))&&Zl(e)}ml=function(e,t,n){var r=t.expirationTime;if(null!==e){var o=t.pendingProps;if(e.memoizedProps!==o||po.current)Oa=!0;else{if(r<n){switch(Oa=!1,t.tag){case 3:Ba(t),Ma();break;case 5:if(ji(t),4&t.mode&&1!==n&&o.hidden)return t.expirationTime=t.childExpirationTime=1,null;break;case 1:mo(t.type)&&xo(t);break;case 4:Ni(t,t.stateNode.containerInfo);break;case 10:r=t.memoizedProps.value,o=t.type._context,co(Yo,o._currentValue),o._currentValue=r;break;case 13:if(null!==t.memoizedState)return 0!==(r=t.child.childExpirationTime)&&r>=n?Va(e,t,n):(co(Li,1&Li.current),null!==(t=Ja(e,t,n))?t.sibling:null);co(Li,1&Li.current);break;case 19:if(r=t.childExpirationTime>=n,0!=(64&e.effectTag)){if(r)return $a(e,t,n);t.effectTag|=64}if(null!==(o=t.memoizedState)&&(o.rendering=null,o.tail=null),co(Li,Li.current),!r)return null}return Ja(e,t,n)}Oa=!1}}else Oa=!1;switch(t.expirationTime=0,t.tag){case 2:if(r=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,o=go(t,fo.current),ri(t,n),o=Ji(null,t,r,e,o,n),t.effectTag|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,mo(r)){var i=!0;xo(t)}else i=!1;t.memoizedState=null!==o.state&&void 0!==o.state?o.state:null,ai(t);var l=r.getDerivedStateFromProps;"function"==typeof l&&gi(t,r,l,e),o.updater=mi,t.stateNode=o,o._reactInternalFiber=t,xi(t,r,e,n),t=Ra(null,t,r,!0,i,n)}else t.tag=0,Ta(null,t,o,n),t=t.child;return t;case 16:e:{if(o=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,function(e){if(-1===e._status){e._status=0;var t=e._ctor;t=t(),e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}}(o),1!==o._status)throw o._result;switch(o=o._result,t.type=o,i=t.tag=function(e){if("function"==typeof e)return Ss(e)?1:0;if(null!=e){if((e=e.$$typeof)===se)return 11;if(e===de)return 14}return 2}(o),e=Go(o,e),i){case 0:t=La(null,t,o,e,n);break e;case 1:t=Aa(null,t,o,e,n);break e;case 11:t=Na(null,t,o,e,n);break e;case 14:t=Da(null,t,o,Go(o.type,e),r,n);break e}throw Error(a(306,o,""))}return t;case 0:return r=t.type,o=t.pendingProps,La(e,t,r,o=t.elementType===r?o:Go(r,o),n);case 1:return r=t.type,o=t.pendingProps,Aa(e,t,r,o=t.elementType===r?o:Go(r,o),n);case 3:if(Ba(t),r=t.updateQueue,null===e||null===r)throw Error(a(282));if(r=t.pendingProps,o=null!==(o=t.memoizedState)?o.element:null,li(e,t),di(t,r,null,n),(r=t.memoizedState.element)===o)Ma(),t=Ja(e,t,n);else{if((o=t.stateNode.hydrate)&&(wa=wn(t.stateNode.containerInfo.firstChild),xa=t,o=ka=!0),o)for(n=Pi(t,null,r,n),t.child=n;n;)n.effectTag=-3&n.effectTag|1024,n=n.sibling;else Ta(e,t,r,n),Ma();t=t.child}return t;case 5:return ji(t),null===e&&Sa(t),r=t.type,o=t.pendingProps,i=null!==e?e.memoizedProps:null,l=o.children,vn(r,o)?l=null:null!==i&&vn(r,i)&&(t.effectTag|=16),Ia(e,t),4&t.mode&&1!==n&&o.hidden?(t.expirationTime=t.childExpirationTime=1,t=null):(Ta(e,t,l,n),t=t.child),t;case 6:return null===e&&Sa(t),null;case 13:return Va(e,t,n);case 4:return Ni(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=Si(t,null,r,n):Ta(e,t,r,n),t.child;case 11:return r=t.type,o=t.pendingProps,Na(e,t,r,o=t.elementType===r?o:Go(r,o),n);case 7:return Ta(e,t,t.pendingProps,n),t.child;case 8:case 12:return Ta(e,t,t.pendingProps.children,n),t.child;case 10:e:{r=t.type._context,o=t.pendingProps,l=t.memoizedProps,i=o.value;var s=t.type._context;if(co(Yo,s._currentValue),s._currentValue=i,null!==l)if(s=l.value,0===(i=Ar(s,i)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(s,i):1073741823))){if(l.children===o.children&&!po.current){t=Ja(e,t,n);break e}}else for(null!==(s=t.child)&&(s.return=t);null!==s;){var c=s.dependencies;if(null!==c){l=s.child;for(var u=c.firstContext;null!==u;){if(u.context===r&&0!=(u.observedBits&i)){1===s.tag&&((u=si(n,null)).tag=2,ci(s,u)),s.expirationTime<n&&(s.expirationTime=n),null!==(u=s.alternate)&&u.expirationTime<n&&(u.expirationTime=n),ni(s.return,n),c.expirationTime<n&&(c.expirationTime=n);break}u=u.next}}else l=10===s.tag&&s.type===t.type?null:s.child;if(null!==l)l.return=s;else for(l=s;null!==l;){if(l===t){l=null;break}if(null!==(s=l.sibling)){s.return=l.return,l=s;break}l=l.return}s=l}Ta(e,t,o.children,n),t=t.child}return t;case 9:return o=t.type,r=(i=t.pendingProps).children,ri(t,n),r=r(o=oi(o,i.unstable_observedBits)),t.effectTag|=1,Ta(e,t,r,n),t.child;case 14:return i=Go(o=t.type,t.pendingProps),Da(e,t,o,i=Go(o.type,i),r,n);case 15:return ja(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,o=t.pendingProps,o=t.elementType===r?o:Go(r,o),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,mo(r)?(e=!0,xo(t)):e=!1,ri(t,n),vi(t,r,o),xi(t,r,o,n),Ra(null,t,r,!0,e,n);case 19:return $a(e,t,n)}throw Error(a(156,t.tag))};var ws=null,ks=null;function _s(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function Es(e,t,n,r){return new _s(e,t,n,r)}function Ss(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Ps(e,t){var n=e.alternate;return null===n?((n=Es(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{expirationTime:t.expirationTime,firstContext:t.firstContext,responders:t.responders},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function zs(e,t,n,r,o,i){var l=2;if(r=e,"function"==typeof e)Ss(e)&&(l=1);else if("string"==typeof e)l=5;else e:switch(e){case ne:return Ms(n.children,o,i,t);case le:l=8,o|=7;break;case re:l=8,o|=1;break;case oe:return(e=Es(12,n,t,8|o)).elementType=oe,e.type=oe,e.expirationTime=i,e;case ce:return(e=Es(13,n,t,o)).type=ce,e.elementType=ce,e.expirationTime=i,e;case ue:return(e=Es(19,n,t,o)).elementType=ue,e.expirationTime=i,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case ie:l=10;break e;case ae:l=9;break e;case se:l=11;break e;case de:l=14;break e;case fe:l=16,r=null;break e;case pe:l=22;break e}throw Error(a(130,null==e?e:typeof e,""))}return(t=Es(l,n,t,o)).elementType=e,t.type=r,t.expirationTime=i,t}function Ms(e,t,n,r){return(e=Es(7,e,r,t)).expirationTime=n,e}function Cs(e,t,n){return(e=Es(6,e,null,t)).expirationTime=n,e}function Os(e,t,n){return(t=Es(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Ts(e,t,n){this.tag=t,this.current=null,this.containerInfo=e,this.pingCache=this.pendingChildren=null,this.finishedExpirationTime=0,this.finishedWork=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=90,this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}function Ns(e,t){var n=e.firstSuspendedTime;return e=e.lastSuspendedTime,0!==n&&n>=t&&e<=t}function Ds(e,t){var n=e.firstSuspendedTime,r=e.lastSuspendedTime;n<t&&(e.firstSuspendedTime=t),(r>t||0===n)&&(e.lastSuspendedTime=t),t<=e.lastPingedTime&&(e.lastPingedTime=0),t<=e.lastExpiredTime&&(e.lastExpiredTime=0)}function js(e,t){t>e.firstPendingTime&&(e.firstPendingTime=t);var n=e.firstSuspendedTime;0!==n&&(t>=n?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:t>=e.lastSuspendedTime&&(e.lastSuspendedTime=t+1),t>e.nextKnownPendingLevel&&(e.nextKnownPendingLevel=t))}function Is(e,t){var n=e.lastExpiredTime;(0===n||n>t)&&(e.lastExpiredTime=t)}function Ls(e,t,n,r){var o=t.current,i=Kl(),l=pi.suspense;i=$l(i,o,l);e:if(n){t:{if(Xe(n=n._reactInternalFiber)!==n||1!==n.tag)throw Error(a(170));var s=n;do{switch(s.tag){case 3:s=s.stateNode.context;break t;case 1:if(mo(s.type)){s=s.stateNode.__reactInternalMemoizedMergedChildContext;break t}}s=s.return}while(null!==s);throw Error(a(171))}if(1===n.tag){var c=n.type;if(mo(c)){n=yo(n,c,s);break e}}n=s}else n=uo;return null===t.context?t.context=n:t.pendingContext=n,(t=si(i,l)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),ci(o,t),Jl(o,i),i}function As(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Rs(e,t){null!==(e=e.memoizedState)&&null!==e.dehydrated&&e.retryTime<t&&(e.retryTime=t)}function Bs(e,t){Rs(e,t),(e=e.alternate)&&Rs(e,t)}function Fs(e,t,n){var r=new Ts(e,t,n=null!=n&&!0===n.hydrate),o=Es(3,null,null,2===t?7:1===t?3:0);r.current=o,o.stateNode=r,ai(o),e[Pn]=r.current,n&&0!==t&&function(e,t){var n=Qe(t);Pt.forEach((function(e){ht(e,t,n)})),zt.forEach((function(e){ht(e,t,n)}))}(0,9===e.nodeType?e:e.ownerDocument),this._internalRoot=r}function Ws(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Us(e,t,n,r,o){var i=n._reactRootContainer;if(i){var a=i._internalRoot;if("function"==typeof o){var l=o;o=function(){var e=As(a);l.call(e)}}Ls(t,a,e,o)}else{if(i=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Fs(e,0,t?{hydrate:!0}:void 0)}(n,r),a=i._internalRoot,"function"==typeof o){var s=o;o=function(){var e=As(a);s.call(e)}}ts((function(){Ls(t,a,e,o)}))}return As(a)}function Hs(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:te,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}function Vs(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Ws(t))throw Error(a(200));return Hs(e,t,null,n)}Fs.prototype.render=function(e){Ls(e,this._internalRoot,null,null)},Fs.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;Ls(null,e,null,(function(){t[Pn]=null}))},gt=function(e){if(13===e.tag){var t=Jo(Kl(),150,100);Jl(e,t),Bs(e,t)}},mt=function(e){13===e.tag&&(Jl(e,3),Bs(e,3))},bt=function(e){if(13===e.tag){var t=Kl();Jl(e,t=$l(t,e,null)),Bs(e,t)}},M=function(e,t,n){switch(t){case"input":if(Se(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=On(r);if(!o)throw Error(a(90));we(r),Se(r,o)}}}break;case"textarea":Ne(e,n);break;case"select":null!=(t=n.value)&&Ce(e,!!n.multiple,t,!1)}},j=es,I=function(e,t,n,r,o){var i=_l;_l|=4;try{return Ho(98,e.bind(null,t,n,r,o))}finally{0===(_l=i)&&Ko()}},L=function(){0==(49&_l)&&(function(){if(null!==Ul){var e=Ul;Ul=null,e.forEach((function(e,t){Is(t,e),Zl(t)})),Ko()}}(),gs())},A=function(e,t){var n=_l;_l|=2;try{return e(t)}finally{0===(_l=n)&&Ko()}};var qs,Ks,$s={Events:[Mn,Cn,On,P,_,An,function(e){ot(e,Ln)},N,D,Zt,lt,gs,{current:!1}]};Ks=(qs={findFiberByHostInstance:zn,bundleType:0,version:"16.13.1",rendererPackageName:"react-dom"}).findFiberByHostInstance,function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);ws=function(e){try{t.onCommitFiberRoot(n,e,void 0,64==(64&e.current.effectTag))}catch(e){}},ks=function(e){try{t.onCommitFiberUnmount(n,e)}catch(e){}}}catch(e){}}(o({},qs,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:Y.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=nt(e))?null:e.stateNode},findFiberByHostInstance:function(e){return Ks?Ks(e):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null})),t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=$s,t.createPortal=Vs,t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;if(void 0===t){if("function"==typeof e.render)throw Error(a(188));throw Error(a(268,Object.keys(e)))}return e=null===(e=nt(t))?null:e.stateNode},t.flushSync=function(e,t){if(0!=(48&_l))throw Error(a(187));var n=_l;_l|=1;try{return Ho(99,e.bind(null,t))}finally{_l=n,Ko()}},t.hydrate=function(e,t,n){if(!Ws(t))throw Error(a(200));return Us(null,e,t,!0,n)},t.render=function(e,t,n){if(!Ws(t))throw Error(a(200));return Us(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Ws(e))throw Error(a(40));return!!e._reactRootContainer&&(ts((function(){Us(null,null,e,!1,(function(){e._reactRootContainer=null,e[Pn]=null}))})),!0)},t.unstable_batchedUpdates=es,t.unstable_createPortal=function(e,t){return Vs(e,t,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!Ws(n))throw Error(a(200));if(null==e||void 0===e._reactInternalFiber)throw Error(a(38));return Us(e,t,n,!1,r)},t.version="16.13.1"},function(e,t,n){"use strict";e.exports=n(380)},function(e,t,n){"use strict";
/** @license React v0.19.1
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r,o,i,a,l;if("undefined"==typeof window||"function"!=typeof MessageChannel){var s=null,c=null,u=function(){if(null!==s)try{var e=t.unstable_now();s(!0,e),s=null}catch(e){throw setTimeout(u,0),e}},d=Date.now();t.unstable_now=function(){return Date.now()-d},r=function(e){null!==s?setTimeout(r,0,e):(s=e,setTimeout(u,0))},o=function(e,t){c=setTimeout(e,t)},i=function(){clearTimeout(c)},a=function(){return!1},l=t.unstable_forceFrameRate=function(){}}else{var f=window.performance,p=window.Date,h=window.setTimeout,g=window.clearTimeout;if("undefined"!=typeof console){var m=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof m&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills")}if("object"==typeof f&&"function"==typeof f.now)t.unstable_now=function(){return f.now()};else{var b=p.now();t.unstable_now=function(){return p.now()-b}}var v=!1,y=null,x=-1,w=5,k=0;a=function(){return t.unstable_now()>=k},l=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported"):w=0<e?Math.floor(1e3/e):5};var _=new MessageChannel,E=_.port2;_.port1.onmessage=function(){if(null!==y){var e=t.unstable_now();k=e+w;try{y(!0,e)?E.postMessage(null):(v=!1,y=null)}catch(e){throw E.postMessage(null),e}}else v=!1},r=function(e){y=e,v||(v=!0,E.postMessage(null))},o=function(e,n){x=h((function(){e(t.unstable_now())}),n)},i=function(){g(x),x=-1}}function S(e,t){var n=e.length;e.push(t);e:for(;;){var r=n-1>>>1,o=e[r];if(!(void 0!==o&&0<M(o,t)))break e;e[r]=t,e[n]=o,n=r}}function P(e){return void 0===(e=e[0])?null:e}function z(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,o=e.length;r<o;){var i=2*(r+1)-1,a=e[i],l=i+1,s=e[l];if(void 0!==a&&0>M(a,n))void 0!==s&&0>M(s,a)?(e[r]=s,e[l]=n,r=l):(e[r]=a,e[i]=n,r=i);else{if(!(void 0!==s&&0>M(s,n)))break e;e[r]=s,e[l]=n,r=l}}}return t}return null}function M(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var C=[],O=[],T=1,N=null,D=3,j=!1,I=!1,L=!1;function A(e){for(var t=P(O);null!==t;){if(null===t.callback)z(O);else{if(!(t.startTime<=e))break;z(O),t.sortIndex=t.expirationTime,S(C,t)}t=P(O)}}function R(e){if(L=!1,A(e),!I)if(null!==P(C))I=!0,r(B);else{var t=P(O);null!==t&&o(R,t.startTime-e)}}function B(e,n){I=!1,L&&(L=!1,i()),j=!0;var r=D;try{for(A(n),N=P(C);null!==N&&(!(N.expirationTime>n)||e&&!a());){var l=N.callback;if(null!==l){N.callback=null,D=N.priorityLevel;var s=l(N.expirationTime<=n);n=t.unstable_now(),"function"==typeof s?N.callback=s:N===P(C)&&z(C),A(n)}else z(C);N=P(C)}if(null!==N)var c=!0;else{var u=P(O);null!==u&&o(R,u.startTime-n),c=!1}return c}finally{N=null,D=r,j=!1}}function F(e){switch(e){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1e4;default:return 5e3}}var W=l;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){I||j||(I=!0,r(B))},t.unstable_getCurrentPriorityLevel=function(){return D},t.unstable_getFirstCallbackNode=function(){return P(C)},t.unstable_next=function(e){switch(D){case 1:case 2:case 3:var t=3;break;default:t=D}var n=D;D=t;try{return e()}finally{D=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=W,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=D;D=e;try{return t()}finally{D=n}},t.unstable_scheduleCallback=function(e,n,a){var l=t.unstable_now();if("object"==typeof a&&null!==a){var s=a.delay;s="number"==typeof s&&0<s?l+s:l,a="number"==typeof a.timeout?a.timeout:F(e)}else a=F(e),s=l;return e={id:T++,callback:n,priorityLevel:e,startTime:s,expirationTime:a=s+a,sortIndex:-1},s>l?(e.sortIndex=s,S(O,e),null===P(C)&&e===P(O)&&(L?i():L=!0,o(R,s-l))):(e.sortIndex=a,S(C,e),I||j||(I=!0,r(B))),e},t.unstable_shouldYield=function(){var e=t.unstable_now();A(e);var n=P(C);return n!==N&&null!==N&&null!==n&&null!==n.callback&&n.startTime<=e&&n.expirationTime<N.expirationTime||a()},t.unstable_wrapCallback=function(e){var t=D;return function(){var n=D;D=t;try{return e.apply(this,arguments)}finally{D=n}}}},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),l=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&i(t,e,n);return a(t,e),t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=l(n(1)),u=s(n(77)),d=function(e){function t(t){var n=e.call(this,t)||this;return n.state={image:t.image&&typeof{}==typeof t.image?t.image:void 0,moduleMenu:t.moduleMenu&&typeof{}==typeof t.moduleMenu?t.moduleMenu:void 0,textLong:t.textLong&&"string"==typeof t.textLong?t.textLong:void 0,textShort:t.textShort&&"string"==typeof t.textShort?t.textShort:void 0},n}return o(t,e),t.getDerivedStateFromProps=function(e,t){return u.default(["image","moduleMenu","textLong","textShort"],e,t)?{image:e.image&&typeof{}==typeof e.image?e.image:void 0,moduleMenu:e.moduleMenu&&typeof{}==typeof e.moduleMenu?e.moduleMenu:void 0,textLong:e.textLong&&"string"==typeof e.textLong?e.textLong:void 0,textShort:e.textShort&&"string"==typeof e.textShort?e.textShort:void 0}:null},t.prototype.render=function(){var e=this.state,t=e.moduleMenu,n=e.image,r=e.textLong,o=e.textShort;return c.createElement("div",{className:"Sidebar-holder"},c.createElement("div",{className:"title-logo flex-start"},n&&c.createElement("div",{className:"logo"},n),c.createElement("div",{className:"version flex flex-column flex-start"},c.createElement("span",{className:"name"},r),c.createElement("i",null,o))),c.createElement("div",{className:"menu"},t&&t))},t}(c.Component);t.default=d},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)},a=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),l=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&a(t,e,n);return l(t,e),t},c=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var u=s(n(1)),d=c(n(32)),f=c(n(77));n(383);var p=function(e){function t(t){var n=e.call(this,t)||this;return n.checkLocation=n.checkLocation.bind(n),n.state={messagesApp:[],messageKey:t.messageKey&&"string"==typeof t.messageKey?t.messageKey:"",codeMapping:t.codeMapping&&typeof{}==typeof t.codeMapping?t.codeMapping:{},timer:t.timer&&"number"==typeof t.timer?t.timer:2500},n.removeMessage=n.removeMessage.bind(n),n.setIntervaller=n.setIntervaller.bind(n),n.href=window.location.href,n}return o(t,e),t.getDerivedStateFromProps=function(e,t){return f.default(["codeMapping","timer","messageKey"],e,t)?{messageKey:e.messageKey&&"string"==typeof e.messageKey?e.messageKey:"",codeMapping:e.codeMapping&&typeof{}==typeof e.codeMapping?e.codeMapping:{},timer:e.timer&&"number"==typeof e.timer?e.timer:2500}:null},t.prototype.componentDidMount=function(){this.setOnClickEventListenerToTheDom(),this.clearStore(),""!==this.state.messageKey&&this.setIntervaller()},t.prototype.componentWillUnmount=function(){document.removeEventListener("click",this.checkLocation),clearInterval(this.globalMessagesIntervaller)},t.prototype.setOnClickEventListenerToTheDom=function(){document.removeEventListener("click",this.checkLocation),document.addEventListener("click",this.checkLocation)},t.prototype.checkLocation=function(){var e=this,t=5;clearInterval(n);var n=setInterval((function(){return e.href!==window.location.href&&t>0?(e.href=window.location.href,e.clearStore(),clearInterval(n)):t?void t--:clearInterval(n)}),100)},t.prototype.readStore=function(){var e=this.state.messageKey;return null!==sessionStorage.getItem(e)?JSON.parse(sessionStorage.getItem(e)):[]},t.prototype.clearStore=function(){var e=this.state.messageKey;sessionStorage.removeItem(e),this.setState({messagesApp:[]})},t.prototype.setIntervaller=function(){var e=this,t=this.state.timer;clearInterval(this.globalMessagesIntervaller),this.globalMessagesIntervaller=setInterval((function(){var t=e.readStore();0!==t.length&&(e.clearStore(),e.setState({messagesApp:t}))}),t)},t.prototype.removeMessage=function(e){this.setState({messagesApp:this.state.messagesApp.filter((function(t,n){return n!==e}))})},t.prototype.render=function(){var e=this,t=this.state,n=t.codeMapping,r=t.messagesApp,o=Object.getOwnPropertyNames(n);return u.createElement("div",{key:d.default(),className:"GlobalErrors flex flex-column"},r.map((function(t,r){var a=t.errorCode,l=t.errorMessage;if(a=JSON.stringify(a),o.includes(a)&&void 0!==n[a]){var s=n[a],c=s.title,f=s.displayErrorCode,p=s.text,h=s.close,g=s.link,m={},b={},v={};return p&&typeof{}==typeof p&&p.attributes&&typeof{}==typeof p.attributes&&(m=p.attributes),g&&typeof{}==typeof g&&g.attributes&&typeof{}==typeof g.attributes&&(b=g.attributes),h&&typeof{}==typeof h&&h.attributes&&typeof{}==typeof h.attributes&&(v=h.attributes),u.createElement("div",{className:"single-error",key:d.default()},c&&"string"==typeof c&&u.createElement("h1",null,c+" "+(f?a:"")),c&&typeof{}==typeof c&&u.createElement("h1",null,c," "+(f?a:"")),u.createElement("div",i({className:"text"},m),(p.prefix?p.prefix+" ":"")+" "+(l?l+" ":"")+" "+(p.suffix?""+p.suffix:"")),u.createElement("div",{className:"options flex"},u.createElement("div",i({onClick:function(t){return e.removeMessage(r)},className:"single-option"},v),h.text?h.text+" ":""),g&&typeof{}==typeof g&&g.text&&"string"==typeof g.text&&u.createElement("div",{className:"single-option"},u.createElement("a",i({rel:"noopener noreferrer",href:""+(g.href?g.href:"")},b),g.text))))}return null})))},t}(u.Component);t.default=p},function(e,t,n){var r=n(78),o=n(384);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var i={insert:"head",singleton:!1};r(o,i);e.exports=o.locals||{}},function(e,t,n){(t=n(79)(!1)).push([e.i,".bc-a{background-color:rgba(244,69,89,0.1)}.bc-b{background-color:rgba(244,69,89,0.1)}.bc-c{background-color:rgba(244,69,89,0.1)}.bc-d{background-color:rgba(81,45,168,0.1)}.bc-e{background-color:rgba(244,69,89,0.1)}.bc-f{background-color:rgba(244,69,89,0.1)}.bc-g{background-color:rgba(244,69,89,0.1)}.bc-h{background-color:rgba(244,69,89,0.1)}.bc-i{background-color:rgba(244,69,89,0.1)}.bc-j{background-color:rgba(244,69,89,0.1)}.bc-k{background-color:rgba(244,69,89,0.1)}.bc-l{background-color:rgba(244,69,89,0.1)}.bc-m{background-color:rgba(244,69,89,0.1)}.bc-n{background-color:rgba(244,69,89,0.1)}.bc-o{background-color:rgba(244,69,89,0.1)}.bc-p{background-color:rgba(244,69,89,0.1)}.bc-q{background-color:rgba(244,69,89,0.1)}.bc-r{background-color:rgba(244,69,89,0.1)}.bc-s{background-color:rgba(244,69,89,0.1)}.bc-t{background-color:rgba(244,69,89,0.1)}.bc-u{background-color:rgba(244,69,89,0.1)}.bc-v{background-color:rgba(244,69,89,0.1)}.bc-w{background-color:rgba(71,180,118,0.1)}.bc-x{background-color:rgba(244,69,89,0.1)}.bc-y{background-color:rgba(244,69,89,0.1)}.bc-z{background-color:rgba(244,69,89,0.1)}.w-100{width:100%}.block{display:block}.d-none{display:none}.flex{display:flex}.flex-row{flex-direction:row}.flex-column{flex-direction:column}.flex-start{justify-content:flex-start}.flex-space-around{justify-content:space-around}.flex-space-between{justify-content:space-between}.relative{position:relative}.font-input{font-weight:400;font-size:1rem;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.ff-title{font-family:Roboto,-apple-system,system-ui,BlinkMacSystemFont,Segoe UI,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,Arial,sans-serif}.h1-title{color:#202124;font-size:24px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.text-center{text-align:center}.ff-roboto{font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.buttons-group{box-sizing:border-box;padding:10px;max-width:90%;margin:20px 5%}.buttons-group-delete-account{box-sizing:border-box;padding:10px;max-width:90%;margin:0 5%}.yellow{color:#ffeb3b}.red{color:#f44559}.green{color:#47b476}.lime{color:#C3FAE8}.dodgerblue{color:#1873CC}.little-gray{color:rgba(69,69,69,0.7)}.action-icon{color:#313435;opacity:0.8}.action-icon:hover{cursor:pointer}.py-2{padding:20px 0}.my-2{margin:20px 0}.my-0{margin:0px 0 !important}.no-padding{padding:0px !important}.mr-2{margin-right:20px}h1,.h1{color:rgba(0,0,0,0.77)}.h1-list{color:#202124;font-size:21px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif;min-height:40px;line-height:40px;white-space:nowrap;word-wrap:none;overflow:hidden;text-overflow:ellipsis;margin:10px !important}.single-entry,.popup-box-icon{color:#4f4f4f !important}.text-center{text-align:center}.icon-chat{color:rgba(71,180,118,0.7) !important}.icon-security{color:rgba(228,132,252,0.33) !important}.icon-images{color:rgba(30,144,255,0.8) !important}.icon-messages{color:#7a7a7a !important}.color-red,.icon-notifications{color:rgba(244,69,89,0.7) !important}.color-green,.icon-iframes{color:rgba(71,180,118,0.7) !important}.icon-cookies{color:#DEB887 !important}.GlobalErrors{position:fixed;bottom:20px;left:20px;background-color:transpartent;z-index:10;color:#fff}.GlobalErrors .single-error{background-color:#fff;border:1px solid #dadce0;border-radius:5px;margin:10px 0;position:relative;max-width:350px;min-width:230px}.GlobalErrors .single-error h1{line-height:30px;color:#202124;font-size:0.91rem;box-sizing:border-box;padding:0 20px}.GlobalErrors .single-error .text{line-height:22px;color:rgba(69,69,69,0.8);font-size:0.87rem;text-align:justify;box-sizing:border-box;padding:0 15px}.GlobalErrors .single-error .options{width:100%;margin-top:15px;border-top:1px solid #dadce0;box-sizing:border-box;padding:5px 0}.GlobalErrors .single-error .options .single-option{width:50%;text-align:center;height:50px;line-height:50px;transition-duration:350ms}.GlobalErrors .single-error .options .single-option,.GlobalErrors .single-error .options a{color:rgba(39,39,39,0.7);font-size:0.91rem;text-decoration:none}.GlobalErrors .single-error .options .single-option:hover,.GlobalErrors .single-error .options a:hover{cursor:pointer;color:#131313}\n",""]),e.exports=t},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),l=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&i(t,e,n);return a(t,e),t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=l(n(1)),u=s(n(11)),d=s(n(391)),f=function(e){function t(t){return e.call(this,t)||this}return o(t,e),t.prototype.render=function(){return c.createElement(u.default,{loginRequired:!1,contentData:c.createElement(d.default,null)})},t}(c.Component);t.default=f},function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t};Object.defineProperty(t,"__esModule",{value:!0});var a=i(n(1)),l=n(27),s={itemRemovedFromList:"Eintrag wurde aus der Liste entfernt",currntlyIs:"Klicken Sie die Box unten um den Blocker zu",currntlyIsOff:"aktivieren",currntlyIsOn:"deaktivieren",title_html_blocker:"Blocker",blocker_msg_7:"Content Blocker kann DOM Elemente der genutzten Website blockieren. Um dieses Feature zu nutzen aktiviere den Content Blocker und klicke auf ein Element das blockiert werden soll. Alle geblockten HTML Elemente können wieder hergestellt werden im Dashboard auf der Seite 'Blockiertes HTML'.",title_reset:"Reset",reset_done:"Die Applikation wurde auf Ihre Werkeinstellungen zurücksetzten.",reset:"Klicken Sie das Icon an um diese Erweiterung auf die Werkeinstellungen zurücksetzten. Alle deine gespeicherten Daten und Einstellungen werden gelöscht. Bitte exporiere vor diesem Prozess deine Daten und Einstellungen um diese später (über das Dashboard) wieder zu importieren.",menu_title_ninja:"Ninja Icon",ninjaIcon:"Das Ninja Icon dieser Erweiterung wurde entnommen von",turnOn:"NinjaProtect anschalten",turnOff:"NinjaProtect ausschalten",links:"Links",deleteAllIframes:"Iframes aus dieser Webseite enfernen",deleteAllCookies:"Cookies verwalten",notLoggedInStatisticMessage:"Sie arbeiten lokal. Bitte loggen Sie sich ein damit die Statistik rückwärts festgehalten werden kann.",today_blocked:"Heutige Statistik der blockierten Elemente",menu_text_statistic:"Statistik aller blockierten Elemente ",menu_text_statistic_small:"Statistik",menu_text_requests:"Anfragen",addon_not_available:"Diese Webseite unterstützt keine Addons",NoDataBlockedItemsToday:"Keine blockierten Elemente von heute verfügbar",NoDataBlockedItems:"Keine blockierten Daten",home_chat:"Mit Freunden chatten - ohne Tracking",home_messages:"Nachrichten senden - ohne Tracking",home_security:"Sicherheit im Internet - Blockierung von Trackern",home_images:"Fotos herunterladen - kein Tracking",menu_text_export:"Export",menu_title_export:"Navigiere zu dem Export",menu_text_import:"Import",menu_title_import:"Navigiere zu dem Import",messages_main:"Nachrichten",menu_text_messages:"Nachrichten",menu_title_messages:"Navigiere zu den Nachrichten",menu_text_notifications:"Benachrichtigungen",menu_title_notifications:"Navigiere zu den Benachrichtigungen",menu_text_favourites:"Freunde",menu_title_favourites:"Navigiere zu den Freunde",menu_text_add_favourites:"Suche",menu_title_add_favourites:"Navigiere zu der Freunden Suche",chat_main:"Chat",menu_text_chat:"Chat",menu_title_chat:"Navigiere zu dem Chat",menu_text_security:"Domäne",menu_text_security_main:"Liste",menu_title_security:"Navigiere zu dem Bereich Domänen Verwaltung",menu_text_security_settings:"Einstellungen",menu_title_security_settings:"Navigiere zu dem Bereich Sicherheits Einstellungen",menu_text_cookies:"Cookies",menu_title_cookies:"Navigiere zu dem Bereich Cookies",menu_text_home:"Startseite",menu_title_home:"Navigiere zur Startseite",menu_text_iframes:"Iframes",menu_title_iframes:"Navigiere zu dem Bereich Iframes",menu_text_security_examples:"Beispiele",menu_title_security_examples:"Navigiere zu dem Bereich Sichereich Beispiele",menu_text_download_images:"Fotos download",menu_title_download_images:"Navigiere zu dem Bereich Fotos herunterladen",menu_text_images:"Fotos",menu_text_images_favourites:"Gespeicherte Fotos",menu_title_images_favourites:"Navigiere zu dem Bereich gespiecherte Fotos",accountPrivacyTerms:"Nutzungsbedingungen",globalNetworkError:"Netzwerk Fehler.",globalProcessError:"Interner Fehler.",globalUserDoesNotExsists:"Benutzerkonto existiert nicht",globalInvalidEmailsAdress:"Ungültiges E-Mail-Adressformat",globalErrormessagePrefix:"Es wurde ein Fehler gefunden, der dazu führt, dass die Anwendung nicht ordnungsgemäß funktioniert.",globalErrormessageCloseButton:"Ignorieren",globalErrormessageLearnMoreButton:"Mehr lesen",globalInvalidCountry:"Fehlerhaftes Land",globalInvalidLanguage:"Fehlerhafte Sprache",globalErrorCodeTitle:"Fehlercode",globalErrorCode_1:'Netzwerkfehler. Wenn ein Netzwerkfehler aufgetreten ist, ist eine "Ajax" -Anforderung fehlgeschlagen. Überprüfen Sie Ihre Netzwerkverbindung oder das, da der Remote-Dienst derzeit nicht verfügbar ist.',globalErrorCode_2:"App-Prozessfehler. Dies bedeutet, dass die Antwort auf Ajax-Anforderungen eine ungültige Struktur für die Anwendung bereitgestellt hat.",globalErrorCode_3:"Antwort anders als erwartet. Der Mittelwert des angeforderten Werts des aktuellen Anwendungskontexts ist ungültig.",code:"Code",listNotSynchronizedUserNotLoggedIn:"Du arbeitest lokal. Logge dich ein um die Liste zu synchronisieren.",notLoggedIn:"Nicht eingeloggt Information",listSynchronized_one:"Synchronisiert",titleDeleteCookie:"Einzelnes Cookie Element löschen",titleCopyCookieValue:"Wert von dem Cookie in den zwischen speichern",cookie_msg_1:"Domäne:",cookie_msg_2:"Name:",cookie_msg_3:"Wert:",cookie_msg_4:"Alle Cookies löschen. Es ist gut möglich das du danach aus der Seite ausgeloggst wirst.",cookiesNoData:"Keine Cookies vorhanden",blacklist:"Schwarze Listen",whitelist:"Weiße Listen",blacklistedElementsWords:"Blacklist Wörter",blacklistedElementsDomians:"Blacklist Domänen",blacklistedElementsUrlsIncludes:"Blacklist Url Adressen",blacklistedElementsTrackers:"Blacklist Trackers",blacklistedElementsCookies:"Blacklist Cookies",blacklistedElementsClass:"Blockierung von HTML für class",blacklistedElementsId:"Blockierung von HTML für id",blacklistedElementsHref:"Blockierung von HTML für href",menuBlacklistedElementsClass:"Blockierung für class",menuBlacklistedElementsId:"Blockierung für id",menuBlacklistedElementsHref:"Blockierung für href",blacklistedElementsIframes:"Blacklist Iframes",blacklistedElementsIframesSources:"Blacklist Iframe Quellen",blacklistedElementsIframesNames:"Blacklist Iframe Namen",copiedToClipBoard:"In die Zwischenablage kopiert",action_title_copyToClipboard:"Liste in Zwischenablage kopieren",action_title_exportToFile:"Liste in JSON-Feld exportieren",action_title_deleteList:"Liste global leeren",action_title_copyToClipboard_single:"Wert in Zwischenablage kopieren",action_title_delete_single:"Eintrag löschen",forThisFunctionLogin:"Um diese Aktion auszuführen, melden Sie sich bitte an",emptyListDone:"Liste wurde geleert",restoreDefaultValue:"Stellen Sie die Liste auf den Standardwert zurück",whitelistedElementsDomains:"Whitelist Domänen",blockedElements:"Content Blocker",securityIsOn:"Diese Erweiterung ist AN oder AUS.",scanTextOnWebsite:"Wenn Sie diese Option ausschalten, werden alle Wörte auf den Websiten NICHT gescannt. Schwarze Liste: Wörte/ Attribute/ Attribute Wörter - werden ignoriert.",allowOnlyHttpsProtocol:"Erlaube nur den Besuch von HTTPS Websites - also der Zugriff auf alle HTTP Webseiten wird blockiert.",allowOnlyHttpProtocol:"Erlaube nur den Besuch von HTTP Websites - also der Zugriff auf alle HTTPS Webseiten wird blockiert.",makeSearchInSourceCode:"Scannen Sie Wörter im Quellcode eines bestimmten HTML-Elements (innerHTML) oder nur im Text von HTML-Elementen (innerText).",mutationCheck:"Überprüfen der HTML-Elemente von Websites nach dem Laden der Seite (DOM Mutationen von HTML Elementen in der Regel durchgeführt von Javascript Bibliotheken).",ignoreTagStyle:'Den Kod innerhalb von den "STYLE" Tags (<style> Tag) beim Scan Prozess ignorieren anhand der Schwarzen Liste Wörter.',ignoreTagScript:'Den Kod innerhalb von den "Script" Tags (<script> Tag) beim Scan Prozess ignorieren anhand der Schwarzen Liste Wörter.',ignoreTagLink:'Den Kod innerhalb von den "Link" Tags (<link> Tag) beim Scan Prozess ignorieren anhand der Schwarzen Liste Wörter.',ignoreTagMeta:'Den Kod innerhalb von den "Meta" Tags (<meta> Tag) beim Scan Prozess ignorieren anhand der Schwarzen Liste Wörter.',replacer:"Ersetze jedes einzelne Gefahrenwortzeichen durch diesen Eintrag. Die Gefahrenwörter sind Wörte aus Ihrer eigen definierten Schwarzen Liste Wörter.",maximumOfDangerWords:"Nach Erreichen dieses Wertes - anhand der schwarzen Listen: Blacklist Wörte, Blockierung von HTML für class, Blockierung von HTML für href oder Blockierung von HTML für id, dann wird die Website gesperrt. Der Minimalwert ist 1, der Maximalwert ist 300.",limitlessScan:"Ignorieren Sie die maximale Anzahl von blockierten Gefahren anhand den Schwarzen Listen: Blacklist Wörte, Blockierung von HTML für class, Blockierung von HTML für href oder Blockierung von HTML für id. Die Website wird nicht blockiert (ignorieren Sie den obigen Wert). Wenn Sie diese Funktion aktivieren, kann Protection die Leistung Ihres Browsers beeinträchtigen.",deleteCookies:"Lösche alle Cookies anhand der Schwarzen Liste Cookies auf jeder Webseite ? Cookie werden gelöscht beim Öffnen oder Schließen eines Tabs und wärend des Browsings alle 5 Sekunden.",popupMainTitle:"Schwarze Ninja Statistik",popup_blocked_trackers:"Blockierte Tracker",popup_blocked_cookies:"Blockierte Cookies",popup_blocked_words:"Blockierte Wörter",popup_blocked_requests:"Blockierte Anfragen",popup_blocked_iframes:"Blockierte Iframes",popup_blocked_dom:"Blockiertes HTML",popup_blocked_websites:"Blockierte Webseiten",popup_title_dashboard:"Dashboard",popup_title_global_chart:"Globale Statistik",titleDeleteIframe:"Löschen Sie einen einzelnen Iframe",iframe_msg_1:"Quelle:",iframe_msg_2:"Id:",iframe_msg_3:"className:",iframesNoData:"Keine Iframes vorhanden",popup_add_blacklistedElementsTrackers:"Fügen Sie den Blacklist-Trackern die aktuelle Domain hinzu. Alle Versuche, auf diese Domain zuzugreifen, werden blockiert.",popup_remove_blacklistedElementsTrackers:"Entfernen Sie die aktuelle Domain aus der Blacklist Trackern.",popup_add_blacklistedElementsDomians:"Fügen Sie der Blacklist-Domain die aktuelle Domain hinzu. Alle Versuche, von dieser Domain aus auf diese Domain oder Dienste zuzugreifen, werden blockiert.",popup_remove_blacklistedElementsDomians:"Entfernen Sie die aktuelle Domain aus der Blacklist Domänen.",popup_add_blacklistedElementsCookies:"Fügen Sie den Blacklist-Cookies die aktuelle Domain hinzu. Alle Cookies werden beim Laden der Website entfernt, dann alle 5 Sekunden und wenn die Website verlassen wird.",popup_remove_blacklistedElementsCookies:"Entfernen Sie die aktuelle Domain aus der Blacklist Cookies.",popup_add_blacklistedElementsIframes:"Aktuelle Domain zur Blacklist hinzufügen iframes.",popup_remove_blacklistedElementsIframes:"Entfernen Sie die aktuelle Domain aus der Blacklist Iframes. Alle Iframes werden gelöscht sobald diese Website versucht externen Content zu laden.",popup_add_blacklistedElementsIframesSources:"Aktuelle Url zur Blacklist Iframes Sources hinzufügen.",popup_remove_blacklistedElementsIframesSources:"Entfernen Sie die aktuelle Url aus der Blacklist Iframes Sources. Alle Iframes werden gelöscht sobald diese Website versucht externen Content zu laden.",popup_add_whitelistedElementsDomains:"Fügen Sie der Whitelist-Domain die aktuelle Domain hinzu und lassen Sie alles zu (keine Anfrage wird blockiert, keine Blacklist-Wortprüfung, keine Cookie-Löschung und keine automatische Iframe-Löschung).",popup_remove_whitelistedElementsDomains:"Entfernen Sie die aktuelle Domain aus der Whitelist Domänen.",popup_add_blacklistedElementsTrackers_popup:"Fügen Sie den aktuellen Eintrag zu der List  Blacklist Trackern hinzu. Alle Versuche, auf diese Domain zuzugreifen, werden blockiert.",popup_remove_blacklistedElementsTrackers_popup:"Entfernen Sie den Eintrag aus der Blacklist Tracker.",popup_add_blacklistedElementsDomians_popup:"Fügen Sie den aktuellen Eintrag zu der List  Blacklist Domains hinzu. Alle Versuche, von dieser Domain aus auf diese Domain oder Dienste zuzugreifen, werden blockiert.",popup_remove_blacklistedElementsDomians_popup:"Entfernen Sie den Eintrag aus der Blacklist Domänen.",popup_add_blacklistedElementsCookies_popup:"Fügen Sie den aktuellen Eintrag zu der List  Blacklist Cookies hinzu. Alle Cookies werden beim Laden der Website entfernt, dann alle 5 Sekunden und wenn die Website verlassen wird.",popup_remove_blacklistedElementsCookies_popup:"Entfernen Sie den Eintrag aus der Blacklist Cookie.",popup_add_blacklistedElementsIframes_popup:"Fügen Sie den aktuellen Eintrag zu der List  Blacklist Iframes hinzu. Alle Iframes werden gelöscht sobald diese Website versucht externen Content zu laden.",popup_remove_blacklistedElementsIframes_popup:"Entfernen Sie den Eintrag aus der Blacklist Iframes.",popup_add_blacklistedElementsIframesSources_popup:"Fügen Sie den aktuellen Eintrag zu der List  Blacklist Iframes Sources hinzu.",popup_remove_blacklistedElementsIframesSources_popup:"Entfernen Sie den Eintrag aus der Blacklist Iframes Sources. Alle Iframes werden gelöscht sobald diese Website versucht externen Content zu laden.",popup_add_whitelistedElementsDomains_popup:"Fügen Sie der Whitelist-Domain die aktuelle Domain hinzu und lassen Sie alles zu (keine Anfrage wird blockiert, keine Blacklist-Wortprüfung, keine Cookie-Löschung und keine automatische Iframe-Löschung).",popup_remove_whitelistedElementsDomains_popup:"Entfernen Sie die aktuelle Domain aus der Whitelist Domänen.",popup_reload_target:"Reload website",extendsblacklist:a.createElement("span",null,"Wärend des Laden einer Webseite, wird die Domäne über ein Blacklist Filter durchgefürfelt. Wenn die Domäne auf der Schwarzen Liste steht, wird diese blockiert. Um die maximale Sicherheit zu gewärleisten kann eine Erweiterte Blacklist hinzugefügt werden it weiteren 20822 Einträgen. Der Inhalt der Liste steht hier:",a.createElement("a",{target:"_blank",href:l.addonPrefix()+"/extendedblacklist.txt"},"extendedblacklist.txt")),extendspornlist:a.createElement("span",null,"Wärend des Laden einer Webseite, wird die Domäne über ein Blacklist Filter durchgefürfelt. Wenn die Domäne auf der Schwarzen Liste steht, wird diese blockiert. Um die maximale Sicherheit zu gewärleisten kann eine Erweiterte Pornlist hinzugefügt werden it weiteren 6668 Einträgen. Der Inhalt der Liste steht hier:",a.createElement("a",{target:"_blank",href:l.addonPrefix()+"/extendedpornlist.txt"},"extendedpornlist.txt")),blacklistedElementsCookies_html:a.createElement("span",{className:"box-content"},a.createElement("div",{className:"box-content--div"},a.createElement("p",{className:"element-p"},"Sie können hier einen Cookie-Namen oder einen Domain-Namen hinzufügen, der auf jeder Website gelöscht werden soll. Standardmäßig enthält diese Liste 640 Einträge mit vordefinierten Cookie-Namen oder Domain-Namen dass die Verwendung von Cookies für Tracking-Zwecke und dort automatisch durch den Sicherheitsinhalt gelöscht werden."),a.createElement("ul",null,a.createElement("li",null,"Beispiel Eintrag in der Liste: ",a.createElement("span",{className:"colored-example-element"},"GPS"),". Wenn Sie danach die Webseite besuchen: https://www.youtube.com, dann wird der Cookie mit dem Name ",a.createElement("span",{className:"colored-example-element"},"GPS")," gelöscht"),a.createElement("li",null,"Beispiel Eintrag in der Liste: ",a.createElement("span",{className:"colored-example-element"},"www.7search.com"),". Wenn Sie danach die Webseite besuchen: https://www.7search.com, dann werden ",a.createElement("span",{className:"colored-example-element"},"alle Cookies"),"  von der Seite gelöscht.")))),blacklistedElementsDomians_html:a.createElement("span",{className:"box-content"},a.createElement("div",{className:"box-content--div"},a.createElement("p",{className:"element-p"},"Dies ist eine auf Domainnamen basierende Blacklist. Alle Domains aus dieser Liste werden beim Besuch ihrer Websites blockiert."),a.createElement("ul",null,a.createElement("li",null,"Beispiel Eintrag in der Liste: ",a.createElement("span",{className:"colored-example-element"},"ytimg.com")," wenn Sie dann die Webseite besuchen ",a.createElement("span",{className:"colored-example-element"},"https://ytimg.com")," wird der Zugruff verweigert."),a.createElement("li",null,"Beispiel Eintrag in der Liste: ",a.createElement("span",{className:"colored-example-element"},"github.com")," wenn Sie dann die Webseite besuchen ",a.createElement("span",{className:"colored-example-element"},"https://github.com")," wird der Zugruff verweigert.")))),blacklistedElementsUrlsIncludes_html:a.createElement("span",{className:"box-content"},a.createElement("div",{className:"box-content--div"},a.createElement("p",{className:"element-p"},"Dies ist ein Domainname und Teil der URL-basierten Blacklist. Alle Domains aus dieser Liste und alle übereinstimmenden Einträge aus der Website-URL werden blockiert, wenn eine Übereinstimmung gefunden wurde."),a.createElement("ul",null,a.createElement("li",null,"Beispiel Eintrag in der Liste: ",a.createElement("span",{className:"colored-example-element"},"package"),". Wenn Sie danach die Webseite besuchen: https://www.npmjs.com/",a.createElement("span",{className:"colored-example-element"},"package"),"/gulp-babel  wird der Zugruff verweigert."),a.createElement("li",null,"Beispiel Eintrag in der Liste: ",a.createElement("span",{className:"colored-example-element"},"test"),". Wenn Sie danach die Webseite besuchen: https://www.google.com/search?q=",a.createElement("span",{className:"colored-example-element"},"test"),",  wird der Zugruff verweigert."),a.createElement("li",null,"Beispiel Eintrag in der Liste: ",a.createElement("span",{className:"colored-example-element"},"q"),". Wenn Sie danach die Webseite besuchen: https://www.google.com/search?",a.createElement("span",{className:"colored-example-element"},"q"),"=test,  wird der Zugruff verweigert."),a.createElement("li",null,"Beispiel Eintrag in der Liste: ",a.createElement("span",{className:"colored-example-element"},"hub.com"),". Wenn Sie danach die Webseite besuchen: https://www.git",a.createElement("span",{className:"colored-example-element"},"hub.com"),",  wird der Zugruff verweigert.")))),blacklistedElementsIframes_html:a.createElement("span",{className:"box-content"},a.createElement("div",{className:"box-content--div"},a.createElement("p",{className:"element-p"},"Wenn Sie eine Website besuchen und sich der Domainname der Website in dieser Liste befindet, werden alle Iframes entfernt."),a.createElement("ul",null,a.createElement("li",null,"Beispiel Eintrag in der Liste: ",a.createElement("span",{className:"colored-example-element"},"gazeta.pl"),". Wenn Sie danach die Webseite besuchen: https://www.gazeta.pl werden alle Iframes von der Seite https://",a.createElement("span",{className:"colored-example-element"},"gazeta.pl")," entfernt")))),blacklistedElementsIframesSources_html:a.createElement("span",{className:"box-content"},a.createElement("div",{className:"box-content--div"},a.createElement("p",{className:"element-p"},'Wenn Sie eine Website besuchen und der Attribut "src" also Source (Quelle des Servers) eines Iframes einen Eintrag aus dieser Liste beinhaltet, wird das Iframe aus der Website entfernt.'),a.createElement("ul",null,a.createElement("li",null,"Beispiel Eintrag in der Liste: ",a.createElement("span",{className:"colored-example-element"},"https://dmp.theadex.com/r/"),". Wenn Sie danach die Webseite besuchen: https://www.gazeta.pl und irgendein Iframe Element das Attribut src (source), den Source beinhaltet ",a.createElement("span",{className:"colored-example-element"},"https://dmp.theadex.com/r/"),"230/1121/?c=4225222955758066709, wird das Iframe aus der Seite komplett entfernt")))),blacklistedElementsIframesNames_html:a.createElement("span",{className:"box-content"},a.createElement("div",{className:"box-content--div"},a.createElement("p",{className:"element-p"},'Wenn Sie eine Website besuchen und der Attribut "name" eines Iframes einen Eintrag aus dieser Liste beinhaltet, wird das Iframe aus der Website entfernt.'),a.createElement("ul",null,a.createElement("li",null,"Beispiel Eintrag in der Liste: ",a.createElement("span",{className:"colored-example-element"},"googleads"),". Wenn Sie danach die Webseite besuchen: https://www.gazeta.pl und irgendein Iframe Element das Attribut name, die Zeichenkette beinhaltet ",a.createElement("span",{className:"colored-example-element"},"googleads"),"_sync, wird das Iframe aus der Seite komplett entfernt")))),blacklistedElementsTrackers_html:a.createElement("span",{className:"box-content"},a.createElement("div",{className:"box-content--div"},a.createElement("p",{className:"element-p"},"Wenn Sie eine Website besuchen und die Website andere implementiert hat (Dritte) Dienste oder Tracking-Dienste und der Domainname stimmen mit einem Domainnamen aus dieser Liste überein oder der gesamte URL-Pfad stimmt dann mit einem Eintrag aus dieser Liste überein Die Anfrage wird blockiert."),a.createElement("ul",null,a.createElement("li",null,"Beispiel Eintrag in der Liste: ",a.createElement("span",{className:"colored-example-element"},"cdn.mouseflow.com"),". Egal welche Webseite Sie besuchen, falls eine Webseite versuche einen Service von https://",a.createElement("span",{className:"colored-example-element"},"cdn.mouseflow.com"),"/lib/track.js abzurufen, wird diese Abfrage blockiert"),a.createElement("li",null,"Beispiel Eintrag in der Liste: ",a.createElement("span",{className:"colored-example-element"},"rsrc.php/v3/y4/r/-PAXP-deijE.gif"),". Egal welche Webseite Sie besuchen, falls eine Webseite versuche einen Service von: https://static.xx.fbcdn.net/",a.createElement("span",{className:"colored-example-element"},"rsrc.php/v3/y4/r/-PAXP-deijE.gif"),"  abzurufen, wird diese Abfrage blockiert")))),blacklistedElementsWords_html:a.createElement("span",{className:"box-content"},a.createElement("div",{className:"box-content--div"},a.createElement("p",{className:"element-p"},'Der Sicherheitsinhalt findet jedes Wort aus dieser schwarzen Liste und jedes Wort wird durch den im Abschnitt "Einstellungen" definierten "Ersetzer" ersetzt. Wenn der Sicherheitsinhalt ein Gefahrenwort aus der "Blacklist: Words" in einem HTML-Tag gefunden hat, Anschließend werden die HTML-Tag-Attribute gescannt. Wenn ein Attributname aus dieser Liste nicht mit Einträgen aus der "Blacklist: Attribute" übereinstimmt, dann Der Sicherheitsinhalt findet jedes Wort innerhalb des Attributwerts aus dieser Liste und ersetzt jedes Zeichen durch das Ersetzerzeichen definiert im Abschnitt "Einstellungen".'),a.createElement("ul",null,a.createElement("li",null,'Zum Beispiel, wenn das Wort "guns" in dieser schwarzen Liste vorhanden ist und Sie eine Website besuchen, dann wird das Wort "guns" ersetzt werden.',a.createElement("br",null),'Beispiel Eingabe: "we have ',a.createElement("span",{className:"colored-example-element"},"guns"),' in ...".',a.createElement("br",null),'Beispielausgabe: "we have ',a.createElement("span",{className:"colored-example-element"},"####"),' in ..."'),a.createElement("li",null,'Zum Beispiel, wenn das Wort "seven" in dieser schwarzen Liste vorhanden ist und Sie eine Website besuchen, dann wird das Wort "seven" ersetzt werden.',a.createElement("br",null),'Beispiel Eingabe: "',a.createElement("span",{className:"colored-example-element"},"seven"),' years old ...".',a.createElement("br",null),'Beispielausgabe: "',a.createElement("span",{className:"colored-example-element"},"#####"),' years old ...".')))),blacklistedElementsClass_html:a.createElement("span",{className:"box-content"},a.createElement("div",{className:"box-content--div"},a.createElement("p",{className:"element-p"},"Blockieren von DOM-Elementen (Tags) basierend auf dem Attribut: class."),a.createElement("ul",null,a.createElement("li",null,"Beispiel Eintrag: \"font-bold\". Wenn du eine Webseite besuchtst und irgendein DOM Element das Attribut class mit dem Wert 'font-bold' befüllt ist (z.B.: ",'<span class="font-bold"> Text </span>',") dann wird das Element aus der Webseite enfernt.")))),blacklistedElementsHref_html:a.createElement("span",{className:"box-content"},a.createElement("div",{className:"box-content--div"},a.createElement("p",{className:"element-p"},'Blockieren von "A" -Tag-Elementen basierend auf ihrem Attribut: href.'),a.createElement("ul",null,a.createElement("li",null,'Beispiel Eintrag: "redirect?". Wenn du ein Webseite besuchtst und das DOM Element ',"<a>"," das Attribut href mit dem Wert 'redirect?' befüllt hat (z.B.: ",'<a href="https://xv345bhFD.com/redirect?client=http://example.com">link</a>',"), dann wird das Element aus der Webseite enfernt.")))),blacklistedElementsId_html:a.createElement("span",{className:"box-content"},a.createElement("div",{className:"box-content--div"},a.createElement("p",{className:"element-p"},"Blockieren von DOM-Elementen (Tags) basierend auf dem Attribut: zd."),a.createElement("ul",null,a.createElement("li",null,"Beispiel Eintrag: \"extern-logo\". Wenn du eine Webseite besuchtst und irgendein DOM Element das Attribut id mit dem Wert 'extern-logo' befüllt ist (z.B.: ",'<img id="extern-logo"/>',"), dann wird das Element aus der Webseite enfernt.")))),whitelistedElementsDomains_html:a.createElement("span",{className:"box-content"},a.createElement("div",{className:"box-content--div"},a.createElement("p",{className:"element-p"},"Machen Sie nichts für ausgewählte Domainnamen."),a.createElement("ul",null,a.createElement("li",null,"Beispiel Eintrag in der Liste: ",a.createElement("span",{className:"colored-example-element"},"google.com")," wenn Sie dann die Webseite besuchen https://www.",a.createElement("span",{className:"colored-example-element"},"google.com")," findet keine Überprüfung jeglicher Art statt"),a.createElement("li",null,"Beispiel Eintrag in der Liste: ",a.createElement("span",{className:"colored-example-element"},"npmjs.com")," wenn Sie dann die Webseite besuchen https://www.",a.createElement("span",{className:"colored-example-element"},"npmjs.com"),"/package/gulp-babel findet keine Überprüfung jeglicher Art statt")))),example:"Beispiele",imagesPopupTitle:"Fotos wurden gefunden",imagesNoData:"Keine validen Fotos vorhanden",imagesNoDataFavourites:"Keine gespeicherten Fotos vorhanden",imagesLoadingTabs:"Aktive tabs werden geladen...",current_tabs_title:"Offene Tabs",filter:"Filtern",filter_all:"Alle",itemsPerSite:"Je Seite",itemsPerSiteSuffix:"Fotos",page:"Seite",of:"von",images:"Fotos",current_favourites_images:"Derzeit gespeicherte Fotos",open_in_new_tab:"Im neuen Tab öffnen",download:"Herunterladen",downloadSmall:"download",delete_all:"Alle löschen",notLoggedInImagesFavouritesAdd:"Nur angemeldete Benutzer können Bilder zur Favoritenliste hinzufügen",notLoggedInImagesFavouritesManage:"Nur angemeldete Benutzer können die Favoritenliste verwalten",tabsNoData:"Keine validen Tabs vorhanden",imagesLoadingData:"Fotos werden geladen...",infoItemAdded:"Eintrag wurde in die Liste hinzugefügt",infoItemRemoved:"Eintrag wurde aus der Liste entfernt",infoArrayIs0:"Liste ist leer, daher kann kein Element entfernt werden",infoIncorrectValue:"Wert ist nicht valide",infoItemInList:"Eintrag bereits in der Liste vorhanden",country:"Land",countriesNotFoundText:"Sorry, dieses Land habe ich nicht gefunden",dropText:"Hier loslassen",error:"Fehler",searchPlaceholder:"Suchen...",search:"Suche",list:"Liste",addPlaceholder:"Wert...",addNewEntryTitle:"Neuen Eintrag hinzufügen",no_data_list:"Keine Einträge vorhanden",no_data_list_search:"Keine Suchergebnisse vorhanden",loading:"Laden...",home_security_3:"Blockierung von Anfragen",home_security_2:"Blockierung von Cookies",home_security_1:"Blockierung von Trackern",home_security_4:"Blockierung von Pornographischen Seiten",home_security_5:"Blockierung von Wörtern",home_security_6:"Blockierung von Webseiten Content",upload:"Drag & Drop die NinjaProtects json Datei hier...",export:"Export",exportAll:"der globalen Listen und Einstellungen",dangerCount:"Ich beschütze dich!",dangerCountPrefix:"Die maximale Anzahl der Gefahren Elemente wurde erreicht und beträgt aktuell",dangerUrlPrefix:"Die URL oder ein Teil der URL ist gefährlich und befindet sich in einer der schwarzen Listen",domain:"Domänen Name ohne www. Beispiel: react-divcreator.cba.pl",tag:"Tag Name. Beispiel: div",languages:"Sprachen"};t.default=s},function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t};Object.defineProperty(t,"__esModule",{value:!0});var a=i(n(1)),l=n(27),s={itemRemovedFromList:"Entry has been removed from current list",currntlyIs:"Klick the box below to",currntlyIsOff:"activate",currntlyIsOn:"deactivate",title_html_blocker:"Blocker",blocker_msg_7:"Content blocker block's HTML content that's belong to the current visited website.  External content cannot be blocked, like: iframes. To block an element, activate the blocker then click on an HTML element on the website. All blocked elements can be deleted on the dashboard in the 'Blocked elements' section.",title_reset:"Factory reset",reset_done:"Reset of this application are done and factory configuration are restored.",reset:"Klick this text to make an factory reset of this extension. All your custom lists entries, configuration and the global statistic will be deleted, so please make an export of your lists, settings and statistic. After this process make an import from the dashboard page.",menu_title_ninja:"Ninja Icon",ninjaIcon:"Ninja Icon of this extensions are token from",turnOn:"Turn NinjaProtect on",turnOff:"Turn NinjaProtect off",links:"Links",deleteAllIframes:"Delete iframes from current website",deleteAllCookies:"Delete Cookies from current website",notLoggedInStatisticMessage:"You are working locally. Login to persist the statistic otherwise the statistic cannot be done backwards.",today_blocked:"Current day statistic of blocked elements",menu_text_statistic:"Statistic of blocked items",menu_text_statistic_small:"Statistic",menu_text_requests:"Requests",addon_not_available:"This website are not supporting extensions",NoDataBlockedItems:"No blocked data",NoDataBlockedItemsToday:"No blocked data from today available",home_chat:"Chat with friends - without tracking",home_messages:"Send messages - without tracking",home_security:"Keep yourself secure in the internet - block trackers",home_images:"Images download - without tracking",menu_text_export:"Export",menu_title_export:"Navigate to the export area",menu_text_import:"Import",menu_title_import:"Navigate to the import area",messages_main:"Messages",menu_text_messages:"Messages",menu_title_messages:"Navigate to the messages area",menu_text_notifications:"Notifications",menu_title_notifications:"Navigate to the notifications area",menu_text_favourites:"Friends",menu_title_favourites:"Navigate to the friends area",menu_text_add_favourites:"Search",menu_title_add_favourites:"Navigate to the friends search area",chat_main:"Chat",menu_text_chat:"Chat",menu_title_chat:"Navigate to the chat area",menu_text_security:"Domain",menu_text_security_main:"List",menu_title_security:"Navigate to the domain management area",menu_text_security_settings:"Settings",menu_title_security_settings:"Navigate to the security settings area",menu_text_cookies:"Cookies",menu_title_cookies:"Navigate to the cookies area",menu_text_home:"Home",menu_title_home:"Navigate to the homepage area",menu_text_iframes:"Iframes",menu_title_iframes:"Navigate to the iframes area",menu_text_security_examples:"Examples",menu_title_security_examples:"Navigate to the security examples area",menu_text_download_images:"Download images",menu_title_download_images:"Navigate to the images download area",menu_text_images:"Images",menu_text_images_favourites:"Saved images",menu_title_images_favourites:"Navigate to the saved images area",accountPrivacyTerms:"Privacy policy",globalNetworkError:"Network error.",globalProcessError:"Process error.",globalUserDoesNotExsists:"User Account does not exsists",globalInvalidEmailsAdress:"Invalid email address format",globalErrormessagePrefix:"An error occured which causes the application to not work properly.",globalErrormessageCloseButton:"Dismiss",globalErrormessageLearnMoreButton:"Learn more",globalInvalidCountry:"Invalid country",globalInvalidLanguage:"Invalid language",globalErrorCodeTitle:"Error code",globalErrorCode_1:'Network error. When a network error occured this mean an "ajax" request failed. Check your network connection or that because the remote service currently not available.',globalErrorCode_2:"App process error. It means that the ajax requests response provided an invalid structure for the application.",globalErrorCode_3:"Response other then expected. Its mean the requested value of the current applications context are invalid.",code:"Code",listNotSynchronizedUserNotLoggedIn:"You are working locally. Login to synchronize your list.",notLoggedIn:"Not logged in information",listSynchronized_one:"Synchronized",titleDeleteCookie:"Delete single cookie",cookie_msg_1:"Domain:",cookie_msg_2:"Name:",cookie_msg_3:"Value:",cookie_msg_4:"Delete all cookies. It is possible that you will be logged out from the current website.",cookiesNoData:"No cookies available",avatarErrorFileType:"Unrecognized file type",avatarErrorFileSize:"File size exceeds limit of 5MB for avatar",avatarErrorFileTypeSupport:"Only jpg, png and gif file types are allowed",blacklist:"Blacklists",whitelist:"Whitelists",blacklistedElementsWords:"Blacklist Words",blacklistedElementsDomians:"Blacklist Domains",blacklistedElementsUrlsIncludes:"Blacklist Urls includes",blacklistedElementsTrackers:"Blacklist Trackers",blacklistedElementsCookies:"Blacklist Cookies",blacklistedElementsClass:"Block HTML by class",blacklistedElementsId:"Block HTML by id",blacklistedElementsHref:"Block HTML by href",menuBlacklistedElementsClass:"Block by class",menuBlacklistedElementsId:"Block by id",menuBlacklistedElementsHref:"Block by href",blacklistedElementsIframes:"Blacklist Iframes",blacklistedElementsIframesSources:"Blacklist Iframe Sources",blacklistedElementsIframesNames:"Blacklist Iframe Names",copiedToClipBoard:"Copied to clipboard",action_title_copyToClipboard:"Copy list to clipboard",action_title_exportToFile:"Export list to JSON field",action_title_deleteList:"Empty list globally",action_title_copyToClipboard_single:"Copy value to clipboard",action_title_delete_single:"Remove entry",forThisFunctionLogin:"To perform this action, please login",emptyListDone:"List has been emptied",restoreDefaultValue:"Restore list to its default value",whitelistedElementsDomains:"Whitelist Domains",blockedElements:"Content Blocker",securityIsOn:"This extension is ON or OFF.",scanTextOnWebsite:"If you turn this option OFF, then all words are NOT scanned. The Blacklist: Words, Attributes, Attributes Words are ignored.",makeSearchInSourceCode:"Scan words in the source code of a given HTML element (innerHTML) or only in the text of HTML elements (innerText).",mutationCheck:"Check websites HTML elements after the page was loaded (DOM Mutations listener - grabbing all elements changed by Javascript libraries).",ignoreTagStyle:'Ignore the code inside the "Style" tags (<style> tag) while scanning process based on blacklist words.',ignoreTagScript:'Ignore the code inside the "SCRIPT" tags (<script> tag) while scanning process based on blacklist words.',ignoreTagLink:'Ignore the code inside the "Link" tags (<link> tag) while scanning process based on blacklist words.',ignoreTagMeta:'Ignore the code inside the "Meta" tags (<meta> tag) while scanning process based on blacklist words.',replacer:'Replace each single danger words character with this entry. The danger words comes from your customized "Blacklist Words".',maximumOfDangerWords:"After this value is reached - count based on blacklists: words, Block HTML by class, Block HTML by id and Block HTML by href (each blocked element causes the count to rise +1), the website will be blocked. Minimum value is 1, maximum value is 300.",limitlessScan:'Ignore the maximum count of all blocked elements. Blocked elements are counted based on this blacklists: "Blocked Content", "Blacklist Words", "Block by class", "Block by id" and "Block by href". The website will not be blocked (ignore the value above). If you activate this function, the security content can slow down the performance of your browser.',deleteCookies:"Autodelete all cookies based on the blacklist Cookies on each website ? Cookies are delete if you open or close an tab an while browsing each 5 seconds.",popupMainTitle:"Black ninja statistic",popup_blocked_trackers:"Blocked trackers",popup_blocked_cookies:"Blocked cookies",popup_blocked_words:"Blocked words",popup_blocked_requests:"Blocked requests",popup_blocked_iframes:"Blocked iframes",popup_blocked_dom:"Blocked HTML",popup_blocked_websites:"Blocked websites",popup_title_dashboard:"Dashboard",popup_title_global_chart:"Global statistic",titleDeleteIframe:"Delete single iframe",iframe_msg_1:"Source:",iframe_msg_2:"Id:",iframe_msg_3:"className:",iframesNoData:"No iframes available",popup_add_blacklistedElementsTrackers:"Add current domain to the blacklist trackers. All tries to access this domain will be blocked.",popup_remove_blacklistedElementsTrackers:"Remove current domain from the blacklist trackers.",popup_add_blacklistedElementsDomians:"Add current domain to the blacklist domains. All tries to access this domain or services from this domain will be blocked.",popup_remove_blacklistedElementsDomians:"Remove current domain from the blacklist domains.",popup_add_blacklistedElementsCookies:"Add current domain to the blacklist cookies. All cookies will be removed, if the website has been loaded, then for each 5 seconds and finally if you are leaving the current website all cookies deleted.",popup_remove_blacklistedElementsCookies:"Remove current domain from the blacklist cookies.",popup_add_blacklistedElementsIframes:"Add current domain to blacklist iframes and remove all iframes if the website tries to attach/ include an external iframe.",popup_remove_blacklistedElementsIframes:"Remove current domain from the blacklist iframes.",popup_add_blacklistedElementsIframesSources:"Add current listed url to blacklist Iframes Sources and remove all iframes if the website tries to attach/ include an external iframe.",popup_remove_blacklistedElementsIframesSources:"Remove current listed url from the blacklist Iframes Sources.",popup_add_whitelistedElementsDomains:"Add current domain to the whitelist domains and allow everything (no request are blocked, no blacklist words check, no cookie deletion and no auto iframe deletion).",popup_remove_whitelistedElementsDomains:"Remove current domain from the whitelist domains.",popup_add_blacklistedElementsTrackers_popup:"Add current entry to the blacklist trackers. All tries to access this domain will be blocked.",popup_remove_blacklistedElementsTrackers_popup:"Remove current entry from the blacklist trackers.",popup_add_blacklistedElementsDomians_popup:"Add current entry to the blacklist domains. All tries to access this domain or services from this domain will be blocked.",popup_remove_blacklistedElementsDomians_popup:"Remove current entry from the blacklist domains.",popup_add_blacklistedElementsCookies_popup:"Add current entry to the blacklist cookies. All cookies will be removed, if the website has been loaded, then for each 5 seconds and finally if you are leaving the current website all cookies deleted.",popup_remove_blacklistedElementsCookies_popup:"Remove current entry from the blacklist cookies.",popup_add_blacklistedElementsIframes_popup:"Add current entry to blacklist iframes and remove all iframes if the website tries to attach/ include an external iframe..",popup_remove_blacklistedElementsIframes_popup:"Remove current entry from the blacklist iframes.",popup_add_blacklistedElementsIframesSources_popup:"Add current entry to blacklist Iframes Sources  and remove all iframes if the website tries to attach/ include an external iframe..",popup_remove_blacklistedElementsIframesSources_popup:"Remove current entry from the blacklist Iframes Sources.",popup_add_whitelistedElementsDomains_popup:"Add current entry to the whitelist domains and allow everything (no request are blocked, no blacklist words check, no cookie deletion and no auto iframe deletion).",popup_remove_whitelistedElementsDomains_popup:"Remove current entry from the whitelist domains.",popup_reload_target:"Reload website",extendsblacklist:a.createElement("span",null,"While loading a website, the domain is scanned through a blacklist filter. If the domain is blacklisted, it will be blocked. To ensure maximum security, an extended blacklist can be added with another 20,822 entries. The content of the list is here:",a.createElement("a",{target:"_blank",href:l.addonPrefix()+"/extendedblacklist.txt"},"extendedblacklist.txt")),extendspornlist:a.createElement("span",null,"While loading a website, the domain is scanned through a blacklist filter. If the domain is blacklisted, it will be blocked. To ensure maximum security, an extended pornlist can be added with another 6,668 entries. The content of the list is here:",a.createElement("a",{target:"_blank",href:l.addonPrefix()+"/extendedpornlist.txt"},"extendedpornlist.txt")),blacklistedElementsCookies_html:a.createElement("span",{className:"box-content"},a.createElement("div",{className:"box-content--div"},a.createElement("p",{className:"element-p"},"You can add here an cookie name or an domain name which should be deleted on each website. Default this list has 640 entries with predefined cookie names or domain names that using cookies for tracking purposes and there are automatically deleted by the security content."),a.createElement("ul",null,a.createElement("li",null,"Example of list entry: ",a.createElement("span",{className:"colored-example-element"},"GPS"),". If you visit the website: https://www.youtube.com, then the cookie with the name ",a.createElement("span",{className:"colored-example-element"},"GPS")," are deleted"),a.createElement("li",null,"Example of list entry: ",a.createElement("span",{className:"colored-example-element"},"www.7search.com"),". If you visit the website: https://www.7search.com, then ",a.createElement("span",{className:"colored-example-element"},"all cookies")," from this website are deleted")))),blacklistedElementsDomians_html:a.createElement("span",{className:"box-content"},a.createElement("div",{className:"box-content--div"},a.createElement("p",{className:"element-p"},"This is an domain name based blacklist. All domains from this list are blocked while visiting there websites."),a.createElement("ul",null,a.createElement("li",null,"Example of list entry: ",a.createElement("span",{className:"colored-example-element"},"ytimg.com")," and if yout try to access the website ",a.createElement("span",{className:"colored-example-element"},"https://ytimg.com")," then the website are blocked"),a.createElement("li",null,"Example of list entry: ",a.createElement("span",{className:"colored-example-element"},"github.com")," and if yout try to access the website ",a.createElement("span",{className:"colored-example-element"},"https://github.com")," then the website are blocked")))),blacklistedElementsUrlsIncludes_html:a.createElement("span",{className:"box-content"},a.createElement("div",{className:"box-content--div"},a.createElement("p",{className:"element-p"},"This is an domain name and part of url based blacklist. All domains from this list and all matched entries from the websites url are blocked if an match was found."),a.createElement("ul",null,a.createElement("li",null,"Example of list entry: ",a.createElement("span",{className:"colored-example-element"},"package"),". If you visit the website: https://www.npmjs.com/",a.createElement("span",{className:"colored-example-element"},"package"),"/gulp-babel then the website are blocked"),a.createElement("li",null,"Example of list entry: ",a.createElement("span",{className:"colored-example-element"},"test"),". If you visit the website: https://www.google.com/search?q=",a.createElement("span",{className:"colored-example-element"},"test"),", then the website are blocked"),a.createElement("li",null,"Example of list entry: ",a.createElement("span",{className:"colored-example-element"},"q"),". If you visit the website: https://www.google.com/search?",a.createElement("span",{className:"colored-example-element"},"q"),"=test, then the website are blocked"),a.createElement("li",null,"Example of list entry: ",a.createElement("span",{className:"colored-example-element"},"hub.com"),". If you visit the website: https://www.git",a.createElement("span",{className:"colored-example-element"},"hub.com"),", then the website are blocked")))),blacklistedElementsIframes_html:a.createElement("span",{className:"box-content"},a.createElement("div",{className:"box-content--div"},a.createElement("p",{className:"element-p"},"If you visit an website an the websites domain name are inside this list then all iframes are removed."),a.createElement("ul",null,a.createElement("li",null,"Example of list entry: ",a.createElement("span",{className:"colored-example-element"},"gazeta.pl")," - if you visit the website: https://www.gazeta.pl then all iframes on the website https://",a.createElement("span",{className:"colored-example-element"},"gazeta.pl")," are removed")))),blacklistedElementsIframesSources_html:a.createElement("span",{className:"box-content"},a.createElement("div",{className:"box-content--div"},a.createElement("p",{className:"element-p"},'If you visit an website an the website includes iframes and this iframes attribute "src" (source) includes one of an entry from this list, then the arget iframe will be removed.'),a.createElement("ul",null,a.createElement("li",null,"Example of list entry: ",a.createElement("span",{className:"colored-example-element"},"https://dmp.theadex.com/r/"),'. If you visit the website: https://www.gazeta.pl and if the website includes iframes and the iframes "src" (source) includes an entry from this list ',a.createElement("span",{className:"colored-example-element"},"https://dmp.theadex.com/r/"),"230/1121/?c=4225222955758066709, then this iframe are removed from the website")))),blacklistedElementsIframesNames_html:a.createElement("span",{className:"box-content"},a.createElement("div",{className:"box-content--div"},a.createElement("p",{className:"element-p"},'If you visit an website an the website includes iframes and this iframes attribute "name" includes one of an entry from this list, then the arget iframe will be removed.'),a.createElement("ul",null,a.createElement("li",null,"Example of list entry: ",a.createElement("span",{className:"colored-example-element"},"googleads"),'. If you visit the website: https://www.gazeta.pl and if the website includes iframes and the iframes "name" includes an entry from this list ',a.createElement("span",{className:"colored-example-element"},"googleads"),"_sync, then this iframe are removed from the website")))),blacklistedElementsTrackers_html:a.createElement("span",{className:"box-content"},a.createElement("div",{className:"box-content--div"},a.createElement("p",{className:"element-p"},"If you visit a website, and the website has implemented other (third party) services or tracking services and the domain name match with an domain name from this list or the whole url path match with an entry from this list then the request will be blocked."),a.createElement("ul",null,a.createElement("li",null,"Example of list entry: ",a.createElement("span",{className:"colored-example-element"},"cdn.mouseflow.com"),". If an website will connect to an external service and the domain name contains: https://",a.createElement("span",{className:"colored-example-element"},"cdn.mouseflow.com")," then the request are blocked"),a.createElement("li",null,"Example of list entry: ",a.createElement("span",{className:"colored-example-element"},"rsrc.php/v3/y4/r/-PAXP-deijE.gif"),". If an website will connect to an external service and the url request contains: https://static.xx.fbcdn.net/",a.createElement("span",{className:"colored-example-element"},"rsrc.php/v3/y4/r/-PAXP-deijE.gif")," then the request are blocked")))),blacklistedElementsWords_html:a.createElement("span",{className:"box-content"},a.createElement("div",{className:"box-content--div"},a.createElement("p",{className:"element-p"},'The security content will find each word from this blacklist and each word will be replace by the "replacer" defined in the "settings" section. If the security content has found an danger word, from the "Blacklist: Words" in any HTML tag, then the HTML tags attributes are scanned. If any attribute name from this list does not matches with entrys from the "Blacklist: attributes", then the security content will find each word, inside the attributes value, from this list and replace each character with the replacer defined in the "settings section.'),a.createElement("ul",null,a.createElement("li",null,"For example, if the word ",a.createElement("span",{className:"colored-example-element"},"guns")," are in this blacklist, then if you visit a website, then this word will be replaced",a.createElement("br",null),'Example input: "we have ',a.createElement("span",{className:"colored-example-element"},"guns"),' in ..."',a.createElement("br",null),'Example output: "we have ',a.createElement("span",{className:"colored-example-element"},"####"),' in ..."'),a.createElement("li",null,"For example, if the word ",a.createElement("span",{className:"colored-example-element"},"seven")," are in this blacklist, then if you visit a website, then this will be replaced",a.createElement("br",null),'Example input: "',a.createElement("span",{className:"colored-example-element"},"seven"),' years old ..."',a.createElement("br",null),'Example output: "',a.createElement("span",{className:"colored-example-element"},"#####"),' years old ..."')))),blacklistedElementsClass_html:a.createElement("span",{className:"box-content"},a.createElement("div",{className:"box-content--div"},a.createElement("p",{className:"element-p"},"Blocking DOM Elements (tags) based on its attribute: class."),a.createElement("ul",null,a.createElement("li",null,"Example of list entry: ",a.createElement("span",{className:"colored-example-element"},"font-bold"),'. When you visit an website and a single tag has the attributes class an the class value includes this text: "font-bold", example: ','<span class="font-bold"> Text </span>',", then this tag (DOM element) will be removed from the current visited website")))),blacklistedElementsHref_html:a.createElement("span",{className:"box-content"},a.createElement("div",{className:"box-content--div"},a.createElement("p",{className:"element-p"},'Blocking "A" tag Elements based on its attribute: href.'),a.createElement("ul",null,a.createElement("li",null,"Example of list entry: ",a.createElement("span",{className:"colored-example-element"},"redirect?"),". When you visit an website and a single tag ","<a>",' has the attributes href an the href`s value includes this text: "redirect?", example: ','<a href="https://xv345bhFD.com/redirect?client=http://example.com">link</a>',", then this tag (DOM element) will be removed from the current visited website")))),blacklistedElementsId_html:a.createElement("span",{className:"box-content"},a.createElement("div",{className:"box-content--div"},a.createElement("p",{className:"element-p"},"Blocking DOM Elements (tags) based on its attribute: id."),a.createElement("ul",null,a.createElement("li",null,"Example of list entry: ",a.createElement("span",{className:"colored-example-element"},"extern-logo"),'. When you visit an website and a single tag has the attributes id an the id value includes this text: "extern-logo", example: ','<img id="extern-logo"/>',", then this tag (DOM element) will be removed from the current visited website")))),whitelistedElementsDomains_html:a.createElement("span",{className:"box-content"},a.createElement("div",{className:"box-content--div"},a.createElement("p",{className:"element-p"},"Make nothing for selected domain names."),a.createElement("ul",null,a.createElement("li",null,"Example of list entry: ",a.createElement("span",{className:"colored-example-element"},"google.com")," then the website https://www.",a.createElement("span",{className:"colored-example-element"},"google.com")," are allowed and no checks are made"),a.createElement("li",null,"Example of list entry: ",a.createElement("span",{className:"colored-example-element"},"npmjs.com")," then the website https://www.",a.createElement("span",{className:"colored-example-element"},"npmjs.com"),"/package/gulp-babel are allowed and no checks are made")))),example:"Examples",imagesPopupTitle:"Images on current website",imagesNoData:"No valid images found",imagesNoDataFavourites:"No saved images found",imagesLoadingTabs:"Loading active tabs...",current_tabs_title:"Current tabs",filter:"Filter",filter_all:"All",itemsPerSite:"Per site",itemsPerSiteSuffix:"images",page:"Page",of:"of",images:"images",current_favourites_images:"Currently saved images",open_in_new_tab:"Open in new tab",download:"Download",downloadSmall:"download",delete_all:"Delete all",notLoggedInImagesFavouritesAdd:"Only logged in users are able to add images to the favourites list",notLoggedInImagesFavouritesManage:"Only logged in users are able to manage the favourites list",tabsNoData:"No valid tabs available",imagesLoadingData:"Loading images...",infoItemAdded:"Item has been added to the current list",infoItemRemoved:"Item has been removed from list",infoArrayIs0:"List are empty, but you want to remove an value",infoIncorrectValue:"Value is incorrect",infoItemInList:"Item allready in list",country:"Country",countriesNotFoundText:"Sorry, no countries found",dropText:"Drop here",error:"Error",searchPlaceholder:"Search for value here...",search:"Search",list:"List",addPlaceholder:"Value...",addNewEntryTitle:"Add new entry",no_data_list:"No entries",no_data_list_search:"No search result",loading:"Loading...",home_security_1:"Blocking danger and tracking cookies",home_security_2:"Blocking danger and tracking requests",home_security_3:"Blocking trackers",home_security_4:"Blocking danger porn websites",home_security_5:"Blocking custom danger words",home_security_6:"Blocking custom websites HTML content",upload:"Drag & Drop NinjaProtect`s json file here...",export:"Export",exportAll:"of global lists and settings",dangerCount:"Protecting you!",dangerCountPrefix:"The maximum number of danger blocked elements has been reached and is currently",dangerUrlPrefix:"The current url or part of the given url are danger. Blocking by blacklist entry",domain:"Domain without www. Example: react-divcreator.cba.pl",tag:"Tag name. For example: div",languages:"Languages"};t.default=s},function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t};Object.defineProperty(t,"__esModule",{value:!0});var a=i(n(1)),l=n(27),s={itemRemovedFromList:"Wpis został usunięty z listy",currntlyIs:"Kliknij tekst poniżej aby wykonać",currntlyIsOff:"włączenie",currntlyIsOn:"wyłączenie",title_html_blocker:"Blocker",blocker_msg_7:"Content Blocker pozwala na zablokowanie treści bieżącej strony internetowej. Aby zablokować dany element drzewa DOM, włącz usługę Content Blocker potem wybierz element ze strony internetowej. Wszystkie zablokowane elementy mogą zostać skasowane w 'Dashboard' w sekcji 'Zablkowany HTML'.",title_reset:"Reset",reset_done:"Reset applikacji do ustawień fabrycznych został przeprowadzony pomyślnie.",reset:"Kliknij ten tekst aby przeprowadzić reset tej wtyczki do ustawień fabrycznych. Wszystkie twoja dane z list, ustawienia i statystyka zostana usunięte. Przejdz najpierw do działu eksportu danych aby po tym resecie móc wykonać import danych.",menu_title_ninja:"Ikonka Ninja",ninjaIcon:"Ikonka Ninja tego rozszerzenia została wzięta z",turnOn:"Włącz NinjaProtect",turnOff:"Wyłącz NinjaProtect",links:"Linki",deleteAllIframes:"Usuń ramki z bierzącej strony",deleteAllCookies:"Usuń ciasteczka z bierzącej strony",notLoggedInStatisticMessage:"Pracujesz lokalnie. Zaloguj się aby zachować statystykę wstecz.",today_blocked:"Statystyka zablokowanych elementów dnia dzisiejszego",menu_text_statistic:"Statystyka zablokowanych elementów",menu_text_statistic_small:"Statystyka",menu_text_requests:"Zapytania",addon_not_available:"Domena nie zezwala na używanie wtyczek",NoDataBlockedItems:"Brak zablokowanych informacji",NoDataBlockedItemsToday:"Brak informacji o zablokowanych elementach z dnia dzisiejszego",home_chat:"Chat z kolegami - bez śledzenia",home_messages:"Wysyłaj wiadomości - bez śledzenia",home_security:"Ochrona w internecie - blokowanie śledzących",home_images:"Pobieraj zdjęcia - bez śledzenia",menu_text_export:"Eksport",menu_title_export:"Przejdź do obszaru eksportu",menu_text_import:"Import",menu_title_import:"Przejdź do obszaru importu",messages_main:"Wiadomości",menu_text_messages:"Wiadomości",menu_title_messages:"Przejdź do obszaru wiadomości",menu_text_notifications:"Powiadomienia",menu_title_notifications:"Przejdź do obszaru powiadomień",favourites_main:"Znajomości",menu_text_favourites:"Znajomi",menu_title_favourites:"Przejdź do obszaru znajomi",menu_text_add_favourites:"Wyszukaj",menu_title_add_favourites:"Przejdź do obszaru szukania znajomych",chat_main:"Chat",menu_text_chat:"Chat",menu_title_chat:"Przejdź do obszaru chatu",menu_text_security:"Domena",menu_text_security_main:"Lista",menu_title_security:"Przejdź do obszaru zarządzania domeną",menu_text_security_settings:"Ustawienia",menu_title_security_settings:"Przejdź do obszaru ustawień ochrony",menu_text_cookies:"Cisteczka",menu_title_cookies:"Przejdź do obszaru ciasteczek",menu_text_home:"Strona główna",menu_title_home:"Przejdź do strony głównej",menu_text_iframes:"Ramki",menu_title_iframes:"Przejdź do obszaru ramek",menu_text_security_examples:"Przykłady",menu_title_security_examples:"Przejdź do obszaru przykładów ochrony",menu_text_download_images:"Pobierz zdjęcia",menu_title_download_images:"Przejdź do obszaru poboru zdjęć",menu_text_images:"Zdjęcia",menu_text_images_favourites:"Zapisane zdjęcia",menu_title_images_favourites:"Przejdź do obszaru zapisanych zdjęć",accountPrivacyTerms:"Warunki prywatności",globalNetworkError:"Błąd sieci.",globalProcessError:"Błąd procesu.",globalUserDoesNotExsists:"Konto użytkownika nie istnieje",globalInvalidEmailsAdress:"Nieprawidłowy format adresu e-mail",globalErrormessagePrefix:"Znaleziono błąd, który powoduje, że aplikacja nie działa poprawnie.",globalErrormessageCloseButton:"Ignoruj",globalErrormessageLearnMoreButton:"Czytaj więcej",globalInvalidCountry:"Niepoprawny kraj",globalInvalidLanguage:"Niepoprawny język",globalErrorCodeTitle:"Kod błędu",globalErrorCode_1:"Błąd sieci. Gdy wystąpił błąd sieci, oznacza to, że żądanie „ajax” nie powiodło się. Sprawdź połączenie sieciowe lub to, ponieważ usługa zdalna jest obecnie niedostępna.",globalErrorCode_2:"Błąd procesu aplikacji. Oznacza to, że odpowiedź na żądania ajax podała nieprawidłową strukturę aplikacji.",globalErrorCode_3:"Odpowiedź inna niż oczekiwana. Oznacza to, że żądana wartość bieżącego kontekstu aplikacji jest nieprawidłowa.",code:"Kod",listNotSynchronizedUserNotLoggedIn:"Pracujesz lokalnie. Zaloguj się aby synchronizować listę.",notLoggedIn:"Informacja niezalogowania",listSynchronized_one:"Synchronizowano",titleDeleteCookie:"Skasuj pojedyncze ciasteczko",titleCopyCookieValue:"Kopiuj wartość do schowka",cookie_msg_1:"Domena:",cookie_msg_2:"Nazwa:",cookie_msg_3:"Wartość:",cookie_msg_4:"Kasuj wszystkie ciasteczka. Jest możliwe że zostaniesz wylogowany z bieżącej strony.",cookiesNoData:"Brak ciasteczek",avatarErrorFileType:"Nierozpoznany typ pliku",avatarErrorFileSize:"Rozmiar pliku przekracza limit 5 MB dla programu Avatar",avatarErrorFileTypeSupport:"Dozwolone są tylko typy plików jpg, png i gif",blacklist:"Czarne listy",whitelist:"Białe listy",blacklistedElementsWords:"Czarna lista Słowa",blacklistedElementsDomians:"Czarna lista Domeny",blacklistedElementsUrlsIncludes:"Czarna lista Adresy url",blacklistedElementsTrackers:"Czarna lista Trackery",blacklistedElementsCookies:"Czarna lista Ciasteczka",blacklistedElementsClass:"Blokuj HTML dla class",blacklistedElementsId:"Blokuj HTML dla id",blacklistedElementsHref:"Blokuj HTML dla href",menuBlacklistedElementsClass:"Blokuj HTML dla class",menuBlacklistedElementsId:"Blokuj HTML dla id",menuBlacklistedElementsHref:"Blokuj HTML dla href",blacklistedElementsIframes:"Czarna lista Ramki",blacklistedElementsIframesSources:"Czarna lista Ramki źródło",blacklistedElementsIframesNames:"Czarna lista Ramki nazwa",copiedToClipBoard:"Skopiowano do schowka",action_title_copyToClipboard:"Skopiuj listę do schowka",action_title_exportToFile:"Eksportuj listę do pliku o formacie JSON",action_title_deleteList:"Wyczyść listę globalnie",action_title_copyToClipboard_single:"Skopiuj wartość do schowka",action_title_delete_single:"Usuń wpis",forThisFunctionLogin:"Zaloguj się, aby wykonać tę akcję",emptyListDone:"Lista została wyczyszczona",restoreDefaultValue:"Zresetuj listę do wartości domyślnych",whitelistedElementsDomains:"Biała lista Domeny",blockedElements:"Blocker HTML",securityIsOn:"Ta wtyczka jest włączona lub wyłączona.",scanTextOnWebsite:"Jeśli wyłączysz tę opcję, wtedy wszystkie słowa na stronie internetowej NIE są skanowane. Czarna lista: Słowa, są ignorowane.",allowOnlyHttpsProtocol:"Zezwalaj na odwiedzanie tylko stron internetowych HTTPS - czyli strony z protokołem HTTP zostaną zablokowane.",allowOnlyHttpProtocol:"Zezwalaj na odwiedzanie tylko stron internetowych HTTP - czyli strony z protokołem HTTPS zostaną zablokowane.",makeSearchInSourceCode:"Skanuj słowa w kodzie źródłowym danego elementu HTML (innerHTML) lub tylko w tekscie elementach HTML (innerText).",mutationCheck:"Sprawdzanie elementów HTML strony internetowej ma nastąpić również po załadowaniu strony (DOM mutacje na elementach HTML zazwyczaj poprzez biblioteki Javascript).",ignoreTagStyle:'Ignoruj kod zawarty w tagach "STYLE" (<style> tag) podczas skanowania na podstawie czarnej listy "Słowa".',ignoreTagScript:'Ignoruj kod zawarty w tagach "SCRIPT" (<script> tag) podczas skanowania na podstawie czarnej listy "Słowa".',ignoreTagLink:'Ignoruj kod zawarty w tagach "Link" (<link> tag) podczas skanowania na podstawie czarnej listy "Słowa".',ignoreTagMeta:'Ignoruj kod zawarty w tagach "Meta" (<meta> tag) podczas skanowania na podstawie czarnej listy "Słowa".',replacer:"Zastąp każdy znak niebezpiecznego słowa (niebezpieczne słowa pochodzą z czarnej listy Słowa) tym wpisem.",maximumOfDangerWords:"Po osiągnięciu tej wartości - poprzez sumę zablokowanych elementów na stronie na podstawie czarnych list: Czarna lista Słowa, Blokuj HTML dla class, Blokuj HTML dla href oraz Blokuj HTML dla id (każdy zablokowany element zwiększa wartości licznika o +1) wtedy strona internetowa zostanie zablokowana. Minimalna wartość to 1, maksymalna to 300.",limitlessScan:"Zignoruj maksymalną liczbę zablokowanych niebezpiecznych elementów na podstawie czarnych list: Czarna lista Słowa, Blokuj HTML dla class, Blokuj HTML dla href oraz Blokuj HTML dla id. Strona nie zostanie zablokowana (zignoruj powyższą wartość). Jeśli aktywujesz tę funkcję, Protection może spowolnić działanie przeglądarki.",deleteCookies:"Kasuj automatycznie wszystkie ciasteczka na podstawie czarnej listy Ciasteczka na wszytkich stronach. Ciasteczka kasowane są gdy otwierasz lub zamykasz stronę internetową i podczas przeglądania co 5 sekund.",popupMainTitle:"Czarny ninja statystyka",popup_blocked_trackers:"Zablokowani trackerzy",popup_blocked_cookies:"Zablokowane ciasteczka",popup_blocked_words:"Zablokowane łowa",popup_blocked_requests:"Zablokowane zapytania",popup_blocked_iframes:"Zablokowane ramki",popup_blocked_dom:"Zablokowany HTML",popup_blocked_websites:"Zablokowane strony",popup_title_dashboard:"Statystyka",popup_title_global_chart:"Globalna statystyka",titleDeleteIframe:"Usuń pojedynczy element iframe",iframe_msg_1:"Źródło:",iframe_msg_2:"Id:",iframe_msg_3:"className:",iframesNoData:"Brak ramek",popup_add_blacklistedElementsTrackers:"Dodaj bieżącą domenę do trackerów czarnej listy. Wszystkie próby uzyskania dostępu do tej domeny są zablokowane.",popup_remove_blacklistedElementsTrackers:"Usuń bieżącą domenę z czarnej listy - Trackerów.",popup_add_blacklistedElementsDomians:"Dodaj bieżące domeny do domeny czarnej listy domen. Wszystkie próby uzyskania dostępu do tej domeny lub usług z tej domeny są blokowane.",popup_remove_blacklistedElementsDomians:"Usuń bieżącą domenę z czarnej listy - Domen.",popup_add_blacklistedElementsCookies:"Dodaj bieżącą domenę do czarnej listy plików cookie. Wszystkie ciasteczka są usuwane podczas załadowania strony, potem co 5 sekund oraz odczas opusczania witryny.",popup_remove_blacklistedElementsCookies:"Usuń bieżącą domenę z czarnej listy - Ciasteczka",popup_add_blacklistedElementsIframes:"Dodaj bieżącą domenę do czarnej listy - Ramḱi. Wszystkie ramki sa usuwane ze strony, gdy ta probuje wczytac źródło zewnętrzengo serwisu (ramki).",popup_remove_blacklistedElementsIframes:"Usuń bieżącą domenę z czarnej listy - Ramki.",popup_add_blacklistedElementsIframesSources:"Dodaj bieżący adres url do czarnej listy - Ramki źródło. Wszystkie ramki sa usuwane ze strony, gdy ta probuje wczytac źródło zewnętrzengo serwisu (ramki).",popup_remove_blacklistedElementsIframesSources:"Usuń bieżący adres url z czarnej listy - Ramki źródło.",popup_add_whitelistedElementsDomains:"Dodaj bieżący wpis białej listy Domen. ezwól na wszystko (żadne żądanie nie jest blokowane, brak sprawdzania słów na czarnej liście, brak usuwania plików cookie i automatyczne usuwanie iframe).",popup_remove_whitelistedElementsDomains:"Usuń bieżącą domenę z białej listy Domen.",popup_add_blacklistedElementsTrackers_popup:"Dodaj bieżący wpis do czarnej listy Trackerów. Wszystkie próby uzyskania dostępu do tej domeny są zablokowane.",popup_remove_blacklistedElementsTrackers_popup:"Usuń bieżący wpis z czarnej listy Trackerów.",popup_add_blacklistedElementsDomians_popup:"Dodaj bieżący wpis do czarnej listy Domen. Wszystkie próby uzyskania dostępu do tej domeny lub usług z tej domeny są blokowane.",popup_remove_blacklistedElementsDomians_popup:"Usuń bieżący wpis z czarnej listy Domen.",popup_add_blacklistedElementsCookies_popup:"Dodaj bieżący wpis do czarnej listy Ciasteczka. Wszystkie ciasteczka są usuwane podczas załadowania strony, potem co 5 sekund oraz odczas opusczania witryny.",popup_remove_blacklistedElementsCookies_popup:"Usuń bieżący wpis z czarnej listy Ciasteczka",popup_add_blacklistedElementsIframes_popup:"Dodaj bieżący wpis do czarnej listy Ramḱi. Wszystkie ramki sa usuwane ze strony, gdy ta probuje wczytac źródło zewnętrzengo serwisu (ramki).",popup_remove_blacklistedElementsIframes_popup:"Usuń bieżący wpis z czarnej listy Ramki.",popup_add_blacklistedElementsIframesSources_popup:"Dodaj bieżący wpis do czarnej listy Ramki źródło. Wszystkie ramki sa usuwane ze strony, gdy ta probuje wczytac źródło zewnętrzengo serwisu (ramki).",popup_remove_blacklistedElementsIframesSources_popup:"Usuń bieżący wpis z czarnej listy Ramki źródło.",popup_add_whitelistedElementsDomains_popup:"Dodaj bieżący wpis białej listy Domen. Zezwól na wszystko (żadne żądanie nie jest blokowane, brak sprawdzania słów na czarnej liście, brak usuwania plików cookie i automatyczne usuwanie iframe).",popup_remove_whitelistedElementsDomains_popup:"Usuń bieżący wpis z białej listy Domen.",popup_reload_target:"Załaduj ponownie stronę",extendsblacklist:a.createElement("span",null,"Podczas ładowania witryny domena jest skanowana przez filtr czarnej listy. Jeśli domena jest na czarnej liście, zostanie zablokowana. Aby zapewnić maksymalne bezpieczeństwo, można dodać rozszerzoną czarną listę z kolejnymi 20822 wpisami. Treść listy znajduje się tutaj:",a.createElement("a",{target:"_blank",href:l.addonPrefix()+"/extendedblacklist.txt"},"extendedblacklist.txt")),extendspornlist:a.createElement("span",null,"Podczas ładowania witryny domena jest skanowana przez filtr czarnej listy. Jeśli domena jest na czarnej liście, zostanie zablokowana. Aby zapewnić maksymalne bezpieczeństwo, można dodać rozszerzoną czarną listę domen pornograficznych z kolejnymi 6668 wpisami. Treść listy znajduje się tutaj:",a.createElement("a",{target:"_blank",href:l.addonPrefix()+"/extendedpornlist.txt"},"extendedpornlist.txt")),blacklistedElementsCookies_html:a.createElement("span",{className:"box-content"},a.createElement("div",{className:"box-content--div"},a.createElement("p",{className:"element-p"},"Tutaj powinno się wpisać nazwę ciasteczka aby na każdej stronie internetowej każde ciasteczko o podanej nazwie zostało skasowane lub nazwa domeny na której każde ciasteczka mają zostać skasowane. Standardowo lista ma ponad 350 wpisów niebezpiecznych nazew domen lub usług śledzących, którą są automatycznie kasowane."),a.createElement("ul",null,a.createElement("li",null,"Przykładowy wpis w tej liście: ",a.createElement("span",{className:"colored-example-element"},"GPS"),". Jeśli odwiedzisz stronę internetową: https://www.youtube.com, wtedy ciasteczko o nazwie ",a.createElement("span",{className:"colored-example-element"},"GPS")," zostanie skasowane"),a.createElement("li",null,"Przykładowy wpis w tej liście: ",a.createElement("span",{className:"colored-example-element"},"www.7search.com"),". Jeśli odwiedzisz stronę internetową: https://www.7search.com, wtedy ",a.createElement("span",{className:"colored-example-element"},"wszystkie ciasteczka")," zostaną skasowane")))),blacklistedElementsDomians_html:a.createElement("span",{className:"box-content"},a.createElement("div",{className:"box-content--div"},a.createElement("p",{className:"element-p"},"To jest czarna lista oparta jest na nazwie domeny. Wszystkie domeny z tej listy są blokowane podczas odwiedzania tej witryny."),a.createElement("ul",null,a.createElement("li",null,"Przykładowy wpis w tej liście: ",a.createElement("span",{className:"colored-example-element"},"ytimg.com"),".Jeśli odwiedzisz stronę internetową  ",a.createElement("span",{className:"colored-example-element"},"https://ytimg.com")," strona internetowa zostanie zablokowana"),a.createElement("li",null,"Przykładowy wpis w tej liście: ",a.createElement("span",{className:"colored-example-element"},"github.com"),". Jeśli odwiedzisz stronę internetową ",a.createElement("span",{className:"colored-example-element"},"https://github.com")," strona internetowa zostanie zablokowana")))),blacklistedElementsUrlsIncludes_html:a.createElement("span",{className:"box-content"},a.createElement("div",{className:"box-content--div"},a.createElement("p",{className:"element-p"},"Czarna listy oparta na adresach URL lub część adresu url. Wszystkie nazwy domen z tej listy oraz wszystkie części z adresu URL sa brane pod uwagę podczas odwiedzania storny internetwej. Jezeli adres strony internetowej zawiera jakikolwiek znak lub ciąg znaków z tej listy wtedy dostęp do strony internetowej zostanie zablokowany."),a.createElement("ul",null,a.createElement("li",null,"Przykładowy wpis w tej liście: ",a.createElement("span",{className:"colored-example-element"},"package"),". Jeśli odwiedzisz stronę internetową: https://www.npmjs.com/",a.createElement("span",{className:"colored-example-element"},"package"),"/gulp-babel wtedy dostęp do strony internetowej zostanie zablokowany"),a.createElement("li",null,"Przykładowy wpis w tej liście: ",a.createElement("span",{className:"colored-example-element"},"test"),". Jeśli odwiedzisz stronę internetową: https://www.google.com/search?q=",a.createElement("span",{className:"colored-example-element"},"test")," wtedy dostęp do strony internetowej zostanie zablokowany"),a.createElement("li",null,"Przykładowy wpis w tej liście: ",a.createElement("span",{className:"colored-example-element"},"q"),". Jeśli odwiedzisz stronę internetową: https://www.google.com/search?",a.createElement("span",{className:"colored-example-element"},"q"),"=test wtedy dostęp do strony internetowej zostanie zablokowany"),a.createElement("li",null,"Przykładowy wpis w tej liście: ",a.createElement("span",{className:"colored-example-element"},"hub.com"),". Jeśli odwiedzisz stronę internetową: https://www.git",a.createElement("span",{className:"colored-example-element"},"hub.com")," wtedy dostęp do strony internetowej zostanie zablokowany")))),blacklistedElementsIframes_html:a.createElement("span",{className:"box-content"},a.createElement("div",{className:"box-content--div"},a.createElement("p",{className:"element-p"},"Czarna lista nazw domen na których (stronach internetowych) maja zostać usunięte ramki (iframe)."),a.createElement("ul",null,a.createElement("li",null,"Przykładowy wpis w tej liście: ",a.createElement("span",{className:"colored-example-element"},"gazeta.pl"),". Jeśli odwiedzisz stronę internetową: https://www.",a.createElement("span",{className:"colored-example-element"},"gazeta.pl")," wtedy wszystkie ramki zostaną usunięte")))),_html:a.createElement("span",{className:"box-content"},a.createElement("div",{className:"box-content--div"},a.createElement("p",{className:"element-p"},"Czarna lista źródeł ramek domen, które maja zostać usunięte na każdej stronie."),a.createElement("ul",null,a.createElement("li",null,"Przykładowy wpis w tej liście: ",a.createElement("span",{className:"colored-example-element"},"https://dmp.theadex.com/r/"),". Jeśli odwiedzisz stronę internetową: https://www.gazeta.pl a załadowanej ramki (tag: iframe) źródło zawiera: ",a.createElement("span",{className:"colored-example-element"},"https://dmp.theadex.com/r/"),"230/1121/?c=4225222955758066709, wtedy ramka zostanie usunięta ze strony")))),blacklistedElementsIframesNames_html:a.createElement("span",{className:"box-content"},a.createElement("div",{className:"box-content--div"},a.createElement("p",{className:"element-p"},"Czarna lista nazew ramek, które maja zostać usunięte na każdej stronie."),a.createElement("ul",null,a.createElement("li",null,"Przykładowy wpis w tej liście: ",a.createElement("span",{className:"colored-example-element"},"googleads"),". Jeśli odwiedzisz stronę internetową: https://www.gazeta.pl a załadowanej ramki (tag: iframe) nazwa zawiera: ",a.createElement("span",{className:"colored-example-element"},"googleads"),"_sync, wtedy ramka zostanie usunięta ze strony")))),blacklistedElementsTrackers_html:a.createElement("span",{className:"box-content"},a.createElement("div",{className:"box-content--div"},a.createElement("p",{className:"element-p"},"Jeśli odwiedzisz witrynę internetową, a witryna wdrożyła śledzenie usługi i nazwa domeny jest zgodna z jedną z nazw domen z tej listy lub cała ścieżka adresu url jest zgodna z jednym z wpisów z tej listy to żądanie zostanie zablokowane."),a.createElement("ul",null,a.createElement("li",null,"Przykładowy wpis w tej liście: ",a.createElement("span",{className:"colored-example-element"},"cdn.mouseflow.com"),". Jeśli witryna połączy się z usługą zewnętrzną i adres zapytania zawiera nazwę domeny: https://",a.createElement("span",{className:"colored-example-element"},"cdn.mouseflow.com")," to zapytania zostanie zablokowane"),a.createElement("li",null,"Przykładowy wpis w tej liście: ",a.createElement("span",{className:"colored-example-element"},"rsrc.php/v3/y4/r/-PAXP-deijE.gif"),". Jeśli witryna połączy się z usługą zewnętrzną i adres zapytania zawiera nazwę domeny: https://static.xx.fbcdn.net/",a.createElement("span",{className:"colored-example-element"},"rsrc.php/v3/y4/r/-PAXP-deijE.gif")," to zapytania zostanie zablokowane")))),blacklistedElementsWords_html:a.createElement("span",{className:"box-content"},a.createElement("div",{className:"box-content--div"},a.createElement("p",{className:"element-p"},"Konteks ochrony tej aplikacji znajdzie każde słowo z tej czarnej listy, a każde słowo zostanie zastąpione przez „zamiennik” zdefiniowany w sekcji „Ustawienia ochrony ."),a.createElement("ul",null,a.createElement("li",null,'Na przykład, jeśli słowo "pistolet" znajduje się na tej czarnej liście, to jeśli odwiedzisz stronę internetową, słowo „pistolet” zostanie zastąpione.',a.createElement("br",null),'Przykład przed: "mam ',a.createElement("span",{className:"colored-example-element"},"pistolet"),' w szafie.".',a.createElement("br",null),'Przykład po: "mam ',a.createElement("span",{className:"colored-example-element"},"########"),' w szafie."'),a.createElement("li",null,'Na przykład, jeśli słowo "zakupy" znajduje się na tej czarnej liście, to jeśli odwiedzisz stronę internetową, słowo zakupy zostanie zastąpione.',a.createElement("br",null),'Przykład przed: "moje ',a.createElement("span",{className:"colored-example-element"},"zakupy"),' są w samochodzie.".',a.createElement("br",null),'Przykład po: "moje ',a.createElement("span",{className:"colored-example-element"},"######"),' są w samochodzie."')))),blacklistedElementsClass_html:a.createElement("span",{className:"box-content"},a.createElement("div",{className:"box-content--div"},a.createElement("p",{className:"element-p"},"Blokowanie tagów drzewa DOM na podstawie jego identifikatora: class."),a.createElement("ul",null,a.createElement("li",null,"Przykładowy wpis na tej liście: \"font-bold\". Jeśli odwiedzisz jakąkolwiek stronę internetową wtedy wsyzstkie elementy zawierające atrybut class o wartości 'font-bold' (np: ",'<span class="font-bold"> Text </span>',") zostaną usunięte ze strony internetowej.")))),blacklistedElementsHref_html:a.createElement("span",{className:"box-content"},a.createElement("div",{className:"box-content--div"},a.createElement("p",{className:"element-p"},'Blokowanie tagów "A" drzewa DOM na podstawie jego identifikatora: href.'),a.createElement("ul",null,a.createElement("li",null,'Przykładowy wpis na tej liście: "redirect?". Jeśli odwiedzisz jakąkolwiek stronę internetową wtedy wsyzstkie elementy drzewa DOM ',"<a>"," zawierające atrybut href o wartości 'redirect?' (np: ",'<a href="https://xv345bhFD.com/redirect?client=http://example.com">link</a>',") zostaną usunięte ze strony internetowej.")))),blacklistedElementsId_html:a.createElement("span",{className:"box-content"},a.createElement("div",{className:"box-content--div"},a.createElement("p",{className:"element-p"},"Blokowanie tagów drzewa DOM na podstawie jego identifikatora: id."),a.createElement("ul",null,a.createElement("li",null,"Przykładowy wpis na tej liście: \"extern-logo\". Jeśli odwiedzisz jakąkolwiek stronę internetową wtedy wsyzstkie elementy zawierające atrybut id o wartości 'extern-logo' (np: ",'<img id="extern-logo"/>',") zostaną usunięte ze strony internetowej.")))),whitelistedElementsDomains_html:a.createElement("span",{className:"box-content"},a.createElement("div",{className:"box-content--div"},a.createElement("p",{className:"element-p"},"Nie rób nic dla wybranych nazw domen."),a.createElement("ul",null,a.createElement("li",null,"Przykładowy wpis w tej liście: ",a.createElement("span",{className:"colored-example-element"},"google.com"),". Jeśli odwiedzisz stronę internetową: https://www.",a.createElement("span",{className:"colored-example-element"},"google.com")," nie są wykonywane żadne procesy ani nie jesteś chroniony"),a.createElement("li",null,"Przykładowy wpis w tej liście: ",a.createElement("span",{className:"colored-example-element"},"npmjs.com"),". Jeśli odwiedzisz stronę internetową: https://www.",a.createElement("span",{className:"colored-example-element"},"npmjs.com"),"/package/gulp-babel, nie są wykonywane żadne procesy ani nie jesteś chroniony")))),example:"Przykłady",imagesPopupTitle:"Znaleziono zdjęcia",imagesNoData:"Brak poprawnych zdjęć",imagesNoDataFavourites:"Brak zapisanych zdjęć",imagesLoadingTabs:"Ładowanie aktywnych okienek...",current_tabs_title:"Aktualne okna",filter:"Filtruj",filter_all:"Wszystkie",itemsPerSite:"Co stronę",itemsPerSiteSuffix:"zdjęć",page:"Strona",of:"z",images:"zdjęć",current_favourites_images:"Tymczasem zapisane zdjęcia",open_in_new_tab:"Otwórz w nowym okientku",download:"Pobierz",downloadSmall:"pobierz",delete_all:"Usuń wszysko",notLoggedInImagesFavouritesAdd:"Tylko zalogowani użytkownicy mogą dodawać zdjęcia do listy ulubionych",notLoggedInImagesFavouritesManage:"Tylko zalogowani użytkownicy mogą zarządzać listą ulubionych",tabsNoData:"Brak poprawnych okienek",imagesLoadingData:"Ładowanie zdjęć...",infoItemAdded:"Wpis został dodany do listy",infoItemRemoved:"Wpis został usunięty z listy",infoArrayIs0:"Lista jest pusta, więc nie można usunąć żadnego elementu",infoIncorrectValue:"Wartość jest nieprawidłowa",infoItemInList:"Wpis już istnieje na liście",country:"Kraj",countriesNotFoundText:"Przepraszam, nie znalazłem takiego kraju",dropText:"Upuść tutaj",error:"Błąd",searchPlaceholder:"Szukaj...",search:"Szukaj",list:"Lista",addPlaceholder:"Wartość...",addNewEntryTitle:"Dodaj nowy wpis",no_data_list:"Brak wpisów",no_data_list_search:"Brak wyników szukania",loading:"Ładowanie...",home_security_1:"Blokowanie niebezpiecznych ciasteczek",home_security_2:"Blokowanie niebezpiecznych zapytan",home_security_3:"Blokowanie niebezpiecznych usług śledczych",home_security_4:"Blokowanie niebezpiecznych stron pornograficznych",home_security_5:"Blokowanie niebezpiecznych słow",home_security_6:"Blokowanie niebezpiecznych zawartości stron internetowych",upload:"Przeciągnij i upuść plik json NinjaProtecta tutaj...",export:"Eksport",exportAll:"globalnych list i ustawien",dangerCount:"Chronię cię!",dangerCountPrefix:"Osiągnięto maksymalna liczbę niebezpiecznych elementów, która jest obecnie",dangerUrlPrefix:"Adres strony albo część adresu strony internetowej jest niebezpieczny i znajduje się w jednej z czarnej listy",domain:"Nazwa domena bez www. Na przykład: react-divcreator.cba.pl",tag:"Nazwa tagu. Na przykład: div",languages:"Języki"};t.default=s},function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var o=r(n(390));t.default=function(){var e=localStorage.getItem("applanguage")?localStorage.getItem("applanguage"):"en";return o.default.includes(e)||(e="en"),e.toLowerCase()}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.default=["de","en","pl"]},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),l=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&i(t,e,n);return a(t,e),t};Object.defineProperty(t,"__esModule",{value:!0});var s=l(n(1)),c=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return o(t,e),t.prototype.render=function(){return s.createElement("div",{className:"ContentBody Home"})},t}(s.Component);t.default=c},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),l=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&i(t,e,n);return a(t,e),t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=l(n(1)),u=s(n(11)),d=s(n(393)),f=function(e){function t(t){return e.call(this,t)||this}return o(t,e),t.prototype.render=function(){return c.createElement(u.default,{loginRequired:!1,contentData:c.createElement(d.default,null)})},t}(c.Component);t.default=f},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),l=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&i(t,e,n);return a(t,e),t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=l(n(1)),u=l(n(80)),d=s(n(9)),f=s(n(54)),p=s(n(32)),h=s(n(110)),g=n(27),m=function(e){function t(t){var n=e.call(this,t)||this;return n.saveToFileJson=n.saveToFileJson.bind(n),n.translations=d.default(),n}return o(t,e),t.prototype.saveToFileJson=function(e){void 0===e&&(e="all"),browser.runtime.sendMessage({action:"export-dashboard",keyName:e}).then((function(e){try{var t=new Blob([JSON.stringify(e)],{type:"application/json;charset=utf-8"});u.saveAs(t,"NinjaProtect-settings.json")}catch(e){f.default("Error while creating Blob file. Error message: "+e+".",-1)}})).catch((function(){f.default("Error while exporting data",-1)}))},t.prototype.render=function(){var e=this,t=h.default(),n={backgroundImage:"url(https://chat-manager.j.pl/public/images/eagle-1245681_1920.jpg"};return c.default.createElement("div",{className:"Export"},c.default.createElement("div",{key:p.default(),className:"single-box single-box-11 box-root",onClick:function(t){return e.saveToFileJson("all")}},c.default.createElement("h1",{className:"h1-title"},this.translations.export+" "+this.translations.exportAll),c.default.createElement("div",{className:"image"},c.default.createElement("img",{alt:"icon",src:g.addonRoot()+"/logo/shield-128.png"}))),t.map((function(t,r){return n={backgroundImage:"url(https://chat-manager.j.pl/public/images/"+t.img+")"},c.default.createElement("div",{key:p.default(),className:"single-box single-box-"+r,onClick:function(n){return e.saveToFileJson(t.name)}},c.default.createElement("h1",{className:"h1-title"},e.translations.export+": "+t.translated),c.default.createElement("div",{className:"image",style:n}))})))},t}(c.Component);t.default=m},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),l=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&i(t,e,n);return a(t,e),t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=l(n(1)),u=s(n(11)),d=s(n(395)),f=function(e){function t(t){return e.call(this,t)||this}return o(t,e),t.prototype.render=function(){return c.createElement(u.default,{loginRequired:!1,contentData:c.createElement(d.default,null)})},t}(c.Component);t.default=f},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),l=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&i(t,e,n);return a(t,e),t},s=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(o,i){function a(e){try{s(r.next(e))}catch(e){i(e)}}function l(e){try{s(r.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,l)}s((r=r.apply(e,t||[])).next())}))},c=this&&this.__generator||function(e,t){var n,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function l(i){return function(l){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!(o=a.trys,(o=o.length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=t.call(e,a)}catch(e){i=[6,e],r=0}finally{n=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,l])}}},u=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var d=l(n(1)),f=u(n(9)),p=u(n(54)),h=u(n(155)),g=n(27),m=function(e){function t(t){var n=e.call(this,t)||this;return n.handleFile=n.handleFile.bind(n),n.onDragEnter=n.onDragEnter.bind(n),n.onDragLeave=n.onDragLeave.bind(n),n.onDragOver=n.onDragOver.bind(n),n.handleDrop=n.handleDrop.bind(n),n.state={data:"",showLoading:!1,dragging:!1},n.translations=f.default(),n}return o(t,e),t.prototype.componentDidMount=function(){this.dragCounter=0},t.prototype.handleFile=function(e){var t=this,n=void 0,r=void 0;this.setState({messages:[],showLoading:!0},(function(){setTimeout((function(){try{var o=new FileReader;if(window.File&&window.FileReader&&window.FileList&&window.Blob){var i=e[0];i.size||(n="Empty file are not allowed."),i||(n="Could not upload file: File not accessable."),i.name||(n="Could not upload file: Filename has to be not empty."),"application/json"!==i.type&&(n="Only previously exported NinjaProtect.json (settings and lists) file are allowed to import."),o.addEventListener("load",(function(e){return s(t,void 0,void 0,(function(){var t,o=this;return c(this,(function(i){switch(i.label){case 0:if(e.target||(n="Could not upload file: Filecontent is not available."),e.target.result||(n="Could not upload file: Filecontent is empty."),"string"!=typeof e.target.result&&(n="Could not upload file: Filecontent is not the original filecontent."),n)return p.default(n,-1),[2,this.setState({showLoading:!1})];t=e.target.result,i.label=1;case 1:return i.trys.push([1,5,,6]),typeof{}!=typeof(t=JSON.parse(t))?[3,3]:[4,browser.runtime.sendMessage({action:"import",value:t}).then((function(e){return e.error&&(n="Pleas don`t change the original file content. Download the original file and try again."),e.error||(r="Imported "+e.count+" settings"),n?(p.default(n,-1),o.setState({showLoading:!1})):r?(p.default(r,0),o.setState({showLoading:!1})):void 0})).catch((function(e){n="General process error. Incorrect filetype.",o.setState({showLoading:!1})}))];case 2:return i.sent(),[3,4];case 3:n="Could not upload file: Filecontent is not the original filecontent.",i.label=4;case 4:return[3,6];case 5:return i.sent(),n="Could not upload file: General error.",[3,6];case 6:return[2]}}))}))})),o.readAsBinaryString(i)}else n="File uploading not available on this browser version."}catch(e){n="General process error. Incorrect filetype."}n&&(p.default(n,-1),t.setState({showLoading:!1})),r&&(p.default(r,0),t.setState({showLoading:!1}))}),300)}))},t.prototype.onDragOver=function(e){e.preventDefault(),e.stopPropagation()},t.prototype.onDragEnter=function(e){e.preventDefault(),e.stopPropagation(),this.dragCounter++,e.dataTransfer.items&&e.dataTransfer.items.length>0&&!this.state.dragging&&this.setState({dragging:!0})},t.prototype.onDragLeave=function(e){e.preventDefault(),e.stopPropagation(),this.dragCounter--,0>=this.dragCounter&&this.setState({dragging:!1})},t.prototype.handleDrop=function(e){e.preventDefault(),e.stopPropagation(),e.dataTransfer.files&&e.dataTransfer.files.length>0&&(this.handleFile(e.dataTransfer.files),this.dragCounter=0),this.setState({dragging:!1})},t.prototype.render=function(){var e=this.state,t=e.dragging,n=e.showLoading;return d.createElement("div",{className:"Import"},n&&d.createElement(h.default,null),d.createElement("div",{className:"upload-box",onDragEnter:this.onDragEnter,onDragLeave:this.onDragLeave,onDragOver:this.onDragOver,onDrop:this.handleDrop},t&&d.createElement("div",{className:"drag-drop"},d.createElement("img",{src:g.addonRoot()+"/logo/shield-128.png",alt:"animation"})),!t&&d.createElement("p",null,this.translations.upload)))},t}(d.Component);t.default=m},function(e,t,n){(t=n(79)(!1)).push([e.i,'.bc-a{background-color:rgba(244,69,89,0.1)}.bc-b{background-color:rgba(244,69,89,0.1)}.bc-c{background-color:rgba(244,69,89,0.1)}.bc-d{background-color:rgba(81,45,168,0.1)}.bc-e{background-color:rgba(244,69,89,0.1)}.bc-f{background-color:rgba(244,69,89,0.1)}.bc-g{background-color:rgba(244,69,89,0.1)}.bc-h{background-color:rgba(244,69,89,0.1)}.bc-i{background-color:rgba(244,69,89,0.1)}.bc-j{background-color:rgba(244,69,89,0.1)}.bc-k{background-color:rgba(244,69,89,0.1)}.bc-l{background-color:rgba(244,69,89,0.1)}.bc-m{background-color:rgba(244,69,89,0.1)}.bc-n{background-color:rgba(244,69,89,0.1)}.bc-o{background-color:rgba(244,69,89,0.1)}.bc-p{background-color:rgba(244,69,89,0.1)}.bc-q{background-color:rgba(244,69,89,0.1)}.bc-r{background-color:rgba(244,69,89,0.1)}.bc-s{background-color:rgba(244,69,89,0.1)}.bc-t{background-color:rgba(244,69,89,0.1)}.bc-u{background-color:rgba(244,69,89,0.1)}.bc-v{background-color:rgba(244,69,89,0.1)}.bc-w{background-color:rgba(71,180,118,0.1)}.bc-x{background-color:rgba(244,69,89,0.1)}.bc-y{background-color:rgba(244,69,89,0.1)}.bc-z{background-color:rgba(244,69,89,0.1)}.w-100{width:100%}.block{display:block}.d-none{display:none}.flex{display:flex}.flex-row{flex-direction:row}.flex-column{flex-direction:column}.flex-start{justify-content:flex-start}.flex-space-around{justify-content:space-around}.flex-space-between{justify-content:space-between}.relative{position:relative}.font-input{font-weight:400;font-size:1rem;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.ff-title{font-family:Roboto,-apple-system,system-ui,BlinkMacSystemFont,Segoe UI,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,Arial,sans-serif}.h1-title{color:#202124;font-size:24px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.text-center{text-align:center}.ff-roboto{font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.buttons-group{box-sizing:border-box;padding:10px;max-width:90%;margin:20px 5%}.buttons-group-delete-account{box-sizing:border-box;padding:10px;max-width:90%;margin:0 5%}.yellow{color:#ffeb3b}.red{color:#f44559}.green{color:#47b476}.lime{color:#C3FAE8}.dodgerblue{color:#1873CC}.little-gray{color:rgba(69,69,69,0.7)}.action-icon{color:#313435;opacity:0.8}.action-icon:hover{cursor:pointer}.py-2{padding:20px 0}.my-2{margin:20px 0}.my-0{margin:0px 0 !important}.no-padding{padding:0px !important}.mr-2{margin-right:20px}h1,.h1{color:rgba(0,0,0,0.77)}.h1-list{color:#202124;font-size:21px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif;min-height:40px;line-height:40px;white-space:nowrap;word-wrap:none;overflow:hidden;text-overflow:ellipsis;margin:10px !important}.single-entry,.popup-box-icon{color:#4f4f4f !important}.text-center{text-align:center}.icon-chat{color:rgba(71,180,118,0.7) !important}.icon-security{color:rgba(228,132,252,0.33) !important}.icon-images{color:rgba(30,144,255,0.8) !important}.icon-messages{color:#7a7a7a !important}.color-red,.icon-notifications{color:rgba(244,69,89,0.7) !important}.color-green,.icon-iframes{color:rgba(71,180,118,0.7) !important}.icon-cookies{color:#DEB887 !important}@keyframes lds-dual-ring{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}.FullScreenLoading{position:fixed;top:0;left:0;z-index:9999;height:100vh;width:100vw;overflow:hidden;background-color:rgba(255,255,255,0.55)}.FullScreenLoading .spinner{position:absolute;top:calc(50vh - 150px);left:calc(50vw - 75px);z-index:9999;display:flex;height:150px;width:150px;justify-content:space-around;background-color:transparent;text-align:center;display:inline-block}.FullScreenLoading .spinner:after{content:" ";position:absolute;top:0;display:block;width:114px;height:114px;margin:21px;border-radius:50%;border:11px solid #cef;border-color:rgba(228,132,252,0.33) rgba(181,171,253,0.33) rgba(228,132,252,0.33) rgba(181,171,253,0.33);animation:lds-dual-ring 465ms linear infinite}.FullScreenLoadingMin{position:absolute;height:100%;width:100%;top:0;left:0;z-index:9999;overflow:hidden;background-color:rgba(255,255,255,0.55)}.FullScreenLoadingMin .spinner{position:absolute;top:10%;left:calc(50% - 75px);z-index:9999;display:flex;height:150px;width:150px;justify-content:space-around;background-color:transparent;text-align:center;display:inline-block}.FullScreenLoadingMin .spinner:after{content:" ";position:absolute;top:0;display:block;width:114px;height:114px;margin:21px;border-radius:50%;border:11px solid #cef;border-color:rgba(228,132,252,0.33) rgba(181,171,253,0.33) rgba(228,132,252,0.33) rgba(181,171,253,0.33);animation:lds-dual-ring 465ms linear infinite}.LoadingBoxTop{position:fixed;top:2px;left:calc(50% - 50px);width:100px;height:30px;line-height:20px;box-sizing:border-box;padding:5px 10px;color:#fdb734;background-color:#323232;font-size:0.87rem;text-align:center;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;word-wrap:none;border-radius:2px}\n',""]),e.exports=t},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),l=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&i(t,e,n);return a(t,e),t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=l(n(1)),u=s(n(155)),d=s(n(398)),f=s(n(9)),p=s(n(399)),h=function(e){function t(t){var n=e.call(this,t)||this;n.getDataFromContentScript=n.getDataFromContentScript.bind(n),n.translations=f.default();var r=new Date;r.getFullYear(),r.getMonth(),r.getMonth(),r.getDate(),r.getDate();return n.state={minifiedSecondSideBar:!0,isMinified:!0,sidebarMin:!0,contentMin:!0,minifiedSaver:!0,language:"en",activeTab:{},contentData:n.props.contentData?n.props.contentData:"",loginRequired:n.props.loginRequired,redirectAfterLogin:n.props.redirectAfterLogin?n.props.redirectAfterLogin:"",animationLoading:!1,total:0,currentPage:0,itemsPerSite:5,globalCount:0,statistic:{},statisticDb:[],removeNode:!1},n}return o(t,e),t.prototype.componentDidMount=function(){this.getDataFromContentScript()},t.prototype.getDataFromContentScript=function(){var e=this;(localStorage.getItem("data")?localStorage.getItem("data"):null)&&browser.runtime.sendMessage({action:"get-popup-security-data"}).then((function(t){var n=t.statistic;e.setState({statistic:n,removeNode:!0},e.generateCanvasData)})).catch((function(e){}))},t.prototype.generateCanvasData=function(){var e=this,t=["timestamp","day_name"],n=this.state,r=n.statistic,o=n.currentPage,i=n.itemsPerSite,a=Object.keys(r),l=[];a.map((function(e){l.push({data:r[e],date:e,day_name:r[e].day_name})}));var s=Object.keys(r).length,c=[],u=0,d=o*i,f=d+i;l.sort((function(e,t){return e.data.timestamp<t.data.timestamp?1:e.data.timestamp>t.data.timestamp?-1:0})),(l=(l=l.slice(d,f)).reverse()).map((function(e){var n=0,r=e.data,o=e.day_name;Object.keys(r).map((function(e){t.includes(e)||(n+=r[e],u+=r[e])}));var i=e.date;c.push("🕛  "+o+"    📅 "+i+"    🛡 "+n)}));var h=[];l.map((function(e){var t=e.data,n=t.iframe?t.iframe:0;h.push(n)}));var g=[];l.map((function(e){var t=e.data,n=t.urlInclude?t.urlInclude:0;g.push(n)}));var m=[];l.map((function(e){var t=e.data,n=t.cookie?t.cookie:0;m.push(n)}));var b=[];l.map((function(e){var t=e.data,n=t.word?t.word:0;b.push(n)}));var v=[];l.map((function(e){var t=e.data,n=(t.url?t.url:0)+(t.tracker?t.tracker:0);v.push(n)}));var y=[];l.map((function(e){var t=e.data,n=t.domain?t.domain:0;y.push(n)}));var x=[];l.map((function(e){var t=e.data,n=(t.id?t.id:0)+(t.href?t.href:0)+(t.class?t.class:0);x.push(n)}));var w={labels:c,datasets:[{label:this.translations.popup_blocked_iframes,backgroundColor:"rgba(255, 99, 132, 0.7)",data:h,fill:!1},{label:this.translations.popup_blocked_requests,backgroundColor:"rgba(255, 159, 64, 0.7)",data:g,fill:!1},{label:this.translations.popup_blocked_cookies,backgroundColor:"rgba(255, 205, 86, 0.7)",data:m,fill:!1},{label:this.translations.popup_blocked_words,backgroundColor:"rgba(75, 192, 192, 0.7)",data:b,fill:!1},{label:this.translations.popup_blocked_trackers,backgroundColor:"rgba(54, 162, 235, 0.7)",data:v,fill:!1},{label:this.translations.popup_blocked_websites,backgroundColor:"rgba(153, 102, 255, 0.7)",data:y,fill:!1},{label:this.translations.popup_blocked_dom,backgroundColor:"rgba(201, 203, 207, 0.7)",data:x,fill:!1}],borderColor:["rgb(255, 99, 132)","rgb(255, 159, 64)","rgb(255, 205, 86)","rgb(75, 192, 192)","rgb(54, 162, 235)","rgb(153, 102, 255)","rgb(201, 203, 207)"],borderWidth:1};this.setState({total:u,globalCount:s,animationLoading:!1,removeNode:!1},(function(){if(e.canvasNode){var t=e.canvasNode.getContext("2d");new p.default(t,{type:"bar",data:w,options:{label:{display:!0,text:"Total blocked elements"},legend:{display:!0},tooltips:{mode:"index",intersect:!1},responsive:!0,scales:{xAxes:[{stacked:!0}],yAxes:[{stacked:!0,ticks:{beginAtZero:!0}}]}}})}}))},t.prototype.changePagePrev=function(){0!==this.state.currentPage&&this.setState({currentPage:this.state.currentPage-1,animationLoading:!0},this.getDataFromContentScript)},t.prototype.changePageNext=function(){var e=this.state,t=e.itemsPerSite,n=e.currentPage;t*++n<e.globalCount&&this.setState({currentPage:this.state.currentPage+1,animationLoading:!0},this.getDataFromContentScript)},t.prototype.getPaging=function(){var e=this,t=this.state,n=t.itemsPerSite,r=t.currentPage,o=t.globalCount,i=r;return i++,c.createElement("div",{className:"paging"},c.createElement("span",{className:"buttons"},c.createElement("i",{onClick:function(t){return e.changePagePrev()},className:0!==r?"fas fa-angle-left previous-button":"fas fa-angle-left previous-button deactivated"}),c.createElement("i",{onClick:function(t){return e.changePageNext()},className:n*i<o?"fas fa-angle-right next-button":"fas fa-angle-right next-button deactivated"})))},t.prototype.render=function(){var e=this,t=this.state,n=t.animationLoading,r=t.totalAll,o=t.removeNode;return c.createElement("div",{ref:function(t){return e.contentNode=t},className:"ContentBody ContentStaticHeight Statistic"},n&&c.createElement(u.default,null),c.createElement("div",{className:"code-box-holder"},c.createElement("h1",{className:"ff-title"},""+this.translations.menu_text_statistic),0==r&&c.createElement(d.default,null),this.getPaging(),!o&&c.createElement("div",{className:0==r?"canvas d-none":"canvas"},c.createElement("canvas",{key:"myChart",id:"myChart",ref:function(t){return e.canvasNode=t}}))))},t}(c.Component);t.default=h},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),l=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&i(t,e,n);return a(t,e),t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=l(n(1)),u=s(n(9)),d=s(n(32)),f=n(27),p=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return o(t,e),t.prototype.render=function(){var e=u.default();return c.createElement("div",{key:d.default(),className:"Ninja"},c.createElement("img",{alt:"image",src:f.addonRoot()+"logo/shield-128.png"}),c.createElement("p",{className:"h1-title ff-title text-center"},e.NoDataBlockedItemsToday))},t}(c.Component);t.default=p},function(e,t,n){
/*!
 * Chart.js v2.9.3
 * https://www.chartjs.org
 * (c) 2019 Chart.js Contributors
 * Released under the MIT License
 */
e.exports=function(e){"use strict";e=e&&e.hasOwnProperty("default")?e.default:e;var t={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]},n=function(e,t){return e(t={exports:{}},t.exports),t.exports}((function(e){var n={};for(var r in t)t.hasOwnProperty(r)&&(n[t[r]]=r);var o=e.exports={rgb:{channels:3,labels:"rgb"},hsl:{channels:3,labels:"hsl"},hsv:{channels:3,labels:"hsv"},hwb:{channels:3,labels:"hwb"},cmyk:{channels:4,labels:"cmyk"},xyz:{channels:3,labels:"xyz"},lab:{channels:3,labels:"lab"},lch:{channels:3,labels:"lch"},hex:{channels:1,labels:["hex"]},keyword:{channels:1,labels:["keyword"]},ansi16:{channels:1,labels:["ansi16"]},ansi256:{channels:1,labels:["ansi256"]},hcg:{channels:3,labels:["h","c","g"]},apple:{channels:3,labels:["r16","g16","b16"]},gray:{channels:1,labels:["gray"]}};for(var i in o)if(o.hasOwnProperty(i)){if(!("channels"in o[i]))throw new Error("missing channels property: "+i);if(!("labels"in o[i]))throw new Error("missing channel labels property: "+i);if(o[i].labels.length!==o[i].channels)throw new Error("channel and label counts mismatch: "+i);var a=o[i].channels,l=o[i].labels;delete o[i].channels,delete o[i].labels,Object.defineProperty(o[i],"channels",{value:a}),Object.defineProperty(o[i],"labels",{value:l})}o.rgb.hsl=function(e){var t,n,r=e[0]/255,o=e[1]/255,i=e[2]/255,a=Math.min(r,o,i),l=Math.max(r,o,i),s=l-a;return l===a?t=0:r===l?t=(o-i)/s:o===l?t=2+(i-r)/s:i===l&&(t=4+(r-o)/s),(t=Math.min(60*t,360))<0&&(t+=360),n=(a+l)/2,[t,100*(l===a?0:n<=.5?s/(l+a):s/(2-l-a)),100*n]},o.rgb.hsv=function(e){var t,n,r,o,i,a=e[0]/255,l=e[1]/255,s=e[2]/255,c=Math.max(a,l,s),u=c-Math.min(a,l,s),d=function(e){return(c-e)/6/u+.5};return 0===u?o=i=0:(i=u/c,t=d(a),n=d(l),r=d(s),a===c?o=r-n:l===c?o=1/3+t-r:s===c&&(o=2/3+n-t),o<0?o+=1:o>1&&(o-=1)),[360*o,100*i,100*c]},o.rgb.hwb=function(e){var t=e[0],n=e[1],r=e[2];return[o.rgb.hsl(e)[0],1/255*Math.min(t,Math.min(n,r))*100,100*(r=1-1/255*Math.max(t,Math.max(n,r)))]},o.rgb.cmyk=function(e){var t,n=e[0]/255,r=e[1]/255,o=e[2]/255;return[100*((1-n-(t=Math.min(1-n,1-r,1-o)))/(1-t)||0),100*((1-r-t)/(1-t)||0),100*((1-o-t)/(1-t)||0),100*t]},o.rgb.keyword=function(e){var r=n[e];if(r)return r;var o,i,a,l=1/0;for(var s in t)if(t.hasOwnProperty(s)){var c=t[s],u=(i=e,a=c,Math.pow(i[0]-a[0],2)+Math.pow(i[1]-a[1],2)+Math.pow(i[2]-a[2],2));u<l&&(l=u,o=s)}return o},o.keyword.rgb=function(e){return t[e]},o.rgb.xyz=function(e){var t=e[0]/255,n=e[1]/255,r=e[2]/255;return[100*(.4124*(t=t>.04045?Math.pow((t+.055)/1.055,2.4):t/12.92)+.3576*(n=n>.04045?Math.pow((n+.055)/1.055,2.4):n/12.92)+.1805*(r=r>.04045?Math.pow((r+.055)/1.055,2.4):r/12.92)),100*(.2126*t+.7152*n+.0722*r),100*(.0193*t+.1192*n+.9505*r)]},o.rgb.lab=function(e){var t=o.rgb.xyz(e),n=t[0],r=t[1],i=t[2];return r/=100,i/=108.883,n=(n/=95.047)>.008856?Math.pow(n,1/3):7.787*n+16/116,[116*(r=r>.008856?Math.pow(r,1/3):7.787*r+16/116)-16,500*(n-r),200*(r-(i=i>.008856?Math.pow(i,1/3):7.787*i+16/116))]},o.hsl.rgb=function(e){var t,n,r,o,i,a=e[0]/360,l=e[1]/100,s=e[2]/100;if(0===l)return[i=255*s,i,i];t=2*s-(n=s<.5?s*(1+l):s+l-s*l),o=[0,0,0];for(var c=0;c<3;c++)(r=a+1/3*-(c-1))<0&&r++,r>1&&r--,i=6*r<1?t+6*(n-t)*r:2*r<1?n:3*r<2?t+(n-t)*(2/3-r)*6:t,o[c]=255*i;return o},o.hsl.hsv=function(e){var t=e[0],n=e[1]/100,r=e[2]/100,o=n,i=Math.max(r,.01);return n*=(r*=2)<=1?r:2-r,o*=i<=1?i:2-i,[t,100*(0===r?2*o/(i+o):2*n/(r+n)),(r+n)/2*100]},o.hsv.rgb=function(e){var t=e[0]/60,n=e[1]/100,r=e[2]/100,o=Math.floor(t)%6,i=t-Math.floor(t),a=255*r*(1-n),l=255*r*(1-n*i),s=255*r*(1-n*(1-i));switch(r*=255,o){case 0:return[r,s,a];case 1:return[l,r,a];case 2:return[a,r,s];case 3:return[a,l,r];case 4:return[s,a,r];case 5:return[r,a,l]}},o.hsv.hsl=function(e){var t,n,r,o=e[0],i=e[1]/100,a=e[2]/100,l=Math.max(a,.01);return r=(2-i)*a,n=i*l,[o,100*(n=(n/=(t=(2-i)*l)<=1?t:2-t)||0),100*(r/=2)]},o.hwb.rgb=function(e){var t,n,r,o,i,a,l,s=e[0]/360,c=e[1]/100,u=e[2]/100,d=c+u;switch(d>1&&(c/=d,u/=d),r=6*s-(t=Math.floor(6*s)),0!=(1&t)&&(r=1-r),o=c+r*((n=1-u)-c),t){default:case 6:case 0:i=n,a=o,l=c;break;case 1:i=o,a=n,l=c;break;case 2:i=c,a=n,l=o;break;case 3:i=c,a=o,l=n;break;case 4:i=o,a=c,l=n;break;case 5:i=n,a=c,l=o}return[255*i,255*a,255*l]},o.cmyk.rgb=function(e){var t=e[0]/100,n=e[1]/100,r=e[2]/100,o=e[3]/100;return[255*(1-Math.min(1,t*(1-o)+o)),255*(1-Math.min(1,n*(1-o)+o)),255*(1-Math.min(1,r*(1-o)+o))]},o.xyz.rgb=function(e){var t,n,r,o=e[0]/100,i=e[1]/100,a=e[2]/100;return n=-.9689*o+1.8758*i+.0415*a,r=.0557*o+-.204*i+1.057*a,t=(t=3.2406*o+-1.5372*i+-.4986*a)>.0031308?1.055*Math.pow(t,1/2.4)-.055:12.92*t,n=n>.0031308?1.055*Math.pow(n,1/2.4)-.055:12.92*n,r=r>.0031308?1.055*Math.pow(r,1/2.4)-.055:12.92*r,[255*(t=Math.min(Math.max(0,t),1)),255*(n=Math.min(Math.max(0,n),1)),255*(r=Math.min(Math.max(0,r),1))]},o.xyz.lab=function(e){var t=e[0],n=e[1],r=e[2];return n/=100,r/=108.883,t=(t/=95.047)>.008856?Math.pow(t,1/3):7.787*t+16/116,[116*(n=n>.008856?Math.pow(n,1/3):7.787*n+16/116)-16,500*(t-n),200*(n-(r=r>.008856?Math.pow(r,1/3):7.787*r+16/116))]},o.lab.xyz=function(e){var t,n,r,o=e[0];t=e[1]/500+(n=(o+16)/116),r=n-e[2]/200;var i=Math.pow(n,3),a=Math.pow(t,3),l=Math.pow(r,3);return n=i>.008856?i:(n-16/116)/7.787,t=a>.008856?a:(t-16/116)/7.787,r=l>.008856?l:(r-16/116)/7.787,[t*=95.047,n*=100,r*=108.883]},o.lab.lch=function(e){var t,n=e[0],r=e[1],o=e[2];return(t=360*Math.atan2(o,r)/2/Math.PI)<0&&(t+=360),[n,Math.sqrt(r*r+o*o),t]},o.lch.lab=function(e){var t,n=e[0],r=e[1];return t=e[2]/360*2*Math.PI,[n,r*Math.cos(t),r*Math.sin(t)]},o.rgb.ansi16=function(e){var t=e[0],n=e[1],r=e[2],i=1 in arguments?arguments[1]:o.rgb.hsv(e)[2];if(0===(i=Math.round(i/50)))return 30;var a=30+(Math.round(r/255)<<2|Math.round(n/255)<<1|Math.round(t/255));return 2===i&&(a+=60),a},o.hsv.ansi16=function(e){return o.rgb.ansi16(o.hsv.rgb(e),e[2])},o.rgb.ansi256=function(e){var t=e[0],n=e[1],r=e[2];return t===n&&n===r?t<8?16:t>248?231:Math.round((t-8)/247*24)+232:16+36*Math.round(t/255*5)+6*Math.round(n/255*5)+Math.round(r/255*5)},o.ansi16.rgb=function(e){var t=e%10;if(0===t||7===t)return e>50&&(t+=3.5),[t=t/10.5*255,t,t];var n=.5*(1+~~(e>50));return[(1&t)*n*255,(t>>1&1)*n*255,(t>>2&1)*n*255]},o.ansi256.rgb=function(e){if(e>=232){var t=10*(e-232)+8;return[t,t,t]}var n;return e-=16,[Math.floor(e/36)/5*255,Math.floor((n=e%36)/6)/5*255,n%6/5*255]},o.rgb.hex=function(e){var t=(((255&Math.round(e[0]))<<16)+((255&Math.round(e[1]))<<8)+(255&Math.round(e[2]))).toString(16).toUpperCase();return"000000".substring(t.length)+t},o.hex.rgb=function(e){var t=e.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);if(!t)return[0,0,0];var n=t[0];3===t[0].length&&(n=n.split("").map((function(e){return e+e})).join(""));var r=parseInt(n,16);return[r>>16&255,r>>8&255,255&r]},o.rgb.hcg=function(e){var t,n=e[0]/255,r=e[1]/255,o=e[2]/255,i=Math.max(Math.max(n,r),o),a=Math.min(Math.min(n,r),o),l=i-a;return t=l<=0?0:i===n?(r-o)/l%6:i===r?2+(o-n)/l:4+(n-r)/l+4,t/=6,[360*(t%=1),100*l,100*(l<1?a/(1-l):0)]},o.hsl.hcg=function(e){var t=e[1]/100,n=e[2]/100,r=1,o=0;return(r=n<.5?2*t*n:2*t*(1-n))<1&&(o=(n-.5*r)/(1-r)),[e[0],100*r,100*o]},o.hsv.hcg=function(e){var t=e[1]/100,n=e[2]/100,r=t*n,o=0;return r<1&&(o=(n-r)/(1-r)),[e[0],100*r,100*o]},o.hcg.rgb=function(e){var t=e[0]/360,n=e[1]/100,r=e[2]/100;if(0===n)return[255*r,255*r,255*r];var o,i=[0,0,0],a=t%1*6,l=a%1,s=1-l;switch(Math.floor(a)){case 0:i[0]=1,i[1]=l,i[2]=0;break;case 1:i[0]=s,i[1]=1,i[2]=0;break;case 2:i[0]=0,i[1]=1,i[2]=l;break;case 3:i[0]=0,i[1]=s,i[2]=1;break;case 4:i[0]=l,i[1]=0,i[2]=1;break;default:i[0]=1,i[1]=0,i[2]=s}return o=(1-n)*r,[255*(n*i[0]+o),255*(n*i[1]+o),255*(n*i[2]+o)]},o.hcg.hsv=function(e){var t=e[1]/100,n=t+e[2]/100*(1-t),r=0;return n>0&&(r=t/n),[e[0],100*r,100*n]},o.hcg.hsl=function(e){var t=e[1]/100,n=e[2]/100*(1-t)+.5*t,r=0;return n>0&&n<.5?r=t/(2*n):n>=.5&&n<1&&(r=t/(2*(1-n))),[e[0],100*r,100*n]},o.hcg.hwb=function(e){var t=e[1]/100,n=t+e[2]/100*(1-t);return[e[0],100*(n-t),100*(1-n)]},o.hwb.hcg=function(e){var t=e[1]/100,n=1-e[2]/100,r=n-t,o=0;return r<1&&(o=(n-r)/(1-r)),[e[0],100*r,100*o]},o.apple.rgb=function(e){return[e[0]/65535*255,e[1]/65535*255,e[2]/65535*255]},o.rgb.apple=function(e){return[e[0]/255*65535,e[1]/255*65535,e[2]/255*65535]},o.gray.rgb=function(e){return[e[0]/100*255,e[0]/100*255,e[0]/100*255]},o.gray.hsl=o.gray.hsv=function(e){return[0,0,e[0]]},o.gray.hwb=function(e){return[0,100,e[0]]},o.gray.cmyk=function(e){return[0,0,0,e[0]]},o.gray.lab=function(e){return[e[0],0,0]},o.gray.hex=function(e){var t=255&Math.round(e[0]/100*255),n=((t<<16)+(t<<8)+t).toString(16).toUpperCase();return"000000".substring(n.length)+n},o.rgb.gray=function(e){return[(e[0]+e[1]+e[2])/3/255*100]}}));function r(e){var t=function(){for(var e={},t=Object.keys(n),r=t.length,o=0;o<r;o++)e[t[o]]={distance:-1,parent:null};return e}(),r=[e];for(t[e].distance=0;r.length;)for(var o=r.pop(),i=Object.keys(n[o]),a=i.length,l=0;l<a;l++){var s=i[l],c=t[s];-1===c.distance&&(c.distance=t[o].distance+1,c.parent=o,r.unshift(s))}return t}function o(e,t){return function(n){return t(e(n))}}function i(e,t){for(var r=[t[e].parent,e],i=n[t[e].parent][e],a=t[e].parent;t[a].parent;)r.unshift(t[a].parent),i=o(n[t[a].parent][a],i),a=t[a].parent;return i.conversion=r,i}n.rgb,n.hsl,n.hsv,n.hwb,n.cmyk,n.xyz,n.lab,n.lch,n.hex,n.keyword,n.ansi16,n.ansi256,n.hcg,n.apple,n.gray;var a={};Object.keys(n).forEach((function(e){a[e]={},Object.defineProperty(a[e],"channels",{value:n[e].channels}),Object.defineProperty(a[e],"labels",{value:n[e].labels});var t=function(e){for(var t=r(e),n={},o=Object.keys(t),a=o.length,l=0;l<a;l++){var s=o[l];null!==t[s].parent&&(n[s]=i(s,t))}return n}(e);Object.keys(t).forEach((function(n){var r=t[n];a[e][n]=function(e){var t=function(t){if(null==t)return t;arguments.length>1&&(t=Array.prototype.slice.call(arguments));var n=e(t);if("object"==typeof n)for(var r=n.length,o=0;o<r;o++)n[o]=Math.round(n[o]);return n};return"conversion"in e&&(t.conversion=e.conversion),t}(r),a[e][n].raw=function(e){var t=function(t){return null==t?t:(arguments.length>1&&(t=Array.prototype.slice.call(arguments)),e(t))};return"conversion"in e&&(t.conversion=e.conversion),t}(r)}))}));var l=a,s={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]},c={getRgba:u,getHsla:d,getRgb:function(e){var t=u(e);return t&&t.slice(0,3)},getHsl:function(e){var t=d(e);return t&&t.slice(0,3)},getHwb:f,getAlpha:function(e){var t=u(e);return t||(t=d(e))||(t=f(e))?t[3]:void 0},hexString:function(e,t){return t=void 0!==t&&3===e.length?t:e[3],"#"+b(e[0])+b(e[1])+b(e[2])+(t>=0&&t<1?b(Math.round(255*t)):"")},rgbString:function(e,t){return t<1||e[3]&&e[3]<1?p(e,t):"rgb("+e[0]+", "+e[1]+", "+e[2]+")"},rgbaString:p,percentString:function(e,t){if(t<1||e[3]&&e[3]<1)return h(e,t);var n=Math.round(e[0]/255*100),r=Math.round(e[1]/255*100),o=Math.round(e[2]/255*100);return"rgb("+n+"%, "+r+"%, "+o+"%)"},percentaString:h,hslString:function(e,t){return t<1||e[3]&&e[3]<1?g(e,t):"hsl("+e[0]+", "+e[1]+"%, "+e[2]+"%)"},hslaString:g,hwbString:function(e,t){return void 0===t&&(t=void 0!==e[3]?e[3]:1),"hwb("+e[0]+", "+e[1]+"%, "+e[2]+"%"+(void 0!==t&&1!==t?", "+t:"")+")"},keyword:function(e){return v[e.slice(0,3)]}};function u(e){if(e){var t=[0,0,0],n=1,r=e.match(/^#([a-fA-F0-9]{3,4})$/i),o="";if(r){o=(r=r[1])[3];for(var i=0;i<t.length;i++)t[i]=parseInt(r[i]+r[i],16);o&&(n=Math.round(parseInt(o+o,16)/255*100)/100)}else if(r=e.match(/^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i)){for(o=r[2],r=r[1],i=0;i<t.length;i++)t[i]=parseInt(r.slice(2*i,2*i+2),16);o&&(n=Math.round(parseInt(o,16)/255*100)/100)}else if(r=e.match(/^rgba?\(\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/i)){for(i=0;i<t.length;i++)t[i]=parseInt(r[i+1]);n=parseFloat(r[4])}else if(r=e.match(/^rgba?\(\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/i)){for(i=0;i<t.length;i++)t[i]=Math.round(2.55*parseFloat(r[i+1]));n=parseFloat(r[4])}else if(r=e.match(/(\w+)/)){if("transparent"==r[1])return[0,0,0,0];if(!(t=s[r[1]]))return}for(i=0;i<t.length;i++)t[i]=m(t[i],0,255);return n=n||0==n?m(n,0,1):1,t[3]=n,t}}function d(e){if(e){var t=e.match(/^hsla?\(\s*([+-]?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)/);if(t){var n=parseFloat(t[4]);return[m(parseInt(t[1]),0,360),m(parseFloat(t[2]),0,100),m(parseFloat(t[3]),0,100),m(isNaN(n)?1:n,0,1)]}}}function f(e){if(e){var t=e.match(/^hwb\(\s*([+-]?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)/);if(t){var n=parseFloat(t[4]);return[m(parseInt(t[1]),0,360),m(parseFloat(t[2]),0,100),m(parseFloat(t[3]),0,100),m(isNaN(n)?1:n,0,1)]}}}function p(e,t){return void 0===t&&(t=void 0!==e[3]?e[3]:1),"rgba("+e[0]+", "+e[1]+", "+e[2]+", "+t+")"}function h(e,t){return"rgba("+Math.round(e[0]/255*100)+"%, "+Math.round(e[1]/255*100)+"%, "+Math.round(e[2]/255*100)+"%, "+(t||e[3]||1)+")"}function g(e,t){return void 0===t&&(t=void 0!==e[3]?e[3]:1),"hsla("+e[0]+", "+e[1]+"%, "+e[2]+"%, "+t+")"}function m(e,t,n){return Math.min(Math.max(t,e),n)}function b(e){var t=e.toString(16).toUpperCase();return t.length<2?"0"+t:t}var v={};for(var y in s)v[s[y]]=y;var x=function(e){return e instanceof x?e:this instanceof x?(this.valid=!1,this.values={rgb:[0,0,0],hsl:[0,0,0],hsv:[0,0,0],hwb:[0,0,0],cmyk:[0,0,0,0],alpha:1},void("string"==typeof e?(t=c.getRgba(e))?this.setValues("rgb",t):(t=c.getHsla(e))?this.setValues("hsl",t):(t=c.getHwb(e))&&this.setValues("hwb",t):"object"==typeof e&&(void 0!==(t=e).r||void 0!==t.red?this.setValues("rgb",t):void 0!==t.l||void 0!==t.lightness?this.setValues("hsl",t):void 0!==t.v||void 0!==t.value?this.setValues("hsv",t):void 0!==t.w||void 0!==t.whiteness?this.setValues("hwb",t):void 0===t.c&&void 0===t.cyan||this.setValues("cmyk",t)))):new x(e);var t};x.prototype={isValid:function(){return this.valid},rgb:function(){return this.setSpace("rgb",arguments)},hsl:function(){return this.setSpace("hsl",arguments)},hsv:function(){return this.setSpace("hsv",arguments)},hwb:function(){return this.setSpace("hwb",arguments)},cmyk:function(){return this.setSpace("cmyk",arguments)},rgbArray:function(){return this.values.rgb},hslArray:function(){return this.values.hsl},hsvArray:function(){return this.values.hsv},hwbArray:function(){var e=this.values;return 1!==e.alpha?e.hwb.concat([e.alpha]):e.hwb},cmykArray:function(){return this.values.cmyk},rgbaArray:function(){var e=this.values;return e.rgb.concat([e.alpha])},hslaArray:function(){var e=this.values;return e.hsl.concat([e.alpha])},alpha:function(e){return void 0===e?this.values.alpha:(this.setValues("alpha",e),this)},red:function(e){return this.setChannel("rgb",0,e)},green:function(e){return this.setChannel("rgb",1,e)},blue:function(e){return this.setChannel("rgb",2,e)},hue:function(e){return e&&(e=(e%=360)<0?360+e:e),this.setChannel("hsl",0,e)},saturation:function(e){return this.setChannel("hsl",1,e)},lightness:function(e){return this.setChannel("hsl",2,e)},saturationv:function(e){return this.setChannel("hsv",1,e)},whiteness:function(e){return this.setChannel("hwb",1,e)},blackness:function(e){return this.setChannel("hwb",2,e)},value:function(e){return this.setChannel("hsv",2,e)},cyan:function(e){return this.setChannel("cmyk",0,e)},magenta:function(e){return this.setChannel("cmyk",1,e)},yellow:function(e){return this.setChannel("cmyk",2,e)},black:function(e){return this.setChannel("cmyk",3,e)},hexString:function(){return c.hexString(this.values.rgb)},rgbString:function(){return c.rgbString(this.values.rgb,this.values.alpha)},rgbaString:function(){return c.rgbaString(this.values.rgb,this.values.alpha)},percentString:function(){return c.percentString(this.values.rgb,this.values.alpha)},hslString:function(){return c.hslString(this.values.hsl,this.values.alpha)},hslaString:function(){return c.hslaString(this.values.hsl,this.values.alpha)},hwbString:function(){return c.hwbString(this.values.hwb,this.values.alpha)},keyword:function(){return c.keyword(this.values.rgb,this.values.alpha)},rgbNumber:function(){var e=this.values.rgb;return e[0]<<16|e[1]<<8|e[2]},luminosity:function(){for(var e=this.values.rgb,t=[],n=0;n<e.length;n++){var r=e[n]/255;t[n]=r<=.03928?r/12.92:Math.pow((r+.055)/1.055,2.4)}return.2126*t[0]+.7152*t[1]+.0722*t[2]},contrast:function(e){var t=this.luminosity(),n=e.luminosity();return t>n?(t+.05)/(n+.05):(n+.05)/(t+.05)},level:function(e){var t=this.contrast(e);return t>=7.1?"AAA":t>=4.5?"AA":""},dark:function(){var e=this.values.rgb;return(299*e[0]+587*e[1]+114*e[2])/1e3<128},light:function(){return!this.dark()},negate:function(){for(var e=[],t=0;t<3;t++)e[t]=255-this.values.rgb[t];return this.setValues("rgb",e),this},lighten:function(e){var t=this.values.hsl;return t[2]+=t[2]*e,this.setValues("hsl",t),this},darken:function(e){var t=this.values.hsl;return t[2]-=t[2]*e,this.setValues("hsl",t),this},saturate:function(e){var t=this.values.hsl;return t[1]+=t[1]*e,this.setValues("hsl",t),this},desaturate:function(e){var t=this.values.hsl;return t[1]-=t[1]*e,this.setValues("hsl",t),this},whiten:function(e){var t=this.values.hwb;return t[1]+=t[1]*e,this.setValues("hwb",t),this},blacken:function(e){var t=this.values.hwb;return t[2]+=t[2]*e,this.setValues("hwb",t),this},greyscale:function(){var e=this.values.rgb,t=.3*e[0]+.59*e[1]+.11*e[2];return this.setValues("rgb",[t,t,t]),this},clearer:function(e){var t=this.values.alpha;return this.setValues("alpha",t-t*e),this},opaquer:function(e){var t=this.values.alpha;return this.setValues("alpha",t+t*e),this},rotate:function(e){var t=this.values.hsl,n=(t[0]+e)%360;return t[0]=n<0?360+n:n,this.setValues("hsl",t),this},mix:function(e,t){var n=e,r=void 0===t?.5:t,o=2*r-1,i=this.alpha()-n.alpha(),a=((o*i==-1?o:(o+i)/(1+o*i))+1)/2,l=1-a;return this.rgb(a*this.red()+l*n.red(),a*this.green()+l*n.green(),a*this.blue()+l*n.blue()).alpha(this.alpha()*r+n.alpha()*(1-r))},toJSON:function(){return this.rgb()},clone:function(){var e,t,n=new x,r=this.values,o=n.values;for(var i in r)r.hasOwnProperty(i)&&(e=r[i],"[object Array]"===(t={}.toString.call(e))?o[i]=e.slice(0):"[object Number]"===t?o[i]=e:console.error("unexpected color value:",e));return n}},x.prototype.spaces={rgb:["red","green","blue"],hsl:["hue","saturation","lightness"],hsv:["hue","saturation","value"],hwb:["hue","whiteness","blackness"],cmyk:["cyan","magenta","yellow","black"]},x.prototype.maxes={rgb:[255,255,255],hsl:[360,100,100],hsv:[360,100,100],hwb:[360,100,100],cmyk:[100,100,100,100]},x.prototype.getValues=function(e){for(var t=this.values,n={},r=0;r<e.length;r++)n[e.charAt(r)]=t[e][r];return 1!==t.alpha&&(n.a=t.alpha),n},x.prototype.setValues=function(e,t){var n,r,o=this.values,i=this.spaces,a=this.maxes,s=1;if(this.valid=!0,"alpha"===e)s=t;else if(t.length)o[e]=t.slice(0,e.length),s=t[e.length];else if(void 0!==t[e.charAt(0)]){for(n=0;n<e.length;n++)o[e][n]=t[e.charAt(n)];s=t.a}else if(void 0!==t[i[e][0]]){var c=i[e];for(n=0;n<e.length;n++)o[e][n]=t[c[n]];s=t.alpha}if(o.alpha=Math.max(0,Math.min(1,void 0===s?o.alpha:s)),"alpha"===e)return!1;for(n=0;n<e.length;n++)r=Math.max(0,Math.min(a[e][n],o[e][n])),o[e][n]=Math.round(r);for(var u in i)u!==e&&(o[u]=l[e][u](o[e]));return!0},x.prototype.setSpace=function(e,t){var n=t[0];return void 0===n?this.getValues(e):("number"==typeof n&&(n=Array.prototype.slice.call(t)),this.setValues(e,n),this)},x.prototype.setChannel=function(e,t,n){var r=this.values[e];return void 0===n?r[t]:(n===r[t]||(r[t]=n,this.setValues(e,r)),this)},"undefined"!=typeof window&&(window.Color=x);var w,k=x,_={noop:function(){},uid:(w=0,function(){return w++}),isNullOrUndef:function(e){return null==e},isArray:function(e){if(Array.isArray&&Array.isArray(e))return!0;var t=Object.prototype.toString.call(e);return"[object"===t.substr(0,7)&&"Array]"===t.substr(-6)},isObject:function(e){return null!==e&&"[object Object]"===Object.prototype.toString.call(e)},isFinite:function(e){return("number"==typeof e||e instanceof Number)&&isFinite(e)},valueOrDefault:function(e,t){return void 0===e?t:e},valueAtIndexOrDefault:function(e,t,n){return _.valueOrDefault(_.isArray(e)?e[t]:e,n)},callback:function(e,t,n){if(e&&"function"==typeof e.call)return e.apply(n,t)},each:function(e,t,n,r){var o,i,a;if(_.isArray(e))if(i=e.length,r)for(o=i-1;o>=0;o--)t.call(n,e[o],o);else for(o=0;o<i;o++)t.call(n,e[o],o);else if(_.isObject(e))for(i=(a=Object.keys(e)).length,o=0;o<i;o++)t.call(n,e[a[o]],a[o])},arrayEquals:function(e,t){var n,r,o,i;if(!e||!t||e.length!==t.length)return!1;for(n=0,r=e.length;n<r;++n)if(o=e[n],i=t[n],o instanceof Array&&i instanceof Array){if(!_.arrayEquals(o,i))return!1}else if(o!==i)return!1;return!0},clone:function(e){if(_.isArray(e))return e.map(_.clone);if(_.isObject(e)){for(var t={},n=Object.keys(e),r=n.length,o=0;o<r;++o)t[n[o]]=_.clone(e[n[o]]);return t}return e},_merger:function(e,t,n,r){var o=t[e],i=n[e];_.isObject(o)&&_.isObject(i)?_.merge(o,i,r):t[e]=_.clone(i)},_mergerIf:function(e,t,n){var r=t[e],o=n[e];_.isObject(r)&&_.isObject(o)?_.mergeIf(r,o):t.hasOwnProperty(e)||(t[e]=_.clone(o))},merge:function(e,t,n){var r,o,i,a,l,s=_.isArray(t)?t:[t],c=s.length;if(!_.isObject(e))return e;for(r=(n=n||{}).merger||_._merger,o=0;o<c;++o)if(t=s[o],_.isObject(t))for(l=0,a=(i=Object.keys(t)).length;l<a;++l)r(i[l],e,t,n);return e},mergeIf:function(e,t){return _.merge(e,t,{merger:_._mergerIf})},extend:Object.assign||function(e){return _.merge(e,[].slice.call(arguments,1),{merger:function(e,t,n){t[e]=n[e]}})},inherits:function(e){var t=this,n=e&&e.hasOwnProperty("constructor")?e.constructor:function(){return t.apply(this,arguments)},r=function(){this.constructor=n};return r.prototype=t.prototype,n.prototype=new r,n.extend=_.inherits,e&&_.extend(n.prototype,e),n.__super__=t.prototype,n},_deprecated:function(e,t,n,r){void 0!==t&&console.warn(e+': "'+n+'" is deprecated. Please use "'+r+'" instead')}},E=_;_.callCallback=_.callback,_.indexOf=function(e,t,n){return Array.prototype.indexOf.call(e,t,n)},_.getValueOrDefault=_.valueOrDefault,_.getValueAtIndexOrDefault=_.valueAtIndexOrDefault;var S={linear:function(e){return e},easeInQuad:function(e){return e*e},easeOutQuad:function(e){return-e*(e-2)},easeInOutQuad:function(e){return(e/=.5)<1?.5*e*e:-.5*(--e*(e-2)-1)},easeInCubic:function(e){return e*e*e},easeOutCubic:function(e){return(e-=1)*e*e+1},easeInOutCubic:function(e){return(e/=.5)<1?.5*e*e*e:.5*((e-=2)*e*e+2)},easeInQuart:function(e){return e*e*e*e},easeOutQuart:function(e){return-((e-=1)*e*e*e-1)},easeInOutQuart:function(e){return(e/=.5)<1?.5*e*e*e*e:-.5*((e-=2)*e*e*e-2)},easeInQuint:function(e){return e*e*e*e*e},easeOutQuint:function(e){return(e-=1)*e*e*e*e+1},easeInOutQuint:function(e){return(e/=.5)<1?.5*e*e*e*e*e:.5*((e-=2)*e*e*e*e+2)},easeInSine:function(e){return 1-Math.cos(e*(Math.PI/2))},easeOutSine:function(e){return Math.sin(e*(Math.PI/2))},easeInOutSine:function(e){return-.5*(Math.cos(Math.PI*e)-1)},easeInExpo:function(e){return 0===e?0:Math.pow(2,10*(e-1))},easeOutExpo:function(e){return 1===e?1:1-Math.pow(2,-10*e)},easeInOutExpo:function(e){return 0===e?0:1===e?1:(e/=.5)<1?.5*Math.pow(2,10*(e-1)):.5*(2-Math.pow(2,-10*--e))},easeInCirc:function(e){return e>=1?e:-(Math.sqrt(1-e*e)-1)},easeOutCirc:function(e){return Math.sqrt(1-(e-=1)*e)},easeInOutCirc:function(e){return(e/=.5)<1?-.5*(Math.sqrt(1-e*e)-1):.5*(Math.sqrt(1-(e-=2)*e)+1)},easeInElastic:function(e){var t=1.70158,n=0,r=1;return 0===e?0:1===e?1:(n||(n=.3),r<1?(r=1,t=n/4):t=n/(2*Math.PI)*Math.asin(1/r),-r*Math.pow(2,10*(e-=1))*Math.sin((e-t)*(2*Math.PI)/n))},easeOutElastic:function(e){var t=1.70158,n=0,r=1;return 0===e?0:1===e?1:(n||(n=.3),r<1?(r=1,t=n/4):t=n/(2*Math.PI)*Math.asin(1/r),r*Math.pow(2,-10*e)*Math.sin((e-t)*(2*Math.PI)/n)+1)},easeInOutElastic:function(e){var t=1.70158,n=0,r=1;return 0===e?0:2==(e/=.5)?1:(n||(n=.45),r<1?(r=1,t=n/4):t=n/(2*Math.PI)*Math.asin(1/r),e<1?r*Math.pow(2,10*(e-=1))*Math.sin((e-t)*(2*Math.PI)/n)*-.5:r*Math.pow(2,-10*(e-=1))*Math.sin((e-t)*(2*Math.PI)/n)*.5+1)},easeInBack:function(e){var t=1.70158;return e*e*((t+1)*e-t)},easeOutBack:function(e){var t=1.70158;return(e-=1)*e*((t+1)*e+t)+1},easeInOutBack:function(e){var t=1.70158;return(e/=.5)<1?e*e*((1+(t*=1.525))*e-t)*.5:.5*((e-=2)*e*((1+(t*=1.525))*e+t)+2)},easeInBounce:function(e){return 1-S.easeOutBounce(1-e)},easeOutBounce:function(e){return e<1/2.75?7.5625*e*e:e<2/2.75?7.5625*(e-=1.5/2.75)*e+.75:e<2.5/2.75?7.5625*(e-=2.25/2.75)*e+.9375:7.5625*(e-=2.625/2.75)*e+.984375},easeInOutBounce:function(e){return e<.5?.5*S.easeInBounce(2*e):.5*S.easeOutBounce(2*e-1)+.5}},P={effects:S};E.easingEffects=S;var z=Math.PI,M=z/180,C=2*z,O=z/2,T=z/4,N=2*z/3,D={clear:function(e){e.ctx.clearRect(0,0,e.width,e.height)},roundedRect:function(e,t,n,r,o,i){if(i){var a=Math.min(i,o/2,r/2),l=t+a,s=n+a,c=t+r-a,u=n+o-a;e.moveTo(t,s),l<c&&s<u?(e.arc(l,s,a,-z,-O),e.arc(c,s,a,-O,0),e.arc(c,u,a,0,O),e.arc(l,u,a,O,z)):l<c?(e.moveTo(l,n),e.arc(c,s,a,-O,O),e.arc(l,s,a,O,z+O)):s<u?(e.arc(l,s,a,-z,0),e.arc(l,u,a,0,z)):e.arc(l,s,a,-z,z),e.closePath(),e.moveTo(t,n)}else e.rect(t,n,r,o)},drawPoint:function(e,t,n,r,o,i){var a,l,s,c,u,d=(i||0)*M;if(t&&"object"==typeof t&&("[object HTMLImageElement]"===(a=t.toString())||"[object HTMLCanvasElement]"===a))return e.save(),e.translate(r,o),e.rotate(d),e.drawImage(t,-t.width/2,-t.height/2,t.width,t.height),void e.restore();if(!(isNaN(n)||n<=0)){switch(e.beginPath(),t){default:e.arc(r,o,n,0,C),e.closePath();break;case"triangle":e.moveTo(r+Math.sin(d)*n,o-Math.cos(d)*n),d+=N,e.lineTo(r+Math.sin(d)*n,o-Math.cos(d)*n),d+=N,e.lineTo(r+Math.sin(d)*n,o-Math.cos(d)*n),e.closePath();break;case"rectRounded":c=n-(u=.516*n),l=Math.cos(d+T)*c,s=Math.sin(d+T)*c,e.arc(r-l,o-s,u,d-z,d-O),e.arc(r+s,o-l,u,d-O,d),e.arc(r+l,o+s,u,d,d+O),e.arc(r-s,o+l,u,d+O,d+z),e.closePath();break;case"rect":if(!i){c=Math.SQRT1_2*n,e.rect(r-c,o-c,2*c,2*c);break}d+=T;case"rectRot":l=Math.cos(d)*n,s=Math.sin(d)*n,e.moveTo(r-l,o-s),e.lineTo(r+s,o-l),e.lineTo(r+l,o+s),e.lineTo(r-s,o+l),e.closePath();break;case"crossRot":d+=T;case"cross":l=Math.cos(d)*n,s=Math.sin(d)*n,e.moveTo(r-l,o-s),e.lineTo(r+l,o+s),e.moveTo(r+s,o-l),e.lineTo(r-s,o+l);break;case"star":l=Math.cos(d)*n,s=Math.sin(d)*n,e.moveTo(r-l,o-s),e.lineTo(r+l,o+s),e.moveTo(r+s,o-l),e.lineTo(r-s,o+l),d+=T,l=Math.cos(d)*n,s=Math.sin(d)*n,e.moveTo(r-l,o-s),e.lineTo(r+l,o+s),e.moveTo(r+s,o-l),e.lineTo(r-s,o+l);break;case"line":l=Math.cos(d)*n,s=Math.sin(d)*n,e.moveTo(r-l,o-s),e.lineTo(r+l,o+s);break;case"dash":e.moveTo(r,o),e.lineTo(r+Math.cos(d)*n,o+Math.sin(d)*n)}e.fill(),e.stroke()}},_isPointInArea:function(e,t){return e.x>t.left-1e-6&&e.x<t.right+1e-6&&e.y>t.top-1e-6&&e.y<t.bottom+1e-6},clipArea:function(e,t){e.save(),e.beginPath(),e.rect(t.left,t.top,t.right-t.left,t.bottom-t.top),e.clip()},unclipArea:function(e){e.restore()},lineTo:function(e,t,n,r){var o=n.steppedLine;if(o){if("middle"===o){var i=(t.x+n.x)/2;e.lineTo(i,r?n.y:t.y),e.lineTo(i,r?t.y:n.y)}else"after"===o&&!r||"after"!==o&&r?e.lineTo(t.x,n.y):e.lineTo(n.x,t.y);e.lineTo(n.x,n.y)}else n.tension?e.bezierCurveTo(r?t.controlPointPreviousX:t.controlPointNextX,r?t.controlPointPreviousY:t.controlPointNextY,r?n.controlPointNextX:n.controlPointPreviousX,r?n.controlPointNextY:n.controlPointPreviousY,n.x,n.y):e.lineTo(n.x,n.y)}},j=D;E.clear=D.clear,E.drawRoundedRectangle=function(e){e.beginPath(),D.roundedRect.apply(D,arguments)};var I={_set:function(e,t){return E.merge(this[e]||(this[e]={}),t)}};I._set("global",{defaultColor:"rgba(0,0,0,0.1)",defaultFontColor:"#666",defaultFontFamily:"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",defaultFontSize:12,defaultFontStyle:"normal",defaultLineHeight:1.2,showLines:!0});var L=I,A=E.valueOrDefault,R={toLineHeight:function(e,t){var n=(""+e).match(/^(normal|(\d+(?:\.\d+)?)(px|em|%)?)$/);if(!n||"normal"===n[1])return 1.2*t;switch(e=+n[2],n[3]){case"px":return e;case"%":e/=100}return t*e},toPadding:function(e){var t,n,r,o;return E.isObject(e)?(t=+e.top||0,n=+e.right||0,r=+e.bottom||0,o=+e.left||0):t=n=r=o=+e||0,{top:t,right:n,bottom:r,left:o,height:t+r,width:o+n}},_parseFont:function(e){var t=L.global,n=A(e.fontSize,t.defaultFontSize),r={family:A(e.fontFamily,t.defaultFontFamily),lineHeight:E.options.toLineHeight(A(e.lineHeight,t.defaultLineHeight),n),size:n,style:A(e.fontStyle,t.defaultFontStyle),weight:null,string:""};return r.string=function(e){return!e||E.isNullOrUndef(e.size)||E.isNullOrUndef(e.family)?null:(e.style?e.style+" ":"")+(e.weight?e.weight+" ":"")+e.size+"px "+e.family}(r),r},resolve:function(e,t,n,r){var o,i,a,l=!0;for(o=0,i=e.length;o<i;++o)if(void 0!==(a=e[o])&&(void 0!==t&&"function"==typeof a&&(a=a(t),l=!1),void 0!==n&&E.isArray(a)&&(a=a[n],l=!1),void 0!==a))return r&&!l&&(r.cacheable=!1),a}},B={_factorize:function(e){var t,n=[],r=Math.sqrt(e);for(t=1;t<r;t++)e%t==0&&(n.push(t),n.push(e/t));return r===(0|r)&&n.push(r),n.sort((function(e,t){return e-t})).pop(),n},log10:Math.log10||function(e){var t=Math.log(e)*Math.LOG10E,n=Math.round(t);return e===Math.pow(10,n)?n:t}},F=B;E.log10=B.log10;var W=E,U=P,H=j,V=R,q=F,K={getRtlAdapter:function(e,t,n){return e?function(e,t){return{x:function(n){return e+e+t-n},setWidth:function(e){t=e},textAlign:function(e){return"center"===e?e:"right"===e?"left":"right"},xPlus:function(e,t){return e-t},leftForLtr:function(e,t){return e-t}}}(t,n):{x:function(e){return e},setWidth:function(e){},textAlign:function(e){return e},xPlus:function(e,t){return e+t},leftForLtr:function(e,t){return e}}},overrideTextDirection:function(e,t){var n,r;"ltr"!==t&&"rtl"!==t||(r=[(n=e.canvas.style).getPropertyValue("direction"),n.getPropertyPriority("direction")],n.setProperty("direction",t,"important"),e.prevTextDirection=r)},restoreTextDirection:function(e){var t=e.prevTextDirection;void 0!==t&&(delete e.prevTextDirection,e.canvas.style.setProperty("direction",t[0],t[1]))}};W.easing=U,W.canvas=H,W.options=V,W.math=q,W.rtl=K;var $=function(e){W.extend(this,e),this.initialize.apply(this,arguments)};W.extend($.prototype,{_type:void 0,initialize:function(){this.hidden=!1},pivot:function(){var e=this;return e._view||(e._view=W.extend({},e._model)),e._start={},e},transition:function(e){var t=this,n=t._model,r=t._start,o=t._view;return n&&1!==e?(o||(o=t._view={}),r||(r=t._start={}),function(e,t,n,r){var o,i,a,l,s,c,u,d,f,p=Object.keys(n);for(o=0,i=p.length;o<i;++o)if(c=n[a=p[o]],t.hasOwnProperty(a)||(t[a]=c),(l=t[a])!==c&&"_"!==a[0]){if(e.hasOwnProperty(a)||(e[a]=l),(u=typeof c)==typeof(s=e[a]))if("string"===u){if((d=k(s)).valid&&(f=k(c)).valid){t[a]=f.mix(d,r).rgbString();continue}}else if(W.isFinite(s)&&W.isFinite(c)){t[a]=s+(c-s)*r;continue}t[a]=c}}(r,o,n,e),t):(t._view=W.extend({},n),t._start=null,t)},tooltipPosition:function(){return{x:this._model.x,y:this._model.y}},hasValue:function(){return W.isNumber(this._model.x)&&W.isNumber(this._model.y)}}),$.extend=W.inherits;var J=$,G=J.extend({chart:null,currentStep:0,numSteps:60,easing:"",render:null,onAnimationProgress:null,onAnimationComplete:null}),Y=G;Object.defineProperty(G.prototype,"animationObject",{get:function(){return this}}),Object.defineProperty(G.prototype,"chartInstance",{get:function(){return this.chart},set:function(e){this.chart=e}}),L._set("global",{animation:{duration:1e3,easing:"easeOutQuart",onProgress:W.noop,onComplete:W.noop}});var Z={animations:[],request:null,addAnimation:function(e,t,n,r){var o,i,a=this.animations;for(t.chart=e,t.startTime=Date.now(),t.duration=n,r||(e.animating=!0),o=0,i=a.length;o<i;++o)if(a[o].chart===e)return void(a[o]=t);a.push(t),1===a.length&&this.requestAnimationFrame()},cancelAnimation:function(e){var t=W.findIndex(this.animations,(function(t){return t.chart===e}));-1!==t&&(this.animations.splice(t,1),e.animating=!1)},requestAnimationFrame:function(){var e=this;null===e.request&&(e.request=W.requestAnimFrame.call(window,(function(){e.request=null,e.startDigest()})))},startDigest:function(){this.advance(),this.animations.length>0&&this.requestAnimationFrame()},advance:function(){for(var e,t,n,r,o=this.animations,i=0;i<o.length;)t=(e=o[i]).chart,n=e.numSteps,r=Math.floor((Date.now()-e.startTime)/e.duration*n)+1,e.currentStep=Math.min(r,n),W.callback(e.render,[t,e],t),W.callback(e.onAnimationProgress,[e],t),e.currentStep>=n?(W.callback(e.onAnimationComplete,[e],t),t.animating=!1,o.splice(i,1)):++i}},Q=W.options.resolve,X=["push","pop","shift","splice","unshift"];function ee(e,t){var n=e._chartjs;if(n){var r=n.listeners,o=r.indexOf(t);-1!==o&&r.splice(o,1),r.length>0||(X.forEach((function(t){delete e[t]})),delete e._chartjs)}}var te=function(e,t){this.initialize(e,t)};W.extend(te.prototype,{datasetElementType:null,dataElementType:null,_datasetElementOptions:["backgroundColor","borderCapStyle","borderColor","borderDash","borderDashOffset","borderJoinStyle","borderWidth"],_dataElementOptions:["backgroundColor","borderColor","borderWidth","pointStyle"],initialize:function(e,t){var n=this;n.chart=e,n.index=t,n.linkScales(),n.addElements(),n._type=n.getMeta().type},updateIndex:function(e){this.index=e},linkScales:function(){var e=this.getMeta(),t=this.chart,n=t.scales,r=this.getDataset(),o=t.options.scales;null!==e.xAxisID&&e.xAxisID in n&&!r.xAxisID||(e.xAxisID=r.xAxisID||o.xAxes[0].id),null!==e.yAxisID&&e.yAxisID in n&&!r.yAxisID||(e.yAxisID=r.yAxisID||o.yAxes[0].id)},getDataset:function(){return this.chart.data.datasets[this.index]},getMeta:function(){return this.chart.getDatasetMeta(this.index)},getScaleForId:function(e){return this.chart.scales[e]},_getValueScaleId:function(){return this.getMeta().yAxisID},_getIndexScaleId:function(){return this.getMeta().xAxisID},_getValueScale:function(){return this.getScaleForId(this._getValueScaleId())},_getIndexScale:function(){return this.getScaleForId(this._getIndexScaleId())},reset:function(){this._update(!0)},destroy:function(){this._data&&ee(this._data,this)},createMetaDataset:function(){var e=this.datasetElementType;return e&&new e({_chart:this.chart,_datasetIndex:this.index})},createMetaData:function(e){var t=this.dataElementType;return t&&new t({_chart:this.chart,_datasetIndex:this.index,_index:e})},addElements:function(){var e,t,n=this.getMeta(),r=this.getDataset().data||[],o=n.data;for(e=0,t=r.length;e<t;++e)o[e]=o[e]||this.createMetaData(e);n.dataset=n.dataset||this.createMetaDataset()},addElementAndReset:function(e){var t=this.createMetaData(e);this.getMeta().data.splice(e,0,t),this.updateElement(t,e,!0)},buildOrUpdateElements:function(){var e,t,n=this,r=n.getDataset(),o=r.data||(r.data=[]);n._data!==o&&(n._data&&ee(n._data,n),o&&Object.isExtensible(o)&&(t=n,(e=o)._chartjs?e._chartjs.listeners.push(t):(Object.defineProperty(e,"_chartjs",{configurable:!0,enumerable:!1,value:{listeners:[t]}}),X.forEach((function(t){var n="onData"+t.charAt(0).toUpperCase()+t.slice(1),r=e[t];Object.defineProperty(e,t,{configurable:!0,enumerable:!1,value:function(){var t=Array.prototype.slice.call(arguments),o=r.apply(this,t);return W.each(e._chartjs.listeners,(function(e){"function"==typeof e[n]&&e[n].apply(e,t)})),o}})})))),n._data=o),n.resyncElements()},_configure:function(){this._config=W.merge({},[this.chart.options.datasets[this._type],this.getDataset()],{merger:function(e,t,n){"_meta"!==e&&"data"!==e&&W._merger(e,t,n)}})},_update:function(e){this._configure(),this._cachedDataOpts=null,this.update(e)},update:W.noop,transition:function(e){for(var t=this.getMeta(),n=t.data||[],r=n.length,o=0;o<r;++o)n[o].transition(e);t.dataset&&t.dataset.transition(e)},draw:function(){var e=this.getMeta(),t=e.data||[],n=t.length,r=0;for(e.dataset&&e.dataset.draw();r<n;++r)t[r].draw()},getStyle:function(e){var t,n=this.getMeta(),r=n.dataset;return this._configure(),r&&void 0===e?t=this._resolveDatasetElementOptions(r||{}):(e=e||0,t=this._resolveDataElementOptions(n.data[e]||{},e)),!1!==t.fill&&null!==t.fill||(t.backgroundColor=t.borderColor),t},_resolveDatasetElementOptions:function(e,t){var n,r,o,i,a=this,l=a.chart,s=a._config,c=e.custom||{},u=l.options.elements[a.datasetElementType.prototype._type]||{},d=a._datasetElementOptions,f={},p={chart:l,dataset:a.getDataset(),datasetIndex:a.index,hover:t};for(n=0,r=d.length;n<r;++n)o=d[n],i=t?"hover"+o.charAt(0).toUpperCase()+o.slice(1):o,f[o]=Q([c[i],s[i],u[i]],p);return f},_resolveDataElementOptions:function(e,t){var n=this,r=e&&e.custom,o=n._cachedDataOpts;if(o&&!r)return o;var i,a,l,s,c=n.chart,u=n._config,d=c.options.elements[n.dataElementType.prototype._type]||{},f=n._dataElementOptions,p={},h={chart:c,dataIndex:t,dataset:n.getDataset(),datasetIndex:n.index},g={cacheable:!r};if(r=r||{},W.isArray(f))for(a=0,l=f.length;a<l;++a)p[s=f[a]]=Q([r[s],u[s],d[s]],h,t,g);else for(a=0,l=(i=Object.keys(f)).length;a<l;++a)p[s=i[a]]=Q([r[s],u[f[s]],u[s],d[s]],h,t,g);return g.cacheable&&(n._cachedDataOpts=Object.freeze(p)),p},removeHoverStyle:function(e){W.merge(e._model,e.$previousStyle||{}),delete e.$previousStyle},setHoverStyle:function(e){var t=this.chart.data.datasets[e._datasetIndex],n=e._index,r=e.custom||{},o=e._model,i=W.getHoverColor;e.$previousStyle={backgroundColor:o.backgroundColor,borderColor:o.borderColor,borderWidth:o.borderWidth},o.backgroundColor=Q([r.hoverBackgroundColor,t.hoverBackgroundColor,i(o.backgroundColor)],void 0,n),o.borderColor=Q([r.hoverBorderColor,t.hoverBorderColor,i(o.borderColor)],void 0,n),o.borderWidth=Q([r.hoverBorderWidth,t.hoverBorderWidth,o.borderWidth],void 0,n)},_removeDatasetHoverStyle:function(){var e=this.getMeta().dataset;e&&this.removeHoverStyle(e)},_setDatasetHoverStyle:function(){var e,t,n,r,o,i,a=this.getMeta().dataset,l={};if(a){for(i=a._model,o=this._resolveDatasetElementOptions(a,!0),e=0,t=(r=Object.keys(o)).length;e<t;++e)l[n=r[e]]=i[n],i[n]=o[n];a.$previousStyle=l}},resyncElements:function(){var e=this.getMeta(),t=this.getDataset().data,n=e.data.length,r=t.length;r<n?e.data.splice(r,n-r):r>n&&this.insertElements(n,r-n)},insertElements:function(e,t){for(var n=0;n<t;++n)this.addElementAndReset(e+n)},onDataPush:function(){var e=arguments.length;this.insertElements(this.getDataset().data.length-e,e)},onDataPop:function(){this.getMeta().data.pop()},onDataShift:function(){this.getMeta().data.shift()},onDataSplice:function(e,t){this.getMeta().data.splice(e,t),this.insertElements(e,arguments.length-2)},onDataUnshift:function(){this.insertElements(0,arguments.length)}}),te.extend=W.inherits;var ne=te,re=2*Math.PI;function oe(e,t){var n=t.startAngle,r=t.endAngle,o=t.pixelMargin,i=o/t.outerRadius,a=t.x,l=t.y;e.beginPath(),e.arc(a,l,t.outerRadius,n-i,r+i),t.innerRadius>o?(i=o/t.innerRadius,e.arc(a,l,t.innerRadius-o,r+i,n-i,!0)):e.arc(a,l,o,r+Math.PI/2,n-Math.PI/2),e.closePath(),e.clip()}function ie(e,t,n){var r="inner"===t.borderAlign;r?(e.lineWidth=2*t.borderWidth,e.lineJoin="round"):(e.lineWidth=t.borderWidth,e.lineJoin="bevel"),n.fullCircles&&function(e,t,n,r){var o,i=n.endAngle;for(r&&(n.endAngle=n.startAngle+re,oe(e,n),n.endAngle=i,n.endAngle===n.startAngle&&n.fullCircles&&(n.endAngle+=re,n.fullCircles--)),e.beginPath(),e.arc(n.x,n.y,n.innerRadius,n.startAngle+re,n.startAngle,!0),o=0;o<n.fullCircles;++o)e.stroke();for(e.beginPath(),e.arc(n.x,n.y,t.outerRadius,n.startAngle,n.startAngle+re),o=0;o<n.fullCircles;++o)e.stroke()}(e,t,n,r),r&&oe(e,n),e.beginPath(),e.arc(n.x,n.y,t.outerRadius,n.startAngle,n.endAngle),e.arc(n.x,n.y,n.innerRadius,n.endAngle,n.startAngle,!0),e.closePath(),e.stroke()}L._set("global",{elements:{arc:{backgroundColor:L.global.defaultColor,borderColor:"#fff",borderWidth:2,borderAlign:"center"}}});var ae=J.extend({_type:"arc",inLabelRange:function(e){var t=this._view;return!!t&&Math.pow(e-t.x,2)<Math.pow(t.radius+t.hoverRadius,2)},inRange:function(e,t){var n=this._view;if(n){for(var r=W.getAngleFromPoint(n,{x:e,y:t}),o=r.angle,i=r.distance,a=n.startAngle,l=n.endAngle;l<a;)l+=re;for(;o>l;)o-=re;for(;o<a;)o+=re;var s=o>=a&&o<=l,c=i>=n.innerRadius&&i<=n.outerRadius;return s&&c}return!1},getCenterPoint:function(){var e=this._view,t=(e.startAngle+e.endAngle)/2,n=(e.innerRadius+e.outerRadius)/2;return{x:e.x+Math.cos(t)*n,y:e.y+Math.sin(t)*n}},getArea:function(){var e=this._view;return Math.PI*((e.endAngle-e.startAngle)/(2*Math.PI))*(Math.pow(e.outerRadius,2)-Math.pow(e.innerRadius,2))},tooltipPosition:function(){var e=this._view,t=e.startAngle+(e.endAngle-e.startAngle)/2,n=(e.outerRadius-e.innerRadius)/2+e.innerRadius;return{x:e.x+Math.cos(t)*n,y:e.y+Math.sin(t)*n}},draw:function(){var e,t=this._chart.ctx,n=this._view,r="inner"===n.borderAlign?.33:0,o={x:n.x,y:n.y,innerRadius:n.innerRadius,outerRadius:Math.max(n.outerRadius-r,0),pixelMargin:r,startAngle:n.startAngle,endAngle:n.endAngle,fullCircles:Math.floor(n.circumference/re)};if(t.save(),t.fillStyle=n.backgroundColor,t.strokeStyle=n.borderColor,o.fullCircles){for(o.endAngle=o.startAngle+re,t.beginPath(),t.arc(o.x,o.y,o.outerRadius,o.startAngle,o.endAngle),t.arc(o.x,o.y,o.innerRadius,o.endAngle,o.startAngle,!0),t.closePath(),e=0;e<o.fullCircles;++e)t.fill();o.endAngle=o.startAngle+n.circumference%re}t.beginPath(),t.arc(o.x,o.y,o.outerRadius,o.startAngle,o.endAngle),t.arc(o.x,o.y,o.innerRadius,o.endAngle,o.startAngle,!0),t.closePath(),t.fill(),n.borderWidth&&ie(t,n,o),t.restore()}}),le=W.valueOrDefault,se=L.global.defaultColor;L._set("global",{elements:{line:{tension:.4,backgroundColor:se,borderWidth:3,borderColor:se,borderCapStyle:"butt",borderDash:[],borderDashOffset:0,borderJoinStyle:"miter",capBezierPoints:!0,fill:!0}}});var ce=J.extend({_type:"line",draw:function(){var e,t,n,r=this,o=r._view,i=r._chart.ctx,a=o.spanGaps,l=r._children.slice(),s=L.global,c=s.elements.line,u=-1,d=r._loop;if(l.length){if(r._loop){for(e=0;e<l.length;++e)if(t=W.previousItem(l,e),!l[e]._view.skip&&t._view.skip){l=l.slice(e).concat(l.slice(0,e)),d=a;break}d&&l.push(l[0])}for(i.save(),i.lineCap=o.borderCapStyle||c.borderCapStyle,i.setLineDash&&i.setLineDash(o.borderDash||c.borderDash),i.lineDashOffset=le(o.borderDashOffset,c.borderDashOffset),i.lineJoin=o.borderJoinStyle||c.borderJoinStyle,i.lineWidth=le(o.borderWidth,c.borderWidth),i.strokeStyle=o.borderColor||s.defaultColor,i.beginPath(),(n=l[0]._view).skip||(i.moveTo(n.x,n.y),u=0),e=1;e<l.length;++e)n=l[e]._view,t=-1===u?W.previousItem(l,e):l[u],n.skip||(u!==e-1&&!a||-1===u?i.moveTo(n.x,n.y):W.canvas.lineTo(i,t._view,n),u=e);d&&i.closePath(),i.stroke(),i.restore()}}}),ue=W.valueOrDefault,de=L.global.defaultColor;function fe(e){var t=this._view;return!!t&&Math.abs(e-t.x)<t.radius+t.hitRadius}L._set("global",{elements:{point:{radius:3,pointStyle:"circle",backgroundColor:de,borderColor:de,borderWidth:1,hitRadius:1,hoverRadius:4,hoverBorderWidth:1}}});var pe=J.extend({_type:"point",inRange:function(e,t){var n=this._view;return!!n&&Math.pow(e-n.x,2)+Math.pow(t-n.y,2)<Math.pow(n.hitRadius+n.radius,2)},inLabelRange:fe,inXRange:fe,inYRange:function(e){var t=this._view;return!!t&&Math.abs(e-t.y)<t.radius+t.hitRadius},getCenterPoint:function(){var e=this._view;return{x:e.x,y:e.y}},getArea:function(){return Math.PI*Math.pow(this._view.radius,2)},tooltipPosition:function(){var e=this._view;return{x:e.x,y:e.y,padding:e.radius+e.borderWidth}},draw:function(e){var t=this._view,n=this._chart.ctx,r=t.pointStyle,o=t.rotation,i=t.radius,a=t.x,l=t.y,s=L.global,c=s.defaultColor;t.skip||(void 0===e||W.canvas._isPointInArea(t,e))&&(n.strokeStyle=t.borderColor||c,n.lineWidth=ue(t.borderWidth,s.elements.point.borderWidth),n.fillStyle=t.backgroundColor||c,W.canvas.drawPoint(n,r,i,a,l,o))}}),he=L.global.defaultColor;function ge(e){return e&&void 0!==e.width}function me(e){var t,n,r,o,i;return ge(e)?(i=e.width/2,t=e.x-i,n=e.x+i,r=Math.min(e.y,e.base),o=Math.max(e.y,e.base)):(i=e.height/2,t=Math.min(e.x,e.base),n=Math.max(e.x,e.base),r=e.y-i,o=e.y+i),{left:t,top:r,right:n,bottom:o}}function be(e,t,n){return e===t?n:e===n?t:e}function ve(e,t,n){var r,o,i,a,l=e.borderWidth,s=function(e){var t=e.borderSkipped,n={};return t?(e.horizontal?e.base>e.x&&(t=be(t,"left","right")):e.base<e.y&&(t=be(t,"bottom","top")),n[t]=!0,n):n}(e);return W.isObject(l)?(r=+l.top||0,o=+l.right||0,i=+l.bottom||0,a=+l.left||0):r=o=i=a=+l||0,{t:s.top||r<0?0:r>n?n:r,r:s.right||o<0?0:o>t?t:o,b:s.bottom||i<0?0:i>n?n:i,l:s.left||a<0?0:a>t?t:a}}function ye(e,t,n){var r=null===t,o=null===n,i=!(!e||r&&o)&&me(e);return i&&(r||t>=i.left&&t<=i.right)&&(o||n>=i.top&&n<=i.bottom)}L._set("global",{elements:{rectangle:{backgroundColor:he,borderColor:he,borderSkipped:"bottom",borderWidth:0}}});var xe=J.extend({_type:"rectangle",draw:function(){var e=this._chart.ctx,t=this._view,n=function(e){var t=me(e),n=t.right-t.left,r=t.bottom-t.top,o=ve(e,n/2,r/2);return{outer:{x:t.left,y:t.top,w:n,h:r},inner:{x:t.left+o.l,y:t.top+o.t,w:n-o.l-o.r,h:r-o.t-o.b}}}(t),r=n.outer,o=n.inner;e.fillStyle=t.backgroundColor,e.fillRect(r.x,r.y,r.w,r.h),r.w===o.w&&r.h===o.h||(e.save(),e.beginPath(),e.rect(r.x,r.y,r.w,r.h),e.clip(),e.fillStyle=t.borderColor,e.rect(o.x,o.y,o.w,o.h),e.fill("evenodd"),e.restore())},height:function(){var e=this._view;return e.base-e.y},inRange:function(e,t){return ye(this._view,e,t)},inLabelRange:function(e,t){var n=this._view;return ge(n)?ye(n,e,null):ye(n,null,t)},inXRange:function(e){return ye(this._view,e,null)},inYRange:function(e){return ye(this._view,null,e)},getCenterPoint:function(){var e,t,n=this._view;return ge(n)?(e=n.x,t=(n.y+n.base)/2):(e=(n.x+n.base)/2,t=n.y),{x:e,y:t}},getArea:function(){var e=this._view;return ge(e)?e.width*Math.abs(e.y-e.base):e.height*Math.abs(e.x-e.base)},tooltipPosition:function(){var e=this._view;return{x:e.x,y:e.y}}}),we={},ke=ae,_e=ce,Ee=pe,Se=xe;we.Arc=ke,we.Line=_e,we.Point=Ee,we.Rectangle=Se;var Pe=W._deprecated,ze=W.valueOrDefault;function Me(e,t,n){var r,o,i=n.barThickness,a=t.stackCount,l=t.pixels[e],s=W.isNullOrUndef(i)?function(e,t){var n,r,o,i,a=e._length;for(o=1,i=t.length;o<i;++o)a=Math.min(a,Math.abs(t[o]-t[o-1]));for(o=0,i=e.getTicks().length;o<i;++o)r=e.getPixelForTick(o),a=o>0?Math.min(a,Math.abs(r-n)):a,n=r;return a}(t.scale,t.pixels):-1;return W.isNullOrUndef(i)?(r=s*n.categoryPercentage,o=n.barPercentage):(r=i*a,o=1),{chunk:r/a,ratio:o,start:l-r/2}}L._set("bar",{hover:{mode:"label"},scales:{xAxes:[{type:"category",offset:!0,gridLines:{offsetGridLines:!0}}],yAxes:[{type:"linear"}]}}),L._set("global",{datasets:{bar:{categoryPercentage:.8,barPercentage:.9}}});var Ce=ne.extend({dataElementType:we.Rectangle,_dataElementOptions:["backgroundColor","borderColor","borderSkipped","borderWidth","barPercentage","barThickness","categoryPercentage","maxBarThickness","minBarLength"],initialize:function(){var e,t,n=this;ne.prototype.initialize.apply(n,arguments),(e=n.getMeta()).stack=n.getDataset().stack,e.bar=!0,t=n._getIndexScale().options,Pe("bar chart",t.barPercentage,"scales.[x/y]Axes.barPercentage","dataset.barPercentage"),Pe("bar chart",t.barThickness,"scales.[x/y]Axes.barThickness","dataset.barThickness"),Pe("bar chart",t.categoryPercentage,"scales.[x/y]Axes.categoryPercentage","dataset.categoryPercentage"),Pe("bar chart",n._getValueScale().options.minBarLength,"scales.[x/y]Axes.minBarLength","dataset.minBarLength"),Pe("bar chart",t.maxBarThickness,"scales.[x/y]Axes.maxBarThickness","dataset.maxBarThickness")},update:function(e){var t,n,r=this.getMeta().data;for(this._ruler=this.getRuler(),t=0,n=r.length;t<n;++t)this.updateElement(r[t],t,e)},updateElement:function(e,t,n){var r=this,o=r.getMeta(),i=r.getDataset(),a=r._resolveDataElementOptions(e,t);e._xScale=r.getScaleForId(o.xAxisID),e._yScale=r.getScaleForId(o.yAxisID),e._datasetIndex=r.index,e._index=t,e._model={backgroundColor:a.backgroundColor,borderColor:a.borderColor,borderSkipped:a.borderSkipped,borderWidth:a.borderWidth,datasetLabel:i.label,label:r.chart.data.labels[t]},W.isArray(i.data[t])&&(e._model.borderSkipped=null),r._updateElementGeometry(e,t,n,a),e.pivot()},_updateElementGeometry:function(e,t,n,r){var o=this,i=e._model,a=o._getValueScale(),l=a.getBasePixel(),s=a.isHorizontal(),c=o._ruler||o.getRuler(),u=o.calculateBarValuePixels(o.index,t,r),d=o.calculateBarIndexPixels(o.index,t,c,r);i.horizontal=s,i.base=n?l:u.base,i.x=s?n?l:u.head:d.center,i.y=s?d.center:n?l:u.head,i.height=s?d.size:void 0,i.width=s?void 0:d.size},_getStacks:function(e){var t,n,r=this._getIndexScale(),o=r._getMatchingVisibleMetas(this._type),i=r.options.stacked,a=o.length,l=[];for(t=0;t<a&&(n=o[t],(!1===i||-1===l.indexOf(n.stack)||void 0===i&&void 0===n.stack)&&l.push(n.stack),n.index!==e);++t);return l},getStackCount:function(){return this._getStacks().length},getStackIndex:function(e,t){var n=this._getStacks(e),r=void 0!==t?n.indexOf(t):-1;return-1===r?n.length-1:r},getRuler:function(){var e,t,n=this._getIndexScale(),r=[];for(e=0,t=this.getMeta().data.length;e<t;++e)r.push(n.getPixelForValue(null,e,this.index));return{pixels:r,start:n._startPixel,end:n._endPixel,stackCount:this.getStackCount(),scale:n}},calculateBarValuePixels:function(e,t,n){var r,o,i,a,l,s,c,u=this.chart,d=this._getValueScale(),f=d.isHorizontal(),p=u.data.datasets,h=d._getMatchingVisibleMetas(this._type),g=d._parseValue(p[e].data[t]),m=n.minBarLength,b=d.options.stacked,v=this.getMeta().stack,y=void 0===g.start?0:g.max>=0&&g.min>=0?g.min:g.max,x=void 0===g.start?g.end:g.max>=0&&g.min>=0?g.max-g.min:g.min-g.max,w=h.length;if(b||void 0===b&&void 0!==v)for(r=0;r<w&&(o=h[r]).index!==e;++r)o.stack===v&&(i=void 0===(c=d._parseValue(p[o.index].data[t])).start?c.end:c.min>=0&&c.max>=0?c.max:c.min,(g.min<0&&i<0||g.max>=0&&i>0)&&(y+=i));return a=d.getPixelForValue(y),s=(l=d.getPixelForValue(y+x))-a,void 0!==m&&Math.abs(s)<m&&(s=m,l=x>=0&&!f||x<0&&f?a-m:a+m),{size:s,base:a,head:l,center:l+s/2}},calculateBarIndexPixels:function(e,t,n,r){var o="flex"===r.barThickness?function(e,t,n){var r,o=t.pixels,i=o[e],a=e>0?o[e-1]:null,l=e<o.length-1?o[e+1]:null,s=n.categoryPercentage;return null===a&&(a=i-(null===l?t.end-t.start:l-i)),null===l&&(l=i+i-a),r=i-(i-Math.min(a,l))/2*s,{chunk:Math.abs(l-a)/2*s/t.stackCount,ratio:n.barPercentage,start:r}}(t,n,r):Me(t,n,r),i=this.getStackIndex(e,this.getMeta().stack),a=o.start+o.chunk*i+o.chunk/2,l=Math.min(ze(r.maxBarThickness,1/0),o.chunk*o.ratio);return{base:a-l/2,head:a+l/2,center:a,size:l}},draw:function(){var e=this.chart,t=this._getValueScale(),n=this.getMeta().data,r=this.getDataset(),o=n.length,i=0;for(W.canvas.clipArea(e.ctx,e.chartArea);i<o;++i){var a=t._parseValue(r.data[i]);isNaN(a.min)||isNaN(a.max)||n[i].draw()}W.canvas.unclipArea(e.ctx)},_resolveDataElementOptions:function(){var e=this,t=W.extend({},ne.prototype._resolveDataElementOptions.apply(e,arguments)),n=e._getIndexScale().options,r=e._getValueScale().options;return t.barPercentage=ze(n.barPercentage,t.barPercentage),t.barThickness=ze(n.barThickness,t.barThickness),t.categoryPercentage=ze(n.categoryPercentage,t.categoryPercentage),t.maxBarThickness=ze(n.maxBarThickness,t.maxBarThickness),t.minBarLength=ze(r.minBarLength,t.minBarLength),t}}),Oe=W.valueOrDefault,Te=W.options.resolve;L._set("bubble",{hover:{mode:"single"},scales:{xAxes:[{type:"linear",position:"bottom",id:"x-axis-0"}],yAxes:[{type:"linear",position:"left",id:"y-axis-0"}]},tooltips:{callbacks:{title:function(){return""},label:function(e,t){var n=t.datasets[e.datasetIndex].label||"",r=t.datasets[e.datasetIndex].data[e.index];return n+": ("+e.xLabel+", "+e.yLabel+", "+r.r+")"}}}});var Ne=ne.extend({dataElementType:we.Point,_dataElementOptions:["backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","hoverRadius","hitRadius","pointStyle","rotation"],update:function(e){var t=this,n=t.getMeta().data;W.each(n,(function(n,r){t.updateElement(n,r,e)}))},updateElement:function(e,t,n){var r=this,o=r.getMeta(),i=e.custom||{},a=r.getScaleForId(o.xAxisID),l=r.getScaleForId(o.yAxisID),s=r._resolveDataElementOptions(e,t),c=r.getDataset().data[t],u=r.index,d=n?a.getPixelForDecimal(.5):a.getPixelForValue("object"==typeof c?c:NaN,t,u),f=n?l.getBasePixel():l.getPixelForValue(c,t,u);e._xScale=a,e._yScale=l,e._options=s,e._datasetIndex=u,e._index=t,e._model={backgroundColor:s.backgroundColor,borderColor:s.borderColor,borderWidth:s.borderWidth,hitRadius:s.hitRadius,pointStyle:s.pointStyle,rotation:s.rotation,radius:n?0:s.radius,skip:i.skip||isNaN(d)||isNaN(f),x:d,y:f},e.pivot()},setHoverStyle:function(e){var t=e._model,n=e._options,r=W.getHoverColor;e.$previousStyle={backgroundColor:t.backgroundColor,borderColor:t.borderColor,borderWidth:t.borderWidth,radius:t.radius},t.backgroundColor=Oe(n.hoverBackgroundColor,r(n.backgroundColor)),t.borderColor=Oe(n.hoverBorderColor,r(n.borderColor)),t.borderWidth=Oe(n.hoverBorderWidth,n.borderWidth),t.radius=n.radius+n.hoverRadius},_resolveDataElementOptions:function(e,t){var n=this,r=n.chart,o=n.getDataset(),i=e.custom||{},a=o.data[t]||{},l=ne.prototype._resolveDataElementOptions.apply(n,arguments),s={chart:r,dataIndex:t,dataset:o,datasetIndex:n.index};return n._cachedDataOpts===l&&(l=W.extend({},l)),l.radius=Te([i.radius,a.r,n._config.radius,r.options.elements.point.radius],s,t),l}}),De=W.valueOrDefault,je=Math.PI,Ie=2*je,Le=je/2;L._set("doughnut",{animation:{animateRotate:!0,animateScale:!1},hover:{mode:"single"},legendCallback:function(e){var t,n,r,o=document.createElement("ul"),i=e.data,a=i.datasets,l=i.labels;if(o.setAttribute("class",e.id+"-legend"),a.length)for(t=0,n=a[0].data.length;t<n;++t)(r=o.appendChild(document.createElement("li"))).appendChild(document.createElement("span")).style.backgroundColor=a[0].backgroundColor[t],l[t]&&r.appendChild(document.createTextNode(l[t]));return o.outerHTML},legend:{labels:{generateLabels:function(e){var t=e.data;return t.labels.length&&t.datasets.length?t.labels.map((function(n,r){var o=e.getDatasetMeta(0),i=o.controller.getStyle(r);return{text:n,fillStyle:i.backgroundColor,strokeStyle:i.borderColor,lineWidth:i.borderWidth,hidden:isNaN(t.datasets[0].data[r])||o.data[r].hidden,index:r}})):[]}},onClick:function(e,t){var n,r,o,i=t.index,a=this.chart;for(n=0,r=(a.data.datasets||[]).length;n<r;++n)(o=a.getDatasetMeta(n)).data[i]&&(o.data[i].hidden=!o.data[i].hidden);a.update()}},cutoutPercentage:50,rotation:-Le,circumference:Ie,tooltips:{callbacks:{title:function(){return""},label:function(e,t){var n=t.labels[e.index],r=": "+t.datasets[e.datasetIndex].data[e.index];return W.isArray(n)?(n=n.slice())[0]+=r:n+=r,n}}}});var Ae=ne.extend({dataElementType:we.Arc,linkScales:W.noop,_dataElementOptions:["backgroundColor","borderColor","borderWidth","borderAlign","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth"],getRingIndex:function(e){for(var t=0,n=0;n<e;++n)this.chart.isDatasetVisible(n)&&++t;return t},update:function(e){var t,n,r,o,i=this,a=i.chart,l=a.chartArea,s=a.options,c=1,u=1,d=0,f=0,p=i.getMeta(),h=p.data,g=s.cutoutPercentage/100||0,m=s.circumference,b=i._getRingWeight(i.index);if(m<Ie){var v=s.rotation%Ie,y=(v+=v>=je?-Ie:v<-je?Ie:0)+m,x=Math.cos(v),w=Math.sin(v),k=Math.cos(y),_=Math.sin(y),E=v<=0&&y>=0||y>=Ie,S=v<=Le&&y>=Le||y>=Ie+Le,P=v<=-Le&&y>=-Le||y>=je+Le,z=v===-je||y>=je?-1:Math.min(x,x*g,k,k*g),M=P?-1:Math.min(w,w*g,_,_*g),C=E?1:Math.max(x,x*g,k,k*g),O=S?1:Math.max(w,w*g,_,_*g);c=(C-z)/2,u=(O-M)/2,d=-(C+z)/2,f=-(O+M)/2}for(r=0,o=h.length;r<o;++r)h[r]._options=i._resolveDataElementOptions(h[r],r);for(a.borderWidth=i.getMaxBorderWidth(),t=(l.right-l.left-a.borderWidth)/c,n=(l.bottom-l.top-a.borderWidth)/u,a.outerRadius=Math.max(Math.min(t,n)/2,0),a.innerRadius=Math.max(a.outerRadius*g,0),a.radiusLength=(a.outerRadius-a.innerRadius)/(i._getVisibleDatasetWeightTotal()||1),a.offsetX=d*a.outerRadius,a.offsetY=f*a.outerRadius,p.total=i.calculateTotal(),i.outerRadius=a.outerRadius-a.radiusLength*i._getRingWeightOffset(i.index),i.innerRadius=Math.max(i.outerRadius-a.radiusLength*b,0),r=0,o=h.length;r<o;++r)i.updateElement(h[r],r,e)},updateElement:function(e,t,n){var r=this,o=r.chart,i=o.chartArea,a=o.options,l=a.animation,s=(i.left+i.right)/2,c=(i.top+i.bottom)/2,u=a.rotation,d=a.rotation,f=r.getDataset(),p=n&&l.animateRotate||e.hidden?0:r.calculateCircumference(f.data[t])*(a.circumference/Ie),h=n&&l.animateScale?0:r.innerRadius,g=n&&l.animateScale?0:r.outerRadius,m=e._options||{};W.extend(e,{_datasetIndex:r.index,_index:t,_model:{backgroundColor:m.backgroundColor,borderColor:m.borderColor,borderWidth:m.borderWidth,borderAlign:m.borderAlign,x:s+o.offsetX,y:c+o.offsetY,startAngle:u,endAngle:d,circumference:p,outerRadius:g,innerRadius:h,label:W.valueAtIndexOrDefault(f.label,t,o.data.labels[t])}});var b=e._model;n&&l.animateRotate||(b.startAngle=0===t?a.rotation:r.getMeta().data[t-1]._model.endAngle,b.endAngle=b.startAngle+b.circumference),e.pivot()},calculateTotal:function(){var e,t=this.getDataset(),n=this.getMeta(),r=0;return W.each(n.data,(function(n,o){e=t.data[o],isNaN(e)||n.hidden||(r+=Math.abs(e))})),r},calculateCircumference:function(e){var t=this.getMeta().total;return t>0&&!isNaN(e)?Ie*(Math.abs(e)/t):0},getMaxBorderWidth:function(e){var t,n,r,o,i,a,l,s,c=0,u=this.chart;if(!e)for(t=0,n=u.data.datasets.length;t<n;++t)if(u.isDatasetVisible(t)){e=(r=u.getDatasetMeta(t)).data,t!==this.index&&(i=r.controller);break}if(!e)return 0;for(t=0,n=e.length;t<n;++t)o=e[t],i?(i._configure(),a=i._resolveDataElementOptions(o,t)):a=o._options,"inner"!==a.borderAlign&&(l=a.borderWidth,c=(s=a.hoverBorderWidth)>(c=l>c?l:c)?s:c);return c},setHoverStyle:function(e){var t=e._model,n=e._options,r=W.getHoverColor;e.$previousStyle={backgroundColor:t.backgroundColor,borderColor:t.borderColor,borderWidth:t.borderWidth},t.backgroundColor=De(n.hoverBackgroundColor,r(n.backgroundColor)),t.borderColor=De(n.hoverBorderColor,r(n.borderColor)),t.borderWidth=De(n.hoverBorderWidth,n.borderWidth)},_getRingWeightOffset:function(e){for(var t=0,n=0;n<e;++n)this.chart.isDatasetVisible(n)&&(t+=this._getRingWeight(n));return t},_getRingWeight:function(e){return Math.max(De(this.chart.data.datasets[e].weight,1),0)},_getVisibleDatasetWeightTotal:function(){return this._getRingWeightOffset(this.chart.data.datasets.length)}});L._set("horizontalBar",{hover:{mode:"index",axis:"y"},scales:{xAxes:[{type:"linear",position:"bottom"}],yAxes:[{type:"category",position:"left",offset:!0,gridLines:{offsetGridLines:!0}}]},elements:{rectangle:{borderSkipped:"left"}},tooltips:{mode:"index",axis:"y"}}),L._set("global",{datasets:{horizontalBar:{categoryPercentage:.8,barPercentage:.9}}});var Re=Ce.extend({_getValueScaleId:function(){return this.getMeta().xAxisID},_getIndexScaleId:function(){return this.getMeta().yAxisID}}),Be=W.valueOrDefault,Fe=W.options.resolve,We=W.canvas._isPointInArea;function Ue(e,t){var n=e&&e.options.ticks||{},r=n.reverse,o=void 0===n.min?t:0,i=void 0===n.max?t:0;return{start:r?i:o,end:r?o:i}}function He(e,t,n){var r=n/2,o=Ue(e,r),i=Ue(t,r);return{top:i.end,right:o.end,bottom:i.start,left:o.start}}function Ve(e){var t,n,r,o;return W.isObject(e)?(t=e.top,n=e.right,r=e.bottom,o=e.left):t=n=r=o=e,{top:t,right:n,bottom:r,left:o}}L._set("line",{showLines:!0,spanGaps:!1,hover:{mode:"label"},scales:{xAxes:[{type:"category",id:"x-axis-0"}],yAxes:[{type:"linear",id:"y-axis-0"}]}});var qe=ne.extend({datasetElementType:we.Line,dataElementType:we.Point,_datasetElementOptions:["backgroundColor","borderCapStyle","borderColor","borderDash","borderDashOffset","borderJoinStyle","borderWidth","cubicInterpolationMode","fill"],_dataElementOptions:{backgroundColor:"pointBackgroundColor",borderColor:"pointBorderColor",borderWidth:"pointBorderWidth",hitRadius:"pointHitRadius",hoverBackgroundColor:"pointHoverBackgroundColor",hoverBorderColor:"pointHoverBorderColor",hoverBorderWidth:"pointHoverBorderWidth",hoverRadius:"pointHoverRadius",pointStyle:"pointStyle",radius:"pointRadius",rotation:"pointRotation"},update:function(e){var t,n,r=this,o=r.getMeta(),i=o.dataset,a=o.data||[],l=r.chart.options,s=r._config,c=r._showLine=Be(s.showLine,l.showLines);for(r._xScale=r.getScaleForId(o.xAxisID),r._yScale=r.getScaleForId(o.yAxisID),c&&(void 0!==s.tension&&void 0===s.lineTension&&(s.lineTension=s.tension),i._scale=r._yScale,i._datasetIndex=r.index,i._children=a,i._model=r._resolveDatasetElementOptions(i),i.pivot()),t=0,n=a.length;t<n;++t)r.updateElement(a[t],t,e);for(c&&0!==i._model.tension&&r.updateBezierControlPoints(),t=0,n=a.length;t<n;++t)a[t].pivot()},updateElement:function(e,t,n){var r,o,i=this,a=i.getMeta(),l=e.custom||{},s=i.getDataset(),c=i.index,u=s.data[t],d=i._xScale,f=i._yScale,p=a.dataset._model,h=i._resolveDataElementOptions(e,t);r=d.getPixelForValue("object"==typeof u?u:NaN,t,c),o=n?f.getBasePixel():i.calculatePointY(u,t,c),e._xScale=d,e._yScale=f,e._options=h,e._datasetIndex=c,e._index=t,e._model={x:r,y:o,skip:l.skip||isNaN(r)||isNaN(o),radius:h.radius,pointStyle:h.pointStyle,rotation:h.rotation,backgroundColor:h.backgroundColor,borderColor:h.borderColor,borderWidth:h.borderWidth,tension:Be(l.tension,p?p.tension:0),steppedLine:!!p&&p.steppedLine,hitRadius:h.hitRadius}},_resolveDatasetElementOptions:function(e){var t=this,n=t._config,r=e.custom||{},o=t.chart.options,i=o.elements.line,a=ne.prototype._resolveDatasetElementOptions.apply(t,arguments);return a.spanGaps=Be(n.spanGaps,o.spanGaps),a.tension=Be(n.lineTension,i.tension),a.steppedLine=Fe([r.steppedLine,n.steppedLine,i.stepped]),a.clip=Ve(Be(n.clip,He(t._xScale,t._yScale,a.borderWidth))),a},calculatePointY:function(e,t,n){var r,o,i,a,l,s,c,u=this.chart,d=this._yScale,f=0,p=0;if(d.options.stacked){for(l=+d.getRightValue(e),c=(s=u._getSortedVisibleDatasetMetas()).length,r=0;r<c&&(i=s[r]).index!==n;++r)o=u.data.datasets[i.index],"line"===i.type&&i.yAxisID===d.id&&((a=+d.getRightValue(o.data[t]))<0?p+=a||0:f+=a||0);return l<0?d.getPixelForValue(p+l):d.getPixelForValue(f+l)}return d.getPixelForValue(e)},updateBezierControlPoints:function(){var e,t,n,r,o=this.chart,i=this.getMeta(),a=i.dataset._model,l=o.chartArea,s=i.data||[];function c(e,t,n){return Math.max(Math.min(e,n),t)}if(a.spanGaps&&(s=s.filter((function(e){return!e._model.skip}))),"monotone"===a.cubicInterpolationMode)W.splineCurveMonotone(s);else for(e=0,t=s.length;e<t;++e)n=s[e]._model,r=W.splineCurve(W.previousItem(s,e)._model,n,W.nextItem(s,e)._model,a.tension),n.controlPointPreviousX=r.previous.x,n.controlPointPreviousY=r.previous.y,n.controlPointNextX=r.next.x,n.controlPointNextY=r.next.y;if(o.options.elements.line.capBezierPoints)for(e=0,t=s.length;e<t;++e)n=s[e]._model,We(n,l)&&(e>0&&We(s[e-1]._model,l)&&(n.controlPointPreviousX=c(n.controlPointPreviousX,l.left,l.right),n.controlPointPreviousY=c(n.controlPointPreviousY,l.top,l.bottom)),e<s.length-1&&We(s[e+1]._model,l)&&(n.controlPointNextX=c(n.controlPointNextX,l.left,l.right),n.controlPointNextY=c(n.controlPointNextY,l.top,l.bottom)))},draw:function(){var e,t=this.chart,n=this.getMeta(),r=n.data||[],o=t.chartArea,i=t.canvas,a=0,l=r.length;for(this._showLine&&(e=n.dataset._model.clip,W.canvas.clipArea(t.ctx,{left:!1===e.left?0:o.left-e.left,right:!1===e.right?i.width:o.right+e.right,top:!1===e.top?0:o.top-e.top,bottom:!1===e.bottom?i.height:o.bottom+e.bottom}),n.dataset.draw(),W.canvas.unclipArea(t.ctx));a<l;++a)r[a].draw(o)},setHoverStyle:function(e){var t=e._model,n=e._options,r=W.getHoverColor;e.$previousStyle={backgroundColor:t.backgroundColor,borderColor:t.borderColor,borderWidth:t.borderWidth,radius:t.radius},t.backgroundColor=Be(n.hoverBackgroundColor,r(n.backgroundColor)),t.borderColor=Be(n.hoverBorderColor,r(n.borderColor)),t.borderWidth=Be(n.hoverBorderWidth,n.borderWidth),t.radius=Be(n.hoverRadius,n.radius)}}),Ke=W.options.resolve;L._set("polarArea",{scale:{type:"radialLinear",angleLines:{display:!1},gridLines:{circular:!0},pointLabels:{display:!1},ticks:{beginAtZero:!0}},animation:{animateRotate:!0,animateScale:!0},startAngle:-.5*Math.PI,legendCallback:function(e){var t,n,r,o=document.createElement("ul"),i=e.data,a=i.datasets,l=i.labels;if(o.setAttribute("class",e.id+"-legend"),a.length)for(t=0,n=a[0].data.length;t<n;++t)(r=o.appendChild(document.createElement("li"))).appendChild(document.createElement("span")).style.backgroundColor=a[0].backgroundColor[t],l[t]&&r.appendChild(document.createTextNode(l[t]));return o.outerHTML},legend:{labels:{generateLabels:function(e){var t=e.data;return t.labels.length&&t.datasets.length?t.labels.map((function(n,r){var o=e.getDatasetMeta(0),i=o.controller.getStyle(r);return{text:n,fillStyle:i.backgroundColor,strokeStyle:i.borderColor,lineWidth:i.borderWidth,hidden:isNaN(t.datasets[0].data[r])||o.data[r].hidden,index:r}})):[]}},onClick:function(e,t){var n,r,o,i=t.index,a=this.chart;for(n=0,r=(a.data.datasets||[]).length;n<r;++n)(o=a.getDatasetMeta(n)).data[i].hidden=!o.data[i].hidden;a.update()}},tooltips:{callbacks:{title:function(){return""},label:function(e,t){return t.labels[e.index]+": "+e.yLabel}}}});var $e=ne.extend({dataElementType:we.Arc,linkScales:W.noop,_dataElementOptions:["backgroundColor","borderColor","borderWidth","borderAlign","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth"],_getIndexScaleId:function(){return this.chart.scale.id},_getValueScaleId:function(){return this.chart.scale.id},update:function(e){var t,n,r,o=this,i=o.getDataset(),a=o.getMeta(),l=o.chart.options.startAngle||0,s=o._starts=[],c=o._angles=[],u=a.data;for(o._updateRadius(),a.count=o.countVisibleElements(),t=0,n=i.data.length;t<n;t++)s[t]=l,r=o._computeAngle(t),c[t]=r,l+=r;for(t=0,n=u.length;t<n;++t)u[t]._options=o._resolveDataElementOptions(u[t],t),o.updateElement(u[t],t,e)},_updateRadius:function(){var e=this,t=e.chart,n=t.chartArea,r=t.options,o=Math.min(n.right-n.left,n.bottom-n.top);t.outerRadius=Math.max(o/2,0),t.innerRadius=Math.max(r.cutoutPercentage?t.outerRadius/100*r.cutoutPercentage:1,0),t.radiusLength=(t.outerRadius-t.innerRadius)/t.getVisibleDatasetCount(),e.outerRadius=t.outerRadius-t.radiusLength*e.index,e.innerRadius=e.outerRadius-t.radiusLength},updateElement:function(e,t,n){var r=this,o=r.chart,i=r.getDataset(),a=o.options,l=a.animation,s=o.scale,c=o.data.labels,u=s.xCenter,d=s.yCenter,f=a.startAngle,p=e.hidden?0:s.getDistanceFromCenterForValue(i.data[t]),h=r._starts[t],g=h+(e.hidden?0:r._angles[t]),m=l.animateScale?0:s.getDistanceFromCenterForValue(i.data[t]),b=e._options||{};W.extend(e,{_datasetIndex:r.index,_index:t,_scale:s,_model:{backgroundColor:b.backgroundColor,borderColor:b.borderColor,borderWidth:b.borderWidth,borderAlign:b.borderAlign,x:u,y:d,innerRadius:0,outerRadius:n?m:p,startAngle:n&&l.animateRotate?f:h,endAngle:n&&l.animateRotate?f:g,label:W.valueAtIndexOrDefault(c,t,c[t])}}),e.pivot()},countVisibleElements:function(){var e=this.getDataset(),t=this.getMeta(),n=0;return W.each(t.data,(function(t,r){isNaN(e.data[r])||t.hidden||n++})),n},setHoverStyle:function(e){var t=e._model,n=e._options,r=W.getHoverColor,o=W.valueOrDefault;e.$previousStyle={backgroundColor:t.backgroundColor,borderColor:t.borderColor,borderWidth:t.borderWidth},t.backgroundColor=o(n.hoverBackgroundColor,r(n.backgroundColor)),t.borderColor=o(n.hoverBorderColor,r(n.borderColor)),t.borderWidth=o(n.hoverBorderWidth,n.borderWidth)},_computeAngle:function(e){var t=this,n=this.getMeta().count,r=t.getDataset(),o=t.getMeta();if(isNaN(r.data[e])||o.data[e].hidden)return 0;var i={chart:t.chart,dataIndex:e,dataset:r,datasetIndex:t.index};return Ke([t.chart.options.elements.arc.angle,2*Math.PI/n],i,e)}});L._set("pie",W.clone(L.doughnut)),L._set("pie",{cutoutPercentage:0});var Je=Ae,Ge=W.valueOrDefault;L._set("radar",{spanGaps:!1,scale:{type:"radialLinear"},elements:{line:{fill:"start",tension:0}}});var Ye=ne.extend({datasetElementType:we.Line,dataElementType:we.Point,linkScales:W.noop,_datasetElementOptions:["backgroundColor","borderWidth","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","fill"],_dataElementOptions:{backgroundColor:"pointBackgroundColor",borderColor:"pointBorderColor",borderWidth:"pointBorderWidth",hitRadius:"pointHitRadius",hoverBackgroundColor:"pointHoverBackgroundColor",hoverBorderColor:"pointHoverBorderColor",hoverBorderWidth:"pointHoverBorderWidth",hoverRadius:"pointHoverRadius",pointStyle:"pointStyle",radius:"pointRadius",rotation:"pointRotation"},_getIndexScaleId:function(){return this.chart.scale.id},_getValueScaleId:function(){return this.chart.scale.id},update:function(e){var t,n,r=this,o=r.getMeta(),i=o.dataset,a=o.data||[],l=r.chart.scale,s=r._config;for(void 0!==s.tension&&void 0===s.lineTension&&(s.lineTension=s.tension),i._scale=l,i._datasetIndex=r.index,i._children=a,i._loop=!0,i._model=r._resolveDatasetElementOptions(i),i.pivot(),t=0,n=a.length;t<n;++t)r.updateElement(a[t],t,e);for(r.updateBezierControlPoints(),t=0,n=a.length;t<n;++t)a[t].pivot()},updateElement:function(e,t,n){var r=this,o=e.custom||{},i=r.getDataset(),a=r.chart.scale,l=a.getPointPositionForValue(t,i.data[t]),s=r._resolveDataElementOptions(e,t),c=r.getMeta().dataset._model,u=n?a.xCenter:l.x,d=n?a.yCenter:l.y;e._scale=a,e._options=s,e._datasetIndex=r.index,e._index=t,e._model={x:u,y:d,skip:o.skip||isNaN(u)||isNaN(d),radius:s.radius,pointStyle:s.pointStyle,rotation:s.rotation,backgroundColor:s.backgroundColor,borderColor:s.borderColor,borderWidth:s.borderWidth,tension:Ge(o.tension,c?c.tension:0),hitRadius:s.hitRadius}},_resolveDatasetElementOptions:function(){var e=this,t=e._config,n=e.chart.options,r=ne.prototype._resolveDatasetElementOptions.apply(e,arguments);return r.spanGaps=Ge(t.spanGaps,n.spanGaps),r.tension=Ge(t.lineTension,n.elements.line.tension),r},updateBezierControlPoints:function(){var e,t,n,r,o=this.getMeta(),i=this.chart.chartArea,a=o.data||[];function l(e,t,n){return Math.max(Math.min(e,n),t)}for(o.dataset._model.spanGaps&&(a=a.filter((function(e){return!e._model.skip}))),e=0,t=a.length;e<t;++e)n=a[e]._model,r=W.splineCurve(W.previousItem(a,e,!0)._model,n,W.nextItem(a,e,!0)._model,n.tension),n.controlPointPreviousX=l(r.previous.x,i.left,i.right),n.controlPointPreviousY=l(r.previous.y,i.top,i.bottom),n.controlPointNextX=l(r.next.x,i.left,i.right),n.controlPointNextY=l(r.next.y,i.top,i.bottom)},setHoverStyle:function(e){var t=e._model,n=e._options,r=W.getHoverColor;e.$previousStyle={backgroundColor:t.backgroundColor,borderColor:t.borderColor,borderWidth:t.borderWidth,radius:t.radius},t.backgroundColor=Ge(n.hoverBackgroundColor,r(n.backgroundColor)),t.borderColor=Ge(n.hoverBorderColor,r(n.borderColor)),t.borderWidth=Ge(n.hoverBorderWidth,n.borderWidth),t.radius=Ge(n.hoverRadius,n.radius)}});L._set("scatter",{hover:{mode:"single"},scales:{xAxes:[{id:"x-axis-1",type:"linear",position:"bottom"}],yAxes:[{id:"y-axis-1",type:"linear",position:"left"}]},tooltips:{callbacks:{title:function(){return""},label:function(e){return"("+e.xLabel+", "+e.yLabel+")"}}}}),L._set("global",{datasets:{scatter:{showLine:!1}}});var Ze={bar:Ce,bubble:Ne,doughnut:Ae,horizontalBar:Re,line:qe,polarArea:$e,pie:Je,radar:Ye,scatter:qe};function Qe(e,t){return e.native?{x:e.x,y:e.y}:W.getRelativePosition(e,t)}function Xe(e,t){var n,r,o,i,a,l,s=e._getSortedVisibleDatasetMetas();for(r=0,i=s.length;r<i;++r)for(o=0,a=(n=s[r].data).length;o<a;++o)(l=n[o])._view.skip||t(l)}function et(e,t){var n=[];return Xe(e,(function(e){e.inRange(t.x,t.y)&&n.push(e)})),n}function tt(e,t,n,r){var o=Number.POSITIVE_INFINITY,i=[];return Xe(e,(function(e){if(!n||e.inRange(t.x,t.y)){var a=e.getCenterPoint(),l=r(t,a);l<o?(i=[e],o=l):l===o&&i.push(e)}})),i}function nt(e){var t=-1!==e.indexOf("x"),n=-1!==e.indexOf("y");return function(e,r){var o=t?Math.abs(e.x-r.x):0,i=n?Math.abs(e.y-r.y):0;return Math.sqrt(Math.pow(o,2)+Math.pow(i,2))}}function rt(e,t,n){var r=Qe(t,e);n.axis=n.axis||"x";var o=nt(n.axis),i=n.intersect?et(e,r):tt(e,r,!1,o),a=[];return i.length?(e._getSortedVisibleDatasetMetas().forEach((function(e){var t=e.data[i[0]._index];t&&!t._view.skip&&a.push(t)})),a):[]}var ot={modes:{single:function(e,t){var n=Qe(t,e),r=[];return Xe(e,(function(e){if(e.inRange(n.x,n.y))return r.push(e),r})),r.slice(0,1)},label:rt,index:rt,dataset:function(e,t,n){var r=Qe(t,e);n.axis=n.axis||"xy";var o=nt(n.axis),i=n.intersect?et(e,r):tt(e,r,!1,o);return i.length>0&&(i=e.getDatasetMeta(i[0]._datasetIndex).data),i},"x-axis":function(e,t){return rt(e,t,{intersect:!1})},point:function(e,t){return et(e,Qe(t,e))},nearest:function(e,t,n){var r=Qe(t,e);n.axis=n.axis||"xy";var o=nt(n.axis);return tt(e,r,n.intersect,o)},x:function(e,t,n){var r=Qe(t,e),o=[],i=!1;return Xe(e,(function(e){e.inXRange(r.x)&&o.push(e),e.inRange(r.x,r.y)&&(i=!0)})),n.intersect&&!i&&(o=[]),o},y:function(e,t,n){var r=Qe(t,e),o=[],i=!1;return Xe(e,(function(e){e.inYRange(r.y)&&o.push(e),e.inRange(r.x,r.y)&&(i=!0)})),n.intersect&&!i&&(o=[]),o}}},it=W.extend;function at(e,t){return W.where(e,(function(e){return e.pos===t}))}function lt(e,t){return e.sort((function(e,n){var r=t?n:e,o=t?e:n;return r.weight===o.weight?r.index-o.index:r.weight-o.weight}))}function st(e,t,n,r){return Math.max(e[n],t[n])+Math.max(e[r],t[r])}function ct(e,t,n){var r,o,i=n.box,a=e.maxPadding;if(n.size&&(e[n.pos]-=n.size),n.size=n.horizontal?i.height:i.width,e[n.pos]+=n.size,i.getPadding){var l=i.getPadding();a.top=Math.max(a.top,l.top),a.left=Math.max(a.left,l.left),a.bottom=Math.max(a.bottom,l.bottom),a.right=Math.max(a.right,l.right)}if(r=t.outerWidth-st(a,e,"left","right"),o=t.outerHeight-st(a,e,"top","bottom"),r!==e.w||o!==e.h)return e.w=r,e.h=o,n.horizontal?r!==e.w:o!==e.h}function ut(e,t){var n=t.maxPadding;function r(e){var r={left:0,top:0,right:0,bottom:0};return e.forEach((function(e){r[e]=Math.max(t[e],n[e])})),r}return r(e?["left","right"]:["top","bottom"])}function dt(e,t,n){var r,o,i,a,l,s,c=[];for(r=0,o=e.length;r<o;++r)(a=(i=e[r]).box).update(i.width||t.w,i.height||t.h,ut(i.horizontal,t)),ct(t,n,i)&&(s=!0,c.length&&(l=!0)),a.fullWidth||c.push(i);return l&&dt(c,t,n)||s}function ft(e,t,n){var r,o,i,a,l=n.padding,s=t.x,c=t.y;for(r=0,o=e.length;r<o;++r)a=(i=e[r]).box,i.horizontal?(a.left=a.fullWidth?l.left:t.left,a.right=a.fullWidth?n.outerWidth-l.right:t.left+t.w,a.top=c,a.bottom=c+a.height,a.width=a.right-a.left,c=a.bottom):(a.left=s,a.right=s+a.width,a.top=t.top,a.bottom=t.top+t.h,a.height=a.bottom-a.top,s=a.right);t.x=s,t.y=c}L._set("global",{layout:{padding:{top:0,right:0,bottom:0,left:0}}});var pt,ht={defaults:{},addBox:function(e,t){e.boxes||(e.boxes=[]),t.fullWidth=t.fullWidth||!1,t.position=t.position||"top",t.weight=t.weight||0,t._layers=t._layers||function(){return[{z:0,draw:function(){t.draw.apply(t,arguments)}}]},e.boxes.push(t)},removeBox:function(e,t){var n=e.boxes?e.boxes.indexOf(t):-1;-1!==n&&e.boxes.splice(n,1)},configure:function(e,t,n){for(var r,o=["fullWidth","position","weight"],i=o.length,a=0;a<i;++a)r=o[a],n.hasOwnProperty(r)&&(t[r]=n[r])},update:function(e,t,n){if(e){var r=e.options.layout||{},o=W.options.toPadding(r.padding),i=t-o.width,a=n-o.height,l=function(e){var t=function(e){var t,n,r,o=[];for(t=0,n=(e||[]).length;t<n;++t)r=e[t],o.push({index:t,box:r,pos:r.position,horizontal:r.isHorizontal(),weight:r.weight});return o}(e),n=lt(at(t,"left"),!0),r=lt(at(t,"right")),o=lt(at(t,"top"),!0),i=lt(at(t,"bottom"));return{leftAndTop:n.concat(o),rightAndBottom:r.concat(i),chartArea:at(t,"chartArea"),vertical:n.concat(r),horizontal:o.concat(i)}}(e.boxes),s=l.vertical,c=l.horizontal,u=Object.freeze({outerWidth:t,outerHeight:n,padding:o,availableWidth:i,vBoxMaxWidth:i/2/s.length,hBoxMaxHeight:a/2}),d=it({maxPadding:it({},o),w:i,h:a,x:o.left,y:o.top},o);!function(e,t){var n,r,o;for(n=0,r=e.length;n<r;++n)(o=e[n]).width=o.horizontal?o.box.fullWidth&&t.availableWidth:t.vBoxMaxWidth,o.height=o.horizontal&&t.hBoxMaxHeight}(s.concat(c),u),dt(s,d,u),dt(c,d,u)&&dt(s,d,u),function(e){var t=e.maxPadding;function n(n){var r=Math.max(t[n]-e[n],0);return e[n]+=r,r}e.y+=n("top"),e.x+=n("left"),n("right"),n("bottom")}(d),ft(l.leftAndTop,d,u),d.x+=d.w,d.y+=d.h,ft(l.rightAndBottom,d,u),e.chartArea={left:d.left,top:d.top,right:d.left+d.w,bottom:d.top+d.h},W.each(l.chartArea,(function(t){var n=t.box;it(n,e.chartArea),n.update(d.w,d.h)}))}}},gt=(pt=Object.freeze({__proto__:null,default:"/*\n * DOM element rendering detection\n * https://davidwalsh.name/detect-node-insertion\n */\n@keyframes chartjs-render-animation {\n\tfrom { opacity: 0.99; }\n\tto { opacity: 1; }\n}\n\n.chartjs-render-monitor {\n\tanimation: chartjs-render-animation 0.001s;\n}\n\n/*\n * DOM element resizing detection\n * https://github.com/marcj/css-element-queries\n */\n.chartjs-size-monitor,\n.chartjs-size-monitor-expand,\n.chartjs-size-monitor-shrink {\n\tposition: absolute;\n\tdirection: ltr;\n\tleft: 0;\n\ttop: 0;\n\tright: 0;\n\tbottom: 0;\n\toverflow: hidden;\n\tpointer-events: none;\n\tvisibility: hidden;\n\tz-index: -1;\n}\n\n.chartjs-size-monitor-expand > div {\n\tposition: absolute;\n\twidth: 1000000px;\n\theight: 1000000px;\n\tleft: 0;\n\ttop: 0;\n}\n\n.chartjs-size-monitor-shrink > div {\n\tposition: absolute;\n\twidth: 200%;\n\theight: 200%;\n\tleft: 0;\n\ttop: 0;\n}\n"}))&&pt.default||pt,mt=["animationstart","webkitAnimationStart"],bt={touchstart:"mousedown",touchmove:"mousemove",touchend:"mouseup",pointerenter:"mouseenter",pointerdown:"mousedown",pointermove:"mousemove",pointerup:"mouseup",pointerleave:"mouseout",pointerout:"mouseout"};function vt(e,t){var n=W.getStyle(e,t),r=n&&n.match(/^(\d+)(\.\d+)?px$/);return r?Number(r[1]):void 0}var yt=!!function(){var e=!1;try{var t=Object.defineProperty({},"passive",{get:function(){e=!0}});window.addEventListener("e",null,t)}catch(e){}return e}()&&{passive:!0};function xt(e,t,n){e.addEventListener(t,n,yt)}function wt(e,t,n){e.removeEventListener(t,n,yt)}function kt(e,t,n,r,o){return{type:e,chart:t,native:o||null,x:void 0!==n?n:null,y:void 0!==r?r:null}}function _t(e){var t=document.createElement("div");return t.className=e||"",t}function Et(e,t,n){var r,o,i,a,l=e.$chartjs||(e.$chartjs={}),s=l.resizer=function(e){var t=_t("chartjs-size-monitor"),n=_t("chartjs-size-monitor-expand"),r=_t("chartjs-size-monitor-shrink");n.appendChild(_t()),r.appendChild(_t()),t.appendChild(n),t.appendChild(r),t._reset=function(){n.scrollLeft=1e6,n.scrollTop=1e6,r.scrollLeft=1e6,r.scrollTop=1e6};var o=function(){t._reset(),e()};return xt(n,"scroll",o.bind(n,"expand")),xt(r,"scroll",o.bind(r,"shrink")),t}((r=function(){if(l.resizer){var r=n.options.maintainAspectRatio&&e.parentNode,o=r?r.clientWidth:0;t(kt("resize",n)),r&&r.clientWidth<o&&n.canvas&&t(kt("resize",n))}},i=!1,a=[],function(){a=Array.prototype.slice.call(arguments),o=o||this,i||(i=!0,W.requestAnimFrame.call(window,(function(){i=!1,r.apply(o,a)})))}));!function(e,t){var n=e.$chartjs||(e.$chartjs={}),r=n.renderProxy=function(e){"chartjs-render-animation"===e.animationName&&t()};W.each(mt,(function(t){xt(e,t,r)})),n.reflow=!!e.offsetParent,e.classList.add("chartjs-render-monitor")}(e,(function(){if(l.resizer){var t=e.parentNode;t&&t!==s.parentNode&&t.insertBefore(s,t.firstChild),s._reset()}}))}function St(e){var t=e.$chartjs||{},n=t.resizer;delete t.resizer,function(e){var t=e.$chartjs||{},n=t.renderProxy;n&&(W.each(mt,(function(t){wt(e,t,n)})),delete t.renderProxy),e.classList.remove("chartjs-render-monitor")}(e),n&&n.parentNode&&n.parentNode.removeChild(n)}var Pt={disableCSSInjection:!1,_enabled:"undefined"!=typeof window&&"undefined"!=typeof document,_ensureLoaded:function(e){if(!this.disableCSSInjection){var t=e.getRootNode?e.getRootNode():document;!function(e,t){var n=e.$chartjs||(e.$chartjs={});if(!n.containsStyles){n.containsStyles=!0,t="/* Chart.js */\n"+t;var r=document.createElement("style");r.setAttribute("type","text/css"),r.appendChild(document.createTextNode(t)),e.appendChild(r)}}(t.host?t:document.head,gt)}},acquireContext:function(e,t){"string"==typeof e?e=document.getElementById(e):e.length&&(e=e[0]),e&&e.canvas&&(e=e.canvas);var n=e&&e.getContext&&e.getContext("2d");return n&&n.canvas===e?(this._ensureLoaded(e),function(e,t){var n=e.style,r=e.getAttribute("height"),o=e.getAttribute("width");if(e.$chartjs={initial:{height:r,width:o,style:{display:n.display,height:n.height,width:n.width}}},n.display=n.display||"block",null===o||""===o){var i=vt(e,"width");void 0!==i&&(e.width=i)}if(null===r||""===r)if(""===e.style.height)e.height=e.width/(t.options.aspectRatio||2);else{var a=vt(e,"height");void 0!==i&&(e.height=a)}}(e,t),n):null},releaseContext:function(e){var t=e.canvas;if(t.$chartjs){var n=t.$chartjs.initial;["height","width"].forEach((function(e){var r=n[e];W.isNullOrUndef(r)?t.removeAttribute(e):t.setAttribute(e,r)})),W.each(n.style||{},(function(e,n){t.style[n]=e})),t.width=t.width,delete t.$chartjs}},addEventListener:function(e,t,n){var r=e.canvas;if("resize"!==t){var o=n.$chartjs||(n.$chartjs={});xt(r,t,(o.proxies||(o.proxies={}))[e.id+"_"+t]=function(t){n(function(e,t){var n=bt[e.type]||e.type,r=W.getRelativePosition(e,t);return kt(n,t,r.x,r.y,e)}(t,e))})}else Et(r,n,e)},removeEventListener:function(e,t,n){var r=e.canvas;if("resize"!==t){var o=((n.$chartjs||{}).proxies||{})[e.id+"_"+t];o&&wt(r,t,o)}else St(r)}};W.addEvent=xt,W.removeEvent=wt;var zt=Pt._enabled?Pt:{acquireContext:function(e){return e&&e.canvas&&(e=e.canvas),e&&e.getContext("2d")||null}},Mt=W.extend({initialize:function(){},acquireContext:function(){},releaseContext:function(){},addEventListener:function(){},removeEventListener:function(){}},zt);L._set("global",{plugins:{}});var Ct={_plugins:[],_cacheId:0,register:function(e){var t=this._plugins;[].concat(e).forEach((function(e){-1===t.indexOf(e)&&t.push(e)})),this._cacheId++},unregister:function(e){var t=this._plugins;[].concat(e).forEach((function(e){var n=t.indexOf(e);-1!==n&&t.splice(n,1)})),this._cacheId++},clear:function(){this._plugins=[],this._cacheId++},count:function(){return this._plugins.length},getAll:function(){return this._plugins},notify:function(e,t,n){var r,o,i,a,l,s=this.descriptors(e),c=s.length;for(r=0;r<c;++r)if("function"==typeof(l=(i=(o=s[r]).plugin)[t])&&((a=[e].concat(n||[])).push(o.options),!1===l.apply(i,a)))return!1;return!0},descriptors:function(e){var t=e.$plugins||(e.$plugins={});if(t.id===this._cacheId)return t.descriptors;var n=[],r=[],o=e&&e.config||{},i=o.options&&o.options.plugins||{};return this._plugins.concat(o.plugins||[]).forEach((function(e){if(-1===n.indexOf(e)){var t=e.id,o=i[t];!1!==o&&(!0===o&&(o=W.clone(L.global.plugins[t])),n.push(e),r.push({plugin:e,options:o||{}}))}})),t.descriptors=r,t.id=this._cacheId,r},_invalidate:function(e){delete e.$plugins}},Ot={constructors:{},defaults:{},registerScaleType:function(e,t,n){this.constructors[e]=t,this.defaults[e]=W.clone(n)},getScaleConstructor:function(e){return this.constructors.hasOwnProperty(e)?this.constructors[e]:void 0},getScaleDefaults:function(e){return this.defaults.hasOwnProperty(e)?W.merge({},[L.scale,this.defaults[e]]):{}},updateScaleDefaults:function(e,t){this.defaults.hasOwnProperty(e)&&(this.defaults[e]=W.extend(this.defaults[e],t))},addScalesToLayout:function(e){W.each(e.scales,(function(t){t.fullWidth=t.options.fullWidth,t.position=t.options.position,t.weight=t.options.weight,ht.addBox(e,t)}))}},Tt=W.valueOrDefault,Nt=W.rtl.getRtlAdapter;L._set("global",{tooltips:{enabled:!0,custom:null,mode:"nearest",position:"average",intersect:!0,backgroundColor:"rgba(0,0,0,0.8)",titleFontStyle:"bold",titleSpacing:2,titleMarginBottom:6,titleFontColor:"#fff",titleAlign:"left",bodySpacing:2,bodyFontColor:"#fff",bodyAlign:"left",footerFontStyle:"bold",footerSpacing:2,footerMarginTop:6,footerFontColor:"#fff",footerAlign:"left",yPadding:6,xPadding:6,caretPadding:2,caretSize:5,cornerRadius:6,multiKeyBackground:"#fff",displayColors:!0,borderColor:"rgba(0,0,0,0)",borderWidth:0,callbacks:{beforeTitle:W.noop,title:function(e,t){var n="",r=t.labels,o=r?r.length:0;if(e.length>0){var i=e[0];i.label?n=i.label:i.xLabel?n=i.xLabel:o>0&&i.index<o&&(n=r[i.index])}return n},afterTitle:W.noop,beforeBody:W.noop,beforeLabel:W.noop,label:function(e,t){var n=t.datasets[e.datasetIndex].label||"";return n&&(n+=": "),W.isNullOrUndef(e.value)?n+=e.yLabel:n+=e.value,n},labelColor:function(e,t){var n=t.getDatasetMeta(e.datasetIndex).data[e.index]._view;return{borderColor:n.borderColor,backgroundColor:n.backgroundColor}},labelTextColor:function(){return this._options.bodyFontColor},afterLabel:W.noop,afterBody:W.noop,beforeFooter:W.noop,footer:W.noop,afterFooter:W.noop}}});var Dt={average:function(e){if(!e.length)return!1;var t,n,r=0,o=0,i=0;for(t=0,n=e.length;t<n;++t){var a=e[t];if(a&&a.hasValue()){var l=a.tooltipPosition();r+=l.x,o+=l.y,++i}}return{x:r/i,y:o/i}},nearest:function(e,t){var n,r,o,i=t.x,a=t.y,l=Number.POSITIVE_INFINITY;for(n=0,r=e.length;n<r;++n){var s=e[n];if(s&&s.hasValue()){var c=s.getCenterPoint(),u=W.distanceBetweenPoints(t,c);u<l&&(l=u,o=s)}}if(o){var d=o.tooltipPosition();i=d.x,a=d.y}return{x:i,y:a}}};function jt(e,t){return t&&(W.isArray(t)?Array.prototype.push.apply(e,t):e.push(t)),e}function It(e){return("string"==typeof e||e instanceof String)&&e.indexOf("\n")>-1?e.split("\n"):e}function Lt(e){var t=L.global;return{xPadding:e.xPadding,yPadding:e.yPadding,xAlign:e.xAlign,yAlign:e.yAlign,rtl:e.rtl,textDirection:e.textDirection,bodyFontColor:e.bodyFontColor,_bodyFontFamily:Tt(e.bodyFontFamily,t.defaultFontFamily),_bodyFontStyle:Tt(e.bodyFontStyle,t.defaultFontStyle),_bodyAlign:e.bodyAlign,bodyFontSize:Tt(e.bodyFontSize,t.defaultFontSize),bodySpacing:e.bodySpacing,titleFontColor:e.titleFontColor,_titleFontFamily:Tt(e.titleFontFamily,t.defaultFontFamily),_titleFontStyle:Tt(e.titleFontStyle,t.defaultFontStyle),titleFontSize:Tt(e.titleFontSize,t.defaultFontSize),_titleAlign:e.titleAlign,titleSpacing:e.titleSpacing,titleMarginBottom:e.titleMarginBottom,footerFontColor:e.footerFontColor,_footerFontFamily:Tt(e.footerFontFamily,t.defaultFontFamily),_footerFontStyle:Tt(e.footerFontStyle,t.defaultFontStyle),footerFontSize:Tt(e.footerFontSize,t.defaultFontSize),_footerAlign:e.footerAlign,footerSpacing:e.footerSpacing,footerMarginTop:e.footerMarginTop,caretSize:e.caretSize,cornerRadius:e.cornerRadius,backgroundColor:e.backgroundColor,opacity:0,legendColorBackground:e.multiKeyBackground,displayColors:e.displayColors,borderColor:e.borderColor,borderWidth:e.borderWidth}}function At(e,t){return"center"===t?e.x+e.width/2:"right"===t?e.x+e.width-e.xPadding:e.x+e.xPadding}function Rt(e){return jt([],It(e))}var Bt=J.extend({initialize:function(){this._model=Lt(this._options),this._lastActive=[]},getTitle:function(){var e=this,t=e._options,n=t.callbacks,r=n.beforeTitle.apply(e,arguments),o=n.title.apply(e,arguments),i=n.afterTitle.apply(e,arguments),a=[];return a=jt(a,It(r)),a=jt(a,It(o)),a=jt(a,It(i))},getBeforeBody:function(){return Rt(this._options.callbacks.beforeBody.apply(this,arguments))},getBody:function(e,t){var n=this,r=n._options.callbacks,o=[];return W.each(e,(function(e){var i={before:[],lines:[],after:[]};jt(i.before,It(r.beforeLabel.call(n,e,t))),jt(i.lines,r.label.call(n,e,t)),jt(i.after,It(r.afterLabel.call(n,e,t))),o.push(i)})),o},getAfterBody:function(){return Rt(this._options.callbacks.afterBody.apply(this,arguments))},getFooter:function(){var e=this,t=e._options.callbacks,n=t.beforeFooter.apply(e,arguments),r=t.footer.apply(e,arguments),o=t.afterFooter.apply(e,arguments),i=[];return i=jt(i,It(n)),i=jt(i,It(r)),i=jt(i,It(o))},update:function(e){var t,n,r,o,i,a,l,s,c,u,d=this,f=d._options,p=d._model,h=d._model=Lt(f),g=d._active,m=d._data,b={xAlign:p.xAlign,yAlign:p.yAlign},v={x:p.x,y:p.y},y={width:p.width,height:p.height},x={x:p.caretX,y:p.caretY};if(g.length){h.opacity=1;var w=[],k=[];x=Dt[f.position].call(d,g,d._eventPosition);var _=[];for(t=0,n=g.length;t<n;++t)_.push((r=g[t],o=void 0,i=void 0,a=void 0,l=void 0,s=void 0,c=void 0,u=void 0,o=r._xScale,i=r._yScale||r._scale,a=r._index,l=r._datasetIndex,s=r._chart.getDatasetMeta(l).controller,c=s._getIndexScale(),u=s._getValueScale(),{xLabel:o?o.getLabelForIndex(a,l):"",yLabel:i?i.getLabelForIndex(a,l):"",label:c?""+c.getLabelForIndex(a,l):"",value:u?""+u.getLabelForIndex(a,l):"",index:a,datasetIndex:l,x:r._model.x,y:r._model.y}));f.filter&&(_=_.filter((function(e){return f.filter(e,m)}))),f.itemSort&&(_=_.sort((function(e,t){return f.itemSort(e,t,m)}))),W.each(_,(function(e){w.push(f.callbacks.labelColor.call(d,e,d._chart)),k.push(f.callbacks.labelTextColor.call(d,e,d._chart))})),h.title=d.getTitle(_,m),h.beforeBody=d.getBeforeBody(_,m),h.body=d.getBody(_,m),h.afterBody=d.getAfterBody(_,m),h.footer=d.getFooter(_,m),h.x=x.x,h.y=x.y,h.caretPadding=f.caretPadding,h.labelColors=w,h.labelTextColors=k,h.dataPoints=_,y=function(e,t){var n=e._chart.ctx,r=2*t.yPadding,o=0,i=t.body,a=i.reduce((function(e,t){return e+t.before.length+t.lines.length+t.after.length}),0);a+=t.beforeBody.length+t.afterBody.length;var l=t.title.length,s=t.footer.length,c=t.titleFontSize,u=t.bodyFontSize,d=t.footerFontSize;r+=l*c,r+=l?(l-1)*t.titleSpacing:0,r+=l?t.titleMarginBottom:0,r+=a*u,r+=a?(a-1)*t.bodySpacing:0,r+=s?t.footerMarginTop:0,r+=s*d,r+=s?(s-1)*t.footerSpacing:0;var f=0,p=function(e){o=Math.max(o,n.measureText(e).width+f)};return n.font=W.fontString(c,t._titleFontStyle,t._titleFontFamily),W.each(t.title,p),n.font=W.fontString(u,t._bodyFontStyle,t._bodyFontFamily),W.each(t.beforeBody.concat(t.afterBody),p),f=t.displayColors?u+2:0,W.each(i,(function(e){W.each(e.before,p),W.each(e.lines,p),W.each(e.after,p)})),f=0,n.font=W.fontString(d,t._footerFontStyle,t._footerFontFamily),W.each(t.footer,p),{width:o+=2*t.xPadding,height:r}}(this,h),v=function(e,t,n,r){var o=e.x,i=e.y,a=e.caretSize,l=e.caretPadding,s=e.cornerRadius,c=n.xAlign,u=n.yAlign,d=a+l,f=s+l;return"right"===c?o-=t.width:"center"===c&&((o-=t.width/2)+t.width>r.width&&(o=r.width-t.width),o<0&&(o=0)),"top"===u?i+=d:i-="bottom"===u?t.height+d:t.height/2,"center"===u?"left"===c?o+=d:"right"===c&&(o-=d):"left"===c?o-=f:"right"===c&&(o+=f),{x:o,y:i}}(h,y,b=function(e,t){var n,r,o,i,a,l=e._model,s=e._chart,c=e._chart.chartArea,u="center",d="center";l.y<t.height?d="top":l.y>s.height-t.height&&(d="bottom");var f=(c.left+c.right)/2,p=(c.top+c.bottom)/2;"center"===d?(n=function(e){return e<=f},r=function(e){return e>f}):(n=function(e){return e<=t.width/2},r=function(e){return e>=s.width-t.width/2}),o=function(e){return e+t.width+l.caretSize+l.caretPadding>s.width},i=function(e){return e-t.width-l.caretSize-l.caretPadding<0},a=function(e){return e<=p?"top":"bottom"},n(l.x)?(u="left",o(l.x)&&(u="center",d=a(l.y))):r(l.x)&&(u="right",i(l.x)&&(u="center",d=a(l.y)));var h=e._options;return{xAlign:h.xAlign?h.xAlign:u,yAlign:h.yAlign?h.yAlign:d}}(this,y),d._chart)}else h.opacity=0;return h.xAlign=b.xAlign,h.yAlign=b.yAlign,h.x=v.x,h.y=v.y,h.width=y.width,h.height=y.height,h.caretX=x.x,h.caretY=x.y,d._model=h,e&&f.custom&&f.custom.call(d,h),d},drawCaret:function(e,t){var n=this._chart.ctx,r=this._view,o=this.getCaretPosition(e,t,r);n.lineTo(o.x1,o.y1),n.lineTo(o.x2,o.y2),n.lineTo(o.x3,o.y3)},getCaretPosition:function(e,t,n){var r,o,i,a,l,s,c=n.caretSize,u=n.cornerRadius,d=n.xAlign,f=n.yAlign,p=e.x,h=e.y,g=t.width,m=t.height;if("center"===f)l=h+m/2,"left"===d?(o=(r=p)-c,i=r,a=l+c,s=l-c):(o=(r=p+g)+c,i=r,a=l-c,s=l+c);else if("left"===d?(r=(o=p+u+c)-c,i=o+c):"right"===d?(r=(o=p+g-u-c)-c,i=o+c):(r=(o=n.caretX)-c,i=o+c),"top"===f)l=(a=h)-c,s=a;else{l=(a=h+m)+c,s=a;var b=i;i=r,r=b}return{x1:r,x2:o,x3:i,y1:a,y2:l,y3:s}},drawTitle:function(e,t,n){var r,o,i,a=t.title,l=a.length;if(l){var s=Nt(t.rtl,t.x,t.width);for(e.x=At(t,t._titleAlign),n.textAlign=s.textAlign(t._titleAlign),n.textBaseline="middle",r=t.titleFontSize,o=t.titleSpacing,n.fillStyle=t.titleFontColor,n.font=W.fontString(r,t._titleFontStyle,t._titleFontFamily),i=0;i<l;++i)n.fillText(a[i],s.x(e.x),e.y+r/2),e.y+=r+o,i+1===l&&(e.y+=t.titleMarginBottom-o)}},drawBody:function(e,t,n){var r,o,i,a,l,s,c,u,d=t.bodyFontSize,f=t.bodySpacing,p=t._bodyAlign,h=t.body,g=t.displayColors,m=0,b=g?At(t,"left"):0,v=Nt(t.rtl,t.x,t.width),y=function(t){n.fillText(t,v.x(e.x+m),e.y+d/2),e.y+=d+f},x=v.textAlign(p);for(n.textAlign=p,n.textBaseline="middle",n.font=W.fontString(d,t._bodyFontStyle,t._bodyFontFamily),e.x=At(t,x),n.fillStyle=t.bodyFontColor,W.each(t.beforeBody,y),m=g&&"right"!==x?"center"===p?d/2+1:d+2:0,l=0,c=h.length;l<c;++l){for(r=h[l],o=t.labelTextColors[l],i=t.labelColors[l],n.fillStyle=o,W.each(r.before,y),s=0,u=(a=r.lines).length;s<u;++s){if(g){var w=v.x(b);n.fillStyle=t.legendColorBackground,n.fillRect(v.leftForLtr(w,d),e.y,d,d),n.lineWidth=1,n.strokeStyle=i.borderColor,n.strokeRect(v.leftForLtr(w,d),e.y,d,d),n.fillStyle=i.backgroundColor,n.fillRect(v.leftForLtr(v.xPlus(w,1),d-2),e.y+1,d-2,d-2),n.fillStyle=o}y(a[s])}W.each(r.after,y)}m=0,W.each(t.afterBody,y),e.y-=f},drawFooter:function(e,t,n){var r,o,i=t.footer,a=i.length;if(a){var l=Nt(t.rtl,t.x,t.width);for(e.x=At(t,t._footerAlign),e.y+=t.footerMarginTop,n.textAlign=l.textAlign(t._footerAlign),n.textBaseline="middle",r=t.footerFontSize,n.fillStyle=t.footerFontColor,n.font=W.fontString(r,t._footerFontStyle,t._footerFontFamily),o=0;o<a;++o)n.fillText(i[o],l.x(e.x),e.y+r/2),e.y+=r+t.footerSpacing}},drawBackground:function(e,t,n,r){n.fillStyle=t.backgroundColor,n.strokeStyle=t.borderColor,n.lineWidth=t.borderWidth;var o=t.xAlign,i=t.yAlign,a=e.x,l=e.y,s=r.width,c=r.height,u=t.cornerRadius;n.beginPath(),n.moveTo(a+u,l),"top"===i&&this.drawCaret(e,r),n.lineTo(a+s-u,l),n.quadraticCurveTo(a+s,l,a+s,l+u),"center"===i&&"right"===o&&this.drawCaret(e,r),n.lineTo(a+s,l+c-u),n.quadraticCurveTo(a+s,l+c,a+s-u,l+c),"bottom"===i&&this.drawCaret(e,r),n.lineTo(a+u,l+c),n.quadraticCurveTo(a,l+c,a,l+c-u),"center"===i&&"left"===o&&this.drawCaret(e,r),n.lineTo(a,l+u),n.quadraticCurveTo(a,l,a+u,l),n.closePath(),n.fill(),t.borderWidth>0&&n.stroke()},draw:function(){var e=this._chart.ctx,t=this._view;if(0!==t.opacity){var n={width:t.width,height:t.height},r={x:t.x,y:t.y},o=Math.abs(t.opacity<.001)?0:t.opacity,i=t.title.length||t.beforeBody.length||t.body.length||t.afterBody.length||t.footer.length;this._options.enabled&&i&&(e.save(),e.globalAlpha=o,this.drawBackground(r,t,e,n),r.y+=t.yPadding,W.rtl.overrideTextDirection(e,t.textDirection),this.drawTitle(r,t,e),this.drawBody(r,t,e),this.drawFooter(r,t,e),W.rtl.restoreTextDirection(e,t.textDirection),e.restore())}},handleEvent:function(e){var t,n=this,r=n._options;return n._lastActive=n._lastActive||[],"mouseout"===e.type?n._active=[]:(n._active=n._chart.getElementsAtEventForMode(e,r.mode,r),r.reverse&&n._active.reverse()),(t=!W.arrayEquals(n._active,n._lastActive))&&(n._lastActive=n._active,(r.enabled||r.custom)&&(n._eventPosition={x:e.x,y:e.y},n.update(!0),n.pivot())),t}}),Ft=Dt,Wt=Bt;Wt.positioners=Ft;var Ut=W.valueOrDefault;function Ht(){return W.merge({},[].slice.call(arguments),{merger:function(e,t,n,r){if("xAxes"===e||"yAxes"===e){var o,i,a,l=n[e].length;for(t[e]||(t[e]=[]),o=0;o<l;++o)a=n[e][o],i=Ut(a.type,"xAxes"===e?"category":"linear"),o>=t[e].length&&t[e].push({}),!t[e][o].type||a.type&&a.type!==t[e][o].type?W.merge(t[e][o],[Ot.getScaleDefaults(i),a]):W.merge(t[e][o],a)}else W._merger(e,t,n,r)}})}function Vt(){return W.merge({},[].slice.call(arguments),{merger:function(e,t,n,r){var o=t[e]||{},i=n[e];"scales"===e?t[e]=Ht(o,i):"scale"===e?t[e]=W.merge(o,[Ot.getScaleDefaults(i.type),i]):W._merger(e,t,n,r)}})}function qt(e){var t=e.options;W.each(e.scales,(function(t){ht.removeBox(e,t)})),t=Vt(L.global,L[e.config.type],t),e.options=e.config.options=t,e.ensureScalesHaveIDs(),e.buildOrUpdateScales(),e.tooltip._options=t.tooltips,e.tooltip.initialize()}function Kt(e,t,n){var r,o=function(e){return e.id===r};do{r=t+n++}while(W.findIndex(e,o)>=0);return r}function $t(e){return"top"===e||"bottom"===e}function Jt(e,t){return function(n,r){return n[e]===r[e]?n[t]-r[t]:n[e]-r[e]}}L._set("global",{elements:{},events:["mousemove","mouseout","click","touchstart","touchmove"],hover:{onHover:null,mode:"nearest",intersect:!0,animationDuration:400},onClick:null,maintainAspectRatio:!0,responsive:!0,responsiveAnimationDuration:0});var Gt=function(e,t){return this.construct(e,t),this};W.extend(Gt.prototype,{construct:function(e,t){var n=this;t=function(e){var t=(e=e||{}).data=e.data||{};return t.datasets=t.datasets||[],t.labels=t.labels||[],e.options=Vt(L.global,L[e.type],e.options||{}),e}(t);var r=Mt.acquireContext(e,t),o=r&&r.canvas,i=o&&o.height,a=o&&o.width;n.id=W.uid(),n.ctx=r,n.canvas=o,n.config=t,n.width=a,n.height=i,n.aspectRatio=i?a/i:null,n.options=t.options,n._bufferedRender=!1,n._layers=[],n.chart=n,n.controller=n,Gt.instances[n.id]=n,Object.defineProperty(n,"data",{get:function(){return n.config.data},set:function(e){n.config.data=e}}),r&&o?(n.initialize(),n.update()):console.error("Failed to create chart: can't acquire context from the given item")},initialize:function(){var e=this;return Ct.notify(e,"beforeInit"),W.retinaScale(e,e.options.devicePixelRatio),e.bindEvents(),e.options.responsive&&e.resize(!0),e.initToolTip(),Ct.notify(e,"afterInit"),e},clear:function(){return W.canvas.clear(this),this},stop:function(){return Z.cancelAnimation(this),this},resize:function(e){var t=this,n=t.options,r=t.canvas,o=n.maintainAspectRatio&&t.aspectRatio||null,i=Math.max(0,Math.floor(W.getMaximumWidth(r))),a=Math.max(0,Math.floor(o?i/o:W.getMaximumHeight(r)));if((t.width!==i||t.height!==a)&&(r.width=t.width=i,r.height=t.height=a,r.style.width=i+"px",r.style.height=a+"px",W.retinaScale(t,n.devicePixelRatio),!e)){var l={width:i,height:a};Ct.notify(t,"resize",[l]),n.onResize&&n.onResize(t,l),t.stop(),t.update({duration:n.responsiveAnimationDuration})}},ensureScalesHaveIDs:function(){var e=this.options,t=e.scales||{},n=e.scale;W.each(t.xAxes,(function(e,n){e.id||(e.id=Kt(t.xAxes,"x-axis-",n))})),W.each(t.yAxes,(function(e,n){e.id||(e.id=Kt(t.yAxes,"y-axis-",n))})),n&&(n.id=n.id||"scale")},buildOrUpdateScales:function(){var e=this,t=e.options,n=e.scales||{},r=[],o=Object.keys(n).reduce((function(e,t){return e[t]=!1,e}),{});t.scales&&(r=r.concat((t.scales.xAxes||[]).map((function(e){return{options:e,dtype:"category",dposition:"bottom"}})),(t.scales.yAxes||[]).map((function(e){return{options:e,dtype:"linear",dposition:"left"}})))),t.scale&&r.push({options:t.scale,dtype:"radialLinear",isDefault:!0,dposition:"chartArea"}),W.each(r,(function(t){var r=t.options,i=r.id,a=Ut(r.type,t.dtype);$t(r.position)!==$t(t.dposition)&&(r.position=t.dposition),o[i]=!0;var l=null;if(i in n&&n[i].type===a)(l=n[i]).options=r,l.ctx=e.ctx,l.chart=e;else{var s=Ot.getScaleConstructor(a);if(!s)return;l=new s({id:i,type:a,options:r,ctx:e.ctx,chart:e}),n[l.id]=l}l.mergeTicksOptions(),t.isDefault&&(e.scale=l)})),W.each(o,(function(e,t){e||delete n[t]})),e.scales=n,Ot.addScalesToLayout(this)},buildOrUpdateControllers:function(){var e,t,n=this,r=[],o=n.data.datasets;for(e=0,t=o.length;e<t;e++){var i=o[e],a=n.getDatasetMeta(e),l=i.type||n.config.type;if(a.type&&a.type!==l&&(n.destroyDatasetMeta(e),a=n.getDatasetMeta(e)),a.type=l,a.order=i.order||0,a.index=e,a.controller)a.controller.updateIndex(e),a.controller.linkScales();else{var s=Ze[a.type];if(void 0===s)throw new Error('"'+a.type+'" is not a chart type.');a.controller=new s(n,e),r.push(a.controller)}}return r},resetElements:function(){var e=this;W.each(e.data.datasets,(function(t,n){e.getDatasetMeta(n).controller.reset()}),e)},reset:function(){this.resetElements(),this.tooltip.initialize()},update:function(e){var t,n,r=this;if(e&&"object"==typeof e||(e={duration:e,lazy:arguments[1]}),qt(r),Ct._invalidate(r),!1!==Ct.notify(r,"beforeUpdate")){r.tooltip._data=r.data;var o=r.buildOrUpdateControllers();for(t=0,n=r.data.datasets.length;t<n;t++)r.getDatasetMeta(t).controller.buildOrUpdateElements();r.updateLayout(),r.options.animation&&r.options.animation.duration&&W.each(o,(function(e){e.reset()})),r.updateDatasets(),r.tooltip.initialize(),r.lastActive=[],Ct.notify(r,"afterUpdate"),r._layers.sort(Jt("z","_idx")),r._bufferedRender?r._bufferedRequest={duration:e.duration,easing:e.easing,lazy:e.lazy}:r.render(e)}},updateLayout:function(){var e=this;!1!==Ct.notify(e,"beforeLayout")&&(ht.update(this,this.width,this.height),e._layers=[],W.each(e.boxes,(function(t){t._configure&&t._configure(),e._layers.push.apply(e._layers,t._layers())}),e),e._layers.forEach((function(e,t){e._idx=t})),Ct.notify(e,"afterScaleUpdate"),Ct.notify(e,"afterLayout"))},updateDatasets:function(){if(!1!==Ct.notify(this,"beforeDatasetsUpdate")){for(var e=0,t=this.data.datasets.length;e<t;++e)this.updateDataset(e);Ct.notify(this,"afterDatasetsUpdate")}},updateDataset:function(e){var t=this.getDatasetMeta(e),n={meta:t,index:e};!1!==Ct.notify(this,"beforeDatasetUpdate",[n])&&(t.controller._update(),Ct.notify(this,"afterDatasetUpdate",[n]))},render:function(e){var t=this;e&&"object"==typeof e||(e={duration:e,lazy:arguments[1]});var n=t.options.animation,r=Ut(e.duration,n&&n.duration),o=e.lazy;if(!1!==Ct.notify(t,"beforeRender")){var i=function(e){Ct.notify(t,"afterRender"),W.callback(n&&n.onComplete,[e],t)};if(n&&r){var a=new Y({numSteps:r/16.66,easing:e.easing||n.easing,render:function(e,t){var n=W.easing.effects[t.easing],r=t.currentStep,o=r/t.numSteps;e.draw(n(o),o,r)},onAnimationProgress:n.onProgress,onAnimationComplete:i});Z.addAnimation(t,a,r,o)}else t.draw(),i(new Y({numSteps:0,chart:t}));return t}},draw:function(e){var t,n,r=this;if(r.clear(),W.isNullOrUndef(e)&&(e=1),r.transition(e),!(r.width<=0||r.height<=0)&&!1!==Ct.notify(r,"beforeDraw",[e])){for(n=r._layers,t=0;t<n.length&&n[t].z<=0;++t)n[t].draw(r.chartArea);for(r.drawDatasets(e);t<n.length;++t)n[t].draw(r.chartArea);r._drawTooltip(e),Ct.notify(r,"afterDraw",[e])}},transition:function(e){for(var t=0,n=(this.data.datasets||[]).length;t<n;++t)this.isDatasetVisible(t)&&this.getDatasetMeta(t).controller.transition(e);this.tooltip.transition(e)},_getSortedDatasetMetas:function(e){var t,n,r=[];for(t=0,n=(this.data.datasets||[]).length;t<n;++t)e&&!this.isDatasetVisible(t)||r.push(this.getDatasetMeta(t));return r.sort(Jt("order","index")),r},_getSortedVisibleDatasetMetas:function(){return this._getSortedDatasetMetas(!0)},drawDatasets:function(e){var t,n;if(!1!==Ct.notify(this,"beforeDatasetsDraw",[e])){for(n=(t=this._getSortedVisibleDatasetMetas()).length-1;n>=0;--n)this.drawDataset(t[n],e);Ct.notify(this,"afterDatasetsDraw",[e])}},drawDataset:function(e,t){var n={meta:e,index:e.index,easingValue:t};!1!==Ct.notify(this,"beforeDatasetDraw",[n])&&(e.controller.draw(t),Ct.notify(this,"afterDatasetDraw",[n]))},_drawTooltip:function(e){var t=this.tooltip,n={tooltip:t,easingValue:e};!1!==Ct.notify(this,"beforeTooltipDraw",[n])&&(t.draw(),Ct.notify(this,"afterTooltipDraw",[n]))},getElementAtEvent:function(e){return ot.modes.single(this,e)},getElementsAtEvent:function(e){return ot.modes.label(this,e,{intersect:!0})},getElementsAtXAxis:function(e){return ot.modes["x-axis"](this,e,{intersect:!0})},getElementsAtEventForMode:function(e,t,n){var r=ot.modes[t];return"function"==typeof r?r(this,e,n):[]},getDatasetAtEvent:function(e){return ot.modes.dataset(this,e,{intersect:!0})},getDatasetMeta:function(e){var t=this.data.datasets[e];t._meta||(t._meta={});var n=t._meta[this.id];return n||(n=t._meta[this.id]={type:null,data:[],dataset:null,controller:null,hidden:null,xAxisID:null,yAxisID:null,order:t.order||0,index:e}),n},getVisibleDatasetCount:function(){for(var e=0,t=0,n=this.data.datasets.length;t<n;++t)this.isDatasetVisible(t)&&e++;return e},isDatasetVisible:function(e){var t=this.getDatasetMeta(e);return"boolean"==typeof t.hidden?!t.hidden:!this.data.datasets[e].hidden},generateLegend:function(){return this.options.legendCallback(this)},destroyDatasetMeta:function(e){var t=this.id,n=this.data.datasets[e],r=n._meta&&n._meta[t];r&&(r.controller.destroy(),delete n._meta[t])},destroy:function(){var e,t,n=this,r=n.canvas;for(n.stop(),e=0,t=n.data.datasets.length;e<t;++e)n.destroyDatasetMeta(e);r&&(n.unbindEvents(),W.canvas.clear(n),Mt.releaseContext(n.ctx),n.canvas=null,n.ctx=null),Ct.notify(n,"destroy"),delete Gt.instances[n.id]},toBase64Image:function(){return this.canvas.toDataURL.apply(this.canvas,arguments)},initToolTip:function(){var e=this;e.tooltip=new Wt({_chart:e,_chartInstance:e,_data:e.data,_options:e.options.tooltips},e)},bindEvents:function(){var e=this,t=e._listeners={},n=function(){e.eventHandler.apply(e,arguments)};W.each(e.options.events,(function(r){Mt.addEventListener(e,r,n),t[r]=n})),e.options.responsive&&(n=function(){e.resize()},Mt.addEventListener(e,"resize",n),t.resize=n)},unbindEvents:function(){var e=this,t=e._listeners;t&&(delete e._listeners,W.each(t,(function(t,n){Mt.removeEventListener(e,n,t)})))},updateHoverStyle:function(e,t,n){var r,o,i,a=n?"set":"remove";for(o=0,i=e.length;o<i;++o)(r=e[o])&&this.getDatasetMeta(r._datasetIndex).controller[a+"HoverStyle"](r);"dataset"===t&&this.getDatasetMeta(e[0]._datasetIndex).controller["_"+a+"DatasetHoverStyle"]()},eventHandler:function(e){var t=this,n=t.tooltip;if(!1!==Ct.notify(t,"beforeEvent",[e])){t._bufferedRender=!0,t._bufferedRequest=null;var r=t.handleEvent(e);n&&(r=n._start?n.handleEvent(e):r|n.handleEvent(e)),Ct.notify(t,"afterEvent",[e]);var o=t._bufferedRequest;return o?t.render(o):r&&!t.animating&&(t.stop(),t.render({duration:t.options.hover.animationDuration,lazy:!0})),t._bufferedRender=!1,t._bufferedRequest=null,t}},handleEvent:function(e){var t,n=this,r=n.options||{},o=r.hover;return n.lastActive=n.lastActive||[],"mouseout"===e.type?n.active=[]:n.active=n.getElementsAtEventForMode(e,o.mode,o),W.callback(r.onHover||r.hover.onHover,[e.native,n.active],n),"mouseup"!==e.type&&"click"!==e.type||r.onClick&&r.onClick.call(n,e.native,n.active),n.lastActive.length&&n.updateHoverStyle(n.lastActive,o.mode,!1),n.active.length&&o.mode&&n.updateHoverStyle(n.active,o.mode,!0),t=!W.arrayEquals(n.active,n.lastActive),n.lastActive=n.active,t}}),Gt.instances={};var Yt=Gt;function Zt(){throw new Error("This method is not implemented: either no adapter can be found or an incomplete integration was provided.")}function Qt(e){this.options=e||{}}Gt.Controller=Gt,Gt.types={},W.configMerge=Vt,W.scaleMerge=Ht,W.extend(Qt.prototype,{formats:Zt,parse:Zt,format:Zt,add:Zt,diff:Zt,startOf:Zt,endOf:Zt,_create:function(e){return e}}),Qt.override=function(e){W.extend(Qt.prototype,e)};var Xt={_date:Qt},en={formatters:{values:function(e){return W.isArray(e)?e:""+e},linear:function(e,t,n){var r=n.length>3?n[2]-n[1]:n[1]-n[0];Math.abs(r)>1&&e!==Math.floor(e)&&(r=e-Math.floor(e));var o=W.log10(Math.abs(r)),i="";if(0!==e)if(Math.max(Math.abs(n[0]),Math.abs(n[n.length-1]))<1e-4){var a=W.log10(Math.abs(e)),l=Math.floor(a)-Math.floor(o);l=Math.max(Math.min(l,20),0),i=e.toExponential(l)}else{var s=-1*Math.floor(o);s=Math.max(Math.min(s,20),0),i=e.toFixed(s)}else i="0";return i},logarithmic:function(e,t,n){var r=e/Math.pow(10,Math.floor(W.log10(e)));return 0===e?"0":1===r||2===r||5===r||0===t||t===n.length-1?e.toExponential():""}}},tn=W.isArray,nn=W.isNullOrUndef,rn=W.valueOrDefault,on=W.valueAtIndexOrDefault;function an(e,t,n){var r,o=e.getTicks().length,i=Math.min(t,o-1),a=e.getPixelForTick(i),l=e._startPixel,s=e._endPixel;if(!(n&&(r=1===o?Math.max(a-l,s-a):0===t?(e.getPixelForTick(1)-a)/2:(a-e.getPixelForTick(i-1))/2,(a+=i<t?r:-r)<l-1e-6||a>s+1e-6)))return a}function ln(e,t,n,r){var o,i,a,l,s,c,u,d,f,p,h,g,m,b=n.length,v=[],y=[],x=[];for(o=0;o<b;++o){if(l=n[o].label,s=n[o].major?t.major:t.minor,e.font=c=s.string,u=r[c]=r[c]||{data:{},gc:[]},d=s.lineHeight,f=p=0,nn(l)||tn(l)){if(tn(l))for(i=0,a=l.length;i<a;++i)h=l[i],nn(h)||tn(h)||(f=W.measureText(e,u.data,u.gc,f,h),p+=d)}else f=W.measureText(e,u.data,u.gc,f,l),p=d;v.push(f),y.push(p),x.push(d/2)}function w(e){return{width:v[e]||0,height:y[e]||0,offset:x[e]||0}}return function(e,t){W.each(e,(function(e){var n,r=e.gc,o=r.length/2;if(o>t){for(n=0;n<o;++n)delete e.data[r[n]];r.splice(0,o)}}))}(r,b),g=v.indexOf(Math.max.apply(null,v)),m=y.indexOf(Math.max.apply(null,y)),{first:w(0),last:w(b-1),widest:w(g),highest:w(m)}}function sn(e){return e.drawTicks?e.tickMarkLength:0}function cn(e){var t,n;return e.display?(t=W.options._parseFont(e),n=W.options.toPadding(e.padding),t.lineHeight+n.height):0}function un(e,t){return W.extend(W.options._parseFont({fontFamily:rn(t.fontFamily,e.fontFamily),fontSize:rn(t.fontSize,e.fontSize),fontStyle:rn(t.fontStyle,e.fontStyle),lineHeight:rn(t.lineHeight,e.lineHeight)}),{color:W.options.resolve([t.fontColor,e.fontColor,L.global.defaultFontColor])})}function dn(e){var t=un(e,e.minor);return{minor:t,major:e.major.enabled?un(e,e.major):t}}function fn(e){var t,n,r,o=[];for(n=0,r=e.length;n<r;++n)void 0!==(t=e[n])._index&&o.push(t);return o}function pn(e,t,n,r){var o,i,a,l,s=rn(n,0),c=Math.min(rn(r,e.length),e.length),u=0;for(t=Math.ceil(t),r&&(t=(o=r-n)/Math.floor(o/t)),l=s;l<0;)u++,l=Math.round(s+u*t);for(i=Math.max(s,0);i<c;i++)a=e[i],i===l?(a._index=i,u++,l=Math.round(s+u*t)):delete a.label}L._set("scale",{display:!0,position:"left",offset:!1,gridLines:{display:!0,color:"rgba(0,0,0,0.1)",lineWidth:1,drawBorder:!0,drawOnChartArea:!0,drawTicks:!0,tickMarkLength:10,zeroLineWidth:1,zeroLineColor:"rgba(0,0,0,0.25)",zeroLineBorderDash:[],zeroLineBorderDashOffset:0,offsetGridLines:!1,borderDash:[],borderDashOffset:0},scaleLabel:{display:!1,labelString:"",padding:{top:4,bottom:4}},ticks:{beginAtZero:!1,minRotation:0,maxRotation:50,mirror:!1,padding:0,reverse:!1,display:!0,autoSkip:!0,autoSkipPadding:0,labelOffset:0,callback:en.formatters.values,minor:{},major:{}}});var hn=J.extend({zeroLineIndex:0,getPadding:function(){return{left:this.paddingLeft||0,top:this.paddingTop||0,right:this.paddingRight||0,bottom:this.paddingBottom||0}},getTicks:function(){return this._ticks},_getLabels:function(){var e=this.chart.data;return this.options.labels||(this.isHorizontal()?e.xLabels:e.yLabels)||e.labels||[]},mergeTicksOptions:function(){},beforeUpdate:function(){W.callback(this.options.beforeUpdate,[this])},update:function(e,t,n){var r,o,i,a,l,s=this,c=s.options.ticks,u=c.sampleSize;if(s.beforeUpdate(),s.maxWidth=e,s.maxHeight=t,s.margins=W.extend({left:0,right:0,top:0,bottom:0},n),s._ticks=null,s.ticks=null,s._labelSizes=null,s._maxLabelLines=0,s.longestLabelWidth=0,s.longestTextCache=s.longestTextCache||{},s._gridLineItems=null,s._labelItems=null,s.beforeSetDimensions(),s.setDimensions(),s.afterSetDimensions(),s.beforeDataLimits(),s.determineDataLimits(),s.afterDataLimits(),s.beforeBuildTicks(),a=s.buildTicks()||[],(!(a=s.afterBuildTicks(a)||a)||!a.length)&&s.ticks)for(a=[],r=0,o=s.ticks.length;r<o;++r)a.push({value:s.ticks[r],major:!1});return s._ticks=a,l=u<a.length,i=s._convertTicksToLabels(l?function(e,t){for(var n=[],r=e.length/t,o=0,i=e.length;o<i;o+=r)n.push(e[Math.floor(o)]);return n}(a,u):a),s._configure(),s.beforeCalculateTickRotation(),s.calculateTickRotation(),s.afterCalculateTickRotation(),s.beforeFit(),s.fit(),s.afterFit(),s._ticksToDraw=c.display&&(c.autoSkip||"auto"===c.source)?s._autoSkip(a):a,l&&(i=s._convertTicksToLabels(s._ticksToDraw)),s.ticks=i,s.afterUpdate(),s.minSize},_configure:function(){var e,t,n=this,r=n.options.ticks.reverse;n.isHorizontal()?(e=n.left,t=n.right):(e=n.top,t=n.bottom,r=!r),n._startPixel=e,n._endPixel=t,n._reversePixels=r,n._length=t-e},afterUpdate:function(){W.callback(this.options.afterUpdate,[this])},beforeSetDimensions:function(){W.callback(this.options.beforeSetDimensions,[this])},setDimensions:function(){var e=this;e.isHorizontal()?(e.width=e.maxWidth,e.left=0,e.right=e.width):(e.height=e.maxHeight,e.top=0,e.bottom=e.height),e.paddingLeft=0,e.paddingTop=0,e.paddingRight=0,e.paddingBottom=0},afterSetDimensions:function(){W.callback(this.options.afterSetDimensions,[this])},beforeDataLimits:function(){W.callback(this.options.beforeDataLimits,[this])},determineDataLimits:W.noop,afterDataLimits:function(){W.callback(this.options.afterDataLimits,[this])},beforeBuildTicks:function(){W.callback(this.options.beforeBuildTicks,[this])},buildTicks:W.noop,afterBuildTicks:function(e){var t=this;return tn(e)&&e.length?W.callback(t.options.afterBuildTicks,[t,e]):(t.ticks=W.callback(t.options.afterBuildTicks,[t,t.ticks])||t.ticks,e)},beforeTickToLabelConversion:function(){W.callback(this.options.beforeTickToLabelConversion,[this])},convertTicksToLabels:function(){var e=this.options.ticks;this.ticks=this.ticks.map(e.userCallback||e.callback,this)},afterTickToLabelConversion:function(){W.callback(this.options.afterTickToLabelConversion,[this])},beforeCalculateTickRotation:function(){W.callback(this.options.beforeCalculateTickRotation,[this])},calculateTickRotation:function(){var e,t,n,r,o,i,a,l=this,s=l.options,c=s.ticks,u=l.getTicks().length,d=c.minRotation||0,f=c.maxRotation,p=d;!l._isVisible()||!c.display||d>=f||u<=1||!l.isHorizontal()?l.labelRotation=d:(t=(e=l._getLabelSizes()).widest.width,n=e.highest.height-e.highest.offset,r=Math.min(l.maxWidth,l.chart.width-t),t+6>(o=s.offset?l.maxWidth/u:r/(u-1))&&(o=r/(u-(s.offset?.5:1)),i=l.maxHeight-sn(s.gridLines)-c.padding-cn(s.scaleLabel),a=Math.sqrt(t*t+n*n),p=W.toDegrees(Math.min(Math.asin(Math.min((e.highest.height+6)/o,1)),Math.asin(Math.min(i/a,1))-Math.asin(n/a))),p=Math.max(d,Math.min(f,p))),l.labelRotation=p)},afterCalculateTickRotation:function(){W.callback(this.options.afterCalculateTickRotation,[this])},beforeFit:function(){W.callback(this.options.beforeFit,[this])},fit:function(){var e=this,t=e.minSize={width:0,height:0},n=e.chart,r=e.options,o=r.ticks,i=r.scaleLabel,a=r.gridLines,l=e._isVisible(),s="bottom"===r.position,c=e.isHorizontal();if(c?t.width=e.maxWidth:l&&(t.width=sn(a)+cn(i)),c?l&&(t.height=sn(a)+cn(i)):t.height=e.maxHeight,o.display&&l){var u=dn(o),d=e._getLabelSizes(),f=d.first,p=d.last,h=d.widest,g=d.highest,m=.4*u.minor.lineHeight,b=o.padding;if(c){var v=0!==e.labelRotation,y=W.toRadians(e.labelRotation),x=Math.cos(y),w=Math.sin(y),k=w*h.width+x*(g.height-(v?g.offset:0))+(v?0:m);t.height=Math.min(e.maxHeight,t.height+k+b);var _,E,S=e.getPixelForTick(0)-e.left,P=e.right-e.getPixelForTick(e.getTicks().length-1);v?(_=s?x*f.width+w*f.offset:w*(f.height-f.offset),E=s?w*(p.height-p.offset):x*p.width+w*p.offset):(_=f.width/2,E=p.width/2),e.paddingLeft=Math.max((_-S)*e.width/(e.width-S),0)+3,e.paddingRight=Math.max((E-P)*e.width/(e.width-P),0)+3}else{var z=o.mirror?0:h.width+b+m;t.width=Math.min(e.maxWidth,t.width+z),e.paddingTop=f.height/2,e.paddingBottom=p.height/2}}e.handleMargins(),c?(e.width=e._length=n.width-e.margins.left-e.margins.right,e.height=t.height):(e.width=t.width,e.height=e._length=n.height-e.margins.top-e.margins.bottom)},handleMargins:function(){var e=this;e.margins&&(e.margins.left=Math.max(e.paddingLeft,e.margins.left),e.margins.top=Math.max(e.paddingTop,e.margins.top),e.margins.right=Math.max(e.paddingRight,e.margins.right),e.margins.bottom=Math.max(e.paddingBottom,e.margins.bottom))},afterFit:function(){W.callback(this.options.afterFit,[this])},isHorizontal:function(){var e=this.options.position;return"top"===e||"bottom"===e},isFullWidth:function(){return this.options.fullWidth},getRightValue:function(e){if(nn(e))return NaN;if(("number"==typeof e||e instanceof Number)&&!isFinite(e))return NaN;if(e)if(this.isHorizontal()){if(void 0!==e.x)return this.getRightValue(e.x)}else if(void 0!==e.y)return this.getRightValue(e.y);return e},_convertTicksToLabels:function(e){var t,n,r,o=this;for(o.ticks=e.map((function(e){return e.value})),o.beforeTickToLabelConversion(),t=o.convertTicksToLabels(e)||o.ticks,o.afterTickToLabelConversion(),n=0,r=e.length;n<r;++n)e[n].label=t[n];return t},_getLabelSizes:function(){var e=this,t=e._labelSizes;return t||(e._labelSizes=t=ln(e.ctx,dn(e.options.ticks),e.getTicks(),e.longestTextCache),e.longestLabelWidth=t.widest.width),t},_parseValue:function(e){var t,n,r,o;return tn(e)?(t=+this.getRightValue(e[0]),n=+this.getRightValue(e[1]),r=Math.min(t,n),o=Math.max(t,n)):(t=void 0,n=e=+this.getRightValue(e),r=e,o=e),{min:r,max:o,start:t,end:n}},_getScaleLabel:function(e){var t=this._parseValue(e);return void 0!==t.start?"["+t.start+", "+t.end+"]":+this.getRightValue(e)},getLabelForIndex:W.noop,getPixelForValue:W.noop,getValueForPixel:W.noop,getPixelForTick:function(e){var t=this.options.offset,n=this._ticks.length,r=1/Math.max(n-(t?0:1),1);return e<0||e>n-1?null:this.getPixelForDecimal(e*r+(t?r/2:0))},getPixelForDecimal:function(e){return this._reversePixels&&(e=1-e),this._startPixel+e*this._length},getDecimalForPixel:function(e){var t=(e-this._startPixel)/this._length;return this._reversePixels?1-t:t},getBasePixel:function(){return this.getPixelForValue(this.getBaseValue())},getBaseValue:function(){var e=this.min,t=this.max;return this.beginAtZero?0:e<0&&t<0?t:e>0&&t>0?e:0},_autoSkip:function(e){var t,n,r,o,i=this.options.ticks,a=this._length,l=i.maxTicksLimit||a/this._tickSize()+1,s=i.major.enabled?function(e){var t,n,r=[];for(t=0,n=e.length;t<n;t++)e[t].major&&r.push(t);return r}(e):[],c=s.length,u=s[0],d=s[c-1];if(c>l)return function(e,t,n){var r,o,i=0,a=t[0];for(n=Math.ceil(n),r=0;r<e.length;r++)o=e[r],r===a?(o._index=r,a=t[++i*n]):delete o.label}(e,s,c/l),fn(e);if(r=function(e,t,n,r){var o,i,a,l,s=function(e){var t,n,r=e.length;if(r<2)return!1;for(n=e[0],t=1;t<r;++t)if(e[t]-e[t-1]!==n)return!1;return n}(e),c=(t.length-1)/r;if(!s)return Math.max(c,1);for(a=0,l=(o=W.math._factorize(s)).length-1;a<l;a++)if((i=o[a])>c)return i;return Math.max(c,1)}(s,e,0,l),c>0){for(t=0,n=c-1;t<n;t++)pn(e,r,s[t],s[t+1]);return o=c>1?(d-u)/(c-1):null,pn(e,r,W.isNullOrUndef(o)?0:u-o,u),pn(e,r,d,W.isNullOrUndef(o)?e.length:d+o),fn(e)}return pn(e,r),fn(e)},_tickSize:function(){var e=this.options.ticks,t=W.toRadians(this.labelRotation),n=Math.abs(Math.cos(t)),r=Math.abs(Math.sin(t)),o=this._getLabelSizes(),i=e.autoSkipPadding||0,a=o?o.widest.width+i:0,l=o?o.highest.height+i:0;return this.isHorizontal()?l*n>a*r?a/n:l/r:l*r<a*n?l/n:a/r},_isVisible:function(){var e,t,n,r=this.chart,o=this.options.display;if("auto"!==o)return!!o;for(e=0,t=r.data.datasets.length;e<t;++e)if(r.isDatasetVisible(e)&&((n=r.getDatasetMeta(e)).xAxisID===this.id||n.yAxisID===this.id))return!0;return!1},_computeGridLineItems:function(e){var t,n,r,o,i,a,l,s,c,u,d,f,p,h,g,m,b,v=this,y=v.chart,x=v.options,w=x.gridLines,k=x.position,_=w.offsetGridLines,E=v.isHorizontal(),S=v._ticksToDraw,P=S.length+(_?1:0),z=sn(w),M=[],C=w.drawBorder?on(w.lineWidth,0,0):0,O=C/2,T=W._alignPixel,N=function(e){return T(y,e,C)};for("top"===k?(t=N(v.bottom),l=v.bottom-z,c=t-O,d=N(e.top)+O,p=e.bottom):"bottom"===k?(t=N(v.top),d=e.top,p=N(e.bottom)-O,l=t+O,c=v.top+z):"left"===k?(t=N(v.right),a=v.right-z,s=t-O,u=N(e.left)+O,f=e.right):(t=N(v.left),u=e.left,f=N(e.right)-O,a=t+O,s=v.left+z),n=0;n<P;++n)r=S[n]||{},nn(r.label)&&n<S.length||(n===v.zeroLineIndex&&x.offset===_?(h=w.zeroLineWidth,g=w.zeroLineColor,m=w.zeroLineBorderDash||[],b=w.zeroLineBorderDashOffset||0):(h=on(w.lineWidth,n,1),g=on(w.color,n,"rgba(0,0,0,0.1)"),m=w.borderDash||[],b=w.borderDashOffset||0),void 0!==(o=an(v,r._index||n,_))&&(i=T(y,o,h),E?a=s=u=f=i:l=c=d=p=i,M.push({tx1:a,ty1:l,tx2:s,ty2:c,x1:u,y1:d,x2:f,y2:p,width:h,color:g,borderDash:m,borderDashOffset:b})));return M.ticksLength=P,M.borderValue=t,M},_computeLabelItems:function(){var e,t,n,r,o,i,a,l,s,c,u,d,f=this,p=f.options,h=p.ticks,g=p.position,m=h.mirror,b=f.isHorizontal(),v=f._ticksToDraw,y=dn(h),x=h.padding,w=sn(p.gridLines),k=-W.toRadians(f.labelRotation),_=[];for("top"===g?(i=f.bottom-w-x,a=k?"left":"center"):"bottom"===g?(i=f.top+w+x,a=k?"right":"center"):"left"===g?(o=f.right-(m?0:w)-x,a=m?"left":"right"):(o=f.left+(m?0:w)+x,a=m?"right":"left"),e=0,t=v.length;e<t;++e)r=(n=v[e]).label,nn(r)||(l=f.getPixelForTick(n._index||e)+h.labelOffset,c=(s=n.major?y.major:y.minor).lineHeight,u=tn(r)?r.length:1,b?(o=l,d="top"===g?((k?1:.5)-u)*c:(k?0:.5)*c):(i=l,d=(1-u)*c/2),_.push({x:o,y:i,rotation:k,label:r,font:s,textOffset:d,textAlign:a}));return _},_drawGrid:function(e){var t=this,n=t.options.gridLines;if(n.display){var r,o,i,a,l,s=t.ctx,c=t.chart,u=W._alignPixel,d=n.drawBorder?on(n.lineWidth,0,0):0,f=t._gridLineItems||(t._gridLineItems=t._computeGridLineItems(e));for(i=0,a=f.length;i<a;++i)r=(l=f[i]).width,o=l.color,r&&o&&(s.save(),s.lineWidth=r,s.strokeStyle=o,s.setLineDash&&(s.setLineDash(l.borderDash),s.lineDashOffset=l.borderDashOffset),s.beginPath(),n.drawTicks&&(s.moveTo(l.tx1,l.ty1),s.lineTo(l.tx2,l.ty2)),n.drawOnChartArea&&(s.moveTo(l.x1,l.y1),s.lineTo(l.x2,l.y2)),s.stroke(),s.restore());if(d){var p,h,g,m,b=d,v=on(n.lineWidth,f.ticksLength-1,1),y=f.borderValue;t.isHorizontal()?(p=u(c,t.left,b)-b/2,h=u(c,t.right,v)+v/2,g=m=y):(g=u(c,t.top,b)-b/2,m=u(c,t.bottom,v)+v/2,p=h=y),s.lineWidth=d,s.strokeStyle=on(n.color,0),s.beginPath(),s.moveTo(p,g),s.lineTo(h,m),s.stroke()}}},_drawLabels:function(){var e=this;if(e.options.ticks.display){var t,n,r,o,i,a,l,s,c=e.ctx,u=e._labelItems||(e._labelItems=e._computeLabelItems());for(t=0,r=u.length;t<r;++t){if(a=(i=u[t]).font,c.save(),c.translate(i.x,i.y),c.rotate(i.rotation),c.font=a.string,c.fillStyle=a.color,c.textBaseline="middle",c.textAlign=i.textAlign,l=i.label,s=i.textOffset,tn(l))for(n=0,o=l.length;n<o;++n)c.fillText(""+l[n],0,s),s+=a.lineHeight;else c.fillText(l,0,s);c.restore()}}},_drawTitle:function(){var e=this,t=e.ctx,n=e.options,r=n.scaleLabel;if(r.display){var o,i,a=rn(r.fontColor,L.global.defaultFontColor),l=W.options._parseFont(r),s=W.options.toPadding(r.padding),c=l.lineHeight/2,u=n.position,d=0;if(e.isHorizontal())o=e.left+e.width/2,i="bottom"===u?e.bottom-c-s.bottom:e.top+c+s.top;else{var f="left"===u;o=f?e.left+c+s.top:e.right-c-s.top,i=e.top+e.height/2,d=f?-.5*Math.PI:.5*Math.PI}t.save(),t.translate(o,i),t.rotate(d),t.textAlign="center",t.textBaseline="middle",t.fillStyle=a,t.font=l.string,t.fillText(r.labelString,0,0),t.restore()}},draw:function(e){this._isVisible()&&(this._drawGrid(e),this._drawTitle(),this._drawLabels())},_layers:function(){var e=this,t=e.options,n=t.ticks&&t.ticks.z||0,r=t.gridLines&&t.gridLines.z||0;return e._isVisible()&&n!==r&&e.draw===e._draw?[{z:r,draw:function(){e._drawGrid.apply(e,arguments),e._drawTitle.apply(e,arguments)}},{z:n,draw:function(){e._drawLabels.apply(e,arguments)}}]:[{z:n,draw:function(){e.draw.apply(e,arguments)}}]},_getMatchingVisibleMetas:function(e){var t=this,n=t.isHorizontal();return t.chart._getSortedVisibleDatasetMetas().filter((function(r){return(!e||r.type===e)&&(n?r.xAxisID===t.id:r.yAxisID===t.id)}))}});hn.prototype._draw=hn.prototype.draw;var gn=hn,mn=W.isNullOrUndef,bn=gn.extend({determineDataLimits:function(){var e,t=this,n=t._getLabels(),r=t.options.ticks,o=r.min,i=r.max,a=0,l=n.length-1;void 0!==o&&(e=n.indexOf(o))>=0&&(a=e),void 0!==i&&(e=n.indexOf(i))>=0&&(l=e),t.minIndex=a,t.maxIndex=l,t.min=n[a],t.max=n[l]},buildTicks:function(){var e=this._getLabels(),t=this.minIndex,n=this.maxIndex;this.ticks=0===t&&n===e.length-1?e:e.slice(t,n+1)},getLabelForIndex:function(e,t){var n=this.chart;return n.getDatasetMeta(t).controller._getValueScaleId()===this.id?this.getRightValue(n.data.datasets[t].data[e]):this._getLabels()[e]},_configure:function(){var e=this,t=e.options.offset,n=e.ticks;gn.prototype._configure.call(e),e.isHorizontal()||(e._reversePixels=!e._reversePixels),n&&(e._startValue=e.minIndex-(t?.5:0),e._valueRange=Math.max(n.length-(t?0:1),1))},getPixelForValue:function(e,t,n){var r,o,i,a=this;return mn(t)||mn(n)||(e=a.chart.data.datasets[n].data[t]),mn(e)||(r=a.isHorizontal()?e.x:e.y),(void 0!==r||void 0!==e&&isNaN(t))&&(o=a._getLabels(),e=W.valueOrDefault(r,e),t=-1!==(i=o.indexOf(e))?i:t,isNaN(t)&&(t=e)),a.getPixelForDecimal((t-a._startValue)/a._valueRange)},getPixelForTick:function(e){var t=this.ticks;return e<0||e>t.length-1?null:this.getPixelForValue(t[e],e+this.minIndex)},getValueForPixel:function(e){var t=Math.round(this._startValue+this.getDecimalForPixel(e)*this._valueRange);return Math.min(Math.max(t,0),this.ticks.length-1)},getBasePixel:function(){return this.bottom}}),vn={position:"bottom"};bn._defaults=vn;var yn=W.noop,xn=W.isNullOrUndef,wn=gn.extend({getRightValue:function(e){return"string"==typeof e?+e:gn.prototype.getRightValue.call(this,e)},handleTickRangeOptions:function(){var e=this,t=e.options.ticks;if(t.beginAtZero){var n=W.sign(e.min),r=W.sign(e.max);n<0&&r<0?e.max=0:n>0&&r>0&&(e.min=0)}var o=void 0!==t.min||void 0!==t.suggestedMin,i=void 0!==t.max||void 0!==t.suggestedMax;void 0!==t.min?e.min=t.min:void 0!==t.suggestedMin&&(null===e.min?e.min=t.suggestedMin:e.min=Math.min(e.min,t.suggestedMin)),void 0!==t.max?e.max=t.max:void 0!==t.suggestedMax&&(null===e.max?e.max=t.suggestedMax:e.max=Math.max(e.max,t.suggestedMax)),o!==i&&e.min>=e.max&&(o?e.max=e.min+1:e.min=e.max-1),e.min===e.max&&(e.max++,t.beginAtZero||e.min--)},getTickLimit:function(){var e,t=this.options.ticks,n=t.stepSize,r=t.maxTicksLimit;return n?e=Math.ceil(this.max/n)-Math.floor(this.min/n)+1:(e=this._computeTickLimit(),r=r||11),r&&(e=Math.min(r,e)),e},_computeTickLimit:function(){return Number.POSITIVE_INFINITY},handleDirectionalChanges:yn,buildTicks:function(){var e=this,t=e.options.ticks,n=e.getTickLimit(),r={maxTicks:n=Math.max(2,n),min:t.min,max:t.max,precision:t.precision,stepSize:W.valueOrDefault(t.fixedStepSize,t.stepSize)},o=e.ticks=function(e,t){var n,r,o,i,a=[],l=e.stepSize,s=l||1,c=e.maxTicks-1,u=e.min,d=e.max,f=e.precision,p=t.min,h=t.max,g=W.niceNum((h-p)/c/s)*s;if(g<1e-14&&xn(u)&&xn(d))return[p,h];(i=Math.ceil(h/g)-Math.floor(p/g))>c&&(g=W.niceNum(i*g/c/s)*s),l||xn(f)?n=Math.pow(10,W._decimalPlaces(g)):(n=Math.pow(10,f),g=Math.ceil(g*n)/n),r=Math.floor(p/g)*g,o=Math.ceil(h/g)*g,l&&(!xn(u)&&W.almostWhole(u/g,g/1e3)&&(r=u),!xn(d)&&W.almostWhole(d/g,g/1e3)&&(o=d)),i=(o-r)/g,i=W.almostEquals(i,Math.round(i),g/1e3)?Math.round(i):Math.ceil(i),r=Math.round(r*n)/n,o=Math.round(o*n)/n,a.push(xn(u)?r:u);for(var m=1;m<i;++m)a.push(Math.round((r+m*g)*n)/n);return a.push(xn(d)?o:d),a}(r,e);e.handleDirectionalChanges(),e.max=W.max(o),e.min=W.min(o),t.reverse?(o.reverse(),e.start=e.max,e.end=e.min):(e.start=e.min,e.end=e.max)},convertTicksToLabels:function(){var e=this;e.ticksAsNumbers=e.ticks.slice(),e.zeroLineIndex=e.ticks.indexOf(0),gn.prototype.convertTicksToLabels.call(e)},_configure:function(){var e,t=this,n=t.getTicks(),r=t.min,o=t.max;gn.prototype._configure.call(t),t.options.offset&&n.length&&(r-=e=(o-r)/Math.max(n.length-1,1)/2,o+=e),t._startValue=r,t._endValue=o,t._valueRange=o-r}}),kn={position:"left",ticks:{callback:en.formatters.linear}};function _n(e,t,n,r){var o,i,a=e.options,l=function(e,t,n){var r=[n.type,void 0===t&&void 0===n.stack?n.index:"",n.stack].join(".");return void 0===e[r]&&(e[r]={pos:[],neg:[]}),e[r]}(t,a.stacked,n),s=l.pos,c=l.neg,u=r.length;for(o=0;o<u;++o)i=e._parseValue(r[o]),isNaN(i.min)||isNaN(i.max)||n.data[o].hidden||(s[o]=s[o]||0,c[o]=c[o]||0,a.relativePoints?s[o]=100:i.min<0||i.max<0?c[o]+=i.min:s[o]+=i.max)}function En(e,t,n){var r,o,i=n.length;for(r=0;r<i;++r)o=e._parseValue(n[r]),isNaN(o.min)||isNaN(o.max)||t.data[r].hidden||(e.min=Math.min(e.min,o.min),e.max=Math.max(e.max,o.max))}var Sn=wn.extend({determineDataLimits:function(){var e,t,n,r,o=this,i=o.options,a=o.chart.data.datasets,l=o._getMatchingVisibleMetas(),s=i.stacked,c={},u=l.length;if(o.min=Number.POSITIVE_INFINITY,o.max=Number.NEGATIVE_INFINITY,void 0===s)for(e=0;!s&&e<u;++e)s=void 0!==(t=l[e]).stack;for(e=0;e<u;++e)n=a[(t=l[e]).index].data,s?_n(o,c,t,n):En(o,t,n);W.each(c,(function(e){r=e.pos.concat(e.neg),o.min=Math.min(o.min,W.min(r)),o.max=Math.max(o.max,W.max(r))})),o.min=W.isFinite(o.min)&&!isNaN(o.min)?o.min:0,o.max=W.isFinite(o.max)&&!isNaN(o.max)?o.max:1,o.handleTickRangeOptions()},_computeTickLimit:function(){var e;return this.isHorizontal()?Math.ceil(this.width/40):(e=W.options._parseFont(this.options.ticks),Math.ceil(this.height/e.lineHeight))},handleDirectionalChanges:function(){this.isHorizontal()||this.ticks.reverse()},getLabelForIndex:function(e,t){return this._getScaleLabel(this.chart.data.datasets[t].data[e])},getPixelForValue:function(e){return this.getPixelForDecimal((+this.getRightValue(e)-this._startValue)/this._valueRange)},getValueForPixel:function(e){return this._startValue+this.getDecimalForPixel(e)*this._valueRange},getPixelForTick:function(e){var t=this.ticksAsNumbers;return e<0||e>t.length-1?null:this.getPixelForValue(t[e])}}),Pn=kn;Sn._defaults=Pn;var zn=W.valueOrDefault,Mn=W.math.log10,Cn={position:"left",ticks:{callback:en.formatters.logarithmic}};function On(e,t){return W.isFinite(e)&&e>=0?e:t}var Tn=gn.extend({determineDataLimits:function(){var e,t,n,r,o,i,a=this,l=a.options,s=a.chart,c=s.data.datasets,u=a.isHorizontal();function d(e){return u?e.xAxisID===a.id:e.yAxisID===a.id}a.min=Number.POSITIVE_INFINITY,a.max=Number.NEGATIVE_INFINITY,a.minNotZero=Number.POSITIVE_INFINITY;var f=l.stacked;if(void 0===f)for(e=0;e<c.length;e++)if(t=s.getDatasetMeta(e),s.isDatasetVisible(e)&&d(t)&&void 0!==t.stack){f=!0;break}if(l.stacked||f){var p={};for(e=0;e<c.length;e++){var h=[(t=s.getDatasetMeta(e)).type,void 0===l.stacked&&void 0===t.stack?e:"",t.stack].join(".");if(s.isDatasetVisible(e)&&d(t))for(void 0===p[h]&&(p[h]=[]),o=0,i=(r=c[e].data).length;o<i;o++){var g=p[h];n=a._parseValue(r[o]),isNaN(n.min)||isNaN(n.max)||t.data[o].hidden||n.min<0||n.max<0||(g[o]=g[o]||0,g[o]+=n.max)}}W.each(p,(function(e){if(e.length>0){var t=W.min(e),n=W.max(e);a.min=Math.min(a.min,t),a.max=Math.max(a.max,n)}}))}else for(e=0;e<c.length;e++)if(t=s.getDatasetMeta(e),s.isDatasetVisible(e)&&d(t))for(o=0,i=(r=c[e].data).length;o<i;o++)n=a._parseValue(r[o]),isNaN(n.min)||isNaN(n.max)||t.data[o].hidden||n.min<0||n.max<0||(a.min=Math.min(n.min,a.min),a.max=Math.max(n.max,a.max),0!==n.min&&(a.minNotZero=Math.min(n.min,a.minNotZero)));a.min=W.isFinite(a.min)?a.min:null,a.max=W.isFinite(a.max)?a.max:null,a.minNotZero=W.isFinite(a.minNotZero)?a.minNotZero:null,this.handleTickRangeOptions()},handleTickRangeOptions:function(){var e=this,t=e.options.ticks;e.min=On(t.min,e.min),e.max=On(t.max,e.max),e.min===e.max&&(0!==e.min&&null!==e.min?(e.min=Math.pow(10,Math.floor(Mn(e.min))-1),e.max=Math.pow(10,Math.floor(Mn(e.max))+1)):(e.min=1,e.max=10)),null===e.min&&(e.min=Math.pow(10,Math.floor(Mn(e.max))-1)),null===e.max&&(e.max=0!==e.min?Math.pow(10,Math.floor(Mn(e.min))+1):10),null===e.minNotZero&&(e.min>0?e.minNotZero=e.min:e.max<1?e.minNotZero=Math.pow(10,Math.floor(Mn(e.max))):e.minNotZero=1)},buildTicks:function(){var e=this,t=e.options.ticks,n=!e.isHorizontal(),r={min:On(t.min),max:On(t.max)},o=e.ticks=function(e,t){var n,r,o=[],i=zn(e.min,Math.pow(10,Math.floor(Mn(t.min)))),a=Math.floor(Mn(t.max)),l=Math.ceil(t.max/Math.pow(10,a));0===i?(n=Math.floor(Mn(t.minNotZero)),r=Math.floor(t.minNotZero/Math.pow(10,n)),o.push(i),i=r*Math.pow(10,n)):(n=Math.floor(Mn(i)),r=Math.floor(i/Math.pow(10,n)));var s=n<0?Math.pow(10,Math.abs(n)):1;do{o.push(i),10==++r&&(r=1,s=++n>=0?1:s),i=Math.round(r*Math.pow(10,n)*s)/s}while(n<a||n===a&&r<l);var c=zn(e.max,i);return o.push(c),o}(r,e);e.max=W.max(o),e.min=W.min(o),t.reverse?(n=!n,e.start=e.max,e.end=e.min):(e.start=e.min,e.end=e.max),n&&o.reverse()},convertTicksToLabels:function(){this.tickValues=this.ticks.slice(),gn.prototype.convertTicksToLabels.call(this)},getLabelForIndex:function(e,t){return this._getScaleLabel(this.chart.data.datasets[t].data[e])},getPixelForTick:function(e){var t=this.tickValues;return e<0||e>t.length-1?null:this.getPixelForValue(t[e])},_getFirstTickValue:function(e){var t=Math.floor(Mn(e));return Math.floor(e/Math.pow(10,t))*Math.pow(10,t)},_configure:function(){var e=this,t=e.min,n=0;gn.prototype._configure.call(e),0===t&&(t=e._getFirstTickValue(e.minNotZero),n=zn(e.options.ticks.fontSize,L.global.defaultFontSize)/e._length),e._startValue=Mn(t),e._valueOffset=n,e._valueRange=(Mn(e.max)-Mn(t))/(1-n)},getPixelForValue:function(e){var t=this,n=0;return(e=+t.getRightValue(e))>t.min&&e>0&&(n=(Mn(e)-t._startValue)/t._valueRange+t._valueOffset),t.getPixelForDecimal(n)},getValueForPixel:function(e){var t=this,n=t.getDecimalForPixel(e);return 0===n&&0===t.min?0:Math.pow(10,t._startValue+(n-t._valueOffset)*t._valueRange)}}),Nn=Cn;Tn._defaults=Nn;var Dn=W.valueOrDefault,jn=W.valueAtIndexOrDefault,In=W.options.resolve,Ln={display:!0,animate:!0,position:"chartArea",angleLines:{display:!0,color:"rgba(0,0,0,0.1)",lineWidth:1,borderDash:[],borderDashOffset:0},gridLines:{circular:!1},ticks:{showLabelBackdrop:!0,backdropColor:"rgba(255,255,255,0.75)",backdropPaddingY:2,backdropPaddingX:2,callback:en.formatters.linear},pointLabels:{display:!0,fontSize:10,callback:function(e){return e}}};function An(e){var t=e.ticks;return t.display&&e.display?Dn(t.fontSize,L.global.defaultFontSize)+2*t.backdropPaddingY:0}function Rn(e,t,n,r,o){return e===r||e===o?{start:t-n/2,end:t+n/2}:e<r||e>o?{start:t-n,end:t}:{start:t,end:t+n}}function Bn(e){return 0===e||180===e?"center":e<180?"left":"right"}function Fn(e,t,n,r){var o,i,a=n.y+r/2;if(W.isArray(t))for(o=0,i=t.length;o<i;++o)e.fillText(t[o],n.x,a),a+=r;else e.fillText(t,n.x,a)}function Wn(e,t,n){90===e||270===e?n.y-=t.h/2:(e>270||e<90)&&(n.y-=t.h)}function Un(e){return W.isNumber(e)?e:0}var Hn=wn.extend({setDimensions:function(){var e=this;e.width=e.maxWidth,e.height=e.maxHeight,e.paddingTop=An(e.options)/2,e.xCenter=Math.floor(e.width/2),e.yCenter=Math.floor((e.height-e.paddingTop)/2),e.drawingArea=Math.min(e.height-e.paddingTop,e.width)/2},determineDataLimits:function(){var e=this,t=e.chart,n=Number.POSITIVE_INFINITY,r=Number.NEGATIVE_INFINITY;W.each(t.data.datasets,(function(o,i){if(t.isDatasetVisible(i)){var a=t.getDatasetMeta(i);W.each(o.data,(function(t,o){var i=+e.getRightValue(t);isNaN(i)||a.data[o].hidden||(n=Math.min(i,n),r=Math.max(i,r))}))}})),e.min=n===Number.POSITIVE_INFINITY?0:n,e.max=r===Number.NEGATIVE_INFINITY?0:r,e.handleTickRangeOptions()},_computeTickLimit:function(){return Math.ceil(this.drawingArea/An(this.options))},convertTicksToLabels:function(){var e=this;wn.prototype.convertTicksToLabels.call(e),e.pointLabels=e.chart.data.labels.map((function(){var t=W.callback(e.options.pointLabels.callback,arguments,e);return t||0===t?t:""}))},getLabelForIndex:function(e,t){return+this.getRightValue(this.chart.data.datasets[t].data[e])},fit:function(){var e=this.options;e.display&&e.pointLabels.display?function(e){var t,n,r,o=W.options._parseFont(e.options.pointLabels),i={l:0,r:e.width,t:0,b:e.height-e.paddingTop},a={};e.ctx.font=o.string,e._pointLabelSizes=[];var l,s,c,u=e.chart.data.labels.length;for(t=0;t<u;t++){r=e.getPointPosition(t,e.drawingArea+5),l=e.ctx,s=o.lineHeight,c=e.pointLabels[t],n=W.isArray(c)?{w:W.longestText(l,l.font,c),h:c.length*s}:{w:l.measureText(c).width,h:s},e._pointLabelSizes[t]=n;var d=e.getIndexAngle(t),f=W.toDegrees(d)%360,p=Rn(f,r.x,n.w,0,180),h=Rn(f,r.y,n.h,90,270);p.start<i.l&&(i.l=p.start,a.l=d),p.end>i.r&&(i.r=p.end,a.r=d),h.start<i.t&&(i.t=h.start,a.t=d),h.end>i.b&&(i.b=h.end,a.b=d)}e.setReductions(e.drawingArea,i,a)}(this):this.setCenterPoint(0,0,0,0)},setReductions:function(e,t,n){var r=this,o=t.l/Math.sin(n.l),i=Math.max(t.r-r.width,0)/Math.sin(n.r),a=-t.t/Math.cos(n.t),l=-Math.max(t.b-(r.height-r.paddingTop),0)/Math.cos(n.b);o=Un(o),i=Un(i),a=Un(a),l=Un(l),r.drawingArea=Math.min(Math.floor(e-(o+i)/2),Math.floor(e-(a+l)/2)),r.setCenterPoint(o,i,a,l)},setCenterPoint:function(e,t,n,r){var o=this,i=o.width-t-o.drawingArea,a=e+o.drawingArea,l=n+o.drawingArea,s=o.height-o.paddingTop-r-o.drawingArea;o.xCenter=Math.floor((a+i)/2+o.left),o.yCenter=Math.floor((l+s)/2+o.top+o.paddingTop)},getIndexAngle:function(e){var t=this.chart,n=(e*(360/t.data.labels.length)+((t.options||{}).startAngle||0))%360;return(n<0?n+360:n)*Math.PI*2/360},getDistanceFromCenterForValue:function(e){var t=this;if(W.isNullOrUndef(e))return NaN;var n=t.drawingArea/(t.max-t.min);return t.options.ticks.reverse?(t.max-e)*n:(e-t.min)*n},getPointPosition:function(e,t){var n=this.getIndexAngle(e)-Math.PI/2;return{x:Math.cos(n)*t+this.xCenter,y:Math.sin(n)*t+this.yCenter}},getPointPositionForValue:function(e,t){return this.getPointPosition(e,this.getDistanceFromCenterForValue(t))},getBasePosition:function(e){var t=this.min,n=this.max;return this.getPointPositionForValue(e||0,this.beginAtZero?0:t<0&&n<0?n:t>0&&n>0?t:0)},_drawGrid:function(){var e,t,n,r=this,o=r.ctx,i=r.options,a=i.gridLines,l=i.angleLines,s=Dn(l.lineWidth,a.lineWidth),c=Dn(l.color,a.color);if(i.pointLabels.display&&function(e){var t=e.ctx,n=e.options,r=n.pointLabels,o=An(n),i=e.getDistanceFromCenterForValue(n.ticks.reverse?e.min:e.max),a=W.options._parseFont(r);t.save(),t.font=a.string,t.textBaseline="middle";for(var l=e.chart.data.labels.length-1;l>=0;l--){var s=0===l?o/2:0,c=e.getPointPosition(l,i+s+5),u=jn(r.fontColor,l,L.global.defaultFontColor);t.fillStyle=u;var d=e.getIndexAngle(l),f=W.toDegrees(d);t.textAlign=Bn(f),Wn(f,e._pointLabelSizes[l],c),Fn(t,e.pointLabels[l],c,a.lineHeight)}t.restore()}(r),a.display&&W.each(r.ticks,(function(e,n){0!==n&&(t=r.getDistanceFromCenterForValue(r.ticksAsNumbers[n]),function(e,t,n,r){var o,i=e.ctx,a=t.circular,l=e.chart.data.labels.length,s=jn(t.color,r-1),c=jn(t.lineWidth,r-1);if((a||l)&&s&&c){if(i.save(),i.strokeStyle=s,i.lineWidth=c,i.setLineDash&&(i.setLineDash(t.borderDash||[]),i.lineDashOffset=t.borderDashOffset||0),i.beginPath(),a)i.arc(e.xCenter,e.yCenter,n,0,2*Math.PI);else{o=e.getPointPosition(0,n),i.moveTo(o.x,o.y);for(var u=1;u<l;u++)o=e.getPointPosition(u,n),i.lineTo(o.x,o.y)}i.closePath(),i.stroke(),i.restore()}}(r,a,t,n))})),l.display&&s&&c){for(o.save(),o.lineWidth=s,o.strokeStyle=c,o.setLineDash&&(o.setLineDash(In([l.borderDash,a.borderDash,[]])),o.lineDashOffset=In([l.borderDashOffset,a.borderDashOffset,0])),e=r.chart.data.labels.length-1;e>=0;e--)t=r.getDistanceFromCenterForValue(i.ticks.reverse?r.min:r.max),n=r.getPointPosition(e,t),o.beginPath(),o.moveTo(r.xCenter,r.yCenter),o.lineTo(n.x,n.y),o.stroke();o.restore()}},_drawLabels:function(){var e=this,t=e.ctx,n=e.options.ticks;if(n.display){var r,o,i=e.getIndexAngle(0),a=W.options._parseFont(n),l=Dn(n.fontColor,L.global.defaultFontColor);t.save(),t.font=a.string,t.translate(e.xCenter,e.yCenter),t.rotate(i),t.textAlign="center",t.textBaseline="middle",W.each(e.ticks,(function(i,s){(0!==s||n.reverse)&&(r=e.getDistanceFromCenterForValue(e.ticksAsNumbers[s]),n.showLabelBackdrop&&(o=t.measureText(i).width,t.fillStyle=n.backdropColor,t.fillRect(-o/2-n.backdropPaddingX,-r-a.size/2-n.backdropPaddingY,o+2*n.backdropPaddingX,a.size+2*n.backdropPaddingY)),t.fillStyle=l,t.fillText(i,0,-r))})),t.restore()}},_drawTitle:W.noop}),Vn=Ln;Hn._defaults=Vn;var qn=W._deprecated,Kn=W.options.resolve,$n=W.valueOrDefault,Jn=Number.MIN_SAFE_INTEGER||-9007199254740991,Gn=Number.MAX_SAFE_INTEGER||9007199254740991,Yn={millisecond:{common:!0,size:1,steps:1e3},second:{common:!0,size:1e3,steps:60},minute:{common:!0,size:6e4,steps:60},hour:{common:!0,size:36e5,steps:24},day:{common:!0,size:864e5,steps:30},week:{common:!1,size:6048e5,steps:4},month:{common:!0,size:2628e6,steps:12},quarter:{common:!1,size:7884e6,steps:4},year:{common:!0,size:3154e7}},Zn=Object.keys(Yn);function Qn(e,t){return e-t}function Xn(e){return W.valueOrDefault(e.time.min,e.ticks.min)}function er(e){return W.valueOrDefault(e.time.max,e.ticks.max)}function tr(e,t,n,r){var o=function(e,t,n){for(var r,o,i,a=0,l=e.length-1;a>=0&&a<=l;){if(o=e[(r=a+l>>1)-1]||null,i=e[r],!o)return{lo:null,hi:i};if(i[t]<n)a=r+1;else{if(!(o[t]>n))return{lo:o,hi:i};l=r-1}}return{lo:i,hi:null}}(e,t,n),i=o.lo?o.hi?o.lo:e[e.length-2]:e[0],a=o.lo?o.hi?o.hi:e[e.length-1]:e[1],l=a[t]-i[t],s=l?(n-i[t])/l:0,c=(a[r]-i[r])*s;return i[r]+c}function nr(e,t){var n=e._adapter,r=e.options.time,o=r.parser,i=o||r.format,a=t;return"function"==typeof o&&(a=o(a)),W.isFinite(a)||(a="string"==typeof i?n.parse(a,i):n.parse(a)),null!==a?+a:(o||"function"!=typeof i||(a=i(t),W.isFinite(a)||(a=n.parse(a))),a)}function rr(e,t){if(W.isNullOrUndef(t))return null;var n=e.options.time,r=nr(e,e.getRightValue(t));return null===r||n.round&&(r=+e._adapter.startOf(r,n.round)),r}function or(e,t,n,r){var o,i,a,l=Zn.length;for(o=Zn.indexOf(e);o<l-1;++o)if(a=(i=Yn[Zn[o]]).steps?i.steps:Gn,i.common&&Math.ceil((n-t)/(a*i.size))<=r)return Zn[o];return Zn[l-1]}function ir(e,t,n){var r,o,i=[],a={},l=t.length;for(r=0;r<l;++r)a[o=t[r]]=r,i.push({value:o,major:!1});return 0!==l&&n?function(e,t,n,r){var o,i,a=e._adapter,l=+a.startOf(t[0].value,r),s=t[t.length-1].value;for(o=l;o<=s;o=+a.add(o,1,r))(i=n[o])>=0&&(t[i].major=!0);return t}(e,i,a,n):i}var ar=gn.extend({initialize:function(){this.mergeTicksOptions(),gn.prototype.initialize.call(this)},update:function(){var e=this,t=e.options,n=t.time||(t.time={}),r=e._adapter=new Xt._date(t.adapters.date);return qn("time scale",n.format,"time.format","time.parser"),qn("time scale",n.min,"time.min","ticks.min"),qn("time scale",n.max,"time.max","ticks.max"),W.mergeIf(n.displayFormats,r.formats()),gn.prototype.update.apply(e,arguments)},getRightValue:function(e){return e&&void 0!==e.t&&(e=e.t),gn.prototype.getRightValue.call(this,e)},determineDataLimits:function(){var e,t,n,r,o,i,a,l=this,s=l.chart,c=l._adapter,u=l.options,d=u.time.unit||"day",f=Gn,p=Jn,h=[],g=[],m=[],b=l._getLabels();for(e=0,n=b.length;e<n;++e)m.push(rr(l,b[e]));for(e=0,n=(s.data.datasets||[]).length;e<n;++e)if(s.isDatasetVisible(e))if(o=s.data.datasets[e].data,W.isObject(o[0]))for(g[e]=[],t=0,r=o.length;t<r;++t)i=rr(l,o[t]),h.push(i),g[e][t]=i;else g[e]=m.slice(0),a||(h=h.concat(m),a=!0);else g[e]=[];m.length&&(f=Math.min(f,m[0]),p=Math.max(p,m[m.length-1])),h.length&&(h=n>1?function(e){var t,n,r,o={},i=[];for(t=0,n=e.length;t<n;++t)o[r=e[t]]||(o[r]=!0,i.push(r));return i}(h).sort(Qn):h.sort(Qn),f=Math.min(f,h[0]),p=Math.max(p,h[h.length-1])),f=rr(l,Xn(u))||f,p=rr(l,er(u))||p,f=f===Gn?+c.startOf(Date.now(),d):f,p=p===Jn?+c.endOf(Date.now(),d)+1:p,l.min=Math.min(f,p),l.max=Math.max(f+1,p),l._table=[],l._timestamps={data:h,datasets:g,labels:m}},buildTicks:function(){var e,t,n,r=this,o=r.min,i=r.max,a=r.options,l=a.ticks,s=a.time,c=r._timestamps,u=[],d=r.getLabelCapacity(o),f=l.source,p=a.distribution;for(c="data"===f||"auto"===f&&"series"===p?c.data:"labels"===f?c.labels:function(e,t,n,r){var o,i=e._adapter,a=e.options,l=a.time,s=l.unit||or(l.minUnit,t,n,r),c=Kn([l.stepSize,l.unitStepSize,1]),u="week"===s&&l.isoWeekday,d=t,f=[];if(u&&(d=+i.startOf(d,"isoWeek",u)),d=+i.startOf(d,u?"day":s),i.diff(n,t,s)>1e5*c)throw t+" and "+n+" are too far apart with stepSize of "+c+" "+s;for(o=d;o<n;o=+i.add(o,c,s))f.push(o);return o!==n&&"ticks"!==a.bounds||f.push(o),f}(r,o,i,d),"ticks"===a.bounds&&c.length&&(o=c[0],i=c[c.length-1]),o=rr(r,Xn(a))||o,i=rr(r,er(a))||i,e=0,t=c.length;e<t;++e)(n=c[e])>=o&&n<=i&&u.push(n);return r.min=o,r.max=i,r._unit=s.unit||(l.autoSkip?or(s.minUnit,r.min,r.max,d):function(e,t,n,r,o){var i,a;for(i=Zn.length-1;i>=Zn.indexOf(n);i--)if(a=Zn[i],Yn[a].common&&e._adapter.diff(o,r,a)>=t-1)return a;return Zn[n?Zn.indexOf(n):0]}(r,u.length,s.minUnit,r.min,r.max)),r._majorUnit=l.major.enabled&&"year"!==r._unit?function(e){for(var t=Zn.indexOf(e)+1,n=Zn.length;t<n;++t)if(Yn[Zn[t]].common)return Zn[t]}(r._unit):void 0,r._table=function(e,t,n,r){if("linear"===r||!e.length)return[{time:t,pos:0},{time:n,pos:1}];var o,i,a,l,s,c=[],u=[t];for(o=0,i=e.length;o<i;++o)(l=e[o])>t&&l<n&&u.push(l);for(u.push(n),o=0,i=u.length;o<i;++o)s=u[o+1],a=u[o-1],l=u[o],void 0!==a&&void 0!==s&&Math.round((s+a)/2)===l||c.push({time:l,pos:o/(i-1)});return c}(r._timestamps.data,o,i,p),r._offsets=function(e,t,n,r,o){var i,a,l=0,s=0;return o.offset&&t.length&&(i=tr(e,"time",t[0],"pos"),l=1===t.length?1-i:(tr(e,"time",t[1],"pos")-i)/2,a=tr(e,"time",t[t.length-1],"pos"),s=1===t.length?a:(a-tr(e,"time",t[t.length-2],"pos"))/2),{start:l,end:s,factor:1/(l+1+s)}}(r._table,u,0,0,a),l.reverse&&u.reverse(),ir(r,u,r._majorUnit)},getLabelForIndex:function(e,t){var n=this,r=n._adapter,o=n.chart.data,i=n.options.time,a=o.labels&&e<o.labels.length?o.labels[e]:"",l=o.datasets[t].data[e];return W.isObject(l)&&(a=n.getRightValue(l)),i.tooltipFormat?r.format(nr(n,a),i.tooltipFormat):"string"==typeof a?a:r.format(nr(n,a),i.displayFormats.datetime)},tickFormatFunction:function(e,t,n,r){var o=this._adapter,i=this.options,a=i.time.displayFormats,l=a[this._unit],s=this._majorUnit,c=a[s],u=n[t],d=i.ticks,f=s&&c&&u&&u.major,p=o.format(e,r||(f?c:l)),h=f?d.major:d.minor,g=Kn([h.callback,h.userCallback,d.callback,d.userCallback]);return g?g(p,t,n):p},convertTicksToLabels:function(e){var t,n,r=[];for(t=0,n=e.length;t<n;++t)r.push(this.tickFormatFunction(e[t].value,t,e));return r},getPixelForOffset:function(e){var t=this._offsets,n=tr(this._table,"time",e,"pos");return this.getPixelForDecimal((t.start+n)*t.factor)},getPixelForValue:function(e,t,n){var r=null;if(void 0!==t&&void 0!==n&&(r=this._timestamps.datasets[n][t]),null===r&&(r=rr(this,e)),null!==r)return this.getPixelForOffset(r)},getPixelForTick:function(e){var t=this.getTicks();return e>=0&&e<t.length?this.getPixelForOffset(t[e].value):null},getValueForPixel:function(e){var t=this._offsets,n=this.getDecimalForPixel(e)/t.factor-t.end,r=tr(this._table,"pos",n,"time");return this._adapter._create(r)},_getLabelSize:function(e){var t=this.options.ticks,n=this.ctx.measureText(e).width,r=W.toRadians(this.isHorizontal()?t.maxRotation:t.minRotation),o=Math.cos(r),i=Math.sin(r),a=$n(t.fontSize,L.global.defaultFontSize);return{w:n*o+a*i,h:n*i+a*o}},getLabelWidth:function(e){return this._getLabelSize(e).w},getLabelCapacity:function(e){var t=this,n=t.options.time,r=n.displayFormats,o=r[n.unit]||r.millisecond,i=t.tickFormatFunction(e,0,ir(t,[e],t._majorUnit),o),a=t._getLabelSize(i),l=Math.floor(t.isHorizontal()?t.width/a.w:t.height/a.h);return t.options.offset&&l--,l>0?l:1}}),lr={position:"bottom",distribution:"linear",bounds:"data",adapters:{},time:{parser:!1,unit:!1,round:!1,displayFormat:!1,isoWeekday:!1,minUnit:"millisecond",displayFormats:{}},ticks:{autoSkip:!1,source:"auto",major:{enabled:!1}}};ar._defaults=lr;var sr={category:bn,linear:Sn,logarithmic:Tn,radialLinear:Hn,time:ar},cr={datetime:"MMM D, YYYY, h:mm:ss a",millisecond:"h:mm:ss.SSS a",second:"h:mm:ss a",minute:"h:mm a",hour:"hA",day:"MMM D",week:"ll",month:"MMM YYYY",quarter:"[Q]Q - YYYY",year:"YYYY"};Xt._date.override("function"==typeof e?{_id:"moment",formats:function(){return cr},parse:function(t,n){return"string"==typeof t&&"string"==typeof n?t=e(t,n):t instanceof e||(t=e(t)),t.isValid()?t.valueOf():null},format:function(t,n){return e(t).format(n)},add:function(t,n,r){return e(t).add(n,r).valueOf()},diff:function(t,n,r){return e(t).diff(e(n),r)},startOf:function(t,n,r){return t=e(t),"isoWeek"===n?t.isoWeekday(r).valueOf():t.startOf(n).valueOf()},endOf:function(t,n){return e(t).endOf(n).valueOf()},_create:function(t){return e(t)}}:{}),L._set("global",{plugins:{filler:{propagate:!0}}});var ur={dataset:function(e){var t=e.fill,n=e.chart,r=n.getDatasetMeta(t),o=r&&n.isDatasetVisible(t)&&r.dataset._children||[],i=o.length||0;return i?function(e,t){return t<i&&o[t]._view||null}:null},boundary:function(e){var t=e.boundary,n=t?t.x:null,r=t?t.y:null;return W.isArray(t)?function(e,n){return t[n]}:function(e){return{x:null===n?e.x:n,y:null===r?e.y:r}}}};function dr(e,t,n){var r,o=e._model||{},i=o.fill;if(void 0===i&&(i=!!o.backgroundColor),!1===i||null===i)return!1;if(!0===i)return"origin";if(r=parseFloat(i,10),isFinite(r)&&Math.floor(r)===r)return"-"!==i[0]&&"+"!==i[0]||(r=t+r),!(r===t||r<0||r>=n)&&r;switch(i){case"bottom":return"start";case"top":return"end";case"zero":return"origin";case"origin":case"start":case"end":return i;default:return!1}}function fr(e){return(e.el._scale||{}).getPointPositionForValue?function(e){var t,n,r,o,i,a=e.el._scale,l=a.options,s=a.chart.data.labels.length,c=e.fill,u=[];if(!s)return null;for(t=l.ticks.reverse?a.max:a.min,n=l.ticks.reverse?a.min:a.max,r=a.getPointPositionForValue(0,t),o=0;o<s;++o)i="start"===c||"end"===c?a.getPointPositionForValue(o,"start"===c?t:n):a.getBasePosition(o),l.gridLines.circular&&(i.cx=r.x,i.cy=r.y,i.angle=a.getIndexAngle(o)-Math.PI/2),u.push(i);return u}(e):function(e){var t,n=e.el._model||{},r=e.el._scale||{},o=e.fill,i=null;if(isFinite(o))return null;if("start"===o?i=void 0===n.scaleBottom?r.bottom:n.scaleBottom:"end"===o?i=void 0===n.scaleTop?r.top:n.scaleTop:void 0!==n.scaleZero?i=n.scaleZero:r.getBasePixel&&(i=r.getBasePixel()),null!=i){if(void 0!==i.x&&void 0!==i.y)return i;if(W.isFinite(i))return{x:(t=r.isHorizontal())?i:null,y:t?null:i}}return null}(e)}function pr(e,t,n){var r,o=e[t].fill,i=[t];if(!n)return o;for(;!1!==o&&-1===i.indexOf(o);){if(!isFinite(o))return o;if(!(r=e[o]))return!1;if(r.visible)return o;i.push(o),o=r.fill}return!1}function hr(e){var t=e.fill,n="dataset";return!1===t?null:(isFinite(t)||(n="boundary"),ur[n](e))}function gr(e){return e&&!e.skip}function mr(e,t,n,r,o){var i,a,l,s;if(r&&o){for(e.moveTo(t[0].x,t[0].y),i=1;i<r;++i)W.canvas.lineTo(e,t[i-1],t[i]);if(void 0===n[0].angle)for(e.lineTo(n[o-1].x,n[o-1].y),i=o-1;i>0;--i)W.canvas.lineTo(e,n[i],n[i-1],!0);else for(a=n[0].cx,l=n[0].cy,s=Math.sqrt(Math.pow(n[0].x-a,2)+Math.pow(n[0].y-l,2)),i=o-1;i>0;--i)e.arc(a,l,s,n[i].angle,n[i-1].angle,!0)}}function br(e,t,n,r,o,i){var a,l,s,c,u,d,f,p,h=t.length,g=r.spanGaps,m=[],b=[],v=0,y=0;for(e.beginPath(),a=0,l=h;a<l;++a)u=n(c=t[s=a%h]._view,s,r),d=gr(c),f=gr(u),i&&void 0===p&&d&&(l=h+(p=a+1)),d&&f?(v=m.push(c),y=b.push(u)):v&&y&&(g?(d&&m.push(c),f&&b.push(u)):(mr(e,m,b,v,y),v=y=0,m=[],b=[]));mr(e,m,b,v,y),e.closePath(),e.fillStyle=o,e.fill()}var vr={id:"filler",afterDatasetsUpdate:function(e,t){var n,r,o,i,a=(e.data.datasets||[]).length,l=t.propagate,s=[];for(r=0;r<a;++r)i=null,(o=(n=e.getDatasetMeta(r)).dataset)&&o._model&&o instanceof we.Line&&(i={visible:e.isDatasetVisible(r),fill:dr(o,r,a),chart:e,el:o}),n.$filler=i,s.push(i);for(r=0;r<a;++r)(i=s[r])&&(i.fill=pr(s,r,l),i.boundary=fr(i),i.mapper=hr(i))},beforeDatasetsDraw:function(e){var t,n,r,o,i,a,l,s=e._getSortedVisibleDatasetMetas(),c=e.ctx;for(n=s.length-1;n>=0;--n)(t=s[n].$filler)&&t.visible&&(o=(r=t.el)._view,i=r._children||[],a=t.mapper,l=o.backgroundColor||L.global.defaultColor,a&&l&&i.length&&(W.canvas.clipArea(c,e.chartArea),br(c,i,a,o,l,r._loop),W.canvas.unclipArea(c)))}},yr=W.rtl.getRtlAdapter,xr=W.noop,wr=W.valueOrDefault;function kr(e,t){return e.usePointStyle&&e.boxWidth>t?t:e.boxWidth}L._set("global",{legend:{display:!0,position:"top",align:"center",fullWidth:!0,reverse:!1,weight:1e3,onClick:function(e,t){var n=t.datasetIndex,r=this.chart,o=r.getDatasetMeta(n);o.hidden=null===o.hidden?!r.data.datasets[n].hidden:null,r.update()},onHover:null,onLeave:null,labels:{boxWidth:40,padding:10,generateLabels:function(e){var t=e.data.datasets,n=e.options.legend||{},r=n.labels&&n.labels.usePointStyle;return e._getSortedDatasetMetas().map((function(n){var o=n.controller.getStyle(r?0:void 0);return{text:t[n.index].label,fillStyle:o.backgroundColor,hidden:!e.isDatasetVisible(n.index),lineCap:o.borderCapStyle,lineDash:o.borderDash,lineDashOffset:o.borderDashOffset,lineJoin:o.borderJoinStyle,lineWidth:o.borderWidth,strokeStyle:o.borderColor,pointStyle:o.pointStyle,rotation:o.rotation,datasetIndex:n.index}}),this)}}},legendCallback:function(e){var t,n,r,o=document.createElement("ul"),i=e.data.datasets;for(o.setAttribute("class",e.id+"-legend"),t=0,n=i.length;t<n;t++)(r=o.appendChild(document.createElement("li"))).appendChild(document.createElement("span")).style.backgroundColor=i[t].backgroundColor,i[t].label&&r.appendChild(document.createTextNode(i[t].label));return o.outerHTML}});var _r=J.extend({initialize:function(e){W.extend(this,e),this.legendHitBoxes=[],this._hoveredItem=null,this.doughnutMode=!1},beforeUpdate:xr,update:function(e,t,n){var r=this;return r.beforeUpdate(),r.maxWidth=e,r.maxHeight=t,r.margins=n,r.beforeSetDimensions(),r.setDimensions(),r.afterSetDimensions(),r.beforeBuildLabels(),r.buildLabels(),r.afterBuildLabels(),r.beforeFit(),r.fit(),r.afterFit(),r.afterUpdate(),r.minSize},afterUpdate:xr,beforeSetDimensions:xr,setDimensions:function(){var e=this;e.isHorizontal()?(e.width=e.maxWidth,e.left=0,e.right=e.width):(e.height=e.maxHeight,e.top=0,e.bottom=e.height),e.paddingLeft=0,e.paddingTop=0,e.paddingRight=0,e.paddingBottom=0,e.minSize={width:0,height:0}},afterSetDimensions:xr,beforeBuildLabels:xr,buildLabels:function(){var e=this,t=e.options.labels||{},n=W.callback(t.generateLabels,[e.chart],e)||[];t.filter&&(n=n.filter((function(n){return t.filter(n,e.chart.data)}))),e.options.reverse&&n.reverse(),e.legendItems=n},afterBuildLabels:xr,beforeFit:xr,fit:function(){var e=this,t=e.options,n=t.labels,r=t.display,o=e.ctx,i=W.options._parseFont(n),a=i.size,l=e.legendHitBoxes=[],s=e.minSize,c=e.isHorizontal();if(c?(s.width=e.maxWidth,s.height=r?10:0):(s.width=r?10:0,s.height=e.maxHeight),r){if(o.font=i.string,c){var u=e.lineWidths=[0],d=0;o.textAlign="left",o.textBaseline="middle",W.each(e.legendItems,(function(e,t){var r=kr(n,a)+a/2+o.measureText(e.text).width;(0===t||u[u.length-1]+r+2*n.padding>s.width)&&(d+=a+n.padding,u[u.length-(t>0?0:1)]=0),l[t]={left:0,top:0,width:r,height:a},u[u.length-1]+=r+n.padding})),s.height+=d}else{var f=n.padding,p=e.columnWidths=[],h=e.columnHeights=[],g=n.padding,m=0,b=0;W.each(e.legendItems,(function(e,t){var r=kr(n,a)+a/2+o.measureText(e.text).width;t>0&&b+a+2*f>s.height&&(g+=m+n.padding,p.push(m),h.push(b),m=0,b=0),m=Math.max(m,r),b+=a+f,l[t]={left:0,top:0,width:r,height:a}})),g+=m,p.push(m),h.push(b),s.width+=g}e.width=s.width,e.height=s.height}else e.width=s.width=e.height=s.height=0},afterFit:xr,isHorizontal:function(){return"top"===this.options.position||"bottom"===this.options.position},draw:function(){var e=this,t=e.options,n=t.labels,r=L.global,o=r.defaultColor,i=r.elements.line,a=e.height,l=e.columnHeights,s=e.width,c=e.lineWidths;if(t.display){var u,d=yr(t.rtl,e.left,e.minSize.width),f=e.ctx,p=wr(n.fontColor,r.defaultFontColor),h=W.options._parseFont(n),g=h.size;f.textAlign=d.textAlign("left"),f.textBaseline="middle",f.lineWidth=.5,f.strokeStyle=p,f.fillStyle=p,f.font=h.string;var m=kr(n,g),b=e.legendHitBoxes,v=function(e,r){switch(t.align){case"start":return n.padding;case"end":return e-r;default:return(e-r+n.padding)/2}},y=e.isHorizontal();u=y?{x:e.left+v(s,c[0]),y:e.top+n.padding,line:0}:{x:e.left+n.padding,y:e.top+v(a,l[0]),line:0},W.rtl.overrideTextDirection(e.ctx,t.textDirection);var x=g+n.padding;W.each(e.legendItems,(function(t,r){var p=f.measureText(t.text).width,h=m+g/2+p,w=u.x,k=u.y;d.setWidth(e.minSize.width),y?r>0&&w+h+n.padding>e.left+e.minSize.width&&(k=u.y+=x,u.line++,w=u.x=e.left+v(s,c[u.line])):r>0&&k+x>e.top+e.minSize.height&&(w=u.x=w+e.columnWidths[u.line]+n.padding,u.line++,k=u.y=e.top+v(a,l[u.line]));var _=d.x(w);!function(e,t,r){if(!(isNaN(m)||m<=0)){f.save();var a=wr(r.lineWidth,i.borderWidth);if(f.fillStyle=wr(r.fillStyle,o),f.lineCap=wr(r.lineCap,i.borderCapStyle),f.lineDashOffset=wr(r.lineDashOffset,i.borderDashOffset),f.lineJoin=wr(r.lineJoin,i.borderJoinStyle),f.lineWidth=a,f.strokeStyle=wr(r.strokeStyle,o),f.setLineDash&&f.setLineDash(wr(r.lineDash,i.borderDash)),n&&n.usePointStyle){var l=m*Math.SQRT2/2,s=d.xPlus(e,m/2),c=t+g/2;W.canvas.drawPoint(f,r.pointStyle,l,s,c,r.rotation)}else f.fillRect(d.leftForLtr(e,m),t,m,g),0!==a&&f.strokeRect(d.leftForLtr(e,m),t,m,g);f.restore()}}(_,k,t),b[r].left=d.leftForLtr(_,b[r].width),b[r].top=k,function(e,t,n,r){var o=g/2,i=d.xPlus(e,m+o),a=t+o;f.fillText(n.text,i,a),n.hidden&&(f.beginPath(),f.lineWidth=2,f.moveTo(i,a),f.lineTo(d.xPlus(i,r),a),f.stroke())}(_,k,t,p),y?u.x+=h+n.padding:u.y+=x})),W.rtl.restoreTextDirection(e.ctx,t.textDirection)}},_getLegendItemAt:function(e,t){var n,r,o,i=this;if(e>=i.left&&e<=i.right&&t>=i.top&&t<=i.bottom)for(o=i.legendHitBoxes,n=0;n<o.length;++n)if(e>=(r=o[n]).left&&e<=r.left+r.width&&t>=r.top&&t<=r.top+r.height)return i.legendItems[n];return null},handleEvent:function(e){var t,n=this,r=n.options,o="mouseup"===e.type?"click":e.type;if("mousemove"===o){if(!r.onHover&&!r.onLeave)return}else{if("click"!==o)return;if(!r.onClick)return}t=n._getLegendItemAt(e.x,e.y),"click"===o?t&&r.onClick&&r.onClick.call(n,e.native,t):(r.onLeave&&t!==n._hoveredItem&&(n._hoveredItem&&r.onLeave.call(n,e.native,n._hoveredItem),n._hoveredItem=t),r.onHover&&t&&r.onHover.call(n,e.native,t))}});function Er(e,t){var n=new _r({ctx:e.ctx,options:t,chart:e});ht.configure(e,n,t),ht.addBox(e,n),e.legend=n}var Sr={id:"legend",_element:_r,beforeInit:function(e){var t=e.options.legend;t&&Er(e,t)},beforeUpdate:function(e){var t=e.options.legend,n=e.legend;t?(W.mergeIf(t,L.global.legend),n?(ht.configure(e,n,t),n.options=t):Er(e,t)):n&&(ht.removeBox(e,n),delete e.legend)},afterEvent:function(e,t){var n=e.legend;n&&n.handleEvent(t)}},Pr=W.noop;L._set("global",{title:{display:!1,fontStyle:"bold",fullWidth:!0,padding:10,position:"top",text:"",weight:2e3}});var zr=J.extend({initialize:function(e){W.extend(this,e),this.legendHitBoxes=[]},beforeUpdate:Pr,update:function(e,t,n){var r=this;return r.beforeUpdate(),r.maxWidth=e,r.maxHeight=t,r.margins=n,r.beforeSetDimensions(),r.setDimensions(),r.afterSetDimensions(),r.beforeBuildLabels(),r.buildLabels(),r.afterBuildLabels(),r.beforeFit(),r.fit(),r.afterFit(),r.afterUpdate(),r.minSize},afterUpdate:Pr,beforeSetDimensions:Pr,setDimensions:function(){var e=this;e.isHorizontal()?(e.width=e.maxWidth,e.left=0,e.right=e.width):(e.height=e.maxHeight,e.top=0,e.bottom=e.height),e.paddingLeft=0,e.paddingTop=0,e.paddingRight=0,e.paddingBottom=0,e.minSize={width:0,height:0}},afterSetDimensions:Pr,beforeBuildLabels:Pr,buildLabels:Pr,afterBuildLabels:Pr,beforeFit:Pr,fit:function(){var e,t=this,n=t.options,r=t.minSize={},o=t.isHorizontal();n.display?(e=(W.isArray(n.text)?n.text.length:1)*W.options._parseFont(n).lineHeight+2*n.padding,t.width=r.width=o?t.maxWidth:e,t.height=r.height=o?e:t.maxHeight):t.width=r.width=t.height=r.height=0},afterFit:Pr,isHorizontal:function(){var e=this.options.position;return"top"===e||"bottom"===e},draw:function(){var e=this,t=e.ctx,n=e.options;if(n.display){var r,o,i,a=W.options._parseFont(n),l=a.lineHeight,s=l/2+n.padding,c=0,u=e.top,d=e.left,f=e.bottom,p=e.right;t.fillStyle=W.valueOrDefault(n.fontColor,L.global.defaultFontColor),t.font=a.string,e.isHorizontal()?(o=d+(p-d)/2,i=u+s,r=p-d):(o="left"===n.position?d+s:p-s,i=u+(f-u)/2,r=f-u,c=Math.PI*("left"===n.position?-.5:.5)),t.save(),t.translate(o,i),t.rotate(c),t.textAlign="center",t.textBaseline="middle";var h=n.text;if(W.isArray(h))for(var g=0,m=0;m<h.length;++m)t.fillText(h[m],0,g,r),g+=l;else t.fillText(h,0,0,r);t.restore()}}});function Mr(e,t){var n=new zr({ctx:e.ctx,options:t,chart:e});ht.configure(e,n,t),ht.addBox(e,n),e.titleBlock=n}var Cr={},Or=vr,Tr=Sr,Nr={id:"title",_element:zr,beforeInit:function(e){var t=e.options.title;t&&Mr(e,t)},beforeUpdate:function(e){var t=e.options.title,n=e.titleBlock;t?(W.mergeIf(t,L.global.title),n?(ht.configure(e,n,t),n.options=t):Mr(e,t)):n&&(ht.removeBox(e,n),delete e.titleBlock)}};for(var Dr in Cr.filler=Or,Cr.legend=Tr,Cr.title=Nr,Yt.helpers=W,function(){function e(e,t,n){var r;return"string"==typeof e?(r=parseInt(e,10),-1!==e.indexOf("%")&&(r=r/100*t.parentNode[n])):r=e,r}function t(e){return null!=e&&"none"!==e}function n(n,r,o){var i=document.defaultView,a=W._getParentNode(n),l=i.getComputedStyle(n)[r],s=i.getComputedStyle(a)[r],c=t(l),u=t(s),d=Number.POSITIVE_INFINITY;return c||u?Math.min(c?e(l,n,o):d,u?e(s,a,o):d):"none"}W.where=function(e,t){if(W.isArray(e)&&Array.prototype.filter)return e.filter(t);var n=[];return W.each(e,(function(e){t(e)&&n.push(e)})),n},W.findIndex=Array.prototype.findIndex?function(e,t,n){return e.findIndex(t,n)}:function(e,t,n){n=void 0===n?e:n;for(var r=0,o=e.length;r<o;++r)if(t.call(n,e[r],r,e))return r;return-1},W.findNextWhere=function(e,t,n){W.isNullOrUndef(n)&&(n=-1);for(var r=n+1;r<e.length;r++){var o=e[r];if(t(o))return o}},W.findPreviousWhere=function(e,t,n){W.isNullOrUndef(n)&&(n=e.length);for(var r=n-1;r>=0;r--){var o=e[r];if(t(o))return o}},W.isNumber=function(e){return!isNaN(parseFloat(e))&&isFinite(e)},W.almostEquals=function(e,t,n){return Math.abs(e-t)<n},W.almostWhole=function(e,t){var n=Math.round(e);return n-t<=e&&n+t>=e},W.max=function(e){return e.reduce((function(e,t){return isNaN(t)?e:Math.max(e,t)}),Number.NEGATIVE_INFINITY)},W.min=function(e){return e.reduce((function(e,t){return isNaN(t)?e:Math.min(e,t)}),Number.POSITIVE_INFINITY)},W.sign=Math.sign?function(e){return Math.sign(e)}:function(e){return 0==(e=+e)||isNaN(e)?e:e>0?1:-1},W.toRadians=function(e){return e*(Math.PI/180)},W.toDegrees=function(e){return e*(180/Math.PI)},W._decimalPlaces=function(e){if(W.isFinite(e)){for(var t=1,n=0;Math.round(e*t)/t!==e;)t*=10,n++;return n}},W.getAngleFromPoint=function(e,t){var n=t.x-e.x,r=t.y-e.y,o=Math.sqrt(n*n+r*r),i=Math.atan2(r,n);return i<-.5*Math.PI&&(i+=2*Math.PI),{angle:i,distance:o}},W.distanceBetweenPoints=function(e,t){return Math.sqrt(Math.pow(t.x-e.x,2)+Math.pow(t.y-e.y,2))},W.aliasPixel=function(e){return e%2==0?0:.5},W._alignPixel=function(e,t,n){var r=e.currentDevicePixelRatio,o=n/2;return Math.round((t-o)*r)/r+o},W.splineCurve=function(e,t,n,r){var o=e.skip?t:e,i=t,a=n.skip?t:n,l=Math.sqrt(Math.pow(i.x-o.x,2)+Math.pow(i.y-o.y,2)),s=Math.sqrt(Math.pow(a.x-i.x,2)+Math.pow(a.y-i.y,2)),c=l/(l+s),u=s/(l+s),d=r*(c=isNaN(c)?0:c),f=r*(u=isNaN(u)?0:u);return{previous:{x:i.x-d*(a.x-o.x),y:i.y-d*(a.y-o.y)},next:{x:i.x+f*(a.x-o.x),y:i.y+f*(a.y-o.y)}}},W.EPSILON=Number.EPSILON||1e-14,W.splineCurveMonotone=function(e){var t,n,r,o,i,a,l,s,c,u=(e||[]).map((function(e){return{model:e._model,deltaK:0,mK:0}})),d=u.length;for(t=0;t<d;++t)if(!(r=u[t]).model.skip){if(n=t>0?u[t-1]:null,(o=t<d-1?u[t+1]:null)&&!o.model.skip){var f=o.model.x-r.model.x;r.deltaK=0!==f?(o.model.y-r.model.y)/f:0}!n||n.model.skip?r.mK=r.deltaK:!o||o.model.skip?r.mK=n.deltaK:this.sign(n.deltaK)!==this.sign(r.deltaK)?r.mK=0:r.mK=(n.deltaK+r.deltaK)/2}for(t=0;t<d-1;++t)r=u[t],o=u[t+1],r.model.skip||o.model.skip||(W.almostEquals(r.deltaK,0,this.EPSILON)?r.mK=o.mK=0:(i=r.mK/r.deltaK,a=o.mK/r.deltaK,(s=Math.pow(i,2)+Math.pow(a,2))<=9||(l=3/Math.sqrt(s),r.mK=i*l*r.deltaK,o.mK=a*l*r.deltaK)));for(t=0;t<d;++t)(r=u[t]).model.skip||(n=t>0?u[t-1]:null,o=t<d-1?u[t+1]:null,n&&!n.model.skip&&(c=(r.model.x-n.model.x)/3,r.model.controlPointPreviousX=r.model.x-c,r.model.controlPointPreviousY=r.model.y-c*r.mK),o&&!o.model.skip&&(c=(o.model.x-r.model.x)/3,r.model.controlPointNextX=r.model.x+c,r.model.controlPointNextY=r.model.y+c*r.mK))},W.nextItem=function(e,t,n){return n?t>=e.length-1?e[0]:e[t+1]:t>=e.length-1?e[e.length-1]:e[t+1]},W.previousItem=function(e,t,n){return n?t<=0?e[e.length-1]:e[t-1]:t<=0?e[0]:e[t-1]},W.niceNum=function(e,t){var n=Math.floor(W.log10(e)),r=e/Math.pow(10,n);return(t?r<1.5?1:r<3?2:r<7?5:10:r<=1?1:r<=2?2:r<=5?5:10)*Math.pow(10,n)},W.requestAnimFrame="undefined"==typeof window?function(e){e()}:window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(e){return window.setTimeout(e,1e3/60)},W.getRelativePosition=function(e,t){var n,r,o=e.originalEvent||e,i=e.target||e.srcElement,a=i.getBoundingClientRect(),l=o.touches;l&&l.length>0?(n=l[0].clientX,r=l[0].clientY):(n=o.clientX,r=o.clientY);var s=parseFloat(W.getStyle(i,"padding-left")),c=parseFloat(W.getStyle(i,"padding-top")),u=parseFloat(W.getStyle(i,"padding-right")),d=parseFloat(W.getStyle(i,"padding-bottom")),f=a.right-a.left-s-u,p=a.bottom-a.top-c-d;return{x:n=Math.round((n-a.left-s)/f*i.width/t.currentDevicePixelRatio),y:r=Math.round((r-a.top-c)/p*i.height/t.currentDevicePixelRatio)}},W.getConstraintWidth=function(e){return n(e,"max-width","clientWidth")},W.getConstraintHeight=function(e){return n(e,"max-height","clientHeight")},W._calculatePadding=function(e,t,n){return(t=W.getStyle(e,t)).indexOf("%")>-1?n*parseInt(t,10)/100:parseInt(t,10)},W._getParentNode=function(e){var t=e.parentNode;return t&&"[object ShadowRoot]"===t.toString()&&(t=t.host),t},W.getMaximumWidth=function(e){var t=W._getParentNode(e);if(!t)return e.clientWidth;var n=t.clientWidth,r=n-W._calculatePadding(t,"padding-left",n)-W._calculatePadding(t,"padding-right",n),o=W.getConstraintWidth(e);return isNaN(o)?r:Math.min(r,o)},W.getMaximumHeight=function(e){var t=W._getParentNode(e);if(!t)return e.clientHeight;var n=t.clientHeight,r=n-W._calculatePadding(t,"padding-top",n)-W._calculatePadding(t,"padding-bottom",n),o=W.getConstraintHeight(e);return isNaN(o)?r:Math.min(r,o)},W.getStyle=function(e,t){return e.currentStyle?e.currentStyle[t]:document.defaultView.getComputedStyle(e,null).getPropertyValue(t)},W.retinaScale=function(e,t){var n=e.currentDevicePixelRatio=t||"undefined"!=typeof window&&window.devicePixelRatio||1;if(1!==n){var r=e.canvas,o=e.height,i=e.width;r.height=o*n,r.width=i*n,e.ctx.scale(n,n),r.style.height||r.style.width||(r.style.height=o+"px",r.style.width=i+"px")}},W.fontString=function(e,t,n){return t+" "+e+"px "+n},W.longestText=function(e,t,n,r){var o=(r=r||{}).data=r.data||{},i=r.garbageCollect=r.garbageCollect||[];r.font!==t&&(o=r.data={},i=r.garbageCollect=[],r.font=t),e.font=t;var a,l,s,c,u,d=0,f=n.length;for(a=0;a<f;a++)if(null!=(c=n[a])&&!0!==W.isArray(c))d=W.measureText(e,o,i,d,c);else if(W.isArray(c))for(l=0,s=c.length;l<s;l++)null==(u=c[l])||W.isArray(u)||(d=W.measureText(e,o,i,d,u));var p=i.length/2;if(p>n.length){for(a=0;a<p;a++)delete o[i[a]];i.splice(0,p)}return d},W.measureText=function(e,t,n,r,o){var i=t[o];return i||(i=t[o]=e.measureText(o).width,n.push(o)),i>r&&(r=i),r},W.numberOfLabelLines=function(e){var t=1;return W.each(e,(function(e){W.isArray(e)&&e.length>t&&(t=e.length)})),t},W.color=k?function(e){return e instanceof CanvasGradient&&(e=L.global.defaultColor),k(e)}:function(e){return console.error("Color.js not found!"),e},W.getHoverColor=function(e){return e instanceof CanvasPattern||e instanceof CanvasGradient?e:W.color(e).saturate(.5).darken(.1).rgbString()}}(),Yt._adapters=Xt,Yt.Animation=Y,Yt.animationService=Z,Yt.controllers=Ze,Yt.DatasetController=ne,Yt.defaults=L,Yt.Element=J,Yt.elements=we,Yt.Interaction=ot,Yt.layouts=ht,Yt.platform=Mt,Yt.plugins=Ct,Yt.Scale=gn,Yt.scaleService=Ot,Yt.Ticks=en,Yt.Tooltip=Wt,Yt.helpers.each(sr,(function(e,t){Yt.scaleService.registerScaleType(t,e,e._defaults)})),Cr)Cr.hasOwnProperty(Dr)&&Yt.plugins.register(Cr[Dr]);Yt.platform.initialize();var jr=Yt;return"undefined"!=typeof window&&(window.Chart=Yt),Yt.Chart=Yt,Yt.Legend=Cr.legend._element,Yt.Title=Cr.title._element,Yt.pluginService=Yt.plugins,Yt.PluginBase=Yt.Element.extend({}),Yt.canvasHelpers=Yt.helpers.canvas,Yt.layoutService=Yt.layouts,Yt.LinearScaleBase=wn,Yt.helpers.each(["Bar","Bubble","Doughnut","Line","PolarArea","Radar","Scatter"],(function(e){Yt[e]=function(t,n){return new Yt(t,Yt.helpers.merge(n||{},{type:e.charAt(0).toLowerCase()+e.slice(1)}))}})),jr}(function(){try{return n(400)}catch(e){}}())},function(e,t){if("undefined"==typeof moment){var n=new Error("Cannot find module 'moment'");throw n.code="MODULE_NOT_FOUND",n}e.exports=moment},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),l=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&i(t,e,n);return a(t,e),t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=l(n(1)),u=s(n(9)),d=s(n(11)),f=function(e){function t(t){var n=e.call(this,t)||this;return n.translations=u.default(),n}return o(t,e),t.prototype.render=function(){var e=this;return c.createElement(d.default,{loginRequired:!1,contentData:c.createElement("div",{className:"ErrorMessagesLearnMore flex flex-column"},[{code:1,message:this.translations.globalErrorCode_1},{code:2,message:this.translations.globalErrorCode_2},{code:3,message:this.translations.globalErrorCode_3}].map((function(t){var n=t.code,r=t.message;return c.createElement("div",{className:"box"},c.createElement("h1",null,e.translations.globalErrorCodeTitle+" "+n),c.createElement("p",null,r))})))})},t}(c.Component);t.default=f},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),l=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&i(t,e,n);return a(t,e),t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=l(n(1)),u=s(n(403)),d=s(n(11)),f=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return o(t,e),t.prototype.render=function(){return c.createElement(d.default,{loginRequired:!1,contentData:c.createElement(u.default,null)})},t}(c.Component);t.default=f},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),l=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&i(t,e,n);return a(t,e),t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=l(n(1)),u=n(60),d=s(n(32)),f=s(n(110)),p=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return o(t,e),t.prototype.render=function(){var e=f.default();return c.createElement("div",{className:"Security"},e.map((function(e,t){var n={backgroundImage:"url(https://chat-manager.j.pl/public/images/"+e.img+")"};return c.createElement(u.Link,{key:d.default(),className:"single-box single-box-"+t,to:""+e.link},c.createElement("h1",{className:"h1-title"},e.translated),c.createElement("div",{className:"image",style:n}))})))},t}(c.Component);t.default=p},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),l=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&i(t,e,n);return a(t,e),t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=l(n(1)),u=s(n(35)),d=s(n(11)),f=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return o(t,e),t.prototype.render=function(){return c.createElement(d.default,{loginRequired:!1,contentData:c.createElement(u.default,{storageName:"blacklistedElementsWords"})})},t}(c.Component);t.default=f},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),l=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&i(t,e,n);return a(t,e),t};Object.defineProperty(t,"__esModule",{value:!0});var s=l(n(1)),c=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return o(t,e),t.prototype.render=function(){return s.createElement("div",{className:"loading-animation"})},t}(s.Component);t.default=c},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.default=function(e,t){var n=Object.getOwnPropertyNames(e),r=Object.getOwnPropertyNames(t);if(n.length!==r.length)return!1;for(var o=0;o<=n.length-1;o++){var i=n[o],a=Object.getOwnPropertyNames(e[i]);if(!a.length)return!0;for(var l=0;l<=a.length-1;l++){var s=a[l];if(null==t[i]||null==t[i][s]||e[i][s].length!==t[i][s].length)return!1}}return!0}},function(e,t,n){var r=n(78),o=n(408);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var i={insert:"head",singleton:!1};r(o,i);e.exports=o.locals||{}},function(e,t,n){(t=n(79)(!1)).push([e.i,".Pagination{display:block;min-height:70px}.Pagination .buttons{float:left}.Pagination .icon-next,.Pagination .icon-previous{position:relative}.Pagination .icon-next:after,.Pagination .icon-previous:after{position:absolute;top:0;left:0;width:100%;text-align:center;line-height:35px;height:100%}.Pagination .icon-next:after{content:'↪'}.Pagination .icon-previous:after{content:'↩'}.Pagination .previous-button,.Pagination .next-button{display:inline-block;width:35px;height:35px;line-height:35px;text-align:center;font-size:0.75rem;margin:0 10px;border-radius:3px;background-color:rgba(69,69,69,0.1);color:#72777a}.Pagination .previous-button:hover,.Pagination .next-button:hover{cursor:pointer}.Pagination .previous-button.disabled,.Pagination .next-button.disabled{color:rgba(69,69,69,0.2)}.Pagination .pages-current,.Pagination .pages-previous,.Pagination .pages-next{display:inline-block}.Pagination .page-number:hover{cursor:pointer}.Pagination .input-holder{border:1px solid rgba(69,69,69,0.2);border-radius:10px;width:100%;overflow:hidden;height:50px}.Pagination .input-holder input{float:left;width:calc(100% - 70px);box-sizing:border-box;padding:10px 15px;border:none;line-height:25px;overflow:hidden;height:auto;min-height:15px;font-size:0.87rem;color:rgba(69,69,69,0.8)}.Pagination .input-holder .icon,.Pagination .input-holder .icon-search{float:left;width:70px;text-align:center;color:rgba(69,69,69,0.8);display:block;box-sizing:border-box;padding:5px;position:relative;height:100%}.Pagination .input-holder .icon-search:after{content:'🔍';position:absolute;top:0;left:0;width:70px;text-align:center;line-height:50px;height:50px}.Pagination .input-holder .icon:hover{cursor:pointer}\n",""]),e.exports=t},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),l=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&i(t,e,n);return a(t,e),t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=l(n(1)),u=s(n(35)),d=s(n(11)),f=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return o(t,e),t.prototype.render=function(){return c.createElement(d.default,{loginRequired:!1,contentData:c.createElement(u.default,{storageName:"blacklistedElementsDomians"})})},t}(c.Component);t.default=f},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),l=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&i(t,e,n);return a(t,e),t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=l(n(1)),u=s(n(35)),d=s(n(11)),f=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return o(t,e),t.prototype.render=function(){return c.createElement(d.default,{loginRequired:!1,contentData:c.createElement(u.default,{storageName:"blacklistedElementsUrlsIncludes"})})},t}(c.Component);t.default=f},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),l=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&i(t,e,n);return a(t,e),t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=l(n(1)),u=s(n(35)),d=s(n(11)),f=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return o(t,e),t.prototype.render=function(){return c.createElement(d.default,{loginRequired:!1,contentData:c.createElement(u.default,{storageName:"blacklistedElementsTrackers"})})},t}(c.Component);t.default=f},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),l=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&i(t,e,n);return a(t,e),t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=l(n(1)),u=s(n(35)),d=s(n(11)),f=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return o(t,e),t.prototype.render=function(){return c.createElement(d.default,{loginRequired:!1,contentData:c.createElement(u.default,{storageName:"blacklistedElementsCookies"})})},t}(c.Component);t.default=f},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),l=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&i(t,e,n);return a(t,e),t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=l(n(1)),u=s(n(81)),d=s(n(11)),f=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return o(t,e),t.prototype.render=function(){return c.createElement(d.default,{loginRequired:!1,contentData:c.createElement(u.default,{storageName:"blacklistedElementsClass"})})},t}(c.Component);t.default=f},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),l=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&i(t,e,n);return a(t,e),t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=l(n(1)),u=s(n(81)),d=s(n(11)),f=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return o(t,e),t.prototype.render=function(){return c.createElement(d.default,{loginRequired:!1,contentData:c.createElement(u.default,{storageName:"blacklistedElementsId"})})},t}(c.Component);t.default=f},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),l=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&i(t,e,n);return a(t,e),t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=l(n(1)),u=s(n(81)),d=s(n(11)),f=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return o(t,e),t.prototype.render=function(){return c.createElement(d.default,{loginRequired:!1,contentData:c.createElement(u.default,{storageName:"blacklistedElementsHref"})})},t}(c.Component);t.default=f},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),l=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&i(t,e,n);return a(t,e),t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=l(n(1)),u=s(n(35)),d=s(n(11)),f=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return o(t,e),t.prototype.render=function(){return c.createElement(d.default,{loginRequired:!1,contentData:c.createElement(u.default,{storageName:"blacklistedElementsIframes"})})},t}(c.Component);t.default=f},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),l=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&i(t,e,n);return a(t,e),t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=l(n(1)),u=s(n(35)),d=s(n(11)),f=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return o(t,e),t.prototype.render=function(){return c.createElement(d.default,{loginRequired:!1,contentData:c.createElement(u.default,{storageName:"blacklistedElementsIframesSources"})})},t}(c.Component);t.default=f},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),l=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&i(t,e,n);return a(t,e),t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=l(n(1)),u=s(n(35)),d=s(n(11)),f=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return o(t,e),t.prototype.render=function(){return c.createElement(d.default,{loginRequired:!1,contentData:c.createElement(u.default,{storageName:"blacklistedElementsIframesNames"})})},t}(c.Component);t.default=f},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),l=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&i(t,e,n);return a(t,e),t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=l(n(1)),u=s(n(35)),d=s(n(11)),f=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return o(t,e),t.prototype.render=function(){return c.createElement(d.default,{loginRequired:!1,contentData:c.createElement(u.default,{storageName:"whitelistedElementsDomains"})})},t}(c.Component);t.default=f},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),l=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&i(t,e,n);return a(t,e),t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=l(n(1)),u=s(n(421)),d=s(n(11)),f=s(n(9)),p=function(e){function t(t){var n=e.call(this,t)||this;return n.translations=f.default(),n}return o(t,e),t.prototype.render=function(){return c.createElement(d.default,{loginRequired:!1,contentData:c.createElement(u.default,{translations:this.translations})})},t}(c.Component);t.default=p},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),l=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&i(t,e,n);return a(t,e),t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=l(n(1)),u=l(n(80)),d=s(n(166)),f=s(n(111)),p=s(n(32)),h=s(n(54)),g=function(e){function t(t){var n=e.call(this,t)||this;return n.saveToFileJson=n.saveToFileJson.bind(n),n.setDataToStorage=n.setDataToStorage.bind(n),n.setNewValue=n.setNewValue.bind(n),n.changeBooleanValue=n.changeBooleanValue.bind(n),n.closeMessages=n.closeMessages.bind(n),n.resetAll=n.resetAll.bind(n),n.setMessageCopyToClipBoard=n.setMessageCopyToClipBoard.bind(n),n.getUserSettings=n.getUserSettings.bind(n),n.translations=t.translations,n.state={replacer:"",maximumOfDangerWords:"",securityIsOn:"",makeSearchInSourceCode:"",mutationCheck:"",scanTextOnWebsite:"",ignoreTagScript:"",ignoreTagLink:"",ignoreTagMeta:"",ignoreTagStyle:"",limitlessScan:"",deleteCookies:"",extendsblacklist:"",extendspornlist:"",booleanStorageMapping:[{storageName:"extendsblacklist",text:n.translations.extendsblacklist},{storageName:"extendspornlist",text:n.translations.extendspornlist},{storageName:"limitlessScan",text:n.translations.limitlessScan},{storageName:"deleteCookies",text:n.translations.deleteCookies},{storageName:"securityIsOn",text:n.translations.securityIsOn},{storageName:"scanTextOnWebsite",text:n.translations.scanTextOnWebsite},{storageName:"makeSearchInSourceCode",text:n.translations.makeSearchInSourceCode},{storageName:"mutationCheck",text:n.translations.mutationCheck},{storageName:"ignoreTagScript",text:n.translations.ignoreTagScript},{storageName:"ignoreTagLink",text:n.translations.ignoreTagLink},{storageName:"ignoreTagMeta",text:n.translations.ignoreTagMeta},{storageName:"ignoreTagStyle",text:n.translations.ignoreTagStyle}],jsonData:{},errorMessage:"",successMessage:"",animationLoading:!1,rawJsonData:{}},n}return o(t,e),t.prototype.componentDidMount=function(){var e=this;this.getUserSettings(!0),clearInterval(this.intervalGetSettings),this.intervalGetSettings=setInterval((function(){e.getUserSettings()}),5e3)},t.prototype.componentWillUnmount=function(){clearInterval(this.intervalGetSettings)},t.prototype.getUserSettings=function(e){var t=this;void 0===e&&(e=!1),this.setState({animationLoading:!!e},(function(){browser.runtime.sendMessage({action:"get-user-settings-dashboard"}).then((function(e){t.setDataToStorage(e)})).catch((function(e){t.setState({animationLoading:!1})}))}))},t.prototype.resetAll=function(){var e=this;["securityIsOn","makeSearchInSourceCode","mutationCheck","scanTextOnWebsite","deleteCookies"].map((function(t){e.changeBooleanValue(!1,t,!0)})),["ignoreTagScript","ignoreTagLink","ignoreTagMeta","ignoreTagStyle","limitlessScan","extendsblacklist","extendspornlist"].map((function(t){e.changeBooleanValue(!0,t,!0)})),this.setNewValue("#","replacer",!0),this.setNewValue(1,"maximumOfDangerWords",!0),this.setState({successMessage:"Default configuration has been restored",errorMessage:""})},t.prototype.closeMessages=function(){this.setState({messages:[]})},t.prototype.setDataToStorage=function(e){var t=e.replacer,n=e.maximumOfDangerWords,r=e.securityIsOn,o=e.makeSearchInSourceCode,i=e.mutationCheck,a=e.scanTextOnWebsite,l=e.ignoreTagScript,s=e.ignoreTagLink,c=e.ignoreTagMeta,u=e.ignoreTagStyle,d=e.limitlessScan,f=e.deleteCookies,p=e.extendsblacklist,h=e.extendspornlist,g={replacer:t,maximumOfDangerWords:n,securityIsOn:r,makeSearchInSourceCode:o,mutationCheck:i,scanTextOnWebsite:a,ignoreTagScript:l,ignoreTagLink:s,ignoreTagMeta:c,ignoreTagStyle:u,limitlessScan:d,deleteCookies:f,extendsblacklist:p,extendspornlist:h},m=JSON.stringify(g),b=g;this.setState({settings:g,jsonData:m,replacer:t,maximumOfDangerWords:n,securityIsOn:r,makeSearchInSourceCode:o,mutationCheck:i,scanTextOnWebsite:a,ignoreTagScript:l,ignoreTagLink:s,ignoreTagMeta:c,ignoreTagStyle:u,limitlessScan:d,animationLoading:!1,rawJsonData:b,deleteCookies:f,extendsblacklist:p,extendspornlist:h})},t.prototype.saveToFileJson=function(e){var t=this;e.persist(),e.target.classList.add("copied-remove"),setTimeout((function(){if(e.target.classList.remove("copied"),e.target.classList.remove("copied-remove"),t.state.rawJsonData)try{var n=new Blob([JSON.stringify(t.state.rawJsonData)],{type:"application/json;charset=utf-8"});u.saveAs(n,"NinjaProtect-settings.json")}catch(e){h.default("Error while creating Blob file. Error message: "+e+".",-1)}}),300)},t.prototype.setNewValue=function(e,t,n){var r=this;void 0===n&&(n=!1);var o=this.state.settings,i=this.state.jsonData,a={},l="",s="";browser.runtime.sendMessage({action:"set-replacer-of-danger-words",storageName:t,value:e}).then((function(e){var l;o[t]=e,i=o,a=o,s="Setted new value to: "+e,r.setState(((l={settings:o})[t]=e,l.successMessage=n?"":s,l.errorMessage="",l.jsonData=JSON.stringify(i),l.rawJsonData=a,l))})).catch((function(e){l="Error while setting new value with browser message: "+(e||"No message available"),r.setState({errorMessage:n?"":l,successMessage:"",jsonData:JSON.stringify(i)})}))},t.prototype.changeBooleanValue=function(e,t,n){var r=this;void 0===n&&(n=!1);var o=this.state.settings,i=this.state.jsonData,a={},l="",s="";browser.runtime.sendMessage({action:"change-settings-boolean-dashboard",storageName:t,value:e}).then((function(e){var l;o[t]=e,i=o,a=o,s=e?"Activated selected feature":"Deactivated selected feature",r.setState(((l={settings:o})[t]=e,l.successMessage=n?"":s,l.errorMessage="",l.jsonData=JSON.stringify(i),l.rawJsonData=a,l))})).catch((function(e){l="Error while setting new value with browser message: "+(e||"No message available"),r.setState({errorMessage:n?"":l,successMessage:""})}))},t.prototype.setMessageCopyToClipBoard=function(){this.setState({successMessage:this.translations.copiedToClipBoard,errorMessage:""})},t.prototype.render=function(){var e=this;return c.createElement("div",{className:"SecuritySettings"},this.state.animationLoading&&c.createElement(d.default,null),""!==this.state.errorMessage&&c.createElement("div",{className:"error-message"},""!==this.state.errorMessage&&c.createElement("i",{className:"fas fa-exclamation"}),""!==this.state.errorMessage&&c.createElement("span",null,this.state.errorMessage)),""!==this.state.successMessage&&c.createElement("div",{className:"successMessages-message"},""!==this.state.successMessage&&c.createElement("i",{className:"far fa-thumbs-up"}),""!==this.state.successMessage&&c.createElement("span",null,this.state.successMessage)),c.createElement("div",{className:"right d-block"},c.createElement("span",null,c.createElement("h1",{className:"main-title-home"},this.translations.dashbord_menu_4),c.createElement("div",{className:"actions-header"},c.createElement("span",{className:"actions"},c.createElement("i",{title:this.translations.restoreDefaultValue,onClick:function(t){e.resetAll()},className:"fas fa-broom button-action"}),document.queryCommandSupported&&c.createElement("i",{title:this.translations.action_title_copyToClipboard,className:"fas fa-clipboard button-action clipboard",onClick:function(t){f.default(t,e.state.jsonData,document.documentElement.scrollTop),e.setMessageCopyToClipBoard()}}),c.createElement("i",{onClick:function(t){e.saveToFileJson(t)},className:"fas fa-file-signature button-action json"}))),c.createElement("div",{className:"settings"},c.createElement("div",{className:"single-content-settings"},c.createElement("div",{key:p.default(),className:"single-setting"},c.createElement("ul",{className:"ul-description"},c.createElement("li",null,c.createElement("input",{type:"text",defaultValue:this.state.replacer,onChange:function(t){return e.setNewValue(t.target.value,"replacer")}})),c.createElement("li",null,this.translations.replacer)),c.createElement("ul",{className:"ul-description"},c.createElement("li",null,c.createElement("input",{type:"number",defaultValue:this.state.maximumOfDangerWords,min:"1",max:"1000",onChange:function(t){return e.setNewValue(t.target.value,"maximumOfDangerWords")}})),c.createElement("li",null,this.translations.maximumOfDangerWords)),this.state.booleanStorageMapping.map((function(t){return e.state[t.storageName]?c.createElement("ul",{key:p.default(),className:"ul-description"},c.createElement("li",null,c.createElement("label",{className:"switch"},c.createElement("input",{type:"checkbox",checked:e.state[t.storageName],onChange:function(n){return e.changeBooleanValue(e.state[t.storageName],t.storageName)}}),c.createElement("span",{className:"switch-slider round"}))),c.createElement("li",null,t.text)):c.createElement("ul",{key:p.default(),className:"ul-description"},c.createElement("li",null,c.createElement("label",{className:"switch"},c.createElement("input",{type:"checkbox",checked:e.state[t.storageName],onChange:function(n){return e.changeBooleanValue(e.state[t.storageName],t.storageName)}}),c.createElement("span",{className:"switch-slider switch-slider-not-checked round"}))),c.createElement("li",null,t.text))})))))),c.createElement("form",{style:{display:"none !important",opacity:0,position:"absolute",width:0,height:0,overflow:"hidden"}},c.createElement("textarea",{id:"copy-to-clipboard",value:"",readOnly:!0}))))},t}(c.Component);t.default=g},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),l=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&i(t,e,n);return a(t,e),t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=l(n(1)),u=s(n(423)),d=s(n(9)),f=s(n(11)),p=function(e){function t(t){var n=e.call(this,t)||this;return n.translations=d.default(),n}return o(t,e),t.prototype.render=function(){return c.createElement(f.default,{loginRequired:!1,contentData:c.createElement(u.default,{translations:this.translations})})},t}(c.Component);t.default=p},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),l=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&i(t,e,n);return a(t,e),t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=l(n(1)),u=s(n(424)),d=s(n(425)),f=s(n(426)),p=function(e){function t(t){var n=e.call(this,t)||this;return n.state={language:localStorage.getItem("applanguage")?localStorage.getItem("applanguage"):"en"},n.translations=t.translations,n}return o(t,e),t.prototype.currentYear=function(){var e=(new Date).getFullYear(),t="2020";return 2020!==e&&(t="2020 - "+e),t},t.prototype.render=function(){return c.createElement("div",{className:"PrivacyTerms flex flex-column"},"de"==this.state.language&&u.default(),"pl"==this.state.language&&f.default(),"pl"!==this.state.language&&"de"!==this.state.language&&d.default())},t}(c.Component);t.default=p},function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t};Object.defineProperty(t,"__esModule",{value:!0});var a=i(n(1));t.default=function(){return a.createElement("div",{className:"text"},a.createElement("h1",{className:"ff-title"},"LocalStorage"),a.createElement("p",null,"Dieses Addon hat lokal gespeichert Daten:"),a.createElement("ul",null,a.createElement("li",null,"Blacklist domains"),a.createElement("li",null,"Blacklist cookies"),a.createElement("li",null,"Blacklist urls"),a.createElement("li",null,"Blacklist urls includes"),a.createElement("li",null,"Blacklist iframes"),a.createElement("li",null,"Whitelist domains"),a.createElement("li",null,"Einstellungen dieser Erweiterung mit den keys: securityIsOn, makeSearchInSourceCode, mutationCheck, scanTextOnWebsite, deleteCookies, ignoreTagScript, ignoreTagLink, ignoreTagMeta, ignoreTagStyle, limitlessScan, statistic, extendspornlist, extendsblacklist")),a.createElement("p",null,"Alle von den oben genannten Listen werden lokal im Browser gespeichert - localStorage - und von dieser Erweiterung genutzt. Alle neu hinzugefügten/ gelöschten Elemente aus den o.g. Listen werden remote gespeichert. Diese Daten übertragung erfolgt auch verschlüsselt. Falls einzelene Einträge aus der Liste entfernt werden, werden diese auch von dem Remote Speichermedium komplett entfernt. Falls eine einzelne List aufgerufen wird, werden die lokalen und Remote Daten mit einander synchronisiert."),a.createElement("p",null,'Diese lokal gespeicherten Daten können gelöscht werden in dem man die "Cookies and Site Data" löscht.'))}},function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t};Object.defineProperty(t,"__esModule",{value:!0});var a=i(n(1));t.default=function(){return a.createElement("div",{className:"text"},a.createElement("h1",{className:"ff-title"},"LocalStorage"),a.createElement("p",null,"This addon has locally saved data:"),a.createElement("ul",null,a.createElement("li",null,"Blacklist domains"),a.createElement("li",null,"Blacklist cookies"),a.createElement("li",null,"Blacklist urls"),a.createElement("li",null,"Blacklist urls includes"),a.createElement("li",null,"Blacklist iframes"),a.createElement("li",null,"Whitelist domains"),a.createElement("li",null,"Block HTML by Class, Href and Id"),a.createElement("li",null,"Settings of this extension with the keys: securityIsOn, makeSearchInSourceCode, mutationCheck, scanTextOnWebsite, deleteCookies, ignoreTagScript, ignoreTagLink, ignoreTagMeta, ignoreTagStyle, limitlessScan, statistic, extendspornlist, extendsblacklist")),a.createElement("p",null,"All of the above lists are stored locally in the browsers - localStorage - and owned by the browser. If you are logged in - all of the above lists are stored remotly. If your are logged in an you are adding or deleting an list/ list entry, then the same action are made on the remote service/ backend."),a.createElement("p",null,'All local stored data (localStorage) can be removed by clearing the "Cookies and Site Data".'))}},function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t};Object.defineProperty(t,"__esModule",{value:!0});var a=i(n(1));t.default=function(){return a.createElement("div",{className:"text"},a.createElement("h1",{className:"ff-title"},"LocalStorage"),a.createElement("p",null,"Ten dodatek zapisujhe dane lokalnie:"),a.createElement("ul",null,a.createElement("li",null,"Blacklist domains"),a.createElement("li",null,"Blacklist cookies"),a.createElement("li",null,"Blacklist urls"),a.createElement("li",null,"Blacklist urls includes"),a.createElement("li",null,"Blacklist iframes"),a.createElement("li",null,"Whitelist domains"),a.createElement("li",null,"Ustawienia tego rozszerzenia z nazwami kluczy: securityIsOn, makeSearchInSourceCode, mutationCheck, scanTextOnWebsite, deleteCookies, ignoreTagScript, ignoreTagLink, ignoreTagMeta, ignoreTagStyle, limitlessScan, statistic, extendspornlist, extendsblacklist")),a.createElement("p",null,"Wszystkie powyższe listy są rozpoznawane lokalnie w przeglądarce - localStorage. Wszystkie nowe lub kasowane elementy z tych list są przechowywane na zdalnym serwerze. Te dane są synchronizowane podczas odwiedzania stron list, dodawanie lub kasowanie elementów do jednej z list. Wtedy gdy element zostanie skasowany, nie ma możliwości jego odzyskania."),a.createElement("p",null,'Te zapisane lokalnie dane mogą zostać usunięte poprzez opróżnienie "Cookies and Site Data".'))}},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),l=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&i(t,e,n);return a(t,e),t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=l(n(1)),u=s(n(11)),d=s(n(9)),f=s(n(110)),p=s(n(32)),h=function(e){function t(t){var n=e.call(this,t)||this;return n.state={examples:f.default()},n.translations=d.default(),n}return o(t,e),t.prototype.render=function(){var e=this;return c.createElement(u.default,{loginRequired:!1,contentData:c.createElement("div",{className:"Examples flex flex-column"},this.state.examples.map((function(t){var n=t.translated,r=(t.img,t.name),o=e.translations[r+"_html"];return c.createElement("div",{key:p.default(),className:"example"},c.createElement("h1",{className:"ff-title h1 text-center"},n),o)})))})},t}(c.Component);t.default=h},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),l=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&i(t,e,n);return a(t,e),t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=l(n(1)),u=s(n(77)),d=function(e){function t(t){var n=e.call(this,t)||this;return n.getClassNamesContent=n.getClassNamesContent.bind(n),n.getClassNamesSidebar=n.getClassNamesSidebar.bind(n),n.sideBar=n.sideBar.bind(n),n.resizeView=n.resizeView.bind(n),n.state={moduleSidebar:t.moduleSidebar&&typeof{}==typeof t.moduleSidebar?t.moduleSidebar:void 0,headerData:t.headerData&&typeof{}==typeof t.headerData?t.headerData:void 0,contentData:t.contentData&&typeof{}==typeof t.contentData?t.contentData:void 0,persistUserSelection:"boolean"==typeof t.persistUserSelection?t.persistUserSelection:void 0,clearPersistUserSelection:"boolean"==typeof t.clearPersistUserSelection?t.clearPersistUserSelection:void 0,sidebarMinifiedAt:"number"==typeof t.sidebarMinifiedAt?t.sidebarMinifiedAt:720,sidebarMaxifiedAt:"number"==typeof t.sidebarMaxifiedAt?t.sidebarMaxifiedAt:1024,displayMinifyMaxifyIcon:"boolean"==typeof t.displayMinifyMaxifyIcon?t.displayMinifyMaxifyIcon:void 0,minifiedSecondSideBar:!0},n}return o(t,e),t.getDerivedStateFromProps=function(e,t){return u.default(["moduleSidebar","headerData","contentData","persistUserSelection","sidebarMinifiedAt","sidebarMaxifiedAt","displayMinifyMaxifyIcon"],e,t)?{moduleSidebar:e.moduleSidebar&&typeof{}==typeof e.moduleSidebar?e.moduleSidebar:void 0,headerData:e.headerData&&typeof{}==typeof e.headerData?e.headerData:void 0,contentData:e.contentData&&typeof{}==typeof e.contentData?e.contentData:void 0,persistUserSelection:"boolean"==typeof e.persistUserSelection?e.persistUserSelection:void 0,clearPersistUserSelection:"boolean"==typeof e.clearPersistUserSelection?e.clearPersistUserSelection:void 0,sidebarMinifiedAt:"number"==typeof e.sidebarMinifiedAt?e.sidebarMinifiedAt:720,sidebarMaxifiedAt:"number"==typeof e.sidebarMaxifiedAt?e.sidebarMaxifiedAt:1024,displayMinifyMaxifyIcon:"boolean"==typeof e.displayMinifyMaxifyIcon?e.displayMinifyMaxifyIcon:void 0}:null},t.prototype.componentDidMount=function(){var e=this.state.clearPersistUserSelection;(e||void 0===e)&&localStorage.removeItem("persistUserSelection"),window.addEventListener("resize",this.resizeView),this.resizeView()},t.prototype.componentWillUnmount=function(){window.removeEventListener("resize",this.resizeView)},t.prototype.resizeView=function(){var e=this.state,t=e.persistUserSelection,n=e.sidebarMinifiedAt,r=e.sidebarMaxifiedAt;if(t&&null!==localStorage.getItem("persistUserSelection"))try{var o=JSON.parse(localStorage.getItem("persistUserSelection")),i=o.sidebarMin,a=o.contentMin,l=o.isMinified,s=o.minifiedSecondSideBar;return this.setState({sidebarMin:i,contentMin:a,isMinified:l,minifiedSecondSideBar:s})}catch(e){}var c=document.documentElement.getBoundingClientRect().width;return c>=r?this.setState({sidebarMin:!1,contentMin:!1,isMinified:!1,minifiedSecondSideBar:!0}):c<=n?this.setState({sidebarMin:!0,contentMin:!0,isMinified:!0}):c<r?this.setState({sidebarMin:!0,contentMin:!0,isMinified:!1,minifiedSecondSideBar:!0}):null},t.prototype.getClassNamesSidebar=function(){var e=this.state,t=e.sidebarMin;return e.contentMin||t?"SideBar SideBar-min":"SideBar"},t.prototype.getClassNamesContent=function(){var e=this.state,t=e.contentMin,n=e.sidebarMin;return this.state.isMinified?this.state.minifiedSecondSideBar?"Content minified":"Content minified opened":t||n?"Content Content-min":"Content"},t.prototype.sideBar=function(){var e=this;this.state.isMinified?this.setState({minifiedSecondSideBar:!this.state.minifiedSecondSideBar},(function(){var t=e.state,n=t.sidebarMin,r=t.contentMin,o=t.isMinified,i=t.minifiedSecondSideBar;t.persistUserSelection&&localStorage.setItem("persistUserSelection",JSON.stringify({sidebarMin:n,contentMin:r,isMinified:o,minifiedSecondSideBar:i}))})):this.setState({sidebarMin:!this.state.sidebarMin,contentMin:!this.state.contentMin},(function(){var t=e.state,n=t.sidebarMin,r=t.contentMin,o=t.isMinified,i=t.minifiedSecondSideBar;t.persistUserSelection&&localStorage.setItem("persistUserSelection",JSON.stringify({sidebarMin:n,contentMin:r,isMinified:o,minifiedSecondSideBar:i}))}))},t.prototype.render=function(){var e=this,t=this.state,n=t.moduleSidebar,r=t.headerData,o=t.contentData,i=t.displayMinifyMaxifyIcon,a=this.getClassNamesSidebar(),l=this.getClassNamesContent();return c.createElement("div",{className:"Main block"},c.createElement("div",{ref:function(t){return e.nodeSideBar=t},className:""+(this.state.isMinified?this.state.minifiedSecondSideBar?"SideBar SidebarMinified":"SideBar SidebarMinified opened":a)},this.state.isMinified&&c.createElement("i",{className:"fas fa-angle-left close-side-bar action-icon",onClick:function(t){return e.sideBar()}}),n&&n),c.createElement("div",{className:l},c.createElement("div",{className:"head"},i&&c.createElement("i",{onClick:function(t){return e.sideBar()},className:"fas fa-bars minify-menu"}),r&&r),o&&o))},t}(c.Component);t.default=d},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)},a=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),l=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&a(t,e,n);return l(t,e),t},c=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var u=s(n(1)),d=n(60),f=c(n(32)),p=function(e){function t(t){var n=e.call(this,t)||this;return n.state={data:t.data&&typeof[]==typeof t.data?t.data:[],reactRouter:void 0===t.reactRouter||"boolean"!=typeof t.reactRouter||t.reactRouter,dropDownIcon:void 0!==t.dropDownIcon&&typeof[]==typeof t.dropDownIcon?t.dropDownIcon:"",childrenPaddingX:void 0===t.childrenPaddingX||"number"!=typeof t.childrenPaddingX||isNaN(parseInt(t.childrenPaddingX))?20:t.childrenPaddingX},n}return o(t,e),t.prototype.closeChildRecursively=function(e){},t.prototype.toggle=function(e){var t=this,n=this.state.data,r=e.uuid,o=e.dropDownUuid,i=e.ulUuid,a=document.getElementById(o),l=document.getElementById(i),s=0,c=function(e){return e.class="toggle",e.toggled=!1,e.children&&typeof[]==typeof e.children&&e.children.length&&e.children.map((function(e){e=c(e)})),e};if(e.children&&typeof[]==typeof e.children&&e.children.length){var u=function(t){if(t.uuid&&t.uuid==r)if(t.toggled=!t.toggled,t.toggled)e.class="toggled";else if(a&&l){a.classList.remove("persist-toggled"),a.classList.remove("toggled"),a.classList.add("toggle-back");var n=l.querySelectorAll("ul");if(l.classList.add("toggle-back"),n&&n.length)for(var o=0;o<=n.length-1;o++){n[o].classList.add("toggle-back");var i=n[o].querySelectorAll(".drop-down");if(i&&i.length)for(var d=0;d<=i.length-1;d++)i[d].classList.remove("persist-toggled"),i[d].classList.remove("toggled"),i[d].classList.add("toggle-back")}s=350,setTimeout((function(){e.class="toggle",e=c(e)}),s)}else e.class="toggle",e=c(e);else"toggled"==t.class&&(t.class="persist-toggled");return t.children&&typeof[]==typeof t.children&&t.children.length&&t.children.map((function(e){e=u(e)})),t};n.map((function(e){e=u(e)})),setTimeout((function(){t.setState({data:n})}),s)}},t.prototype.generateData=function(){var e=this.state,t=e.data,n=e.childrenPaddingX,r=0,o=function(e){return e.children&&typeof[]==typeof e.children&&e.children.length&&(r+=1,null==e.toggled&&(e.toggled=!1),null==e.class&&(e.class="toggle"),e.children.map((function(e){(e=o(e)).px=r*n}))),e};return t.map((function(e){r=1,e=o(e)})),t},t.prototype.menu=function(){var e=this,t=this.state,n=t.reactRouter,r=t.dropDownIcon,o=t.childrenPaddingX,a=this.generateData(),l=function(t){var a=t.child,s=a.href,c=a.attributes;null!=s&&null!=s&&"string"==typeof s&&""!=s||(s="#"),null!=c&&null!=c&&typeof{}==typeof c||(c={});try{Object.keys(c)}catch(e){c={}}null==a.uuid&&(a.uuid=""+f.default()),null==a.dropDownUuid&&(a.dropDownUuid=""+f.default()),null==a.ulUuid&&(a.ulUuid=""+f.default());var p=u.createElement("div",{className:"data"},a.icon&&u.createElement("span",{className:"icon"},a.icon),a.text&&u.createElement("span",{className:"text"},a.text)),h={paddingLeft:a.px+"px"};return u.createElement("li",{key:f.default(),className:a.children&&typeof[]==typeof a.children&&a.children.length?"dynamic":"static"},u.createElement("div",{className:a.class?"menu-entry "+a.class:"menu-entry"},!a.children&&n&&u.createElement(d.Link,i({to:s},c,{className:"single-entry single-entry-link",style:h}),p),!a.children&&!n&&u.createElement("a",i({href:s},c,{className:"single-entry single-entry-link",style:h}),p),a.children&&typeof[]==typeof a.children&&a.children.length&&u.createElement("div",{onClick:function(t){return e.toggle(a)},className:"single-entry single-entry-drop-down",style:{paddingLeft:a.px-o+"px"}},a.icon&&u.createElement("span",{className:"icon"},a.icon),a.text&&u.createElement("span",{className:"text"},a.text),""===r&&u.createElement("span",{id:a.dropDownUuid,className:"drop-down "+a.class}),""!==r&&r),a.children&&typeof[]==typeof a.children&&a.children.length&&u.createElement("ul",{id:a.ulUuid},a.children.map((function(e){if(a.toggled)return u.createElement(l,{child:e,key:f.default()})})))))};return u.createElement("ul",{className:"main-menu",key:f.default()},0!==a.length&&a.map((function(e){return u.createElement(l,{child:e,key:f.default()})})))},t.prototype.render=function(){return this.menu()},t}(u.Component);t.default=p},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),l=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&i(t,e,n);return a(t,e),t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=l(n(1)),u=s(n(9)),d=function(e){function t(t){var n=e.call(this,t)||this;return n.fadePopupBoxOut=n.fadePopupBoxOut.bind(n),n.handleMouseDown=n.handleMouseDown.bind(n),n.togglePopupBox=n.togglePopupBox.bind(n),n.getUserDataJsx=n.getUserDataJsx.bind(n),n.setValue_language=n.setValue_language.bind(n),n.checkLocation=n.checkLocation.bind(n),n.translations=u.default(),n.state={displayBox:!1,displayBoxClassNames:"popup-box",currentData:{firstname:"",lastname:""},titleBox:n.translations.languages},n}return o(t,e),t.prototype.componentDidMount=function(){this.oldHref=window.location.href,document.addEventListener("mousedown",this.handleMouseDown)},t.prototype.componentWillUnmount=function(){clearInterval(this.odHrefInterval)},t.prototype.handleMouseDown=function(e){this.nodeData&&!this.nodeData.contains(e.target)&&this.fadePopupBoxOut(),this.checkLocation()},t.prototype.checkLocation=function(){var e=this;clearInterval(this.odHrefInterval);this.odHrefInterval=setInterval((function(){e.oldHref!==window.location.href&&(e.oldHref=window.location.href,clearInterval(e.odHrefInterval),e.setState({displayBox:!1,displayBoxClassNames:"popup-box"}))}),50)},t.prototype.changeAppsLanguage=function(e){localStorage.setItem("applanguage",e),browser.runtime.sendMessage({action:"set-app-language",language:e}).then((function(){window.location.reload()}))},t.prototype.setValue_language=function(e){void 0===e&&(e="en"),this.changeAppsLanguage(e)},t.prototype.togglePopupBox=function(){if(!this.state.displayBox)return this.setState({displayBox:!this.state.displayBox});this.fadePopupBoxOut()},t.prototype.fadePopupBoxOut=function(){var e=this,t=this.state.displayBoxClassNames;this.setState({displayBoxClassNames:t+" fade-out"},(function(){setTimeout((function(){e.setState({displayBox:!1,displayBoxClassNames:"popup-box"})}),200)}))},t.prototype.getUserDataJsx=function(){var e=this;return c.createElement("span",null,c.createElement("ul",{className:"data-ul"},c.createElement("li",{className:"language",onClick:function(t){return e.setValue_language("de")}},"Deutsch"),c.createElement("li",{className:"language",onClick:function(t){return e.setValue_language("en")}},"English"),c.createElement("li",{className:"language",onClick:function(t){return e.setValue_language("pl")}},"Polski")))},t.prototype.render=function(){var e=this;return c.createElement("span",{ref:function(t){return e.nodeData=t},className:"relative popup-box-main"},c.createElement("i",{onClick:function(t){return e.togglePopupBox()},className:"fas fa-flag-checkered popup-box-icon"}),this.state.displayBox&&c.createElement("div",{className:this.state.displayBoxClassNames},c.createElement("h1",null,c.createElement("i",{className:"fas fa-flag-checkered little-gray"}),this.state.titleBox),c.createElement("div",{className:"popup-box-list flex flex-column"},this.getUserDataJsx())))},t}(c.Component);t.default=d},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)},a=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),l=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&a(t,e,n);return l(t,e),t},c=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var u=s(n(1)),d=c(n(77)),f=c(n(32)),p=function(e){function t(t){var n=e.call(this,t)||this;return n.fadePopupBoxOut=n.fadePopupBoxOut.bind(n),n.handleMouseDown=n.handleMouseDown.bind(n),n.togglePopupBox=n.togglePopupBox.bind(n),n.getUserDataJsx=n.getUserDataJsx.bind(n),n.state={titleBox:t.titleBox&&"string"==typeof t.titleBox?t.titleBox:"",icon:t.icon&&typeof{}==typeof t.icon?t.icon:void 0,data:t.data&&typeof[]==typeof t.data?t.data:[],masterLink:t.masterLink&&"string"==typeof t.masterLink?t.masterLink:"",masterText:t.masterText&&"string"==typeof t.masterText?t.masterText:"",masterIcon:t.masterIcon&&typeof{}==typeof t.masterIcon?t.masterIcon:void 0,masterAttributes:t.masterAttributes&&typeof{}==typeof t.masterAttributes?t.masterAttributes:void 0,displayBox:!1,displayBoxClassNames:"popup-box"},n}return o(t,e),t.getDerivedStateFromProps=function(e,t){return d.default(["titleBox","icon","data","masterIcon","masterText","masterLink","masterAttributes"],e,t)?{titleBox:e.titleBox&&"string"==typeof e.titleBox?e.titleBox:"",icon:e.icon&&typeof{}==typeof e.icon?e.icon:void 0,data:e.data&&typeof[]==typeof e.data?e.data:[],masterLink:e.masterLink&&"string"==typeof e.masterLink?e.masterLink:"",masterText:e.masterText&&"string"==typeof e.masterText?e.masterText:"",masterIcon:e.masterIcon&&typeof{}==typeof e.masterIcon?e.masterIcon:void 0,masterAttributes:e.masterAttributes&&typeof{}==typeof e.masterAttributes?e.masterAttributes:void 0}:null},t.prototype.componentDidMount=function(){this.oldHref=window.location.href,document.addEventListener("mousedown",this.handleMouseDown)},t.prototype.componentWillUnmount=function(){clearInterval(this.odHrefInterval)},t.prototype.handleMouseDown=function(e){this.nodeData&&!this.nodeData.contains(e.target)&&this.fadePopupBoxOut(),this.checkLocation()},t.prototype.checkLocation=function(){var e=this;clearInterval(this.odHrefInterval);this.odHrefInterval=setInterval((function(){e.oldHref!==window.location.href&&(e.oldHref=window.location.href,clearInterval(e.odHrefInterval),e.setState({displayBox:!1,displayBoxClassNames:"popup-box"}))}),50)},t.prototype.togglePopupBox=function(){if(!this.state.displayBox)return this.setState({displayBox:!this.state.displayBox});this.fadePopupBoxOut()},t.prototype.fadePopupBoxOut=function(){var e=this,t=this.state.displayBoxClassNames;this.setState({displayBoxClassNames:t+" fade-out"},(function(){setTimeout((function(){e.setState({displayBox:!1,displayBoxClassNames:"popup-box"})}),200)}))},t.prototype.getUserDataJsx=function(){var e=this,t=this.state,n=t.data,r=t.masterLink,o=t.masterText,a=t.masterIcon,l=t.masterAttributes;return n&&0!=n.length?u.createElement("span",null,u.createElement("ul",{className:"data-ul"},n.map((function(t){var n=t.icon,r=t.href,o=t.attributes,a=t.text,l=o&&typeof{}==typeof o?o:{};return u.createElement("li",{key:f.default(),className:"single-data-li-account"},u.createElement("a",i({className:"popup-box-button"},l,{href:r,onClick:function(t){return e.fadePopupBoxOut()}}),n&&n,a))}))),r&&o&&a&&u.createElement("a",i({className:"popup-box-all",href:r,onClick:function(t){return e.togglePopupBox()}},l),o,a)):null},t.prototype.openLinkInNewTab=function(e,t){void 0===t&&(t=!1),browser.runtime.sendMessage({action:"open-link-in-new-tab",url:e}),this.fadePopupBoxOut(),t&&window.close()},t.prototype.render=function(){var e=this,t=this.state,n=t.displayBoxClassNames,r=(t.icon,t.titleBox);return u.createElement("span",{ref:function(t){return e.nodeData=t},className:"relative popup-box-main"},u.createElement("i",{onClick:function(t){return e.togglePopupBox()},className:"fas fa-external-link-alt popup-box-icon"}),this.state.displayBox&&u.createElement("div",{className:n},u.createElement("h1",null,u.createElement("i",{className:"fas fa-external-link-alt little-gray"}),r),u.createElement("div",{className:"popup-box-list flex flex-column"},this.getUserDataJsx())))},t}(u.Component);t.default=p},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),l=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&i(t,e,n);return a(t,e),t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=l(n(1)),u=s(n(9)),d=function(e){function t(t){var n=e.call(this,t)||this;return n.translations=u.default(),n}return o(t,e),t.prototype.render=function(){return c.createElement("div",{className:"ContentBody ContentStaticHeight"},c.createElement("div",{className:"h1-box"},c.createElement("h1",null,this.translations.ninjaIcon),c.createElement("a",{className:"dashboard-link",target:"_blank",href:"http://www.icons-land.com"},"http://www.icons-land.com")))},t}(c.Component);t.default=d},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),l=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&i(t,e,n);return a(t,e),t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=l(n(1)),u=s(n(9)),d=s(n(54)),f=n(27),p=function(e){function t(t){var n=e.call(this,t)||this;return n.state={},n.translations=u.default(),n}return o(t,e),t.prototype.reset=function(){var e=this;browser.runtime.sendMessage({action:"app-reset"}).then((function(){d.default(e.translations.reset_done,0)})).catch((function(t){d.default(e.translations.reset_error+": "+t,1)}))},t.prototype.render=function(){var e=this;return c.createElement("div",{className:"ContentBody"},c.createElement("div",{className:"Ninja Reset"},c.createElement("img",{alt:"image",src:f.addonRoot()+"logo/shield-128.png"}),c.createElement("h1",{className:"ff-title",onClick:function(){return e.reset()}},this.translations.reset)))},t}(c.Component);t.default=p},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),l=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&i(t,e,n);return a(t,e),t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=l(n(1)),u=s(n(81)),d=s(n(11)),f=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return o(t,e),t.prototype.render=function(){return c.createElement(d.default,{loginRequired:!1,contentData:c.createElement(u.default,{storageName:"blockedElements"})})},t}(c.Component);t.default=f},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.appNameShort=t.appName=t.version=void 0;t.version="4.7.0";t.appName="NinjaProtect";t.appNameShort="NinjaProtect"},function(e,t,n){var r=n(78),o=n(437);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var i={insert:"head",singleton:!1};r(o,i);e.exports=o.locals||{}},function(e,t,n){(t=n(79)(!1)).push([e.i,".bc-a{background-color:rgba(244,69,89,0.1)}.bc-b{background-color:rgba(244,69,89,0.1)}.bc-c{background-color:rgba(244,69,89,0.1)}.bc-d{background-color:rgba(81,45,168,0.1)}.bc-e{background-color:rgba(244,69,89,0.1)}.bc-f{background-color:rgba(244,69,89,0.1)}.bc-g{background-color:rgba(244,69,89,0.1)}.bc-h{background-color:rgba(244,69,89,0.1)}.bc-i{background-color:rgba(244,69,89,0.1)}.bc-j{background-color:rgba(244,69,89,0.1)}.bc-k{background-color:rgba(244,69,89,0.1)}.bc-l{background-color:rgba(244,69,89,0.1)}.bc-m{background-color:rgba(244,69,89,0.1)}.bc-n{background-color:rgba(244,69,89,0.1)}.bc-o{background-color:rgba(244,69,89,0.1)}.bc-p{background-color:rgba(244,69,89,0.1)}.bc-q{background-color:rgba(244,69,89,0.1)}.bc-r{background-color:rgba(244,69,89,0.1)}.bc-s{background-color:rgba(244,69,89,0.1)}.bc-t{background-color:rgba(244,69,89,0.1)}.bc-u{background-color:rgba(244,69,89,0.1)}.bc-v{background-color:rgba(244,69,89,0.1)}.bc-w{background-color:rgba(71,180,118,0.1)}.bc-x{background-color:rgba(244,69,89,0.1)}.bc-y{background-color:rgba(244,69,89,0.1)}.bc-z{background-color:rgba(244,69,89,0.1)}.w-100{width:100%}.block{display:block}.d-none{display:none}.flex{display:flex}.flex-row{flex-direction:row}.flex-column{flex-direction:column}.flex-start{justify-content:flex-start}.flex-space-around{justify-content:space-around}.flex-space-between{justify-content:space-between}.relative{position:relative}.font-input{font-weight:400;font-size:1rem;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.ff-title{font-family:Roboto,-apple-system,system-ui,BlinkMacSystemFont,Segoe UI,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,Arial,sans-serif}.h1-title{color:#202124;font-size:24px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.text-center{text-align:center}.ff-roboto{font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.buttons-group{box-sizing:border-box;padding:10px;max-width:90%;margin:20px 5%}.buttons-group-delete-account{box-sizing:border-box;padding:10px;max-width:90%;margin:0 5%}.yellow{color:#ffeb3b}.red{color:#f44559}.green{color:#47b476}.lime{color:#C3FAE8}.dodgerblue{color:#1873CC}.little-gray{color:rgba(69,69,69,0.7)}.action-icon{color:#313435;opacity:0.8}.action-icon:hover{cursor:pointer}.py-2{padding:20px 0}.my-2{margin:20px 0}.my-0{margin:0px 0 !important}.no-padding{padding:0px !important}.mr-2{margin-right:20px}h1,.h1{color:rgba(0,0,0,0.77)}.h1-list{color:#202124;font-size:21px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif;min-height:40px;line-height:40px;white-space:nowrap;word-wrap:none;overflow:hidden;text-overflow:ellipsis;margin:10px !important}.single-entry,.popup-box-icon{color:#4f4f4f !important}.text-center{text-align:center}.icon-chat{color:rgba(71,180,118,0.7) !important}.icon-security{color:rgba(228,132,252,0.33) !important}.icon-images{color:rgba(30,144,255,0.8) !important}.icon-messages{color:#7a7a7a !important}.color-red,.icon-notifications{color:rgba(244,69,89,0.7) !important}.color-green,.icon-iframes{color:rgba(71,180,118,0.7) !important}.icon-cookies{color:#DEB887 !important}.bc-a{background-color:rgba(244,69,89,0.1)}.bc-b{background-color:rgba(244,69,89,0.1)}.bc-c{background-color:rgba(244,69,89,0.1)}.bc-d{background-color:rgba(81,45,168,0.1)}.bc-e{background-color:rgba(244,69,89,0.1)}.bc-f{background-color:rgba(244,69,89,0.1)}.bc-g{background-color:rgba(244,69,89,0.1)}.bc-h{background-color:rgba(244,69,89,0.1)}.bc-i{background-color:rgba(244,69,89,0.1)}.bc-j{background-color:rgba(244,69,89,0.1)}.bc-k{background-color:rgba(244,69,89,0.1)}.bc-l{background-color:rgba(244,69,89,0.1)}.bc-m{background-color:rgba(244,69,89,0.1)}.bc-n{background-color:rgba(244,69,89,0.1)}.bc-o{background-color:rgba(244,69,89,0.1)}.bc-p{background-color:rgba(244,69,89,0.1)}.bc-q{background-color:rgba(244,69,89,0.1)}.bc-r{background-color:rgba(244,69,89,0.1)}.bc-s{background-color:rgba(244,69,89,0.1)}.bc-t{background-color:rgba(244,69,89,0.1)}.bc-u{background-color:rgba(244,69,89,0.1)}.bc-v{background-color:rgba(244,69,89,0.1)}.bc-w{background-color:rgba(71,180,118,0.1)}.bc-x{background-color:rgba(244,69,89,0.1)}.bc-y{background-color:rgba(244,69,89,0.1)}.bc-z{background-color:rgba(244,69,89,0.1)}.w-100{width:100%}.block{display:block}.d-none{display:none}.flex{display:flex}.flex-row{flex-direction:row}.flex-column{flex-direction:column}.flex-start{justify-content:flex-start}.flex-space-around{justify-content:space-around}.flex-space-between{justify-content:space-between}.relative{position:relative}.font-input{font-weight:400;font-size:1rem;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.ff-title{font-family:Roboto,-apple-system,system-ui,BlinkMacSystemFont,Segoe UI,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,Arial,sans-serif}.h1-title{color:#202124;font-size:24px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.text-center{text-align:center}.ff-roboto{font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.buttons-group{box-sizing:border-box;padding:10px;max-width:90%;margin:20px 5%}.buttons-group-delete-account{box-sizing:border-box;padding:10px;max-width:90%;margin:0 5%}.yellow{color:#ffeb3b}.red{color:#f44559}.green{color:#47b476}.lime{color:#C3FAE8}.dodgerblue{color:#1873CC}.little-gray{color:rgba(69,69,69,0.7)}.action-icon{color:#313435;opacity:0.8}.action-icon:hover{cursor:pointer}.py-2{padding:20px 0}.my-2{margin:20px 0}.my-0{margin:0px 0 !important}.no-padding{padding:0px !important}.mr-2{margin-right:20px}h1,.h1{color:rgba(0,0,0,0.77)}.h1-list{color:#202124;font-size:21px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif;min-height:40px;line-height:40px;white-space:nowrap;word-wrap:none;overflow:hidden;text-overflow:ellipsis;margin:10px !important}.single-entry,.popup-box-icon{color:#4f4f4f !important}.text-center{text-align:center}.icon-chat{color:rgba(71,180,118,0.7) !important}.icon-security{color:rgba(228,132,252,0.33) !important}.icon-images{color:rgba(30,144,255,0.8) !important}.icon-messages{color:#7a7a7a !important}.color-red,.icon-notifications{color:rgba(244,69,89,0.7) !important}.color-green,.icon-iframes{color:rgba(71,180,118,0.7) !important}.icon-cookies{color:#DEB887 !important}body{overflow-x:hidden}#app{overflow-x:hidden;overflow-y:auto}#app #app-holder{height:700px}#app .website--home{width:100%;height:100%;display:flex;flex-direction:flex-start;overflow-x:hidden}.bc-a{background-color:rgba(244,69,89,0.1)}.bc-b{background-color:rgba(244,69,89,0.1)}.bc-c{background-color:rgba(244,69,89,0.1)}.bc-d{background-color:rgba(81,45,168,0.1)}.bc-e{background-color:rgba(244,69,89,0.1)}.bc-f{background-color:rgba(244,69,89,0.1)}.bc-g{background-color:rgba(244,69,89,0.1)}.bc-h{background-color:rgba(244,69,89,0.1)}.bc-i{background-color:rgba(244,69,89,0.1)}.bc-j{background-color:rgba(244,69,89,0.1)}.bc-k{background-color:rgba(244,69,89,0.1)}.bc-l{background-color:rgba(244,69,89,0.1)}.bc-m{background-color:rgba(244,69,89,0.1)}.bc-n{background-color:rgba(244,69,89,0.1)}.bc-o{background-color:rgba(244,69,89,0.1)}.bc-p{background-color:rgba(244,69,89,0.1)}.bc-q{background-color:rgba(244,69,89,0.1)}.bc-r{background-color:rgba(244,69,89,0.1)}.bc-s{background-color:rgba(244,69,89,0.1)}.bc-t{background-color:rgba(244,69,89,0.1)}.bc-u{background-color:rgba(244,69,89,0.1)}.bc-v{background-color:rgba(244,69,89,0.1)}.bc-w{background-color:rgba(71,180,118,0.1)}.bc-x{background-color:rgba(244,69,89,0.1)}.bc-y{background-color:rgba(244,69,89,0.1)}.bc-z{background-color:rgba(244,69,89,0.1)}.w-100{width:100%}.block{display:block}.d-none{display:none}.flex{display:flex}.flex-row{flex-direction:row}.flex-column{flex-direction:column}.flex-start{justify-content:flex-start}.flex-space-around{justify-content:space-around}.flex-space-between{justify-content:space-between}.relative{position:relative}.font-input{font-weight:400;font-size:1rem;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.ff-title{font-family:Roboto,-apple-system,system-ui,BlinkMacSystemFont,Segoe UI,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,Arial,sans-serif}.h1-title{color:#202124;font-size:24px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.text-center{text-align:center}.ff-roboto{font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.buttons-group{box-sizing:border-box;padding:10px;max-width:90%;margin:20px 5%}.buttons-group-delete-account{box-sizing:border-box;padding:10px;max-width:90%;margin:0 5%}.yellow{color:#ffeb3b}.red{color:#f44559}.green{color:#47b476}.lime{color:#C3FAE8}.dodgerblue{color:#1873CC}.little-gray{color:rgba(69,69,69,0.7)}.action-icon{color:#313435;opacity:0.8}.action-icon:hover{cursor:pointer}.py-2{padding:20px 0}.my-2{margin:20px 0}.my-0{margin:0px 0 !important}.no-padding{padding:0px !important}.mr-2{margin-right:20px}h1,.h1{color:rgba(0,0,0,0.77)}.h1-list{color:#202124;font-size:21px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif;min-height:40px;line-height:40px;white-space:nowrap;word-wrap:none;overflow:hidden;text-overflow:ellipsis;margin:10px !important}.single-entry,.popup-box-icon{color:#4f4f4f !important}.text-center{text-align:center}.icon-chat{color:rgba(71,180,118,0.7) !important}.icon-security{color:rgba(228,132,252,0.33) !important}.icon-images{color:rgba(30,144,255,0.8) !important}.icon-messages{color:#7a7a7a !important}.color-red,.icon-notifications{color:rgba(244,69,89,0.7) !important}.color-green,.icon-iframes{color:rgba(71,180,118,0.7) !important}.icon-cookies{color:#DEB887 !important}.main-menu{padding-top:10px !important;list-style-type:none;overflow-anchor:none;position:relative;height:calc(100vh - 120px);list-style:none;margin:0;overflow:hidden;padding:0;position:relative;padding-bottom:50px}@keyframes rotateToggledLeft{0%{transform:rotateZ(43deg)}100%{transform:rotateZ(-43deg)}}@keyframes rotateToggledRight{0%{transform:rotateZ(-43deg)}100%{transform:rotateZ(43deg)}}@keyframes rotateToggleLeft{0%{transform:rotateZ(-43deg)}100%{transform:rotateZ(43deg)}}@keyframes rotateToggleRight{0%{transform:rotateZ(43deg)}100%{transform:rotateZ(-43deg)}}.main-menu ul{list-style:none;margin:0;padding:0}.main-menu .single-entry{position:relative;list-style-type:none;color:#72777a;letter-spacing:0.2px;transition-duration:350ms;font-weight:500;position:relative;white-space:nowrap;color:#72777a;text-decoration:none;height:50px;line-height:50px;box-sizing:border-box;padding:0 15px;display:inline-block;width:100%}.main-menu .single-entry .text{font-size:0.923rem;margin-left:20px}.main-menu .single-entry .icon{font-size:0.93rem;margin:10px 2px}.main-menu .single-entry .drop-down{position:absolute;top:12px;right:15px;transition-duration:350ms}.main-menu .single-entry .drop-down:before,.main-menu .single-entry .drop-down:after{content:'';position:absolute;top:5px;width:1px;height:10px;overflow:hidden;transition-duration:350ms;background-color:#272727}.main-menu .single-entry .drop-down:before{right:0}.main-menu .single-entry .drop-down:after{right:6px}@keyframes showLiItems{0%{height:0px;overflow:hidden}100%{height:40px;overflow:unset}}@keyframes hideLiItems{0%{height:40px;overflow:unset}100%{height:0px;overflow:hidden}}.main-menu .toggled ul li{height:0px;overflow:hidden;animation:showLiItems 350ms forwards ease-in;transition-duration:350ms}.main-menu .toggle-back .static{animation:hideLiItems 350ms forwards ease-in}.main-menu ul .static{height:40px;overflow:unset}.main-menu ul .dynamic{height:auto;overflow:unset}.main-menu .single-entry:before{content:'';position:absolute;top:0;left:0;width:0;height:100%;background-color:#323232;transition-duration:350ms}.main-menu .single-entry:hover:before{width:5px}.main-menu .drop-down.toggle:before{transform:rotateZ(43deg)}.main-menu .drop-down.toggle:after{transform:rotateZ(-43deg)}.main-menu .drop-down.persist-toggled:before{transform:rotateZ(-43deg) !important}.main-menu .drop-down.persist-toggled:after{transform:rotateZ(43deg) !important}.main-menu .drop-down.toggled:before{animation:rotateToggledLeft 350ms forwards linear}.main-menu .drop-down.toggled:after{animation:rotateToggledRight 350ms forwards linear}.main-menu .drop-down.toggle-back:before{animation:rotateToggleLeft 350ms forwards linear}.main-menu .drop-down.toggle-back:after{animation:rotateToggleRight 350ms forwards linear}.main-menu:hover{overflow-x:hidden;overflow-y:auto}.SideBar{position:fixed;left:0;top:0;width:270px;height:100vh;border-right:1px solid #dadce0;overflow:hidden;transition-duration:350ms;background-color:#fff;z-index:1}.SideBar .title-logo{width:100%;height:60px;border-bottom:1px solid #dadce0;display:flex;box-sizing:border-box;padding:10px 8px;transition-duration:350ms}.SideBar .title-logo .logo{margin:5px 0px 0px 2px}.SideBar .title-logo .logo img{width:32px;height:32px}.SideBar .title-logo .version{color:rgba(69,69,69,0.7)}.SideBar .title-logo .version .name{color:#454545}.SideBar .title-logo .version .name,.SideBar .title-logo .version i{line-height:30px;box-sizing:border-box;padding-left:20px;font-size:0.87rem}.SideBar .title-logo .version i{font-size:0.753rem;line-height:3px}.SideBar.SideBar-min{width:50px;transition-duration:200ms}.SideBar.SideBar-min .drop-down{opacity:0}.SideBar.SideBar-min:hover{width:270px;z-index:2}.SideBar.SideBar-min:hover .drop-down{opacity:1}.SidebarMinified{width:270px;left:-300px;transition-duration:350ms}.SidebarMinified.opened{width:270px;left:0px;background-color:#fff;z-index:2}.bc-a{background-color:rgba(244,69,89,0.1)}.bc-b{background-color:rgba(244,69,89,0.1)}.bc-c{background-color:rgba(244,69,89,0.1)}.bc-d{background-color:rgba(81,45,168,0.1)}.bc-e{background-color:rgba(244,69,89,0.1)}.bc-f{background-color:rgba(244,69,89,0.1)}.bc-g{background-color:rgba(244,69,89,0.1)}.bc-h{background-color:rgba(244,69,89,0.1)}.bc-i{background-color:rgba(244,69,89,0.1)}.bc-j{background-color:rgba(244,69,89,0.1)}.bc-k{background-color:rgba(244,69,89,0.1)}.bc-l{background-color:rgba(244,69,89,0.1)}.bc-m{background-color:rgba(244,69,89,0.1)}.bc-n{background-color:rgba(244,69,89,0.1)}.bc-o{background-color:rgba(244,69,89,0.1)}.bc-p{background-color:rgba(244,69,89,0.1)}.bc-q{background-color:rgba(244,69,89,0.1)}.bc-r{background-color:rgba(244,69,89,0.1)}.bc-s{background-color:rgba(244,69,89,0.1)}.bc-t{background-color:rgba(244,69,89,0.1)}.bc-u{background-color:rgba(244,69,89,0.1)}.bc-v{background-color:rgba(244,69,89,0.1)}.bc-w{background-color:rgba(71,180,118,0.1)}.bc-x{background-color:rgba(244,69,89,0.1)}.bc-y{background-color:rgba(244,69,89,0.1)}.bc-z{background-color:rgba(244,69,89,0.1)}.w-100{width:100%}.block{display:block}.d-none{display:none}.flex{display:flex}.flex-row{flex-direction:row}.flex-column{flex-direction:column}.flex-start{justify-content:flex-start}.flex-space-around{justify-content:space-around}.flex-space-between{justify-content:space-between}.relative{position:relative}.font-input{font-weight:400;font-size:1rem;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.ff-title{font-family:Roboto,-apple-system,system-ui,BlinkMacSystemFont,Segoe UI,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,Arial,sans-serif}.h1-title{color:#202124;font-size:24px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.text-center{text-align:center}.ff-roboto{font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.buttons-group{box-sizing:border-box;padding:10px;max-width:90%;margin:20px 5%}.buttons-group-delete-account{box-sizing:border-box;padding:10px;max-width:90%;margin:0 5%}.yellow{color:#ffeb3b}.red{color:#f44559}.green{color:#47b476}.lime{color:#C3FAE8}.dodgerblue{color:#1873CC}.little-gray{color:rgba(69,69,69,0.7)}.action-icon{color:#313435;opacity:0.8}.action-icon:hover{cursor:pointer}.py-2{padding:20px 0}.my-2{margin:20px 0}.my-0{margin:0px 0 !important}.no-padding{padding:0px !important}.mr-2{margin-right:20px}h1,.h1{color:rgba(0,0,0,0.77)}.h1-list{color:#202124;font-size:21px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif;min-height:40px;line-height:40px;white-space:nowrap;word-wrap:none;overflow:hidden;text-overflow:ellipsis;margin:10px !important}.single-entry,.popup-box-icon{color:#4f4f4f !important}.text-center{text-align:center}.icon-chat{color:rgba(71,180,118,0.7) !important}.icon-security{color:rgba(228,132,252,0.33) !important}.icon-images{color:rgba(30,144,255,0.8) !important}.icon-messages{color:#7a7a7a !important}.color-red,.icon-notifications{color:rgba(244,69,89,0.7) !important}.color-green,.icon-iframes{color:rgba(71,180,118,0.7) !important}.icon-cookies{color:#DEB887 !important}.bc-a{background-color:rgba(244,69,89,0.1)}.bc-b{background-color:rgba(244,69,89,0.1)}.bc-c{background-color:rgba(244,69,89,0.1)}.bc-d{background-color:rgba(81,45,168,0.1)}.bc-e{background-color:rgba(244,69,89,0.1)}.bc-f{background-color:rgba(244,69,89,0.1)}.bc-g{background-color:rgba(244,69,89,0.1)}.bc-h{background-color:rgba(244,69,89,0.1)}.bc-i{background-color:rgba(244,69,89,0.1)}.bc-j{background-color:rgba(244,69,89,0.1)}.bc-k{background-color:rgba(244,69,89,0.1)}.bc-l{background-color:rgba(244,69,89,0.1)}.bc-m{background-color:rgba(244,69,89,0.1)}.bc-n{background-color:rgba(244,69,89,0.1)}.bc-o{background-color:rgba(244,69,89,0.1)}.bc-p{background-color:rgba(244,69,89,0.1)}.bc-q{background-color:rgba(244,69,89,0.1)}.bc-r{background-color:rgba(244,69,89,0.1)}.bc-s{background-color:rgba(244,69,89,0.1)}.bc-t{background-color:rgba(244,69,89,0.1)}.bc-u{background-color:rgba(244,69,89,0.1)}.bc-v{background-color:rgba(244,69,89,0.1)}.bc-w{background-color:rgba(71,180,118,0.1)}.bc-x{background-color:rgba(244,69,89,0.1)}.bc-y{background-color:rgba(244,69,89,0.1)}.bc-z{background-color:rgba(244,69,89,0.1)}.w-100{width:100%}.block{display:block}.d-none{display:none}.flex{display:flex}.flex-row{flex-direction:row}.flex-column{flex-direction:column}.flex-start{justify-content:flex-start}.flex-space-around{justify-content:space-around}.flex-space-between{justify-content:space-between}.relative{position:relative}.font-input{font-weight:400;font-size:1rem;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.ff-title{font-family:Roboto,-apple-system,system-ui,BlinkMacSystemFont,Segoe UI,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,Arial,sans-serif}.h1-title{color:#202124;font-size:24px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.text-center{text-align:center}.ff-roboto{font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.buttons-group{box-sizing:border-box;padding:10px;max-width:90%;margin:20px 5%}.buttons-group-delete-account{box-sizing:border-box;padding:10px;max-width:90%;margin:0 5%}.yellow{color:#ffeb3b}.red{color:#f44559}.green{color:#47b476}.lime{color:#C3FAE8}.dodgerblue{color:#1873CC}.little-gray{color:rgba(69,69,69,0.7)}.action-icon{color:#313435;opacity:0.8}.action-icon:hover{cursor:pointer}.py-2{padding:20px 0}.my-2{margin:20px 0}.my-0{margin:0px 0 !important}.no-padding{padding:0px !important}.mr-2{margin-right:20px}h1,.h1{color:rgba(0,0,0,0.77)}.h1-list{color:#202124;font-size:21px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif;min-height:40px;line-height:40px;white-space:nowrap;word-wrap:none;overflow:hidden;text-overflow:ellipsis;margin:10px !important}.single-entry,.popup-box-icon{color:#4f4f4f !important}.text-center{text-align:center}.icon-chat{color:rgba(71,180,118,0.7) !important}.icon-security{color:rgba(228,132,252,0.33) !important}.icon-images{color:rgba(30,144,255,0.8) !important}.icon-messages{color:#7a7a7a !important}.color-red,.icon-notifications{color:rgba(244,69,89,0.7) !important}.color-green,.icon-iframes{color:rgba(71,180,118,0.7) !important}.icon-cookies{color:#DEB887 !important}@keyframes displayBoxEasyIn{0%{transform:scale(0);opacity:0;width:0}100%{width:260px;transform:scale(1);opacity:1}}@keyframes displayBoxEasyInMinified{0%{transform:scale(0);opacity:0;width:0}100%{width:210px;transform:scale(1);opacity:1}}@keyframes displayBoxEasyOut{0%{width:260px;transform:scale(1);opacity:1}100%{transform:scale(0);opacity:0;width:0}}@keyframes displayBoxEasyOutMinified{0%{width:210px;transform:scale(1);opacity:1}100%{transform:scale(0);opacity:0;width:0}}@keyframes scale0{0%{transform:scale(1)}100%{transform:scale(0)}}@keyframes opacity{0%{opacity:0}100%{opacity:1}}@keyframes opacity_back{0%{opacity:1}100%{opacity:0}}@keyframes opacityScaleTopLeft{0%{width:0vw;height:0vh;top:50vh;right:50vw;opacity:0;transform:scaleZ(0)}100%{width:100vw;height:100vh;top:0;right:0;opacity:1;transform:scaleZ(1)}}@keyframes opacityScaleTopLeft_back{0%{width:100vw;height:100vh;top:0;right:0;opacity:1;transform:scaleZ(1)}100%{top:50vh;right:50vw;width:0vw;height:0vh;opacity:0;transform:scaleZ(0)}}@keyframes showMessagesMenuContent{0%{left:100vw}100%{left:0vw}}@keyframes hideMessagesMenuContent{0%{left:0vw}100%{left:100vw}}@keyframes toggleChatMenuIn{0%{top:100px}100%{top:-70px}}@keyframes toggleChatMenuOut{0%{top:-70px}100%{top:100px}}@keyframes animateLoadingChatDiv{0%{left:-40%}100%{left:140%}}@keyframes scaleIt{0%{transform:scale(1)}20%{transform:scale(0.8)}40%{transform:scale(1)}60%{transform:scale(1.1)}100%{transform:scale(1)}}@keyframes scaleItCopyToClipboard{0%{transform:scale(1)}33%{transform:scale(0.7)}66%{transform:scale(1.2)}100%{transform:scale(1)}}.Content{position:absolute;top:0;min-height:100vh;left:270px;z-index:1;width:calc(100% - 270px);overflow-x:hidden}.Content .head{width:100%;height:60px;border-bottom:1px solid #dadce0;box-sizing:border-box;padding:10px 20px}.Content .head .minify-menu{float:left;box-sizing:border-box;padding:12px 13px;border-radius:50%;transition-duration:350ms}.Content .head .minify-menu:hover{background-color:rgba(199,199,199,0.2);cursor:pointer;color:#454545}.Content .head .popup-box-main{position:relative;float:right}.Content .head .popup-box-icon{box-sizing:border-box;padding:12px 13px;border-radius:50%;transition-duration:350ms;position:relative;font-size:1.12rem;margin-right:10px}.Content .head .popup-box-icon .not-readed{position:absolute;top:-1px;right:2px;background-color:#ff3c7e;border-radius:50%;color:#fff;font-size:10px;line-height:1;padding:4px 6.5px;opacity:1;transition-duration:350ms}.Content .head .popup-box-icon .not-readed.opacity-0{animation:scale0 350ms forwards ease-in}.Content .head .popup-box-icon:hover{background-color:rgba(199,199,199,0.2);cursor:pointer;color:#454545}.Content .head .popup-box{animation:displayBoxEasyInMinified 200ms forwards ease-in;position:absolute;top:calc(60px - 10px);right:10px;width:0px;max-height:400px;border-radius:0.25rem;border:1px solid rgba(0,0,0,0.15);opacity:0;transition-duration:350ms;overflow:hidden;transform-origin:top right;background-color:#fff;z-index:2}@media screen and (min-width: 500px){.Content .head .popup-box{animation:displayBoxEasyIn 200ms forwards ease-in}}.Content .head .popup-box h1{color:#313435;font-size:0.987rem;box-sizing:border-box;padding:5px 20px 10px 20px;border-bottom:1px solid rgba(0,0,0,0.0625)}.Content .head .popup-box h1 i{color:#212529;font-size:0.923rem;margin-right:20px}.Content .head .popup-box .popup-box-list ul,.Content .head .popup-box .popup-box-list .no-data-ul,.Content .head .popup-box .popup-box-list .data-ul{list-style-type:none;list-style:none;overflow:hidden;overflow-anchor:none;position:relative;margin:0px;padding:0px;margin-top:-10px}.Content .head .popup-box .popup-box-list ul a,.Content .head .popup-box .popup-box-list .no-data-ul a,.Content .head .popup-box .popup-box-list .data-ul a{display:block;width:100%;height:100%}.Content .head .popup-box .popup-box-list ul li,.Content .head .popup-box .popup-box-list .no-data-ul li,.Content .head .popup-box .popup-box-list .data-ul li{margin:0px;padding:0px;position:relative;list-style-type:none;font-size:14px;color:#72777a;letter-spacing:0.2px;border-bottom:1px solid rgba(0,0,0,0.0625);z-index:1;transition-duration:350ms;height:70px;line-height:70px;box-sizing:border-box;padding:15px 20px;font-size:0.823rem}.Content .head .popup-box .popup-box-list ul .not-readed:before,.Content .head .popup-box .popup-box-list .no-data-ul .not-readed:before,.Content .head .popup-box .popup-box-list .data-ul .not-readed:before{content:'';position:absolute;left:0;top:0;width:3px;height:100%;z-index:-1;background-color:#323232}.Content .head .popup-box .popup-box-list ul .single-data-div,.Content .head .popup-box .popup-box-list .no-data-ul .single-data-div,.Content .head .popup-box .popup-box-list .data-ul .single-data-div{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;line-height:20px}.Content .head .popup-box .popup-box-list ul .logout:hover,.Content .head .popup-box .popup-box-list .no-data-ul .logout:hover,.Content .head .popup-box .popup-box-list .data-ul .logout:hover{cursor:pointer}.Content .head .popup-box .popup-box-list ul .single-data-li-account,.Content .head .popup-box .popup-box-list .no-data-ul .single-data-li-account,.Content .head .popup-box .popup-box-list .data-ul .single-data-li-account{height:50px;line-height:50px;box-sizing:border-box;padding:10px 20px;line-height:30px}.Content .head .popup-box .popup-box-list ul .single-data-li-account .popup-box-button,.Content .head .popup-box .popup-box-list .no-data-ul .single-data-li-account .popup-box-button,.Content .head .popup-box .popup-box-list .data-ul .single-data-li-account .popup-box-button{color:#72777a;font-size:0.87rem;box-sizing:border-box;text-decoration:none}.Content .head .popup-box .popup-box-list ul .single-data-li-account .popup-box-button i,.Content .head .popup-box .popup-box-list .no-data-ul .single-data-li-account .popup-box-button i,.Content .head .popup-box .popup-box-list .data-ul .single-data-li-account .popup-box-button i{font-weight:900;color:#212529;font-size:0.87rem;margin-right:20px}.Content .head .popup-box .popup-box-list ul .single-data-li-account:hover,.Content .head .popup-box .popup-box-list ul .single-data:hover,.Content .head .popup-box .popup-box-list .no-data-ul .single-data-li-account:hover,.Content .head .popup-box .popup-box-list .no-data-ul .single-data:hover,.Content .head .popup-box .popup-box-list .data-ul .single-data-li-account:hover,.Content .head .popup-box .popup-box-list .data-ul .single-data:hover{background-color:rgba(244,244,244,0.5)}.Content .head .popup-box .popup-box-list .no-data-ul li,.Content .head .popup-box .popup-box-list .data-ul li{height:45px;line-height:45px;padding:1px 20px 0px 20px}.Content .head .popup-box .popup-box-list .data-ul li:hover{background-color:#323232;color:#fdb734;cursor:pointer}.Content .head .popup-box .privacy-terms{text-decoration:none;margin:inherit;padding:inherit;color:inherit;font-size:inherit}.Content .head .popup-box .popup-box-all{display:block;height:50px;line-height:30px;color:#7c8695;font-size:0.923rem;box-sizing:border-box;padding:10px 20px;text-align:center;transition-duration:350ms;text-decoration:none}.Content .head .popup-box .popup-box-all i{font-size:0.87rem;margin-left:20px}.Content .head .popup-box .popup-box-all:hover{cursor:pointer;background-color:#323232;color:#fdb734}.Content .head .popup-box.fade-out{animation:displayBoxEasyOutMinified 200ms forwards ease-in}@media screen and (min-width: 500px){.Content .head .popup-box.fade-out{animation:displayBoxEasyOut 200ms forwards ease-in}}.Content-min{left:50px;width:calc(100% - 50px)}.Content.minified{left:0;width:100vw}.close-side-bar{display:block;position:absolute;top:20px;right:15px;font-size:10px;border-radius:50%;border:1px solid #313435;width:16px;height:16px;line-height:13px;text-align:left;box-sizing:border-box;padding-left:4px}.bc-a{background-color:rgba(244,69,89,0.1)}.bc-b{background-color:rgba(244,69,89,0.1)}.bc-c{background-color:rgba(244,69,89,0.1)}.bc-d{background-color:rgba(81,45,168,0.1)}.bc-e{background-color:rgba(244,69,89,0.1)}.bc-f{background-color:rgba(244,69,89,0.1)}.bc-g{background-color:rgba(244,69,89,0.1)}.bc-h{background-color:rgba(244,69,89,0.1)}.bc-i{background-color:rgba(244,69,89,0.1)}.bc-j{background-color:rgba(244,69,89,0.1)}.bc-k{background-color:rgba(244,69,89,0.1)}.bc-l{background-color:rgba(244,69,89,0.1)}.bc-m{background-color:rgba(244,69,89,0.1)}.bc-n{background-color:rgba(244,69,89,0.1)}.bc-o{background-color:rgba(244,69,89,0.1)}.bc-p{background-color:rgba(244,69,89,0.1)}.bc-q{background-color:rgba(244,69,89,0.1)}.bc-r{background-color:rgba(244,69,89,0.1)}.bc-s{background-color:rgba(244,69,89,0.1)}.bc-t{background-color:rgba(244,69,89,0.1)}.bc-u{background-color:rgba(244,69,89,0.1)}.bc-v{background-color:rgba(244,69,89,0.1)}.bc-w{background-color:rgba(71,180,118,0.1)}.bc-x{background-color:rgba(244,69,89,0.1)}.bc-y{background-color:rgba(244,69,89,0.1)}.bc-z{background-color:rgba(244,69,89,0.1)}.w-100{width:100%}.block{display:block}.d-none{display:none}.flex{display:flex}.flex-row{flex-direction:row}.flex-column{flex-direction:column}.flex-start{justify-content:flex-start}.flex-space-around{justify-content:space-around}.flex-space-between{justify-content:space-between}.relative{position:relative}.font-input{font-weight:400;font-size:1rem;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.ff-title{font-family:Roboto,-apple-system,system-ui,BlinkMacSystemFont,Segoe UI,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,Arial,sans-serif}.h1-title{color:#202124;font-size:24px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.text-center{text-align:center}.ff-roboto{font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.buttons-group{box-sizing:border-box;padding:10px;max-width:90%;margin:20px 5%}.buttons-group-delete-account{box-sizing:border-box;padding:10px;max-width:90%;margin:0 5%}.yellow{color:#ffeb3b}.red{color:#f44559}.green{color:#47b476}.lime{color:#C3FAE8}.dodgerblue{color:#1873CC}.little-gray{color:rgba(69,69,69,0.7)}.action-icon{color:#313435;opacity:0.8}.action-icon:hover{cursor:pointer}.py-2{padding:20px 0}.my-2{margin:20px 0}.my-0{margin:0px 0 !important}.no-padding{padding:0px !important}.mr-2{margin-right:20px}h1,.h1{color:rgba(0,0,0,0.77)}.h1-list{color:#202124;font-size:21px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif;min-height:40px;line-height:40px;white-space:nowrap;word-wrap:none;overflow:hidden;text-overflow:ellipsis;margin:10px !important}.single-entry,.popup-box-icon{color:#4f4f4f !important}.text-center{text-align:center}.icon-chat{color:rgba(71,180,118,0.7) !important}.icon-security{color:rgba(228,132,252,0.33) !important}.icon-images{color:rgba(30,144,255,0.8) !important}.icon-messages{color:#7a7a7a !important}.color-red,.icon-notifications{color:rgba(244,69,89,0.7) !important}.color-green,.icon-iframes{color:rgba(71,180,118,0.7) !important}.icon-cookies{color:#DEB887 !important}.Login,.LoginRequired{max-width:350px;width:100%;height:100%;min-height:700px;margin:80px auto;border-radius:5px;border:1px solid #dadce0;box-shadow:0px 0px 6px transparent;transition-duration:350ms;box-sizing:border-box;padding:10px}@media screen and (min-width: 500px){.Login,.LoginRequired{max-width:600px}}.Login .button,.LoginRequired .button{box-sizing:border-box;border-radius:5px;background-color:#1873CC;letter-spacing:0.02rem;color:#fff;font-size:0.87rem;text-align:center;border:none;height:40px;line-height:30px;display:block;margin:10px 20px 20px 20px;box-shadow:0px 0px 3px transparent;transition-duration:350ms;float:right;padding:5px 20px;font-weight:bold;text-decoration:none}.Login .button-link,.LoginRequired .button-link{float:left;text-decoration:none;background-color:#47b476}.Login .button:hover,.LoginRequired .button:hover{cursor:pointer;box-shadow:0px 0px 3px #1873CC}.Login .button-link:hover,.LoginRequired .button-link:hover{box-shadow:0px 0px 3px #47b476}.Login .logo,.LoginRequired .logo{width:128px;height:128px;display:block;margin:20px auto 0 auto}.Login .logo img,.LoginRequired .logo img{width:100%;height:100%}.Login .error-message,.LoginRequired .error-message{box-sizing:border-box;padding:0px 20px;min-height:30px;height:auto;overflow:auto;line-height:30px;font-size:0.87rem;color:#f44559;animation:opacity 350ms linear ease-in}.Login .error-message i,.LoginRequired .error-message i{font-size:inherit;color:inherit;margin:0 10px 0 5px}.Login .current-user,.LoginRequired .current-user{padding:20px;font-size:0.87rem}.Login .current-user i,.LoginRequired .current-user i{margin:0 10px}.Login .button-logout,.LoginRequired .button-logout{float:none;display:block;margin:0 auto}.Login .forgot-password,.LoginRequired .forgot-password{width:100%;box-sizing:border-box;padding:10px;margin:0 13px}.Login .forgot-password a,.LoginRequired .forgot-password a{line-height:30px;color:rgba(39,39,39,0.77);text-decoration:none}.bc-a{background-color:rgba(244,69,89,0.1)}.bc-b{background-color:rgba(244,69,89,0.1)}.bc-c{background-color:rgba(244,69,89,0.1)}.bc-d{background-color:rgba(81,45,168,0.1)}.bc-e{background-color:rgba(244,69,89,0.1)}.bc-f{background-color:rgba(244,69,89,0.1)}.bc-g{background-color:rgba(244,69,89,0.1)}.bc-h{background-color:rgba(244,69,89,0.1)}.bc-i{background-color:rgba(244,69,89,0.1)}.bc-j{background-color:rgba(244,69,89,0.1)}.bc-k{background-color:rgba(244,69,89,0.1)}.bc-l{background-color:rgba(244,69,89,0.1)}.bc-m{background-color:rgba(244,69,89,0.1)}.bc-n{background-color:rgba(244,69,89,0.1)}.bc-o{background-color:rgba(244,69,89,0.1)}.bc-p{background-color:rgba(244,69,89,0.1)}.bc-q{background-color:rgba(244,69,89,0.1)}.bc-r{background-color:rgba(244,69,89,0.1)}.bc-s{background-color:rgba(244,69,89,0.1)}.bc-t{background-color:rgba(244,69,89,0.1)}.bc-u{background-color:rgba(244,69,89,0.1)}.bc-v{background-color:rgba(244,69,89,0.1)}.bc-w{background-color:rgba(71,180,118,0.1)}.bc-x{background-color:rgba(244,69,89,0.1)}.bc-y{background-color:rgba(244,69,89,0.1)}.bc-z{background-color:rgba(244,69,89,0.1)}.w-100{width:100%}.block{display:block}.d-none{display:none}.flex{display:flex}.flex-row{flex-direction:row}.flex-column{flex-direction:column}.flex-start{justify-content:flex-start}.flex-space-around{justify-content:space-around}.flex-space-between{justify-content:space-between}.relative{position:relative}.font-input{font-weight:400;font-size:1rem;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.ff-title{font-family:Roboto,-apple-system,system-ui,BlinkMacSystemFont,Segoe UI,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,Arial,sans-serif}.h1-title{color:#202124;font-size:24px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.text-center{text-align:center}.ff-roboto{font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.buttons-group{box-sizing:border-box;padding:10px;max-width:90%;margin:20px 5%}.buttons-group-delete-account{box-sizing:border-box;padding:10px;max-width:90%;margin:0 5%}.yellow{color:#ffeb3b}.red{color:#f44559}.green{color:#47b476}.lime{color:#C3FAE8}.dodgerblue{color:#1873CC}.little-gray{color:rgba(69,69,69,0.7)}.action-icon{color:#313435;opacity:0.8}.action-icon:hover{cursor:pointer}.py-2{padding:20px 0}.my-2{margin:20px 0}.my-0{margin:0px 0 !important}.no-padding{padding:0px !important}.mr-2{margin-right:20px}h1,.h1{color:rgba(0,0,0,0.77)}.h1-list{color:#202124;font-size:21px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif;min-height:40px;line-height:40px;white-space:nowrap;word-wrap:none;overflow:hidden;text-overflow:ellipsis;margin:10px !important}.single-entry,.popup-box-icon{color:#4f4f4f !important}.text-center{text-align:center}.icon-chat{color:rgba(71,180,118,0.7) !important}.icon-security{color:rgba(228,132,252,0.33) !important}.icon-images{color:rgba(30,144,255,0.8) !important}.icon-messages{color:#7a7a7a !important}.color-red,.icon-notifications{color:rgba(244,69,89,0.7) !important}.color-green,.icon-iframes{color:rgba(71,180,118,0.7) !important}.icon-cookies{color:#DEB887 !important}.Login,.User{min-width:600px;width:100%;height:100%;min-height:750px;margin:80px auto;border-radius:5px;border:1px solid #dadce0;box-shadow:0px 0px 6px transparent;transition-duration:350ms;box-sizing:border-box;padding:10px}.Login .FullScreenList .holder-ul,.User .FullScreenList .holder-ul{min-width:500px}.Login .FullScreenList input,.User .FullScreenList input{width:100%;box-sizing:border-box;padding:5px 10px;border:none}.Login .FullScreenList .no-data,.User .FullScreenList .no-data{height:50px;line-height:50px;color:rgba(0,0,0,0.77);text-align:center}.Login .FullScreenList ul li,.User .FullScreenList ul li{min-width:360px;max-width:500px;border-bottom:1px solid #dadce0}.Login .FullScreenList ul li:hover,.User .FullScreenList ul li:hover{cursor:pointer;background-color:rgba(199,199,199,0.2)}.Login .single-box,.User .single-box{position:relative;box-sizing:border-box;padding:10px}.Login .single-box input,.User .single-box input{margin:5px 10px;width:calc(100% - 20px);height:50px;line-height:50px;color:rgba(0,0,0,0.77);padding:0;border:1px solid rgba(69,69,69,0.2);border-radius:5px;transition-duration:350ms;box-sizing:border-box;padding:12px 14px;z-index:1;position:relative;background-color:transparent}.Login .single-box .title,.User .single-box .title{position:absolute;top:31px;left:30px;color:rgba(0,0,0,0.47);letter-spacing:0.02rem;display:block;width:auto;background-color:#fff;box-sizing:border-box;padding:0 5px;transition-duration:350ms;transform:scale(1.1);width:auto;z-index:1;text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.Login .single-box.focus .title,.User .single-box.focus .title{top:5px;left:25px;transform:scale(0.9);color:#1873CC;z-index:2}.Login .single-box.focus input,.User .single-box.focus input{border:1px solid #1873CC}.Login .button,.User .button{box-sizing:border-box;border-radius:5px;background-color:#1873CC;letter-spacing:0.02rem;color:#fff;font-size:0.87rem;text-align:center;border:none;height:40px;line-height:30px;display:block;margin:10px 20px 20px 20px;box-shadow:0px 0px 3px transparent;transition-duration:350ms;float:right;padding:5px 20px;font-weight:bold}.Login .button-link,.User .button-link{float:left;text-decoration:none;background-color:#47b476}.Login .button-delete,.User .button-delete{background-color:#f44559}.Login .button:hover,.User .button:hover{cursor:pointer;box-shadow:0px 0px 3px #1873CC}.Login .button-link:hover,.User .button-link:hover{box-shadow:0px 0px 3px #47b476}.Login .button-delete:hover,.User .button-delete:hover{box-shadow:0px 0px 3px #f44559}.Login .logo,.User .logo{width:108px;height:108px;display:block;margin:20px auto 0 auto}.Login .logo img,.User .logo img{width:100%;height:100%}.Login .error-message,.User .error-message{box-sizing:border-box;padding:0px 10px;height:auto;overflow:auto;line-height:30px;font-size:0.87rem;background-color:rgba(244,69,89,0.1);color:rgba(0,0,0,0.77);animation:opacity 350ms linear ease-in;margin:10px 20px;border-radius:5px}.Login .error-message i,.User .error-message i{font-size:inherit;color:inherit;margin:0 10px 0 5px}.Login .successMessages-message,.User .successMessages-message{box-sizing:border-box;padding:0px 10px;height:auto;overflow:auto;line-height:30px;font-size:0.87rem;background-color:rgba(71,180,118,0.1);color:rgba(0,0,0,0.77);animation:opacity 350ms linear ease-in;margin:10px 20px;border-radius:5px}.Login .successMessages-message i,.User .successMessages-message i{font-size:inherit;color:inherit;margin:0 10px 0 5px}.Login .current-user,.User .current-user{padding:20px;font-size:0.87rem}.Login .current-user i,.User .current-user i{margin:0 10px}.Login .select-wrapper,.User .select-wrapper{box-sizing:border-box;padding:0px;width:calc(100% - 20px);margin:13px;position:relative;z-index:1;margin:10px 20px}.Login .select-wrapper .text,.User .select-wrapper .text{position:absolute;top:-7px;left:13px;color:rgba(0,0,0,0.47);letter-spacing:0.02rem;transform:scale(1.1);box-sizing:border-box;padding:0 5px;transition-duration:350ms;width:auto;z-index:1;text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.Login .down,.User .down{font-size:20px;position:absolute;right:20px;top:10px;color:#202124;pointer-events:none;z-index:2}.Login select,.Login .select,.User select,.User .select{-moz-appearance:none;-webkit-appearance:none;appearance:none;border:none;width:100%;height:40px;padding-left:10px;color:rgba(0,0,0,0.47);font-family:'Open Sans', sans-serif;border-radius:3px;outline:none;cursor:pointer;background-color:#fff;border:1px solid #dadce0;font-size:1.1rem}.Login .select-account,.User .select-account{width:calc(100% - 60px)}.Login .select-account .down,.User .select-account .down{right:13px;top:13px}.Login .select,.User .select{line-height:40px;font-size:1rem !important;color:rgba(0,0,0,0.77) !important}.Login select:focus::-ms-value,.User select:focus::-ms-value{background-color:transparent}.Login select option,.User select option{color:rgba(0,0,0,0.47);letter-spacing:0.02rem;transform:scale(1.1)}.Login select::-ms-expand,.User select::-ms-expand{display:none}.Login select{width:calc(100% - 20px)}.Login .down{right:30px}.privacy-terms-checkbox{width:100%;box-sizing:border-box;padding:15px 10px;text-align:left;font-size:0.87rem;background-color:rgba(255,255,255,0.95);color:#72777a;text-overflow:ellipsis;overflow:hidden;margin:0 10px;height:50px;line-height:27px}.privacy-terms-checkbox .switch{width:40px;display:block;position:relative;padding-left:0px;cursor:pointer;font-size:22px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;margin-left:3px}.privacy-terms-checkbox .switch input{position:absolute;opacity:0;cursor:pointer;height:0;width:0}.privacy-terms-checkbox .switch-slider{position:absolute;top:0;left:0;height:25px;width:25px;border-radius:5px;transition-duration:350ms}.privacy-terms-checkbox .switch-slider-not-checked:before{content:'';position:absolute;top:0;left:0;width:25px;height:25px;line-height:25px;text-align:center;border-radius:5px;background-color:transparent;color:#fff;font-size:19px;font-weight:bold;transition-duration:350ms;border:1px solid #dadce0}.privacy-terms-checkbox .switch:hover input ~ .switch-slider{background-color:transparent}.privacy-terms-checkbox .switch input:checked ~ .switch-slider{background-color:rgba(71,180,118,0.7)}.privacy-terms-checkbox .switch-slider:after{content:'';position:absolute;display:none}.privacy-terms-checkbox .switch input:checked ~ .switch-slider:after{display:block}.privacy-terms-checkbox .switch .switch-slider:after{left:9px;top:5px;width:5px;height:10px;border:solid white;border-width:0 3px 3px 0;-webkit-transform:rotate(45deg);-ms-transform:rotate(45deg);transform:rotate(45deg)}.privacy-terms-checkbox .link{width:calc(100% - 40px)}.privacy-terms-checkbox .link a{text-decoration:none;color:#1873CC;font-size:1rem}.bc-a{background-color:rgba(244,69,89,0.1)}.bc-b{background-color:rgba(244,69,89,0.1)}.bc-c{background-color:rgba(244,69,89,0.1)}.bc-d{background-color:rgba(81,45,168,0.1)}.bc-e{background-color:rgba(244,69,89,0.1)}.bc-f{background-color:rgba(244,69,89,0.1)}.bc-g{background-color:rgba(244,69,89,0.1)}.bc-h{background-color:rgba(244,69,89,0.1)}.bc-i{background-color:rgba(244,69,89,0.1)}.bc-j{background-color:rgba(244,69,89,0.1)}.bc-k{background-color:rgba(244,69,89,0.1)}.bc-l{background-color:rgba(244,69,89,0.1)}.bc-m{background-color:rgba(244,69,89,0.1)}.bc-n{background-color:rgba(244,69,89,0.1)}.bc-o{background-color:rgba(244,69,89,0.1)}.bc-p{background-color:rgba(244,69,89,0.1)}.bc-q{background-color:rgba(244,69,89,0.1)}.bc-r{background-color:rgba(244,69,89,0.1)}.bc-s{background-color:rgba(244,69,89,0.1)}.bc-t{background-color:rgba(244,69,89,0.1)}.bc-u{background-color:rgba(244,69,89,0.1)}.bc-v{background-color:rgba(244,69,89,0.1)}.bc-w{background-color:rgba(71,180,118,0.1)}.bc-x{background-color:rgba(244,69,89,0.1)}.bc-y{background-color:rgba(244,69,89,0.1)}.bc-z{background-color:rgba(244,69,89,0.1)}.w-100{width:100%}.block{display:block}.d-none{display:none}.flex{display:flex}.flex-row{flex-direction:row}.flex-column{flex-direction:column}.flex-start{justify-content:flex-start}.flex-space-around{justify-content:space-around}.flex-space-between{justify-content:space-between}.relative{position:relative}.font-input{font-weight:400;font-size:1rem;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.ff-title{font-family:Roboto,-apple-system,system-ui,BlinkMacSystemFont,Segoe UI,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,Arial,sans-serif}.h1-title{color:#202124;font-size:24px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.text-center{text-align:center}.ff-roboto{font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.buttons-group{box-sizing:border-box;padding:10px;max-width:90%;margin:20px 5%}.buttons-group-delete-account{box-sizing:border-box;padding:10px;max-width:90%;margin:0 5%}.yellow{color:#ffeb3b}.red{color:#f44559}.green{color:#47b476}.lime{color:#C3FAE8}.dodgerblue{color:#1873CC}.little-gray{color:rgba(69,69,69,0.7)}.action-icon{color:#313435;opacity:0.8}.action-icon:hover{cursor:pointer}.py-2{padding:20px 0}.my-2{margin:20px 0}.my-0{margin:0px 0 !important}.no-padding{padding:0px !important}.mr-2{margin-right:20px}h1,.h1{color:rgba(0,0,0,0.77)}.h1-list{color:#202124;font-size:21px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif;min-height:40px;line-height:40px;white-space:nowrap;word-wrap:none;overflow:hidden;text-overflow:ellipsis;margin:10px !important}.single-entry,.popup-box-icon{color:#4f4f4f !important}.text-center{text-align:center}.icon-chat{color:rgba(71,180,118,0.7) !important}.icon-security{color:rgba(228,132,252,0.33) !important}.icon-images{color:rgba(30,144,255,0.8) !important}.icon-messages{color:#7a7a7a !important}.color-red,.icon-notifications{color:rgba(244,69,89,0.7) !important}.color-green,.icon-iframes{color:rgba(71,180,118,0.7) !important}.icon-cookies{color:#DEB887 !important}.DeleteAccount{position:fixed;background-color:rgba(0,0,0,0.6);animation:opacityScaleTopLeft 350ms forwards ease-in-out;z-index:2;transform:scaleZ(0);overflow:hidden}.DeleteAccount .box{margin:10vh auto;width:80vw;min-width:320px;max-width:800px;border-radius:5px;max-height:500px;background-color:#fff;animation:opacity 600ms forwards ease-in-out}.DeleteAccount .box .head{position:relative;width:100%;min-height:55px;height:auto;overflow:auto;background-color:#f44559;border-top-left-radius:4px;border-top-right-radius:4px}.DeleteAccount .box .head .close{position:absolute;top:10px;right:15px;font-size:2rem;color:#fff}.DeleteAccount .box .head .close:hover{cursor:pointer}.DeleteAccount .box .head p{box-sizing:border-box;padding:5px;font-size:1.2rem;color:#fff;margin:0px;min-height:30px;height:auto;line-height:30px}.DeleteAccount .box .content p{box-sizing:border-box;padding:20px;font-size:1.2rem;color:#202124;margin:0px;text-align:center;min-height:30px;height:auto;line-height:30px}.DeleteAccount.animationBack{animation:opacityScaleTopLeft_back 500ms forwards ease-in-out}.DeleteAccount.animationBack .box{animation:opacity_back 200ms forwards ease-in-out}.bc-a{background-color:rgba(244,69,89,0.1)}.bc-b{background-color:rgba(244,69,89,0.1)}.bc-c{background-color:rgba(244,69,89,0.1)}.bc-d{background-color:rgba(81,45,168,0.1)}.bc-e{background-color:rgba(244,69,89,0.1)}.bc-f{background-color:rgba(244,69,89,0.1)}.bc-g{background-color:rgba(244,69,89,0.1)}.bc-h{background-color:rgba(244,69,89,0.1)}.bc-i{background-color:rgba(244,69,89,0.1)}.bc-j{background-color:rgba(244,69,89,0.1)}.bc-k{background-color:rgba(244,69,89,0.1)}.bc-l{background-color:rgba(244,69,89,0.1)}.bc-m{background-color:rgba(244,69,89,0.1)}.bc-n{background-color:rgba(244,69,89,0.1)}.bc-o{background-color:rgba(244,69,89,0.1)}.bc-p{background-color:rgba(244,69,89,0.1)}.bc-q{background-color:rgba(244,69,89,0.1)}.bc-r{background-color:rgba(244,69,89,0.1)}.bc-s{background-color:rgba(244,69,89,0.1)}.bc-t{background-color:rgba(244,69,89,0.1)}.bc-u{background-color:rgba(244,69,89,0.1)}.bc-v{background-color:rgba(244,69,89,0.1)}.bc-w{background-color:rgba(71,180,118,0.1)}.bc-x{background-color:rgba(244,69,89,0.1)}.bc-y{background-color:rgba(244,69,89,0.1)}.bc-z{background-color:rgba(244,69,89,0.1)}.w-100{width:100%}.block{display:block}.d-none{display:none}.flex{display:flex}.flex-row{flex-direction:row}.flex-column{flex-direction:column}.flex-start{justify-content:flex-start}.flex-space-around{justify-content:space-around}.flex-space-between{justify-content:space-between}.relative{position:relative}.font-input{font-weight:400;font-size:1rem;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.ff-title{font-family:Roboto,-apple-system,system-ui,BlinkMacSystemFont,Segoe UI,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,Arial,sans-serif}.h1-title{color:#202124;font-size:24px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.text-center{text-align:center}.ff-roboto{font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.buttons-group{box-sizing:border-box;padding:10px;max-width:90%;margin:20px 5%}.buttons-group-delete-account{box-sizing:border-box;padding:10px;max-width:90%;margin:0 5%}.yellow{color:#ffeb3b}.red{color:#f44559}.green{color:#47b476}.lime{color:#C3FAE8}.dodgerblue{color:#1873CC}.little-gray{color:rgba(69,69,69,0.7)}.action-icon{color:#313435;opacity:0.8}.action-icon:hover{cursor:pointer}.py-2{padding:20px 0}.my-2{margin:20px 0}.my-0{margin:0px 0 !important}.no-padding{padding:0px !important}.mr-2{margin-right:20px}h1,.h1{color:rgba(0,0,0,0.77)}.h1-list{color:#202124;font-size:21px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif;min-height:40px;line-height:40px;white-space:nowrap;word-wrap:none;overflow:hidden;text-overflow:ellipsis;margin:10px !important}.single-entry,.popup-box-icon{color:#4f4f4f !important}.text-center{text-align:center}.icon-chat{color:rgba(71,180,118,0.7) !important}.icon-security{color:rgba(228,132,252,0.33) !important}.icon-images{color:rgba(30,144,255,0.8) !important}.icon-messages{color:#7a7a7a !important}.color-red,.icon-notifications{color:rgba(244,69,89,0.7) !important}.color-green,.icon-iframes{color:rgba(71,180,118,0.7) !important}.icon-cookies{color:#DEB887 !important}.single-box{position:relative;box-sizing:border-box;padding:10px;transition-duration:350ms}.single-box input,.single-box textarea{margin:5px 10px;width:calc(100% - 20px);max-width:calc(100% - 20px);height:50px;line-height:50px;color:rgba(0,0,0,0.77);padding:0;border:1px solid rgba(69,69,69,0.2);border-radius:5px;transition-duration:350ms;box-sizing:border-box;padding:12px 14px;z-index:1;position:relative;background-color:transparent}.single-box textarea{height:auto;line-height:25px;min-height:calc(35vh - 60px)}.single-box .title{position:absolute;top:29px;left:30px;color:rgba(0,0,0,0.47);letter-spacing:0.02rem;display:block;width:auto;background-color:#fff;box-sizing:border-box;padding:0 5px;transition-duration:350ms;transform:scale(1.1);width:auto;z-index:1;text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.single-box.focus .title{top:5px;left:25px;transform:scale(0.9);color:#1873CC;z-index:2}.single-box.focus input,.single-box.focus textarea{border:1px solid #1873CC}.bc-a{background-color:rgba(244,69,89,0.1)}.bc-b{background-color:rgba(244,69,89,0.1)}.bc-c{background-color:rgba(244,69,89,0.1)}.bc-d{background-color:rgba(81,45,168,0.1)}.bc-e{background-color:rgba(244,69,89,0.1)}.bc-f{background-color:rgba(244,69,89,0.1)}.bc-g{background-color:rgba(244,69,89,0.1)}.bc-h{background-color:rgba(244,69,89,0.1)}.bc-i{background-color:rgba(244,69,89,0.1)}.bc-j{background-color:rgba(244,69,89,0.1)}.bc-k{background-color:rgba(244,69,89,0.1)}.bc-l{background-color:rgba(244,69,89,0.1)}.bc-m{background-color:rgba(244,69,89,0.1)}.bc-n{background-color:rgba(244,69,89,0.1)}.bc-o{background-color:rgba(244,69,89,0.1)}.bc-p{background-color:rgba(244,69,89,0.1)}.bc-q{background-color:rgba(244,69,89,0.1)}.bc-r{background-color:rgba(244,69,89,0.1)}.bc-s{background-color:rgba(244,69,89,0.1)}.bc-t{background-color:rgba(244,69,89,0.1)}.bc-u{background-color:rgba(244,69,89,0.1)}.bc-v{background-color:rgba(244,69,89,0.1)}.bc-w{background-color:rgba(71,180,118,0.1)}.bc-x{background-color:rgba(244,69,89,0.1)}.bc-y{background-color:rgba(244,69,89,0.1)}.bc-z{background-color:rgba(244,69,89,0.1)}.w-100{width:100%}.block{display:block}.d-none{display:none}.flex{display:flex}.flex-row{flex-direction:row}.flex-column{flex-direction:column}.flex-start{justify-content:flex-start}.flex-space-around{justify-content:space-around}.flex-space-between{justify-content:space-between}.relative{position:relative}.font-input{font-weight:400;font-size:1rem;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.ff-title{font-family:Roboto,-apple-system,system-ui,BlinkMacSystemFont,Segoe UI,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,Arial,sans-serif}.h1-title{color:#202124;font-size:24px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.text-center{text-align:center}.ff-roboto{font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.buttons-group{box-sizing:border-box;padding:10px;max-width:90%;margin:20px 5%}.buttons-group-delete-account{box-sizing:border-box;padding:10px;max-width:90%;margin:0 5%}.yellow{color:#ffeb3b}.red{color:#f44559}.green{color:#47b476}.lime{color:#C3FAE8}.dodgerblue{color:#1873CC}.little-gray{color:rgba(69,69,69,0.7)}.action-icon{color:#313435;opacity:0.8}.action-icon:hover{cursor:pointer}.py-2{padding:20px 0}.my-2{margin:20px 0}.my-0{margin:0px 0 !important}.no-padding{padding:0px !important}.mr-2{margin-right:20px}h1,.h1{color:rgba(0,0,0,0.77)}.h1-list{color:#202124;font-size:21px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif;min-height:40px;line-height:40px;white-space:nowrap;word-wrap:none;overflow:hidden;text-overflow:ellipsis;margin:10px !important}.single-entry,.popup-box-icon{color:#4f4f4f !important}.text-center{text-align:center}.icon-chat{color:rgba(71,180,118,0.7) !important}.icon-security{color:rgba(228,132,252,0.33) !important}.icon-images{color:rgba(30,144,255,0.8) !important}.icon-messages{color:#7a7a7a !important}.color-red,.icon-notifications{color:rgba(244,69,89,0.7) !important}.color-green,.icon-iframes{color:rgba(71,180,118,0.7) !important}.icon-cookies{color:#DEB887 !important}.NewMessage{position:fixed;width:100vw;height:100vh;top:0;left:0;background-color:rgba(69,69,69,0.9);z-index:2;overflow:hidden}.NewMessage .drag-drop-messages{border:dashed #1873CC 8px;background-color:rgba(30,144,255,0.4);position:absolute;top:10vh;left:10vw;width:calc(80vw - 16px);height:calc(80vh - 15px);z-index:999999}.NewMessage .drag-drop-messages .div-text{display:flex;width:100%;height:100%}.NewMessage .drag-drop-messages .div-text p{text-align:center;margin:auto;font-size:2rem;letter-spacing:0.2rem;color:rgba(255,255,255,0.9)}.NewMessage .h1-title{box-sizing:border-box;padding:10px 10px 10px 20px;background-color:#404040;color:#fff;margin:0}.NewMessage .content{width:80vw;height:80vh;margin:10vh 10vw;background-color:#fff;overflow:hidden}.NewMessage .content .content-holder{width:80vw;height:calc(100% - 130px);background-color:#fff;position:relative;overflow-y:auto;overflow-x:hidden}.NewMessage .content .add-file{display:block;width:30px;height:30px;line-height:30px;text-align:center;color:#47b476;margin:0px 20px;font-size:1.27rem}.NewMessage .content .add-file:hover{cursor:pointer}.NewMessage .content .icon-close{position:absolute;top:-60px;right:30px;font-size:4rem;color:rgba(255,255,255,0.9);transition-duration:350ms;float:right}.NewMessage .content .icon-close:hover{color:rgba(244,69,89,0.7);cursor:pointer}.NewMessage .content .user-suggestions{position:relative;background-color:#fff;border-radius:5px;box-sizing:border-box;margin:10px 30px;z-index:3;max-height:50vh}.NewMessage .content .user-suggestions ul{position:absolute;top:-15px;left:-10px;width:auto;border:1px solid #dadce0;z-index:2;border-radius:5px;background-color:#fff}.NewMessage .content .user-suggestions ul .suggestions-span-holder{display:block;max-height:50vh;overflow-x:hidden;overflow-y:auto;position:relative}.NewMessage .content .user-suggestions ul li{list-style:none;margin:0;padding:0;min-height:35px;line-height:35px;padding:5px 25px 5px 25px !important;color:#131313;white-space:nowrap;overflow:hidden;font-size:0.87rem}.NewMessage .content .user-suggestions ul .active{position:relative}.NewMessage .content .user-suggestions ul .active:after{content:'\\2713';color:#777;font-weight:bold;float:right;margin-left:5px;position:absolute;top:3px;left:2px}.NewMessage .content .user-suggestions ul li:hover{cursor:pointer;background-color:#c7c7c7}.NewMessage .content .error-message{box-sizing:border-box;padding:0px 20px;height:auto;overflow:auto;line-height:30px;font-size:0.87rem;color:#f44559;animation:opacity 350ms linear ease-in}.NewMessage .content .error-message i{font-size:inherit;color:inherit;margin:0 10px 0 5px}.NewMessage .content .footer{position:relative;bottom:0;left:0;z-index:2;background-color:#fff;width:100%}.NewMessage .content .footer button{box-sizing:border-box;border-radius:5px;background-color:#1873CC;letter-spacing:0.02rem;color:#fff;font-size:0.87rem;text-align:center;border:none;height:40px;line-height:40px;display:block;margin:10px 20px;width:200px;box-shadow:0px 0px 3px transparent;transition-duration:350ms;font-weight:bold;text-decoration:none}.NewMessage .content .footer button:hover{box-shadow:0px 0px 3px #1873CC;cursor:pointer}.NewMessage .content .footer .container{box-sizing:border-box;padding:8px 10px 20px 10px}.NewMessage .content .footer .container [type='file']{border:0;clip:rect(0, 0, 0, 0);height:1px;overflow:hidden;padding:0;position:absolute !important;white-space:nowrap;width:1px}.NewMessage .content .footer .container [type='file']+label{color:rgba(69,69,69,0.4);font-size:1.3rem;cursor:pointer;display:inline-block;width:30px;height:30px;line-height:30px;text-align:center;border-radius:50%;background-color:transparent;transition-duration:350ms;border:1px dashed transparent}.NewMessage .content .footer .container label{position:relative}.NewMessage .content .footer .container label i{display:block;transition-duration:350ms;font-size:1.37rem;color:rgba(69,69,69,0.9);text-align:center;width:40px;height:40px;line-height:40px;text-align:center;border-radius:50%;transition-duration:350ms}.NewMessage .content .footer .container label:hover i{background-color:rgba(69,69,69,0.2)}.UploadedFiles .loading{width:20px;height:20px;margin:20px}.UploadedFiles .UploadedFile{margin:20px;width:250px;max-height:180px;height:100%;box-sizing:border-box;background-color:white;position:relative;display:inline-block;float:left}.UploadedFiles .UploadedFile .trash{position:absolute;top:-20px;left:0px}.UploadedFiles .UploadedFile .trash:hover{color:#f44559;cursor:pointer}.UploadedFiles .UploadedFile .image-preview{max-width:100%;max-height:155px;width:100%;height:100%;margin-bottom:10px}.UploadedFiles .UploadedFile .image-preview img{display:block;margin:0 auto;max-width:100%;max-height:100%}.UploadedFiles .UploadedFile span{display:block;box-sizing:border-box;padding:6px 5px;font-size:0.87rem;color:rgba(69,69,69,0.9);background-color:rgba(69,69,69,0.2);border-bottom-left-radius:3px;border-bottom-right-radius:3px;width:100%;text-overflow:ellipsis;overflow:hidden;word-wrap:none;white-space:nowrap}.UploadedFiles .error{margin:10px 0;box-sizing:border-box;padding:0;height:auto;line-height:30px;font-size:0.87rem;color:#f44559;animation:opacity 350ms linear ease-in;max-width:calc(100% - 20px);width:100%;position:relative;background-color:transparent;border-radius:3px}.UploadedFiles .error span{padding:10px;white-space:pre-wrap;word-wrap:break-word;overflow:visible;position:relative;background-color:rgba(244,69,89,0.1);border-radius:3px}.single-box-suggestions{position:relative;box-sizing:border-box;padding:10px;margin:10px 20px;top:0px;transition-duration:350ms;border:1px solid rgba(69,69,69,0.1);border-radius:5px;min-height:50px;height:auto;overflow:auto}.single-box-suggestions input{border:none;min-height:30px;height:auto;overflow-y:auto;z-index:2;display:inline-block;min-width:300px;clear:both;line-height:27px;font-size:14px;color:rgba(69,69,69,0.7);box-sizing:border-box;padding-left:2px}.single-box-suggestions .search-icon{width:70px;height:100%;position:absolute;right:0;top:0px;display:flex;justify-content:space-around;flex-direction:column;text-align:center;background-color:#1873CC;color:#fff;box-shadow:0px 0px 3px transparent;margin:auto}.single-box-suggestions .search-icon:hover{cursor:pointer;box-shadow:0px 0px 3px #1873CC}.single-box-suggestions .choosed{margin-right:20px;max-width:calc(100% - 70px)}.single-box-suggestions .choosed .item{float:left;box-sizing:border-box;padding:2px 35px 2px 5px;margin:3px 5px;border-radius:25px;border:1px solid #f8a51b;position:relative;font-size:14px;color:rgba(69,69,69,0.7)}.single-box-suggestions .choosed .item .remove{width:12px;height:12px;display:inline-block;line-height:10px;text-align:center;font-size:18px;position:absolute;top:3px;right:9px;padding:1px;color:rgba(69,69,69,0.9);border-radius:50%;overflow:hidden}.single-box-suggestions .choosed .item .remove:hover{background-color:rgba(30,144,255,0.1);cursor:pointer}.bc-a{background-color:rgba(244,69,89,0.1)}.bc-b{background-color:rgba(244,69,89,0.1)}.bc-c{background-color:rgba(244,69,89,0.1)}.bc-d{background-color:rgba(81,45,168,0.1)}.bc-e{background-color:rgba(244,69,89,0.1)}.bc-f{background-color:rgba(244,69,89,0.1)}.bc-g{background-color:rgba(244,69,89,0.1)}.bc-h{background-color:rgba(244,69,89,0.1)}.bc-i{background-color:rgba(244,69,89,0.1)}.bc-j{background-color:rgba(244,69,89,0.1)}.bc-k{background-color:rgba(244,69,89,0.1)}.bc-l{background-color:rgba(244,69,89,0.1)}.bc-m{background-color:rgba(244,69,89,0.1)}.bc-n{background-color:rgba(244,69,89,0.1)}.bc-o{background-color:rgba(244,69,89,0.1)}.bc-p{background-color:rgba(244,69,89,0.1)}.bc-q{background-color:rgba(244,69,89,0.1)}.bc-r{background-color:rgba(244,69,89,0.1)}.bc-s{background-color:rgba(244,69,89,0.1)}.bc-t{background-color:rgba(244,69,89,0.1)}.bc-u{background-color:rgba(244,69,89,0.1)}.bc-v{background-color:rgba(244,69,89,0.1)}.bc-w{background-color:rgba(71,180,118,0.1)}.bc-x{background-color:rgba(244,69,89,0.1)}.bc-y{background-color:rgba(244,69,89,0.1)}.bc-z{background-color:rgba(244,69,89,0.1)}.w-100{width:100%}.block{display:block}.d-none{display:none}.flex{display:flex}.flex-row{flex-direction:row}.flex-column{flex-direction:column}.flex-start{justify-content:flex-start}.flex-space-around{justify-content:space-around}.flex-space-between{justify-content:space-between}.relative{position:relative}.font-input{font-weight:400;font-size:1rem;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.ff-title{font-family:Roboto,-apple-system,system-ui,BlinkMacSystemFont,Segoe UI,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,Arial,sans-serif}.h1-title{color:#202124;font-size:24px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.text-center{text-align:center}.ff-roboto{font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.buttons-group{box-sizing:border-box;padding:10px;max-width:90%;margin:20px 5%}.buttons-group-delete-account{box-sizing:border-box;padding:10px;max-width:90%;margin:0 5%}.yellow{color:#ffeb3b}.red{color:#f44559}.green{color:#47b476}.lime{color:#C3FAE8}.dodgerblue{color:#1873CC}.little-gray{color:rgba(69,69,69,0.7)}.action-icon{color:#313435;opacity:0.8}.action-icon:hover{cursor:pointer}.py-2{padding:20px 0}.my-2{margin:20px 0}.my-0{margin:0px 0 !important}.no-padding{padding:0px !important}.mr-2{margin-right:20px}h1,.h1{color:rgba(0,0,0,0.77)}.h1-list{color:#202124;font-size:21px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif;min-height:40px;line-height:40px;white-space:nowrap;word-wrap:none;overflow:hidden;text-overflow:ellipsis;margin:10px !important}.single-entry,.popup-box-icon{color:#4f4f4f !important}.text-center{text-align:center}.icon-chat{color:rgba(71,180,118,0.7) !important}.icon-security{color:rgba(228,132,252,0.33) !important}.icon-images{color:rgba(30,144,255,0.8) !important}.icon-messages{color:#7a7a7a !important}.color-red,.icon-notifications{color:rgba(244,69,89,0.7) !important}.color-green,.icon-iframes{color:rgba(71,180,118,0.7) !important}.icon-cookies{color:#DEB887 !important}.Notifications{box-sizing:border-box;padding:20px}.Notifications .single-note{margin:10px 0;box-sizing:border-box;border-radius:5px;overflow:hidden;border:1px solid #dadce0;box-shadow:0px 0px 3px transparent;transition-duration:350ms}.Notifications .single-note .time{width:100%;min-height:50px;height:auto;overflow:auto;background-color:#1873CC;line-height:50px;font-size:0.97rem;font-weight:400;color:#fff}.Notifications .single-note .time i{display:block;width:50px;height:100%;line-height:50px;text-align:center;font-size:0.97rem}.Notifications .single-note .title,.Notifications .single-note .text{font-size:0.97rem;line-height:25px;box-sizing:border-box;padding:5px 15px;font-weight:400}.Notifications .single-note .title{font-weight:500}.Notifications .single-note:hover{box-shadow:0px 0px 3px rgba(69,69,69,0.3)}.NoData{width:100%;height:100%;margin:auto;text-align:center;line-height:50px;min-height:300px}.NoData img{max-height:165px;display:block;margin:75px auto 30px auto}.NoDataCookies,.NoDataIframes{width:100%;height:100%;margin:auto;text-align:center;line-height:50px}.NoDataCookies .h1-title,.NoDataIframes .h1-title{max-width:90%;margin:50px 5%;text-align:center}.NoDataCookies img,.NoDataIframes img{max-width:80vw;max-height:calc(70vh - 50px);display:block;margin:50px auto;border-radius:5px}.Ninja{width:100%;height:100%;margin:auto;text-align:center;line-height:50px}.Ninja .h1-title,.Ninja p{max-width:90%;margin:10px 5%;text-align:center;font-size:0.87rem;letter-spacing:0.111rem}.Ninja p{margin:10px 5% 0 5%}.Ninja img{width:108px;height:108px;display:block;margin:20px auto;border-radius:5px}.FullScreenList{position:fixed;top:50vh;left:50vw;width:0;height:0;overflow:hidden;background-color:rgba(0,0,0,0.3);z-index:9999999999;animation:scaleIt 300ms forwards ease-in;display:flex}@keyframes scaleIt{0%{top:50vh;left:50vw;width:0;height:0;transform:scale(0)}100%{top:0;left:0;width:100vw;height:100vh;transform:scale(1)}}.FullScreenList .holder-ul{max-height:calc(100vh - 60px);margin:30px auto;box-sizing:border-box;background-color:#fff;border-radius:5px;overflow:hidden}.FullScreenList input{width:100%;box-sizing:border-box;padding:5px 10px;min-height:40px;line-height:40px;border-bottom:2px solid #a9a9a9 !important}.FullScreenList .ul{height:100%;list-style:none;overflow-x:hidden;overflow-y:auto;margin:0;padding:0}.FullScreenList .li{list-style:none;min-height:40px;line-height:40px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;word-wrap:none;box-sizing:border-box;padding:0 30px;width:100%}.FullScreenList .icon-close{position:absolute;top:-50px;right:30px;font-size:3rem}.FullScreenList .icon-close:hover{cursor:pointer;color:#f44559}.FullScreenList .color-white{color:#fff}.FullScreenList.back{animation:scaleItBack 300ms forwards ease-in}@keyframes scaleItBack{0%{top:0;left:0;width:100vw;height:100vh;transform:scale(1)}100%{top:50vh;left:50vw;width:0;height:0;transform:scale(0)}}.FullScreenList .span-close{position:absolute;top:3px;right:20px;color:#fff;font-size:3rem}.FullScreenList .span-close:hover{cursor:pointer;color:#f44559}.FullScreenList .holder-ul{min-width:250px}.FullScreenList input{width:100%;box-sizing:border-box;padding:5px 10px;border:none}.FullScreenList .no-data{max-width:90%;margin:0 5%;height:50px;line-height:50px;color:rgba(0,0,0,0.77);text-align:center}.FullScreenList ul li{min-width:360px;max-width:500px;border-bottom:1px solid #dadce0}.FullScreenList ul li:hover{cursor:pointer;background-color:rgba(199,199,199,0.2)}.bc-a{background-color:rgba(244,69,89,0.1)}.bc-b{background-color:rgba(244,69,89,0.1)}.bc-c{background-color:rgba(244,69,89,0.1)}.bc-d{background-color:rgba(81,45,168,0.1)}.bc-e{background-color:rgba(244,69,89,0.1)}.bc-f{background-color:rgba(244,69,89,0.1)}.bc-g{background-color:rgba(244,69,89,0.1)}.bc-h{background-color:rgba(244,69,89,0.1)}.bc-i{background-color:rgba(244,69,89,0.1)}.bc-j{background-color:rgba(244,69,89,0.1)}.bc-k{background-color:rgba(244,69,89,0.1)}.bc-l{background-color:rgba(244,69,89,0.1)}.bc-m{background-color:rgba(244,69,89,0.1)}.bc-n{background-color:rgba(244,69,89,0.1)}.bc-o{background-color:rgba(244,69,89,0.1)}.bc-p{background-color:rgba(244,69,89,0.1)}.bc-q{background-color:rgba(244,69,89,0.1)}.bc-r{background-color:rgba(244,69,89,0.1)}.bc-s{background-color:rgba(244,69,89,0.1)}.bc-t{background-color:rgba(244,69,89,0.1)}.bc-u{background-color:rgba(244,69,89,0.1)}.bc-v{background-color:rgba(244,69,89,0.1)}.bc-w{background-color:rgba(71,180,118,0.1)}.bc-x{background-color:rgba(244,69,89,0.1)}.bc-y{background-color:rgba(244,69,89,0.1)}.bc-z{background-color:rgba(244,69,89,0.1)}.w-100{width:100%}.block{display:block}.d-none{display:none}.flex{display:flex}.flex-row{flex-direction:row}.flex-column{flex-direction:column}.flex-start{justify-content:flex-start}.flex-space-around{justify-content:space-around}.flex-space-between{justify-content:space-between}.relative{position:relative}.font-input{font-weight:400;font-size:1rem;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.ff-title{font-family:Roboto,-apple-system,system-ui,BlinkMacSystemFont,Segoe UI,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,Arial,sans-serif}.h1-title{color:#202124;font-size:24px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.text-center{text-align:center}.ff-roboto{font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.buttons-group{box-sizing:border-box;padding:10px;max-width:90%;margin:20px 5%}.buttons-group-delete-account{box-sizing:border-box;padding:10px;max-width:90%;margin:0 5%}.yellow{color:#ffeb3b}.red{color:#f44559}.green{color:#47b476}.lime{color:#C3FAE8}.dodgerblue{color:#1873CC}.little-gray{color:rgba(69,69,69,0.7)}.action-icon{color:#313435;opacity:0.8}.action-icon:hover{cursor:pointer}.py-2{padding:20px 0}.my-2{margin:20px 0}.my-0{margin:0px 0 !important}.no-padding{padding:0px !important}.mr-2{margin-right:20px}h1,.h1{color:rgba(0,0,0,0.77)}.h1-list{color:#202124;font-size:21px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif;min-height:40px;line-height:40px;white-space:nowrap;word-wrap:none;overflow:hidden;text-overflow:ellipsis;margin:10px !important}.single-entry,.popup-box-icon{color:#4f4f4f !important}.text-center{text-align:center}.icon-chat{color:rgba(71,180,118,0.7) !important}.icon-security{color:rgba(228,132,252,0.33) !important}.icon-images{color:rgba(30,144,255,0.8) !important}.icon-messages{color:#7a7a7a !important}.color-red,.icon-notifications{color:rgba(244,69,89,0.7) !important}.color-green,.icon-iframes{color:rgba(71,180,118,0.7) !important}.icon-cookies{color:#DEB887 !important}.ErrorMessagesLearnMore .box{background-color:#fff;border-bottom:1px solid #dadce0;margin:0 1px;position:relative;width:100%;line-height:30px;color:#202124;font-size:1.07rem;text-align:justify;box-sizing:border-box;padding:20px}.ErrorMessagesLearnMore .box h1{color:rgba(0,0,0,0.77)}.ErrorMessagesLearnMore .box p{line-height:30px;color:rgba(39,39,39,0.77)}.FullScreenList{position:fixed;top:50vh;left:50vw;width:0;height:0;overflow:hidden;background-color:rgba(0,0,0,0.3);z-index:9999999999;animation:scaleIt 300ms forwards ease-in;display:flex}@keyframes scaleIt{0%{top:50vh;left:50vw;width:0;height:0;transform:scale(0)}100%{top:0;left:0;width:100vw;height:100vh;transform:scale(1)}}.FullScreenList .holder-ul{max-height:calc(100vh - 60px);margin:30px auto;box-sizing:border-box;background-color:#fff;border-radius:5px;overflow:hidden}.FullScreenList input{width:100%;box-sizing:border-box;padding:5px 10px;min-height:40px;line-height:40px;border-bottom:2px solid #a9a9a9 !important}.FullScreenList .ul{height:100%;list-style:none;overflow-x:hidden;overflow-y:auto;margin:0;padding:0}.FullScreenList .li{list-style:none;min-height:40px;line-height:40px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;word-wrap:none;box-sizing:border-box;padding:0 30px;width:100%}.FullScreenList .icon-close{position:absolute;top:-50px;right:30px;font-size:3rem}.FullScreenList .icon-close:hover{cursor:pointer;color:#f44559}.FullScreenList .color-white{color:#fff}.FullScreenList.back{animation:scaleItBack 300ms forwards ease-in}@keyframes scaleItBack{0%{top:0;left:0;width:100vw;height:100vh;transform:scale(1)}100%{top:50vh;left:50vw;width:0;height:0;transform:scale(0)}}.FullScreenList .span-close{position:absolute;top:3px;right:20px;color:#fff;font-size:3rem}.FullScreenList .span-close:hover{cursor:pointer;color:#f44559}.FullScreenList .holder-ul{min-width:250px}.FullScreenList input{width:100%;box-sizing:border-box;padding:5px 10px;border:none}.FullScreenList .no-data{max-width:90%;margin:0 5%;height:50px;line-height:50px;color:rgba(0,0,0,0.77);text-align:center}.FullScreenList ul li{min-width:360px;max-width:500px;border-bottom:1px solid #dadce0}.FullScreenList ul li:hover{cursor:pointer;background-color:rgba(199,199,199,0.2)}.bc-a{background-color:rgba(244,69,89,0.1)}.bc-b{background-color:rgba(244,69,89,0.1)}.bc-c{background-color:rgba(244,69,89,0.1)}.bc-d{background-color:rgba(81,45,168,0.1)}.bc-e{background-color:rgba(244,69,89,0.1)}.bc-f{background-color:rgba(244,69,89,0.1)}.bc-g{background-color:rgba(244,69,89,0.1)}.bc-h{background-color:rgba(244,69,89,0.1)}.bc-i{background-color:rgba(244,69,89,0.1)}.bc-j{background-color:rgba(244,69,89,0.1)}.bc-k{background-color:rgba(244,69,89,0.1)}.bc-l{background-color:rgba(244,69,89,0.1)}.bc-m{background-color:rgba(244,69,89,0.1)}.bc-n{background-color:rgba(244,69,89,0.1)}.bc-o{background-color:rgba(244,69,89,0.1)}.bc-p{background-color:rgba(244,69,89,0.1)}.bc-q{background-color:rgba(244,69,89,0.1)}.bc-r{background-color:rgba(244,69,89,0.1)}.bc-s{background-color:rgba(244,69,89,0.1)}.bc-t{background-color:rgba(244,69,89,0.1)}.bc-u{background-color:rgba(244,69,89,0.1)}.bc-v{background-color:rgba(244,69,89,0.1)}.bc-w{background-color:rgba(71,180,118,0.1)}.bc-x{background-color:rgba(244,69,89,0.1)}.bc-y{background-color:rgba(244,69,89,0.1)}.bc-z{background-color:rgba(244,69,89,0.1)}.w-100{width:100%}.block{display:block}.d-none{display:none}.flex{display:flex}.flex-row{flex-direction:row}.flex-column{flex-direction:column}.flex-start{justify-content:flex-start}.flex-space-around{justify-content:space-around}.flex-space-between{justify-content:space-between}.relative{position:relative}.font-input{font-weight:400;font-size:1rem;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.ff-title{font-family:Roboto,-apple-system,system-ui,BlinkMacSystemFont,Segoe UI,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,Arial,sans-serif}.h1-title{color:#202124;font-size:24px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.text-center{text-align:center}.ff-roboto{font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.buttons-group{box-sizing:border-box;padding:10px;max-width:90%;margin:20px 5%}.buttons-group-delete-account{box-sizing:border-box;padding:10px;max-width:90%;margin:0 5%}.yellow{color:#ffeb3b}.red{color:#f44559}.green{color:#47b476}.lime{color:#C3FAE8}.dodgerblue{color:#1873CC}.little-gray{color:rgba(69,69,69,0.7)}.action-icon{color:#313435;opacity:0.8}.action-icon:hover{cursor:pointer}.py-2{padding:20px 0}.my-2{margin:20px 0}.my-0{margin:0px 0 !important}.no-padding{padding:0px !important}.mr-2{margin-right:20px}h1,.h1{color:rgba(0,0,0,0.77)}.h1-list{color:#202124;font-size:21px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif;min-height:40px;line-height:40px;white-space:nowrap;word-wrap:none;overflow:hidden;text-overflow:ellipsis;margin:10px !important}.single-entry,.popup-box-icon{color:#4f4f4f !important}.text-center{text-align:center}.icon-chat{color:rgba(71,180,118,0.7) !important}.icon-security{color:rgba(228,132,252,0.33) !important}.icon-images{color:rgba(30,144,255,0.8) !important}.icon-messages{color:#7a7a7a !important}.color-red,.icon-notifications{color:rgba(244,69,89,0.7) !important}.color-green,.icon-iframes{color:rgba(71,180,118,0.7) !important}.icon-cookies{color:#DEB887 !important}.User{max-width:600px}.User h2{font-weight:400;font-size:1rem;color:#202124;font-family:Roboto, RobotoDraft, Helvetica, Arial, sans-serif;margin-left:14px}.User .avatar [type='file']{border:0;clip:rect(0, 0, 0, 0);height:1px;overflow:hidden;padding:0;position:absolute !important;white-space:nowrap;width:1px}.User .avatar [type='file']+label{color:rgba(69,69,69,0.4);font-size:1.3rem;cursor:pointer;display:block;width:100px;height:100px;line-height:100px;text-align:center;border-radius:50%;background-color:transparent;transition-duration:350ms;border:1px dashed transparent}.User .avatar label{position:relative;margin:0 auto}.User .avatar label img{width:100px;height:100px;display:block;margin:0 auto;border-radius:50%}.User .single-box-account{padding:0}.User .single-box-account input{width:calc(100% - 50px);height:40px !important;line-height:40px !important}.User .single-box-account i{display:inline-block;width:30px;height:45px;line-height:45px;text-align:center;font-size:1.2rem}.User .single-box-account i:hover{cursor:pointer}.User .buttons-group{box-sizing:border-box;padding:0px;max-width:100%;margin:20px 0px}.User .buttons-group .button{margin:10px 0px}.User .button-save{background-color:#47b476}.User .button-delete:hover{box-shadow:0px 0px 3px #47b476}.User .select-wrapper{box-sizing:border-box;padding:0px;width:calc(100% - 50px);margin:13px;position:relative;z-index:1}.User .down{font-size:20px;position:absolute;right:20px;top:10px;color:#202124;pointer-events:none;z-index:2}.User select{-moz-appearance:none;-webkit-appearance:none;appearance:none;border:none;width:100%;height:40px;padding-left:10px;color:#202124;font-family:'Open Sans', sans-serif;font-size:16px;border-radius:3px;outline:none;cursor:pointer;background-color:#fff;border:1px solid #dadce0}.User select:focus::-ms-value{background-color:transparent}.User select option{color:#666}.User select::-ms-expand{display:none}.bc-a{background-color:rgba(244,69,89,0.1)}.bc-b{background-color:rgba(244,69,89,0.1)}.bc-c{background-color:rgba(244,69,89,0.1)}.bc-d{background-color:rgba(81,45,168,0.1)}.bc-e{background-color:rgba(244,69,89,0.1)}.bc-f{background-color:rgba(244,69,89,0.1)}.bc-g{background-color:rgba(244,69,89,0.1)}.bc-h{background-color:rgba(244,69,89,0.1)}.bc-i{background-color:rgba(244,69,89,0.1)}.bc-j{background-color:rgba(244,69,89,0.1)}.bc-k{background-color:rgba(244,69,89,0.1)}.bc-l{background-color:rgba(244,69,89,0.1)}.bc-m{background-color:rgba(244,69,89,0.1)}.bc-n{background-color:rgba(244,69,89,0.1)}.bc-o{background-color:rgba(244,69,89,0.1)}.bc-p{background-color:rgba(244,69,89,0.1)}.bc-q{background-color:rgba(244,69,89,0.1)}.bc-r{background-color:rgba(244,69,89,0.1)}.bc-s{background-color:rgba(244,69,89,0.1)}.bc-t{background-color:rgba(244,69,89,0.1)}.bc-u{background-color:rgba(244,69,89,0.1)}.bc-v{background-color:rgba(244,69,89,0.1)}.bc-w{background-color:rgba(71,180,118,0.1)}.bc-x{background-color:rgba(244,69,89,0.1)}.bc-y{background-color:rgba(244,69,89,0.1)}.bc-z{background-color:rgba(244,69,89,0.1)}.w-100{width:100%}.block{display:block}.d-none{display:none}.flex{display:flex}.flex-row{flex-direction:row}.flex-column{flex-direction:column}.flex-start{justify-content:flex-start}.flex-space-around{justify-content:space-around}.flex-space-between{justify-content:space-between}.relative{position:relative}.font-input{font-weight:400;font-size:1rem;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.ff-title{font-family:Roboto,-apple-system,system-ui,BlinkMacSystemFont,Segoe UI,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,Arial,sans-serif}.h1-title{color:#202124;font-size:24px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.text-center{text-align:center}.ff-roboto{font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.buttons-group{box-sizing:border-box;padding:10px;max-width:90%;margin:20px 5%}.buttons-group-delete-account{box-sizing:border-box;padding:10px;max-width:90%;margin:0 5%}.yellow{color:#ffeb3b}.red{color:#f44559}.green{color:#47b476}.lime{color:#C3FAE8}.dodgerblue{color:#1873CC}.little-gray{color:rgba(69,69,69,0.7)}.action-icon{color:#313435;opacity:0.8}.action-icon:hover{cursor:pointer}.py-2{padding:20px 0}.my-2{margin:20px 0}.my-0{margin:0px 0 !important}.no-padding{padding:0px !important}.mr-2{margin-right:20px}h1,.h1{color:rgba(0,0,0,0.77)}.h1-list{color:#202124;font-size:21px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif;min-height:40px;line-height:40px;white-space:nowrap;word-wrap:none;overflow:hidden;text-overflow:ellipsis;margin:10px !important}.single-entry,.popup-box-icon{color:#4f4f4f !important}.text-center{text-align:center}.icon-chat{color:rgba(71,180,118,0.7) !important}.icon-security{color:rgba(228,132,252,0.33) !important}.icon-images{color:rgba(30,144,255,0.8) !important}.icon-messages{color:#7a7a7a !important}.color-red,.icon-notifications{color:rgba(244,69,89,0.7) !important}.color-green,.icon-iframes{color:rgba(71,180,118,0.7) !important}.icon-cookies{color:#DEB887 !important}.Favourites .paging{width:calc(100% - 40px);margin:20px;border:1px solid #dadce0;border-radius:3px;padding:0px}.Favourites .paging .buttons{float:left;margin:7px 10px}.Favourites .paging .buttons i{margin-right:10px}.Favourites input{width:100%}.Favourites h1{margin-left:20px;font-size:1.2rem;color:#272727;font-weight:400}.Favourites .favourite-character-search{width:calc(100% - 40px);height:30px;line-height:30px;text-align:left;overflow:hidden;font-size:0.87rem;box-sizing:border-box;padding:1px 7px;margin:0 20px;border-radius:3px}.Favourites .favourite-character{width:35px;height:35px;line-height:35px;border-radius:50%;text-align:center;overflow:hidden;font-size:0.87rem;box-sizing:border-box;margin:0 20px}.Favourites .all-suggestions{box-sizing:border-box}.Favourites .all-suggestions .single-suggestion{display:inline-block;box-sizing:border-box;padding:10px 20px;border-radius:5px;border:1px solid #dadce0;max-width:350px;margin:10px 20px;transition-duration:350ms;box-shadow:0px 0px 3px transparent}.Favourites .all-suggestions .single-suggestion .text{width:100%;line-height:30px;overflow:hidden;text-overflow:ellipsis;font-size:0.87rem;font-weight:400;color:rgba(69,69,69,0.9);white-space:nowrap;text-align:left}.Favourites .all-suggestions .single-suggestion .friends,.Favourites .all-suggestions .single-suggestion .remove{font-size:0.67rem}.Favourites .all-suggestions .single-suggestion .friends i,.Favourites .all-suggestions .single-suggestion .remove i{margin-right:5px;font-size:0.97rem}.Favourites .all-suggestions .single-suggestion .friends i{color:rgba(71,180,118,0.7)}.Favourites .all-suggestions .single-suggestion .add i{margin-right:7.5px;color:#47b476;transition-duration:350ms}.Favourites .all-suggestions .single-suggestion .add:hover i{color:#47b476;cursor:pointer}.Favourites .all-suggestions .single-suggestion .remove i{color:rgba(244,69,89,0.7);transition-duration:350ms}.Favourites .all-suggestions .single-suggestion .remove i:hover{color:#f44559;cursor:pointer}.Favourites .all-suggestions .single-suggestion:hover{box-shadow:0px 0px 3px #dadce0}.Favourites .error-message{box-sizing:border-box;padding:0px 10px;height:auto;overflow:auto;line-height:30px;font-size:0.87rem;background-color:rgba(244,69,89,0.1);color:rgba(0,0,0,0.77);animation:opacity 350ms linear ease-in;margin:10px 20px;border-radius:5px}.Favourites .error-message i{font-size:inherit;color:inherit;margin:0 10px 0 5px}.Favourites .successMessages-message{box-sizing:border-box;padding:0px 10px;height:auto;overflow:auto;line-height:30px;font-size:0.87rem;background-color:rgba(71,180,118,0.1);color:rgba(0,0,0,0.77);animation:opacity 350ms linear ease-in;margin:10px 20px;border-radius:5px}.Favourites .successMessages-message i{font-size:inherit;color:inherit;margin:0 10px 0 5px}.bc-a{background-color:rgba(244,69,89,0.1)}.bc-b{background-color:rgba(244,69,89,0.1)}.bc-c{background-color:rgba(244,69,89,0.1)}.bc-d{background-color:rgba(81,45,168,0.1)}.bc-e{background-color:rgba(244,69,89,0.1)}.bc-f{background-color:rgba(244,69,89,0.1)}.bc-g{background-color:rgba(244,69,89,0.1)}.bc-h{background-color:rgba(244,69,89,0.1)}.bc-i{background-color:rgba(244,69,89,0.1)}.bc-j{background-color:rgba(244,69,89,0.1)}.bc-k{background-color:rgba(244,69,89,0.1)}.bc-l{background-color:rgba(244,69,89,0.1)}.bc-m{background-color:rgba(244,69,89,0.1)}.bc-n{background-color:rgba(244,69,89,0.1)}.bc-o{background-color:rgba(244,69,89,0.1)}.bc-p{background-color:rgba(244,69,89,0.1)}.bc-q{background-color:rgba(244,69,89,0.1)}.bc-r{background-color:rgba(244,69,89,0.1)}.bc-s{background-color:rgba(244,69,89,0.1)}.bc-t{background-color:rgba(244,69,89,0.1)}.bc-u{background-color:rgba(244,69,89,0.1)}.bc-v{background-color:rgba(244,69,89,0.1)}.bc-w{background-color:rgba(71,180,118,0.1)}.bc-x{background-color:rgba(244,69,89,0.1)}.bc-y{background-color:rgba(244,69,89,0.1)}.bc-z{background-color:rgba(244,69,89,0.1)}.w-100{width:100%}.block{display:block}.d-none{display:none}.flex{display:flex}.flex-row{flex-direction:row}.flex-column{flex-direction:column}.flex-start{justify-content:flex-start}.flex-space-around{justify-content:space-around}.flex-space-between{justify-content:space-between}.relative{position:relative}.font-input{font-weight:400;font-size:1rem;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.ff-title{font-family:Roboto,-apple-system,system-ui,BlinkMacSystemFont,Segoe UI,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,Arial,sans-serif}.h1-title{color:#202124;font-size:24px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.text-center{text-align:center}.ff-roboto{font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.buttons-group{box-sizing:border-box;padding:10px;max-width:90%;margin:20px 5%}.buttons-group-delete-account{box-sizing:border-box;padding:10px;max-width:90%;margin:0 5%}.yellow{color:#ffeb3b}.red{color:#f44559}.green{color:#47b476}.lime{color:#C3FAE8}.dodgerblue{color:#1873CC}.little-gray{color:rgba(69,69,69,0.7)}.action-icon{color:#313435;opacity:0.8}.action-icon:hover{cursor:pointer}.py-2{padding:20px 0}.my-2{margin:20px 0}.my-0{margin:0px 0 !important}.no-padding{padding:0px !important}.mr-2{margin-right:20px}h1,.h1{color:rgba(0,0,0,0.77)}.h1-list{color:#202124;font-size:21px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif;min-height:40px;line-height:40px;white-space:nowrap;word-wrap:none;overflow:hidden;text-overflow:ellipsis;margin:10px !important}.single-entry,.popup-box-icon{color:#4f4f4f !important}.text-center{text-align:center}.icon-chat{color:rgba(71,180,118,0.7) !important}.icon-security{color:rgba(228,132,252,0.33) !important}.icon-images{color:rgba(30,144,255,0.8) !important}.icon-messages{color:#7a7a7a !important}.color-red,.icon-notifications{color:rgba(244,69,89,0.7) !important}.color-green,.icon-iframes{color:rgba(71,180,118,0.7) !important}.icon-cookies{color:#DEB887 !important}.Security{max-width:1024px;margin:0 auto}.Security .single-box{margin:20px 10px;border-radius:5px;border:1px solid #dadce0;transition-duration:350ms;box-shadow:0px 0px 3px transparent;text-decoration:none;overflow:hidden;padding:0px}.Security .single-box h1{box-sizing:border-box;padding:0px 20px;font-size:1.17rem;color:#72777a;text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.Security .single-box .image{width:100%;height:100%;background-repeat:no-repeat;background-size:cover;background-position:50% 100%;background-color:#000;transition-duration:350ms;background-image:url(\"https://chat-manager.j.pl/public/images/notes-1209639_1920.jpg\")}.Security .single-box-0{width:calc(50% - 60px);height:300px}.Security .single-box-0,.Security .single-box-1,.Security .single-box-2,.Security .single-box-3,.Security .single-box-4,.Security .single-box-5,.Security .single-box-6,.Security .single-box-7,.Security .single-box-8,.Security .single-box-9,.Security .single-box-10,.Security .single-box-11{width:calc(100% - 20px);height:300px;display:inline-block;float:none}.Security .single-box:hover{cursor:pointer;box-shadow:0px 0px 3px rgba(69,69,69,0.4)}@media screen and (min-width: 720px){.Security .single-box-0,.Security .single-box-1,.Security .single-box-2,.Security .single-box-3,.Security .single-box-4,.Security .single-box-5,.Security .single-box-6,.Security .single-box-7,.Security .single-box-8,.Security .single-box-9,.Security .single-box-10,.Security .single-box-11{width:calc(50% - 20px);height:300px}}@media screen and (min-width: 1140px){.Security .single-box-0,.Security .single-box-1,.Security .single-box-2,.Security .single-box-3,.Security .single-box-4,.Security .single-box-5,.Security .single-box-6,.Security .single-box-7,.Security .single-box-8,.Security .single-box-9,.Security .single-box-10,.Security .single-box-11{display:block;float:left}.Security .single-box-0{width:calc(50% - 60px);height:500px}.Security .single-box-1,.Security .single-box-2{width:25%;height:225px}.Security .single-box-3{width:calc(60% - 83px);height:255px;margin-top:0px}.Security .single-box-4,.Security .single-box-6{width:calc(50% - 60px);height:225px}.Security .single-box-5{width:calc(60% - 83px);height:225px}.Security .single-box-6{height:500px}.Security .single-box-7,.Security .single-box-8,.Security .single-box-9,.Security .single-box-10{width:calc(50% - 20px);height:225px}.Security .single-box-6,.Security .single-box-11{width:calc(100% - 20px);height:350px}}.bc-a{background-color:rgba(244,69,89,0.1)}.bc-b{background-color:rgba(244,69,89,0.1)}.bc-c{background-color:rgba(244,69,89,0.1)}.bc-d{background-color:rgba(81,45,168,0.1)}.bc-e{background-color:rgba(244,69,89,0.1)}.bc-f{background-color:rgba(244,69,89,0.1)}.bc-g{background-color:rgba(244,69,89,0.1)}.bc-h{background-color:rgba(244,69,89,0.1)}.bc-i{background-color:rgba(244,69,89,0.1)}.bc-j{background-color:rgba(244,69,89,0.1)}.bc-k{background-color:rgba(244,69,89,0.1)}.bc-l{background-color:rgba(244,69,89,0.1)}.bc-m{background-color:rgba(244,69,89,0.1)}.bc-n{background-color:rgba(244,69,89,0.1)}.bc-o{background-color:rgba(244,69,89,0.1)}.bc-p{background-color:rgba(244,69,89,0.1)}.bc-q{background-color:rgba(244,69,89,0.1)}.bc-r{background-color:rgba(244,69,89,0.1)}.bc-s{background-color:rgba(244,69,89,0.1)}.bc-t{background-color:rgba(244,69,89,0.1)}.bc-u{background-color:rgba(244,69,89,0.1)}.bc-v{background-color:rgba(244,69,89,0.1)}.bc-w{background-color:rgba(71,180,118,0.1)}.bc-x{background-color:rgba(244,69,89,0.1)}.bc-y{background-color:rgba(244,69,89,0.1)}.bc-z{background-color:rgba(244,69,89,0.1)}.w-100{width:100%}.block{display:block}.d-none{display:none}.flex{display:flex}.flex-row{flex-direction:row}.flex-column{flex-direction:column}.flex-start{justify-content:flex-start}.flex-space-around{justify-content:space-around}.flex-space-between{justify-content:space-between}.relative{position:relative}.font-input{font-weight:400;font-size:1rem;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.ff-title{font-family:Roboto,-apple-system,system-ui,BlinkMacSystemFont,Segoe UI,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,Arial,sans-serif}.h1-title{color:#202124;font-size:24px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.text-center{text-align:center}.ff-roboto{font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.buttons-group{box-sizing:border-box;padding:10px;max-width:90%;margin:20px 5%}.buttons-group-delete-account{box-sizing:border-box;padding:10px;max-width:90%;margin:0 5%}.yellow{color:#ffeb3b}.red{color:#f44559}.green{color:#47b476}.lime{color:#C3FAE8}.dodgerblue{color:#1873CC}.little-gray{color:rgba(69,69,69,0.7)}.action-icon{color:#313435;opacity:0.8}.action-icon:hover{cursor:pointer}.py-2{padding:20px 0}.my-2{margin:20px 0}.my-0{margin:0px 0 !important}.no-padding{padding:0px !important}.mr-2{margin-right:20px}h1,.h1{color:rgba(0,0,0,0.77)}.h1-list{color:#202124;font-size:21px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif;min-height:40px;line-height:40px;white-space:nowrap;word-wrap:none;overflow:hidden;text-overflow:ellipsis;margin:10px !important}.single-entry,.popup-box-icon{color:#4f4f4f !important}.text-center{text-align:center}.icon-chat{color:rgba(71,180,118,0.7) !important}.icon-security{color:rgba(228,132,252,0.33) !important}.icon-images{color:rgba(30,144,255,0.8) !important}.icon-messages{color:#7a7a7a !important}.color-red,.icon-notifications{color:rgba(244,69,89,0.7) !important}.color-green,.icon-iframes{color:rgba(71,180,118,0.7) !important}.icon-cookies{color:#DEB887 !important}.Blacklist{box-sizing:border-box;padding:20px;position:relative;width:100%}.Blacklist h1{margin:0 0 10px 0;color:#202124;font-size:21px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif;min-height:40px;line-height:40px;white-space:nowrap;word-wrap:none;overflow:hidden;text-overflow:ellipsis;margin:10px}.Blacklist .actions{text-align:right;position:relative;min-height:40px}.Blacklist .actions .input{width:0px;height:0px;top:2px;right:185px;left:auto;overflow:hidden;animation:showInputField 300ms forwards ease-in}@keyframes showInputField{0%{width:0px;height:0px}100%{width:300px;height:53px}}.Blacklist .actions .input input{width:100%;border:1px solid #dadce0;border-radius:20px}.Blacklist .actions .button-action{display:inline-block;width:35px;height:35px;line-height:40px;text-align:center;font-size:0.75rem;margin:0 14px;border-radius:3px;background-color:transparent;font-size:1.47rem;color:#72777a;text-decoration:none}.Blacklist .actions .example-link{color:goldenrod}.Blacklist .actions .clipboard,.Blacklist .actions .search{color:rgba(30,144,255,0.8)}.Blacklist .actions .json{color:rgba(71,180,118,0.7)}.Blacklist .actions .delete-all{color:rgba(244,69,89,0.7)}.Blacklist .actions .button-action:hover{cursor:pointer}.Blacklist .single-link-to-list{text-decoration:none;display:inline-block;box-sizing:border-box;padding:10px 20px;margin:3px 20px 3px 1px;border-radius:5px;color:rgba(0,0,0,0.77);box-shadow:0px 0px 3px transparent;transition-duration:350ms;font-size:1.27rem;line-height:10px}.Blacklist .single-link-to-list:hover{box-shadow:0px 0px 3px rgba(69,69,69,0.4)}.Blacklist .error-message{box-sizing:border-box;padding:0px 10px;height:auto;overflow:auto;line-height:30px;font-size:0.87rem;background-color:rgba(244,69,89,0.1);color:rgba(0,0,0,0.77);animation:opacity 350ms linear ease-in;margin:10px 0;border-radius:5px}.Blacklist .error-message i{font-size:inherit;color:inherit;margin:0 10px 0 5px}.Blacklist .successMessages-message{box-sizing:border-box;padding:0px 10px;height:auto;overflow:auto;line-height:30px;font-size:0.87rem;background-color:rgba(71,180,118,0.1);color:rgba(0,0,0,0.77);animation:opacity 350ms linear ease-in;margin:10px 0;border-radius:5px}.Blacklist .successMessages-message i{font-size:inherit;color:inherit;margin:0 10px 0 5px}.Blacklist .Pagination .pagination-pages{margin:20px 0}.Blacklist .Pagination .pagination-pages .text{font-size:0.87rem;letter-spacing:0.123rem;text-align:center}.Blacklist .Pagination h1{color:#202124;font-size:21px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif;min-height:40px;line-height:40px;white-space:nowrap;word-wrap:none;overflow:hidden;text-overflow:ellipsis;margin:10px}.Blacklist .Pagination .paging{display:flex;box-sizing:border-box;padding:10px 0}.Blacklist .Pagination .paging .buttons{display:inline-flex;margin:auto;width:auto}.Blacklist .Pagination .paging .total{margin:3px 10px}.Blacklist .Pagination .paging .previous-button,.Blacklist .Pagination .paging .next-button{margin-left:10px}.Blacklist .Pagination .paging .previous-button{margin-right:2px}.Blacklist .Pagination .paging .next-button:not(.disabled),.Blacklist .Pagination .paging .previous-button:not(.disabled){background-color:#323232;color:#fff}.Blacklist .Pagination .paging .pagination-pages,.Blacklist .Pagination .paging .pagination-paging{margin:10px}.Blacklist .Pagination .paging .pages-previous,.Blacklist .Pagination .paging .pages-next{max-width:140px}.Blacklist .Pagination .paging .pages-current{max-width:43px;margin:0 15px}.Blacklist .Pagination .paging .pages-current .page-number{color:#fff;background-color:#323232}.Blacklist .Pagination .paging .page-number{box-sizing:border-box;padding:3px 10px;margin:2px;border-radius:5px;border:1px solid #dadce0}.Blacklist .Pagination .paging .pagination-pages{width:140px}.Blacklist .Pagination ul{margin:0;padding:0;overflow-x:hidden;position:relative;border:1px solid #dadce0;border-radius:5px;margin:10px 0}.Blacklist .Pagination ul li{list-style:none;box-sizing:border-box;padding:5px 20px;height:40px;line-height:30px;text-align:left;overflow:hidden;text-overflow:ellipsis;border-bottom:0.5px solid #dadce0;width:100%;display:flex}.Blacklist .Pagination ul li i{font-size:0.87rem}.Blacklist .Pagination ul li .delete{color:rgba(244,69,89,0.7)}.Blacklist .Pagination ul li .delete:hover{color:#f44559}.Blacklist .Pagination ul li .clipboard{color:rgba(30,144,255,0.8)}.Blacklist .Pagination ul li .clipboard:hover{color:#1873CC}.Blacklist .Pagination ul li i:hover{cursor:pointer}.Blacklist .Pagination ul li:last-child{border:none}.Blacklist .Pagination ul .entry{display:inline-block}.Blacklist .Pagination ul .entry-1{width:70px}.Blacklist .Pagination ul .entry-3,.Blacklist .Pagination ul .entry-4{width:50px}.Blacklist .Pagination ul .entry-2{width:calc(100% - 170px);overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.Blacklist .Pagination .buttons{float:left;width:100%}.Blacklist .Pagination .buttons .previous-button,.Blacklist .Pagination .buttons .next-button{margin:0 10px;font-size:1.17rem}.Blacklist .input-holder{border:1px solid rgba(69,69,69,0.2);border-radius:10px;width:100%;overflow:hidden}.Blacklist .input-holder input{display:inline-block;width:calc(100% - 70px);box-sizing:border-box;padding:10px 15px;border:none;line-height:25px;overflow:hidden;height:auto;min-height:15px;font-size:0.87rem;color:rgba(69,69,69,0.8)}.Blacklist .input-holder .icon{width:70px;text-align:center;line-height:36px;display:inline-block;box-sizing:border-box;padding:5px;background-color:rgba(69,69,69,0.2)}.Blacklist .input-holder .icon:hover{cursor:pointer}.Blacklist .input-holder-dom{border:none}.Blacklist .input-holder-dom input{box-sizing:border-box;padding:10px;margin:0 10px;border:1px solid rgba(69,69,69,0.2);width:calc(33% - 25px);border-radius:5px}.Blacklist .input-holder-dom .icon{border-radius:5px}.bc-a{background-color:rgba(244,69,89,0.1)}.bc-b{background-color:rgba(244,69,89,0.1)}.bc-c{background-color:rgba(244,69,89,0.1)}.bc-d{background-color:rgba(81,45,168,0.1)}.bc-e{background-color:rgba(244,69,89,0.1)}.bc-f{background-color:rgba(244,69,89,0.1)}.bc-g{background-color:rgba(244,69,89,0.1)}.bc-h{background-color:rgba(244,69,89,0.1)}.bc-i{background-color:rgba(244,69,89,0.1)}.bc-j{background-color:rgba(244,69,89,0.1)}.bc-k{background-color:rgba(244,69,89,0.1)}.bc-l{background-color:rgba(244,69,89,0.1)}.bc-m{background-color:rgba(244,69,89,0.1)}.bc-n{background-color:rgba(244,69,89,0.1)}.bc-o{background-color:rgba(244,69,89,0.1)}.bc-p{background-color:rgba(244,69,89,0.1)}.bc-q{background-color:rgba(244,69,89,0.1)}.bc-r{background-color:rgba(244,69,89,0.1)}.bc-s{background-color:rgba(244,69,89,0.1)}.bc-t{background-color:rgba(244,69,89,0.1)}.bc-u{background-color:rgba(244,69,89,0.1)}.bc-v{background-color:rgba(244,69,89,0.1)}.bc-w{background-color:rgba(71,180,118,0.1)}.bc-x{background-color:rgba(244,69,89,0.1)}.bc-y{background-color:rgba(244,69,89,0.1)}.bc-z{background-color:rgba(244,69,89,0.1)}.w-100{width:100%}.block{display:block}.d-none{display:none}.flex{display:flex}.flex-row{flex-direction:row}.flex-column{flex-direction:column}.flex-start{justify-content:flex-start}.flex-space-around{justify-content:space-around}.flex-space-between{justify-content:space-between}.relative{position:relative}.font-input{font-weight:400;font-size:1rem;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.ff-title{font-family:Roboto,-apple-system,system-ui,BlinkMacSystemFont,Segoe UI,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,Arial,sans-serif}.h1-title{color:#202124;font-size:24px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.text-center{text-align:center}.ff-roboto{font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.buttons-group{box-sizing:border-box;padding:10px;max-width:90%;margin:20px 5%}.buttons-group-delete-account{box-sizing:border-box;padding:10px;max-width:90%;margin:0 5%}.yellow{color:#ffeb3b}.red{color:#f44559}.green{color:#47b476}.lime{color:#C3FAE8}.dodgerblue{color:#1873CC}.little-gray{color:rgba(69,69,69,0.7)}.action-icon{color:#313435;opacity:0.8}.action-icon:hover{cursor:pointer}.py-2{padding:20px 0}.my-2{margin:20px 0}.my-0{margin:0px 0 !important}.no-padding{padding:0px !important}.mr-2{margin-right:20px}h1,.h1{color:rgba(0,0,0,0.77)}.h1-list{color:#202124;font-size:21px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif;min-height:40px;line-height:40px;white-space:nowrap;word-wrap:none;overflow:hidden;text-overflow:ellipsis;margin:10px !important}.single-entry,.popup-box-icon{color:#4f4f4f !important}.text-center{text-align:center}.icon-chat{color:rgba(71,180,118,0.7) !important}.icon-security{color:rgba(228,132,252,0.33) !important}.icon-images{color:rgba(30,144,255,0.8) !important}.icon-messages{color:#7a7a7a !important}.color-red,.icon-notifications{color:rgba(244,69,89,0.7) !important}.color-green,.icon-iframes{color:rgba(71,180,118,0.7) !important}.icon-cookies{color:#DEB887 !important}.SecuritySettings .error-message{box-sizing:border-box;padding:0px 10px;height:auto;overflow:auto;line-height:30px;font-size:0.87rem;background-color:rgba(244,69,89,0.1);color:rgba(0,0,0,0.77);animation:opacity 350ms linear ease-in;margin:10px;border-radius:5px}.SecuritySettings .error-message i{font-size:inherit;color:inherit;margin:0 10px 0 5px}.SecuritySettings .successMessages-message{box-sizing:border-box;padding:0px 10px;height:auto;overflow:auto;line-height:30px;font-size:0.87rem;background-color:rgba(71,180,118,0.1);color:rgba(0,0,0,0.77);animation:opacity 350ms linear ease-in;margin:10px;border-radius:5px}.SecuritySettings .successMessages-message i{font-size:inherit;color:inherit;margin:0 10px 0 5px}.SecuritySettings .actions-header{background-color:#f9fafb;display:block;min-height:50px;box-sizing:border-box;padding:10px;height:60px;margin:0 10px;border-radius:5px}.SecuritySettings .actions-header .actions{float:right}.SecuritySettings .actions-header .actions .button-action{display:inline-block;width:35px;height:35px;line-height:40px;text-align:center;font-size:0.75rem;margin:0 14px;border-radius:3px;background-color:transparent;font-size:1.47rem;color:#72777a}.SecuritySettings .actions-header .actions .clipboard{color:rgba(30,144,255,0.8)}.SecuritySettings .actions-header .actions .json{color:rgba(71,180,118,0.7)}.SecuritySettings .actions-header .actions .delete-all{color:rgba(244,69,89,0.7)}.SecuritySettings .actions-header .actions .button-action:hover{cursor:pointer}.SecuritySettings .ul-description{display:flex;flex-direction:row;justify-content:space-between;min-height:30px;line-height:25px;text-align:left;border-bottom:1px solid rgba(69,69,69,0.1);margin:0}.SecuritySettings .ul-description li{box-sizing:border-box;padding:15px 10px;text-align:left;display:flex;flex-direction:column;font-size:0.823rem;background-color:rgba(255,255,255,0.95);color:#72777a;text-overflow:ellipsis;overflow:hidden}.SecuritySettings .ul-description li .switch{display:block;position:relative;padding-left:35px;margin-bottom:20px;cursor:pointer;font-size:22px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.SecuritySettings .ul-description li .switch input{position:absolute;opacity:0;cursor:pointer;height:0;width:0}.SecuritySettings .ul-description li .switch-slider{position:absolute;top:0;left:0;height:25px;width:25px;margin-left:50px;border-radius:50%;transition-duration:350ms}.SecuritySettings .ul-description li .switch-slider-not-checked:before{content:\"\\00d7\";position:absolute;top:0;left:0;width:25px;height:25px;line-height:25px;text-align:center;border-radius:50%;background-color:rgba(244,69,89,0.7);color:#fff;font-size:19px;font-weight:bold;transition-duration:350ms}.SecuritySettings .ul-description li .switch:hover input ~ .switch-slider{background-color:rgba(69,69,69,0.3)}.SecuritySettings .ul-description li .switch input:checked ~ .switch-slider{background-color:rgba(71,180,118,0.7)}.SecuritySettings .ul-description li .switch-slider:after{content:\"\";position:absolute;display:none}.SecuritySettings .ul-description li .switch input:checked ~ .switch-slider:after{display:block}.SecuritySettings .ul-description li .switch .switch-slider:after{left:9px;top:5px;width:5px;height:10px;border:solid white;border-width:0 3px 3px 0;-webkit-transform:rotate(45deg);-ms-transform:rotate(45deg);transform:rotate(45deg)}.SecuritySettings .ul-description li input[type=text],.SecuritySettings .ul-description li input[type=number]{width:120px;height:30px;line-height:30px}.SecuritySettings .ul-description li:first-child{width:170px}.SecuritySettings .ul-description li:last-child{width:calc(100% - 170px)}.SecuritySettings .ul-description a{text-decoration:none;font-size:0.823rem;color:#1873CC;text-overflow:ellipsis;overflow:hidden;letter-spacing:0.122rem}.bc-a{background-color:rgba(244,69,89,0.1)}.bc-b{background-color:rgba(244,69,89,0.1)}.bc-c{background-color:rgba(244,69,89,0.1)}.bc-d{background-color:rgba(81,45,168,0.1)}.bc-e{background-color:rgba(244,69,89,0.1)}.bc-f{background-color:rgba(244,69,89,0.1)}.bc-g{background-color:rgba(244,69,89,0.1)}.bc-h{background-color:rgba(244,69,89,0.1)}.bc-i{background-color:rgba(244,69,89,0.1)}.bc-j{background-color:rgba(244,69,89,0.1)}.bc-k{background-color:rgba(244,69,89,0.1)}.bc-l{background-color:rgba(244,69,89,0.1)}.bc-m{background-color:rgba(244,69,89,0.1)}.bc-n{background-color:rgba(244,69,89,0.1)}.bc-o{background-color:rgba(244,69,89,0.1)}.bc-p{background-color:rgba(244,69,89,0.1)}.bc-q{background-color:rgba(244,69,89,0.1)}.bc-r{background-color:rgba(244,69,89,0.1)}.bc-s{background-color:rgba(244,69,89,0.1)}.bc-t{background-color:rgba(244,69,89,0.1)}.bc-u{background-color:rgba(244,69,89,0.1)}.bc-v{background-color:rgba(244,69,89,0.1)}.bc-w{background-color:rgba(71,180,118,0.1)}.bc-x{background-color:rgba(244,69,89,0.1)}.bc-y{background-color:rgba(244,69,89,0.1)}.bc-z{background-color:rgba(244,69,89,0.1)}.w-100{width:100%}.block{display:block}.d-none{display:none}.flex{display:flex}.flex-row{flex-direction:row}.flex-column{flex-direction:column}.flex-start{justify-content:flex-start}.flex-space-around{justify-content:space-around}.flex-space-between{justify-content:space-between}.relative{position:relative}.font-input{font-weight:400;font-size:1rem;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.ff-title{font-family:Roboto,-apple-system,system-ui,BlinkMacSystemFont,Segoe UI,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,Arial,sans-serif}.h1-title{color:#202124;font-size:24px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.text-center{text-align:center}.ff-roboto{font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.buttons-group{box-sizing:border-box;padding:10px;max-width:90%;margin:20px 5%}.buttons-group-delete-account{box-sizing:border-box;padding:10px;max-width:90%;margin:0 5%}.yellow{color:#ffeb3b}.red{color:#f44559}.green{color:#47b476}.lime{color:#C3FAE8}.dodgerblue{color:#1873CC}.little-gray{color:rgba(69,69,69,0.7)}.action-icon{color:#313435;opacity:0.8}.action-icon:hover{cursor:pointer}.py-2{padding:20px 0}.my-2{margin:20px 0}.my-0{margin:0px 0 !important}.no-padding{padding:0px !important}.mr-2{margin-right:20px}h1,.h1{color:rgba(0,0,0,0.77)}.h1-list{color:#202124;font-size:21px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif;min-height:40px;line-height:40px;white-space:nowrap;word-wrap:none;overflow:hidden;text-overflow:ellipsis;margin:10px !important}.single-entry,.popup-box-icon{color:#4f4f4f !important}.text-center{text-align:center}.icon-chat{color:rgba(71,180,118,0.7) !important}.icon-security{color:rgba(228,132,252,0.33) !important}.icon-images{color:rgba(30,144,255,0.8) !important}.icon-messages{color:#7a7a7a !important}.color-red,.icon-notifications{color:rgba(244,69,89,0.7) !important}.color-green,.icon-iframes{color:rgba(71,180,118,0.7) !important}.icon-cookies{color:#DEB887 !important}.PrivacyTerms{box-sizing:border-box;padding:20px 40px}.PrivacyTerms .text h1{color:rgba(0,0,0,0.77)}.PrivacyTerms .text p{line-height:30px;color:rgba(39,39,39,0.77)}.PrivacyTerms .text ul{padding:0;margin:20px}.PrivacyTerms .text ul li{box-sizing:border-box;padding:5px 10px;margin:5px;line-height:30px;color:rgba(39,39,39,0.77)}.bc-a{background-color:rgba(244,69,89,0.1)}.bc-b{background-color:rgba(244,69,89,0.1)}.bc-c{background-color:rgba(244,69,89,0.1)}.bc-d{background-color:rgba(81,45,168,0.1)}.bc-e{background-color:rgba(244,69,89,0.1)}.bc-f{background-color:rgba(244,69,89,0.1)}.bc-g{background-color:rgba(244,69,89,0.1)}.bc-h{background-color:rgba(244,69,89,0.1)}.bc-i{background-color:rgba(244,69,89,0.1)}.bc-j{background-color:rgba(244,69,89,0.1)}.bc-k{background-color:rgba(244,69,89,0.1)}.bc-l{background-color:rgba(244,69,89,0.1)}.bc-m{background-color:rgba(244,69,89,0.1)}.bc-n{background-color:rgba(244,69,89,0.1)}.bc-o{background-color:rgba(244,69,89,0.1)}.bc-p{background-color:rgba(244,69,89,0.1)}.bc-q{background-color:rgba(244,69,89,0.1)}.bc-r{background-color:rgba(244,69,89,0.1)}.bc-s{background-color:rgba(244,69,89,0.1)}.bc-t{background-color:rgba(244,69,89,0.1)}.bc-u{background-color:rgba(244,69,89,0.1)}.bc-v{background-color:rgba(244,69,89,0.1)}.bc-w{background-color:rgba(71,180,118,0.1)}.bc-x{background-color:rgba(244,69,89,0.1)}.bc-y{background-color:rgba(244,69,89,0.1)}.bc-z{background-color:rgba(244,69,89,0.1)}.w-100{width:100%}.block{display:block}.d-none{display:none}.flex{display:flex}.flex-row{flex-direction:row}.flex-column{flex-direction:column}.flex-start{justify-content:flex-start}.flex-space-around{justify-content:space-around}.flex-space-between{justify-content:space-between}.relative{position:relative}.font-input{font-weight:400;font-size:1rem;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.ff-title{font-family:Roboto,-apple-system,system-ui,BlinkMacSystemFont,Segoe UI,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,Arial,sans-serif}.h1-title{color:#202124;font-size:24px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.text-center{text-align:center}.ff-roboto{font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.buttons-group{box-sizing:border-box;padding:10px;max-width:90%;margin:20px 5%}.buttons-group-delete-account{box-sizing:border-box;padding:10px;max-width:90%;margin:0 5%}.yellow{color:#ffeb3b}.red{color:#f44559}.green{color:#47b476}.lime{color:#C3FAE8}.dodgerblue{color:#1873CC}.little-gray{color:rgba(69,69,69,0.7)}.action-icon{color:#313435;opacity:0.8}.action-icon:hover{cursor:pointer}.py-2{padding:20px 0}.my-2{margin:20px 0}.my-0{margin:0px 0 !important}.no-padding{padding:0px !important}.mr-2{margin-right:20px}h1,.h1{color:rgba(0,0,0,0.77)}.h1-list{color:#202124;font-size:21px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif;min-height:40px;line-height:40px;white-space:nowrap;word-wrap:none;overflow:hidden;text-overflow:ellipsis;margin:10px !important}.single-entry,.popup-box-icon{color:#4f4f4f !important}.text-center{text-align:center}.icon-chat{color:rgba(71,180,118,0.7) !important}.icon-security{color:rgba(228,132,252,0.33) !important}.icon-images{color:rgba(30,144,255,0.8) !important}.icon-messages{color:#7a7a7a !important}.color-red,.icon-notifications{color:rgba(244,69,89,0.7) !important}.color-green,.icon-iframes{color:rgba(71,180,118,0.7) !important}.icon-cookies{color:#DEB887 !important}.Examples h1{color:rgba(0,0,0,0.77)}.Examples p{line-height:30px;color:rgba(39,39,39,0.77)}.Examples .example{margin-top:20px;box-sizing:border-box;padding:0 5% 35px 5%;border-bottom:1px solid #dadce0}.Examples .example .box-content{display:block;margin-top:40px}.Examples .example ul{padding:0;margin:20px}.Examples .example ul li{box-sizing:border-box;padding:5px 10px;margin:5px}.Examples .example ul li .colored-example-element{color:#f44559}.bc-a{background-color:rgba(244,69,89,0.1)}.bc-b{background-color:rgba(244,69,89,0.1)}.bc-c{background-color:rgba(244,69,89,0.1)}.bc-d{background-color:rgba(81,45,168,0.1)}.bc-e{background-color:rgba(244,69,89,0.1)}.bc-f{background-color:rgba(244,69,89,0.1)}.bc-g{background-color:rgba(244,69,89,0.1)}.bc-h{background-color:rgba(244,69,89,0.1)}.bc-i{background-color:rgba(244,69,89,0.1)}.bc-j{background-color:rgba(244,69,89,0.1)}.bc-k{background-color:rgba(244,69,89,0.1)}.bc-l{background-color:rgba(244,69,89,0.1)}.bc-m{background-color:rgba(244,69,89,0.1)}.bc-n{background-color:rgba(244,69,89,0.1)}.bc-o{background-color:rgba(244,69,89,0.1)}.bc-p{background-color:rgba(244,69,89,0.1)}.bc-q{background-color:rgba(244,69,89,0.1)}.bc-r{background-color:rgba(244,69,89,0.1)}.bc-s{background-color:rgba(244,69,89,0.1)}.bc-t{background-color:rgba(244,69,89,0.1)}.bc-u{background-color:rgba(244,69,89,0.1)}.bc-v{background-color:rgba(244,69,89,0.1)}.bc-w{background-color:rgba(71,180,118,0.1)}.bc-x{background-color:rgba(244,69,89,0.1)}.bc-y{background-color:rgba(244,69,89,0.1)}.bc-z{background-color:rgba(244,69,89,0.1)}.w-100{width:100%}.block{display:block}.d-none{display:none}.flex{display:flex}.flex-row{flex-direction:row}.flex-column{flex-direction:column}.flex-start{justify-content:flex-start}.flex-space-around{justify-content:space-around}.flex-space-between{justify-content:space-between}.relative{position:relative}.font-input{font-weight:400;font-size:1rem;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.ff-title{font-family:Roboto,-apple-system,system-ui,BlinkMacSystemFont,Segoe UI,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,Arial,sans-serif}.h1-title{color:#202124;font-size:24px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.text-center{text-align:center}.ff-roboto{font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.buttons-group{box-sizing:border-box;padding:10px;max-width:90%;margin:20px 5%}.buttons-group-delete-account{box-sizing:border-box;padding:10px;max-width:90%;margin:0 5%}.yellow{color:#ffeb3b}.red{color:#f44559}.green{color:#47b476}.lime{color:#C3FAE8}.dodgerblue{color:#1873CC}.little-gray{color:rgba(69,69,69,0.7)}.action-icon{color:#313435;opacity:0.8}.action-icon:hover{cursor:pointer}.py-2{padding:20px 0}.my-2{margin:20px 0}.my-0{margin:0px 0 !important}.no-padding{padding:0px !important}.mr-2{margin-right:20px}h1,.h1{color:rgba(0,0,0,0.77)}.h1-list{color:#202124;font-size:21px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif;min-height:40px;line-height:40px;white-space:nowrap;word-wrap:none;overflow:hidden;text-overflow:ellipsis;margin:10px !important}.single-entry,.popup-box-icon{color:#4f4f4f !important}.text-center{text-align:center}.icon-chat{color:rgba(71,180,118,0.7) !important}.icon-security{color:rgba(228,132,252,0.33) !important}.icon-images{color:rgba(30,144,255,0.8) !important}.icon-messages{color:#7a7a7a !important}.color-red,.icon-notifications{color:rgba(244,69,89,0.7) !important}.color-green,.icon-iframes{color:rgba(71,180,118,0.7) !important}.icon-cookies{color:#DEB887 !important}.Import .upload-box{display:flex;width:100%;height:100%;width:40vw;height:40vh;margin:20vh auto;border:dashed rgba(69,69,69,0.5) 7px;background-color:rgba(222,222,222,0.13);border-radius:10px;position:relative;overflow:hidden}.Import .upload-box p{max-width:80%;text-align:center;margin:auto;font-size:2rem;letter-spacing:0.2rem;color:rgba(69,69,69,0.5)}.Import .drag-drop{position:absolute;top:-7px;left:-7px;width:100%;height:100%;border-radius:10px;animation:changeBackground 500ms infinite ease-in-out;transition-duration:350ms}.Import .drag-drop img{max-width:100%;max-height:100%;display:block;margin:10% auto}.Export{max-width:1024px;margin:0 auto}.Export .single-box{margin:20px 10px;border-radius:5px;border:1px solid #dadce0;transition-duration:350ms;box-shadow:0px 0px 3px transparent;text-decoration:none;overflow:hidden;padding:0px}.Export .single-box h1{box-sizing:border-box;padding:0px 20px;font-size:1.17rem;color:#72777a;text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.Export .single-box .image{width:100%;height:100%;background-repeat:no-repeat;background-size:cover;background-position:50% 100%;background-color:#000;transition-duration:350ms;background-image:url(\"https://chat-manager.j.pl/public/images/notes-1209639_1920.jpg\")}.Export .single-box .image img{width:128px;height:128px;display:block;margin:10px auto}.Export .single-box-0{width:calc(50% - 60px);height:300px}.Export .single-box-0,.Export .single-box-1,.Export .single-box-2,.Export .single-box-3,.Export .single-box-4,.Export .single-box-5,.Export .single-box-6,.Export .single-box-7,.Export .single-box-8,.Export .single-box-9,.Export .single-box-10,.Export .single-box-11{width:calc(100% - 20px);height:300px;display:inline-block;float:none}.Export .single-box:hover{cursor:pointer;box-shadow:0px 0px 3px rgba(69,69,69,0.4)}@media screen and (min-width: 720px){.Export .single-box-0,.Export .single-box-1,.Export .single-box-2,.Export .single-box-3,.Export .single-box-4,.Export .single-box-5,.Export .single-box-6,.Export .single-box-7,.Export .single-box-8,.Export .single-box-9,.Export .single-box-10,.Export .single-box-11{width:calc(50% - 20px);height:300px}}@media screen and (min-width: 1140px){.Export .single-box-0,.Export .single-box-1,.Export .single-box-2,.Export .single-box-3,.Export .single-box-4,.Export .single-box-5,.Export .single-box-6,.Export .single-box-7,.Export .single-box-8,.Export .single-box-9,.Export .single-box-10,.Export .single-box-11{display:block;float:left}.Export .single-box-0{width:calc(50% - 60px);height:580px}.Export .single-box-1,.Export .single-box-2,.Export .single-box-3,.Export .single-box-4{width:calc(55% - 35px);height:270px}.Export .single-box-5{width:calc(50% - 60px);height:580px;margin-top:-290px}.Export .single-box-7,.Export .single-box-8{width:calc(55% - 72px);height:300px}.Export .single-box-9,.Export .single-box-10{width:calc(55% - 72px);height:300px}.Export .single-box-6,.Export .single-box-11{width:calc(100% - 20px);height:350px}.Export .box-root{height:300px}.Export .box-root .image{padding-top:50px;background-image:unset}}.bc-a{background-color:rgba(244,69,89,0.1)}.bc-b{background-color:rgba(244,69,89,0.1)}.bc-c{background-color:rgba(244,69,89,0.1)}.bc-d{background-color:rgba(81,45,168,0.1)}.bc-e{background-color:rgba(244,69,89,0.1)}.bc-f{background-color:rgba(244,69,89,0.1)}.bc-g{background-color:rgba(244,69,89,0.1)}.bc-h{background-color:rgba(244,69,89,0.1)}.bc-i{background-color:rgba(244,69,89,0.1)}.bc-j{background-color:rgba(244,69,89,0.1)}.bc-k{background-color:rgba(244,69,89,0.1)}.bc-l{background-color:rgba(244,69,89,0.1)}.bc-m{background-color:rgba(244,69,89,0.1)}.bc-n{background-color:rgba(244,69,89,0.1)}.bc-o{background-color:rgba(244,69,89,0.1)}.bc-p{background-color:rgba(244,69,89,0.1)}.bc-q{background-color:rgba(244,69,89,0.1)}.bc-r{background-color:rgba(244,69,89,0.1)}.bc-s{background-color:rgba(244,69,89,0.1)}.bc-t{background-color:rgba(244,69,89,0.1)}.bc-u{background-color:rgba(244,69,89,0.1)}.bc-v{background-color:rgba(244,69,89,0.1)}.bc-w{background-color:rgba(71,180,118,0.1)}.bc-x{background-color:rgba(244,69,89,0.1)}.bc-y{background-color:rgba(244,69,89,0.1)}.bc-z{background-color:rgba(244,69,89,0.1)}.w-100{width:100%}.block{display:block}.d-none{display:none}.flex{display:flex}.flex-row{flex-direction:row}.flex-column{flex-direction:column}.flex-start{justify-content:flex-start}.flex-space-around{justify-content:space-around}.flex-space-between{justify-content:space-between}.relative{position:relative}.font-input{font-weight:400;font-size:1rem;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.ff-title{font-family:Roboto,-apple-system,system-ui,BlinkMacSystemFont,Segoe UI,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,Arial,sans-serif}.h1-title{color:#202124;font-size:24px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.text-center{text-align:center}.ff-roboto{font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.buttons-group{box-sizing:border-box;padding:10px;max-width:90%;margin:20px 5%}.buttons-group-delete-account{box-sizing:border-box;padding:10px;max-width:90%;margin:0 5%}.yellow{color:#ffeb3b}.red{color:#f44559}.green{color:#47b476}.lime{color:#C3FAE8}.dodgerblue{color:#1873CC}.little-gray{color:rgba(69,69,69,0.7)}.action-icon{color:#313435;opacity:0.8}.action-icon:hover{cursor:pointer}.py-2{padding:20px 0}.my-2{margin:20px 0}.my-0{margin:0px 0 !important}.no-padding{padding:0px !important}.mr-2{margin-right:20px}h1,.h1{color:rgba(0,0,0,0.77)}.h1-list{color:#202124;font-size:21px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif;min-height:40px;line-height:40px;white-space:nowrap;word-wrap:none;overflow:hidden;text-overflow:ellipsis;margin:10px !important}.single-entry,.popup-box-icon{color:#4f4f4f !important}.text-center{text-align:center}.icon-chat{color:rgba(71,180,118,0.7) !important}.icon-security{color:rgba(228,132,252,0.33) !important}.icon-images{color:rgba(30,144,255,0.8) !important}.icon-messages{color:#7a7a7a !important}.color-red,.icon-notifications{color:rgba(244,69,89,0.7) !important}.color-green,.icon-iframes{color:rgba(71,180,118,0.7) !important}.icon-cookies{color:#DEB887 !important}.paging{display:block;min-height:50px;box-sizing:border-box;padding:5px 20px;border-bottom:1px solid #dadce0}.paging .buttons{display:block;width:110px;margin:0 auto}.paging .previous-button,.paging .next-button{display:inline-block;width:35px;height:35px;line-height:35px;text-align:center;font-size:0.75rem;margin:0 10px;border-radius:3px;background-color:#323232;color:#fdb734;box-shadow:0px 0px 8px transparent}.paging .previous-button:hover,.paging .next-button:hover{cursor:pointer}.paging .previous-button.deactivated,.paging .next-button.deactivated{color:rgba(253,183,52,0.3) !important;background-color:#323232 !important}.bc-a{background-color:rgba(244,69,89,0.1)}.bc-b{background-color:rgba(244,69,89,0.1)}.bc-c{background-color:rgba(244,69,89,0.1)}.bc-d{background-color:rgba(81,45,168,0.1)}.bc-e{background-color:rgba(244,69,89,0.1)}.bc-f{background-color:rgba(244,69,89,0.1)}.bc-g{background-color:rgba(244,69,89,0.1)}.bc-h{background-color:rgba(244,69,89,0.1)}.bc-i{background-color:rgba(244,69,89,0.1)}.bc-j{background-color:rgba(244,69,89,0.1)}.bc-k{background-color:rgba(244,69,89,0.1)}.bc-l{background-color:rgba(244,69,89,0.1)}.bc-m{background-color:rgba(244,69,89,0.1)}.bc-n{background-color:rgba(244,69,89,0.1)}.bc-o{background-color:rgba(244,69,89,0.1)}.bc-p{background-color:rgba(244,69,89,0.1)}.bc-q{background-color:rgba(244,69,89,0.1)}.bc-r{background-color:rgba(244,69,89,0.1)}.bc-s{background-color:rgba(244,69,89,0.1)}.bc-t{background-color:rgba(244,69,89,0.1)}.bc-u{background-color:rgba(244,69,89,0.1)}.bc-v{background-color:rgba(244,69,89,0.1)}.bc-w{background-color:rgba(71,180,118,0.1)}.bc-x{background-color:rgba(244,69,89,0.1)}.bc-y{background-color:rgba(244,69,89,0.1)}.bc-z{background-color:rgba(244,69,89,0.1)}.w-100{width:100%}.block{display:block}.d-none{display:none}.flex{display:flex}.flex-row{flex-direction:row}.flex-column{flex-direction:column}.flex-start{justify-content:flex-start}.flex-space-around{justify-content:space-around}.flex-space-between{justify-content:space-between}.relative{position:relative}.font-input{font-weight:400;font-size:1rem;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.ff-title{font-family:Roboto,-apple-system,system-ui,BlinkMacSystemFont,Segoe UI,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,Arial,sans-serif}.h1-title{color:#202124;font-size:24px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.text-center{text-align:center}.ff-roboto{font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.buttons-group{box-sizing:border-box;padding:10px;max-width:90%;margin:20px 5%}.buttons-group-delete-account{box-sizing:border-box;padding:10px;max-width:90%;margin:0 5%}.yellow{color:#ffeb3b}.red{color:#f44559}.green{color:#47b476}.lime{color:#C3FAE8}.dodgerblue{color:#1873CC}.little-gray{color:rgba(69,69,69,0.7)}.action-icon{color:#313435;opacity:0.8}.action-icon:hover{cursor:pointer}.py-2{padding:20px 0}.my-2{margin:20px 0}.my-0{margin:0px 0 !important}.no-padding{padding:0px !important}.mr-2{margin-right:20px}h1,.h1{color:rgba(0,0,0,0.77)}.h1-list{color:#202124;font-size:21px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif;min-height:40px;line-height:40px;white-space:nowrap;word-wrap:none;overflow:hidden;text-overflow:ellipsis;margin:10px !important}.single-entry,.popup-box-icon{color:#4f4f4f !important}.text-center{text-align:center}.icon-chat{color:rgba(71,180,118,0.7) !important}.icon-security{color:rgba(228,132,252,0.33) !important}.icon-images{color:rgba(30,144,255,0.8) !important}.icon-messages{color:#7a7a7a !important}.color-red,.icon-notifications{color:rgba(244,69,89,0.7) !important}.color-green,.icon-iframes{color:rgba(71,180,118,0.7) !important}.icon-cookies{color:#DEB887 !important}*::selection{background-color:#323232;color:#fdb734}.Home{position:relative}html,body,#app{min-width:320px}body{overflow-x:hidden}#app .Reset img{margin:50px auto}#app .Reset h1{box-sizing:border-box;padding:20px;width:90%;margin:40px auto;border-radius:5px;box-shadow:0px 0px 3px #dadce0;line-height:30px;text-align:justify;transition-duration:350ms;font-size:1.1rem}#app .Reset h1:hover{cursor:pointer;box-shadow:0px 0px 3px #323232}#app .Statistic .buttons{transform:rotateZ(180deg)}#app .loading-animation{position:fixed;top:0;left:0;width:100%;height:4px;z-index:1;background-color:#fff}#app .loading-animation:after{content:'';width:40%;height:4px;background:linear-gradient(to right, #fff 0%, #323232 30%, #323232 70%, #fff 100%);display:block;position:absolute;top:0;animation:animateLoadingChatDiv 1500ms linear infinite}#app .canvas{padding:20px 0;max-width:80%;margin:0 auto}#app .Content .head .popup-box h1{font-size:0.923rem}#app .code-box-holder{width:calc(100% - 20px);border-radius:5px;margin:10px;border:1px solid #dadce0;box-sizing:border-box;overflow:hidden;position:relative;min-height:265px;text-align:left}#app .code-box-holder h1{text-align:left !important;border-bottom:2px solid #dadce0;padding:20px 10px;background-color:#f9f9f9;position:relative;z-index:1;font-size:0.87rem !important;letter-spacing:0.122rem;border-radius:5px;width:100%;margin:0}#app .Home img{display:block;margin:75px auto 30px auto}#app .Home ul{max-width:400px;margin:0 auto;list-style:none}#app .Home ul li{min-height:50px;line-height:50px;letter-spacing:0.3px;font-size:0.89rem;font-weight:500;white-space:nowrap;color:#72777a}#app .Home ul li i{font-weight:900;margin-right:30px;font-size:1.43rem}#app .ContentBody .h1-box{width:calc(100% - 10px);border-radius:5px;margin:10px 5px;border:1px solid #dadce0;box-sizing:border-box;overflow:hidden}#app .ContentBody .h1-box h1{text-align:left !important;border-bottom:2px solid #dadce0;padding:5px 10px;background-color:#f9f9f9;position:relative;z-index:0;margin:0}#app .ContentBody .h1-box h1:before{position:absolute;content:'';left:15px;bottom:-15px;width:0;height:0;border-left:15px solid transparent;border-right:15px solid transparent;border-top:15px solid #f9f9f9;z-index:2}#app .ContentBody .h1-box h1:after{position:absolute;content:'';left:15px;bottom:-17px;width:0;height:0;border-left:15px solid transparent;border-right:15px solid transparent;border-top:15px solid #dadce0;z-index:1}#app .ContentBody .h1-box .dashboard-link{width:230px;margin:20px auto;display:block;box-sizing:border-box;padding:10px 20px;text-align:center;font-size:0.87rem;text-decoration:none;border-radius:5px;border:1px solid #dadce0;background-color:#323232;color:#fdb734;box-shadow:0px 0px 13px transparent;transition-duration:350ms}#app .ContentBody .h1-box .dashboard-link:hover{cursor:pointer;box-shadow:0px 0px 13px #323232}\n",""]),e.exports=t}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,